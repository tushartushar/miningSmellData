Implementation smell,Namespace,Class,File,Method,Description
Long Method,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,tred2,The method has 117 lines of code.
Long Method,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,tql2,The method has 103 lines of code.
Long Method,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The method has 439 lines of code.
Long Method,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The method has 432 lines of code.
Long Method,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The method has 626 lines of code.
Long Method,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The method has 223 lines of code.
Long Method,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The method has 104 lines of code.
Long Method,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The method has 116 lines of code.
Long Method,MSR.CVE.BackMaker,SourceMap,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMap.cs,SourceMap,The method has 288 lines of code.
Long Method,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The method has 167 lines of code.
Long Method,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,AssembleLayer,The method has 134 lines of code.
Complex Method,Jama,CholeskyDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\CholeskyDecomposition.cs,solve,Cyclomatic complexity of the method is 9
Complex Method,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,tred2,Cyclomatic complexity of the method is 14
Complex Method,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,tql2,Cyclomatic complexity of the method is 11
Complex Method,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,orthes,Cyclomatic complexity of the method is 20
Complex Method,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,Cyclomatic complexity of the method is 21
Complex Method,Jama,LUDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\LUDecomposition.cs,LUDecomposition,Cyclomatic complexity of the method is 12
Complex Method,Jama,LUDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\LUDecomposition.cs,solve,Cyclomatic complexity of the method is 10
Complex Method,Jama,QRDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\QRDecomposition.cs,QRDecomposition,Cyclomatic complexity of the method is 9
Complex Method,Jama,QRDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\QRDecomposition.cs,solve,Cyclomatic complexity of the method is 11
Complex Method,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,Cyclomatic complexity of the method is 54
Complex Method,MSR.CVE.BackMaker.ImagePipeline,GDIOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\GDIOpenDocument.cs,Reclip,Cyclomatic complexity of the method is 9
Complex Method,MSR.CVE.BackMaker.ImagePipeline,VETileUpsamplerVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileUpsamplerVerb.cs,Evaluate,Cyclomatic complexity of the method is 9
Complex Method,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,Reload,Cyclomatic complexity of the method is 9
Complex Method,MSR.CVE.BackMaker,MapPosition,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MapPosition.cs,MapPosition,Cyclomatic complexity of the method is 8
Complex Method,MSR.CVE.BackMaker,Mashup,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Mashup.cs,ReadXML,Cyclomatic complexity of the method is 10
Complex Method,MSR.CVE.BackMaker,RenderRegion,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderRegion.cs,IntersectWithRectangleDebug,Cyclomatic complexity of the method is 9
Complex Method,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateOuterLoop,Cyclomatic complexity of the method is 8
Complex Method,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateLayer_MakeProposedTileSet,Cyclomatic complexity of the method is 9
Complex Method,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateLayer_CreateRenderList,Cyclomatic complexity of the method is 8
Complex Method,MSR.CVE.BackMaker,S3Adaptor,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3Adaptor.cs,BuildWebRequest,Cyclomatic complexity of the method is 10
Complex Method,MSR.CVE.BackMaker,SourceMap,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMap.cs,SourceMap,Cyclomatic complexity of the method is 14
Complex Method,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,PaintGraphics,Cyclomatic complexity of the method is 10
Complex Method,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,AssembleLayer,Cyclomatic complexity of the method is 12
Complex Method,MSR.CVE.BackMaker,XMLTagReader,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\XMLTagReader.cs,FindNextStartTag,Cyclomatic complexity of the method is 8
Long Parameter List,Jama,JamaMatrix,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\JamaMatrix.cs,setMatrix,The method has 5 parameters. Parameters: i0' i1' j0' j1' X
Long Parameter List,MSR.CVE.BackMaker,CompositeTileUnit,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\CompositeTileUnit.cs,CompositeTileUnit,The method has 5 parameters. Parameters: layer' address' renderOutput' outputFilename' outputTileType
Long Parameter List,MSR.CVE.BackMaker,CrunchedFile,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\CrunchedFile.cs,CrunchedFile,The method has 6 parameters. Parameters: mashup' rangeQueryData' renderOutput' sourceMashupFilename' boundsList' mapTileSourceFactory
Long Parameter List,MSR.CVE.BackMaker,FoxitLibWorker,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FoxitLibWorker.cs,FPDF_RenderPage,The method has 8 parameters. Parameters: hdc' pdf_page' start_x' start_y' size_x' size_y' rotate' flags
Long Parameter List,MSR.CVE.BackMaker,FoxitLibWorker,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FoxitLibWorker.cs,FPDF_RenderPageBitmap,The method has 8 parameters. Parameters: bitmap' page' start_x' start_y' size_x' size_y' rotate' flags
Long Parameter List,MSR.CVE.BackMaker,FoxitLibWorker,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FoxitLibWorker.cs,FPDFBitmap_FillRect,The method has 9 parameters. Parameters: bitmap' left' top' width' height' red' green' blue' alpha
Long Parameter List,MSR.CVE.BackMaker,FoxitLibWorker,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FoxitLibWorker.cs,RenderPage,The method has 8 parameters. Parameters: hdc' pdf_page' start_x' start_y' size_x' size_y' rotate' flags
Long Parameter List,MSR.CVE.BackMaker,FoxitLibWorker,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FoxitLibWorker.cs,RenderPageBitmap,The method has 8 parameters. Parameters: bitmap' page' start_x' start_y' size_x' size_y' rotate' flags
Long Parameter List,MSR.CVE.BackMaker,FoxitLibWorker,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FoxitLibWorker.cs,Bitmap_FillRect,The method has 9 parameters. Parameters: bitmap' left' top' width' height' red' green' blue' alpha
Long Parameter List,MSR.CVE.BackMaker,FPDFBitmapCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FPDFBitmapCache.cs,FPDF_RenderPageBitmap,The method has 8 parameters. Parameters: bitmap' page' start_x' start_y' size_x' size_y' rotate' flags
Long Parameter List,MSR.CVE.BackMaker,FPDFBitmapCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FPDFBitmapCache.cs,FPDFBitmap_FillRect,The method has 9 parameters. Parameters: bitmap' left' top' width' height' red' green' blue' alpha
Long Parameter List,MSR.CVE.BackMaker,UndoAddSourceMap,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,UndoAddSourceMap,The method has 5 parameters. Parameters: filename' newSourceMap' addedToLayer' layerControls' mainAppForm
Long Parameter List,MSR.CVE.BackMaker,ManifestRecord,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Manifest.cs,ManifestRecord,The method has 5 parameters. Parameters: block' path' fileExists' fileLength' indirectManifestBlockId
Long Parameter List,MSR.CVE.BackMaker,NamedPipeBase,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\NamedPipeBase.cs,CreateNamedPipe,The method has 8 parameters. Parameters: lpName' dwOpenMode' dwPipeMode' nMaxInstances' nOutBufferSize' nInBufferSize' nDefaultTimeOut' lpSecurityAttributes
Long Parameter List,MSR.CVE.BackMaker,NamedPipeBase,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\NamedPipeBase.cs,CreateFile,The method has 7 parameters. Parameters: lpFileName' dwDesiredAccess' dwShareMode' lpSecurityAttributes' dwCreationDisposition' dwFlagsAndAttributes' hTemplateFile
Long Parameter List,MSR.CVE.BackMaker,NamedPipeBase,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\NamedPipeBase.cs,ReadFile,The method has 5 parameters. Parameters: hHandle' lpBuffer' nNumberOfBytesToRead' lpNumberOfBytesRead' lpOverlapped
Long Parameter List,MSR.CVE.BackMaker,NamedPipeBase,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\NamedPipeBase.cs,WriteFile,The method has 5 parameters. Parameters: hHandle' lpBuffer' nNumberOfBytesToWrite' lpNumberOfBytesWritten' lpOverlapped
Long Parameter List,MSR.CVE.BackMaker,PositionAssociation,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\PositionAssociation.cs,PositionAssociation,The method has 5 parameters. Parameters: associationName' imagePosition' sourcePosition' globalPosition' dirtyEvent
Long Parameter List,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,RenderThumbnail,The method has 5 parameters. Parameters: thumbnailOutput' thumbnailCollection' thumbnailFilename' displayableSource' maxImageDimension
Long Parameter List,MSR.CVE.BackMaker,ProposedTileSet,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,MakeLayeredTileWork,The method has 5 parameters. Parameters: tileAddress' layer' renderOutput' outputFilename' outputTileType
Long Parameter List,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,Setup,The method has 5 parameters. Parameters: renderOptions' currentMashup' mapTileSourceFactory' LaunchRenderedBrowser' flushRenderedTileCachePackage
Long Parameter List,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,DrawErrorPosition,The method has 5 parameters. Parameters: pav' errorMarker' pen' brush' e
Long Identifier,MSR.CVE.BackMaker.ImagePipeline,AsyncRef,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\AsyncRef.cs,,The length of the parameter INTEREST_LEVEL_MORE_THAN_ANY_TILE is 33.
Long Identifier,MSR.CVE.BackMaker.ImagePipeline,AsyncRef,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\AsyncRef.cs,,The length of the parameter INTEREST_LEVEL_OPEN_DOCUMENT_BONUS is 34.
Long Identifier,MSR.CVE.BackMaker.ImagePipeline,AsyncRef,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\AsyncRef.cs,,The length of the parameter INTEREST_LEVEL_RENDER_ACTIVE_PAINT_EPSILON is 42.
Long Identifier,MSR.CVE.BackMaker.ImagePipeline,AsyncRef,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\AsyncRef.cs,,The length of the parameter asyncRefsHoldingInterestResourceCounter is 39.
Long Identifier,MSR.CVE.BackMaker.ImagePipeline,CacheRecord,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\CacheRecord.cs,,The length of the parameter cacheRecordsCompletedResourceCounter is 36.
Long Identifier,MSR.CVE.BackMaker.ImagePipeline,DisplayableSourceCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\DisplayableSourceCache.cs,,The length of the parameter lastUserBoundsRequest_latentRegionHolder is 40.
Long Identifier,MSR.CVE.BackMaker.ImagePipeline,DisplayableSourceCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\DisplayableSourceCache.cs,,The length of the parameter lastUserBoundsRequest_features is 30.
Long Identifier,MSR.CVE.BackMaker.ImagePipeline,DisplayableSourceCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\DisplayableSourceCache.cs,,The length of the parameter lastImageRequest_parameterType is 30.
Long Identifier,MSR.CVE.BackMaker.ImagePipeline,MemoryCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MemoryCache.cs,,The length of the parameter interestingStuffResourceCounter is 31.
Long Identifier,MSR.CVE.BackMaker.ImagePipeline,OpenDocumentSensitivePrioritizer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\OpenDocumentSensitivePrioritizer.cs,Realizing,The length of the parameter openDocumentSensitivePrioritizedFuture is 38.
Long Identifier,MSR.CVE.BackMaker.ImagePipeline,OpenDocumentSensitivePrioritizer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\OpenDocumentSensitivePrioritizer.cs,Complete,The length of the parameter openDocumentSensitivePrioritizedFuture is 38.
Long Identifier,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,,The length of the parameter destMercatorToSourceTransformer is 31.
Long Identifier,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,,The length of the parameter sourceToDestMercatorTransformer_approximate is 43.
Long Identifier,MSR.CVE.BackMaker,AutomaticTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AutomaticTransformationStyle.cs,,The length of the parameter correspondencesRequiredForQuadratic is 35.
Long Identifier,MSR.CVE.BackMaker,FodderSupport,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FodderSupport.cs,,The length of the parameter CanonicalMercatorQuadTreeString is 31.
Long Identifier,MSR.CVE.BackMaker,Layer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Layer.cs,,The length of the parameter SimulateTransparencyWithVEBackingLayerAttr is 42.
Long Identifier,MSR.CVE.BackMaker,Layer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Layer.cs,,The length of the parameter LastLayerViewPositionTag_compat is 31.
Long Identifier,MSR.CVE.BackMaker,Layer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Layer.cs,,The length of the parameter _simulateTransparencyWithVEBackingLayer is 39.
Long Identifier,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,,The length of the parameter aboutMSRBackMakerToolStripMenuItem is 34.
Long Identifier,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,,The length of the parameter snapFeaturesToolStripSeparator is 30.
Long Identifier,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,,The length of the parameter viewMapCruncherTutorialToolStripMenuItem is 40.
Long Identifier,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,,The length of the parameter showSourceCropToolStripMenuItem is 31.
Long Identifier,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,,The length of the parameter showDiagnosticsUIToolStripMenuItem is 34.
Long Identifier,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,,The length of the parameter enableDebugModeToolStripMenuItem is 32.
Long Identifier,MSR.CVE.BackMaker,Mashup,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Mashup.cs,ReadXML,The length of the parameter singleMaxZoomForEntireMashupCompatibilityBlob is 45.
Long Identifier,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,updatePushPinButton_Click,The length of the parameter firstDisplayedScrollingRowIndex is 31.
Long Identifier,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,removePushPinButton_Click,The length of the parameter firstDisplayedScrollingRowIndex is 31.
Long Identifier,MSR.CVE.BackMaker,RemoteFoxitStub,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RemoteFoxitStub.cs,,The length of the parameter ChildProcessVirtualMemorySizeLimit is 34.
Long Identifier,MSR.CVE.BackMaker,RenderOptions,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptions.cs,,The length of the parameter compatibility_RenderToFileOutputTag is 35.
Long Identifier,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,,The length of the parameter previewRenderedResultsLinkLabel is 31.
Long Identifier,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateOneLayer,The length of the parameter sourceMapRenderInfosBackToFront is 31.
Long Identifier,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateLayer_MakeProposedTileSet,The length of the parameter sourceMapRenderInfosBackToFront is 31.
Long Identifier,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateLayer_SelectRenderingStrategy,The length of the parameter openSourceDocumentCacheSpillCount is 33.
Long Identifier,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateLayer_CreateRenderList,The length of the parameter sourceMapRenderInfosBackToFront is 31.
Long Identifier,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,UI_UpdateLinks,The length of the parameter previewRenderedResultsLinkLabel is 31.
Long Identifier,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,,The length of the parameter _mashupDocument_UseScratchCopy is 30.
Long Identifier,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,,The length of the parameter complainedAboutInsaneTileCount is 30.
Long Identifier,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,,The length of the parameter estimateProgressSourceMapCount is 30.
Long Identifier,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,,The length of the parameter estimateProgressSourceMapsThisLayer is 35.
Long Identifier,MSR.CVE.BackMaker,RobustPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RobustPointTransformer.cs,RobustPointTransformer,The length of the parameter backupApproximatePointTransformer is 33.
Long Identifier,MSR.CVE.BackMaker,RobustPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RobustPointTransformer.cs,,The length of the parameter backupApproximatePointTransformer is 33.
Long Identifier,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,,The length of the parameter useDocumentTransparencyCheckbox is 31.
Long Statement,BackMaker,Program,C:\repos\radioman_greatmaps\Tools\MapCruncher\BackMaker\Program.cs,EmitUsage,The length of the statement  "			string text = message + "\n" + string.Format("Usage: {0} [<filename.yum>] [-render]\n"' "MapCruncher.exe") + "   <filename.yum>: a .yum document to open\n   -render: start rendering immediately' and exit when render completes\n"; " is 229.
Long Statement,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The length of the statement  "							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1])))) " is 179.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,ApplyPrototype,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ApplyPrototype.cs,Curry,The length of the statement  "			IFuture[] futureParams = Array.ConvertAll<IFuturePrototype' IFuture>(this.prototypeParams' (IFuturePrototype p) => p.Curry(paramDict)); " is 135.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,AsyncRecord,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\AsyncRecord.cs,Notify,The length of the statement  "			DebugThreadInterrupter.theInstance.AddThread("AsyncRecord.NotifyThread"' new ThreadStart(this.NotifyThread)' ThreadPriority.Normal); " is 132.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,AsyncRef,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\AsyncRef.cs,SetInterest,The length of the statement  "			DiagnosticUI.theDiagnostics.fetchResourceCounter("asyncRef-" + this.debugAnnotation + "-withInterest"' -1).crement(num2 - num); " is 127.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,CacheBase,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\CacheBase.cs,Remove,The length of the statement  "				D.Assert(removeExpectation == CacheBase.RemoveExpectation.Unknown || removeExpectation == CacheBase.RemoveExpectation.Present == flag' "Remove didn't meet expectations. That could suggest a mutating hash."); " is 207.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,CompositeImageVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\CompositeImageVerb.cs,Evaluate,The length of the statement  "								graphics.DrawImage(imageRef.image.IPromiseIAmHoldingGDISLockSoPleaseGiveMeTheImage()' new Rectangle(0' 0' value.Width' value.Height)); " is 134.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetTranslationInLatLon,The length of the statement  "			return new LatLonZoom(oldCenterPosition.lat + this.pixelsToDegrees((long)mouseMotion.Y' oldCenterPosition.zoom)' oldCenterPosition.lon - this.pixelsToDegrees((long)mouseMotion.X' oldCenterPosition.zoom)' oldCenterPosition.zoom); " is 228.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetTranslationInPixels,The length of the statement  "			return new Point((int)this.degreesToPixels(point.lon - center.lon' center.zoom)' (int)this.degreesToPixels(center.lat - point.lat' center.zoom)); " is 145.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetUnclippedMapWindow,The length of the statement  "			return new MapRectangle(this.GetTranslationInLatLon(centerPosition' new Point(windowSize.Width / 2' windowSize.Height / 2)).latlon' this.GetTranslationInLatLon(centerPosition' new Point(-(windowSize.Width / 2 + 1)' -(windowSize.Height / 2 + 1))).latlon); " is 254.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetTileArrayDescriptor,The length of the statement  "			tileDisplayDescriptorArray.topLeftTile = this.GetTileContainingLatLonZoom(new LatLonZoom(unclippedMapWindow.GetNW()' center.zoom)); " is 131.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetTileArrayDescriptor,The length of the statement  "			TileAddress tileContainingLatLonZoom = this.GetTileContainingLatLonZoom(new LatLonZoom(unclippedMapWindow.GetSE()' center.zoom)); " is 129.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetTileArrayDescriptor,The length of the statement  "			tileDisplayDescriptorArray.tileCountX = tileContainingLatLonZoom.TileX - tileDisplayDescriptorArray.topLeftTile.TileX + 1; " is 122.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetTileArrayDescriptor,The length of the statement  "			tileDisplayDescriptorArray.tileCountY = -(tileContainingLatLonZoom.TileY - tileDisplayDescriptorArray.topLeftTile.TileY) + 1; " is 125.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetTileArrayDescriptor,The length of the statement  "			Point64 point = new Point64(this.degreesToPixels(unclippedMapWindow.GetNW().lon' center.zoom)' this.degreesToPixels(unclippedMapWindow.GetNW().lat' center.zoom)); " is 162.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetTileArrayDescriptor,The length of the statement  "			tileDisplayDescriptorArray.topLeftTileOffset = new Point((int)((long)(tileDisplayDescriptorArray.topLeftTile.TileX * 512) - point.X)' (int)(point.Y - (long)((tileDisplayDescriptorArray.topLeftTile.TileY + 1) * 512))); " is 217.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,CoordinateSystemUtilities,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\CoordinateSystemUtilities.cs,GetRangeAsMapRectangle,The length of the statement  "			return new MapRectangle(coordSys.GetLatRange().min' coordSys.GetLonRange().min' coordSys.GetLatRange().max' coordSys.GetLonRange().max); " is 136.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,CoordinateSystemUtilities,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\CoordinateSystemUtilities.cs,TileAddressToMapRectangle,The length of the statement  "			TileAddress tileAddress2 = new TileAddress(coordinateSystem.GetTileAddressLayout().XValueOneTileEast(tileAddress)' coordinateSystem.GetTileAddressLayout().YValueOneTileSouth(tileAddress)' tileAddress.ZoomLevel); " is 211.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,CoordinateSystemUtilities,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\CoordinateSystemUtilities.cs,ConstrainLLZ,The length of the statement  "			return new LatLonZoom(coordSys.GetLatRange().Constrain(src.lat)' coordSys.GetLonRange().Constrain(src.lon)' coordSys.GetZoomRange().Constrain(src.zoom)); " is 153.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,DiskCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\DiskCache.cs,CreateCacheDirIfNeeded,The length of the statement  "				throw new ConfigurationException(string.Format("TileCache cannot create or access cache directory {0}"' this.cacheDir)' innerException); " is 136.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,DisplayableSourceCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\DisplayableSourceCache.cs,GetUserBounds,The length of the statement  "			if (this.cachedUserBounds == null || this.lastUserBoundsRequest_latentRegionHolder != latentRegionHolder || this.lastUserBoundsRequest_features != features) " is 156.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,DisplayableSourceCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\DisplayableSourceCache.cs,GetImagePrototype,The length of the statement  "			if (this.cachedImageRequest == null || this.lastImageRequest_parameterType != parameterType || this.lastImageRequest_features != features) " is 138.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,FadeVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FadeVerb.cs,FadeTile,The length of the statement  "                    BitmapData bitmapdata = bitmap2.LockBits(new Rectangle(0' 0' bitmap2.Width' bitmap2.Height)' ImageLockMode.WriteOnly' PixelFormat.Format32bppArgb); " is 147.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,FadeVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FadeVerb.cs,FadeTile,The length of the statement  "                    BitmapData data2 = bitmap.LockBits(new Rectangle(0' 0' bitmap.Width' bitmap.Height)' ImageLockMode.ReadOnly' PixelFormat.Format32bppArgb); " is 138.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,FoxitOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FoxitOpenDocument.cs,Render,The length of the statement  "			RectangleF rectangleF = new RectangleF((float)mapRect.lon0' (float)mapRect.lat0' (float)(mapRect.lon1 - mapRect.lon0)' (float)(mapRect.lat1 - mapRect.lat0)); " is 157.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,FoxitOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FoxitOpenDocument.cs,Render,The length of the statement  "			Size pagesize = new Size((int)Math.Round((double)size.Width / (double)rectangleF.Width * num)' (int)Math.Round((double)size.Height / (double)rectangleF.Height * num2)); " is 168.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,FoxitOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FoxitOpenDocument.cs,Render,The length of the statement  "			Point topleft = new Point((int)Math.Round((double)(-(double)pagesize.Width) / num * mapRect.lon0)' (int)Math.Round((double)(-(double)pagesize.Height) / num2 * (num2 - mapRect.lat1))); " is 183.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,FoxitOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FoxitOpenDocument.cs,FetchBounds,The length of the statement  "			return new BoundsPresent(new RenderRegion(new MapRectangle(0.0' 0.0' (double)(this.actualBoundingBox.Height / this.boundingBox.Height)' (double)(this.actualBoundingBox.Width / this.boundingBox.Width))' new DirtyEvent())); " is 221.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,FutureDocumentFromFilesystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FutureDocumentFromFilesystem.cs,WriteXML,The length of the statement  "			context.writer.WriteAttributeString(FutureDocumentFromFilesystem.PageNumberAttr' this.pageNumber.ToString(CultureInfo.InvariantCulture)); " is 137.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,FutureDocumentFromUri,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FutureDocumentFromUri.cs,Realize,The length of the statement  "			string text2 = Path.Combine(FutureDocumentFromUri.MakeDownloadCacheDir()' string.Format("Hash-{0}.{1}"' arg' ImageTypeMapper.ByMimeType(httpWebResponse.ContentType).extension)); " is 177.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,FutureDocumentFromUri,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FutureDocumentFromUri.cs,WriteXML,The length of the statement  "			wc.writer.WriteAttributeString(FutureDocumentFromUri.FetchedDocumentPageNumberAttr' this.pageNumber.ToString(CultureInfo.InvariantCulture)); " is 140.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,GDIOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\GDIOpenDocument.cs,Render,The length of the statement  "				RectangleD rectangleD = new RectangleD(mapRect.lon0 * (double)this.boundingBox.Width - 0.5' -mapRect.lat1 * (double)this.boundingBox.Height + (double)this.actualBoundingBox.Height - 0.5' (mapRect.lon1 - mapRect.lon0) * (double)this.boundingBox.Width + (double)this.hackRectangleAdjust' (mapRect.lat1 - mapRect.lat0) * (double)this.boundingBox.Height + (double)this.hackRectangleAdjust); " is 386.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,GDIOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\GDIOpenDocument.cs,FetchBounds,The length of the statement  "			return new BoundsPresent(new RenderRegion(new MapRectangle(0.0' 0.0' (double)(this.actualBoundingBox.Height / this.boundingBox.Height)' (double)(this.actualBoundingBox.Width / this.boundingBox.Width))' new DirtyEvent())); " is 221.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,GDIOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\GDIOpenDocument.cs,ImageDetail,The length of the statement  "			double num = Math.Max((double)this.loadedImage.Width / (double)assumedDisplaySize.Width' (double)this.loadedImage.Height / (double)assumedDisplaySize.Height); " is 158.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,GeneralDocumentFuture,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\GeneralDocumentFuture.cs,GetAsynchronousFuture,The length of the statement  "			return new MemCacheFuture(cachePackage.asyncCache' Asynchronizer.MakeFuture(cachePackage.computeAsyncScheduler' this.GetSynchronousFuture(cachePackage))); " is 154.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,IImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\IImageTransformer.cs,getWarpedRegistration,The length of the statement  "				LatLon p = pointTransformer.getTransformedPoint(positionAssociation.sourcePosition.pinPosition.latlon' out invertError); " is 120.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,IImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\IImageTransformer.cs,getWarpedRegistration,The length of the statement  "				PositionAssociation positionAssociation2 = new PositionAssociation(positionAssociation.associationName' positionAssociation.imagePosition.pinPosition' new LatLonZoom(p.lat' p.lon' positionAssociation.sourcePosition.pinPosition.zoom)' positionAssociation.globalPosition.pinPosition' new DirtyEvent()); " is 300.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,IImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\IImageTransformer.cs,getWarpedRegistration,The length of the statement  "				positionAssociation2.sourcePosition.SetErrorPosition(DisplayablePosition.ErrorMarker.AsContributor' positionAssociation.globalPosition.pinPosition.latlon); " is 155.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,ImageParameterFromTileAddress,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ImageParameterFromTileAddress.cs,Equals,The length of the statement  "				return this.boundsParameter.Equals(imageParameterFromTileAddress.boundsParameter) && this.sizeParameter.Equals(imageParameterFromTileAddress.sizeParameter); " is 156.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,IPolyPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\IPolyPointTransformer.cs,writeToXml,The length of the statement  "					writer.WriteAttributeString("Coefficient"' this.transformCoefficients.GetElement(i * jamaMatrix.RowDimension + j' 0).ToString(CultureInfo.InvariantCulture)); " is 157.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,IPolyPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\IPolyPointTransformer.cs,Polynomialize,The length of the statement  "					jamaMatrix2.SetElement(j' i' Math.Pow(values.GetElement(j' 0)' jamaMatrix.GetElement(i' 0)) * Math.Pow(values.GetElement(j' 1)' jamaMatrix.GetElement(i' 1))); " is 158.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,IPolyPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\IPolyPointTransformer.cs,Polynomialize,The length of the statement  "			jamaMatrix3.setMatrix(jamaMatrix2.RowDimension' 2 * jamaMatrix2.RowDimension - 1' jamaMatrix2.ColumnDimension' 2 * jamaMatrix2.ColumnDimension - 1' jamaMatrix2); " is 161.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,MemoryCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MemoryCache.cs,Clean,The length of the statement  "						bool flag2 = clockCacheRecord.present is RequestInterestIfc && ((RequestInterestIfc)clockCacheRecord.present).GetInterest() > 524291; " is 133.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,LatLongZoomToPixel,The length of the statement  "			return new Point64((long)Math.Round((20037508.342789244 + num2) / num4)' (long)Math.Round((20037508.342789244 - num3) / num4)); " is 127.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,PixelToLatLong,The length of the statement  "			return new LatLonZoom(CoordinateSystemUtilities.RadiansToDegrees(1.5707963267948966 - 2.0 * Math.Atan(Math.Exp(-num3 / 6378137.0)))' CoordinateSystemUtilities.RadiansToDegrees(num2 / 6378137.0)' zoomLevel); " is 206.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTranslationInLatLon,The length of the statement  "				unclippedDraggedView = new LatLonZoom(unclippedDraggedView.lat' unclippedDraggedView.lon - 360.0' unclippedDraggedView.zoom); " is 125.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTranslationInLatLon,The length of the statement  "				unclippedDraggedView = new LatLonZoom(unclippedDraggedView.lat' unclippedDraggedView.lon + 360.0' unclippedDraggedView.zoom); " is 125.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetMapWindow,The length of the statement  "			return new MapRectangle(this.GetUnclippedDraggedView(centerPosition' new Point(windowSize.Width / 2' windowSize.Height / 2)).latlon' this.GetUnclippedDraggedView(centerPosition' new Point(-(windowSize.Width / 2 + 1)' -(windowSize.Height / 2 + 1))).latlon); " is 256.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTileArrayDescriptor,The length of the statement  "			tileDisplayDescriptorArray.topLeftTile = this.GetTileContainingLatLonZoom(new LatLonZoom(mapWindow.GetNW()' center.zoom)); " is 122.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTileArrayDescriptor,The length of the statement  "			TileAddress tileContainingLatLonZoom = this.GetTileContainingLatLonZoom(new LatLonZoom(mapWindow.GetSE()' center.zoom)); " is 120.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTileArrayDescriptor,The length of the statement  "			tileDisplayDescriptorArray.tileCountX = tileContainingLatLonZoom.TileX - tileDisplayDescriptorArray.topLeftTile.TileX + 1; " is 122.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTileArrayDescriptor,The length of the statement  "			tileDisplayDescriptorArray.tileCountY = tileContainingLatLonZoom.TileY - tileDisplayDescriptorArray.topLeftTile.TileY + 1; " is 122.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTileArrayDescriptor,The length of the statement  "			int x2 = this.GetTranslationInPixels(center' this.GetLatLonOfTileNW(new TileAddress(tileDisplayDescriptorArray.topLeftTile.TileX + tileDisplayDescriptorArray.tileCountX' tileDisplayDescriptorArray.topLeftTile.TileY' tileDisplayDescriptorArray.topLeftTile.ZoomLevel))).X; " is 270.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTileArrayDescriptor,The length of the statement  "			tileDisplayDescriptorArray.topLeftTileOffset = new Point64((long)tileDisplayDescriptorArray.topLeftTile.TileX * 256L - point.X' (long)tileDisplayDescriptorArray.topLeftTile.TileY * 256L - point.Y).ToPoint(); " is 207.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTileArrayDescriptor,The length of the statement  "			tileDisplayDescriptorArray.topLeftTile.TileX = VEAddressLayout.WrapLongitude(tileDisplayDescriptorArray.topLeftTile.TileX' tileDisplayDescriptorArray.topLeftTile.ZoomLevel); " is 173.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetUnclippedMapWindow,The length of the statement  "			return new MapRectangle(this.GetUnclippedDraggedView(centerPosition' new Point(windowSize.Width / 2' windowSize.Height / 2)).latlon' this.GetUnclippedDraggedView(centerPosition' new Point(-(windowSize.Width / 2 + 1)' -(windowSize.Height / 2 + 1))).latlon); " is 256.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,MercatorToLatLon,The length of the statement  "			return new LatLon(CoordinateSystemUtilities.RadiansToDegrees(1.5707963267948966 - 2.0 * Math.Atan(Math.Exp(-num3 / 6378137.0)))' CoordinateSystemUtilities.RadiansToDegrees(num2 / 6378137.0)); " is 191.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,OpenDocumentSensitivePrioritizedPrototype,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\OpenDocumentSensitivePrioritizedPrototype.cs,Curry,The length of the statement  "			return new OpenDocumentSensitivePrioritizedFuture(this.prioritizer' this.prototype.Curry(paramDict)' this.openDocumentFuture); " is 126.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,OpenDocumentSensitivePrioritizer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\OpenDocumentSensitivePrioritizer.cs,Realizing,The length of the statement  "					this.docToFuturesDict[openDocumentFuture][openDocumentSensitivePrioritizedFuture.identity] = openDocumentSensitivePrioritizedFuture; " is 132.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,doTransformImage,The length of the statement  "			MapRectangle outr = MapRectangle.MapRectangleIgnoreOrder(MercatorCoordinateSystem.LatLonToMercator(destBounds.GetNW())' MercatorCoordinateSystem.LatLonToMercator(destBounds.GetSE())); " is 183.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,PointUnroll,The length of the statement  "				jamaMatrix.setMatrix(pointVector.RowDimension * i' pointVector.RowDimension * (i + 1) - 1' 0' 0' pointVector.getMatrix(0' pointVector.RowDimension - 1' i' i)); " is 159.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestFunc,The length of the statement  "			JamaMatrix jamaMatrix4 = PolynomialImageTransformer.SVDSolveApply(jamaMatrix3' PolynomialImageTransformer.PointUnroll(jamaMatrix2)); " is 132.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestFunc,The length of the statement  "			D.Say(0' "Invert test:\n" + PolynomialImageTransformer.getApproximateInverterPolyPointTransformer(jamaMatrix' jamaMatrix2' 2).getTransformedPoint(p).ToString()); " is 161.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,writeToXml,The length of the statement  "			writer.WriteComment("This is the 'canonical' transform MapCruncher uses to warp its images. It numerically inverts this transform to compute its inverse. The SourceSpace->Mercator transform should be considered an approximation to the numerical inversion."); " is 258.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,RenderedTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\RenderedTileSource.cs,GetUserBounds,The length of the statement  "			return new MemCacheFuture(this.cachePackage.asyncCache' Asynchronizer.MakeFuture(this.cachePackage.computeAsyncScheduler' new MemCacheFuture(this.cachePackage.boundsCache' new ApplyFuture(new ConstantVerb(new BoundsPresent(new RenderRegion(new MapRectangle(-85.0' -5000.0' 85.0' 5000.0)' new DirtyEvent())))' new IFuture[0])))); " is 328.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,SizeSensitiveCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\SizeSensitiveCache.cs,Clean,The length of the statement  "				while ((purge && this.lruQueue.Count > 0) || (this.memoryUsed > SizeSensitiveCache.paramCacheMaxSize && ((SizeSensitiveCache.oneEntryAtATime && this.lruQueue.Count > 0) || (!SizeSensitiveCache.oneEntryAtATime && this.lruQueue.Count > 1)))) " is 239.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,SourceImageDownsamplerVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\SourceImageDownsamplerVerb.cs,Evaluate,The length of the statement  "                IFuture future = this.prototype.Curry(new ParamDict(new object[] { TermName.ImageBounds' new MapRectangleParameter(this.unitRectangle)' TermName.OutputSize' new SizeParameter(this.memoizedSize)' TermName.UseDocumentTransparency' present' TermName.ExactColors' present2 })); " is 273.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,SourceImageDownsamplerVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\SourceImageDownsamplerVerb.cs,Evaluate,The length of the statement  "            return this.prototype.Curry(new ParamDict(new object[] { TermName.ImageBounds' parameter' TermName.OutputSize' parameter2' TermName.UseDocumentTransparency' present' TermName.ExactColors' present2 })).Realize("sourceImageDownsampler-passthru"); " is 244.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,SourceToLatLonTransform,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\SourceToLatLonTransform.cs,doTransform,The length of the statement  "			PointD pointD = MercatorCoordinateSystem.MercatorToLatLon(this.sourceToMercator.getTransformedPoint(p0' out isApproximate)); " is 124.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,TileAddressEnumerator,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\TileAddressEnumerator.cs,SetPaintLocation,The length of the statement  "			this.current.paintLocation = new Rectangle(this.tad.topLeftTileOffset.X + this.tad.tileSize.Width * this.screenTileCountX' this.tad.topLeftTileOffset.Y + this.tad.tileSize.Height * this.screenTileCountY' this.tad.tileSize.Width' this.tad.tileSize.Height); " is 255.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,TileAddressToImageRegion,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\TileAddressToImageRegion.cs,Evaluate,The length of the statement  "			TileAddress tileAddress2 = new TileAddress(tileAddressLayout.XValueOneTileEast(tileAddress)' tileAddressLayout.YValueOneTileSouth(tileAddress)' tileAddress.ZoomLevel); " is 167.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,TransparencyFuture,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\TransparencyFuture.cs,Evaluate,The length of the statement  "                        BitmapData bitmapdata = bitmap2.LockBits(new Rectangle(0' 0' bitmap2.Width' bitmap2.Height)' ImageLockMode.WriteOnly' PixelFormat.Format32bppArgb); " is 147.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,TransparencyFuture,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\TransparencyFuture.cs,Evaluate,The length of the statement  "                        BitmapData data2 = bitmap.LockBits(new Rectangle(0' 0' bitmap.Width' bitmap.Height)' ImageLockMode.ReadOnly' PixelFormat.Format32bppArgb); " is 138.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,TransparencyFuture,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\TransparencyFuture.cs,Evaluate,The length of the statement  "                            data3 = bitmap3.LockBits(new Rectangle(0' 0' bitmap3.Width' bitmap3.Height)' ImageLockMode.ReadOnly' PixelFormat.Format32bppArgb); " is 130.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,TransparencyFuture,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\TransparencyFuture.cs,MaxInPlace,The length of the statement  "                    BitmapData bitmapdata = bitmap.LockBits(new Rectangle(0' 0' bitmap.Width' bitmap.Height)' ImageLockMode.ReadWrite' PixelFormat.Format32bppArgb); " is 144.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,TransparencyFuture,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\TransparencyFuture.cs,MaxInPlace,The length of the statement  "                    BitmapData data2 = bitmap2.LockBits(new Rectangle(0' 0' bitmap2.Width' bitmap2.Height)' ImageLockMode.ReadOnly' PixelFormat.Format32bppArgb); " is 141.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,TransparencyFuture,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\TransparencyFuture.cs,ReplaceAlphaChannel,The length of the statement  "                    BitmapData bitmapdata = bitmap.LockBits(new Rectangle(0' 0' bitmap.Width' bitmap.Height)' ImageLockMode.ReadWrite' PixelFormat.Format32bppArgb); " is 144.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,TransparencyFuture,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\TransparencyFuture.cs,ReplaceAlphaChannel,The length of the statement  "                    BitmapData data2 = bitmap2.LockBits(new Rectangle(0' 0' bitmap2.Width' bitmap2.Height)' ImageLockMode.ReadOnly' PixelFormat.Format32bppArgb); " is 141.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,TransparencyPrototype,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\TransparencyPrototype.cs,Curry,The length of the statement  "			return new TransparencyFuture(this.transparencyOptions' this.antialiasedPrototype.Curry(paramDict)' this.exactColorPrototype.Curry(paramDict)); " is 143.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,UnwarpedMapTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\UnwarpedMapTileSource.cs,GetImageDetailPrototype,The length of the statement  "			IFuturePrototype prototype = this.GetAccessPrototype(AccessMethod.ImageDetail' FutureFeatures.Cached' new IFuturePrototype[] " is 124.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,UnwarpedMapTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\UnwarpedMapTileSource.cs,GetUserBounds,The length of the statement  "			IFuture future = new MemCacheFuture(this.cachePackage.boundsCache' new ApplyFuture(new UserBoundsRefVerb(latentRegionHolder' this.GetImageBounds(FutureFeatures.Cached))' new IFuture[0])); " is 187.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,UnwarpedMapTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\UnwarpedMapTileSource.cs,AddAsynchrony,The length of the statement  "				future = new MemCacheFuture(this.cachePackage.asyncCache' new OpenDocumentSensitivePrioritizedFuture(this.cachePackage.openDocumentPrioritizer' Asynchronizer.MakeFuture(this.cachePackage.computeAsyncScheduler' future)' this.GetOpenDocumentFuture(FutureFeatures.MemoryCached))); " is 277.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,UnwarpedMapTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\UnwarpedMapTileSource.cs,AddAsynchrony,The length of the statement  "				D.Assert(UnwarpedMapTileSource.HasFeature(features' FutureFeatures.MemoryCached)' "should always cache async stuff' I think."); " is 127.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,UnwarpedMapTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\UnwarpedMapTileSource.cs,AddAsynchrony,The length of the statement  "				prototype = new MemCachePrototype(this.cachePackage.asyncCache' new OpenDocumentSensitivePrioritizedPrototype(this.cachePackage.openDocumentPrioritizer' new Asynchronizer(this.cachePackage.computeAsyncScheduler' prototype)' this.GetOpenDocumentFuture(FutureFeatures.MemoryCached))); " is 282.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,UserBoundsRefVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\UserBoundsRefVerb.cs,Evaluate,The length of the statement  "			return new PresentFailureCode(string.Format("Unrecognized Present type {0} in BoundsPresent.Evaluate"' present.GetType())); " is 123.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,UserClipperVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\UserClipperVerb.cs,Evaluate,The length of the statement  "			Region clipRegion = boundsPresent.GetRenderRegion().GetClipRegion(mapWindow' tileAddress.ZoomLevel' this.coordinateSystem); " is 123.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,UserClipperVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\UserClipperVerb.cs,Evaluate,The length of the statement  "			gDIBigLockedImage.DrawImageOntoThis(imageRef.image' new RectangleF(0f' 0f' (float)gDIBigLockedImage.Size.Width' (float)gDIBigLockedImage.Size.Height)' new RectangleF(0f' 0f' (float)imageRef.image.Size.Width' (float)imageRef.image.Size.Height)); " is 244.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,VETileFetch,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileFetch.cs,StyleIsValid,The length of the statement  "			return s != null && (s == VirtualEarthWebDownloader.RoadStyle || s == VirtualEarthWebDownloader.AerialStyle || s == VirtualEarthWebDownloader.HybridStyle); " is 155.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,VETileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileSource.cs,GetUserBounds,The length of the statement  "			IFuture future = new MemCacheFuture(this.cachePackage.boundsCache' new ApplyFuture(new ConstantVerb(new BoundsPresent(new RenderRegion(new MapRectangle(-85.0' -5000.0' 85.0' 5000.0)' new DirtyEvent())))' new IFuture[0])); " is 221.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,VETileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileSource.cs,GetUserBounds,The length of the statement  "				future = new MemCacheFuture(this.cachePackage.asyncCache' Asynchronizer.MakeFuture(this.cachePackage.networkAsyncScheduler' future)); " is 133.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,VETileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileSource.cs,AddFeatures,The length of the statement  "				prototype = new MemCachePrototype(cachePackage.asyncCache' new Asynchronizer(cachePackage.networkAsyncScheduler' prototype)); " is 125.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,VETileUpsamplerVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileUpsamplerVerb.cs,Evaluate,The length of the statement  "			TileAddress tileAddress2 = new TileAddress(tileAddress.TileX >> num' tileAddress.TileY >> num' tileAddress.ZoomLevel - num); " is 124.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,VETileUpsamplerVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileUpsamplerVerb.cs,Evaluate,The length of the statement  "			RectangleF srcRect = new RectangleF((float)(num3 * size.Width) / num5 - 0.5f + (float)size.Width' (float)(num4 * size.Height) / num5 - 0.5f + (float)size.Height' (float)size.Width / num5' (float)size.Height / num5); " is 215.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,VETileUpsamplerVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileUpsamplerVerb.cs,Evaluate,The length of the statement  "									graphics.DrawImage(imageRef.image.IPromiseIAmHoldingGDISLockSoPleaseGiveMeTheImage()' destRect' srcRect2' GraphicsUnit.Pixel); " is 126.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,WarpedMapTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WarpedMapTileSource.cs,GetImagePrototype,The length of the statement  "			IFuturePrototype futurePrototype = new ApplyPrototype(new WarpImageVerb(this.imageTransformer' this.GetImageBounds(FutureFeatures.Cached)' this.unwarpedMapTileSource.GetImagePrototype(new ImageParameterFromRawBounds(WarpedMapTileSource.sourceImageOversampleSize)' futureFeatures))' new IFuturePrototype[] " is 304.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,WarpedMapTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WarpedMapTileSource.cs,GetImagePrototype,The length of the statement  "				futurePrototype = new ApplyPrototype(new FadeVerb(this.unwarpedMapTileSource.GetTransparencyOptions().GetFadeOptions())' new IFuturePrototype[] " is 143.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,WarpImageVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WarpImageVerb.cs,Evaluate,The length of the statement  "			MapRectangle mapRectangle = value.Transform(this.imageTransformer.getDestLatLonToSourceTransformer()).GrowFraction(0.05); " is 121.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,WPFOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenDocument.cs,Render,The length of the statement  "				RectangleD rectangleD = new RectangleD(mapRect.lon0 * (double)this.boundingBox.Width - 0.5' -mapRect.lat1 * (double)this.boundingBox.Height + (double)this.actualBoundingBox.Height - 0.5' (mapRect.lon1 - mapRect.lon0) * (double)this.boundingBox.Width + (double)this.hackRectangleAdjust' (mapRect.lat1 - mapRect.lat0) * (double)this.boundingBox.Height + (double)this.hackRectangleAdjust); " is 386.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,WPFOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenDocument.cs,Render,The length of the statement  "				RectangleD r = new RectangleD((double)this.actualBoundingBox.X' (double)this.actualBoundingBox.Y' (double)this.actualBoundingBox.Width' (double)this.actualBoundingBox.Height); " is 175.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,WPFOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenDocument.cs,Render,The length of the statement  "							BitmapData bitmapData = bitmap.LockBits(new Rectangle(0' 0' size.Width' size.Height)' ImageLockMode.WriteOnly' System.Drawing.Imaging.PixelFormat.Format32bppArgb); " is 163.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,WPFOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenDocument.cs,Render,The length of the statement  "								bitmapSource.CopyPixels(new Int32Rect(0' 0' bitmapSource.PixelWidth' bitmapSource.PixelHeight)' buffer' bitmapData.Stride * bitmapData.Height' bitmapData.Stride); " is 162.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,WPFOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenDocument.cs,LabelThisImage,The length of the statement  "			graphics.DrawString(StringUtils.breakLines(message)' new Font("Arial"' 8f)' new SolidBrush(System.Drawing.Color.DarkBlue)' 3f' 15f); " is 132.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,WPFOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenDocument.cs,FetchBounds,The length of the statement  "			return new BoundsPresent(new RenderRegion(new MapRectangle(0.0' 0.0' (double)(this.actualBoundingBox.Height / this.boundingBox.Height)' (double)(this.actualBoundingBox.Width / this.boundingBox.Width))' new DirtyEvent())); " is 221.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,WPFOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenDocument.cs,ImageDetail,The length of the statement  "				double num = Math.Max((double)this.primarySource.PixelWidth / (double)assumedDisplaySize.Width' (double)this.primarySource.PixelHeight / (double)assumedDisplaySize.Height); " is 172.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,WPFOpenVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenVerb.cs,Evaluate,The length of the statement  "				MessageBox.Show("It appears that .Net 3.0 is not installed on this machine. Please install .Net 3.0 and restart the application."' "Missing Dependency"); " is 153.
Long Statement,MSR.CVE.BackMaker.ImagePipeline,WPFOpenVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenVerb.cs,Evaluate,The length of the statement  "					MessageBox.Show("It appears that .Net 3.0 is not installed on this machine. Please install .Net 3.0 and restart the application."' "Missing Dependency"); " is 153.
Long Statement,MSR.CVE.BackMaker.MCDebug,DiagnosticUI,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.MCDebug\DiagnosticUI.cs,fetchResourceCounter,The length of the statement  "					this.resourceCountersByName[resourceName] = new ResourceCounter(resourceName' period' new ResourceCounter.NotifyDelegate(this.ResourceCounterCallback)); " is 152.
Long Statement,MSR.CVE.BackMaker.MCDebug,DiagnosticUI,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.MCDebug\DiagnosticUI.cs,fetchResourceCounter,The length of the statement  "						DebugThreadInterrupter.theInstance.AddThread("DiagnosticUI.CreateAllCountersInvokeThread"' new ThreadStart(this.CreateAllCountersInvokeThread)' ThreadPriority.Normal); " is 167.
Long Statement,MSR.CVE.BackMaker,AutomaticTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AutomaticTransformationStyle.cs,getImageTransformer,The length of the statement  "			return new PolynomialImageTransformer(registration' interpolationMode' this.getPolynomialDegree(registration.GetAssociationList().Count)); " is 138.
Long Statement,MSR.CVE.BackMaker,BuildConfig,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\BuildConfig.cs,Initialize,The length of the statement  "					buildConfig.autoMaxZoomOffset = Convert.ToInt32(xmlNode.Attributes["AutoMaxZoomOffset"].Value' CultureInfo.InvariantCulture); " is 125.
Long Statement,MSR.CVE.BackMaker,CompositeTileUnit,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\CompositeTileUnit.cs,AddSupplier,The length of the statement  "			this.singleSourceUnits.AddLast(new SingleSourceUnit(applier' this.address' this.stage' new SingleSourceUnit.NeedThisTileDelegate(this.NeedThisTile))); " is 150.
Long Statement,MSR.CVE.BackMaker,CrunchedFile,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\CrunchedFile.cs,FromUri,The length of the statement  "					if (mashupParseContext.reader.NodeType == XmlNodeType.Element && mashupParseContext.reader.Name == CrunchedFile.crunchedFileTag) " is 128.
Long Statement,MSR.CVE.BackMaker,CrunchedFile,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\CrunchedFile.cs,WriteXML,The length of the statement  "			FodderSupport.WriteAppFodderString(writer' FodderSupport.MapCruncherAppIDString' "Version" + FodderSupport.DigitsToLetters(FodderSupport.ExtractDigits(MSR.CVE.BackMaker.Resources.Version.ApplicationVersionNumber))); " is 215.
Long Statement,MSR.CVE.BackMaker,CrunchedFile,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\CrunchedFile.cs,WritePermitCompositionLicense,The length of the statement  "			writer.WriteComment("This element indicates that the present XML document is in the\r\npublic domain. This permits others to compose the contents of this" + CrunchedFile.CrunchedFilename + " document with other such documents to produce\r\ncomposite map presentations. This element does not address the\r\nusage of the image tiles referred to by this document."); " is 363.
Long Statement,MSR.CVE.BackMaker,CrunchedLayer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\CrunchedLayer.cs,AccumulateBoundingBox,The length of the statement  "				BoundsPresent boundsPresent = (BoundsPresent)warpedMapTileSource.GetUserBounds(null' FutureFeatures.Cached).Realize("CrunchedFile.AccumulateBoundingBox"); " is 154.
Long Statement,MSR.CVE.BackMaker,DuplicatePushpinException,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DuplicatePushpinException.cs,ToString,The length of the statement  "			return string.Format("The new pin has the same {0} location as pin {1} \"{2}\"."' this.whichReference' this.existingPinId' this.existingPinName); " is 145.
Long Statement,MSR.CVE.BackMaker,FastImageWarper,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FastImageWarper.cs,doWarp,The length of the statement  "                data = bitmap.LockBits(new Rectangle(0' 0' bitmap.Width' bitmap.Height)' ImageLockMode.WriteOnly' PixelFormat.Format32bppArgb); " is 127.
Long Statement,MSR.CVE.BackMaker,FastImageWarper,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FastImageWarper.cs,doWarp,The length of the statement  "                data2 = bitmap2.LockBits(new Rectangle(0' 0' bitmap2.Width' bitmap2.Height)' ImageLockMode.ReadOnly' PixelFormat.Format32bppArgb); " is 130.
Long Statement,MSR.CVE.BackMaker,FPDFBitmapCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FPDFBitmapCache.cs,Get,The length of the statement  "			FPDFBitmapCache.FPDFBitmap_FillRect(this.bitmapHandle' 0' 0' this.allocatedSize.Width' this.allocatedSize.Height' 255' 255' 255' 255); " is 134.
Long Statement,MSR.CVE.BackMaker,GDIBigLockedImage,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\GDIBigLockedImage.cs,CrementCounter,The length of the statement  "				GDIBigLockedImage.fineGrainedImageCounter[this.sourceLabel] = DiagnosticUI.theDiagnostics.fetchResourceCounter("GDIBLI-" + this.sourceLabel' 10); " is 145.
Long Statement,MSR.CVE.BackMaker,GDIBigLockedImage,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\GDIBigLockedImage.cs,GetTransparentness,The length of the statement  "                BitmapData bitmapdata = bitmap.LockBits(new Rectangle(0' 0' bitmap.Width' bitmap.Height)' ImageLockMode.ReadWrite' PixelFormat.Format32bppArgb); " is 144.
Long Statement,MSR.CVE.BackMaker,GhostscriptConfiguration,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\GhostscriptConfiguration.cs,LookInRegistry,The length of the statement  "				this.status += string.Format("Cannot find GPL Ghostscript configuration in registry {{LOCAL_MACHINE'CURRENT_USER}}\\{0}.\n"' root); " is 131.
Long Statement,MSR.CVE.BackMaker,ImageTypeMapper,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ImageTypeMapper.cs,ByExtension,The length of the statement  "			ImageTypeMapping imageTypeMapping = ImageTypeMapper.mappings.Find((ImageTypeMapping candidate) => candidate.extension == extension); " is 132.
Long Statement,MSR.CVE.BackMaker,ImageTypeMapper,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ImageTypeMapper.cs,ByMimeType,The length of the statement  "			ImageTypeMapping imageTypeMapping = ImageTypeMapper.mappings.Find((ImageTypeMapping candidate) => candidate.mimeType == mimeType); " is 130.
Long Statement,MSR.CVE.BackMaker,ImageTypeMapper,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ImageTypeMapper.cs,ByImageFormat,The length of the statement  "			ImageTypeMapping imageTypeMapping = ImageTypeMapper.mappings.Find((ImageTypeMapping candidate) => candidate.ImageFormatEquals(imageFormat)); " is 140.
Long Statement,MSR.CVE.BackMaker,InsaneSourceMapRemover,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\InsaneSourceMapRemover.cs,RendererSanityCheckComplete,The length of the statement  "					new InsaneSourceMapRemover(this.sourceMap' this.mapTileSourceFactory' this.undoAddSourceMapDelegate' this.tryCount + 1); " is 120.
Long Statement,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,RemoveHandler,The length of the statement  "					DialogResult dialogResult = MessageBox.Show(string.Format("Are you sure you want to remove source map {0}?"' sourceMap.displayName)' "Remove source map?"' MessageBoxButtons.OKCancel' MessageBoxIcon.Question); " is 208.
Long Statement,MSR.CVE.BackMaker,LayerMetadataFile,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerMetadataFile.cs,Read,The length of the statement  "					if (mashupParseContext.reader.NodeType == XmlNodeType.Element && mashupParseContext.reader.Name == LayerMetadataFile.LayerMetadataTag) " is 134.
Long Statement,MSR.CVE.BackMaker,LayerMetadataFile,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerMetadataFile.cs,Read,The length of the statement  "				throw new InvalidMashupFile(mashupParseContext' string.Format("{0} doesn't appear to be a valid {1}"' outputMethod.GetUri("LayerMetadata.xml")' LayerMetadataFile.LayerMetadataTag)); " is 181.
Long Statement,MSR.CVE.BackMaker,LayerMetadataFile,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerMetadataFile.cs,Write,The length of the statement  "			XmlTextWriter xmlTextWriter = new XmlTextWriter(this.renderOutputMethod.CreateFile("LayerMetadata.xml"' "text/xml")' Encoding.UTF8); " is 132.
Long Statement,MSR.CVE.BackMaker,Legend,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Legend.cs,GetRenderedLegendFuture,The length of the statement  "			IFuturePrototype imagePrototype = displayableSource.GetImagePrototype(new ImageParameterFromRawBounds(outputSize)' features); " is 125.
Long Statement,MSR.CVE.BackMaker,Legend,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Legend.cs,RenderLegend,The length of the statement  "			Present present = this.GetRenderedLegendFuture(displayableSource' FutureFeatures.Cached).Realize("Legend.RenderLegend"); " is 120.
Long Statement,MSR.CVE.BackMaker,Legend,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Legend.cs,GetOutputSizeSynchronously,The length of the statement  "			RenderRegion renderRegionSynchronously = this.latentRegionHolder.GetRenderRegionSynchronously(synchronousUserBoundsFuture); " is 123.
Long Statement,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,previewPanel_Paint,The length of the statement  "						e.Graphics.DrawImage(image2' new Rectangle(new Point(0' 0)' this.previewPanel.Size)' new Rectangle(new Point(0' 0)' this.previewPanel.Size)' GraphicsUnit.Pixel); " is 161.
Long Statement,MSR.CVE.BackMaker,LegendViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendViewManager.cs,Activate,The length of the statement  "			this.viewControl.GetLegendPanel().Configure(this.legend' this.mapTileSourceFactory.CreateDisplayableUnwarpedSource(this.sourceMap)); " is 132.
Long Statement,MSR.CVE.BackMaker,LegendViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendViewManager.cs,SetupNonpreviewView,The length of the statement  "			this.viewControl.GetSMViewerControl().SetBaseLayer(new LegendDisplayableSourceWrapper(this.mapTileSourceFactory.CreateDisplayableUnwarpedSource(this.sourceMap)' this.legend.latentRegionHolder)); " is 194.
Long Statement,MSR.CVE.BackMaker,LegendViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendViewManager.cs,DefaultReferenceMapPosition,The length of the statement  "			return SourceMapViewManager.DefaultReferenceMapPosition(this.sourceMap' this.mapTileSourceFactory' this.viewControl' null); " is 123.
Long Statement,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InvalidateView,The length of the statement  "			this.dms.outputMode = (this._ShowDMS.Enabled ? DegreesMinutesSeconds.OutputMode.DMS : DegreesMinutesSeconds.OutputMode.DecimalDegrees); " is 135.
Long Statement,MSR.CVE.BackMaker,LocalDocumentDescriptor,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LocalDocumentDescriptor.cs,WriteXML,The length of the statement  "			wc.writer.WriteAttributeString(LocalDocumentDescriptor.LocalDocumentPageNumberAttr' this._pageNumber.ToString(CultureInfo.InvariantCulture)); " is 141.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,StartUpApplication,The length of the statement  "            this.smViewerControl.ShowTileBoundaries = new MapDrawingOption(this.smViewerControl' this.showTileBoundariesMenuItem' true); " is 124.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,StartUpApplication,The length of the statement  "            this.smViewerControl.ShowSourceCrop = new MapDrawingOption(this.smViewerControl' this.showSourceCropToolStripMenuItem' true); " is 125.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,StartUpApplication,The length of the statement  "            this.veViewerControl.ShowTileBoundaries = new MapDrawingOption(this.veViewerControl' this.showTileBoundariesMenuItem' false); " is 125.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,RestoreWindowParameters,The length of the statement  "                    Point location = new Point(int.Parse(this.backMakerRegistry.GetValue("gui_window_x"))' int.Parse(this.backMakerRegistry.GetValue("gui_window_y"))); " is 147.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,RestoreWindowParameters,The length of the statement  "                        this.controlSplitContainer.SplitterDistance = this.RobustGetFromRegistry(this.controlSplitContainer.SplitterDistance' "control_splitter_pos"); " is 142.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,RestoreWindowParameters,The length of the statement  "                        this.mapSplitContainer.SplitterDistance = this.RobustGetFromRegistry(this.mapSplitContainer.SplitterDistance' "gui_splitter_pos"); " is 130.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,AddRegLayerMenuItem_Click,The length of the statement  "            RenderedLayerDisplayInfo layerSelector = RenderedLayerSelector.GetLayerSelector(this.veViewerControl' this.renderedTileCachePackage); " is 133.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,viewRenderedMenuItem_Click,The length of the statement  "            RenderedMashupViewer renderedMashupViewer = new RenderedMashupViewer(this.renderedTileCachePackage' this.showDMSMenuItem); " is 122.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,AddNewAssociation,The length of the statement  "            PositionAssociation positionAssociation = new PositionAssociation(newPinName' this.uiPosition.GetSMPos().llz' this.uiPosition.GetSMPos().llz' this.uiPosition.GetVEPos().llz' this.displayedRegistration.model.dirtyEvent); " is 219.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,UpdateAssociation,The length of the statement  "            PositionAssociation newAssoc = new PositionAssociation("proposed"' this.uiPosition.GetSMPos().llz' this.uiPosition.GetSMPos().llz' this.uiPosition.GetVEPos().llz' new DirtyEvent()); " is 181.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,setDisplayedRegistration,The length of the statement  "                selected = this.displayedRegistration.model.GetAssociationList().Find((PositionAssociation pa) => pa.pinId == oldSelectedPA.pinId); " is 131.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,updateRegistrationDisplay,The length of the statement  "                Converter<PositionAssociation' PositionAssociationView> converter = (PositionAssociation pa) => new PositionAssociationView(pa' PositionAssociationView.WhichPosition.global); " is 174.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,updateRegistrationDisplay,The length of the statement  "                this.veViewerControl.setPinList(this.displayedRegistration.model.GetAssociationList().ConvertAll<PositionAssociationView>(converter)); " is 134.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,updateRegistrationDisplay,The length of the statement  "                Converter<PositionAssociation' PositionAssociationView> converter2 = (PositionAssociation pa) => new PositionAssociationView(pa' PositionAssociationView.WhichPosition.source); " is 175.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,updateRegistrationDisplay,The length of the statement  "                List<PositionAssociationView> pinList = this.displayedRegistration.model.GetAssociationList().ConvertAll<PositionAssociationView>(converter2); " is 142.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,SaveMashup,The length of the statement  "                MessageBox.Show(string.Format("Can't save mashup {0}:\n{1}"' this.currentMashup.GetFilename()' ex.Message)' "Error Writing Mashup"' MessageBoxButtons.OK' MessageBoxIcon.Hand); " is 175.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,SaveMashupAs,The length of the statement  "                if (MessageBox.Show(string.Format("{0} already exists.\nDo you want to replace it?"' text)' "Overwrite Existing File?"' MessageBoxButtons.OKCancel' MessageBoxIcon.Exclamation) == DialogResult.OK) " is 195.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,SaveMashupAs,The length of the statement  "                        MessageBox.Show(string.Format("Can't overwrite {0}:\n{1}"' text' ex.Message)' "Error Deleting Existing File"' MessageBoxButtons.OK' MessageBoxIcon.Hand); " is 153.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,CloseMashup,The length of the statement  "                DialogResult dialogResult = MessageBox.Show(text' "Save changes?"' MessageBoxButtons.YesNoCancel' MessageBoxIcon.Exclamation); " is 126.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,LoadMashup,The length of the statement  "                MessageBox.Show(string.Format("Can't open {0}:\n{1}"' fileName' ex.Message)' "Error Opening Mashup"' MessageBoxButtons.OK' MessageBoxIcon.Hand); " is 144.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,LoadMashup,The length of the statement  "                DialogResult dialogResult = MessageBox.Show(string.Format("Warnings for {0}:\n{1}\nContinue loading file?\n"' fileName' mashupFileWarningList)' "Error Reading File"' MessageBoxButtons.OKCancel' MessageBoxIcon.Hand); " is 215.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,openMashupMenuItem_Click,The length of the statement  "            openFileDialog.Filter = string.Format("MapCruncher Mashup Files (*.{0})|*.{0};*.msh" + BuildConfig.theConfig.allFilesOption' "yum"); " is 132.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,AddSourceMap,The length of the statement  "            string arg = string.Join(";"' Array.ConvertAll<string' string>(this.mapTileSourceFactory.GetKnownFileTypes()' (string ext) => "*" + ext)); " is 138.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,AddSourceMap,The length of the statement  "            MainAppForm.UndoAddSourceMap undoAddSourceMap = new MainAppForm.UndoAddSourceMap(openFileDialog.FileName' null' null' null' this); " is 130.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,AddSourceMap,The length of the statement  "                SourceMap sourceMap = new SourceMap(new FutureDocumentFromFilesystem(openFileDialog.FileName' 0)' new SourceMap.GetFilenameContext(this.currentMashup.GetFilenameContext)' this.currentMashup.dirtyEvent' this.currentMashup.readyToLockEvent); " is 239.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,AddSourceMap,The length of the statement  "                undoAddSourceMap = new MainAppForm.UndoAddSourceMap(openFileDialog.FileName' sourceMap' addedToLayer' this.layerControls' this); " is 128.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,AddSourceMap,The length of the statement  "                new InsaneSourceMapRemover(sourceMap' this.mapTileSourceFactory' new InsaneSourceMapRemover.UndoAdddSourceMapDelegate(undoAddSourceMap.Undo)); " is 142.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,AddSourceMapFromUri,The length of the statement  "            SourceMap sourceMap = new SourceMap(new FutureDocumentFromUri(new Uri("http://www.srh.noaa.gov/ridge/lite/NCR/ATX_0.png")' 0)' new SourceMap.GetFilenameContext(this.currentMashup.GetFilenameContext)' this.currentMashup.dirtyEvent' this.currentMashup.readyToLockEvent); " is 268.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,LaunchRenderedBrowser,The length of the statement  "            RenderedMashupViewer renderedMashupViewer = new RenderedMashupViewer(this.renderedTileCachePackage' this.showDMSMenuItem); " is 122.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,LaunchRenderWindow,The length of the statement  "            this.renderWindow.Setup(this.currentMashup.GetRenderOptions()' this.currentMashup' this.mapTileSourceFactory' new RenderProgressPanel2.LaunchRenderedBrowserDelegate(this.LaunchRenderedBrowser)' new RenderState.FlushRenderedTileCachePackageDelegate(this.flushRenderedTileCachePackage)); " is 285.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,showSourceMapOverviewMenuItem_Click,The length of the statement  "                this.sourceMapOverviewWindow.Initialize(new SourceMapOverviewWindow.ClosedDelegate(this.SourceMapOverviewWindowClosed)' new MapDrawingOption(this.veViewerControl' this.showDMSMenuItem' false)); " is 193.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,showSourceMapOverviewMenuItem_Click,The length of the statement  "                this.sourceMapOverviewWindow.viewerControl.ShowPushPins = new MapDrawingOption(this.sourceMapOverviewWindow.viewerControl' this.showPushPinsMenuItem' true); " is 156.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,showSourceMapOverviewMenuItem_Click,The length of the statement  "                this.sourceMapOverviewWindow.viewerControl.ShowSourceCrop = new MapDrawingOption(this.sourceMapOverviewWindow.viewerControl' this.showSourceCropToolStripMenuItem' true); " is 169.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,showSourceMapOverviewMenuItem_Click,The length of the statement  "                this.sourceMapOverviewWindow.viewerControl.ShowDMS = new MapDrawingOption(this.sourceMapOverviewWindow.viewerControl' this.showDMSMenuItem' false); " is 147.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,UpdateOverviewPins,The length of the statement  "                    Converter<PositionAssociation' PositionAssociationView> converter = (PositionAssociation pa) => new PositionAssociationView(pa' PositionAssociationView.WhichPosition.image); " is 173.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The length of the statement  "            this.viewMapCruncherTutorialToolStripMenuItem.Click += new System.EventHandler(this.viewMapCruncherTutorialToolStripMenuItem_Click); " is 132.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The length of the statement  "            this.aboutMSRBackMakerToolStripMenuItem.Click += new System.EventHandler(this.aboutMSRBackMakerToolStripMenuItem_Click); " is 120.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The length of the statement  "            this.showDiagnosticsUIToolStripMenuItem.Click += new System.EventHandler(this.showDiagnosticsUIToolStripMenuItem_Click_1); " is 122.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The length of the statement  "            this.mapSplitContainer.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 153.
Long Statement,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The length of the statement  "            this.controlsSplitContainer.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 158.
Long Statement,MSR.CVE.BackMaker,UndoAddSourceMap,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,Undo,The length of the statement  "                MessageBox.Show(string.Format("Can't open {0}:\n{1}"' this.filename' message)' "Can't Open Source Map"' MessageBoxButtons.OK' MessageBoxIcon.Hand); " is 147.
Long Statement,MSR.CVE.BackMaker,UndoAddSourceMap,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,Undo,The length of the statement  "                MainAppForm.UndoAddSourceMap.CloseViewDelegate method = new MainAppForm.UndoAddSourceMap.CloseViewDelegate(this.mainAppForm.CloseView); " is 135.
Long Statement,MSR.CVE.BackMaker,Manifest,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Manifest.cs,FetchBlock,The length of the statement  "            Manifest.ManifestBlock manifestBlock = new Manifest.ManifestBlock(new Manifest.TellManifestDirty(this.SetDirty)' this.storageMethod' blockId); " is 142.
Long Statement,MSR.CVE.BackMaker,Manifest,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Manifest.cs,CreateBlock,The length of the statement  "            Manifest.ManifestBlock manifestBlock = new Manifest.ManifestBlock(new Manifest.TellManifestDirty(this.SetDirty)' this.storageMethod' this.rootBlock.superBlock.nextUnassignedBlockId); " is 182.
Long Statement,MSR.CVE.BackMaker,ManifestRecord,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Manifest.cs,WriteXML,The length of the statement  "                xtw.WriteAttributeString("IndirectManifestBlockId"' this.indirectManifestBlockId.ToString(CultureInfo.InvariantCulture)); " is 121.
Long Statement,MSR.CVE.BackMaker,ManifestRecord,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Manifest.cs,ReplaceBlock,The length of the statement  "                return new Manifest.ManifestRecord(manifestBlock' this.path' this.fileExists' this.fileLength' this.indirectManifestBlockId); " is 125.
Long Statement,MSR.CVE.BackMaker,ManifestBlock,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Manifest.cs,Insert,The length of the statement  "                    this.recordList.Insert(this.recordList.FindIndex((Manifest.ManifestRecord mrb) => mrb.path == afterRecord.path)' newRecord); " is 124.
Long Statement,MSR.CVE.BackMaker,MapRectangle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MapRectangle.cs,AddToBoundingBox,The length of the statement  "            return new MapRectangle(Math.Min(ll.lat' box.lat0)' Math.Min(ll.lon' box.lon0)' Math.Max(ll.lat' box.lat1)' Math.Max(ll.lon' box.lon1)); " is 136.
Long Statement,MSR.CVE.BackMaker,MapRectangle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MapRectangle.cs,GrowFraction,The length of the statement  "            return new MapRectangle(this.lat0 - (p * (this.lat1 - this.lat0))' this.lon0 - (p * (this.lon1 - this.lon0))' this.lat1 + (p * (this.lat1 - this.lat0))' this.lon1 + (p * (this.lon1 - this.lon0))); " is 196.
Long Statement,MSR.CVE.BackMaker,MapRectangle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MapRectangle.cs,intersects,The length of the statement  "            bool flag = ((betweenInclusive(this.ll0.lat' othr.ll0.lat' othr.ll1.lat) || betweenInclusive(this.ll1.lat' othr.ll0.lat' othr.ll1.lat)) || betweenInclusive(othr.ll0.lat' this.ll0.lat' this.ll1.lat)) || betweenInclusive(othr.ll1.lat' this.ll0.lat' this.ll1.lat); " is 261.
Long Statement,MSR.CVE.BackMaker,MapRectangle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MapRectangle.cs,intersects,The length of the statement  "            bool flag2 = ((betweenInclusive(this.ll0.lon' othr.ll0.lon' othr.ll1.lon) || betweenInclusive(this.ll1.lon' othr.ll0.lon' othr.ll1.lon)) || betweenInclusive(othr.ll0.lon' this.ll0.lon' this.ll1.lon)) || betweenInclusive(othr.ll1.lon' this.ll0.lon' this.ll1.lon); " is 262.
Long Statement,MSR.CVE.BackMaker,MapRectangle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MapRectangle.cs,Transform,The length of the statement  "            return AddToBoundingBox(AddToBoundingBox(AddToBoundingBox(AddToBoundingBox(box' transformer.getTransformedPoint((PointD)this.GetSW()))' transformer.getTransformedPoint((PointD)this.GetSE()))' transformer.getTransformedPoint((PointD)this.GetNW()))' transformer.getTransformedPoint((PointD)this.GetNE())); " is 303.
Long Statement,MSR.CVE.BackMaker,MapTileSourceFactory,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MapTileSourceFactory.cs,CreateUnwarpedSource,The length of the statement  "			return new UnwarpedMapTileSource(this.cachePackage' sourceMap.documentFuture.GetSynchronousFuture(this.cachePackage)' sourceMap); " is 129.
Long Statement,MSR.CVE.BackMaker,Mashup,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Mashup.cs,ReadXML,The length of the statement  "					this._layerList = new LayerList(context' new SourceMap.GetFilenameContext(this.GetFilenameContext)' this.dirtyEvent' this.readyToLockEvent); " is 140.
Long Statement,MSR.CVE.BackMaker,Mashup,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Mashup.cs,ReadXML,The length of the statement  "							throw new InvalidMashupFile(context' string.Format("Multiple SourceMaps in Version {0} file."' context.version.versionNumberString)); " is 133.
Long Statement,MSR.CVE.BackMaker,Mashup,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Mashup.cs,ReadXML,The length of the statement  "						SourceMap sourceMap = new SourceMap(context' new SourceMap.GetFilenameContext(this.GetFilenameContext)' this.dirtyEvent' this.readyToLockEvent); " is 144.
Long Statement,MSR.CVE.BackMaker,Mashup,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Mashup.cs,AutoSaveBackup,The length of the statement  "					MessageBox.Show(string.Format("Failed to autosave {0}:\n{1}"' Mashup.GetAutoSaveName(this.fileName)' ex.Message)' "AutoSave Failed"' MessageBoxButtons.OK' MessageBoxIcon.Hand); " is 176.
Long Statement,MSR.CVE.BackMaker,MashupXMLSchemaVersion,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MashupXMLSchemaVersion.cs,ReadXMLAttribute,The length of the statement  "			MashupXMLSchemaVersion mashupXMLSchemaVersion = MashupXMLSchemaVersion.AcceptedVersions.Find((MashupXMLSchemaVersion vi) => vi._versionNumberString == versionString); " is 166.
Long Statement,MSR.CVE.BackMaker,NamedPipeServer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\NamedPipeServer.cs,Initialize,The length of the statement  "			this.pipeHandle = NamedPipeBase.CreateNamedPipe("\\\\.\\pipe\\" + pipeName' 3u' 6u' 255u' 4096u' 4096u' 0u' new IntPtr(0)); " is 123.
Long Statement,MSR.CVE.BackMaker,NamedPipeServer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\NamedPipeServer.cs,StartChildProcess,The length of the statement  "			processStartInfo.FileName = Path.Combine(AppDomain.CurrentDomain.SetupInformation.ApplicationBase' AppDomain.CurrentDomain.SetupInformation.ApplicationName); " is 157.
Long Statement,MSR.CVE.BackMaker,PositionAssociation,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\PositionAssociation.cs,GetHashCode,The length of the statement  "			return this._sourcePosition.GetHashCode() ^ this._globalPosition.GetHashCode() ^ this._pinId ^ this._associationName.GetHashCode(); " is 131.
Long Statement,MSR.CVE.BackMaker,Range<T>,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Range.cs,Parse,The length of the statement  "				throw new InvalidMashupFile(context' string.Format("Field {0} value {1} cannot be parsed: {2}"' fieldName' str' ex.Message)); " is 125.
Long Statement,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The length of the statement  "			this.toolTip.SetToolTip(this.addPushPinButton' "To create a registration point' position the crosshairs over corresponding points on both maps.  Then click Add."); " is 163.
Long Statement,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The length of the statement  "			this.toolTip.SetToolTip(this.updatePushPinButton' "To move an existing point' highlight it on the list below.  Then reposition the crosshairs and click update."); " is 162.
Long Statement,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The length of the statement  "			this.removeAllPushpinsButton.Anchor = (AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right); " is 120.
Long Statement,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The length of the statement  "			this.toolTip.SetToolTip(this.unlockTransformButton' "Unlocks the source map from Virtual Earth' allowing additional points to be added."); " is 138.
Long Statement,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The length of the statement  "			this.toolTip.SetToolTip(this.lockTransformButton' "Warps the source map to fit Virtual Earth using the existing correspondence points."); " is 137.
Long Statement,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The length of the statement  "			this.toolTip.SetToolTip(this.forceAffineCheckBox' "Selecting \"Affine\" forces MapCruncher to preserve straight lines in your map.  This reduces position accuracy."); " is 166.
Long Statement,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,DisplayModel,The length of the statement  "					string text = string.Format("{0}' {1}"' this.dms.FormatLatLon(current.globalPosition.pinPosition.lat)' this.dms.FormatLatLon(current.globalPosition.pinPosition.lon)); " is 166.
Long Statement,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,updateWarpStyle,The length of the statement  "			this.forceAffineCheckBox.Checked = (this.registrationControl.model.warpStyle != TransformationStyleFactory.getDefaultTransformationStyle()); " is 140.
Long Statement,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,removeAllPushpinsButton_Click,The length of the statement  "			if (MessageBox.Show("Remove all pushpins?"' "Are you sure?"' MessageBoxButtons.OKCancel' MessageBoxIcon.Exclamation) != DialogResult.OK) " is 136.
Long Statement,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,pinList_SelectedIndexChanged,The length of the statement  "			this.removePushPinButton.Enabled = (this.pinList.SelectedRows.Count != 0 && this.registrationControl != null && !this.registrationControl.model.isLocked); " is 154.
Long Statement,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,checkBox1_CheckedChanged,The length of the statement  "				this.registrationControl.model.warpStyle = (((CheckBox)sender).Checked ? TransformationStyleFactory.getTransformationStyle(1) : TransformationStyleFactory.getDefaultTransformationStyle()); " is 188.
Long Statement,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InvalidateView,The length of the statement  "			this.dms.outputMode = (this._ShowDMS.Enabled ? DegreesMinutesSeconds.OutputMode.DMS : DegreesMinutesSeconds.OutputMode.DecimalDegrees); " is 135.
Long Statement,MSR.CVE.BackMaker,RemoteFoxitServer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RemoteFoxitServer.cs,Server,The length of the statement  "					reply = this.foxitViewer.RenderBytes(renderRequest.outputSize' renderRequest.topLeft' renderRequest.pageSize' renderRequest.transparentBackground); " is 147.
Long Statement,MSR.CVE.BackMaker,RemoteFoxitStub,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RemoteFoxitStub.cs,Establish,The length of the statement  "			RectangleFRecord rectangleFRecord = (RectangleFRecord)this.namedPipeServer.RPC(new OpenRequest(this.filename' this.pageNumber)); " is 128.
Long Statement,MSR.CVE.BackMaker,RemoteFoxitStub,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RemoteFoxitStub.cs,RobustRPC,The length of the statement  "			if (this.namedPipeServer.childProcess.VirtualMemorySize64 > 1073741824L || this.namedPipeServer.childProcess.HandleCount > 512) " is 127.
Long Statement,MSR.CVE.BackMaker,RemoteFoxitStub,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RemoteFoxitStub.cs,Render,The length of the statement  "				BitmapData bitmapData = bitmap.LockBits(new Rectangle(0' 0' outSize.Width' outSize.Height)' ImageLockMode.ReadWrite' PixelFormat.Format32bppPArgb); " is 147.
Long Statement,MSR.CVE.BackMaker,RenderedLayerSelector,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedLayerSelector.cs,GetLayerSelector,The length of the statement  "			openFileDialog.Filter = string.Format("MapCruncher Rendered Layers (*{0})|*{1}{2}"' CrunchedFile.CrunchedFilenameExtension' CrunchedFile.CrunchedFilenameExtension' BuildConfig.theConfig.allFilesOption); " is 202.
Long Statement,MSR.CVE.BackMaker,RenderedLayerSelector,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedLayerSelector.cs,GetLayerSelector,The length of the statement  "				result = RenderedLayerSelector.BuildLayerSelector(viewer' cachePackage' Path.GetDirectoryName(localPath)' renderedMashupsFromFile); " is 131.
Long Statement,MSR.CVE.BackMaker,RenderedLayerSelector,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedLayerSelector.cs,GetRenderedMashupsFromFile,The length of the statement  "				throw new Exception(string.Format("File {0} does not conform to {1} format. (Error was: {2})"' uri' CrunchedFile.CrunchedFilename' ex.Message)); " is 144.
Long Statement,MSR.CVE.BackMaker,RenderedLayerSelector,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedLayerSelector.cs,BuildLayerSelector,The length of the statement  "				renderedLayerSelector.tileSource = new RenderedTileSource(cachePackage' new VENamingScheme(Path.Combine(basePath' current.namingScheme.GetFilePrefix())' current.namingScheme.GetFileSuffix())); " is 192.
Long Statement,MSR.CVE.BackMaker,RenderedLayerSelector,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedLayerSelector.cs,BuildLayerSelector,The length of the statement  "				((RenderedLayerSelector)renderedLayerDisplayInfo.tsmiList[renderedLayerDisplayInfo.tsmiList.Count - 1 - i].Tag).ToggleLayer(); " is 126.
Long Statement,MSR.CVE.BackMaker,RenderOptions,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptions.cs,WriteXML,The length of the statement  "			writer.WriteAttributeString(RenderOptions.PublishSourceDataValueAttr' this.publishSourceData.ToString(CultureInfo.InvariantCulture)); " is 133.
Long Statement,MSR.CVE.BackMaker,RenderOptions,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptions.cs,WriteXML,The length of the statement  "			writer.WriteAttributeString(RenderOptions.PermitCompositionValueAttr' this.permitComposition.ToString(CultureInfo.InvariantCulture)); " is 133.
Long Statement,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The length of the statement  "			this.publishSourceMapsTip.SetToolTip(this.publishSourcesCheckbox' "Provides site visitors with all of the data needed to re-render your crunchup."); " is 148.
Long Statement,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The length of the statement  "			this.publishSourceMapsTip.SetToolTip(this.publishSourcesLabel' "Provides site visitors with all of the data needed to re-render your crunchup."); " is 145.
Long Statement,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,MashupChangedHandler,The length of the statement  "			RenderState renderState = new RenderState(this.mashup' this' this.flushRenderedTileCachePackage' this.mapTileSourceFactory); " is 124.
Long Statement,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,tileDisplayPanel_Paint,The length of the statement  "							e.Graphics.DrawImage(image2' new Rectangle(new Point(0' 0)' this.tileDisplayPanel.Size)' new Rectangle(0' 0' image2.Width' image2.Height)' GraphicsUnit.Pixel); " is 159.
Long Statement,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,tileDisplayPanel_Paint,The length of the statement  "				e.Graphics.DrawRectangle(new Pen(Color.Black)' 0' 0' this.tileDisplayPanel.Size.Width - 1' this.tileDisplayPanel.Height - 1); " is 125.
Long Statement,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The length of the statement  "			this.previewRenderedResultsLinkLabel.Font = new Font("Microsoft Sans Serif"' 11f' FontStyle.Regular' GraphicsUnit.Point' 0); " is 124.
Long Statement,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The length of the statement  "			this.viewInBrowserLinkLabel.LinkClicked += new LinkLabelLinkClickedEventHandler(this.viewInBrowserLinkLabel_LinkClicked); " is 121.
Long Statement,MSR.CVE.BackMaker,RenderRegion,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderRegion.cs,IntersectWithRectangleDebug,The length of the statement  "				LatLon position3 = new LatLon(Math.Max(val' Math.Min(position2.lat' val2))' Math.Max(val3' Math.Min(position2.lon' val4))); " is 123.
Long Statement,MSR.CVE.BackMaker,RenderRegion,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderRegion.cs,IntersectWithRectangleDebug,The length of the statement  "				if (tracedVertex == null || tracedVertex.position.lat != tracedVertex2.position.lat || tracedVertex.position.lon != tracedVertex2.position.lon) " is 143.
Long Statement,MSR.CVE.BackMaker,RenderRegion,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderRegion.cs,GetClipRegion,The length of the statement  "					MapRectangle clippedMapWindow = new MapRectangle(mapWindow.lat0' mapWindow.lon0 + (double)i' mapWindow.lat1' mapWindow.lon1 + (double)i); " is 137.
Long Statement,MSR.CVE.BackMaker,RenderRegion,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderRegion.cs,GetPath,The length of the statement  "				array[num] = new TracedScreenPoint(current.originalIndex' csi.GetTranslationInPixels(new LatLonZoom(mapWindow.GetNW().lat' mapWindow.GetNW().lon' zoom)' current.position)); " is 172.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,RenderAll,The length of the statement  "				this.sampleHTMLUri = SampleHTMLWriter.Write(this.mashupScratchCopy' new SampleHTMLWriter.PostMessageDelegate(this.PostMessage)' this.renderOutput); " is 147.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateOuterLoop,The length of the statement  "				string message = string.Format("Estimated output size: {0} tiles' about {1:f}MB"' this.renderQueue.Count' (double)this.renderQueue.Count * 0.085); " is 146.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,SetupRenderOutput,The length of the statement  "						throw new RenderState.SetupFailed(false' string.Format("Can't load credentials file {0}: {1}"' renderToS3Options.s3credentialsFilename' arg)); " is 142.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,SetupRenderOutput,The length of the statement  "					S3OutputMethod s3OutputMethod = new S3OutputMethod(s3adaptor' renderToS3Options.s3bucket' renderToS3Options.s3pathPrefix); " is 122.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateOneLayer,The length of the statement  "			RenderState.ProposedTileSet proposedTileSet = this.EstimateLayer_MakeProposedTileSet(layer' boundsList' sourceMapRenderInfosBackToFront); " is 137.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateLayer_MakeSourceMapList,The length of the statement  "						this.PostMessage(string.Format("Skipping SourceMap {0} because locking is failing: {1}."' current.GetDisplayName()' ex.ToString())); " is 132.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateLayer_MakeProposedTileSet,The length of the statement  "				BoundsPresent boundsPresent = (BoundsPresent)current.warpedMapTileSource.GetUserBounds(null' FutureFeatures.Cached).Realize("RenderState.EstimateOneLayer"); " is 156.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateLayer_MakeProposedTileSet,The length of the statement  "				current.renderBoundsBoundingBox = current.renderBoundsBoundingBox.ClipTo(CoordinateSystemUtilities.GetRangeAsMapRectangle(MercatorCoordinateSystem.theInstance)); " is 161.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateLayer_MakeProposedTileSet,The length of the statement  "							proposedTileSet.MakeLayeredTileWork(tileAddress' layer' this.renderOutput.MakeChildMethod(renderedTileNamingScheme.GetFilePrefix())' renderedTileNamingScheme.GetTileFilename(tileAddress)' this.mashupScratchCopy.GetRenderOptions().outputTileType); " is 246.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateLayer_MakeProposedTileSet,The length of the statement  "								DialogResult dialogResult = MessageBox.Show(string.Format("Estimate exceeds {0} tiles; consider canceling the estimation and selecting lower max zoom levels."' 1000000)' "That's a lot of tiles."' MessageBoxButtons.OKCancel' MessageBoxIcon.Exclamation); " is 252.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateLayer_SelectRenderingStrategy,The length of the statement  "				this.mapTileSourceFactory.CreateUnwarpedSource(layer.First).GetOpenDocumentFuture(FutureFeatures.Cached).Realize("RenderState.EstimateOneLayer spill test"); " is 156.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateLayer_CreateRenderList,The length of the statement  "				vETileSource = new VETileSource(this.mapTileSourceFactory.GetCachePackage()' layer.simulateTransparencyWithVEBackingLayer); " is 123.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateLayer_CreateRenderList,The length of the statement  "			RenderState.LayerApplierMaker layerApplierMaker = new RenderState.LayerApplierMaker(this.mapTileSourceFactory.GetCachePackage()); " is 129.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateLayer_CreateRenderList,The length of the statement  "				MapRectangle mapRectangle = CoordinateSystemUtilities.TileAddressToMapRectangle(this.mercatorCoordinateSystem' current.GetTileAddress()); " is 137.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,ArrangeLayerDirectories,The length of the statement  "				this.PostMessage(string.Format("Cannot prepare output directory: {0}. Please correct the problem or select a different render output directory."' ex.Message)); " is 159.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,PurgeDirectory,The length of the statement  "                this.PostMessage(string.Format("Cannot delete {0} directory: {1}. Please correct the problem or select a different render output directory."' dirName' exception.Message)); " is 171.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,RenderLegends,The length of the statement  "							RenderOutputUtil.SaveImage(imageRef' renderOutputMethod' text' ImageTypeMapper.ByExtension(Path.GetExtension(text)).imageFormat); " is 129.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,RenderThumbnails,The length of the statement  "						this.RenderThumbnail(thumbnailOutput' crunchedLayer' RenderState.ForceValidFilename(string.Format("{0}_{1}.png"' current2.displayName' current))' new CompositeTileSource(current2' this.mapTileSourceFactory)' current); " is 217.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,RenderThumbnails,The length of the statement  "							this.RenderThumbnail(thumbnailOutput' thumbnailCollection' RenderState.ForceValidFilename(string.Format("{0}_{1}_{2}.png"' current2.displayName' current3.displayName' current))' this.mapTileSourceFactory.CreateDisplayableWarpedSource(current3)' current); " is 254.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,RenderThumbnail,The length of the statement  "			Present present = displayableSource.GetUserBounds(latentRegionHolder' FutureFeatures.Cached).Realize("RenderState.RenderThumbnails"); " is 133.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,RenderThumbnail,The length of the statement  "			IFuturePrototype imagePrototype = displayableSource.GetImagePrototype(new ImageParameterFromRawBounds(size)' FutureFeatures.Cached); " is 132.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,RenderThumbnail,The length of the statement  "				RenderOutputUtil.SaveImage((ImageRef)present2' thumbnailOutput' thumbnailFilename' ImageTypeMapper.ByExtension(Path.GetExtension(thumbnailFilename)).imageFormat); " is 162.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,CreateCrunchedFileDescriptor,The length of the statement  "				string sourceMashupFilename = this.mashupScratchCopy.GetRenderOptions().publishSourceData ? string.Format("{0}/{1}"' RenderState.SourceDataDirName' this.mashupScratchCopy.GetPublishedFilename()) : null; " is 202.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,CreateCrunchedFileDescriptor,The length of the statement  "				crunchedFile = new CrunchedFile(this.mashupScratchCopy' this.rangeQueryData' this.renderOutput' sourceMashupFilename' this.boundsList' this.mapTileSourceFactory); " is 162.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,CreateCrunchedFileDescriptor,The length of the statement  "				this.PostMessage(string.Format("Couldn't generate XML output file {0}: {1}"' this.CrunchedFileLocation(crunchedFile)' arg)); " is 124.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,WriteCrunchedFileDescriptor,The length of the statement  "				this.PostMessage(string.Format("Couldn't write XML output file {0}: {1}"' this.CrunchedFileLocation(crunchedFile)' arg)); " is 121.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,CopySourceData,The length of the statement  "						SourceDocument sourceDocument = current2.documentFuture.RealizeSynchronously(this.mapTileSourceFactory.GetCachePackage()); " is 122.
Long Statement,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,CopySourceData,The length of the statement  "						RenderOutputUtil.CopyFile(filesystemAbsolutePath' renderOutputMethod' Path.GetFileName(filesystemAbsolutePath)' ImageTypeMapper.ByExtension(Path.GetExtension(filesystemAbsolutePath)).mimeType); " is 193.
Long Statement,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The length of the statement  "            this.groupBox1.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 144.
Long Statement,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The length of the statement  "            this.renderProgressPanel.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 155.
Long Statement,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,Setup,The length of the statement  "			this.renderProgressPanel.Setup(currentMashup' mapTileSourceFactory' LaunchRenderedBrowser' flushRenderedTileCachePackage); " is 122.
Long Statement,MSR.CVE.BackMaker,S3Adaptor,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3Adaptor.cs,BuildWebRequest,The length of the statement  "			headerList.AddHeaderIfAbsent("x-amz-date"' DateTime.UtcNow.ToString("ddd' dd MMM yyyy HH:mm:ss "' CultureInfo.InvariantCulture) + "GMT"); " is 137.
Long Statement,MSR.CVE.BackMaker,S3PutClosure,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3OutputMethod.cs,Close,The length of the statement  "						this.s3OutputMethod.s3adaptor.put(this.s3OutputMethod.bucketName' this.s3key' new S3Content(this.ToArray())' headerList); " is 121.
Long Statement,MSR.CVE.BackMaker,SampleHTMLWriter,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SampleHTMLWriter.cs,WriteMain,The length of the statement  "				string arg2 = string.Format("<input type=\"checkbox\" id=\"checkbox:{0}\" onClick=\"javascript:ToggleLayer('{0}'' this.checked);\"{1}>{0}"' SampleHTMLWriter.ReferenceName(current.GetDisplayName())' arg); " is 203.
Long Statement,MSR.CVE.BackMaker,SampleHTMLWriter,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SampleHTMLWriter.cs,WriteMain,The length of the statement  "				string arg3 = string.Format("<a href=\"javascript:crunchedLayerManager.layerList.find('{0}').SetDefaultView(map);\"><font size=\"-1\">center here</font></a>"' SampleHTMLWriter.ReferenceName(current.GetDisplayName())); " is 217.
Long Statement,MSR.CVE.BackMaker,SampleHTMLWriter,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SampleHTMLWriter.cs,WriteKey,The length of the statement  "				textWriter.WriteLine(string.Format("<p><h2><a name=\"{0}\">{1}</a></h2>"' SampleHTMLWriter.ReferenceName(current.displayName)' current.displayName)); " is 149.
Long Statement,MSR.CVE.BackMaker,SampleHTMLWriterConstants,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SampleHTMLWriterConstants.cs,Body,The length of the statement  "				"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<head>\r\n\r\n        <title>MapCruncher Mashup Sample Web Page</title>\r\n"' " is 207.
Long Statement,MSR.CVE.BackMaker,SampleHTMLWriterConstants,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SampleHTMLWriterConstants.cs,Body,The length of the statement  "				string.Format("\r\n        <script src=\"{0}\" type=\"text/javascript\"></script>\r\n        <script src=\"{1}CrunchControl.js\" type=\"text/javascript\"></script>\r\n        <link href=\"{1}LegendStyle.css\" rel=\"stylesheet\" type=\"text/css\">\r\n"' BuildConfig.theConfig.mapControl' BuildConfig.theConfig.hostHome)' " is 319.
Long Statement,MSR.CVE.BackMaker,SampleHTMLWriterConstants,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SampleHTMLWriterConstants.cs,Body,The length of the statement  "				"\r\n        <script type=\"text/javascript\">\r\n\r\n        var div = null;\r\n        var map = null;\r\n        var crunchedLayerManager = null;\r\n\r\n        function ToggleLayer(name' active)\r\n        {\r\n                if (active == true)\r\n                {\r\n                        crunchedLayerManager.layerList.find(name).Activate(map);\r\n                }\r\n                else\r\n                {\r\n                        crunchedLayerManager.layerList.find(name).Deactivate(map);\r\n                }\r\n        }\r\n\r\n        function searchboxactivate()\r\n        {\r\n            txt = document.getElementById('searchbox').value;\r\n            map.Find(txt' \"\");\r\n        }        \r\n\r\n        function GetSize()\r\n        {\r\n                var myWidth = 0' myHeight = 0;\r\n\r\n                if( typeof( window.innerWidth ) == 'number' ) {\r\n                    //Non-IE\r\n                    myWidth = window.innerWidth;\r\n                    myHeight = window.innerHeight;\r\n                } else if( document.documentElement && ( document.documentElement.clientWidth || document.documentElement.clientHeight ) ) {\r\n                    //IE 6+ in 'standards compliant mode'\r\n                    myWidth = document.documentElement.clientWidth;\r\n                    myHeight = document.documentElement.clientHeight;\r\n                } else if( document.body && ( document.body.clientWidth || document.body.clientHeight ) ) {\r\n                    //IE 4 compatible\r\n                    myWidth = document.body.clientWidth;\r\n                    myHeight = document.body.clientHeight;\r\n                }\r\n\r\n                if (myWidth > 0)\r\n                {\r\n                        var result = new Array();\r\n                        result[0] = myWidth;\r\n                        result[1] = myHeight;\r\n                        return result;\r\n                }\r\n                else\r\n                {\r\n                        return null;\r\n                }\r\n        }\r\n\r\n        function SetMapSize()\r\n        {\r\n                var browserSize = GetSize();\r\n\r\n                var div = document.getElementById(\"Map\");\r\n\r\n                if (browserSize != null)\r\n                {\r\n                        div.style.width = (browserSize[0] - 25) + \"px\";\r\n                        div.style.height = (browserSize[1] - 25) + \"px\";\r\n\r\n                }\r\n                else\r\n                {\r\n                        div.style.width = \"800px\";\r\n                        div.style.height = \"600px\";\r\n                }\r\n                div.style.overflow = \"hidden\";\r\n                div.style.position = \"relative\";\r\n\r\n\t\t\t\tif (crunchedLayerManager!=null)\r\n\t\t\t\t{\r\n\t\t\t\t\tcrunchedLayerManager.controlManager.UpdateControlLayout();\r\n\t\t\t\t}\r\n        }\r\n\r\n        function MapModeChanged(e)\r\n        {\r\n                if (map.GetMapMode() == Msn.VE.MapActionMode.Mode3D &&\r\n                    window.location.protocol == \"file:\")\r\n                {\r\n                        alert(\"MapCruncher tiles will only display in 3D mode \" +\r\n                        \"if your map is hosted on a web server (using http://).\\n\" +\r\n                        \"Currently' your tiles are coming from a local machine (file://) \" +\r\n                        \"so only 2D mode is available.\");\r\n                }\r\n        }\r\n\r\n        function LoadPage()\r\n        {\r\n                SetMapSize();\r\n                window.onresize = SetMapSize;\r\n\r\n                map = new VEMap('Map');\r\n                map.LoadMap();\r\n                map.AttachEvent(\"oninitmode\"' MapModeChanged);\r\n                map.SetMapStyle('h');\r\n\r\n\t\t\t\tcrunchedLayerManager = new VE.MapCruncher.CrunchedLayerManager(map);\r\n\t\t\t\tcrunchedLayerManager.controlManager.AddControl(\r\n\t\t\t\t\t\t\"aboutDiv\"' \"About this sample page\"'\r\n\t\t\t\t\t\tnew VE.MapCruncher.LayoutSpec(\"right\"' 10' \"top\"' 12)'\r\n\t\t\t\t\t\ttrue' false);\r\n                crunchedLayerManager.ImportLayersFromAnchorHRef(\"CrunchedLayers\");\r\n                var permalinkProvided = crunchedLayerManager.ApplyPermalink(document.layerCheckboxForm);\r\n\r\n                if (!permalinkProvided) {\r\n          var layer = crunchedLayerManager.layerList.find('"' " is 4438.
Long Statement,MSR.CVE.BackMaker,SampleHTMLWriterConstants,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SampleHTMLWriterConstants.cs,Body,The length of the statement  "				"');\r\n                    layer.Activate(map);\r\n                    layer.SetDefaultView(map);\r\n                }\r\n        }\r\n\r\n        </script>\r\n\r\n</head>\r\n<body onload=\"LoadPage()\">\r\n\r\n<div id=\"Map\"></div>\r\n\r\n<div style=\"display:none\">\r\n\t<a id=\"CrunchedLayers\" href=\""' " is 310.
Long Statement,MSR.CVE.BackMaker,SampleHTMLWriterConstants,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SampleHTMLWriterConstants.cs,Body,The length of the statement  "				"\">CrunchedLayers</a>\r\n</div>\r\n\r\n<div id=\"aboutDiv\" style=\"background:white; width:400px; border: 2px solid #0000c0\">\r\n<div style=\"padding:10px\">\r\n<p> Welcome to your new Mashup -- powered by <a href=\""' " is 221.
Long Statement,MSR.CVE.BackMaker,SampleHTMLWriterConstants,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SampleHTMLWriterConstants.cs,Body,The length of the statement  "				"\">MapCruncher</a> Beta for\r\nMicrosoft <a href=\"http://local.live.com/\">Virtual Earth</a>!\r\nThis HTML file is a sample.  It demonstrates how to build a real web page that uses\r\nthe map layer you just rendered.\r\nTo publish this mashup' just move the whole folder to your web server.\r\n\r\n<p>\r\n\r\n\r\n<form action=\"javascript:searchboxactivate()\">\r\n\t<b>Search the map for businesses (e.g.' \"pizza\"):</b>\r\n\t<input id=\"searchbox\" type=\"text\" name=\"searchbox\" size=\"20\">\r\n\t<input id=\"sbutton\" type=\"button\" value=\"Go!\" onclick=\"javascript:searchboxactivate()\">\r\n</form>\r\n\r\n        <form action=\"None\" name=\"layerCheckboxForm\">\r\n<b>Select Mashup Layers:</b>\r\n"' " is 714.
Long Statement,MSR.CVE.BackMaker,SingleSourceUnit,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SingleSourceUnit.cs,CompositeImageInto,The length of the statement  "				baseImage.DrawImageOntoThis(imageRef.image' new Rectangle(0' 0' baseImage.Width' baseImage.Height)' new Rectangle(0' 0' imageRef.image.Width' imageRef.image.Height)); " is 166.
Long Statement,MSR.CVE.BackMaker,SingleSourceUnit,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SingleSourceUnit.cs,CompositeImageInto,The length of the statement  "					throw new NonredundantRenderComplaint(string.Format("{0}: {1}"' this.applier.DescribeSourceForComplaint()' ((PresentFailureCode)present).exception.Message)); " is 157.
Long Statement,MSR.CVE.BackMaker,SourceMap,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMap.cs,AutoSelectMaxZoom,The length of the statement  "				IntParameter intParameter = (IntParameter)mapTileSourceFactory.CreateUnwarpedSource(this).GetImageDetailPrototype(FutureFeatures.Cached).Curry(new ParamDict(new object[] " is 169.
Long Statement,MSR.CVE.BackMaker,SourceMap,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMap.cs,AutoSelectMaxZoom,The length of the statement  "				this.sourceMapRenderOptions.maxZoom = MercatorCoordinateSystem.theInstance.GetZoomRange().Constrain(bestViewContaining.zoom + intParameter.value + BuildConfig.theConfig.autoMaxZoomOffset); " is 188.
Long Statement,MSR.CVE.BackMaker,SourceMap,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMap.cs,GetUserBoundingBox,The length of the statement  "			Present present = warpedMapTileSource.GetUserBounds(null' FutureFeatures.Cached).Realize("SourceMap.AutoSelectMaxZoom"); " is 120.
Long Statement,MSR.CVE.BackMaker,SourceMapLegendFrame,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapLegendFrame.cs,WriteSourceMapLegendFrame,The length of the statement  "				streamWriter.WriteLine(string.Format("<br><img src=\"{0}\" width=\"{1}\" height=\"{2}\">"' current.urlSuffix' current.imageDimensions.Width' current.imageDimensions.Height)); " is 174.
Long Statement,MSR.CVE.BackMaker,SourceMapRecord,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapRecord.cs,thumbnailForLegendFrame,The length of the statement  "			Array.Sort<ThumbnailRecord>(array' (ThumbnailRecord r0' ThumbnailRecord r1) => Math.Abs(Math.Max(r0.size.Width' r0.size.Height) - 200) - Math.Abs(Math.Max(r1.size.Width' r1.size.Height) - 200)); " is 194.
Long Statement,MSR.CVE.BackMaker,SourceMapRegistrationView,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapRegistrationView.cs,WriteXML,The length of the statement  "			writer.WriteAttributeString(SourceMapRegistrationView.lockedAttribute' this.locked.ToString(CultureInfo.InvariantCulture)); " is 123.
Long Statement,MSR.CVE.BackMaker,SourceMapViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapViewManager.cs,LockMaps,The length of the statement  "				MessageBox.Show("Ambiguous correspondences.\r\nIf some of your pushpins overlap' remove the redundant pushpins.\r\nOtherwise' some pushpins are perfectly colinear. Add more correspondences to complete lock."' "Invalid correspondences"' MessageBoxButtons.OK' MessageBoxIcon.Hand); " is 279.
Long Statement,MSR.CVE.BackMaker,SourceMapViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapViewManager.cs,SetupLockedView,The length of the statement  "			this.viewControl.setDisplayedRegistration(new RegistrationControlRecord(warpedMapTileSource.ComputeWarpedRegistration()' this.sourceMap)); " is 138.
Long Statement,MSR.CVE.BackMaker,SourceMapViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapViewManager.cs,SetupUnlockedView,The length of the statement  "			this.viewControl.GetSMViewerControl().SetBaseLayer(this.mapTileSourceFactory.CreateDisplayableUnwarpedSource(this.sourceMap)); " is 126.
Long Statement,MSR.CVE.BackMaker,SourceMapViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapViewManager.cs,DefaultReferenceMapPosition,The length of the statement  "			return SourceMapViewManager.DefaultReferenceMapPosition(this.sourceMap' this.mapTileSourceFactory' this.viewControl' drv); " is 122.
Long Statement,MSR.CVE.BackMaker,SourceMapViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapViewManager.cs,DefaultReferenceMapPosition,The length of the statement  "					return viewControl.GetVEViewerControl().GetCoordinateSystem().GetBestViewContaining(mapRectangle' sMViewerControl.Size); " is 120.
Long Statement,MSR.CVE.BackMaker,TileAddress,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TileAddress.cs,Equals,The length of the statement  "			return tileAddress != null && this.TileX == tileAddress.TileX && this.TileY == tileAddress.TileY && this.ZoomLevel == tileAddress.ZoomLevel; " is 140.
Long Statement,MSR.CVE.BackMaker,TransformationStyleFactory,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransformationStyleFactory.cs,ReadFromXMLAttribute,The length of the statement  "				throw new InvalidMashupFile(context' string.Format("Invalid attribute value {1} for {0}"' TransformationStyle.TransformationStyleNameAttr' attribute)); " is 151.
Long Statement,MSR.CVE.BackMaker,TransparencyOptions,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyOptions.cs,ShouldBeTransparent,The length of the statement  "				if (Math.Abs((int)(current.color.r - r)) <= current.fuzz && Math.Abs((int)(current.color.g - g)) <= current.fuzz && Math.Abs((int)(current.color.b - b)) <= current.fuzz) " is 169.
Long Statement,MSR.CVE.BackMaker,TransparencyOptions,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyOptions.cs,WriteXML,The length of the statement  "			writer.WriteAttributeString("UseDocumentTransparency"' this._useDocumentTransparency.ToString(CultureInfo.InvariantCulture)); " is 125.
Long Statement,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The length of the statement  "			this.useDocumentTransparencyCheckbox.CheckedChanged += new EventHandler(this.useDocumentTransparencyCheckbox_CheckedChanged); " is 125.
Long Statement,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,Configure,The length of the statement  "				this.sourceMap.transparencyOptions.transparencyOptionsChangedEvent -= new TransparencyOptionsChangedDelegate(this.TransparencyChangedHandler); " is 142.
Long Statement,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,Configure,The length of the statement  "				this.sourceMap.transparencyOptions.transparencyOptionsChangedEvent += new TransparencyOptionsChangedDelegate(this.TransparencyChangedHandler); " is 142.
Long Statement,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,exactnessSpinner_ValueChanged,The length of the statement  "				this.sourceMap.transparencyOptions.SetFuzz((TransparencyColor)this.colorGrid.SelectedRows[0].Tag' (int)this.fuzzSpinner.Value); " is 127.
Long Statement,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,haloSpinner_ValueChanged,The length of the statement  "				this.sourceMap.transparencyOptions.SetHalo((TransparencyColor)this.colorGrid.SelectedRows[0].Tag' (int)this.haloSpinner.Value); " is 127.
Long Statement,MSR.CVE.BackMaker,UserRegionViewController,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\UserRegionViewController.cs,UpdateState,The length of the statement  "			TracedScreenPoint[] path = this.GetUserRegion().GetPath(CoordinateSystemUtilities.GetBounds(this.csi' state.center' state.size)' state.center.zoom' this.csi); " is 158.
Long Statement,MSR.CVE.BackMaker,UserRegionViewController,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\UserRegionViewController.cs,AddCorner,The length of the statement  "			Point offsetInPixels = new Point(this.svdp.ScreenCenter().X - newCornerPoint.X' this.svdp.ScreenCenter().Y - newCornerPoint.Y); " is 127.
Long Statement,MSR.CVE.BackMaker,UserRegionViewController,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\UserRegionViewController.cs,Invalidate,The length of the statement  "			AsyncRef asyncRef = (AsyncRef)this.displayableSource.GetUserBounds(this.latentRegionHolder' (FutureFeatures)7).Realize("UserRegionViewController.Invalidate"); " is 158.
Long Statement,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,zoom,The length of the statement  "				this.center().setPosition(CoordinateSystemUtilities.GetZoomedView(this.GetCoordinateSystem()' this.center().llz' zoomFactor)); " is 126.
Long Statement,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,OnMouseDoubleClick,The length of the statement  "				this.center().setPosition(CoordinateSystemUtilities.GetZoomedView(this.GetCoordinateSystem()' this.GetCoordinateSystem().GetTranslationInLatLon(this.center().llz' offsetInPixels)' 1)); " is 184.
Long Statement,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,MessageImage,The length of the statement  "			graphics.DrawString(message' new Font("Arial"' 10f)' new SolidBrush(Color.Crimson)' new PointF((float)tileSize.Width * 0.02f' (float)tileSize.Height * 0.2f)); " is 158.
Long Statement,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,MessageImage,The length of the statement  "			graphics.DrawString(message' new Font("Arial"' 10f)' new SolidBrush(Color.Crimson)' new PointF((float)tileSize.Width * 0.02f' (float)tileSize.Height * 0.8f)); " is 158.
Long Statement,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,MapPositionToPoint,The length of the statement  "			PointF result = new PointF((float)(base.Width / 2 + translationInPixels.X)' (float)(base.Height / 2 + translationInPixels.Y)); " is 126.
Long Statement,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,DrawMarker,The length of the statement  "			RectangleF layoutRectangle = new RectangleF(pointF.X - sizeF.Width / 2f' (float)((double)(pointF.Y - sizeF.Height / 2f) - num)' sizeF.Width' sizeF.Height); " is 155.
Long Statement,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,DrawErrorMarkers,The length of the statement  "			this.DrawErrorPosition(pav' DisplayablePosition.ErrorMarker.AsContributor' this.errorContribPen' this.errorContribBrush' e); " is 124.
Long Statement,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,DrawErrorMarkers,The length of the statement  "			this.DrawErrorPosition(pav' DisplayablePosition.ErrorMarker.AsOutlier' this.errorOutlierPen' this.errorOutlierBrush' e); " is 120.
Long Statement,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,DrawErrorPosition,The length of the statement  "			RectangleF rectangleF = new RectangleF((float)(e.ClipRectangle.X - e.ClipRectangle.Width * 2)' (float)(e.ClipRectangle.Y - e.ClipRectangle.Height * 2)' (float)(e.ClipRectangle.Width * 5)' (float)(e.ClipRectangle.Height * 5)); " is 225.
Long Statement,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,PaintPrintWindow,The length of the statement  "			this.PaintGraphics(e' new LatLonZoom(this.center().llz.lat' this.center().llz.lon' this.center().llz.zoom + extraZoom)); " is 120.
Long Statement,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,AssembleLayer,The length of the statement  "				ViewerControl.MessagePainter item = new ViewerControl.MessagePainter(stackOrder * 12' BigDebugKnob.theKnob.debugFeaturesEnabled ? ex.ToString() : "X"' stackOrder == 0); " is 168.
Long Statement,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,AssembleLayer,The length of the statement  "				clipRegion = ((IBoundsProvider)asyncRef.present).GetRenderRegion().GetClipRegion(defaultCoordinateSystem.GetUnclippedMapWindow(this.center().llz' e.Size)' this.center().llz.zoom' defaultCoordinateSystem); " is 204.
Long Statement,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,AssembleLayer,The length of the statement  "							ViewerControl.MessagePainter item2 = new ViewerControl.MessagePainter(stackOrder * 12' BigDebugKnob.theKnob.debugFeaturesEnabled ? StringUtils.breakLines(presentFailureCode.ToString()) : "X"' stackOrder == 0); " is 209.
Long Statement,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,AssembleLayer,The length of the statement  "							ViewerControl.MessagePainter item3 = new ViewerControl.MessagePainter(stackOrder * 12' stackOrder.ToString()' stackOrder == 0); " is 127.
Long Statement,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,UpdateUserRegion,The length of the statement  "				this.userRegionViewController = new UserRegionViewController(this.GetCoordinateSystem()' this' this.latentRegionHolder' this.baseLayer); " is 136.
Long Statement,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,GetBaseLayerCenterPixel,The length of the statement  "			TileDisplayDescriptorArray tileArrayDescriptor = defaultCoordinateSystem.GetTileArrayDescriptor(this.center().llz' base.Size); " is 126.
Long Statement,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The length of the statement  "            this.creditsTextBox.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 150.
Long Statement,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The length of the statement  "            this.displayProgressBar.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 151.
Long Statement,MSR.CVE.BackMaker,ImagePainter,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,PaintTile,The length of the statement  "					g.DrawImage(this.imageRef.image.IPromiseIAmHoldingGDISLockSoPleaseGiveMeTheImage()' paintLocation' new Rectangle(new Point(0' 0)' this.imageRef.image.Size)' GraphicsUnit.Pixel); " is 177.
Long Statement,MSR.CVE.BackMaker,MessagePainter,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,PaintTile,The length of the statement  "					PointF pointF = new PointF((float)paintLocation.Left + (float)paintLocation.Width * 0.02f + (float)this.offsetPixels' (float)paintLocation.Top + (float)paintLocation.Height * num); " is 180.
Long Statement,MSR.CVE.BackMaker,TileNamePainter,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,PaintTile,The length of the statement  "				g.FillRectangle(brush' new RectangleF(new PointF(point.X - num' point.Y - num)' new SizeF(sizeF.Width + 2f * num' sizeF.Height + 2f * num))); " is 141.
Long Statement,MSR.CVE.BackMaker,VirtualEarthWebDownloader,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\VirtualEarthWebDownloader.cs,StyleIsValid,The length of the statement  "			return s != null && (s == VirtualEarthWebDownloader.RoadStyle || s == VirtualEarthWebDownloader.AerialStyle || s == VirtualEarthWebDownloader.HybridStyle); " is 155.
Long Statement,MSR.CVE.BackMaker,XMLTagReader,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\XMLTagReader.cs,FindNextStartTag,The length of the statement  "					throw new InvalidMashupFile(this.reader' string.Format("Bad Mashup file!  XML tag {0} improperly closed with </{1}> (line {2})"' this.tag' this.reader.Name' this.reader.LineNumber)); " is 182.
Complex Conditional,BackMaker,ProgramInstance,C:\repos\radioman_greatmaps\Tools\MapCruncher\BackMaker\ProgramInstance.cs,ParseArgs,The conditional expression  "list[0] == "-?" || list[0] == "/?" || list[0] == "--help" || list[0] == "-h""  is complex.
Complex Conditional,MSR.CVE.BackMaker.ImagePipeline,FoxitOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FoxitOpenDocument.cs,Render,The conditional expression  "pagesize.Width > 262144 || pagesize.Width <= 0 || pagesize.Height > 262144 || pagesize.Height <= 0"  is complex.
Complex Conditional,MSR.CVE.BackMaker.ImagePipeline,SizeSensitiveCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\SizeSensitiveCache.cs,Clean,The conditional expression  "(purge && this.lruQueue.Count > 0) || (this.memoryUsed > SizeSensitiveCache.paramCacheMaxSize && ((SizeSensitiveCache.oneEntryAtATime && this.lruQueue.Count > 0) || (!SizeSensitiveCache.oneEntryAtATime && this.lruQueue.Count > 1)))"  is complex.
Complex Conditional,MSR.CVE.BackMaker.ImagePipeline,VETileUpsamplerVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileUpsamplerVerb.cs,Evaluate,The conditional expression  "(i == -1 && srcRect.X >= (float)size.Width) || (i == 1 && srcRect.Right < (float)(2 * size.Width - 1))"  is complex.
Complex Conditional,MSR.CVE.BackMaker.ImagePipeline,VETileUpsamplerVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileUpsamplerVerb.cs,Evaluate,The conditional expression  "(j == -1 && srcRect.Y >= (float)size.Height) || (j == 1 && srcRect.Bottom < (float)(2 * size.Height - 1))"  is complex.
Complex Conditional,MSR.CVE.BackMaker,FastImageWarper,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FastImageWarper.cs,doWarp,The conditional expression  "((x >= 0) && (x < num10)) && ((num2 >= 0) && (num2 < num11))"  is complex.
Complex Conditional,MSR.CVE.BackMaker,FastImageWarper,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FastImageWarper.cs,doWarp,The conditional expression  "((x >= 0) && (x < num10)) && ((num2 >= 0) && (num2 < num11))"  is complex.
Complex Conditional,MSR.CVE.BackMaker,S3Adaptor,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3Adaptor.cs,EncodeKeyForSignature,The conditional expression  "(c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9') || c == '/' || c == '.'"  is complex.
Complex Conditional,MSR.CVE.BackMaker,S3Adaptor,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3Adaptor.cs,BuildWebRequest,The conditional expression  "text == "content-type" || text == "content-md5" || text == "date" || text.StartsWith("x-amz-")"  is complex.
Virtual Method Call from Constructor,MSR.CVE.BackMaker.ImagePipeline,WarpedMapTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WarpedMapTileSource.cs,WarpedMapTileSource,The constructor "WarpedMapTileSource" calls a virtual method "getCorrespondencesRequired".
Virtual Method Call from Constructor,MSR.CVE.BackMaker.ImagePipeline,WarpedMapTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WarpedMapTileSource.cs,WarpedMapTileSource,The constructor "WarpedMapTileSource" calls a virtual method "getImageTransformer".
Virtual Method Call from Constructor,MSR.CVE.BackMaker,SourceMapRecord,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapRecord.cs,SourceMapRecord,The constructor "SourceMapRecord" calls a virtual method "getImageTransformer".
Empty Catch Block,MSR.CVE.BackMaker.ImagePipeline,DiskCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\DiskCache.cs,UpdateStableFreshCount,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker.ImagePipeline,DiskCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\DiskCache.cs,EvictStaleFiles,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker.MCDebug,DiagnosticUI,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.MCDebug\DiagnosticUI.cs,ResourceCounterCallback,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,BuildConfig,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\BuildConfig.cs,Initialize,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,DegreesMinutesSeconds,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DegreesMinutesSeconds.cs,ParseLatLon,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,DegreesMinutesSeconds,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DegreesMinutesSeconds.cs,ParseLatLon,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,DegreesMinutesSeconds,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DegreesMinutesSeconds.cs,ParseLatLon,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,DynamicallyCompositingLayerViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DynamicallyCompositingLayerViewManager.cs,Activate,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,DynamicallyCompositingLayerViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DynamicallyCompositingLayerViewManager.cs,Activate,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,FileOutputMethod,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FileOutputMethod.cs,EmptyDirectory,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,NodeSelectedHandler,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,HandleUpdate,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,RestoreWindowParameters,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,ManifestBlock,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Manifest.cs,ManifestBlock,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,NamedPipeServer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\NamedPipeServer.cs,Dispose,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,RenderAll,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,ArrangeLayerDirectories,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,SourceMap,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMap.cs,SourceMap,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,SourceMap,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMap.cs,GetUserBoundingBox,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,SourceMapRecord,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapRecord.cs,SourceMapRecord,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,SourceMapViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapViewManager.cs,Activate,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,SourceMapViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapViewManager.cs,Activate,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,SourceMapViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapViewManager.cs,DefaultReferenceMapPosition,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,SourceMapViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapViewManager.cs,DefaultReferenceMapPosition,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,SourceMapViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapViewManager.cs,PreviewSourceMapZoom,The method has an empty catch block.
Empty Catch Block,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InvalidatePipeline,The method has an empty catch block.
Magic Number,BackMaker,ProgramInstance,C:\repos\radioman_greatmaps\Tools\MapCruncher\BackMaker\ProgramInstance.cs,Main,The following statement contains a magic number: try  			{  				this.ParseArgs(args);  				try  				{  					BuildConfig.Initialize();  					if (BuildConfig.theConfig.buildConfiguration == "Broken")  					{  						throw new ConfigurationException("MapCruncher configuration is broken. Please reinstall MapCruncher.");  					}    					if (this.remoteFoxitServer != null)  					{  						int result = this.remoteFoxitServer.Run();  						return result;  					}  					Application.EnableVisualStyles();  					mainAppForm = new MainAppForm(this.startDocumentPath' this.renderOnLaunch);  					mainAppForm.StartUpApplication();  				}  				catch (ConfigurationException ex)  				{  					D.Say(0' ex.ToString());  					HTMLMessageBox.Show(ex.Message' "MapCruncher Configuration Problem");  					int result = 2;  					return result;  				}  				Application.Run(mainAppForm);  			}  			finally  			{  				DebugThreadInterrupter.theInstance.Quit();  				if (mainAppForm != null)  				{  					mainAppForm.UndoConstruction();  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,tql2,The following statement contains a magic number: double num3 = Math.Pow(2.0' -52.0);
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,tql2,The following statement contains a magic number: double num3 = Math.Pow(2.0' -52.0);
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,tql2,The following statement contains a magic number: for (int j = 0; j < this.n; j++)  			{  				num2 = Math.Max(num2' Math.Abs(this.d[j]) + Math.Abs(this.e[j]));  				int k;  				for (k = j; k < this.n; k++)  				{  					if (Math.Abs(this.e[k]) <= num3 * num2)  					{  						break;  					}  				}  				if (k > j)  				{  					int num4 = 0;  					do  					{  						num4++;  						double num5 = this.d[j];  						double num6 = (this.d[j + 1] - num5) / (2.0 * this.e[j]);  						double num7 = Maths.hypot(num6' 1.0);  						if (num6 < 0.0)  						{  							num7 = -num7;  						}  						this.d[j] = this.e[j] / (num6 + num7);  						this.d[j + 1] = this.e[j] * (num6 + num7);  						double num8 = this.d[j + 1];  						double num9 = num5 - this.d[j];  						for (int i = j + 2; i < this.n; i++)  						{  							this.d[i] -= num9;  						}  						num += num9;  						num6 = this.d[k];  						double num10 = 1.0;  						double num11 = num10;  						double num12 = num10;  						double num13 = this.e[j + 1];  						double num14 = 0.0;  						double num15 = 0.0;  						for (int i = k - 1; i >= j; i--)  						{  							num12 = num11;  							num11 = num10;  							num15 = num14;  							num5 = num10 * this.e[i];  							num9 = num10 * num6;  							num7 = Maths.hypot(num6' this.e[i]);  							this.e[i + 1] = num14 * num7;  							num14 = this.e[i] / num7;  							num10 = num6 / num7;  							num6 = num10 * this.d[i] - num14 * num5;  							this.d[i + 1] = num9 + num14 * (num10 * num5 + num14 * this.d[i]);  							for (int l = 0; l < this.n; l++)  							{  								num9 = this.V[l][i + 1];  								this.V[l][i + 1] = num14 * this.V[l][i] + num10 * num9;  								this.V[l][i] = num10 * this.V[l][i] - num14 * num9;  							}  						}  						num6 = -num14 * num15 * num12 * num13 * this.e[j] / num8;  						this.e[j] = num14 * num6;  						this.d[j] = num10 * num6;  					}  					while (Math.Abs(this.e[j]) > num3 * num2);  				}  				this.d[j] = this.d[j] + num;  				this.e[j] = 0.0;  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,tql2,The following statement contains a magic number: for (int j = 0; j < this.n; j++)  			{  				num2 = Math.Max(num2' Math.Abs(this.d[j]) + Math.Abs(this.e[j]));  				int k;  				for (k = j; k < this.n; k++)  				{  					if (Math.Abs(this.e[k]) <= num3 * num2)  					{  						break;  					}  				}  				if (k > j)  				{  					int num4 = 0;  					do  					{  						num4++;  						double num5 = this.d[j];  						double num6 = (this.d[j + 1] - num5) / (2.0 * this.e[j]);  						double num7 = Maths.hypot(num6' 1.0);  						if (num6 < 0.0)  						{  							num7 = -num7;  						}  						this.d[j] = this.e[j] / (num6 + num7);  						this.d[j + 1] = this.e[j] * (num6 + num7);  						double num8 = this.d[j + 1];  						double num9 = num5 - this.d[j];  						for (int i = j + 2; i < this.n; i++)  						{  							this.d[i] -= num9;  						}  						num += num9;  						num6 = this.d[k];  						double num10 = 1.0;  						double num11 = num10;  						double num12 = num10;  						double num13 = this.e[j + 1];  						double num14 = 0.0;  						double num15 = 0.0;  						for (int i = k - 1; i >= j; i--)  						{  							num12 = num11;  							num11 = num10;  							num15 = num14;  							num5 = num10 * this.e[i];  							num9 = num10 * num6;  							num7 = Maths.hypot(num6' this.e[i]);  							this.e[i + 1] = num14 * num7;  							num14 = this.e[i] / num7;  							num10 = num6 / num7;  							num6 = num10 * this.d[i] - num14 * num5;  							this.d[i + 1] = num9 + num14 * (num10 * num5 + num14 * this.d[i]);  							for (int l = 0; l < this.n; l++)  							{  								num9 = this.V[l][i + 1];  								this.V[l][i + 1] = num14 * this.V[l][i] + num10 * num9;  								this.V[l][i] = num10 * this.V[l][i] - num14 * num9;  							}  						}  						num6 = -num14 * num15 * num12 * num13 * this.e[j] / num8;  						this.e[j] = num14 * num6;  						this.d[j] = num10 * num6;  					}  					while (Math.Abs(this.e[j]) > num3 * num2);  				}  				this.d[j] = this.d[j] + num;  				this.e[j] = 0.0;  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: double num4 = Math.Pow(2.0' -52.0);
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: double num4 = Math.Pow(2.0' -52.0);
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: while (i >= num2)  			{  				int l;  				for (l = i; l > num2; l--)  				{  					num9 = Math.Abs(this.H[l - 1][l - 1]) + Math.Abs(this.H[l][l]);  					if (num9 == 0.0)  					{  						num9 = num11;  					}  					if (Math.Abs(this.H[l][l - 1]) < num4 * num9)  					{  						break;  					}  				}  				if (l == i)  				{  					this.H[i][i] = this.H[i][i] + num5;  					this.d[i] = this.H[i][i];  					this.e[i] = 0.0;  					i--;  					num12 = 0;  				}  				else  				{  					if (l == i - 1)  					{  						double num13 = this.H[i][i - 1] * this.H[i - 1][i];  						num6 = (this.H[i - 1][i - 1] - this.H[i][i]) / 2.0;  						num7 = num6 * num6 + num13;  						num10 = Math.Sqrt(Math.Abs(num7));  						this.H[i][i] = this.H[i][i] + num5;  						this.H[i - 1][i - 1] = this.H[i - 1][i - 1] + num5;  						double num14 = this.H[i][i];  						if (num7 >= 0.0)  						{  							if (num6 >= 0.0)  							{  								num10 = num6 + num10;  							}  							else  							{  								num10 = num6 - num10;  							}  							this.d[i - 1] = num14 + num10;  							this.d[i] = this.d[i - 1];  							if (num10 != 0.0)  							{  								this.d[i] = num14 - num13 / num10;  							}  							this.e[i - 1] = 0.0;  							this.e[i] = 0.0;  							num14 = this.H[i][i - 1];  							num9 = Math.Abs(num14) + Math.Abs(num10);  							num6 = num14 / num9;  							num7 = num10 / num9;  							num8 = Math.Sqrt(num6 * num6 + num7 * num7);  							num6 /= num8;  							num7 /= num8;  							for (int k = i - 1; k < num; k++)  							{  								num10 = this.H[i - 1][k];  								this.H[i - 1][k] = num7 * num10 + num6 * this.H[i][k];  								this.H[i][k] = num7 * this.H[i][k] - num6 * num10;  							}  							for (int j = 0; j <= i; j++)  							{  								num10 = this.H[j][i - 1];  								this.H[j][i - 1] = num7 * num10 + num6 * this.H[j][i];  								this.H[j][i] = num7 * this.H[j][i] - num6 * num10;  							}  							for (int j = num2; j <= num3; j++)  							{  								num10 = this.V[j][i - 1];  								this.V[j][i - 1] = num7 * num10 + num6 * this.V[j][i];  								this.V[j][i] = num7 * this.V[j][i] - num6 * num10;  							}  						}  						else  						{  							this.d[i - 1] = num14 + num6;  							this.d[i] = num14 + num6;  							this.e[i - 1] = num10;  							this.e[i] = -num10;  						}  						i -= 2;  						num12 = 0;  					}  					else  					{  						double num14 = this.H[i][i];  						double num15 = 0.0;  						double num13 = 0.0;  						if (l < i)  						{  							num15 = this.H[i - 1][i - 1];  							num13 = this.H[i][i - 1] * this.H[i - 1][i];  						}  						if (num12 == 10)  						{  							num5 += num14;  							for (int j = num2; j <= i; j++)  							{  								this.H[j][j] -= num14;  							}  							num9 = Math.Abs(this.H[i][i - 1]) + Math.Abs(this.H[i - 1][i - 2]);  							num15 = (num14 = 0.75 * num9);  							num13 = -0.4375 * num9 * num9;  						}  						if (num12 == 30)  						{  							num9 = (num15 - num14) / 2.0;  							num9 = num9 * num9 + num13;  							if (num9 > 0.0)  							{  								num9 = Math.Sqrt(num9);  								if (num15 < num14)  								{  									num9 = -num9;  								}  								num9 = num14 - num13 / ((num15 - num14) / 2.0 + num9);  								for (int j = num2; j <= i; j++)  								{  									this.H[j][j] -= num9;  								}  								num5 += num9;  								num15 = (num14 = (num13 = 0.964));  							}  						}  						num12++;  						int m;  						for (m = i - 2; m >= l; m--)  						{  							num10 = this.H[m][m];  							num8 = num14 - num10;  							num9 = num15 - num10;  							num6 = (num8 * num9 - num13) / this.H[m + 1][m] + this.H[m][m + 1];  							num7 = this.H[m + 1][m + 1] - num10 - num8 - num9;  							num8 = this.H[m + 2][m + 1];  							num9 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  							num6 /= num9;  							num7 /= num9;  							num8 /= num9;  							if (m == l)  							{  								break;  							}  							if (Math.Abs(this.H[m][m - 1]) * (Math.Abs(num7) + Math.Abs(num8)) < num4 * (Math.Abs(num6) * (Math.Abs(this.H[m - 1][m - 1]) + Math.Abs(num10) + Math.Abs(this.H[m + 1][m + 1]))))  							{  								break;  							}  						}  						for (int j = m + 2; j <= i; j++)  						{  							this.H[j][j - 2] = 0.0;  							if (j > m + 2)  							{  								this.H[j][j - 3] = 0.0;  							}  						}  						for (int n = m; n <= i - 1; n++)  						{  							bool flag = n != i - 1;  							if (n != m)  							{  								num6 = this.H[n][n - 1];  								num7 = this.H[n + 1][n - 1];  								num8 = (flag ? this.H[n + 2][n - 1] : 0.0);  								num14 = Math.Abs(num6) + Math.Abs(num7) + Math.Abs(num8);  								if (num14 != 0.0)  								{  									num6 /= num14;  									num7 /= num14;  									num8 /= num14;  								}  							}  							if (num14 == 0.0)  							{  								break;  							}  							num9 = Math.Sqrt(num6 * num6 + num7 * num7 + num8 * num8);  							if (num6 < 0.0)  							{  								num9 = -num9;  							}  							if (num9 != 0.0)  							{  								if (n != m)  								{  									this.H[n][n - 1] = -num9 * num14;  								}  								else  								{  									if (l != m)  									{  										this.H[n][n - 1] = -this.H[n][n - 1];  									}  								}  								num6 += num9;  								num14 = num6 / num9;  								num15 = num7 / num9;  								num10 = num8 / num9;  								num7 /= num6;  								num8 /= num6;  								for (int k = n; k < num; k++)  								{  									num6 = this.H[n][k] + num7 * this.H[n + 1][k];  									if (flag)  									{  										num6 += num8 * this.H[n + 2][k];  										this.H[n + 2][k] = this.H[n + 2][k] - num6 * num10;  									}  									this.H[n][k] = this.H[n][k] - num6 * num14;  									this.H[n + 1][k] = this.H[n + 1][k] - num6 * num15;  								}  								for (int j = 0; j <= Math.Min(i' n + 3); j++)  								{  									num6 = num14 * this.H[j][n] + num15 * this.H[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.H[j][n + 2];  										this.H[j][n + 2] = this.H[j][n + 2] - num6 * num8;  									}  									this.H[j][n] = this.H[j][n] - num6;  									this.H[j][n + 1] = this.H[j][n + 1] - num6 * num7;  								}  								for (int j = num2; j <= num3; j++)  								{  									num6 = num14 * this.V[j][n] + num15 * this.V[j][n + 1];  									if (flag)  									{  										num6 += num10 * this.V[j][n + 2];  										this.V[j][n + 2] = this.V[j][n + 2] - num6 * num8;  									}  									this.V[j][n] = this.V[j][n] - num6;  									this.V[j][n + 1] = this.V[j][n + 1] - num6 * num7;  								}  							}  						}  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: if (num11 != 0.0)  			{  				for (i = num - 1; i >= 0; i--)  				{  					num6 = this.d[i];  					num7 = this.e[i];  					if (num7 == 0.0)  					{  						int l = i;  						this.H[i][i] = 1.0;  						for (int j = i - 1; j >= 0; j--)  						{  							double num13 = this.H[j][j] - num6;  							num8 = 0.0;  							for (int k = l; k <= i; k++)  							{  								num8 += this.H[j][k] * this.H[k][i];  							}  							if (this.e[j] < 0.0)  							{  								num10 = num13;  								num9 = num8;  							}  							else  							{  								l = j;  								double num16;  								if (this.e[j] == 0.0)  								{  									if (num13 != 0.0)  									{  										this.H[j][i] = -num8 / num13;  									}  									else  									{  										this.H[j][i] = -num8 / (num4 * num11);  									}  								}  								else  								{  									double num14 = this.H[j][j + 1];  									double num15 = this.H[j + 1][j];  									num7 = (this.d[j] - num6) * (this.d[j] - num6) + this.e[j] * this.e[j];  									num16 = (num14 * num9 - num10 * num8) / num7;  									this.H[j][i] = num16;  									if (Math.Abs(num14) > Math.Abs(num10))  									{  										this.H[j + 1][i] = (-num8 - num13 * num16) / num14;  									}  									else  									{  										this.H[j + 1][i] = (-num9 - num15 * num16) / num10;  									}  								}  								num16 = Math.Abs(this.H[j][i]);  								if (num4 * num16 * num16 > 1.0)  								{  									for (int k = j; k <= i; k++)  									{  										this.H[k][i] = this.H[k][i] / num16;  									}  								}  							}  						}  					}  					else  					{  						if (num7 < 0.0)  						{  							int l = i - 1;  							if (Math.Abs(this.H[i][i - 1]) > Math.Abs(this.H[i - 1][i]))  							{  								this.H[i - 1][i - 1] = num7 / this.H[i][i - 1];  								this.H[i - 1][i] = -(this.H[i][i] - num6) / this.H[i][i - 1];  							}  							else  							{  								this.cdiv(0.0' -this.H[i - 1][i]' this.H[i - 1][i - 1] - num6' num7);  								this.H[i - 1][i - 1] = this.cdivr;  								this.H[i - 1][i] = this.cdivi;  							}  							this.H[i][i - 1] = 0.0;  							this.H[i][i] = 1.0;  							for (int j = i - 2; j >= 0; j--)  							{  								double num17 = 0.0;  								double num18 = 0.0;  								for (int k = l; k <= i; k++)  								{  									num17 += this.H[j][k] * this.H[k][i - 1];  									num18 += this.H[j][k] * this.H[k][i];  								}  								double num13 = this.H[j][j] - num6;  								if (this.e[j] < 0.0)  								{  									num10 = num13;  									num8 = num17;  									num9 = num18;  								}  								else  								{  									l = j;  									if (this.e[j] == 0.0)  									{  										this.cdiv(-num17' -num18' num13' num7);  										this.H[j][i - 1] = this.cdivr;  										this.H[j][i] = this.cdivi;  									}  									else  									{  										double num14 = this.H[j][j + 1];  										double num15 = this.H[j + 1][j];  										double num19 = (this.d[j] - num6) * (this.d[j] - num6) + this.e[j] * this.e[j] - num7 * num7;  										double num20 = (this.d[j] - num6) * 2.0 * num7;  										if (num19 == 0.0 & num20 == 0.0)  										{  											num19 = num4 * num11 * (Math.Abs(num13) + Math.Abs(num7) + Math.Abs(num14) + Math.Abs(num15) + Math.Abs(num10));  										}  										this.cdiv(num14 * num8 - num10 * num17 + num7 * num18' num14 * num9 - num10 * num18 - num7 * num17' num19' num20);  										this.H[j][i - 1] = this.cdivr;  										this.H[j][i] = this.cdivi;  										if (Math.Abs(num14) > Math.Abs(num10) + Math.Abs(num7))  										{  											this.H[j + 1][i - 1] = (-num17 - num13 * this.H[j][i - 1] + num7 * this.H[j][i]) / num14;  											this.H[j + 1][i] = (-num18 - num13 * this.H[j][i] - num7 * this.H[j][i - 1]) / num14;  										}  										else  										{  											this.cdiv(-num8 - num15 * this.H[j][i - 1]' -num9 - num15 * this.H[j][i]' num10' num7);  											this.H[j + 1][i - 1] = this.cdivr;  											this.H[j + 1][i] = this.cdivi;  										}  									}  									double num16 = Math.Max(Math.Abs(this.H[j][i - 1])' Math.Abs(this.H[j][i]));  									if (num4 * num16 * num16 > 1.0)  									{  										for (int k = j; k <= i; k++)  										{  											this.H[k][i - 1] = this.H[k][i - 1] / num16;  											this.H[k][i] = this.H[k][i] / num16;  										}  									}  								}  							}  						}  					}  				}  				for (int j = 0; j < num; j++)  				{  					if (j < num2 | j > num3)  					{  						for (int k = j; k < num; k++)  						{  							this.V[j][k] = this.H[j][k];  						}  					}  				}  				for (int k = num - 1; k >= num2; k--)  				{  					for (int j = num2; j <= num3; j++)  					{  						num10 = 0.0;  						for (int n = num2; n <= Math.Min(k' num3); n++)  						{  							num10 += this.V[j][n] * this.H[n][k];  						}  						this.V[j][k] = num10;  					}  				}  			}
Magic Number,Jama,EigenvalueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\EigenvalueDecomposition.cs,hqr2,The following statement contains a magic number: if (num11 != 0.0)  			{  				for (i = num - 1; i >= 0; i--)  				{  					num6 = this.d[i];  					num7 = this.e[i];  					if (num7 == 0.0)  					{  						int l = i;  						this.H[i][i] = 1.0;  						for (int j = i - 1; j >= 0; j--)  						{  							double num13 = this.H[j][j] - num6;  							num8 = 0.0;  							for (int k = l; k <= i; k++)  							{  								num8 += this.H[j][k] * this.H[k][i];  							}  							if (this.e[j] < 0.0)  							{  								num10 = num13;  								num9 = num8;  							}  							else  							{  								l = j;  								double num16;  								if (this.e[j] == 0.0)  								{  									if (num13 != 0.0)  									{  										this.H[j][i] = -num8 / num13;  									}  									else  									{  										this.H[j][i] = -num8 / (num4 * num11);  									}  								}  								else  								{  									double num14 = this.H[j][j + 1];  									double num15 = this.H[j + 1][j];  									num7 = (this.d[j] - num6) * (this.d[j] - num6) + this.e[j] * this.e[j];  									num16 = (num14 * num9 - num10 * num8) / num7;  									this.H[j][i] = num16;  									if (Math.Abs(num14) > Math.Abs(num10))  									{  										this.H[j + 1][i] = (-num8 - num13 * num16) / num14;  									}  									else  									{  										this.H[j + 1][i] = (-num9 - num15 * num16) / num10;  									}  								}  								num16 = Math.Abs(this.H[j][i]);  								if (num4 * num16 * num16 > 1.0)  								{  									for (int k = j; k <= i; k++)  									{  										this.H[k][i] = this.H[k][i] / num16;  									}  								}  							}  						}  					}  					else  					{  						if (num7 < 0.0)  						{  							int l = i - 1;  							if (Math.Abs(this.H[i][i - 1]) > Math.Abs(this.H[i - 1][i]))  							{  								this.H[i - 1][i - 1] = num7 / this.H[i][i - 1];  								this.H[i - 1][i] = -(this.H[i][i] - num6) / this.H[i][i - 1];  							}  							else  							{  								this.cdiv(0.0' -this.H[i - 1][i]' this.H[i - 1][i - 1] - num6' num7);  								this.H[i - 1][i - 1] = this.cdivr;  								this.H[i - 1][i] = this.cdivi;  							}  							this.H[i][i - 1] = 0.0;  							this.H[i][i] = 1.0;  							for (int j = i - 2; j >= 0; j--)  							{  								double num17 = 0.0;  								double num18 = 0.0;  								for (int k = l; k <= i; k++)  								{  									num17 += this.H[j][k] * this.H[k][i - 1];  									num18 += this.H[j][k] * this.H[k][i];  								}  								double num13 = this.H[j][j] - num6;  								if (this.e[j] < 0.0)  								{  									num10 = num13;  									num8 = num17;  									num9 = num18;  								}  								else  								{  									l = j;  									if (this.e[j] == 0.0)  									{  										this.cdiv(-num17' -num18' num13' num7);  										this.H[j][i - 1] = this.cdivr;  										this.H[j][i] = this.cdivi;  									}  									else  									{  										double num14 = this.H[j][j + 1];  										double num15 = this.H[j + 1][j];  										double num19 = (this.d[j] - num6) * (this.d[j] - num6) + this.e[j] * this.e[j] - num7 * num7;  										double num20 = (this.d[j] - num6) * 2.0 * num7;  										if (num19 == 0.0 & num20 == 0.0)  										{  											num19 = num4 * num11 * (Math.Abs(num13) + Math.Abs(num7) + Math.Abs(num14) + Math.Abs(num15) + Math.Abs(num10));  										}  										this.cdiv(num14 * num8 - num10 * num17 + num7 * num18' num14 * num9 - num10 * num18 - num7 * num17' num19' num20);  										this.H[j][i - 1] = this.cdivr;  										this.H[j][i] = this.cdivi;  										if (Math.Abs(num14) > Math.Abs(num10) + Math.Abs(num7))  										{  											this.H[j + 1][i - 1] = (-num17 - num13 * this.H[j][i - 1] + num7 * this.H[j][i]) / num14;  											this.H[j + 1][i] = (-num18 - num13 * this.H[j][i] - num7 * this.H[j][i - 1]) / num14;  										}  										else  										{  											this.cdiv(-num8 - num15 * this.H[j][i - 1]' -num9 - num15 * this.H[j][i]' num10' num7);  											this.H[j + 1][i - 1] = this.cdivr;  											this.H[j + 1][i] = this.cdivi;  										}  									}  									double num16 = Math.Max(Math.Abs(this.H[j][i - 1])' Math.Abs(this.H[j][i]));  									if (num4 * num16 * num16 > 1.0)  									{  										for (int k = j; k <= i; k++)  										{  											this.H[k][i - 1] = this.H[k][i - 1] / num16;  											this.H[k][i] = this.H[k][i] / num16;  										}  									}  								}  							}  						}  					}  				}  				for (int j = 0; j < num; j++)  				{  					if (j < num2 | j > num3)  					{  						for (int k = j; k < num; k++)  						{  							this.V[j][k] = this.H[j][k];  						}  					}  				}  				for (int k = num - 1; k >= num2; k--)  				{  					for (int j = num2; j <= num3; j++)  					{  						num10 = 0.0;  						for (int n = num2; n <= Math.Min(k' num3); n++)  						{  							num10 += this.V[j][n] * this.H[n][k];  						}  						this.V[j][k] = num10;  					}  				}  			}
Magic Number,Jama,JamaMatrix,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\JamaMatrix.cs,read,The following statement contains a magic number: streamTokenizerSupport.WordChars(0' 255);
Magic Number,Jama,JamaMatrix,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\JamaMatrix.cs,read,The following statement contains a magic number: streamTokenizerSupport.WhitespaceChars(0' 32);
Magic Number,Jama,JamaMatrix,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\JamaMatrix.cs,read,The following statement contains a magic number: ArrayList arrayList = ArrayList.Synchronized(new ArrayList(10));
Magic Number,Jama,JamaMatrix,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\JamaMatrix.cs,read,The following statement contains a magic number: while (streamTokenizerSupport.NextToken() == 10)  			{  			}
Magic Number,Jama,JamaMatrix,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\JamaMatrix.cs,read,The following statement contains a magic number: do  			{  				arrayList.Add(double.Parse(streamTokenizerSupport.sval));  			}  			while (streamTokenizerSupport.NextToken() == -3);
Magic Number,Jama,JamaMatrix,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\JamaMatrix.cs,read,The following statement contains a magic number: IL_16F:  			while (streamTokenizerSupport.NextToken() == -3)  			{  				arrayList.Add(array = new double[count]);  				int i = 0;  				while (i < count)  				{  					array[i++] = double.Parse(streamTokenizerSupport.sval);  					if (streamTokenizerSupport.NextToken() != -3)  					{  						if (i < count)  						{  							throw new IOException("Row " + arrayList.Count + " is too short.");  						}  						goto IL_16F;  					}  				}  				throw new IOException("Row " + arrayList.Count + " is too long.");  			}
Magic Number,Jama,JamaMatrix,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\JamaMatrix.cs,read,The following statement contains a magic number: IL_16F:  			while (streamTokenizerSupport.NextToken() == -3)  			{  				arrayList.Add(array = new double[count]);  				int i = 0;  				while (i < count)  				{  					array[i++] = double.Parse(streamTokenizerSupport.sval);  					if (streamTokenizerSupport.NextToken() != -3)  					{  						if (i < count)  						{  							throw new IOException("Row " + arrayList.Count + " is too short.");  						}  						goto IL_16F;  					}  				}  				throw new IOException("Row " + arrayList.Count + " is too long.");  			}
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: int num3 = Math.Max(0' Math.Min(this.n - 2' this.m));
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: double num7 = Math.Pow(2.0' -52.0);
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: double num7 = Math.Pow(2.0' -52.0);
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: double num8 = Math.Pow(2.0' -966.0);
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: double num8 = Math.Pow(2.0' -966.0);
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: while (m > 0)  			{  				int k;  				for (k = m - 2; k >= -1; k--)  				{  					if (k == -1)  					{  						break;  					}  					if (Math.Abs(array[k]) <= num8 + num7 * (Math.Abs(this.s[k]) + Math.Abs(this.s[k + 1])))  					{  						array[k] = 0.0;  						break;  					}  				}  				int num9;  				if (k == m - 2)  				{  					num9 = 4;  				}  				else  				{  					int n;  					for (n = m - 1; n >= k; n--)  					{  						if (n == k)  						{  							break;  						}  						double num4 = ((n != m) ? Math.Abs(array[n]) : 0.0) + ((n != k + 1) ? Math.Abs(array[n - 1]) : 0.0);  						if (Math.Abs(this.s[n]) <= num8 + num7 * num4)  						{  							this.s[n] = 0.0;  							break;  						}  					}  					if (n == k)  					{  						num9 = 3;  					}  					else  					{  						if (n == m - 1)  						{  							num9 = 1;  						}  						else  						{  							num9 = 2;  							k = n;  						}  					}  				}  				k++;  				switch (num9)  				{  				case 1:  				{  					double num10 = array[m - 2];  					array[m - 2] = 0.0;  					for (int l = m - 2; l >= k; l--)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						if (l != k)  						{  							num10 = -num12 * array[l - 1];  							array[l - 1] = num11 * array[l - 1];  						}  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][m - 1];  								this.V[i][m - 1] = -num12 * this.V[i][l] + num11 * this.V[i][m - 1];  								this.V[i][l] = num4;  							}  						}  					}  					break;  				}  				case 2:  				{  					double num10 = array[k - 1];  					array[k - 1] = 0.0;  					for (int l = k; l < m; l++)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						num10 = -num12 * array[l];  						array[l] = num11 * array[l];  						if (flag)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][k - 1];  								this.U[i][k - 1] = -num12 * this.U[i][l] + num11 * this.U[i][k - 1];  								this.U[i][l] = num4;  							}  						}  					}  					break;  				}  				case 3:  				{  					double num13 = Math.Max(Math.Max(Math.Max(Math.Max(Math.Abs(this.s[m - 1])' Math.Abs(this.s[m - 2]))' Math.Abs(array[m - 2]))' Math.Abs(this.s[k]))' Math.Abs(array[k]));  					double num14 = this.s[m - 1] / num13;  					double num15 = this.s[m - 2] / num13;  					double num16 = array[m - 2] / num13;  					double num17 = this.s[k] / num13;  					double num18 = array[k] / num13;  					double num19 = ((num15 + num14) * (num15 - num14) + num16 * num16) / 2.0;  					double num20 = num14 * num16 * (num14 * num16);  					double num21 = 0.0;  					if (num19 != 0.0 | num20 != 0.0)  					{  						num21 = Math.Sqrt(num19 * num19 + num20);  						if (num19 < 0.0)  						{  							num21 = -num21;  						}  						num21 = num20 / (num19 + num21);  					}  					double num10 = (num17 + num14) * (num17 - num14) + num21;  					double num22 = num17 * num18;  					for (int l = k; l < m - 1; l++)  					{  						double num4 = Maths.hypot(num10' num22);  						double num11 = num10 / num4;  						double num12 = num22 / num4;  						if (l != k)  						{  							array[l - 1] = num4;  						}  						num10 = num11 * this.s[l] + num12 * array[l];  						array[l] = num11 * array[l] - num12 * this.s[l];  						num22 = num12 * this.s[l + 1];  						this.s[l + 1] = num11 * this.s[l + 1];  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][l + 1];  								this.V[i][l + 1] = -num12 * this.V[i][l] + num11 * this.V[i][l + 1];  								this.V[i][l] = num4;  							}  						}  						num4 = Maths.hypot(num10' num22);  						num11 = num10 / num4;  						num12 = num22 / num4;  						this.s[l] = num4;  						num10 = num11 * array[l] + num12 * this.s[l + 1];  						this.s[l + 1] = -num12 * array[l] + num11 * this.s[l + 1];  						num22 = num12 * array[l + 1];  						array[l + 1] = num11 * array[l + 1];  						if (flag && l < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][l + 1];  								this.U[i][l + 1] = -num12 * this.U[i][l] + num11 * this.U[i][l + 1];  								this.U[i][l] = num4;  							}  						}  					}  					array[m - 2] = num10;  					num6++;  					break;  				}  				case 4:  					if (this.s[k] <= 0.0)  					{  						this.s[k] = ((this.s[k] < 0.0) ? (-this.s[k]) : 0.0);  						if (flag2)  						{  							for (int i = 0; i <= num5; i++)  							{  								this.V[i][k] = -this.V[i][k];  							}  						}  					}  					while (k < num5)  					{  						if (this.s[k] >= this.s[k + 1])  						{  							break;  						}  						double num4 = this.s[k];  						this.s[k] = this.s[k + 1];  						this.s[k + 1] = num4;  						if (flag2 && k < this.n - 1)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = this.V[i][k + 1];  								this.V[i][k + 1] = this.V[i][k];  								this.V[i][k] = num4;  							}  						}  						if (flag && k < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = this.U[i][k + 1];  								this.U[i][k + 1] = this.U[i][k];  								this.U[i][k] = num4;  							}  						}  						k++;  					}  					num6 = 0;  					m--;  					break;  				}  			}
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: while (m > 0)  			{  				int k;  				for (k = m - 2; k >= -1; k--)  				{  					if (k == -1)  					{  						break;  					}  					if (Math.Abs(array[k]) <= num8 + num7 * (Math.Abs(this.s[k]) + Math.Abs(this.s[k + 1])))  					{  						array[k] = 0.0;  						break;  					}  				}  				int num9;  				if (k == m - 2)  				{  					num9 = 4;  				}  				else  				{  					int n;  					for (n = m - 1; n >= k; n--)  					{  						if (n == k)  						{  							break;  						}  						double num4 = ((n != m) ? Math.Abs(array[n]) : 0.0) + ((n != k + 1) ? Math.Abs(array[n - 1]) : 0.0);  						if (Math.Abs(this.s[n]) <= num8 + num7 * num4)  						{  							this.s[n] = 0.0;  							break;  						}  					}  					if (n == k)  					{  						num9 = 3;  					}  					else  					{  						if (n == m - 1)  						{  							num9 = 1;  						}  						else  						{  							num9 = 2;  							k = n;  						}  					}  				}  				k++;  				switch (num9)  				{  				case 1:  				{  					double num10 = array[m - 2];  					array[m - 2] = 0.0;  					for (int l = m - 2; l >= k; l--)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						if (l != k)  						{  							num10 = -num12 * array[l - 1];  							array[l - 1] = num11 * array[l - 1];  						}  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][m - 1];  								this.V[i][m - 1] = -num12 * this.V[i][l] + num11 * this.V[i][m - 1];  								this.V[i][l] = num4;  							}  						}  					}  					break;  				}  				case 2:  				{  					double num10 = array[k - 1];  					array[k - 1] = 0.0;  					for (int l = k; l < m; l++)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						num10 = -num12 * array[l];  						array[l] = num11 * array[l];  						if (flag)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][k - 1];  								this.U[i][k - 1] = -num12 * this.U[i][l] + num11 * this.U[i][k - 1];  								this.U[i][l] = num4;  							}  						}  					}  					break;  				}  				case 3:  				{  					double num13 = Math.Max(Math.Max(Math.Max(Math.Max(Math.Abs(this.s[m - 1])' Math.Abs(this.s[m - 2]))' Math.Abs(array[m - 2]))' Math.Abs(this.s[k]))' Math.Abs(array[k]));  					double num14 = this.s[m - 1] / num13;  					double num15 = this.s[m - 2] / num13;  					double num16 = array[m - 2] / num13;  					double num17 = this.s[k] / num13;  					double num18 = array[k] / num13;  					double num19 = ((num15 + num14) * (num15 - num14) + num16 * num16) / 2.0;  					double num20 = num14 * num16 * (num14 * num16);  					double num21 = 0.0;  					if (num19 != 0.0 | num20 != 0.0)  					{  						num21 = Math.Sqrt(num19 * num19 + num20);  						if (num19 < 0.0)  						{  							num21 = -num21;  						}  						num21 = num20 / (num19 + num21);  					}  					double num10 = (num17 + num14) * (num17 - num14) + num21;  					double num22 = num17 * num18;  					for (int l = k; l < m - 1; l++)  					{  						double num4 = Maths.hypot(num10' num22);  						double num11 = num10 / num4;  						double num12 = num22 / num4;  						if (l != k)  						{  							array[l - 1] = num4;  						}  						num10 = num11 * this.s[l] + num12 * array[l];  						array[l] = num11 * array[l] - num12 * this.s[l];  						num22 = num12 * this.s[l + 1];  						this.s[l + 1] = num11 * this.s[l + 1];  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][l + 1];  								this.V[i][l + 1] = -num12 * this.V[i][l] + num11 * this.V[i][l + 1];  								this.V[i][l] = num4;  							}  						}  						num4 = Maths.hypot(num10' num22);  						num11 = num10 / num4;  						num12 = num22 / num4;  						this.s[l] = num4;  						num10 = num11 * array[l] + num12 * this.s[l + 1];  						this.s[l + 1] = -num12 * array[l] + num11 * this.s[l + 1];  						num22 = num12 * array[l + 1];  						array[l + 1] = num11 * array[l + 1];  						if (flag && l < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][l + 1];  								this.U[i][l + 1] = -num12 * this.U[i][l] + num11 * this.U[i][l + 1];  								this.U[i][l] = num4;  							}  						}  					}  					array[m - 2] = num10;  					num6++;  					break;  				}  				case 4:  					if (this.s[k] <= 0.0)  					{  						this.s[k] = ((this.s[k] < 0.0) ? (-this.s[k]) : 0.0);  						if (flag2)  						{  							for (int i = 0; i <= num5; i++)  							{  								this.V[i][k] = -this.V[i][k];  							}  						}  					}  					while (k < num5)  					{  						if (this.s[k] >= this.s[k + 1])  						{  							break;  						}  						double num4 = this.s[k];  						this.s[k] = this.s[k + 1];  						this.s[k + 1] = num4;  						if (flag2 && k < this.n - 1)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = this.V[i][k + 1];  								this.V[i][k + 1] = this.V[i][k];  								this.V[i][k] = num4;  							}  						}  						if (flag && k < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = this.U[i][k + 1];  								this.U[i][k + 1] = this.U[i][k];  								this.U[i][k] = num4;  							}  						}  						k++;  					}  					num6 = 0;  					m--;  					break;  				}  			}
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: while (m > 0)  			{  				int k;  				for (k = m - 2; k >= -1; k--)  				{  					if (k == -1)  					{  						break;  					}  					if (Math.Abs(array[k]) <= num8 + num7 * (Math.Abs(this.s[k]) + Math.Abs(this.s[k + 1])))  					{  						array[k] = 0.0;  						break;  					}  				}  				int num9;  				if (k == m - 2)  				{  					num9 = 4;  				}  				else  				{  					int n;  					for (n = m - 1; n >= k; n--)  					{  						if (n == k)  						{  							break;  						}  						double num4 = ((n != m) ? Math.Abs(array[n]) : 0.0) + ((n != k + 1) ? Math.Abs(array[n - 1]) : 0.0);  						if (Math.Abs(this.s[n]) <= num8 + num7 * num4)  						{  							this.s[n] = 0.0;  							break;  						}  					}  					if (n == k)  					{  						num9 = 3;  					}  					else  					{  						if (n == m - 1)  						{  							num9 = 1;  						}  						else  						{  							num9 = 2;  							k = n;  						}  					}  				}  				k++;  				switch (num9)  				{  				case 1:  				{  					double num10 = array[m - 2];  					array[m - 2] = 0.0;  					for (int l = m - 2; l >= k; l--)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						if (l != k)  						{  							num10 = -num12 * array[l - 1];  							array[l - 1] = num11 * array[l - 1];  						}  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][m - 1];  								this.V[i][m - 1] = -num12 * this.V[i][l] + num11 * this.V[i][m - 1];  								this.V[i][l] = num4;  							}  						}  					}  					break;  				}  				case 2:  				{  					double num10 = array[k - 1];  					array[k - 1] = 0.0;  					for (int l = k; l < m; l++)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						num10 = -num12 * array[l];  						array[l] = num11 * array[l];  						if (flag)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][k - 1];  								this.U[i][k - 1] = -num12 * this.U[i][l] + num11 * this.U[i][k - 1];  								this.U[i][l] = num4;  							}  						}  					}  					break;  				}  				case 3:  				{  					double num13 = Math.Max(Math.Max(Math.Max(Math.Max(Math.Abs(this.s[m - 1])' Math.Abs(this.s[m - 2]))' Math.Abs(array[m - 2]))' Math.Abs(this.s[k]))' Math.Abs(array[k]));  					double num14 = this.s[m - 1] / num13;  					double num15 = this.s[m - 2] / num13;  					double num16 = array[m - 2] / num13;  					double num17 = this.s[k] / num13;  					double num18 = array[k] / num13;  					double num19 = ((num15 + num14) * (num15 - num14) + num16 * num16) / 2.0;  					double num20 = num14 * num16 * (num14 * num16);  					double num21 = 0.0;  					if (num19 != 0.0 | num20 != 0.0)  					{  						num21 = Math.Sqrt(num19 * num19 + num20);  						if (num19 < 0.0)  						{  							num21 = -num21;  						}  						num21 = num20 / (num19 + num21);  					}  					double num10 = (num17 + num14) * (num17 - num14) + num21;  					double num22 = num17 * num18;  					for (int l = k; l < m - 1; l++)  					{  						double num4 = Maths.hypot(num10' num22);  						double num11 = num10 / num4;  						double num12 = num22 / num4;  						if (l != k)  						{  							array[l - 1] = num4;  						}  						num10 = num11 * this.s[l] + num12 * array[l];  						array[l] = num11 * array[l] - num12 * this.s[l];  						num22 = num12 * this.s[l + 1];  						this.s[l + 1] = num11 * this.s[l + 1];  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][l + 1];  								this.V[i][l + 1] = -num12 * this.V[i][l] + num11 * this.V[i][l + 1];  								this.V[i][l] = num4;  							}  						}  						num4 = Maths.hypot(num10' num22);  						num11 = num10 / num4;  						num12 = num22 / num4;  						this.s[l] = num4;  						num10 = num11 * array[l] + num12 * this.s[l + 1];  						this.s[l + 1] = -num12 * array[l] + num11 * this.s[l + 1];  						num22 = num12 * array[l + 1];  						array[l + 1] = num11 * array[l + 1];  						if (flag && l < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][l + 1];  								this.U[i][l + 1] = -num12 * this.U[i][l] + num11 * this.U[i][l + 1];  								this.U[i][l] = num4;  							}  						}  					}  					array[m - 2] = num10;  					num6++;  					break;  				}  				case 4:  					if (this.s[k] <= 0.0)  					{  						this.s[k] = ((this.s[k] < 0.0) ? (-this.s[k]) : 0.0);  						if (flag2)  						{  							for (int i = 0; i <= num5; i++)  							{  								this.V[i][k] = -this.V[i][k];  							}  						}  					}  					while (k < num5)  					{  						if (this.s[k] >= this.s[k + 1])  						{  							break;  						}  						double num4 = this.s[k];  						this.s[k] = this.s[k + 1];  						this.s[k + 1] = num4;  						if (flag2 && k < this.n - 1)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = this.V[i][k + 1];  								this.V[i][k + 1] = this.V[i][k];  								this.V[i][k] = num4;  							}  						}  						if (flag && k < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = this.U[i][k + 1];  								this.U[i][k + 1] = this.U[i][k];  								this.U[i][k] = num4;  							}  						}  						k++;  					}  					num6 = 0;  					m--;  					break;  				}  			}
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: while (m > 0)  			{  				int k;  				for (k = m - 2; k >= -1; k--)  				{  					if (k == -1)  					{  						break;  					}  					if (Math.Abs(array[k]) <= num8 + num7 * (Math.Abs(this.s[k]) + Math.Abs(this.s[k + 1])))  					{  						array[k] = 0.0;  						break;  					}  				}  				int num9;  				if (k == m - 2)  				{  					num9 = 4;  				}  				else  				{  					int n;  					for (n = m - 1; n >= k; n--)  					{  						if (n == k)  						{  							break;  						}  						double num4 = ((n != m) ? Math.Abs(array[n]) : 0.0) + ((n != k + 1) ? Math.Abs(array[n - 1]) : 0.0);  						if (Math.Abs(this.s[n]) <= num8 + num7 * num4)  						{  							this.s[n] = 0.0;  							break;  						}  					}  					if (n == k)  					{  						num9 = 3;  					}  					else  					{  						if (n == m - 1)  						{  							num9 = 1;  						}  						else  						{  							num9 = 2;  							k = n;  						}  					}  				}  				k++;  				switch (num9)  				{  				case 1:  				{  					double num10 = array[m - 2];  					array[m - 2] = 0.0;  					for (int l = m - 2; l >= k; l--)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						if (l != k)  						{  							num10 = -num12 * array[l - 1];  							array[l - 1] = num11 * array[l - 1];  						}  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][m - 1];  								this.V[i][m - 1] = -num12 * this.V[i][l] + num11 * this.V[i][m - 1];  								this.V[i][l] = num4;  							}  						}  					}  					break;  				}  				case 2:  				{  					double num10 = array[k - 1];  					array[k - 1] = 0.0;  					for (int l = k; l < m; l++)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						num10 = -num12 * array[l];  						array[l] = num11 * array[l];  						if (flag)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][k - 1];  								this.U[i][k - 1] = -num12 * this.U[i][l] + num11 * this.U[i][k - 1];  								this.U[i][l] = num4;  							}  						}  					}  					break;  				}  				case 3:  				{  					double num13 = Math.Max(Math.Max(Math.Max(Math.Max(Math.Abs(this.s[m - 1])' Math.Abs(this.s[m - 2]))' Math.Abs(array[m - 2]))' Math.Abs(this.s[k]))' Math.Abs(array[k]));  					double num14 = this.s[m - 1] / num13;  					double num15 = this.s[m - 2] / num13;  					double num16 = array[m - 2] / num13;  					double num17 = this.s[k] / num13;  					double num18 = array[k] / num13;  					double num19 = ((num15 + num14) * (num15 - num14) + num16 * num16) / 2.0;  					double num20 = num14 * num16 * (num14 * num16);  					double num21 = 0.0;  					if (num19 != 0.0 | num20 != 0.0)  					{  						num21 = Math.Sqrt(num19 * num19 + num20);  						if (num19 < 0.0)  						{  							num21 = -num21;  						}  						num21 = num20 / (num19 + num21);  					}  					double num10 = (num17 + num14) * (num17 - num14) + num21;  					double num22 = num17 * num18;  					for (int l = k; l < m - 1; l++)  					{  						double num4 = Maths.hypot(num10' num22);  						double num11 = num10 / num4;  						double num12 = num22 / num4;  						if (l != k)  						{  							array[l - 1] = num4;  						}  						num10 = num11 * this.s[l] + num12 * array[l];  						array[l] = num11 * array[l] - num12 * this.s[l];  						num22 = num12 * this.s[l + 1];  						this.s[l + 1] = num11 * this.s[l + 1];  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][l + 1];  								this.V[i][l + 1] = -num12 * this.V[i][l] + num11 * this.V[i][l + 1];  								this.V[i][l] = num4;  							}  						}  						num4 = Maths.hypot(num10' num22);  						num11 = num10 / num4;  						num12 = num22 / num4;  						this.s[l] = num4;  						num10 = num11 * array[l] + num12 * this.s[l + 1];  						this.s[l + 1] = -num12 * array[l] + num11 * this.s[l + 1];  						num22 = num12 * array[l + 1];  						array[l + 1] = num11 * array[l + 1];  						if (flag && l < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][l + 1];  								this.U[i][l + 1] = -num12 * this.U[i][l] + num11 * this.U[i][l + 1];  								this.U[i][l] = num4;  							}  						}  					}  					array[m - 2] = num10;  					num6++;  					break;  				}  				case 4:  					if (this.s[k] <= 0.0)  					{  						this.s[k] = ((this.s[k] < 0.0) ? (-this.s[k]) : 0.0);  						if (flag2)  						{  							for (int i = 0; i <= num5; i++)  							{  								this.V[i][k] = -this.V[i][k];  							}  						}  					}  					while (k < num5)  					{  						if (this.s[k] >= this.s[k + 1])  						{  							break;  						}  						double num4 = this.s[k];  						this.s[k] = this.s[k + 1];  						this.s[k + 1] = num4;  						if (flag2 && k < this.n - 1)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = this.V[i][k + 1];  								this.V[i][k + 1] = this.V[i][k];  								this.V[i][k] = num4;  							}  						}  						if (flag && k < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = this.U[i][k + 1];  								this.U[i][k + 1] = this.U[i][k];  								this.U[i][k] = num4;  							}  						}  						k++;  					}  					num6 = 0;  					m--;  					break;  				}  			}
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: while (m > 0)  			{  				int k;  				for (k = m - 2; k >= -1; k--)  				{  					if (k == -1)  					{  						break;  					}  					if (Math.Abs(array[k]) <= num8 + num7 * (Math.Abs(this.s[k]) + Math.Abs(this.s[k + 1])))  					{  						array[k] = 0.0;  						break;  					}  				}  				int num9;  				if (k == m - 2)  				{  					num9 = 4;  				}  				else  				{  					int n;  					for (n = m - 1; n >= k; n--)  					{  						if (n == k)  						{  							break;  						}  						double num4 = ((n != m) ? Math.Abs(array[n]) : 0.0) + ((n != k + 1) ? Math.Abs(array[n - 1]) : 0.0);  						if (Math.Abs(this.s[n]) <= num8 + num7 * num4)  						{  							this.s[n] = 0.0;  							break;  						}  					}  					if (n == k)  					{  						num9 = 3;  					}  					else  					{  						if (n == m - 1)  						{  							num9 = 1;  						}  						else  						{  							num9 = 2;  							k = n;  						}  					}  				}  				k++;  				switch (num9)  				{  				case 1:  				{  					double num10 = array[m - 2];  					array[m - 2] = 0.0;  					for (int l = m - 2; l >= k; l--)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						if (l != k)  						{  							num10 = -num12 * array[l - 1];  							array[l - 1] = num11 * array[l - 1];  						}  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][m - 1];  								this.V[i][m - 1] = -num12 * this.V[i][l] + num11 * this.V[i][m - 1];  								this.V[i][l] = num4;  							}  						}  					}  					break;  				}  				case 2:  				{  					double num10 = array[k - 1];  					array[k - 1] = 0.0;  					for (int l = k; l < m; l++)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						num10 = -num12 * array[l];  						array[l] = num11 * array[l];  						if (flag)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][k - 1];  								this.U[i][k - 1] = -num12 * this.U[i][l] + num11 * this.U[i][k - 1];  								this.U[i][l] = num4;  							}  						}  					}  					break;  				}  				case 3:  				{  					double num13 = Math.Max(Math.Max(Math.Max(Math.Max(Math.Abs(this.s[m - 1])' Math.Abs(this.s[m - 2]))' Math.Abs(array[m - 2]))' Math.Abs(this.s[k]))' Math.Abs(array[k]));  					double num14 = this.s[m - 1] / num13;  					double num15 = this.s[m - 2] / num13;  					double num16 = array[m - 2] / num13;  					double num17 = this.s[k] / num13;  					double num18 = array[k] / num13;  					double num19 = ((num15 + num14) * (num15 - num14) + num16 * num16) / 2.0;  					double num20 = num14 * num16 * (num14 * num16);  					double num21 = 0.0;  					if (num19 != 0.0 | num20 != 0.0)  					{  						num21 = Math.Sqrt(num19 * num19 + num20);  						if (num19 < 0.0)  						{  							num21 = -num21;  						}  						num21 = num20 / (num19 + num21);  					}  					double num10 = (num17 + num14) * (num17 - num14) + num21;  					double num22 = num17 * num18;  					for (int l = k; l < m - 1; l++)  					{  						double num4 = Maths.hypot(num10' num22);  						double num11 = num10 / num4;  						double num12 = num22 / num4;  						if (l != k)  						{  							array[l - 1] = num4;  						}  						num10 = num11 * this.s[l] + num12 * array[l];  						array[l] = num11 * array[l] - num12 * this.s[l];  						num22 = num12 * this.s[l + 1];  						this.s[l + 1] = num11 * this.s[l + 1];  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][l + 1];  								this.V[i][l + 1] = -num12 * this.V[i][l] + num11 * this.V[i][l + 1];  								this.V[i][l] = num4;  							}  						}  						num4 = Maths.hypot(num10' num22);  						num11 = num10 / num4;  						num12 = num22 / num4;  						this.s[l] = num4;  						num10 = num11 * array[l] + num12 * this.s[l + 1];  						this.s[l + 1] = -num12 * array[l] + num11 * this.s[l + 1];  						num22 = num12 * array[l + 1];  						array[l + 1] = num11 * array[l + 1];  						if (flag && l < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][l + 1];  								this.U[i][l + 1] = -num12 * this.U[i][l] + num11 * this.U[i][l + 1];  								this.U[i][l] = num4;  							}  						}  					}  					array[m - 2] = num10;  					num6++;  					break;  				}  				case 4:  					if (this.s[k] <= 0.0)  					{  						this.s[k] = ((this.s[k] < 0.0) ? (-this.s[k]) : 0.0);  						if (flag2)  						{  							for (int i = 0; i <= num5; i++)  							{  								this.V[i][k] = -this.V[i][k];  							}  						}  					}  					while (k < num5)  					{  						if (this.s[k] >= this.s[k + 1])  						{  							break;  						}  						double num4 = this.s[k];  						this.s[k] = this.s[k + 1];  						this.s[k + 1] = num4;  						if (flag2 && k < this.n - 1)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = this.V[i][k + 1];  								this.V[i][k + 1] = this.V[i][k];  								this.V[i][k] = num4;  							}  						}  						if (flag && k < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = this.U[i][k + 1];  								this.U[i][k + 1] = this.U[i][k];  								this.U[i][k] = num4;  							}  						}  						k++;  					}  					num6 = 0;  					m--;  					break;  				}  			}
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: while (m > 0)  			{  				int k;  				for (k = m - 2; k >= -1; k--)  				{  					if (k == -1)  					{  						break;  					}  					if (Math.Abs(array[k]) <= num8 + num7 * (Math.Abs(this.s[k]) + Math.Abs(this.s[k + 1])))  					{  						array[k] = 0.0;  						break;  					}  				}  				int num9;  				if (k == m - 2)  				{  					num9 = 4;  				}  				else  				{  					int n;  					for (n = m - 1; n >= k; n--)  					{  						if (n == k)  						{  							break;  						}  						double num4 = ((n != m) ? Math.Abs(array[n]) : 0.0) + ((n != k + 1) ? Math.Abs(array[n - 1]) : 0.0);  						if (Math.Abs(this.s[n]) <= num8 + num7 * num4)  						{  							this.s[n] = 0.0;  							break;  						}  					}  					if (n == k)  					{  						num9 = 3;  					}  					else  					{  						if (n == m - 1)  						{  							num9 = 1;  						}  						else  						{  							num9 = 2;  							k = n;  						}  					}  				}  				k++;  				switch (num9)  				{  				case 1:  				{  					double num10 = array[m - 2];  					array[m - 2] = 0.0;  					for (int l = m - 2; l >= k; l--)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						if (l != k)  						{  							num10 = -num12 * array[l - 1];  							array[l - 1] = num11 * array[l - 1];  						}  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][m - 1];  								this.V[i][m - 1] = -num12 * this.V[i][l] + num11 * this.V[i][m - 1];  								this.V[i][l] = num4;  							}  						}  					}  					break;  				}  				case 2:  				{  					double num10 = array[k - 1];  					array[k - 1] = 0.0;  					for (int l = k; l < m; l++)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						num10 = -num12 * array[l];  						array[l] = num11 * array[l];  						if (flag)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][k - 1];  								this.U[i][k - 1] = -num12 * this.U[i][l] + num11 * this.U[i][k - 1];  								this.U[i][l] = num4;  							}  						}  					}  					break;  				}  				case 3:  				{  					double num13 = Math.Max(Math.Max(Math.Max(Math.Max(Math.Abs(this.s[m - 1])' Math.Abs(this.s[m - 2]))' Math.Abs(array[m - 2]))' Math.Abs(this.s[k]))' Math.Abs(array[k]));  					double num14 = this.s[m - 1] / num13;  					double num15 = this.s[m - 2] / num13;  					double num16 = array[m - 2] / num13;  					double num17 = this.s[k] / num13;  					double num18 = array[k] / num13;  					double num19 = ((num15 + num14) * (num15 - num14) + num16 * num16) / 2.0;  					double num20 = num14 * num16 * (num14 * num16);  					double num21 = 0.0;  					if (num19 != 0.0 | num20 != 0.0)  					{  						num21 = Math.Sqrt(num19 * num19 + num20);  						if (num19 < 0.0)  						{  							num21 = -num21;  						}  						num21 = num20 / (num19 + num21);  					}  					double num10 = (num17 + num14) * (num17 - num14) + num21;  					double num22 = num17 * num18;  					for (int l = k; l < m - 1; l++)  					{  						double num4 = Maths.hypot(num10' num22);  						double num11 = num10 / num4;  						double num12 = num22 / num4;  						if (l != k)  						{  							array[l - 1] = num4;  						}  						num10 = num11 * this.s[l] + num12 * array[l];  						array[l] = num11 * array[l] - num12 * this.s[l];  						num22 = num12 * this.s[l + 1];  						this.s[l + 1] = num11 * this.s[l + 1];  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][l + 1];  								this.V[i][l + 1] = -num12 * this.V[i][l] + num11 * this.V[i][l + 1];  								this.V[i][l] = num4;  							}  						}  						num4 = Maths.hypot(num10' num22);  						num11 = num10 / num4;  						num12 = num22 / num4;  						this.s[l] = num4;  						num10 = num11 * array[l] + num12 * this.s[l + 1];  						this.s[l + 1] = -num12 * array[l] + num11 * this.s[l + 1];  						num22 = num12 * array[l + 1];  						array[l + 1] = num11 * array[l + 1];  						if (flag && l < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][l + 1];  								this.U[i][l + 1] = -num12 * this.U[i][l] + num11 * this.U[i][l + 1];  								this.U[i][l] = num4;  							}  						}  					}  					array[m - 2] = num10;  					num6++;  					break;  				}  				case 4:  					if (this.s[k] <= 0.0)  					{  						this.s[k] = ((this.s[k] < 0.0) ? (-this.s[k]) : 0.0);  						if (flag2)  						{  							for (int i = 0; i <= num5; i++)  							{  								this.V[i][k] = -this.V[i][k];  							}  						}  					}  					while (k < num5)  					{  						if (this.s[k] >= this.s[k + 1])  						{  							break;  						}  						double num4 = this.s[k];  						this.s[k] = this.s[k + 1];  						this.s[k + 1] = num4;  						if (flag2 && k < this.n - 1)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = this.V[i][k + 1];  								this.V[i][k + 1] = this.V[i][k];  								this.V[i][k] = num4;  							}  						}  						if (flag && k < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = this.U[i][k + 1];  								this.U[i][k + 1] = this.U[i][k];  								this.U[i][k] = num4;  							}  						}  						k++;  					}  					num6 = 0;  					m--;  					break;  				}  			}
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: while (m > 0)  			{  				int k;  				for (k = m - 2; k >= -1; k--)  				{  					if (k == -1)  					{  						break;  					}  					if (Math.Abs(array[k]) <= num8 + num7 * (Math.Abs(this.s[k]) + Math.Abs(this.s[k + 1])))  					{  						array[k] = 0.0;  						break;  					}  				}  				int num9;  				if (k == m - 2)  				{  					num9 = 4;  				}  				else  				{  					int n;  					for (n = m - 1; n >= k; n--)  					{  						if (n == k)  						{  							break;  						}  						double num4 = ((n != m) ? Math.Abs(array[n]) : 0.0) + ((n != k + 1) ? Math.Abs(array[n - 1]) : 0.0);  						if (Math.Abs(this.s[n]) <= num8 + num7 * num4)  						{  							this.s[n] = 0.0;  							break;  						}  					}  					if (n == k)  					{  						num9 = 3;  					}  					else  					{  						if (n == m - 1)  						{  							num9 = 1;  						}  						else  						{  							num9 = 2;  							k = n;  						}  					}  				}  				k++;  				switch (num9)  				{  				case 1:  				{  					double num10 = array[m - 2];  					array[m - 2] = 0.0;  					for (int l = m - 2; l >= k; l--)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						if (l != k)  						{  							num10 = -num12 * array[l - 1];  							array[l - 1] = num11 * array[l - 1];  						}  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][m - 1];  								this.V[i][m - 1] = -num12 * this.V[i][l] + num11 * this.V[i][m - 1];  								this.V[i][l] = num4;  							}  						}  					}  					break;  				}  				case 2:  				{  					double num10 = array[k - 1];  					array[k - 1] = 0.0;  					for (int l = k; l < m; l++)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						num10 = -num12 * array[l];  						array[l] = num11 * array[l];  						if (flag)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][k - 1];  								this.U[i][k - 1] = -num12 * this.U[i][l] + num11 * this.U[i][k - 1];  								this.U[i][l] = num4;  							}  						}  					}  					break;  				}  				case 3:  				{  					double num13 = Math.Max(Math.Max(Math.Max(Math.Max(Math.Abs(this.s[m - 1])' Math.Abs(this.s[m - 2]))' Math.Abs(array[m - 2]))' Math.Abs(this.s[k]))' Math.Abs(array[k]));  					double num14 = this.s[m - 1] / num13;  					double num15 = this.s[m - 2] / num13;  					double num16 = array[m - 2] / num13;  					double num17 = this.s[k] / num13;  					double num18 = array[k] / num13;  					double num19 = ((num15 + num14) * (num15 - num14) + num16 * num16) / 2.0;  					double num20 = num14 * num16 * (num14 * num16);  					double num21 = 0.0;  					if (num19 != 0.0 | num20 != 0.0)  					{  						num21 = Math.Sqrt(num19 * num19 + num20);  						if (num19 < 0.0)  						{  							num21 = -num21;  						}  						num21 = num20 / (num19 + num21);  					}  					double num10 = (num17 + num14) * (num17 - num14) + num21;  					double num22 = num17 * num18;  					for (int l = k; l < m - 1; l++)  					{  						double num4 = Maths.hypot(num10' num22);  						double num11 = num10 / num4;  						double num12 = num22 / num4;  						if (l != k)  						{  							array[l - 1] = num4;  						}  						num10 = num11 * this.s[l] + num12 * array[l];  						array[l] = num11 * array[l] - num12 * this.s[l];  						num22 = num12 * this.s[l + 1];  						this.s[l + 1] = num11 * this.s[l + 1];  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][l + 1];  								this.V[i][l + 1] = -num12 * this.V[i][l] + num11 * this.V[i][l + 1];  								this.V[i][l] = num4;  							}  						}  						num4 = Maths.hypot(num10' num22);  						num11 = num10 / num4;  						num12 = num22 / num4;  						this.s[l] = num4;  						num10 = num11 * array[l] + num12 * this.s[l + 1];  						this.s[l + 1] = -num12 * array[l] + num11 * this.s[l + 1];  						num22 = num12 * array[l + 1];  						array[l + 1] = num11 * array[l + 1];  						if (flag && l < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][l + 1];  								this.U[i][l + 1] = -num12 * this.U[i][l] + num11 * this.U[i][l + 1];  								this.U[i][l] = num4;  							}  						}  					}  					array[m - 2] = num10;  					num6++;  					break;  				}  				case 4:  					if (this.s[k] <= 0.0)  					{  						this.s[k] = ((this.s[k] < 0.0) ? (-this.s[k]) : 0.0);  						if (flag2)  						{  							for (int i = 0; i <= num5; i++)  							{  								this.V[i][k] = -this.V[i][k];  							}  						}  					}  					while (k < num5)  					{  						if (this.s[k] >= this.s[k + 1])  						{  							break;  						}  						double num4 = this.s[k];  						this.s[k] = this.s[k + 1];  						this.s[k + 1] = num4;  						if (flag2 && k < this.n - 1)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = this.V[i][k + 1];  								this.V[i][k + 1] = this.V[i][k];  								this.V[i][k] = num4;  							}  						}  						if (flag && k < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = this.U[i][k + 1];  								this.U[i][k + 1] = this.U[i][k];  								this.U[i][k] = num4;  							}  						}  						k++;  					}  					num6 = 0;  					m--;  					break;  				}  			}
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: while (m > 0)  			{  				int k;  				for (k = m - 2; k >= -1; k--)  				{  					if (k == -1)  					{  						break;  					}  					if (Math.Abs(array[k]) <= num8 + num7 * (Math.Abs(this.s[k]) + Math.Abs(this.s[k + 1])))  					{  						array[k] = 0.0;  						break;  					}  				}  				int num9;  				if (k == m - 2)  				{  					num9 = 4;  				}  				else  				{  					int n;  					for (n = m - 1; n >= k; n--)  					{  						if (n == k)  						{  							break;  						}  						double num4 = ((n != m) ? Math.Abs(array[n]) : 0.0) + ((n != k + 1) ? Math.Abs(array[n - 1]) : 0.0);  						if (Math.Abs(this.s[n]) <= num8 + num7 * num4)  						{  							this.s[n] = 0.0;  							break;  						}  					}  					if (n == k)  					{  						num9 = 3;  					}  					else  					{  						if (n == m - 1)  						{  							num9 = 1;  						}  						else  						{  							num9 = 2;  							k = n;  						}  					}  				}  				k++;  				switch (num9)  				{  				case 1:  				{  					double num10 = array[m - 2];  					array[m - 2] = 0.0;  					for (int l = m - 2; l >= k; l--)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						if (l != k)  						{  							num10 = -num12 * array[l - 1];  							array[l - 1] = num11 * array[l - 1];  						}  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][m - 1];  								this.V[i][m - 1] = -num12 * this.V[i][l] + num11 * this.V[i][m - 1];  								this.V[i][l] = num4;  							}  						}  					}  					break;  				}  				case 2:  				{  					double num10 = array[k - 1];  					array[k - 1] = 0.0;  					for (int l = k; l < m; l++)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						num10 = -num12 * array[l];  						array[l] = num11 * array[l];  						if (flag)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][k - 1];  								this.U[i][k - 1] = -num12 * this.U[i][l] + num11 * this.U[i][k - 1];  								this.U[i][l] = num4;  							}  						}  					}  					break;  				}  				case 3:  				{  					double num13 = Math.Max(Math.Max(Math.Max(Math.Max(Math.Abs(this.s[m - 1])' Math.Abs(this.s[m - 2]))' Math.Abs(array[m - 2]))' Math.Abs(this.s[k]))' Math.Abs(array[k]));  					double num14 = this.s[m - 1] / num13;  					double num15 = this.s[m - 2] / num13;  					double num16 = array[m - 2] / num13;  					double num17 = this.s[k] / num13;  					double num18 = array[k] / num13;  					double num19 = ((num15 + num14) * (num15 - num14) + num16 * num16) / 2.0;  					double num20 = num14 * num16 * (num14 * num16);  					double num21 = 0.0;  					if (num19 != 0.0 | num20 != 0.0)  					{  						num21 = Math.Sqrt(num19 * num19 + num20);  						if (num19 < 0.0)  						{  							num21 = -num21;  						}  						num21 = num20 / (num19 + num21);  					}  					double num10 = (num17 + num14) * (num17 - num14) + num21;  					double num22 = num17 * num18;  					for (int l = k; l < m - 1; l++)  					{  						double num4 = Maths.hypot(num10' num22);  						double num11 = num10 / num4;  						double num12 = num22 / num4;  						if (l != k)  						{  							array[l - 1] = num4;  						}  						num10 = num11 * this.s[l] + num12 * array[l];  						array[l] = num11 * array[l] - num12 * this.s[l];  						num22 = num12 * this.s[l + 1];  						this.s[l + 1] = num11 * this.s[l + 1];  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][l + 1];  								this.V[i][l + 1] = -num12 * this.V[i][l] + num11 * this.V[i][l + 1];  								this.V[i][l] = num4;  							}  						}  						num4 = Maths.hypot(num10' num22);  						num11 = num10 / num4;  						num12 = num22 / num4;  						this.s[l] = num4;  						num10 = num11 * array[l] + num12 * this.s[l + 1];  						this.s[l + 1] = -num12 * array[l] + num11 * this.s[l + 1];  						num22 = num12 * array[l + 1];  						array[l + 1] = num11 * array[l + 1];  						if (flag && l < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][l + 1];  								this.U[i][l + 1] = -num12 * this.U[i][l] + num11 * this.U[i][l + 1];  								this.U[i][l] = num4;  							}  						}  					}  					array[m - 2] = num10;  					num6++;  					break;  				}  				case 4:  					if (this.s[k] <= 0.0)  					{  						this.s[k] = ((this.s[k] < 0.0) ? (-this.s[k]) : 0.0);  						if (flag2)  						{  							for (int i = 0; i <= num5; i++)  							{  								this.V[i][k] = -this.V[i][k];  							}  						}  					}  					while (k < num5)  					{  						if (this.s[k] >= this.s[k + 1])  						{  							break;  						}  						double num4 = this.s[k];  						this.s[k] = this.s[k + 1];  						this.s[k + 1] = num4;  						if (flag2 && k < this.n - 1)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = this.V[i][k + 1];  								this.V[i][k + 1] = this.V[i][k];  								this.V[i][k] = num4;  							}  						}  						if (flag && k < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = this.U[i][k + 1];  								this.U[i][k + 1] = this.U[i][k];  								this.U[i][k] = num4;  							}  						}  						k++;  					}  					num6 = 0;  					m--;  					break;  				}  			}
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: while (m > 0)  			{  				int k;  				for (k = m - 2; k >= -1; k--)  				{  					if (k == -1)  					{  						break;  					}  					if (Math.Abs(array[k]) <= num8 + num7 * (Math.Abs(this.s[k]) + Math.Abs(this.s[k + 1])))  					{  						array[k] = 0.0;  						break;  					}  				}  				int num9;  				if (k == m - 2)  				{  					num9 = 4;  				}  				else  				{  					int n;  					for (n = m - 1; n >= k; n--)  					{  						if (n == k)  						{  							break;  						}  						double num4 = ((n != m) ? Math.Abs(array[n]) : 0.0) + ((n != k + 1) ? Math.Abs(array[n - 1]) : 0.0);  						if (Math.Abs(this.s[n]) <= num8 + num7 * num4)  						{  							this.s[n] = 0.0;  							break;  						}  					}  					if (n == k)  					{  						num9 = 3;  					}  					else  					{  						if (n == m - 1)  						{  							num9 = 1;  						}  						else  						{  							num9 = 2;  							k = n;  						}  					}  				}  				k++;  				switch (num9)  				{  				case 1:  				{  					double num10 = array[m - 2];  					array[m - 2] = 0.0;  					for (int l = m - 2; l >= k; l--)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						if (l != k)  						{  							num10 = -num12 * array[l - 1];  							array[l - 1] = num11 * array[l - 1];  						}  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][m - 1];  								this.V[i][m - 1] = -num12 * this.V[i][l] + num11 * this.V[i][m - 1];  								this.V[i][l] = num4;  							}  						}  					}  					break;  				}  				case 2:  				{  					double num10 = array[k - 1];  					array[k - 1] = 0.0;  					for (int l = k; l < m; l++)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						num10 = -num12 * array[l];  						array[l] = num11 * array[l];  						if (flag)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][k - 1];  								this.U[i][k - 1] = -num12 * this.U[i][l] + num11 * this.U[i][k - 1];  								this.U[i][l] = num4;  							}  						}  					}  					break;  				}  				case 3:  				{  					double num13 = Math.Max(Math.Max(Math.Max(Math.Max(Math.Abs(this.s[m - 1])' Math.Abs(this.s[m - 2]))' Math.Abs(array[m - 2]))' Math.Abs(this.s[k]))' Math.Abs(array[k]));  					double num14 = this.s[m - 1] / num13;  					double num15 = this.s[m - 2] / num13;  					double num16 = array[m - 2] / num13;  					double num17 = this.s[k] / num13;  					double num18 = array[k] / num13;  					double num19 = ((num15 + num14) * (num15 - num14) + num16 * num16) / 2.0;  					double num20 = num14 * num16 * (num14 * num16);  					double num21 = 0.0;  					if (num19 != 0.0 | num20 != 0.0)  					{  						num21 = Math.Sqrt(num19 * num19 + num20);  						if (num19 < 0.0)  						{  							num21 = -num21;  						}  						num21 = num20 / (num19 + num21);  					}  					double num10 = (num17 + num14) * (num17 - num14) + num21;  					double num22 = num17 * num18;  					for (int l = k; l < m - 1; l++)  					{  						double num4 = Maths.hypot(num10' num22);  						double num11 = num10 / num4;  						double num12 = num22 / num4;  						if (l != k)  						{  							array[l - 1] = num4;  						}  						num10 = num11 * this.s[l] + num12 * array[l];  						array[l] = num11 * array[l] - num12 * this.s[l];  						num22 = num12 * this.s[l + 1];  						this.s[l + 1] = num11 * this.s[l + 1];  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][l + 1];  								this.V[i][l + 1] = -num12 * this.V[i][l] + num11 * this.V[i][l + 1];  								this.V[i][l] = num4;  							}  						}  						num4 = Maths.hypot(num10' num22);  						num11 = num10 / num4;  						num12 = num22 / num4;  						this.s[l] = num4;  						num10 = num11 * array[l] + num12 * this.s[l + 1];  						this.s[l + 1] = -num12 * array[l] + num11 * this.s[l + 1];  						num22 = num12 * array[l + 1];  						array[l + 1] = num11 * array[l + 1];  						if (flag && l < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][l + 1];  								this.U[i][l + 1] = -num12 * this.U[i][l] + num11 * this.U[i][l + 1];  								this.U[i][l] = num4;  							}  						}  					}  					array[m - 2] = num10;  					num6++;  					break;  				}  				case 4:  					if (this.s[k] <= 0.0)  					{  						this.s[k] = ((this.s[k] < 0.0) ? (-this.s[k]) : 0.0);  						if (flag2)  						{  							for (int i = 0; i <= num5; i++)  							{  								this.V[i][k] = -this.V[i][k];  							}  						}  					}  					while (k < num5)  					{  						if (this.s[k] >= this.s[k + 1])  						{  							break;  						}  						double num4 = this.s[k];  						this.s[k] = this.s[k + 1];  						this.s[k + 1] = num4;  						if (flag2 && k < this.n - 1)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = this.V[i][k + 1];  								this.V[i][k + 1] = this.V[i][k];  								this.V[i][k] = num4;  							}  						}  						if (flag && k < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = this.U[i][k + 1];  								this.U[i][k + 1] = this.U[i][k];  								this.U[i][k] = num4;  							}  						}  						k++;  					}  					num6 = 0;  					m--;  					break;  				}  			}
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: while (m > 0)  			{  				int k;  				for (k = m - 2; k >= -1; k--)  				{  					if (k == -1)  					{  						break;  					}  					if (Math.Abs(array[k]) <= num8 + num7 * (Math.Abs(this.s[k]) + Math.Abs(this.s[k + 1])))  					{  						array[k] = 0.0;  						break;  					}  				}  				int num9;  				if (k == m - 2)  				{  					num9 = 4;  				}  				else  				{  					int n;  					for (n = m - 1; n >= k; n--)  					{  						if (n == k)  						{  							break;  						}  						double num4 = ((n != m) ? Math.Abs(array[n]) : 0.0) + ((n != k + 1) ? Math.Abs(array[n - 1]) : 0.0);  						if (Math.Abs(this.s[n]) <= num8 + num7 * num4)  						{  							this.s[n] = 0.0;  							break;  						}  					}  					if (n == k)  					{  						num9 = 3;  					}  					else  					{  						if (n == m - 1)  						{  							num9 = 1;  						}  						else  						{  							num9 = 2;  							k = n;  						}  					}  				}  				k++;  				switch (num9)  				{  				case 1:  				{  					double num10 = array[m - 2];  					array[m - 2] = 0.0;  					for (int l = m - 2; l >= k; l--)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						if (l != k)  						{  							num10 = -num12 * array[l - 1];  							array[l - 1] = num11 * array[l - 1];  						}  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][m - 1];  								this.V[i][m - 1] = -num12 * this.V[i][l] + num11 * this.V[i][m - 1];  								this.V[i][l] = num4;  							}  						}  					}  					break;  				}  				case 2:  				{  					double num10 = array[k - 1];  					array[k - 1] = 0.0;  					for (int l = k; l < m; l++)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						num10 = -num12 * array[l];  						array[l] = num11 * array[l];  						if (flag)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][k - 1];  								this.U[i][k - 1] = -num12 * this.U[i][l] + num11 * this.U[i][k - 1];  								this.U[i][l] = num4;  							}  						}  					}  					break;  				}  				case 3:  				{  					double num13 = Math.Max(Math.Max(Math.Max(Math.Max(Math.Abs(this.s[m - 1])' Math.Abs(this.s[m - 2]))' Math.Abs(array[m - 2]))' Math.Abs(this.s[k]))' Math.Abs(array[k]));  					double num14 = this.s[m - 1] / num13;  					double num15 = this.s[m - 2] / num13;  					double num16 = array[m - 2] / num13;  					double num17 = this.s[k] / num13;  					double num18 = array[k] / num13;  					double num19 = ((num15 + num14) * (num15 - num14) + num16 * num16) / 2.0;  					double num20 = num14 * num16 * (num14 * num16);  					double num21 = 0.0;  					if (num19 != 0.0 | num20 != 0.0)  					{  						num21 = Math.Sqrt(num19 * num19 + num20);  						if (num19 < 0.0)  						{  							num21 = -num21;  						}  						num21 = num20 / (num19 + num21);  					}  					double num10 = (num17 + num14) * (num17 - num14) + num21;  					double num22 = num17 * num18;  					for (int l = k; l < m - 1; l++)  					{  						double num4 = Maths.hypot(num10' num22);  						double num11 = num10 / num4;  						double num12 = num22 / num4;  						if (l != k)  						{  							array[l - 1] = num4;  						}  						num10 = num11 * this.s[l] + num12 * array[l];  						array[l] = num11 * array[l] - num12 * this.s[l];  						num22 = num12 * this.s[l + 1];  						this.s[l + 1] = num11 * this.s[l + 1];  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][l + 1];  								this.V[i][l + 1] = -num12 * this.V[i][l] + num11 * this.V[i][l + 1];  								this.V[i][l] = num4;  							}  						}  						num4 = Maths.hypot(num10' num22);  						num11 = num10 / num4;  						num12 = num22 / num4;  						this.s[l] = num4;  						num10 = num11 * array[l] + num12 * this.s[l + 1];  						this.s[l + 1] = -num12 * array[l] + num11 * this.s[l + 1];  						num22 = num12 * array[l + 1];  						array[l + 1] = num11 * array[l + 1];  						if (flag && l < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][l + 1];  								this.U[i][l + 1] = -num12 * this.U[i][l] + num11 * this.U[i][l + 1];  								this.U[i][l] = num4;  							}  						}  					}  					array[m - 2] = num10;  					num6++;  					break;  				}  				case 4:  					if (this.s[k] <= 0.0)  					{  						this.s[k] = ((this.s[k] < 0.0) ? (-this.s[k]) : 0.0);  						if (flag2)  						{  							for (int i = 0; i <= num5; i++)  							{  								this.V[i][k] = -this.V[i][k];  							}  						}  					}  					while (k < num5)  					{  						if (this.s[k] >= this.s[k + 1])  						{  							break;  						}  						double num4 = this.s[k];  						this.s[k] = this.s[k + 1];  						this.s[k + 1] = num4;  						if (flag2 && k < this.n - 1)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = this.V[i][k + 1];  								this.V[i][k + 1] = this.V[i][k];  								this.V[i][k] = num4;  							}  						}  						if (flag && k < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = this.U[i][k + 1];  								this.U[i][k + 1] = this.U[i][k];  								this.U[i][k] = num4;  							}  						}  						k++;  					}  					num6 = 0;  					m--;  					break;  				}  			}
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: while (m > 0)  			{  				int k;  				for (k = m - 2; k >= -1; k--)  				{  					if (k == -1)  					{  						break;  					}  					if (Math.Abs(array[k]) <= num8 + num7 * (Math.Abs(this.s[k]) + Math.Abs(this.s[k + 1])))  					{  						array[k] = 0.0;  						break;  					}  				}  				int num9;  				if (k == m - 2)  				{  					num9 = 4;  				}  				else  				{  					int n;  					for (n = m - 1; n >= k; n--)  					{  						if (n == k)  						{  							break;  						}  						double num4 = ((n != m) ? Math.Abs(array[n]) : 0.0) + ((n != k + 1) ? Math.Abs(array[n - 1]) : 0.0);  						if (Math.Abs(this.s[n]) <= num8 + num7 * num4)  						{  							this.s[n] = 0.0;  							break;  						}  					}  					if (n == k)  					{  						num9 = 3;  					}  					else  					{  						if (n == m - 1)  						{  							num9 = 1;  						}  						else  						{  							num9 = 2;  							k = n;  						}  					}  				}  				k++;  				switch (num9)  				{  				case 1:  				{  					double num10 = array[m - 2];  					array[m - 2] = 0.0;  					for (int l = m - 2; l >= k; l--)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						if (l != k)  						{  							num10 = -num12 * array[l - 1];  							array[l - 1] = num11 * array[l - 1];  						}  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][m - 1];  								this.V[i][m - 1] = -num12 * this.V[i][l] + num11 * this.V[i][m - 1];  								this.V[i][l] = num4;  							}  						}  					}  					break;  				}  				case 2:  				{  					double num10 = array[k - 1];  					array[k - 1] = 0.0;  					for (int l = k; l < m; l++)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						num10 = -num12 * array[l];  						array[l] = num11 * array[l];  						if (flag)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][k - 1];  								this.U[i][k - 1] = -num12 * this.U[i][l] + num11 * this.U[i][k - 1];  								this.U[i][l] = num4;  							}  						}  					}  					break;  				}  				case 3:  				{  					double num13 = Math.Max(Math.Max(Math.Max(Math.Max(Math.Abs(this.s[m - 1])' Math.Abs(this.s[m - 2]))' Math.Abs(array[m - 2]))' Math.Abs(this.s[k]))' Math.Abs(array[k]));  					double num14 = this.s[m - 1] / num13;  					double num15 = this.s[m - 2] / num13;  					double num16 = array[m - 2] / num13;  					double num17 = this.s[k] / num13;  					double num18 = array[k] / num13;  					double num19 = ((num15 + num14) * (num15 - num14) + num16 * num16) / 2.0;  					double num20 = num14 * num16 * (num14 * num16);  					double num21 = 0.0;  					if (num19 != 0.0 | num20 != 0.0)  					{  						num21 = Math.Sqrt(num19 * num19 + num20);  						if (num19 < 0.0)  						{  							num21 = -num21;  						}  						num21 = num20 / (num19 + num21);  					}  					double num10 = (num17 + num14) * (num17 - num14) + num21;  					double num22 = num17 * num18;  					for (int l = k; l < m - 1; l++)  					{  						double num4 = Maths.hypot(num10' num22);  						double num11 = num10 / num4;  						double num12 = num22 / num4;  						if (l != k)  						{  							array[l - 1] = num4;  						}  						num10 = num11 * this.s[l] + num12 * array[l];  						array[l] = num11 * array[l] - num12 * this.s[l];  						num22 = num12 * this.s[l + 1];  						this.s[l + 1] = num11 * this.s[l + 1];  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][l + 1];  								this.V[i][l + 1] = -num12 * this.V[i][l] + num11 * this.V[i][l + 1];  								this.V[i][l] = num4;  							}  						}  						num4 = Maths.hypot(num10' num22);  						num11 = num10 / num4;  						num12 = num22 / num4;  						this.s[l] = num4;  						num10 = num11 * array[l] + num12 * this.s[l + 1];  						this.s[l + 1] = -num12 * array[l] + num11 * this.s[l + 1];  						num22 = num12 * array[l + 1];  						array[l + 1] = num11 * array[l + 1];  						if (flag && l < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][l + 1];  								this.U[i][l + 1] = -num12 * this.U[i][l] + num11 * this.U[i][l + 1];  								this.U[i][l] = num4;  							}  						}  					}  					array[m - 2] = num10;  					num6++;  					break;  				}  				case 4:  					if (this.s[k] <= 0.0)  					{  						this.s[k] = ((this.s[k] < 0.0) ? (-this.s[k]) : 0.0);  						if (flag2)  						{  							for (int i = 0; i <= num5; i++)  							{  								this.V[i][k] = -this.V[i][k];  							}  						}  					}  					while (k < num5)  					{  						if (this.s[k] >= this.s[k + 1])  						{  							break;  						}  						double num4 = this.s[k];  						this.s[k] = this.s[k + 1];  						this.s[k + 1] = num4;  						if (flag2 && k < this.n - 1)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = this.V[i][k + 1];  								this.V[i][k + 1] = this.V[i][k];  								this.V[i][k] = num4;  							}  						}  						if (flag && k < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = this.U[i][k + 1];  								this.U[i][k + 1] = this.U[i][k];  								this.U[i][k] = num4;  							}  						}  						k++;  					}  					num6 = 0;  					m--;  					break;  				}  			}
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: while (m > 0)  			{  				int k;  				for (k = m - 2; k >= -1; k--)  				{  					if (k == -1)  					{  						break;  					}  					if (Math.Abs(array[k]) <= num8 + num7 * (Math.Abs(this.s[k]) + Math.Abs(this.s[k + 1])))  					{  						array[k] = 0.0;  						break;  					}  				}  				int num9;  				if (k == m - 2)  				{  					num9 = 4;  				}  				else  				{  					int n;  					for (n = m - 1; n >= k; n--)  					{  						if (n == k)  						{  							break;  						}  						double num4 = ((n != m) ? Math.Abs(array[n]) : 0.0) + ((n != k + 1) ? Math.Abs(array[n - 1]) : 0.0);  						if (Math.Abs(this.s[n]) <= num8 + num7 * num4)  						{  							this.s[n] = 0.0;  							break;  						}  					}  					if (n == k)  					{  						num9 = 3;  					}  					else  					{  						if (n == m - 1)  						{  							num9 = 1;  						}  						else  						{  							num9 = 2;  							k = n;  						}  					}  				}  				k++;  				switch (num9)  				{  				case 1:  				{  					double num10 = array[m - 2];  					array[m - 2] = 0.0;  					for (int l = m - 2; l >= k; l--)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						if (l != k)  						{  							num10 = -num12 * array[l - 1];  							array[l - 1] = num11 * array[l - 1];  						}  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][m - 1];  								this.V[i][m - 1] = -num12 * this.V[i][l] + num11 * this.V[i][m - 1];  								this.V[i][l] = num4;  							}  						}  					}  					break;  				}  				case 2:  				{  					double num10 = array[k - 1];  					array[k - 1] = 0.0;  					for (int l = k; l < m; l++)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						num10 = -num12 * array[l];  						array[l] = num11 * array[l];  						if (flag)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][k - 1];  								this.U[i][k - 1] = -num12 * this.U[i][l] + num11 * this.U[i][k - 1];  								this.U[i][l] = num4;  							}  						}  					}  					break;  				}  				case 3:  				{  					double num13 = Math.Max(Math.Max(Math.Max(Math.Max(Math.Abs(this.s[m - 1])' Math.Abs(this.s[m - 2]))' Math.Abs(array[m - 2]))' Math.Abs(this.s[k]))' Math.Abs(array[k]));  					double num14 = this.s[m - 1] / num13;  					double num15 = this.s[m - 2] / num13;  					double num16 = array[m - 2] / num13;  					double num17 = this.s[k] / num13;  					double num18 = array[k] / num13;  					double num19 = ((num15 + num14) * (num15 - num14) + num16 * num16) / 2.0;  					double num20 = num14 * num16 * (num14 * num16);  					double num21 = 0.0;  					if (num19 != 0.0 | num20 != 0.0)  					{  						num21 = Math.Sqrt(num19 * num19 + num20);  						if (num19 < 0.0)  						{  							num21 = -num21;  						}  						num21 = num20 / (num19 + num21);  					}  					double num10 = (num17 + num14) * (num17 - num14) + num21;  					double num22 = num17 * num18;  					for (int l = k; l < m - 1; l++)  					{  						double num4 = Maths.hypot(num10' num22);  						double num11 = num10 / num4;  						double num12 = num22 / num4;  						if (l != k)  						{  							array[l - 1] = num4;  						}  						num10 = num11 * this.s[l] + num12 * array[l];  						array[l] = num11 * array[l] - num12 * this.s[l];  						num22 = num12 * this.s[l + 1];  						this.s[l + 1] = num11 * this.s[l + 1];  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][l + 1];  								this.V[i][l + 1] = -num12 * this.V[i][l] + num11 * this.V[i][l + 1];  								this.V[i][l] = num4;  							}  						}  						num4 = Maths.hypot(num10' num22);  						num11 = num10 / num4;  						num12 = num22 / num4;  						this.s[l] = num4;  						num10 = num11 * array[l] + num12 * this.s[l + 1];  						this.s[l + 1] = -num12 * array[l] + num11 * this.s[l + 1];  						num22 = num12 * array[l + 1];  						array[l + 1] = num11 * array[l + 1];  						if (flag && l < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][l + 1];  								this.U[i][l + 1] = -num12 * this.U[i][l] + num11 * this.U[i][l + 1];  								this.U[i][l] = num4;  							}  						}  					}  					array[m - 2] = num10;  					num6++;  					break;  				}  				case 4:  					if (this.s[k] <= 0.0)  					{  						this.s[k] = ((this.s[k] < 0.0) ? (-this.s[k]) : 0.0);  						if (flag2)  						{  							for (int i = 0; i <= num5; i++)  							{  								this.V[i][k] = -this.V[i][k];  							}  						}  					}  					while (k < num5)  					{  						if (this.s[k] >= this.s[k + 1])  						{  							break;  						}  						double num4 = this.s[k];  						this.s[k] = this.s[k + 1];  						this.s[k + 1] = num4;  						if (flag2 && k < this.n - 1)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = this.V[i][k + 1];  								this.V[i][k + 1] = this.V[i][k];  								this.V[i][k] = num4;  							}  						}  						if (flag && k < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = this.U[i][k + 1];  								this.U[i][k + 1] = this.U[i][k];  								this.U[i][k] = num4;  							}  						}  						k++;  					}  					num6 = 0;  					m--;  					break;  				}  			}
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: while (m > 0)  			{  				int k;  				for (k = m - 2; k >= -1; k--)  				{  					if (k == -1)  					{  						break;  					}  					if (Math.Abs(array[k]) <= num8 + num7 * (Math.Abs(this.s[k]) + Math.Abs(this.s[k + 1])))  					{  						array[k] = 0.0;  						break;  					}  				}  				int num9;  				if (k == m - 2)  				{  					num9 = 4;  				}  				else  				{  					int n;  					for (n = m - 1; n >= k; n--)  					{  						if (n == k)  						{  							break;  						}  						double num4 = ((n != m) ? Math.Abs(array[n]) : 0.0) + ((n != k + 1) ? Math.Abs(array[n - 1]) : 0.0);  						if (Math.Abs(this.s[n]) <= num8 + num7 * num4)  						{  							this.s[n] = 0.0;  							break;  						}  					}  					if (n == k)  					{  						num9 = 3;  					}  					else  					{  						if (n == m - 1)  						{  							num9 = 1;  						}  						else  						{  							num9 = 2;  							k = n;  						}  					}  				}  				k++;  				switch (num9)  				{  				case 1:  				{  					double num10 = array[m - 2];  					array[m - 2] = 0.0;  					for (int l = m - 2; l >= k; l--)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						if (l != k)  						{  							num10 = -num12 * array[l - 1];  							array[l - 1] = num11 * array[l - 1];  						}  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][m - 1];  								this.V[i][m - 1] = -num12 * this.V[i][l] + num11 * this.V[i][m - 1];  								this.V[i][l] = num4;  							}  						}  					}  					break;  				}  				case 2:  				{  					double num10 = array[k - 1];  					array[k - 1] = 0.0;  					for (int l = k; l < m; l++)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						num10 = -num12 * array[l];  						array[l] = num11 * array[l];  						if (flag)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][k - 1];  								this.U[i][k - 1] = -num12 * this.U[i][l] + num11 * this.U[i][k - 1];  								this.U[i][l] = num4;  							}  						}  					}  					break;  				}  				case 3:  				{  					double num13 = Math.Max(Math.Max(Math.Max(Math.Max(Math.Abs(this.s[m - 1])' Math.Abs(this.s[m - 2]))' Math.Abs(array[m - 2]))' Math.Abs(this.s[k]))' Math.Abs(array[k]));  					double num14 = this.s[m - 1] / num13;  					double num15 = this.s[m - 2] / num13;  					double num16 = array[m - 2] / num13;  					double num17 = this.s[k] / num13;  					double num18 = array[k] / num13;  					double num19 = ((num15 + num14) * (num15 - num14) + num16 * num16) / 2.0;  					double num20 = num14 * num16 * (num14 * num16);  					double num21 = 0.0;  					if (num19 != 0.0 | num20 != 0.0)  					{  						num21 = Math.Sqrt(num19 * num19 + num20);  						if (num19 < 0.0)  						{  							num21 = -num21;  						}  						num21 = num20 / (num19 + num21);  					}  					double num10 = (num17 + num14) * (num17 - num14) + num21;  					double num22 = num17 * num18;  					for (int l = k; l < m - 1; l++)  					{  						double num4 = Maths.hypot(num10' num22);  						double num11 = num10 / num4;  						double num12 = num22 / num4;  						if (l != k)  						{  							array[l - 1] = num4;  						}  						num10 = num11 * this.s[l] + num12 * array[l];  						array[l] = num11 * array[l] - num12 * this.s[l];  						num22 = num12 * this.s[l + 1];  						this.s[l + 1] = num11 * this.s[l + 1];  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][l + 1];  								this.V[i][l + 1] = -num12 * this.V[i][l] + num11 * this.V[i][l + 1];  								this.V[i][l] = num4;  							}  						}  						num4 = Maths.hypot(num10' num22);  						num11 = num10 / num4;  						num12 = num22 / num4;  						this.s[l] = num4;  						num10 = num11 * array[l] + num12 * this.s[l + 1];  						this.s[l + 1] = -num12 * array[l] + num11 * this.s[l + 1];  						num22 = num12 * array[l + 1];  						array[l + 1] = num11 * array[l + 1];  						if (flag && l < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][l + 1];  								this.U[i][l + 1] = -num12 * this.U[i][l] + num11 * this.U[i][l + 1];  								this.U[i][l] = num4;  							}  						}  					}  					array[m - 2] = num10;  					num6++;  					break;  				}  				case 4:  					if (this.s[k] <= 0.0)  					{  						this.s[k] = ((this.s[k] < 0.0) ? (-this.s[k]) : 0.0);  						if (flag2)  						{  							for (int i = 0; i <= num5; i++)  							{  								this.V[i][k] = -this.V[i][k];  							}  						}  					}  					while (k < num5)  					{  						if (this.s[k] >= this.s[k + 1])  						{  							break;  						}  						double num4 = this.s[k];  						this.s[k] = this.s[k + 1];  						this.s[k + 1] = num4;  						if (flag2 && k < this.n - 1)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = this.V[i][k + 1];  								this.V[i][k + 1] = this.V[i][k];  								this.V[i][k] = num4;  							}  						}  						if (flag && k < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = this.U[i][k + 1];  								this.U[i][k + 1] = this.U[i][k];  								this.U[i][k] = num4;  							}  						}  						k++;  					}  					num6 = 0;  					m--;  					break;  				}  			}
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: while (m > 0)  			{  				int k;  				for (k = m - 2; k >= -1; k--)  				{  					if (k == -1)  					{  						break;  					}  					if (Math.Abs(array[k]) <= num8 + num7 * (Math.Abs(this.s[k]) + Math.Abs(this.s[k + 1])))  					{  						array[k] = 0.0;  						break;  					}  				}  				int num9;  				if (k == m - 2)  				{  					num9 = 4;  				}  				else  				{  					int n;  					for (n = m - 1; n >= k; n--)  					{  						if (n == k)  						{  							break;  						}  						double num4 = ((n != m) ? Math.Abs(array[n]) : 0.0) + ((n != k + 1) ? Math.Abs(array[n - 1]) : 0.0);  						if (Math.Abs(this.s[n]) <= num8 + num7 * num4)  						{  							this.s[n] = 0.0;  							break;  						}  					}  					if (n == k)  					{  						num9 = 3;  					}  					else  					{  						if (n == m - 1)  						{  							num9 = 1;  						}  						else  						{  							num9 = 2;  							k = n;  						}  					}  				}  				k++;  				switch (num9)  				{  				case 1:  				{  					double num10 = array[m - 2];  					array[m - 2] = 0.0;  					for (int l = m - 2; l >= k; l--)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						if (l != k)  						{  							num10 = -num12 * array[l - 1];  							array[l - 1] = num11 * array[l - 1];  						}  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][m - 1];  								this.V[i][m - 1] = -num12 * this.V[i][l] + num11 * this.V[i][m - 1];  								this.V[i][l] = num4;  							}  						}  					}  					break;  				}  				case 2:  				{  					double num10 = array[k - 1];  					array[k - 1] = 0.0;  					for (int l = k; l < m; l++)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						num10 = -num12 * array[l];  						array[l] = num11 * array[l];  						if (flag)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][k - 1];  								this.U[i][k - 1] = -num12 * this.U[i][l] + num11 * this.U[i][k - 1];  								this.U[i][l] = num4;  							}  						}  					}  					break;  				}  				case 3:  				{  					double num13 = Math.Max(Math.Max(Math.Max(Math.Max(Math.Abs(this.s[m - 1])' Math.Abs(this.s[m - 2]))' Math.Abs(array[m - 2]))' Math.Abs(this.s[k]))' Math.Abs(array[k]));  					double num14 = this.s[m - 1] / num13;  					double num15 = this.s[m - 2] / num13;  					double num16 = array[m - 2] / num13;  					double num17 = this.s[k] / num13;  					double num18 = array[k] / num13;  					double num19 = ((num15 + num14) * (num15 - num14) + num16 * num16) / 2.0;  					double num20 = num14 * num16 * (num14 * num16);  					double num21 = 0.0;  					if (num19 != 0.0 | num20 != 0.0)  					{  						num21 = Math.Sqrt(num19 * num19 + num20);  						if (num19 < 0.0)  						{  							num21 = -num21;  						}  						num21 = num20 / (num19 + num21);  					}  					double num10 = (num17 + num14) * (num17 - num14) + num21;  					double num22 = num17 * num18;  					for (int l = k; l < m - 1; l++)  					{  						double num4 = Maths.hypot(num10' num22);  						double num11 = num10 / num4;  						double num12 = num22 / num4;  						if (l != k)  						{  							array[l - 1] = num4;  						}  						num10 = num11 * this.s[l] + num12 * array[l];  						array[l] = num11 * array[l] - num12 * this.s[l];  						num22 = num12 * this.s[l + 1];  						this.s[l + 1] = num11 * this.s[l + 1];  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][l + 1];  								this.V[i][l + 1] = -num12 * this.V[i][l] + num11 * this.V[i][l + 1];  								this.V[i][l] = num4;  							}  						}  						num4 = Maths.hypot(num10' num22);  						num11 = num10 / num4;  						num12 = num22 / num4;  						this.s[l] = num4;  						num10 = num11 * array[l] + num12 * this.s[l + 1];  						this.s[l + 1] = -num12 * array[l] + num11 * this.s[l + 1];  						num22 = num12 * array[l + 1];  						array[l + 1] = num11 * array[l + 1];  						if (flag && l < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][l + 1];  								this.U[i][l + 1] = -num12 * this.U[i][l] + num11 * this.U[i][l + 1];  								this.U[i][l] = num4;  							}  						}  					}  					array[m - 2] = num10;  					num6++;  					break;  				}  				case 4:  					if (this.s[k] <= 0.0)  					{  						this.s[k] = ((this.s[k] < 0.0) ? (-this.s[k]) : 0.0);  						if (flag2)  						{  							for (int i = 0; i <= num5; i++)  							{  								this.V[i][k] = -this.V[i][k];  							}  						}  					}  					while (k < num5)  					{  						if (this.s[k] >= this.s[k + 1])  						{  							break;  						}  						double num4 = this.s[k];  						this.s[k] = this.s[k + 1];  						this.s[k + 1] = num4;  						if (flag2 && k < this.n - 1)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = this.V[i][k + 1];  								this.V[i][k + 1] = this.V[i][k];  								this.V[i][k] = num4;  							}  						}  						if (flag && k < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = this.U[i][k + 1];  								this.U[i][k + 1] = this.U[i][k];  								this.U[i][k] = num4;  							}  						}  						k++;  					}  					num6 = 0;  					m--;  					break;  				}  			}
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: while (m > 0)  			{  				int k;  				for (k = m - 2; k >= -1; k--)  				{  					if (k == -1)  					{  						break;  					}  					if (Math.Abs(array[k]) <= num8 + num7 * (Math.Abs(this.s[k]) + Math.Abs(this.s[k + 1])))  					{  						array[k] = 0.0;  						break;  					}  				}  				int num9;  				if (k == m - 2)  				{  					num9 = 4;  				}  				else  				{  					int n;  					for (n = m - 1; n >= k; n--)  					{  						if (n == k)  						{  							break;  						}  						double num4 = ((n != m) ? Math.Abs(array[n]) : 0.0) + ((n != k + 1) ? Math.Abs(array[n - 1]) : 0.0);  						if (Math.Abs(this.s[n]) <= num8 + num7 * num4)  						{  							this.s[n] = 0.0;  							break;  						}  					}  					if (n == k)  					{  						num9 = 3;  					}  					else  					{  						if (n == m - 1)  						{  							num9 = 1;  						}  						else  						{  							num9 = 2;  							k = n;  						}  					}  				}  				k++;  				switch (num9)  				{  				case 1:  				{  					double num10 = array[m - 2];  					array[m - 2] = 0.0;  					for (int l = m - 2; l >= k; l--)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						if (l != k)  						{  							num10 = -num12 * array[l - 1];  							array[l - 1] = num11 * array[l - 1];  						}  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][m - 1];  								this.V[i][m - 1] = -num12 * this.V[i][l] + num11 * this.V[i][m - 1];  								this.V[i][l] = num4;  							}  						}  					}  					break;  				}  				case 2:  				{  					double num10 = array[k - 1];  					array[k - 1] = 0.0;  					for (int l = k; l < m; l++)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						num10 = -num12 * array[l];  						array[l] = num11 * array[l];  						if (flag)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][k - 1];  								this.U[i][k - 1] = -num12 * this.U[i][l] + num11 * this.U[i][k - 1];  								this.U[i][l] = num4;  							}  						}  					}  					break;  				}  				case 3:  				{  					double num13 = Math.Max(Math.Max(Math.Max(Math.Max(Math.Abs(this.s[m - 1])' Math.Abs(this.s[m - 2]))' Math.Abs(array[m - 2]))' Math.Abs(this.s[k]))' Math.Abs(array[k]));  					double num14 = this.s[m - 1] / num13;  					double num15 = this.s[m - 2] / num13;  					double num16 = array[m - 2] / num13;  					double num17 = this.s[k] / num13;  					double num18 = array[k] / num13;  					double num19 = ((num15 + num14) * (num15 - num14) + num16 * num16) / 2.0;  					double num20 = num14 * num16 * (num14 * num16);  					double num21 = 0.0;  					if (num19 != 0.0 | num20 != 0.0)  					{  						num21 = Math.Sqrt(num19 * num19 + num20);  						if (num19 < 0.0)  						{  							num21 = -num21;  						}  						num21 = num20 / (num19 + num21);  					}  					double num10 = (num17 + num14) * (num17 - num14) + num21;  					double num22 = num17 * num18;  					for (int l = k; l < m - 1; l++)  					{  						double num4 = Maths.hypot(num10' num22);  						double num11 = num10 / num4;  						double num12 = num22 / num4;  						if (l != k)  						{  							array[l - 1] = num4;  						}  						num10 = num11 * this.s[l] + num12 * array[l];  						array[l] = num11 * array[l] - num12 * this.s[l];  						num22 = num12 * this.s[l + 1];  						this.s[l + 1] = num11 * this.s[l + 1];  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][l + 1];  								this.V[i][l + 1] = -num12 * this.V[i][l] + num11 * this.V[i][l + 1];  								this.V[i][l] = num4;  							}  						}  						num4 = Maths.hypot(num10' num22);  						num11 = num10 / num4;  						num12 = num22 / num4;  						this.s[l] = num4;  						num10 = num11 * array[l] + num12 * this.s[l + 1];  						this.s[l + 1] = -num12 * array[l] + num11 * this.s[l + 1];  						num22 = num12 * array[l + 1];  						array[l + 1] = num11 * array[l + 1];  						if (flag && l < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][l + 1];  								this.U[i][l + 1] = -num12 * this.U[i][l] + num11 * this.U[i][l + 1];  								this.U[i][l] = num4;  							}  						}  					}  					array[m - 2] = num10;  					num6++;  					break;  				}  				case 4:  					if (this.s[k] <= 0.0)  					{  						this.s[k] = ((this.s[k] < 0.0) ? (-this.s[k]) : 0.0);  						if (flag2)  						{  							for (int i = 0; i <= num5; i++)  							{  								this.V[i][k] = -this.V[i][k];  							}  						}  					}  					while (k < num5)  					{  						if (this.s[k] >= this.s[k + 1])  						{  							break;  						}  						double num4 = this.s[k];  						this.s[k] = this.s[k + 1];  						this.s[k + 1] = num4;  						if (flag2 && k < this.n - 1)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = this.V[i][k + 1];  								this.V[i][k + 1] = this.V[i][k];  								this.V[i][k] = num4;  							}  						}  						if (flag && k < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = this.U[i][k + 1];  								this.U[i][k + 1] = this.U[i][k];  								this.U[i][k] = num4;  							}  						}  						k++;  					}  					num6 = 0;  					m--;  					break;  				}  			}
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: while (m > 0)  			{  				int k;  				for (k = m - 2; k >= -1; k--)  				{  					if (k == -1)  					{  						break;  					}  					if (Math.Abs(array[k]) <= num8 + num7 * (Math.Abs(this.s[k]) + Math.Abs(this.s[k + 1])))  					{  						array[k] = 0.0;  						break;  					}  				}  				int num9;  				if (k == m - 2)  				{  					num9 = 4;  				}  				else  				{  					int n;  					for (n = m - 1; n >= k; n--)  					{  						if (n == k)  						{  							break;  						}  						double num4 = ((n != m) ? Math.Abs(array[n]) : 0.0) + ((n != k + 1) ? Math.Abs(array[n - 1]) : 0.0);  						if (Math.Abs(this.s[n]) <= num8 + num7 * num4)  						{  							this.s[n] = 0.0;  							break;  						}  					}  					if (n == k)  					{  						num9 = 3;  					}  					else  					{  						if (n == m - 1)  						{  							num9 = 1;  						}  						else  						{  							num9 = 2;  							k = n;  						}  					}  				}  				k++;  				switch (num9)  				{  				case 1:  				{  					double num10 = array[m - 2];  					array[m - 2] = 0.0;  					for (int l = m - 2; l >= k; l--)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						if (l != k)  						{  							num10 = -num12 * array[l - 1];  							array[l - 1] = num11 * array[l - 1];  						}  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][m - 1];  								this.V[i][m - 1] = -num12 * this.V[i][l] + num11 * this.V[i][m - 1];  								this.V[i][l] = num4;  							}  						}  					}  					break;  				}  				case 2:  				{  					double num10 = array[k - 1];  					array[k - 1] = 0.0;  					for (int l = k; l < m; l++)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						num10 = -num12 * array[l];  						array[l] = num11 * array[l];  						if (flag)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][k - 1];  								this.U[i][k - 1] = -num12 * this.U[i][l] + num11 * this.U[i][k - 1];  								this.U[i][l] = num4;  							}  						}  					}  					break;  				}  				case 3:  				{  					double num13 = Math.Max(Math.Max(Math.Max(Math.Max(Math.Abs(this.s[m - 1])' Math.Abs(this.s[m - 2]))' Math.Abs(array[m - 2]))' Math.Abs(this.s[k]))' Math.Abs(array[k]));  					double num14 = this.s[m - 1] / num13;  					double num15 = this.s[m - 2] / num13;  					double num16 = array[m - 2] / num13;  					double num17 = this.s[k] / num13;  					double num18 = array[k] / num13;  					double num19 = ((num15 + num14) * (num15 - num14) + num16 * num16) / 2.0;  					double num20 = num14 * num16 * (num14 * num16);  					double num21 = 0.0;  					if (num19 != 0.0 | num20 != 0.0)  					{  						num21 = Math.Sqrt(num19 * num19 + num20);  						if (num19 < 0.0)  						{  							num21 = -num21;  						}  						num21 = num20 / (num19 + num21);  					}  					double num10 = (num17 + num14) * (num17 - num14) + num21;  					double num22 = num17 * num18;  					for (int l = k; l < m - 1; l++)  					{  						double num4 = Maths.hypot(num10' num22);  						double num11 = num10 / num4;  						double num12 = num22 / num4;  						if (l != k)  						{  							array[l - 1] = num4;  						}  						num10 = num11 * this.s[l] + num12 * array[l];  						array[l] = num11 * array[l] - num12 * this.s[l];  						num22 = num12 * this.s[l + 1];  						this.s[l + 1] = num11 * this.s[l + 1];  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][l + 1];  								this.V[i][l + 1] = -num12 * this.V[i][l] + num11 * this.V[i][l + 1];  								this.V[i][l] = num4;  							}  						}  						num4 = Maths.hypot(num10' num22);  						num11 = num10 / num4;  						num12 = num22 / num4;  						this.s[l] = num4;  						num10 = num11 * array[l] + num12 * this.s[l + 1];  						this.s[l + 1] = -num12 * array[l] + num11 * this.s[l + 1];  						num22 = num12 * array[l + 1];  						array[l + 1] = num11 * array[l + 1];  						if (flag && l < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][l + 1];  								this.U[i][l + 1] = -num12 * this.U[i][l] + num11 * this.U[i][l + 1];  								this.U[i][l] = num4;  							}  						}  					}  					array[m - 2] = num10;  					num6++;  					break;  				}  				case 4:  					if (this.s[k] <= 0.0)  					{  						this.s[k] = ((this.s[k] < 0.0) ? (-this.s[k]) : 0.0);  						if (flag2)  						{  							for (int i = 0; i <= num5; i++)  							{  								this.V[i][k] = -this.V[i][k];  							}  						}  					}  					while (k < num5)  					{  						if (this.s[k] >= this.s[k + 1])  						{  							break;  						}  						double num4 = this.s[k];  						this.s[k] = this.s[k + 1];  						this.s[k + 1] = num4;  						if (flag2 && k < this.n - 1)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = this.V[i][k + 1];  								this.V[i][k + 1] = this.V[i][k];  								this.V[i][k] = num4;  							}  						}  						if (flag && k < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = this.U[i][k + 1];  								this.U[i][k + 1] = this.U[i][k];  								this.U[i][k] = num4;  							}  						}  						k++;  					}  					num6 = 0;  					m--;  					break;  				}  			}
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following statement contains a magic number: while (m > 0)  			{  				int k;  				for (k = m - 2; k >= -1; k--)  				{  					if (k == -1)  					{  						break;  					}  					if (Math.Abs(array[k]) <= num8 + num7 * (Math.Abs(this.s[k]) + Math.Abs(this.s[k + 1])))  					{  						array[k] = 0.0;  						break;  					}  				}  				int num9;  				if (k == m - 2)  				{  					num9 = 4;  				}  				else  				{  					int n;  					for (n = m - 1; n >= k; n--)  					{  						if (n == k)  						{  							break;  						}  						double num4 = ((n != m) ? Math.Abs(array[n]) : 0.0) + ((n != k + 1) ? Math.Abs(array[n - 1]) : 0.0);  						if (Math.Abs(this.s[n]) <= num8 + num7 * num4)  						{  							this.s[n] = 0.0;  							break;  						}  					}  					if (n == k)  					{  						num9 = 3;  					}  					else  					{  						if (n == m - 1)  						{  							num9 = 1;  						}  						else  						{  							num9 = 2;  							k = n;  						}  					}  				}  				k++;  				switch (num9)  				{  				case 1:  				{  					double num10 = array[m - 2];  					array[m - 2] = 0.0;  					for (int l = m - 2; l >= k; l--)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						if (l != k)  						{  							num10 = -num12 * array[l - 1];  							array[l - 1] = num11 * array[l - 1];  						}  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][m - 1];  								this.V[i][m - 1] = -num12 * this.V[i][l] + num11 * this.V[i][m - 1];  								this.V[i][l] = num4;  							}  						}  					}  					break;  				}  				case 2:  				{  					double num10 = array[k - 1];  					array[k - 1] = 0.0;  					for (int l = k; l < m; l++)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						num10 = -num12 * array[l];  						array[l] = num11 * array[l];  						if (flag)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][k - 1];  								this.U[i][k - 1] = -num12 * this.U[i][l] + num11 * this.U[i][k - 1];  								this.U[i][l] = num4;  							}  						}  					}  					break;  				}  				case 3:  				{  					double num13 = Math.Max(Math.Max(Math.Max(Math.Max(Math.Abs(this.s[m - 1])' Math.Abs(this.s[m - 2]))' Math.Abs(array[m - 2]))' Math.Abs(this.s[k]))' Math.Abs(array[k]));  					double num14 = this.s[m - 1] / num13;  					double num15 = this.s[m - 2] / num13;  					double num16 = array[m - 2] / num13;  					double num17 = this.s[k] / num13;  					double num18 = array[k] / num13;  					double num19 = ((num15 + num14) * (num15 - num14) + num16 * num16) / 2.0;  					double num20 = num14 * num16 * (num14 * num16);  					double num21 = 0.0;  					if (num19 != 0.0 | num20 != 0.0)  					{  						num21 = Math.Sqrt(num19 * num19 + num20);  						if (num19 < 0.0)  						{  							num21 = -num21;  						}  						num21 = num20 / (num19 + num21);  					}  					double num10 = (num17 + num14) * (num17 - num14) + num21;  					double num22 = num17 * num18;  					for (int l = k; l < m - 1; l++)  					{  						double num4 = Maths.hypot(num10' num22);  						double num11 = num10 / num4;  						double num12 = num22 / num4;  						if (l != k)  						{  							array[l - 1] = num4;  						}  						num10 = num11 * this.s[l] + num12 * array[l];  						array[l] = num11 * array[l] - num12 * this.s[l];  						num22 = num12 * this.s[l + 1];  						this.s[l + 1] = num11 * this.s[l + 1];  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][l + 1];  								this.V[i][l + 1] = -num12 * this.V[i][l] + num11 * this.V[i][l + 1];  								this.V[i][l] = num4;  							}  						}  						num4 = Maths.hypot(num10' num22);  						num11 = num10 / num4;  						num12 = num22 / num4;  						this.s[l] = num4;  						num10 = num11 * array[l] + num12 * this.s[l + 1];  						this.s[l + 1] = -num12 * array[l] + num11 * this.s[l + 1];  						num22 = num12 * array[l + 1];  						array[l + 1] = num11 * array[l + 1];  						if (flag && l < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][l + 1];  								this.U[i][l + 1] = -num12 * this.U[i][l] + num11 * this.U[i][l + 1];  								this.U[i][l] = num4;  							}  						}  					}  					array[m - 2] = num10;  					num6++;  					break;  				}  				case 4:  					if (this.s[k] <= 0.0)  					{  						this.s[k] = ((this.s[k] < 0.0) ? (-this.s[k]) : 0.0);  						if (flag2)  						{  							for (int i = 0; i <= num5; i++)  							{  								this.V[i][k] = -this.V[i][k];  							}  						}  					}  					while (k < num5)  					{  						if (this.s[k] >= this.s[k + 1])  						{  							break;  						}  						double num4 = this.s[k];  						this.s[k] = this.s[k + 1];  						this.s[k + 1] = num4;  						if (flag2 && k < this.n - 1)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = this.V[i][k + 1];  								this.V[i][k + 1] = this.V[i][k];  								this.V[i][k] = num4;  							}  						}  						if (flag && k < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = this.U[i][k + 1];  								this.U[i][k + 1] = this.U[i][k];  								this.U[i][k] = num4;  							}  						}  						k++;  					}  					num6 = 0;  					m--;  					break;  				}  			}
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,rank,The following statement contains a magic number: double num = Math.Pow(2.0' -52.0);
Magic Number,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,rank,The following statement contains a magic number: double num = Math.Pow(2.0' -52.0);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,Affine2DPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\Affine2DPointTransformer.cs,Affine2DPointTransformer,The following statement contains a magic number: this.c2 = matrix.GetElement(0' 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,Affine2DPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\Affine2DPointTransformer.cs,Affine2DPointTransformer,The following statement contains a magic number: this.c5 = matrix.GetElement(1' 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,AsyncRecord,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\AsyncRecord.cs,Dispose,The following statement contains a magic number: D.Sayf(10' "Disposed({0})"' new object[]  			{  				this  			});
Magic Number,MSR.CVE.BackMaker.ImagePipeline,AsyncRecord,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\AsyncRecord.cs,DeQueued,The following statement contains a magic number: D.Say(10' string.Format("DeQueued({0})"' this));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,AsyncRef,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\AsyncRef.cs,SetInterest,The following statement contains a magic number: int num = (this.localInterest > 524291) ? 1 : 0;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,AsyncRef,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\AsyncRef.cs,SetInterest,The following statement contains a magic number: int num2 = (newInterest > 524291) ? 1 : 0;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,AsyncScheduler,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\AsyncScheduler.cs,Activate,The following statement contains a magic number: try  			{  				List<QueueRequestIfc> list = new List<QueueRequestIfc>();  				foreach (AsyncRef current in refs)  				{  					if (current.asyncRecord.PrepareToQueue())  					{  						current.asyncRecord.AddCallback(new AsyncRecord.CompleteCallback(this.EvictFromCache));  						list.Add(current.asyncRecord.GetQTPRef());  					}  				}  				this.qtp.enqueueTileRequests(list.ToArray());  				D.Sayf(10' "PriQueue: {0}"' new object[]  				{  					this.qtp  				});  			}  			finally  			{  				Monitor.Exit(this);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,CachePackage,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\CachePackage.cs,Flush,The following statement contains a magic number: this.networkAsyncScheduler = new AsyncScheduler(8' "networkScheduler" + this.suffix);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,CachePackage,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\CachePackage.cs,Flush,The following statement contains a magic number: this.computeCache = new MemoryCache("computeCache" + this.suffix' 100);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,CachePackage,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\CachePackage.cs,Flush,The following statement contains a magic number: this.documentFetchCache = new MemoryCache("documentCache" + this.suffix' 10000);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,pixelsPerDegree,The following statement contains a magic number: return 512.0 * Math.Pow(2.0' (double)(zoomLevel - 5));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,pixelsPerDegree,The following statement contains a magic number: return 512.0 * Math.Pow(2.0' (double)(zoomLevel - 5));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,pixelsPerDegree,The following statement contains a magic number: return 512.0 * Math.Pow(2.0' (double)(zoomLevel - 5));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,exactZoom,The following statement contains a magic number: return 5.0 + Math.Log(pixelsPerDegree / 512.0' 2.0);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,exactZoom,The following statement contains a magic number: return 5.0 + Math.Log(pixelsPerDegree / 512.0' 2.0);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,exactZoom,The following statement contains a magic number: return 5.0 + Math.Log(pixelsPerDegree / 512.0' 2.0);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetDefaultView,The following statement contains a magic number: return new LatLonZoom(0.5' 0.5' 5);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetDefaultView,The following statement contains a magic number: return new LatLonZoom(0.5' 0.5' 5);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetDefaultView,The following statement contains a magic number: return new LatLonZoom(0.5' 0.5' 5);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetTileSize,The following statement contains a magic number: return new Size(512' 512);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetTileSize,The following statement contains a magic number: return new Size(512' 512);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetBestViewContaining,The following statement contains a magic number: int zoom = (int)(this.exactZoom((double)size.Height / (newBounds.lat1 - newBounds.lat0)) + 0.99);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetTileContainingLatLonZoom,The following statement contains a magic number: return new TileAddress((int)Math.Floor((double)point.X / 512.0)' (int)Math.Floor((double)point.Y / 512.0)' llz.zoom);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetTileContainingLatLonZoom,The following statement contains a magic number: return new TileAddress((int)Math.Floor((double)point.X / 512.0)' (int)Math.Floor((double)point.Y / 512.0)' llz.zoom);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetUnclippedMapWindow,The following statement contains a magic number: return new MapRectangle(this.GetTranslationInLatLon(centerPosition' new Point(windowSize.Width / 2' windowSize.Height / 2)).latlon' this.GetTranslationInLatLon(centerPosition' new Point(-(windowSize.Width / 2 + 1)' -(windowSize.Height / 2 + 1))).latlon);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetUnclippedMapWindow,The following statement contains a magic number: return new MapRectangle(this.GetTranslationInLatLon(centerPosition' new Point(windowSize.Width / 2' windowSize.Height / 2)).latlon' this.GetTranslationInLatLon(centerPosition' new Point(-(windowSize.Width / 2 + 1)' -(windowSize.Height / 2 + 1))).latlon);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetUnclippedMapWindow,The following statement contains a magic number: return new MapRectangle(this.GetTranslationInLatLon(centerPosition' new Point(windowSize.Width / 2' windowSize.Height / 2)).latlon' this.GetTranslationInLatLon(centerPosition' new Point(-(windowSize.Width / 2 + 1)' -(windowSize.Height / 2 + 1))).latlon);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetUnclippedMapWindow,The following statement contains a magic number: return new MapRectangle(this.GetTranslationInLatLon(centerPosition' new Point(windowSize.Width / 2' windowSize.Height / 2)).latlon' this.GetTranslationInLatLon(centerPosition' new Point(-(windowSize.Width / 2 + 1)' -(windowSize.Height / 2 + 1))).latlon);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetTileArrayDescriptor,The following statement contains a magic number: tileDisplayDescriptorArray.topLeftTileOffset = new Point((int)((long)(tileDisplayDescriptorArray.topLeftTile.TileX * 512) - point.X)' (int)(point.Y - (long)((tileDisplayDescriptorArray.topLeftTile.TileY + 1) * 512)));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ContinuousCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ContinuousCoordinateSystem.cs,GetTileArrayDescriptor,The following statement contains a magic number: tileDisplayDescriptorArray.topLeftTileOffset = new Point((int)((long)(tileDisplayDescriptorArray.topLeftTile.TileX * 512) - point.X)' (int)(point.Y - (long)((tileDisplayDescriptorArray.topLeftTile.TileY + 1) * 512)));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,CoordinateSystemUtilities,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\CoordinateSystemUtilities.cs,DegreesToRadians,The following statement contains a magic number: return degrees * 3.1415926535897931 / 180.0;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,CoordinateSystemUtilities,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\CoordinateSystemUtilities.cs,DegreesToRadians,The following statement contains a magic number: return degrees * 3.1415926535897931 / 180.0;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,CoordinateSystemUtilities,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\CoordinateSystemUtilities.cs,RadiansToDegrees,The following statement contains a magic number: return radians * 180.0 / 3.1415926535897931;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,CoordinateSystemUtilities,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\CoordinateSystemUtilities.cs,RadiansToDegrees,The following statement contains a magic number: return radians * 180.0 / 3.1415926535897931;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,CoordinateSystemUtilities,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\CoordinateSystemUtilities.cs,GetBounds,The following statement contains a magic number: LatLon latlon = coordinateSystem.GetTranslationInLatLon(center' new Point(size.Width / 2' size.Height / 2)).latlon;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,CoordinateSystemUtilities,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\CoordinateSystemUtilities.cs,GetBounds,The following statement contains a magic number: LatLon latlon = coordinateSystem.GetTranslationInLatLon(center' new Point(size.Width / 2' size.Height / 2)).latlon;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,CoordinateSystemUtilities,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\CoordinateSystemUtilities.cs,GetBounds,The following statement contains a magic number: LatLon latlon2 = coordinateSystem.GetTranslationInLatLon(center' new Point(-size.Width / 2' -size.Height / 2)).latlon;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,CoordinateSystemUtilities,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\CoordinateSystemUtilities.cs,GetBounds,The following statement contains a magic number: LatLon latlon2 = coordinateSystem.GetTranslationInLatLon(center' new Point(-size.Width / 2' -size.Height / 2)).latlon;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,CoordinateSystemUtilities,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\CoordinateSystemUtilities.cs,TileAddressToMapRectangle,The following statement contains a magic number: if (tileAddress2.TileX < tileAddress.TileX)  			{  				latLonOfTileNW2 = new LatLon(latLonOfTileNW2.lat' latLonOfTileNW2.lon + 360.0);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,CoordinateSystemUtilities,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\CoordinateSystemUtilities.cs,TileAddressToMapRectangle,The following statement contains a magic number: if (tileAddress2.TileY < tileAddress.TileY)  			{  				D.Assert(false' "study this case");  				latLonOfTileNW2 = new LatLon(latLonOfTileNW2.lat - 180.0' latLonOfTileNW2.lon);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,DiskCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\DiskCache.cs,Get,The following statement contains a magic number: try  			{  				long num;  				Present present = this.Fetch(text' out num);  				if (present != null)  				{  					D.Sayf(10' "fresh hit! {0}"' new object[]  					{  						"fresh."  					});  					Present result = present;  					return result;  				}  				present = this.Fetch(text2' out num);  				if (present != null)  				{  					File.Move(text2' text);  					this.IncrementFreshCount(num);  					D.Sayf(10' "stale hit! {0} {1}"' new object[]  					{  						"stale."'  						num  					});  					Present result = present;  					return result;  				}  			}  			finally  			{  				Monitor.Exit(this);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,DiskCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\DiskCache.cs,Get,The following statement contains a magic number: try  			{  				long num;  				Present present = this.Fetch(text' out num);  				if (present != null)  				{  					D.Sayf(10' "fresh hit! {0}"' new object[]  					{  						"fresh."  					});  					Present result = present;  					return result;  				}  				present = this.Fetch(text2' out num);  				if (present != null)  				{  					File.Move(text2' text);  					this.IncrementFreshCount(num);  					D.Sayf(10' "stale hit! {0} {1}"' new object[]  					{  						"stale."'  						num  					});  					Present result = present;  					return result;  				}  			}  			finally  			{  				Monitor.Exit(this);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,DiskCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\DiskCache.cs,Get,The following statement contains a magic number: D.Sayf(10' "miss"' new object[0]);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,DiskCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\DiskCache.cs,EvictThread,The following statement contains a magic number: Label_0000:              try              {                  this.plowCacheEvent.WaitOne();                  lock (this)                  {                      if (this.disposed)                      {                          lock (this)                          {                              this.plowCacheEvent.Close();                              this.plowCacheEvent = null;                          }                          return;                      }                      if (this.freshCount <= 0x1f400000L)                      {                          goto Label_0000;                      }                  }                  D.Sayf(1' "Before evict: freshCount {0} kB"' new object[] { this.freshCount >> 10 });                  this.EvictStaleFiles();                  this.EvictDemoteFreshFiles();                  D.Sayf(1' "After evict: freshCount {0} kB"' new object[] { this.freshCount >> 10 });              }              catch (Exception exception)              {                  D.Sayf(1' "DiskCache.EvictThread ignores ex {0}"' new object[] { exception });              }
Magic Number,MSR.CVE.BackMaker.ImagePipeline,DiskCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\DiskCache.cs,EvictThread,The following statement contains a magic number: Label_0000:              try              {                  this.plowCacheEvent.WaitOne();                  lock (this)                  {                      if (this.disposed)                      {                          lock (this)                          {                              this.plowCacheEvent.Close();                              this.plowCacheEvent = null;                          }                          return;                      }                      if (this.freshCount <= 0x1f400000L)                      {                          goto Label_0000;                      }                  }                  D.Sayf(1' "Before evict: freshCount {0} kB"' new object[] { this.freshCount >> 10 });                  this.EvictStaleFiles();                  this.EvictDemoteFreshFiles();                  D.Sayf(1' "After evict: freshCount {0} kB"' new object[] { this.freshCount >> 10 });              }              catch (Exception exception)              {                  D.Sayf(1' "DiskCache.EvictThread ignores ex {0}"' new object[] { exception });              }
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FadeVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FadeVerb.cs,Evaluate,The following statement contains a magic number: D.Assert(paramList.Length == 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FastPoly1PointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FastPoly1PointTransformer.cs,FastPoly1PointTransformer,The following statement contains a magic number: for (int i = 0; i < 6; i++)  			{  				this.c[i] = matrix.GetElement(i' 0);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FastPoly1PointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FastPoly1PointTransformer.cs,doTransform,The following statement contains a magic number: p1.x = this.c[0] + this.c[1] * p0.y + this.c[2] * p0.x;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FastPoly1PointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FastPoly1PointTransformer.cs,doTransform,The following statement contains a magic number: p1.y = this.c[3] + this.c[4] * p0.y + this.c[5] * p0.x;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FastPoly1PointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FastPoly1PointTransformer.cs,doTransform,The following statement contains a magic number: p1.y = this.c[3] + this.c[4] * p0.y + this.c[5] * p0.x;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FastPoly1PointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FastPoly1PointTransformer.cs,doTransform,The following statement contains a magic number: p1.y = this.c[3] + this.c[4] * p0.y + this.c[5] * p0.x;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FastPoly2PointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FastPoly2PointTransformer.cs,FastPoly2PointTransformer,The following statement contains a magic number: this.polynomialDegree = 2;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FastPoly2PointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FastPoly2PointTransformer.cs,FastPoly2PointTransformer,The following statement contains a magic number: for (int i = 0; i < 12; i++)  			{  				this.c[i] = matrix.GetElement(i' 0);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FastPoly2PointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FastPoly2PointTransformer.cs,doTransform,The following statement contains a magic number: p1.x = this.c[0] + this.c[1] * p0.y + this.c[2] * num3 + this.c[3] * p0.x + this.c[4] * num2 + this.c[5] * num;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FastPoly2PointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FastPoly2PointTransformer.cs,doTransform,The following statement contains a magic number: p1.x = this.c[0] + this.c[1] * p0.y + this.c[2] * num3 + this.c[3] * p0.x + this.c[4] * num2 + this.c[5] * num;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FastPoly2PointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FastPoly2PointTransformer.cs,doTransform,The following statement contains a magic number: p1.x = this.c[0] + this.c[1] * p0.y + this.c[2] * num3 + this.c[3] * p0.x + this.c[4] * num2 + this.c[5] * num;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FastPoly2PointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FastPoly2PointTransformer.cs,doTransform,The following statement contains a magic number: p1.x = this.c[0] + this.c[1] * p0.y + this.c[2] * num3 + this.c[3] * p0.x + this.c[4] * num2 + this.c[5] * num;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FastPoly2PointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FastPoly2PointTransformer.cs,doTransform,The following statement contains a magic number: p1.y = this.c[6] + this.c[7] * p0.y + this.c[8] * num3 + this.c[9] * p0.x + this.c[10] * num2 + this.c[11] * num;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FastPoly2PointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FastPoly2PointTransformer.cs,doTransform,The following statement contains a magic number: p1.y = this.c[6] + this.c[7] * p0.y + this.c[8] * num3 + this.c[9] * p0.x + this.c[10] * num2 + this.c[11] * num;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FastPoly2PointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FastPoly2PointTransformer.cs,doTransform,The following statement contains a magic number: p1.y = this.c[6] + this.c[7] * p0.y + this.c[8] * num3 + this.c[9] * p0.x + this.c[10] * num2 + this.c[11] * num;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FastPoly2PointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FastPoly2PointTransformer.cs,doTransform,The following statement contains a magic number: p1.y = this.c[6] + this.c[7] * p0.y + this.c[8] * num3 + this.c[9] * p0.x + this.c[10] * num2 + this.c[11] * num;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FastPoly2PointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FastPoly2PointTransformer.cs,doTransform,The following statement contains a magic number: p1.y = this.c[6] + this.c[7] * p0.y + this.c[8] * num3 + this.c[9] * p0.x + this.c[10] * num2 + this.c[11] * num;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FastPoly2PointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FastPoly2PointTransformer.cs,doTransform,The following statement contains a magic number: p1.y = this.c[6] + this.c[7] * p0.y + this.c[8] * num3 + this.c[9] * p0.x + this.c[10] * num2 + this.c[11] * num;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FoxitOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FoxitOpenDocument.cs,Render,The following statement contains a magic number: if (pagesize.Width > 262144 || pagesize.Width <= 0 || pagesize.Height > 262144 || pagesize.Height <= 0)  			{  				return new PresentFailureCode("Zoomed beyond FoxIt limits");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FoxitOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FoxitOpenDocument.cs,Render,The following statement contains a magic number: if (pagesize.Width > 262144 || pagesize.Width <= 0 || pagesize.Height > 262144 || pagesize.Height <= 0)  			{  				return new PresentFailureCode("Zoomed beyond FoxIt limits");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FoxitOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FoxitOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  				D.Assert(paramList.Length == 2);  				return new IntParameter(5);  			case 3:  				D.Assert(paramList.Length == 1);  				if (BuildConfig.theConfig.suppressFoxitMessages)  				{  					return new StringParameter(null);  				}  				return new StringParameter("MapCruncher PDF rendering powered by Foxit Software Company");  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FoxitOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FoxitOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  				D.Assert(paramList.Length == 2);  				return new IntParameter(5);  			case 3:  				D.Assert(paramList.Length == 1);  				if (BuildConfig.theConfig.suppressFoxitMessages)  				{  					return new StringParameter(null);  				}  				return new StringParameter("MapCruncher PDF rendering powered by Foxit Software Company");  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FoxitOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FoxitOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  				D.Assert(paramList.Length == 2);  				return new IntParameter(5);  			case 3:  				D.Assert(paramList.Length == 1);  				if (BuildConfig.theConfig.suppressFoxitMessages)  				{  					return new StringParameter(null);  				}  				return new StringParameter("MapCruncher PDF rendering powered by Foxit Software Company");  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FoxitOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FoxitOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  				D.Assert(paramList.Length == 2);  				return new IntParameter(5);  			case 3:  				D.Assert(paramList.Length == 1);  				if (BuildConfig.theConfig.suppressFoxitMessages)  				{  					return new StringParameter(null);  				}  				return new StringParameter("MapCruncher PDF rendering powered by Foxit Software Company");  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FoxitOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FoxitOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  				D.Assert(paramList.Length == 2);  				return new IntParameter(5);  			case 3:  				D.Assert(paramList.Length == 1);  				if (BuildConfig.theConfig.suppressFoxitMessages)  				{  					return new StringParameter(null);  				}  				return new StringParameter("MapCruncher PDF rendering powered by Foxit Software Company");  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FoxitOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FoxitOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  				D.Assert(paramList.Length == 2);  				return new IntParameter(5);  			case 3:  				D.Assert(paramList.Length == 1);  				if (BuildConfig.theConfig.suppressFoxitMessages)  				{  					return new StringParameter(null);  				}  				return new StringParameter("MapCruncher PDF rendering powered by Foxit Software Company");  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FoxitOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FoxitOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  				D.Assert(paramList.Length == 2);  				return new IntParameter(5);  			case 3:  				D.Assert(paramList.Length == 1);  				if (BuildConfig.theConfig.suppressFoxitMessages)  				{  					return new StringParameter(null);  				}  				return new StringParameter("MapCruncher PDF rendering powered by Foxit Software Company");  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FoxitOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FoxitOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  				D.Assert(paramList.Length == 2);  				return new IntParameter(5);  			case 3:  				D.Assert(paramList.Length == 1);  				if (BuildConfig.theConfig.suppressFoxitMessages)  				{  					return new StringParameter(null);  				}  				return new StringParameter("MapCruncher PDF rendering powered by Foxit Software Company");  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FoxitOpenVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FoxitOpenVerb.cs,Evaluate,The following statement contains a magic number: D.Assert(paramList.Length == 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,FutureDocumentFromUri,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\FutureDocumentFromUri.cs,BytesToHexString,The following statement contains a magic number: StringBuilder stringBuilder = new StringBuilder(buffer.Length * 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,GDIOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\GDIOpenDocument.cs,Render,The following statement contains a magic number: try  			{  				RectangleD rectangleD = new RectangleD(mapRect.lon0 * (double)this.boundingBox.Width - 0.5' -mapRect.lat1 * (double)this.boundingBox.Height + (double)this.actualBoundingBox.Height - 0.5' (mapRect.lon1 - mapRect.lon0) * (double)this.boundingBox.Width + (double)this.hackRectangleAdjust' (mapRect.lat1 - mapRect.lat0) * (double)this.boundingBox.Height + (double)this.hackRectangleAdjust);  				RectangleD rectangleD2 = new RectangleD(0.0' 0.0' (double)size.Width' (double)size.Height);  				this.Reclip(this.actualBoundingBox' ref rectangleD' ref rectangleD2);  				D.Say(10' string.Format("Rendering {0} from {1}"' mapRect' rectangleD));  				GDIBigLockedImage gDIBigLockedImage = new GDIBigLockedImage(size' "GDIVerb");  				if (exactColors)  				{  					gDIBigLockedImage.SetInterpolationMode(InterpolationMode.NearestNeighbor);  				}  				else  				{  					gDIBigLockedImage.SetInterpolationMode(InterpolationMode.HighQualityBicubic);  				}  				gDIBigLockedImage.DrawImageOntoThis(this.loadedImage' rectangleD2.ToRectangleF()' rectangleD.ToRectangleF());  				result = new ImageRef(new ImageRefCounted(gDIBigLockedImage));  			}  			finally  			{  				Monitor.Exit(this);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,GDIOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\GDIOpenDocument.cs,Render,The following statement contains a magic number: try  			{  				RectangleD rectangleD = new RectangleD(mapRect.lon0 * (double)this.boundingBox.Width - 0.5' -mapRect.lat1 * (double)this.boundingBox.Height + (double)this.actualBoundingBox.Height - 0.5' (mapRect.lon1 - mapRect.lon0) * (double)this.boundingBox.Width + (double)this.hackRectangleAdjust' (mapRect.lat1 - mapRect.lat0) * (double)this.boundingBox.Height + (double)this.hackRectangleAdjust);  				RectangleD rectangleD2 = new RectangleD(0.0' 0.0' (double)size.Width' (double)size.Height);  				this.Reclip(this.actualBoundingBox' ref rectangleD' ref rectangleD2);  				D.Say(10' string.Format("Rendering {0} from {1}"' mapRect' rectangleD));  				GDIBigLockedImage gDIBigLockedImage = new GDIBigLockedImage(size' "GDIVerb");  				if (exactColors)  				{  					gDIBigLockedImage.SetInterpolationMode(InterpolationMode.NearestNeighbor);  				}  				else  				{  					gDIBigLockedImage.SetInterpolationMode(InterpolationMode.HighQualityBicubic);  				}  				gDIBigLockedImage.DrawImageOntoThis(this.loadedImage' rectangleD2.ToRectangleF()' rectangleD.ToRectangleF());  				result = new ImageRef(new ImageRefCounted(gDIBigLockedImage));  			}  			finally  			{  				Monitor.Exit(this);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,GDIOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\GDIOpenDocument.cs,Render,The following statement contains a magic number: try  			{  				RectangleD rectangleD = new RectangleD(mapRect.lon0 * (double)this.boundingBox.Width - 0.5' -mapRect.lat1 * (double)this.boundingBox.Height + (double)this.actualBoundingBox.Height - 0.5' (mapRect.lon1 - mapRect.lon0) * (double)this.boundingBox.Width + (double)this.hackRectangleAdjust' (mapRect.lat1 - mapRect.lat0) * (double)this.boundingBox.Height + (double)this.hackRectangleAdjust);  				RectangleD rectangleD2 = new RectangleD(0.0' 0.0' (double)size.Width' (double)size.Height);  				this.Reclip(this.actualBoundingBox' ref rectangleD' ref rectangleD2);  				D.Say(10' string.Format("Rendering {0} from {1}"' mapRect' rectangleD));  				GDIBigLockedImage gDIBigLockedImage = new GDIBigLockedImage(size' "GDIVerb");  				if (exactColors)  				{  					gDIBigLockedImage.SetInterpolationMode(InterpolationMode.NearestNeighbor);  				}  				else  				{  					gDIBigLockedImage.SetInterpolationMode(InterpolationMode.HighQualityBicubic);  				}  				gDIBigLockedImage.DrawImageOntoThis(this.loadedImage' rectangleD2.ToRectangleF()' rectangleD.ToRectangleF());  				result = new ImageRef(new ImageRefCounted(gDIBigLockedImage));  			}  			finally  			{  				Monitor.Exit(this);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,GDIOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\GDIOpenDocument.cs,ImageDetail,The following statement contains a magic number: int num2 = 1 + (int)Math.Ceiling(Math.Log(num) / Math.Log(2.0));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,GDIOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\GDIOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  			{  				D.Assert(paramList.Length == 2);  				SizeParameter sizeParameter2 = (SizeParameter)paramList[1];  				return this.ImageDetail(sizeParameter2.value);  			}  			case 3:  				D.Assert(paramList.Length == 1);  				return new StringParameter(null);  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,GDIOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\GDIOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  			{  				D.Assert(paramList.Length == 2);  				SizeParameter sizeParameter2 = (SizeParameter)paramList[1];  				return this.ImageDetail(sizeParameter2.value);  			}  			case 3:  				D.Assert(paramList.Length == 1);  				return new StringParameter(null);  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,GDIOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\GDIOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  			{  				D.Assert(paramList.Length == 2);  				SizeParameter sizeParameter2 = (SizeParameter)paramList[1];  				return this.ImageDetail(sizeParameter2.value);  			}  			case 3:  				D.Assert(paramList.Length == 1);  				return new StringParameter(null);  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,GDIOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\GDIOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  			{  				D.Assert(paramList.Length == 2);  				SizeParameter sizeParameter2 = (SizeParameter)paramList[1];  				return this.ImageDetail(sizeParameter2.value);  			}  			case 3:  				D.Assert(paramList.Length == 1);  				return new StringParameter(null);  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,GDIOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\GDIOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  			{  				D.Assert(paramList.Length == 2);  				SizeParameter sizeParameter2 = (SizeParameter)paramList[1];  				return this.ImageDetail(sizeParameter2.value);  			}  			case 3:  				D.Assert(paramList.Length == 1);  				return new StringParameter(null);  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,GDIOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\GDIOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  			{  				D.Assert(paramList.Length == 2);  				SizeParameter sizeParameter2 = (SizeParameter)paramList[1];  				return this.ImageDetail(sizeParameter2.value);  			}  			case 3:  				D.Assert(paramList.Length == 1);  				return new StringParameter(null);  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,GDIOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\GDIOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  			{  				D.Assert(paramList.Length == 2);  				SizeParameter sizeParameter2 = (SizeParameter)paramList[1];  				return this.ImageDetail(sizeParameter2.value);  			}  			case 3:  				D.Assert(paramList.Length == 1);  				return new StringParameter(null);  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,GDIOpenVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\GDIOpenVerb.cs,Evaluate,The following statement contains a magic number: D.Assert(paramList.Length == 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,HomographicImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\HomographicImageTransformer.cs,HomographicImageTransformer,The following statement contains a magic number: JamaMatrix jamaMatrix = new JamaMatrix(count' 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,HomographicImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\HomographicImageTransformer.cs,HomographicImageTransformer,The following statement contains a magic number: JamaMatrix jamaMatrix2 = new JamaMatrix(count' 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ImageParameterFromRawBounds,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ImageParameterFromRawBounds.cs,GetHashCode,The following statement contains a magic number: return 2227 + this.outputSize.GetHashCode();
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ImageParameterFromTileAddress,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ImageParameterFromTileAddress.cs,GetHashCode,The following statement contains a magic number: return this.boundsParameter.GetHashCode() * 131 + this.sizeParameter.GetHashCode();
Magic Number,MSR.CVE.BackMaker.ImagePipeline,IPolyPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\IPolyPointTransformer.cs,writeToXml,The following statement contains a magic number: for (int i = 0; i < 2; i++)  			{  				writer.WriteStartElement("Sum");  				writer.WriteAttributeString("Name"' array[i]);  				for (int j = 0; j < jamaMatrix.RowDimension; j++)  				{  					writer.WriteStartElement("Term");  					writer.WriteAttributeString("Coefficient"' this.transformCoefficients.GetElement(i * jamaMatrix.RowDimension + j' 0).ToString(CultureInfo.InvariantCulture));  					for (int k = 0; k < 2; k++)  					{  						writer.WriteAttributeString(array[k] + "_power"' jamaMatrix.GetElement(j' k).ToString(CultureInfo.InvariantCulture));  					}  					writer.WriteEndElement();  				}  				writer.WriteEndElement();  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,IPolyPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\IPolyPointTransformer.cs,writeToXml,The following statement contains a magic number: for (int i = 0; i < 2; i++)  			{  				writer.WriteStartElement("Sum");  				writer.WriteAttributeString("Name"' array[i]);  				for (int j = 0; j < jamaMatrix.RowDimension; j++)  				{  					writer.WriteStartElement("Term");  					writer.WriteAttributeString("Coefficient"' this.transformCoefficients.GetElement(i * jamaMatrix.RowDimension + j' 0).ToString(CultureInfo.InvariantCulture));  					for (int k = 0; k < 2; k++)  					{  						writer.WriteAttributeString(array[k] + "_power"' jamaMatrix.GetElement(j' k).ToString(CultureInfo.InvariantCulture));  					}  					writer.WriteEndElement();  				}  				writer.WriteEndElement();  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,IPolyPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\IPolyPointTransformer.cs,Polynomialize,The following statement contains a magic number: JamaMatrix jamaMatrix3 = new JamaMatrix(jamaMatrix2.RowDimension * 2' jamaMatrix2.ColumnDimension * 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,IPolyPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\IPolyPointTransformer.cs,Polynomialize,The following statement contains a magic number: JamaMatrix jamaMatrix3 = new JamaMatrix(jamaMatrix2.RowDimension * 2' jamaMatrix2.ColumnDimension * 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,IPolyPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\IPolyPointTransformer.cs,Polynomialize,The following statement contains a magic number: jamaMatrix3.setMatrix(jamaMatrix2.RowDimension' 2 * jamaMatrix2.RowDimension - 1' jamaMatrix2.ColumnDimension' 2 * jamaMatrix2.ColumnDimension - 1' jamaMatrix2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,IPolyPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\IPolyPointTransformer.cs,Polynomialize,The following statement contains a magic number: jamaMatrix3.setMatrix(jamaMatrix2.RowDimension' 2 * jamaMatrix2.RowDimension - 1' jamaMatrix2.ColumnDimension' 2 * jamaMatrix2.ColumnDimension - 1' jamaMatrix2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,IPolyPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\IPolyPointTransformer.cs,PolyExps,The following statement contains a magic number: JamaMatrix jamaMatrix = new JamaMatrix((degree + 1) * (degree + 2) / 2' 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,IPolyPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\IPolyPointTransformer.cs,PolyExps,The following statement contains a magic number: JamaMatrix jamaMatrix = new JamaMatrix((degree + 1) * (degree + 2) / 2' 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,IPolyPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\IPolyPointTransformer.cs,PolyExps,The following statement contains a magic number: JamaMatrix jamaMatrix = new JamaMatrix((degree + 1) * (degree + 2) / 2' 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MemoryCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MemoryCache.cs,Clean,The following statement contains a magic number: try  			{  				if (this.cache.Count >= this.nextCleanMark)  				{  					bool flag = false;  					int num3 = 0;  					for (int i = 0; i < this.clockQueue.Count; i++)  					{  						if (this.cache.Count < this.paramCacheMinSize)  						{  							flag = true;  							break;  						}  						ClockCacheRecord clockCacheRecord = (ClockCacheRecord)this.clockQueue.First.Value;  						this.clockQueue.RemoveFirst();  						num++;  						bool flag2 = clockCacheRecord.present is RequestInterestIfc && ((RequestInterestIfc)clockCacheRecord.present).GetInterest() > 524291;  						if (flag2)  						{  							num3++;  							this.clockQueue.AddLast(clockCacheRecord);  						}  						else  						{  							if (clockCacheRecord.touched)  							{  								clockCacheRecord.touched = false;  								this.clockQueue.AddLast(clockCacheRecord);  							}  							else  							{  								this.Remove(clockCacheRecord' CacheBase.RemoveExpectation.Unknown);  								num2++;  							}  						}  					}  					if (!flag)  					{  						int num4 = num3 * 2 + 64;  						if (num4 > this.paramCacheMinSize)  						{  							this.paramCacheMinSize = num4;  							D.Sayf(0' "Grew cache {0} to paramCacheMinSize={1}; cache now {2}; clock now {3}"' new object[]  							{  								this.hashName'  								this.paramCacheMinSize'  								this.cache.Count'  								this.clockQueue.Count  							});  						}  					}  					this.interestingStuffResourceCounter.SetValue(num3);  					this.nextCleanMark = this.cache.Count + (this.paramCacheMinSize >> 2);  					D.Sayf(10' "MemoryCache Cleaner: removed {0}/{1}"' new object[]  					{  						num2'  						num  					});  				}  			}  			finally  			{  				Monitor.Exit(this);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MemoryCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MemoryCache.cs,Clean,The following statement contains a magic number: try  			{  				if (this.cache.Count >= this.nextCleanMark)  				{  					bool flag = false;  					int num3 = 0;  					for (int i = 0; i < this.clockQueue.Count; i++)  					{  						if (this.cache.Count < this.paramCacheMinSize)  						{  							flag = true;  							break;  						}  						ClockCacheRecord clockCacheRecord = (ClockCacheRecord)this.clockQueue.First.Value;  						this.clockQueue.RemoveFirst();  						num++;  						bool flag2 = clockCacheRecord.present is RequestInterestIfc && ((RequestInterestIfc)clockCacheRecord.present).GetInterest() > 524291;  						if (flag2)  						{  							num3++;  							this.clockQueue.AddLast(clockCacheRecord);  						}  						else  						{  							if (clockCacheRecord.touched)  							{  								clockCacheRecord.touched = false;  								this.clockQueue.AddLast(clockCacheRecord);  							}  							else  							{  								this.Remove(clockCacheRecord' CacheBase.RemoveExpectation.Unknown);  								num2++;  							}  						}  					}  					if (!flag)  					{  						int num4 = num3 * 2 + 64;  						if (num4 > this.paramCacheMinSize)  						{  							this.paramCacheMinSize = num4;  							D.Sayf(0' "Grew cache {0} to paramCacheMinSize={1}; cache now {2}; clock now {3}"' new object[]  							{  								this.hashName'  								this.paramCacheMinSize'  								this.cache.Count'  								this.clockQueue.Count  							});  						}  					}  					this.interestingStuffResourceCounter.SetValue(num3);  					this.nextCleanMark = this.cache.Count + (this.paramCacheMinSize >> 2);  					D.Sayf(10' "MemoryCache Cleaner: removed {0}/{1}"' new object[]  					{  						num2'  						num  					});  				}  			}  			finally  			{  				Monitor.Exit(this);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MemoryCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MemoryCache.cs,Clean,The following statement contains a magic number: try  			{  				if (this.cache.Count >= this.nextCleanMark)  				{  					bool flag = false;  					int num3 = 0;  					for (int i = 0; i < this.clockQueue.Count; i++)  					{  						if (this.cache.Count < this.paramCacheMinSize)  						{  							flag = true;  							break;  						}  						ClockCacheRecord clockCacheRecord = (ClockCacheRecord)this.clockQueue.First.Value;  						this.clockQueue.RemoveFirst();  						num++;  						bool flag2 = clockCacheRecord.present is RequestInterestIfc && ((RequestInterestIfc)clockCacheRecord.present).GetInterest() > 524291;  						if (flag2)  						{  							num3++;  							this.clockQueue.AddLast(clockCacheRecord);  						}  						else  						{  							if (clockCacheRecord.touched)  							{  								clockCacheRecord.touched = false;  								this.clockQueue.AddLast(clockCacheRecord);  							}  							else  							{  								this.Remove(clockCacheRecord' CacheBase.RemoveExpectation.Unknown);  								num2++;  							}  						}  					}  					if (!flag)  					{  						int num4 = num3 * 2 + 64;  						if (num4 > this.paramCacheMinSize)  						{  							this.paramCacheMinSize = num4;  							D.Sayf(0' "Grew cache {0} to paramCacheMinSize={1}; cache now {2}; clock now {3}"' new object[]  							{  								this.hashName'  								this.paramCacheMinSize'  								this.cache.Count'  								this.clockQueue.Count  							});  						}  					}  					this.interestingStuffResourceCounter.SetValue(num3);  					this.nextCleanMark = this.cache.Count + (this.paramCacheMinSize >> 2);  					D.Sayf(10' "MemoryCache Cleaner: removed {0}/{1}"' new object[]  					{  						num2'  						num  					});  				}  			}  			finally  			{  				Monitor.Exit(this);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MemoryCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MemoryCache.cs,Clean,The following statement contains a magic number: try  			{  				if (this.cache.Count >= this.nextCleanMark)  				{  					bool flag = false;  					int num3 = 0;  					for (int i = 0; i < this.clockQueue.Count; i++)  					{  						if (this.cache.Count < this.paramCacheMinSize)  						{  							flag = true;  							break;  						}  						ClockCacheRecord clockCacheRecord = (ClockCacheRecord)this.clockQueue.First.Value;  						this.clockQueue.RemoveFirst();  						num++;  						bool flag2 = clockCacheRecord.present is RequestInterestIfc && ((RequestInterestIfc)clockCacheRecord.present).GetInterest() > 524291;  						if (flag2)  						{  							num3++;  							this.clockQueue.AddLast(clockCacheRecord);  						}  						else  						{  							if (clockCacheRecord.touched)  							{  								clockCacheRecord.touched = false;  								this.clockQueue.AddLast(clockCacheRecord);  							}  							else  							{  								this.Remove(clockCacheRecord' CacheBase.RemoveExpectation.Unknown);  								num2++;  							}  						}  					}  					if (!flag)  					{  						int num4 = num3 * 2 + 64;  						if (num4 > this.paramCacheMinSize)  						{  							this.paramCacheMinSize = num4;  							D.Sayf(0' "Grew cache {0} to paramCacheMinSize={1}; cache now {2}; clock now {3}"' new object[]  							{  								this.hashName'  								this.paramCacheMinSize'  								this.cache.Count'  								this.clockQueue.Count  							});  						}  					}  					this.interestingStuffResourceCounter.SetValue(num3);  					this.nextCleanMark = this.cache.Count + (this.paramCacheMinSize >> 2);  					D.Sayf(10' "MemoryCache Cleaner: removed {0}/{1}"' new object[]  					{  						num2'  						num  					});  				}  			}  			finally  			{  				Monitor.Exit(this);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MemoryCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MemoryCache.cs,Clean,The following statement contains a magic number: try  			{  				if (this.cache.Count >= this.nextCleanMark)  				{  					bool flag = false;  					int num3 = 0;  					for (int i = 0; i < this.clockQueue.Count; i++)  					{  						if (this.cache.Count < this.paramCacheMinSize)  						{  							flag = true;  							break;  						}  						ClockCacheRecord clockCacheRecord = (ClockCacheRecord)this.clockQueue.First.Value;  						this.clockQueue.RemoveFirst();  						num++;  						bool flag2 = clockCacheRecord.present is RequestInterestIfc && ((RequestInterestIfc)clockCacheRecord.present).GetInterest() > 524291;  						if (flag2)  						{  							num3++;  							this.clockQueue.AddLast(clockCacheRecord);  						}  						else  						{  							if (clockCacheRecord.touched)  							{  								clockCacheRecord.touched = false;  								this.clockQueue.AddLast(clockCacheRecord);  							}  							else  							{  								this.Remove(clockCacheRecord' CacheBase.RemoveExpectation.Unknown);  								num2++;  							}  						}  					}  					if (!flag)  					{  						int num4 = num3 * 2 + 64;  						if (num4 > this.paramCacheMinSize)  						{  							this.paramCacheMinSize = num4;  							D.Sayf(0' "Grew cache {0} to paramCacheMinSize={1}; cache now {2}; clock now {3}"' new object[]  							{  								this.hashName'  								this.paramCacheMinSize'  								this.cache.Count'  								this.clockQueue.Count  							});  						}  					}  					this.interestingStuffResourceCounter.SetValue(num3);  					this.nextCleanMark = this.cache.Count + (this.paramCacheMinSize >> 2);  					D.Sayf(10' "MemoryCache Cleaner: removed {0}/{1}"' new object[]  					{  						num2'  						num  					});  				}  			}  			finally  			{  				Monitor.Exit(this);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,MetersPerPixel,The following statement contains a magic number: return 40075016.685578488 / (Math.Pow(2.0' (double)zoomLevel) * 256.0);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,MetersPerPixel,The following statement contains a magic number: return 40075016.685578488 / (Math.Pow(2.0' (double)zoomLevel) * 256.0);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,MetersPerPixel,The following statement contains a magic number: return 40075016.685578488 / (Math.Pow(2.0' (double)zoomLevel) * 256.0);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,LatLongZoomToPixel,The following statement contains a magic number: double num2 = 6378137.0 * CoordinateSystemUtilities.DegreesToRadians(p.lon);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,LatLongZoomToPixel,The following statement contains a magic number: double num3 = 3189068.5 * Math.Log((1.0 + num) / (1.0 - num));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,LatLongZoomToPixel,The following statement contains a magic number: return new Point64((long)Math.Round((20037508.342789244 + num2) / num4)' (long)Math.Round((20037508.342789244 - num3) / num4));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,LatLongZoomToPixel,The following statement contains a magic number: return new Point64((long)Math.Round((20037508.342789244 + num2) / num4)' (long)Math.Round((20037508.342789244 - num3) / num4));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,PixelToLatLong,The following statement contains a magic number: double num2 = (double)p.X * num - 20037508.342789244;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,PixelToLatLong,The following statement contains a magic number: double num3 = 20037508.342789244 - (double)p.Y * num;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,PixelToLatLong,The following statement contains a magic number: return new LatLonZoom(CoordinateSystemUtilities.RadiansToDegrees(1.5707963267948966 - 2.0 * Math.Atan(Math.Exp(-num3 / 6378137.0)))' CoordinateSystemUtilities.RadiansToDegrees(num2 / 6378137.0)' zoomLevel);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,PixelToLatLong,The following statement contains a magic number: return new LatLonZoom(CoordinateSystemUtilities.RadiansToDegrees(1.5707963267948966 - 2.0 * Math.Atan(Math.Exp(-num3 / 6378137.0)))' CoordinateSystemUtilities.RadiansToDegrees(num2 / 6378137.0)' zoomLevel);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,PixelToLatLong,The following statement contains a magic number: return new LatLonZoom(CoordinateSystemUtilities.RadiansToDegrees(1.5707963267948966 - 2.0 * Math.Atan(Math.Exp(-num3 / 6378137.0)))' CoordinateSystemUtilities.RadiansToDegrees(num2 / 6378137.0)' zoomLevel);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,PixelToLatLong,The following statement contains a magic number: return new LatLonZoom(CoordinateSystemUtilities.RadiansToDegrees(1.5707963267948966 - 2.0 * Math.Atan(Math.Exp(-num3 / 6378137.0)))' CoordinateSystemUtilities.RadiansToDegrees(num2 / 6378137.0)' zoomLevel);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTranslationInLatLon,The following statement contains a magic number: if (unclippedDraggedView.lon > 180.0)  			{  				unclippedDraggedView = new LatLonZoom(unclippedDraggedView.lat' unclippedDraggedView.lon - 360.0' unclippedDraggedView.zoom);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTranslationInLatLon,The following statement contains a magic number: if (unclippedDraggedView.lon > 180.0)  			{  				unclippedDraggedView = new LatLonZoom(unclippedDraggedView.lat' unclippedDraggedView.lon - 360.0' unclippedDraggedView.zoom);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTranslationInLatLon,The following statement contains a magic number: if (unclippedDraggedView.lon < -180.0)  			{  				unclippedDraggedView = new LatLonZoom(unclippedDraggedView.lat' unclippedDraggedView.lon + 360.0' unclippedDraggedView.zoom);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTranslationInLatLon,The following statement contains a magic number: if (unclippedDraggedView.lon < -180.0)  			{  				unclippedDraggedView = new LatLonZoom(unclippedDraggedView.lat' unclippedDraggedView.lon + 360.0' unclippedDraggedView.zoom);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTranslationInLatLon,The following statement contains a magic number: if (unclippedDraggedView.lat > 85.0)  			{  				unclippedDraggedView = new LatLonZoom(85.0' unclippedDraggedView.lon' unclippedDraggedView.zoom);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTranslationInLatLon,The following statement contains a magic number: if (unclippedDraggedView.lat > 85.0)  			{  				unclippedDraggedView = new LatLonZoom(85.0' unclippedDraggedView.lon' unclippedDraggedView.zoom);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTranslationInLatLon,The following statement contains a magic number: if (unclippedDraggedView.lat < -85.0)  			{  				unclippedDraggedView = new LatLonZoom(-85.0' unclippedDraggedView.lon' unclippedDraggedView.zoom);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTranslationInLatLon,The following statement contains a magic number: if (unclippedDraggedView.lat < -85.0)  			{  				unclippedDraggedView = new LatLonZoom(-85.0' unclippedDraggedView.lon' unclippedDraggedView.zoom);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTileSize,The following statement contains a magic number: return new Size(256' 256);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTileSize,The following statement contains a magic number: return new Size(256' 256);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTileContainingLatLonZoom,The following statement contains a magic number: return new TileAddress((int)Math.Floor((double)point.X / 256.0)' (int)Math.Floor((double)point.Y / 256.0)' llz.zoom);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTileContainingLatLonZoom,The following statement contains a magic number: return new TileAddress((int)Math.Floor((double)point.X / 256.0)' (int)Math.Floor((double)point.Y / 256.0)' llz.zoom);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetMapWindow,The following statement contains a magic number: return new MapRectangle(this.GetUnclippedDraggedView(centerPosition' new Point(windowSize.Width / 2' windowSize.Height / 2)).latlon' this.GetUnclippedDraggedView(centerPosition' new Point(-(windowSize.Width / 2 + 1)' -(windowSize.Height / 2 + 1))).latlon);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetMapWindow,The following statement contains a magic number: return new MapRectangle(this.GetUnclippedDraggedView(centerPosition' new Point(windowSize.Width / 2' windowSize.Height / 2)).latlon' this.GetUnclippedDraggedView(centerPosition' new Point(-(windowSize.Width / 2 + 1)' -(windowSize.Height / 2 + 1))).latlon);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetMapWindow,The following statement contains a magic number: return new MapRectangle(this.GetUnclippedDraggedView(centerPosition' new Point(windowSize.Width / 2' windowSize.Height / 2)).latlon' this.GetUnclippedDraggedView(centerPosition' new Point(-(windowSize.Width / 2 + 1)' -(windowSize.Height / 2 + 1))).latlon);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetMapWindow,The following statement contains a magic number: return new MapRectangle(this.GetUnclippedDraggedView(centerPosition' new Point(windowSize.Width / 2' windowSize.Height / 2)).latlon' this.GetUnclippedDraggedView(centerPosition' new Point(-(windowSize.Width / 2 + 1)' -(windowSize.Height / 2 + 1))).latlon);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetTileArrayDescriptor,The following statement contains a magic number: int num2 = windowSize.Width + 512;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetUnclippedMapWindow,The following statement contains a magic number: return new MapRectangle(this.GetUnclippedDraggedView(centerPosition' new Point(windowSize.Width / 2' windowSize.Height / 2)).latlon' this.GetUnclippedDraggedView(centerPosition' new Point(-(windowSize.Width / 2 + 1)' -(windowSize.Height / 2 + 1))).latlon);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetUnclippedMapWindow,The following statement contains a magic number: return new MapRectangle(this.GetUnclippedDraggedView(centerPosition' new Point(windowSize.Width / 2' windowSize.Height / 2)).latlon' this.GetUnclippedDraggedView(centerPosition' new Point(-(windowSize.Width / 2 + 1)' -(windowSize.Height / 2 + 1))).latlon);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetUnclippedMapWindow,The following statement contains a magic number: return new MapRectangle(this.GetUnclippedDraggedView(centerPosition' new Point(windowSize.Width / 2' windowSize.Height / 2)).latlon' this.GetUnclippedDraggedView(centerPosition' new Point(-(windowSize.Width / 2 + 1)' -(windowSize.Height / 2 + 1))).latlon);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,GetUnclippedMapWindow,The following statement contains a magic number: return new MapRectangle(this.GetUnclippedDraggedView(centerPosition' new Point(windowSize.Width / 2' windowSize.Height / 2)).latlon' this.GetUnclippedDraggedView(centerPosition' new Point(-(windowSize.Width / 2 + 1)' -(windowSize.Height / 2 + 1))).latlon);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,LatLonToMercator,The following statement contains a magic number: double num2 = 6378137.0 * CoordinateSystemUtilities.DegreesToRadians(latlon.lon);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,LatLonToMercator,The following statement contains a magic number: double num3 = 3189068.5 * Math.Log((1.0 + num) / (1.0 - num));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,LatLonToMercator,The following statement contains a magic number: double num4 = 40075016.685578488;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,LatLonToMercator,The following statement contains a magic number: return new LatLon((20037508.342789244 - num3) / num4' (20037508.342789244 + num2) / num4);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,LatLonToMercator,The following statement contains a magic number: return new LatLon((20037508.342789244 - num3) / num4' (20037508.342789244 + num2) / num4);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,MercatorToLatLon,The following statement contains a magic number: double num = 40075016.685578488;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,MercatorToLatLon,The following statement contains a magic number: double num2 = mercator.lon * num - 20037508.342789244;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,MercatorToLatLon,The following statement contains a magic number: double num3 = 20037508.342789244 - mercator.lat * num;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,MercatorToLatLon,The following statement contains a magic number: return new LatLon(CoordinateSystemUtilities.RadiansToDegrees(1.5707963267948966 - 2.0 * Math.Atan(Math.Exp(-num3 / 6378137.0)))' CoordinateSystemUtilities.RadiansToDegrees(num2 / 6378137.0));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,MercatorToLatLon,The following statement contains a magic number: return new LatLon(CoordinateSystemUtilities.RadiansToDegrees(1.5707963267948966 - 2.0 * Math.Atan(Math.Exp(-num3 / 6378137.0)))' CoordinateSystemUtilities.RadiansToDegrees(num2 / 6378137.0));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,MercatorToLatLon,The following statement contains a magic number: return new LatLon(CoordinateSystemUtilities.RadiansToDegrees(1.5707963267948966 - 2.0 * Math.Atan(Math.Exp(-num3 / 6378137.0)))' CoordinateSystemUtilities.RadiansToDegrees(num2 / 6378137.0));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,MercatorToLatLon,The following statement contains a magic number: return new LatLon(CoordinateSystemUtilities.RadiansToDegrees(1.5707963267948966 - 2.0 * Math.Atan(Math.Exp(-num3 / 6378137.0)))' CoordinateSystemUtilities.RadiansToDegrees(num2 / 6378137.0));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,TestLanLonFuncs,The following statement contains a magic number: foreach (LatLon current in new List<LatLon>  			{  				new LatLon(-85.0' -175.0)'  				new LatLon(85.0' -175.0)'  				new LatLon(85.0' 175.0)'  				new LatLon(-85.0' 175.0)'  				new LatLon(1.0' 1.0)  			})  			{  				LatLon latLon = MercatorCoordinateSystem.LatLonToMercator(current);  				LatLon latLon2 = MercatorCoordinateSystem.MercatorToLatLon(latLon);  				D.Sayf(0' "Orig {0} merc {1} back {2}"' new object[]  				{  					current'  					latLon'  					latLon2  				});  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,TestLanLonFuncs,The following statement contains a magic number: foreach (LatLon current in new List<LatLon>  			{  				new LatLon(-85.0' -175.0)'  				new LatLon(85.0' -175.0)'  				new LatLon(85.0' 175.0)'  				new LatLon(-85.0' 175.0)'  				new LatLon(1.0' 1.0)  			})  			{  				LatLon latLon = MercatorCoordinateSystem.LatLonToMercator(current);  				LatLon latLon2 = MercatorCoordinateSystem.MercatorToLatLon(latLon);  				D.Sayf(0' "Orig {0} merc {1} back {2}"' new object[]  				{  					current'  					latLon'  					latLon2  				});  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,TestLanLonFuncs,The following statement contains a magic number: foreach (LatLon current in new List<LatLon>  			{  				new LatLon(-85.0' -175.0)'  				new LatLon(85.0' -175.0)'  				new LatLon(85.0' 175.0)'  				new LatLon(-85.0' 175.0)'  				new LatLon(1.0' 1.0)  			})  			{  				LatLon latLon = MercatorCoordinateSystem.LatLonToMercator(current);  				LatLon latLon2 = MercatorCoordinateSystem.MercatorToLatLon(latLon);  				D.Sayf(0' "Orig {0} merc {1} back {2}"' new object[]  				{  					current'  					latLon'  					latLon2  				});  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,TestLanLonFuncs,The following statement contains a magic number: foreach (LatLon current in new List<LatLon>  			{  				new LatLon(-85.0' -175.0)'  				new LatLon(85.0' -175.0)'  				new LatLon(85.0' 175.0)'  				new LatLon(-85.0' 175.0)'  				new LatLon(1.0' 1.0)  			})  			{  				LatLon latLon = MercatorCoordinateSystem.LatLonToMercator(current);  				LatLon latLon2 = MercatorCoordinateSystem.MercatorToLatLon(latLon);  				D.Sayf(0' "Orig {0} merc {1} back {2}"' new object[]  				{  					current'  					latLon'  					latLon2  				});  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,TestLanLonFuncs,The following statement contains a magic number: foreach (LatLon current in new List<LatLon>  			{  				new LatLon(-85.0' -175.0)'  				new LatLon(85.0' -175.0)'  				new LatLon(85.0' 175.0)'  				new LatLon(-85.0' 175.0)'  				new LatLon(1.0' 1.0)  			})  			{  				LatLon latLon = MercatorCoordinateSystem.LatLonToMercator(current);  				LatLon latLon2 = MercatorCoordinateSystem.MercatorToLatLon(latLon);  				D.Sayf(0' "Orig {0} merc {1} back {2}"' new object[]  				{  					current'  					latLon'  					latLon2  				});  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,TestLanLonFuncs,The following statement contains a magic number: foreach (LatLon current in new List<LatLon>  			{  				new LatLon(-85.0' -175.0)'  				new LatLon(85.0' -175.0)'  				new LatLon(85.0' 175.0)'  				new LatLon(-85.0' 175.0)'  				new LatLon(1.0' 1.0)  			})  			{  				LatLon latLon = MercatorCoordinateSystem.LatLonToMercator(current);  				LatLon latLon2 = MercatorCoordinateSystem.MercatorToLatLon(latLon);  				D.Sayf(0' "Orig {0} merc {1} back {2}"' new object[]  				{  					current'  					latLon'  					latLon2  				});  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,TestLanLonFuncs,The following statement contains a magic number: foreach (LatLon current in new List<LatLon>  			{  				new LatLon(-85.0' -175.0)'  				new LatLon(85.0' -175.0)'  				new LatLon(85.0' 175.0)'  				new LatLon(-85.0' 175.0)'  				new LatLon(1.0' 1.0)  			})  			{  				LatLon latLon = MercatorCoordinateSystem.LatLonToMercator(current);  				LatLon latLon2 = MercatorCoordinateSystem.MercatorToLatLon(latLon);  				D.Sayf(0' "Orig {0} merc {1} back {2}"' new object[]  				{  					current'  					latLon'  					latLon2  				});  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,MercatorCoordinateSystem,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\MercatorCoordinateSystem.cs,TestLanLonFuncs,The following statement contains a magic number: foreach (LatLon current in new List<LatLon>  			{  				new LatLon(-85.0' -175.0)'  				new LatLon(85.0' -175.0)'  				new LatLon(85.0' 175.0)'  				new LatLon(-85.0' 175.0)'  				new LatLon(1.0' 1.0)  			})  			{  				LatLon latLon = MercatorCoordinateSystem.LatLonToMercator(current);  				LatLon latLon2 = MercatorCoordinateSystem.MercatorToLatLon(latLon);  				D.Sayf(0' "Orig {0} merc {1} back {2}"' new object[]  				{  					current'  					latLon'  					latLon2  				});  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,OpenDocumentSensitivePrioritizedFuture,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\OpenDocumentSensitivePrioritizedFuture.cs,DocumentStateChanged,The following statement contains a magic number: this.activeAsyncRef.SetInterest(isOpen ? 524291 : 0);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,ParamDict,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\ParamDict.cs,ParamDict,The following statement contains a magic number: for (i = 0; i < list.Length; i += 2)  			{  				base[(TermName)list[i]] = (Parameter)((Parameter)list[i + 1]).Duplicate("Apply.Params");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,PolynomialImageTransformer,The following statement contains a magic number: if (num == 2)  			{  				num++;  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,PolynomialImageTransformer,The following statement contains a magic number: JamaMatrix jamaMatrix = new JamaMatrix(num' 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,PolynomialImageTransformer,The following statement contains a magic number: JamaMatrix jamaMatrix2 = new JamaMatrix(num' 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,doTransformImage,The following statement contains a magic number: MapRectangle inr = new MapRectangle(-0.5' -0.5' (double)destImage.Height - 0.5' (double)destImage.Width - 0.5);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,doTransformImage,The following statement contains a magic number: MapRectangle inr = new MapRectangle(-0.5' -0.5' (double)destImage.Height - 0.5' (double)destImage.Width - 0.5);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,doTransformImage,The following statement contains a magic number: MapRectangle inr = new MapRectangle(-0.5' -0.5' (double)destImage.Height - 0.5' (double)destImage.Width - 0.5);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,doTransformImage,The following statement contains a magic number: MapRectangle inr = new MapRectangle(-0.5' -0.5' (double)destImage.Height - 0.5' (double)destImage.Width - 0.5);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,doTransformImage,The following statement contains a magic number: MapRectangle outr2 = new MapRectangle(-0.5' -0.5' (double)sourceImage.Height - 0.5' (double)sourceImage.Width - 0.5);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,doTransformImage,The following statement contains a magic number: MapRectangle outr2 = new MapRectangle(-0.5' -0.5' (double)sourceImage.Height - 0.5' (double)sourceImage.Width - 0.5);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,doTransformImage,The following statement contains a magic number: MapRectangle outr2 = new MapRectangle(-0.5' -0.5' (double)sourceImage.Height - 0.5' (double)sourceImage.Width - 0.5);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,doTransformImage,The following statement contains a magic number: MapRectangle outr2 = new MapRectangle(-0.5' -0.5' (double)sourceImage.Height - 0.5' (double)sourceImage.Width - 0.5);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,getPolyPointTransformer,The following statement contains a magic number: switch (polynomialDegree)  			{  			case 1:  				return new FastPoly1PointTransformer(matrix);  			case 2:  				return new FastPoly2PointTransformer(matrix);  			default:  				return new SlowGeneralPolyPointTransformer(polynomialDegree' matrix);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,CornersToVectorMatrix,The following statement contains a magic number: JamaMatrix jamaMatrix = new JamaMatrix(3' 4);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,CornersToVectorMatrix,The following statement contains a magic number: JamaMatrix jamaMatrix = new JamaMatrix(3' 4);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,CornersToVectorMatrix,The following statement contains a magic number: jamaMatrix.SetElement(0' 2' rect.lon1);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,CornersToVectorMatrix,The following statement contains a magic number: jamaMatrix.SetElement(0' 3' rect.lon1);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,CornersToVectorMatrix,The following statement contains a magic number: jamaMatrix.SetElement(1' 2' rect.lat0);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,CornersToVectorMatrix,The following statement contains a magic number: jamaMatrix.SetElement(1' 3' rect.lat1);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,CornersToVectorMatrix,The following statement contains a magic number: jamaMatrix.SetElement(2' 0' 1.0);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,CornersToVectorMatrix,The following statement contains a magic number: jamaMatrix.SetElement(2' 1' 1.0);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,CornersToVectorMatrix,The following statement contains a magic number: jamaMatrix.SetElement(2' 2' 1.0);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,CornersToVectorMatrix,The following statement contains a magic number: jamaMatrix.SetElement(2' 2' 1.0);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,CornersToVectorMatrix,The following statement contains a magic number: jamaMatrix.SetElement(2' 3' 1.0);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,CornersToVectorMatrix,The following statement contains a magic number: jamaMatrix.SetElement(2' 3' 1.0);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,RegularUnitGrid,The following statement contains a magic number: JamaMatrix jamaMatrix = new JamaMatrix(size * size' 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestFunc,The following statement contains a magic number: double[][] array = new double[4][];
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestFunc,The following statement contains a magic number: double[] array2 = new double[2];
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestFunc,The following statement contains a magic number: array[1] = new double[]  			{  				1.02'  				0.93  			};
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestFunc,The following statement contains a magic number: array[1] = new double[]  			{  				1.02'  				0.93  			};
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestFunc,The following statement contains a magic number: array[2] = new double[]  			{  				0.0'  				1.0  			};
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestFunc,The following statement contains a magic number: int arg_73_1 = 3;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestFunc,The following statement contains a magic number: double[] array3 = new double[2];
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestFunc,The following statement contains a magic number: PolynomialImageTransformer.RegularUnitGrid(4);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestFunc,The following statement contains a magic number: JamaMatrix jamaMatrix3 = IPolyPointTransformer.Polynomialize(jamaMatrix' 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestFunc,The following statement contains a magic number: D.Say(0' "testSolution:\n" + PolynomialImageTransformer.PointRoll(unrolledVector' 2).ToString());
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestFunc,The following statement contains a magic number: PolynomialImageTransformer.getPolyPointTransformer(jamaMatrix' jamaMatrix2' 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestFunc,The following statement contains a magic number: LatLon p = new LatLon(0.93' 1.02);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestFunc,The following statement contains a magic number: LatLon p = new LatLon(0.93' 1.02);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestFunc,The following statement contains a magic number: D.Say(0' "Invert test:\n" + PolynomialImageTransformer.getApproximateInverterPolyPointTransformer(jamaMatrix' jamaMatrix2' 2).getTransformedPoint(p).ToString());
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestSVD,The following statement contains a magic number: int m = 8;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestSVD,The following statement contains a magic number: int n = 5;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestSVD,The following statement contains a magic number: JamaMatrix jamaMatrix = JamaMatrix.random(5' 3);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,PolynomialImageTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\PolynomialImageTransformer.cs,TestSVD,The following statement contains a magic number: JamaMatrix jamaMatrix = JamaMatrix.random(5' 3);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,RenderedTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\RenderedTileSource.cs,GetUserBounds,The following statement contains a magic number: return new MemCacheFuture(this.cachePackage.asyncCache' Asynchronizer.MakeFuture(this.cachePackage.computeAsyncScheduler' new MemCacheFuture(this.cachePackage.boundsCache' new ApplyFuture(new ConstantVerb(new BoundsPresent(new RenderRegion(new MapRectangle(-85.0' -5000.0' 85.0' 5000.0)' new DirtyEvent())))' new IFuture[0]))));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,RenderedTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\RenderedTileSource.cs,GetUserBounds,The following statement contains a magic number: return new MemCacheFuture(this.cachePackage.asyncCache' Asynchronizer.MakeFuture(this.cachePackage.computeAsyncScheduler' new MemCacheFuture(this.cachePackage.boundsCache' new ApplyFuture(new ConstantVerb(new BoundsPresent(new RenderRegion(new MapRectangle(-85.0' -5000.0' 85.0' 5000.0)' new DirtyEvent())))' new IFuture[0]))));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,RenderedTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\RenderedTileSource.cs,GetUserBounds,The following statement contains a magic number: return new MemCacheFuture(this.cachePackage.asyncCache' Asynchronizer.MakeFuture(this.cachePackage.computeAsyncScheduler' new MemCacheFuture(this.cachePackage.boundsCache' new ApplyFuture(new ConstantVerb(new BoundsPresent(new RenderRegion(new MapRectangle(-85.0' -5000.0' 85.0' 5000.0)' new DirtyEvent())))' new IFuture[0]))));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,RenderedTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\RenderedTileSource.cs,GetUserBounds,The following statement contains a magic number: return new MemCacheFuture(this.cachePackage.asyncCache' Asynchronizer.MakeFuture(this.cachePackage.computeAsyncScheduler' new MemCacheFuture(this.cachePackage.boundsCache' new ApplyFuture(new ConstantVerb(new BoundsPresent(new RenderRegion(new MapRectangle(-85.0' -5000.0' 85.0' 5000.0)' new DirtyEvent())))' new IFuture[0]))));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,RenderedTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\RenderedTileSource.cs,GetImagePrototype,The following statement contains a magic number: return VETileSource.AddFeatures(prototype' features & (FutureFeatures)(-3)' this.cachePackage);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,RetryableFailure,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\RetryableFailure.cs,RetryableFailure,The following statement contains a magic number: this.retryTime = DateTime.Now.AddSeconds(15.0);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,SizeSensitiveCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\SizeSensitiveCache.cs,Clean,The following statement contains a magic number: D.Sayf(10' "SizeSensitive Cleaner: removed {0} objects; from {1} to {2} MB"' new object[]  			{  				num'  				num2 >> 20'  				this.memoryUsed >> 20  			});
Magic Number,MSR.CVE.BackMaker.ImagePipeline,SizeSensitiveCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\SizeSensitiveCache.cs,Clean,The following statement contains a magic number: D.Sayf(10' "SizeSensitive Cleaner: removed {0} objects; from {1} to {2} MB"' new object[]  			{  				num'  				num2 >> 20'  				this.memoryUsed >> 20  			});
Magic Number,MSR.CVE.BackMaker.ImagePipeline,SizeSensitiveCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\SizeSensitiveCache.cs,Clean,The following statement contains a magic number: D.Sayf(10' "SizeSensitive Cleaner: removed {0} objects; from {1} to {2} MB"' new object[]  			{  				num'  				num2 >> 20'  				this.memoryUsed >> 20  			});
Magic Number,MSR.CVE.BackMaker.ImagePipeline,SlowGeneralPolyPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\SlowGeneralPolyPointTransformer.cs,doTransform,The following statement contains a magic number: JamaMatrix jamaMatrix = new JamaMatrix(1' 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,SourceImageDownsamplerVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\SourceImageDownsamplerVerb.cs,Evaluate,The following statement contains a magic number: D.Assert(paramList.Length == 4);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,SourceImageDownsamplerVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\SourceImageDownsamplerVerb.cs,Evaluate,The following statement contains a magic number: Present present = paramList[2];
Magic Number,MSR.CVE.BackMaker.ImagePipeline,SourceImageDownsamplerVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\SourceImageDownsamplerVerb.cs,Evaluate,The following statement contains a magic number: Present present2 = paramList[3];
Magic Number,MSR.CVE.BackMaker.ImagePipeline,StrongHash,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\StrongHash.cs,ComputeShortHashValue,The following statement contains a magic number: for (int i = 0; i < this.hashValue.Length; i++)  			{  				num = num * 131 + (int)this.hashValue[i];  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,StrongHash,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\StrongHash.cs,ByteArrayToHex,The following statement contains a magic number: StringBuilder stringBuilder = new StringBuilder(byteArray.Length * 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,StrongHash,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\StrongHash.cs,ByteArrayToHex,The following statement contains a magic number: for (int i = 0; i < byteArray.Length; i++)  			{  				byte b = byteArray[i];  				int index = b >> 4 & 15;  				int index2 = (int)(b & 15);  				stringBuilder.Append("0123456789ABCDEF"[index]);  				stringBuilder.Append("0123456789ABCDEF"[index2]);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,StrongHash,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\StrongHash.cs,ByteArrayToHex,The following statement contains a magic number: for (int i = 0; i < byteArray.Length; i++)  			{  				byte b = byteArray[i];  				int index = b >> 4 & 15;  				int index2 = (int)(b & 15);  				stringBuilder.Append("0123456789ABCDEF"[index]);  				stringBuilder.Append("0123456789ABCDEF"[index2]);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,StrongHash,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\StrongHash.cs,ByteArrayToHex,The following statement contains a magic number: for (int i = 0; i < byteArray.Length; i++)  			{  				byte b = byteArray[i];  				int index = b >> 4 & 15;  				int index2 = (int)(b & 15);  				stringBuilder.Append("0123456789ABCDEF"[index]);  				stringBuilder.Append("0123456789ABCDEF"[index2]);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,TileAddressToImageRegion,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\TileAddressToImageRegion.cs,Evaluate,The following statement contains a magic number: if (latLonOfTileNW2.lon <= latLonOfTileNW.lon)  			{  				latLonOfTileNW2 = new LatLon(latLonOfTileNW2.lat' latLonOfTileNW2.lon + 360.0);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,TransparencyFuture,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\TransparencyFuture.cs,Evaluate,The following statement contains a magic number: D.Assert(paramList.Length == 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,TransparencyFuture,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\TransparencyFuture.cs,HaloTransparency,The following statement contains a magic number: D.Assert(haloSize > 0 && haloSize < 100);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,UnwarpedMapTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\UnwarpedMapTileSource.cs,GetAccessFuture,The following statement contains a magic number: IFuture[] array = new IFuture[2 + methodParams.Length];
Magic Number,MSR.CVE.BackMaker.ImagePipeline,UnwarpedMapTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\UnwarpedMapTileSource.cs,GetAccessFuture,The following statement contains a magic number: Array.Copy(methodParams' 0' array' 2' methodParams.Length);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,UnwarpedMapTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\UnwarpedMapTileSource.cs,GetAccessPrototype,The following statement contains a magic number: IFuturePrototype[] array = new IFuturePrototype[2 + methodParams.Length];
Magic Number,MSR.CVE.BackMaker.ImagePipeline,UnwarpedMapTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\UnwarpedMapTileSource.cs,GetAccessPrototype,The following statement contains a magic number: Array.Copy(methodParams' 0' array' 2' methodParams.Length);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,UnwarpedMapTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\UnwarpedMapTileSource.cs,GetUserBounds,The following statement contains a magic number: latentRegionHolder.RequestRenderRegion(this.GetImageBounds((FutureFeatures)7));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,UserClipperVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\UserClipperVerb.cs,Evaluate,The following statement contains a magic number: D.Assert(paramList.Length == 3);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,UserClipperVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\UserClipperVerb.cs,Evaluate,The following statement contains a magic number: BoundsPresent boundsPresent = (BoundsPresent)paramList[2];
Magic Number,MSR.CVE.BackMaker.ImagePipeline,VETileFetch,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileFetch.cs,GetTileURL,The following statement contains a magic number: if (ta.ZoomLevel > 19)  			{  				return "ex: No VE Imagery at this Zoomlevel";  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,VETileFetch,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileFetch.cs,GetTileURL,The following statement contains a magic number: for (int i = ta.ZoomLevel; i > 0; i--)  			{  				num = 0;  				int num2 = 1 << i - 1;  				if ((ta.TileX & num2) != 0)  				{  					num++;  				}  				if ((ta.TileY & num2) != 0)  				{  					num += 2;  				}  				text += num.ToString();  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,VETileFetch,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileFetch.cs,GetTileURL,The following statement contains a magic number: D.Sayf(6' "getting VE url {0}"' new object[]  			{  				text3  			});
Magic Number,MSR.CVE.BackMaker.ImagePipeline,VETileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileSource.cs,GetUserBounds,The following statement contains a magic number: IFuture future = new MemCacheFuture(this.cachePackage.boundsCache' new ApplyFuture(new ConstantVerb(new BoundsPresent(new RenderRegion(new MapRectangle(-85.0' -5000.0' 85.0' 5000.0)' new DirtyEvent())))' new IFuture[0]));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,VETileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileSource.cs,GetUserBounds,The following statement contains a magic number: IFuture future = new MemCacheFuture(this.cachePackage.boundsCache' new ApplyFuture(new ConstantVerb(new BoundsPresent(new RenderRegion(new MapRectangle(-85.0' -5000.0' 85.0' 5000.0)' new DirtyEvent())))' new IFuture[0]));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,VETileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileSource.cs,GetUserBounds,The following statement contains a magic number: IFuture future = new MemCacheFuture(this.cachePackage.boundsCache' new ApplyFuture(new ConstantVerb(new BoundsPresent(new RenderRegion(new MapRectangle(-85.0' -5000.0' 85.0' 5000.0)' new DirtyEvent())))' new IFuture[0]));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,VETileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileSource.cs,GetUserBounds,The following statement contains a magic number: IFuture future = new MemCacheFuture(this.cachePackage.boundsCache' new ApplyFuture(new ConstantVerb(new BoundsPresent(new RenderRegion(new MapRectangle(-85.0' -5000.0' 85.0' 5000.0)' new DirtyEvent())))' new IFuture[0]));
Magic Number,MSR.CVE.BackMaker.ImagePipeline,VETileUpsamplerVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileUpsamplerVerb.cs,Evaluate,The following statement contains a magic number: if (tileAddress.ZoomLevel <= 19)  			{  				return this.veTileFetch.Curry(new ParamDict(new object[]  				{  					TermName.TileAddress'  					tileAddress  				})).Realize("VETileUpsamplerVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,VETileUpsamplerVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileUpsamplerVerb.cs,Evaluate,The following statement contains a magic number: int num = tileAddress.ZoomLevel - 19;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,VETileUpsamplerVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileUpsamplerVerb.cs,Evaluate,The following statement contains a magic number: Size size = new Size(256' 256);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,VETileUpsamplerVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileUpsamplerVerb.cs,Evaluate,The following statement contains a magic number: Size size = new Size(256' 256);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,VETileUpsamplerVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileUpsamplerVerb.cs,Evaluate,The following statement contains a magic number: Bitmap image = new Bitmap(size.Width * 3' size.Height * 3);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,VETileUpsamplerVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileUpsamplerVerb.cs,Evaluate,The following statement contains a magic number: Bitmap image = new Bitmap(size.Width * 3' size.Height * 3);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,VETileUpsamplerVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileUpsamplerVerb.cs,Evaluate,The following statement contains a magic number: for (int i = -1; i <= 1; i++)  			{  				bool flag = true;  				if ((i == -1 && srcRect.X >= (float)size.Width) || (i == 1 && srcRect.Right < (float)(2 * size.Width - 1)))  				{  					flag = false;  				}  				for (int j = -1; j <= 1; j++)  				{  					bool flag2 = true;  					if ((j == -1 && srcRect.Y >= (float)size.Height) || (j == 1 && srcRect.Bottom < (float)(2 * size.Height - 1)))  					{  						flag2 = false;  					}  					if (flag && flag2)  					{  						TileAddress tileAddress3 = new TileAddress(tileAddress2.TileX + i' tileAddress2.TileY + j' tileAddress2.ZoomLevel);  						Present present = this.veTileFetch.Curry(new ParamDict(new object[]  						{  							TermName.TileAddress'  							tileAddress3  						})).Realize("VETileUpsamplerVerb");  						try  						{  							if (present is ImageRef)  							{  								ImageRef imageRef = (ImageRef)present;  								GDIBigLockedImage image2;  								Monitor.Enter(image2 = imageRef.image);  								try  								{  									Rectangle srcRect2 = new Rectangle(0' 0' size.Width' size.Height);  									Rectangle destRect = new Rectangle(size.Width * (i + 1)' size.Height * (j + 1)' size.Width' size.Height);  									graphics.DrawImage(imageRef.image.IPromiseIAmHoldingGDISLockSoPleaseGiveMeTheImage()' destRect' srcRect2' GraphicsUnit.Pixel);  									goto IL_2B8;  								}  								finally  								{  									Monitor.Exit(image2);  								}  							}  							if (present is PresentFailureCode && i == 0 && j == 0)  							{  								return new PresentFailureCode((PresentFailureCode)present' "TileWebDownloader");  							}  							IL_2B8:;  						}  						finally  						{  							present.Dispose();  						}  					}  				}  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,VETileUpsamplerVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\VETileUpsamplerVerb.cs,Evaluate,The following statement contains a magic number: for (int i = -1; i <= 1; i++)  			{  				bool flag = true;  				if ((i == -1 && srcRect.X >= (float)size.Width) || (i == 1 && srcRect.Right < (float)(2 * size.Width - 1)))  				{  					flag = false;  				}  				for (int j = -1; j <= 1; j++)  				{  					bool flag2 = true;  					if ((j == -1 && srcRect.Y >= (float)size.Height) || (j == 1 && srcRect.Bottom < (float)(2 * size.Height - 1)))  					{  						flag2 = false;  					}  					if (flag && flag2)  					{  						TileAddress tileAddress3 = new TileAddress(tileAddress2.TileX + i' tileAddress2.TileY + j' tileAddress2.ZoomLevel);  						Present present = this.veTileFetch.Curry(new ParamDict(new object[]  						{  							TermName.TileAddress'  							tileAddress3  						})).Realize("VETileUpsamplerVerb");  						try  						{  							if (present is ImageRef)  							{  								ImageRef imageRef = (ImageRef)present;  								GDIBigLockedImage image2;  								Monitor.Enter(image2 = imageRef.image);  								try  								{  									Rectangle srcRect2 = new Rectangle(0' 0' size.Width' size.Height);  									Rectangle destRect = new Rectangle(size.Width * (i + 1)' size.Height * (j + 1)' size.Width' size.Height);  									graphics.DrawImage(imageRef.image.IPromiseIAmHoldingGDISLockSoPleaseGiveMeTheImage()' destRect' srcRect2' GraphicsUnit.Pixel);  									goto IL_2B8;  								}  								finally  								{  									Monitor.Exit(image2);  								}  							}  							if (present is PresentFailureCode && i == 0 && j == 0)  							{  								return new PresentFailureCode((PresentFailureCode)present' "TileWebDownloader");  							}  							IL_2B8:;  						}  						finally  						{  							present.Dispose();  						}  					}  				}  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,WarpBoundsVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WarpBoundsVerb.cs,Evaluate,The following statement contains a magic number: double num = 0.05;
Magic Number,MSR.CVE.BackMaker.ImagePipeline,WarpedMapTileSource,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WarpedMapTileSource.cs,GetImagePrototype,The following statement contains a magic number: if (parameterType is ImageParameterFromTileAddress)  			{  				futurePrototype = new ApplyPrototype(new FadeVerb(this.unwarpedMapTileSource.GetTransparencyOptions().GetFadeOptions())' new IFuturePrototype[]  				{  					futurePrototype'  					new UnevaluatedTerm(TermName.TileAddress)  				});  			}  			else  			{  				D.Say(2' "Warning: Ignoring fade options because I don't have a tile address.");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,WarpImageVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WarpImageVerb.cs,Evaluate,The following statement contains a magic number: D.Assert(paramList.Length == 2);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,WarpImageVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WarpImageVerb.cs,Evaluate,The following statement contains a magic number: MapRectangle mapRectangle = value.Transform(this.imageTransformer.getDestLatLonToSourceTransformer()).GrowFraction(0.05);
Magic Number,MSR.CVE.BackMaker.ImagePipeline,WebTileFetch,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WebTileFetch.cs,Evaluate,The following statement contains a magic number: try  			{  				TileAddress ta = (TileAddress)paramList[0];  				if (BuildConfig.theConfig.injectTemporaryTileFailures && new Random().Next() % 2 == 0)  				{  					result = new InjectedTileFailure();  				}  				else  				{  					HttpWebRequest httpWebRequest = (HttpWebRequest)WebRequest.Create(this.GetTileURL(ta));  					httpWebRequest.Timeout = 9000;  					HttpWebResponse httpWebResponse;  					try  					{  						httpWebResponse = (HttpWebResponse)httpWebRequest.GetResponse();  					}  					catch (WebException ex)  					{  						if (ex.Response is HttpWebResponse)  						{  							HttpWebResponse httpWebResponse2 = (HttpWebResponse)ex.Response;  							if (httpWebResponse2.StatusCode == HttpStatusCode.BadRequest || httpWebResponse2.StatusCode == HttpStatusCode.NotFound)  							{  								result = new UnretryableFailure(ex);  								return result;  							}  						}  						result = new RetryableFailure(ex' "Timeout waiting for tile in WebTileFetch");  						return result;  					}  					if (httpWebResponse.StatusCode != HttpStatusCode.OK)  					{  						throw new Exception(string.Format("HTTP {0} from web source"' httpWebResponse.StatusCode.ToString()));  					}  					Stream responseStream = httpWebResponse.GetResponseStream();  					GDIBigLockedImage image = GDIBigLockedImage.FromStream(responseStream);  					httpWebResponse.Close();  					result = new ImageRef(new ImageRefCounted(image));  				}  			}  			catch (Exception ex2)  			{  				result = new PresentFailureCode(ex2);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,WebTileFetch,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WebTileFetch.cs,Evaluate,The following statement contains a magic number: try  			{  				TileAddress ta = (TileAddress)paramList[0];  				if (BuildConfig.theConfig.injectTemporaryTileFailures && new Random().Next() % 2 == 0)  				{  					result = new InjectedTileFailure();  				}  				else  				{  					HttpWebRequest httpWebRequest = (HttpWebRequest)WebRequest.Create(this.GetTileURL(ta));  					httpWebRequest.Timeout = 9000;  					HttpWebResponse httpWebResponse;  					try  					{  						httpWebResponse = (HttpWebResponse)httpWebRequest.GetResponse();  					}  					catch (WebException ex)  					{  						if (ex.Response is HttpWebResponse)  						{  							HttpWebResponse httpWebResponse2 = (HttpWebResponse)ex.Response;  							if (httpWebResponse2.StatusCode == HttpStatusCode.BadRequest || httpWebResponse2.StatusCode == HttpStatusCode.NotFound)  							{  								result = new UnretryableFailure(ex);  								return result;  							}  						}  						result = new RetryableFailure(ex' "Timeout waiting for tile in WebTileFetch");  						return result;  					}  					if (httpWebResponse.StatusCode != HttpStatusCode.OK)  					{  						throw new Exception(string.Format("HTTP {0} from web source"' httpWebResponse.StatusCode.ToString()));  					}  					Stream responseStream = httpWebResponse.GetResponseStream();  					GDIBigLockedImage image = GDIBigLockedImage.FromStream(responseStream);  					httpWebResponse.Close();  					result = new ImageRef(new ImageRefCounted(image));  				}  			}  			catch (Exception ex2)  			{  				result = new PresentFailureCode(ex2);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,WPFOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenDocument.cs,Render,The following statement contains a magic number: try  			{  				RectangleD rectangleD = new RectangleD(mapRect.lon0 * (double)this.boundingBox.Width - 0.5' -mapRect.lat1 * (double)this.boundingBox.Height + (double)this.actualBoundingBox.Height - 0.5' (mapRect.lon1 - mapRect.lon0) * (double)this.boundingBox.Width + (double)this.hackRectangleAdjust' (mapRect.lat1 - mapRect.lat0) * (double)this.boundingBox.Height + (double)this.hackRectangleAdjust);  				RectangleD rectangleD2 = rectangleD.Grow(2.0);  				RectangleD r = new RectangleD((double)this.actualBoundingBox.X' (double)this.actualBoundingBox.Y' (double)this.actualBoundingBox.Width' (double)this.actualBoundingBox.Height);  				RectangleD dest = new RectangleD(0.0' 0.0' (double)size.Width' (double)size.Height);  				ScaleAndTranslate scaleAndTranslate = new ScaleAndTranslate(rectangleD' dest);  				RectangleD rectangleD3 = rectangleD2.Intersect(r).Round();  				RectangleD rectangleD4 = scaleAndTranslate.Apply(rectangleD.Intersect(r));  				RectangleD rectangleD5 = scaleAndTranslate.Apply(rectangleD3);  				ScaleAndTranslate scaleAndTranslate2 = new ScaleAndTranslate(-rectangleD5.X' -rectangleD5.Y);  				RectangleD rectangleD6 = scaleAndTranslate2.Apply(rectangleD4);  				GDIBigLockedImage gDIBigLockedImage = new GDIBigLockedImage(size' "WPFVerb");  				GDIBigLockedImage image = gDIBigLockedImage;  				if (!rectangleD3.IntIsEmpty() && !rectangleD6.IntIsEmpty())  				{  					try  					{  						GDIBigLockedImage obj;  						Monitor.Enter(obj = gDIBigLockedImage);  						try  						{  							Bitmap bitmap = (Bitmap)gDIBigLockedImage.IPromiseIAmHoldingGDISLockSoPleaseGiveMeTheImage();  							BitmapSource source = new CroppedBitmap(this.primarySource' rectangleD3.ToInt32Rect());  							BitmapSource source2 = new TransformedBitmap(source' scaleAndTranslate.ToScaleTransform());  							BitmapSource bitmapSource = new CroppedBitmap(source2' rectangleD6.ToInt32Rect());  							Int32Rect int32Rect = rectangleD4.ToInt32Rect();  							BitmapData bitmapData = bitmap.LockBits(new Rectangle(0' 0' size.Width' size.Height)' ImageLockMode.WriteOnly' System.Drawing.Imaging.PixelFormat.Format32bppArgb);  							try  							{  								IntPtr buffer = new IntPtr(bitmapData.Scan0.ToInt32() + int32Rect.Y * bitmapData.Stride + int32Rect.X * 4);  								bitmapSource.CopyPixels(new Int32Rect(0' 0' bitmapSource.PixelWidth' bitmapSource.PixelHeight)' buffer' bitmapData.Stride * bitmapData.Height' bitmapData.Stride);  							}  							finally  							{  								bitmap.UnlockBits(bitmapData);  							}  						}  						finally  						{  							Monitor.Exit(obj);  						}  					}  					catch (Exception ex)  					{  						if (BigDebugKnob.theKnob.debugFeaturesEnabled)  						{  							this.LabelThisImage(gDIBigLockedImage' ex.ToString());  						}  					}  					if (useDocumentTransparency)  					{  						image = gDIBigLockedImage;  					}  					else  					{  						GDIBigLockedImage gDIBigLockedImage2 = new GDIBigLockedImage(size' "WPFVerb-untransparent");  						GDIBigLockedImage obj2;  						Monitor.Enter(obj2 = gDIBigLockedImage2);  						try  						{  							Graphics graphics = gDIBigLockedImage2.IPromiseIAmHoldingGDISLockSoPleaseGiveMeTheGraphics();  							graphics.FillRectangle(new SolidBrush(System.Drawing.Color.White)' 0' 0' size.Width' size.Height);  							graphics.DrawImage(gDIBigLockedImage.IPromiseIAmHoldingGDISLockSoPleaseGiveMeTheImage()' 0' 0);  							graphics.Dispose();  							image = gDIBigLockedImage2;  							gDIBigLockedImage.Dispose();  						}  						finally  						{  							Monitor.Exit(obj2);  						}  					}  				}  				result = new ImageRef(new ImageRefCounted(image));  			}  			finally  			{  				Monitor.Exit(this);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,WPFOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenDocument.cs,Render,The following statement contains a magic number: try  			{  				RectangleD rectangleD = new RectangleD(mapRect.lon0 * (double)this.boundingBox.Width - 0.5' -mapRect.lat1 * (double)this.boundingBox.Height + (double)this.actualBoundingBox.Height - 0.5' (mapRect.lon1 - mapRect.lon0) * (double)this.boundingBox.Width + (double)this.hackRectangleAdjust' (mapRect.lat1 - mapRect.lat0) * (double)this.boundingBox.Height + (double)this.hackRectangleAdjust);  				RectangleD rectangleD2 = rectangleD.Grow(2.0);  				RectangleD r = new RectangleD((double)this.actualBoundingBox.X' (double)this.actualBoundingBox.Y' (double)this.actualBoundingBox.Width' (double)this.actualBoundingBox.Height);  				RectangleD dest = new RectangleD(0.0' 0.0' (double)size.Width' (double)size.Height);  				ScaleAndTranslate scaleAndTranslate = new ScaleAndTranslate(rectangleD' dest);  				RectangleD rectangleD3 = rectangleD2.Intersect(r).Round();  				RectangleD rectangleD4 = scaleAndTranslate.Apply(rectangleD.Intersect(r));  				RectangleD rectangleD5 = scaleAndTranslate.Apply(rectangleD3);  				ScaleAndTranslate scaleAndTranslate2 = new ScaleAndTranslate(-rectangleD5.X' -rectangleD5.Y);  				RectangleD rectangleD6 = scaleAndTranslate2.Apply(rectangleD4);  				GDIBigLockedImage gDIBigLockedImage = new GDIBigLockedImage(size' "WPFVerb");  				GDIBigLockedImage image = gDIBigLockedImage;  				if (!rectangleD3.IntIsEmpty() && !rectangleD6.IntIsEmpty())  				{  					try  					{  						GDIBigLockedImage obj;  						Monitor.Enter(obj = gDIBigLockedImage);  						try  						{  							Bitmap bitmap = (Bitmap)gDIBigLockedImage.IPromiseIAmHoldingGDISLockSoPleaseGiveMeTheImage();  							BitmapSource source = new CroppedBitmap(this.primarySource' rectangleD3.ToInt32Rect());  							BitmapSource source2 = new TransformedBitmap(source' scaleAndTranslate.ToScaleTransform());  							BitmapSource bitmapSource = new CroppedBitmap(source2' rectangleD6.ToInt32Rect());  							Int32Rect int32Rect = rectangleD4.ToInt32Rect();  							BitmapData bitmapData = bitmap.LockBits(new Rectangle(0' 0' size.Width' size.Height)' ImageLockMode.WriteOnly' System.Drawing.Imaging.PixelFormat.Format32bppArgb);  							try  							{  								IntPtr buffer = new IntPtr(bitmapData.Scan0.ToInt32() + int32Rect.Y * bitmapData.Stride + int32Rect.X * 4);  								bitmapSource.CopyPixels(new Int32Rect(0' 0' bitmapSource.PixelWidth' bitmapSource.PixelHeight)' buffer' bitmapData.Stride * bitmapData.Height' bitmapData.Stride);  							}  							finally  							{  								bitmap.UnlockBits(bitmapData);  							}  						}  						finally  						{  							Monitor.Exit(obj);  						}  					}  					catch (Exception ex)  					{  						if (BigDebugKnob.theKnob.debugFeaturesEnabled)  						{  							this.LabelThisImage(gDIBigLockedImage' ex.ToString());  						}  					}  					if (useDocumentTransparency)  					{  						image = gDIBigLockedImage;  					}  					else  					{  						GDIBigLockedImage gDIBigLockedImage2 = new GDIBigLockedImage(size' "WPFVerb-untransparent");  						GDIBigLockedImage obj2;  						Monitor.Enter(obj2 = gDIBigLockedImage2);  						try  						{  							Graphics graphics = gDIBigLockedImage2.IPromiseIAmHoldingGDISLockSoPleaseGiveMeTheGraphics();  							graphics.FillRectangle(new SolidBrush(System.Drawing.Color.White)' 0' 0' size.Width' size.Height);  							graphics.DrawImage(gDIBigLockedImage.IPromiseIAmHoldingGDISLockSoPleaseGiveMeTheImage()' 0' 0);  							graphics.Dispose();  							image = gDIBigLockedImage2;  							gDIBigLockedImage.Dispose();  						}  						finally  						{  							Monitor.Exit(obj2);  						}  					}  				}  				result = new ImageRef(new ImageRefCounted(image));  			}  			finally  			{  				Monitor.Exit(this);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,WPFOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenDocument.cs,Render,The following statement contains a magic number: try  			{  				RectangleD rectangleD = new RectangleD(mapRect.lon0 * (double)this.boundingBox.Width - 0.5' -mapRect.lat1 * (double)this.boundingBox.Height + (double)this.actualBoundingBox.Height - 0.5' (mapRect.lon1 - mapRect.lon0) * (double)this.boundingBox.Width + (double)this.hackRectangleAdjust' (mapRect.lat1 - mapRect.lat0) * (double)this.boundingBox.Height + (double)this.hackRectangleAdjust);  				RectangleD rectangleD2 = rectangleD.Grow(2.0);  				RectangleD r = new RectangleD((double)this.actualBoundingBox.X' (double)this.actualBoundingBox.Y' (double)this.actualBoundingBox.Width' (double)this.actualBoundingBox.Height);  				RectangleD dest = new RectangleD(0.0' 0.0' (double)size.Width' (double)size.Height);  				ScaleAndTranslate scaleAndTranslate = new ScaleAndTranslate(rectangleD' dest);  				RectangleD rectangleD3 = rectangleD2.Intersect(r).Round();  				RectangleD rectangleD4 = scaleAndTranslate.Apply(rectangleD.Intersect(r));  				RectangleD rectangleD5 = scaleAndTranslate.Apply(rectangleD3);  				ScaleAndTranslate scaleAndTranslate2 = new ScaleAndTranslate(-rectangleD5.X' -rectangleD5.Y);  				RectangleD rectangleD6 = scaleAndTranslate2.Apply(rectangleD4);  				GDIBigLockedImage gDIBigLockedImage = new GDIBigLockedImage(size' "WPFVerb");  				GDIBigLockedImage image = gDIBigLockedImage;  				if (!rectangleD3.IntIsEmpty() && !rectangleD6.IntIsEmpty())  				{  					try  					{  						GDIBigLockedImage obj;  						Monitor.Enter(obj = gDIBigLockedImage);  						try  						{  							Bitmap bitmap = (Bitmap)gDIBigLockedImage.IPromiseIAmHoldingGDISLockSoPleaseGiveMeTheImage();  							BitmapSource source = new CroppedBitmap(this.primarySource' rectangleD3.ToInt32Rect());  							BitmapSource source2 = new TransformedBitmap(source' scaleAndTranslate.ToScaleTransform());  							BitmapSource bitmapSource = new CroppedBitmap(source2' rectangleD6.ToInt32Rect());  							Int32Rect int32Rect = rectangleD4.ToInt32Rect();  							BitmapData bitmapData = bitmap.LockBits(new Rectangle(0' 0' size.Width' size.Height)' ImageLockMode.WriteOnly' System.Drawing.Imaging.PixelFormat.Format32bppArgb);  							try  							{  								IntPtr buffer = new IntPtr(bitmapData.Scan0.ToInt32() + int32Rect.Y * bitmapData.Stride + int32Rect.X * 4);  								bitmapSource.CopyPixels(new Int32Rect(0' 0' bitmapSource.PixelWidth' bitmapSource.PixelHeight)' buffer' bitmapData.Stride * bitmapData.Height' bitmapData.Stride);  							}  							finally  							{  								bitmap.UnlockBits(bitmapData);  							}  						}  						finally  						{  							Monitor.Exit(obj);  						}  					}  					catch (Exception ex)  					{  						if (BigDebugKnob.theKnob.debugFeaturesEnabled)  						{  							this.LabelThisImage(gDIBigLockedImage' ex.ToString());  						}  					}  					if (useDocumentTransparency)  					{  						image = gDIBigLockedImage;  					}  					else  					{  						GDIBigLockedImage gDIBigLockedImage2 = new GDIBigLockedImage(size' "WPFVerb-untransparent");  						GDIBigLockedImage obj2;  						Monitor.Enter(obj2 = gDIBigLockedImage2);  						try  						{  							Graphics graphics = gDIBigLockedImage2.IPromiseIAmHoldingGDISLockSoPleaseGiveMeTheGraphics();  							graphics.FillRectangle(new SolidBrush(System.Drawing.Color.White)' 0' 0' size.Width' size.Height);  							graphics.DrawImage(gDIBigLockedImage.IPromiseIAmHoldingGDISLockSoPleaseGiveMeTheImage()' 0' 0);  							graphics.Dispose();  							image = gDIBigLockedImage2;  							gDIBigLockedImage.Dispose();  						}  						finally  						{  							Monitor.Exit(obj2);  						}  					}  				}  				result = new ImageRef(new ImageRefCounted(image));  			}  			finally  			{  				Monitor.Exit(this);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,WPFOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenDocument.cs,Render,The following statement contains a magic number: try  			{  				RectangleD rectangleD = new RectangleD(mapRect.lon0 * (double)this.boundingBox.Width - 0.5' -mapRect.lat1 * (double)this.boundingBox.Height + (double)this.actualBoundingBox.Height - 0.5' (mapRect.lon1 - mapRect.lon0) * (double)this.boundingBox.Width + (double)this.hackRectangleAdjust' (mapRect.lat1 - mapRect.lat0) * (double)this.boundingBox.Height + (double)this.hackRectangleAdjust);  				RectangleD rectangleD2 = rectangleD.Grow(2.0);  				RectangleD r = new RectangleD((double)this.actualBoundingBox.X' (double)this.actualBoundingBox.Y' (double)this.actualBoundingBox.Width' (double)this.actualBoundingBox.Height);  				RectangleD dest = new RectangleD(0.0' 0.0' (double)size.Width' (double)size.Height);  				ScaleAndTranslate scaleAndTranslate = new ScaleAndTranslate(rectangleD' dest);  				RectangleD rectangleD3 = rectangleD2.Intersect(r).Round();  				RectangleD rectangleD4 = scaleAndTranslate.Apply(rectangleD.Intersect(r));  				RectangleD rectangleD5 = scaleAndTranslate.Apply(rectangleD3);  				ScaleAndTranslate scaleAndTranslate2 = new ScaleAndTranslate(-rectangleD5.X' -rectangleD5.Y);  				RectangleD rectangleD6 = scaleAndTranslate2.Apply(rectangleD4);  				GDIBigLockedImage gDIBigLockedImage = new GDIBigLockedImage(size' "WPFVerb");  				GDIBigLockedImage image = gDIBigLockedImage;  				if (!rectangleD3.IntIsEmpty() && !rectangleD6.IntIsEmpty())  				{  					try  					{  						GDIBigLockedImage obj;  						Monitor.Enter(obj = gDIBigLockedImage);  						try  						{  							Bitmap bitmap = (Bitmap)gDIBigLockedImage.IPromiseIAmHoldingGDISLockSoPleaseGiveMeTheImage();  							BitmapSource source = new CroppedBitmap(this.primarySource' rectangleD3.ToInt32Rect());  							BitmapSource source2 = new TransformedBitmap(source' scaleAndTranslate.ToScaleTransform());  							BitmapSource bitmapSource = new CroppedBitmap(source2' rectangleD6.ToInt32Rect());  							Int32Rect int32Rect = rectangleD4.ToInt32Rect();  							BitmapData bitmapData = bitmap.LockBits(new Rectangle(0' 0' size.Width' size.Height)' ImageLockMode.WriteOnly' System.Drawing.Imaging.PixelFormat.Format32bppArgb);  							try  							{  								IntPtr buffer = new IntPtr(bitmapData.Scan0.ToInt32() + int32Rect.Y * bitmapData.Stride + int32Rect.X * 4);  								bitmapSource.CopyPixels(new Int32Rect(0' 0' bitmapSource.PixelWidth' bitmapSource.PixelHeight)' buffer' bitmapData.Stride * bitmapData.Height' bitmapData.Stride);  							}  							finally  							{  								bitmap.UnlockBits(bitmapData);  							}  						}  						finally  						{  							Monitor.Exit(obj);  						}  					}  					catch (Exception ex)  					{  						if (BigDebugKnob.theKnob.debugFeaturesEnabled)  						{  							this.LabelThisImage(gDIBigLockedImage' ex.ToString());  						}  					}  					if (useDocumentTransparency)  					{  						image = gDIBigLockedImage;  					}  					else  					{  						GDIBigLockedImage gDIBigLockedImage2 = new GDIBigLockedImage(size' "WPFVerb-untransparent");  						GDIBigLockedImage obj2;  						Monitor.Enter(obj2 = gDIBigLockedImage2);  						try  						{  							Graphics graphics = gDIBigLockedImage2.IPromiseIAmHoldingGDISLockSoPleaseGiveMeTheGraphics();  							graphics.FillRectangle(new SolidBrush(System.Drawing.Color.White)' 0' 0' size.Width' size.Height);  							graphics.DrawImage(gDIBigLockedImage.IPromiseIAmHoldingGDISLockSoPleaseGiveMeTheImage()' 0' 0);  							graphics.Dispose();  							image = gDIBigLockedImage2;  							gDIBigLockedImage.Dispose();  						}  						finally  						{  							Monitor.Exit(obj2);  						}  					}  				}  				result = new ImageRef(new ImageRefCounted(image));  			}  			finally  			{  				Monitor.Exit(this);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,WPFOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenDocument.cs,ImageDetail,The following statement contains a magic number: try  			{  				double num = Math.Max((double)this.primarySource.PixelWidth / (double)assumedDisplaySize.Width' (double)this.primarySource.PixelHeight / (double)assumedDisplaySize.Height);  				num = Math.Max(num' 1.0);  				int num2 = 1 + (int)Math.Ceiling(Math.Log(num) / Math.Log(2.0));  				D.Assert(num2 >= 0);  				result = new IntParameter(num2);  			}  			finally  			{  				Monitor.Exit(this);  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,WPFOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  			{  				D.Assert(paramList.Length == 2);  				SizeParameter sizeParameter2 = (SizeParameter)paramList[1];  				return this.ImageDetail(sizeParameter2.value);  			}  			case 3:  				D.Assert(paramList.Length == 1);  				return new StringParameter(null);  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,WPFOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  			{  				D.Assert(paramList.Length == 2);  				SizeParameter sizeParameter2 = (SizeParameter)paramList[1];  				return this.ImageDetail(sizeParameter2.value);  			}  			case 3:  				D.Assert(paramList.Length == 1);  				return new StringParameter(null);  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,WPFOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  			{  				D.Assert(paramList.Length == 2);  				SizeParameter sizeParameter2 = (SizeParameter)paramList[1];  				return this.ImageDetail(sizeParameter2.value);  			}  			case 3:  				D.Assert(paramList.Length == 1);  				return new StringParameter(null);  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,WPFOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  			{  				D.Assert(paramList.Length == 2);  				SizeParameter sizeParameter2 = (SizeParameter)paramList[1];  				return this.ImageDetail(sizeParameter2.value);  			}  			case 3:  				D.Assert(paramList.Length == 1);  				return new StringParameter(null);  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,WPFOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  			{  				D.Assert(paramList.Length == 2);  				SizeParameter sizeParameter2 = (SizeParameter)paramList[1];  				return this.ImageDetail(sizeParameter2.value);  			}  			case 3:  				D.Assert(paramList.Length == 1);  				return new StringParameter(null);  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,WPFOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  			{  				D.Assert(paramList.Length == 2);  				SizeParameter sizeParameter2 = (SizeParameter)paramList[1];  				return this.ImageDetail(sizeParameter2.value);  			}  			case 3:  				D.Assert(paramList.Length == 1);  				return new StringParameter(null);  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,WPFOpenDocument,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenDocument.cs,Evaluate,The following statement contains a magic number: switch (((IntParameter)paramList[0]).value)  			{  			case 0:  			{  				D.Assert(paramList.Length == 5);  				MapRectangleParameter mapRectangleParameter = (MapRectangleParameter)paramList[1];  				SizeParameter sizeParameter = (SizeParameter)paramList[2];  				BoolParameter boolParameter = (BoolParameter)paramList[3];  				BoolParameter boolParameter2 = (BoolParameter)paramList[4];  				return this.Render(mapRectangleParameter.value' sizeParameter.value' boolParameter.value' boolParameter2.value);  			}  			case 1:  				D.Assert(paramList.Length == 1);  				return this.FetchBounds();  			case 2:  			{  				D.Assert(paramList.Length == 2);  				SizeParameter sizeParameter2 = (SizeParameter)paramList[1];  				return this.ImageDetail(sizeParameter2.value);  			}  			case 3:  				D.Assert(paramList.Length == 1);  				return new StringParameter(null);  			default:  				return new PresentFailureCode("Invalid AccessVerb");  			}
Magic Number,MSR.CVE.BackMaker.ImagePipeline,WPFOpenVerb,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.ImagePipeline\WPFOpenVerb.cs,Evaluate,The following statement contains a magic number: D.Assert(paramList.Length == 2);
Magic Number,MSR.CVE.BackMaker.MCDebug,DiagnosticUI,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.MCDebug\DiagnosticUI.cs,UpdateQueueListThread,The following statement contains a magic number: while (true)  			{  				this.queueListChangedEvent.WaitOne();  				DateTime now = DateTime.Now;  				if (this.lastQueueDraw.AddMilliseconds(200.0) < now && this.canInvoke)  				{  					DiagnosticUI.UQLDelegate method = new DiagnosticUI.UQLDelegate(this.updateQueueList);  					base.BeginInvoke(method);  					this.lastQueueDraw = now;  				}  			}
Magic Number,MSR.CVE.BackMaker.MCDebug,DiagnosticUI,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.MCDebug\DiagnosticUI.cs,InitializeComponent,The following statement contains a magic number: this.resourceCountersGridView.Size = new Size(283' 455);
Magic Number,MSR.CVE.BackMaker.MCDebug,DiagnosticUI,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.MCDebug\DiagnosticUI.cs,InitializeComponent,The following statement contains a magic number: this.resourceCountersGridView.Size = new Size(283' 455);
Magic Number,MSR.CVE.BackMaker.MCDebug,DiagnosticUI,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.MCDebug\DiagnosticUI.cs,InitializeComponent,The following statement contains a magic number: this.renderQueueListBox.Size = new Size(293' 446);
Magic Number,MSR.CVE.BackMaker.MCDebug,DiagnosticUI,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.MCDebug\DiagnosticUI.cs,InitializeComponent,The following statement contains a magic number: this.renderQueueListBox.Size = new Size(293' 446);
Magic Number,MSR.CVE.BackMaker.MCDebug,DiagnosticUI,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.MCDebug\DiagnosticUI.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Size = new Size(580' 455);
Magic Number,MSR.CVE.BackMaker.MCDebug,DiagnosticUI,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.MCDebug\DiagnosticUI.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Size = new Size(580' 455);
Magic Number,MSR.CVE.BackMaker.MCDebug,DiagnosticUI,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.MCDebug\DiagnosticUI.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.SplitterDistance = 283;
Magic Number,MSR.CVE.BackMaker.MCDebug,DiagnosticUI,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.MCDebug\DiagnosticUI.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.TabIndex = 2;
Magic Number,MSR.CVE.BackMaker.MCDebug,DiagnosticUI,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.MCDebug\DiagnosticUI.cs,InitializeComponent,The following statement contains a magic number: base.ClientSize = new Size(580' 455);
Magic Number,MSR.CVE.BackMaker.MCDebug,DiagnosticUI,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker.MCDebug\DiagnosticUI.cs,InitializeComponent,The following statement contains a magic number: base.ClientSize = new Size(580' 455);
Magic Number,MSR.CVE.BackMaker,AboutForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.aboutContentsBrowser.Location = new Point(8' 104);
Magic Number,MSR.CVE.BackMaker,AboutForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.aboutContentsBrowser.Location = new Point(8' 104);
Magic Number,MSR.CVE.BackMaker,AboutForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.aboutContentsBrowser.MinimumSize = new Size(20' 20);
Magic Number,MSR.CVE.BackMaker,AboutForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.aboutContentsBrowser.MinimumSize = new Size(20' 20);
Magic Number,MSR.CVE.BackMaker,AboutForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.aboutContentsBrowser.Size = new Size(558' 439);
Magic Number,MSR.CVE.BackMaker,AboutForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.aboutContentsBrowser.Size = new Size(558' 439);
Magic Number,MSR.CVE.BackMaker,AboutForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.aboutContentsBrowser.TabIndex = 3;
Magic Number,MSR.CVE.BackMaker,AboutForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new Point(379' 1);
Magic Number,MSR.CVE.BackMaker,AboutForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new Size(148' 139);
Magic Number,MSR.CVE.BackMaker,AboutForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new Size(148' 139);
Magic Number,MSR.CVE.BackMaker,AboutForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 4;
Magic Number,MSR.CVE.BackMaker,AboutForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new Point(33' 22);
Magic Number,MSR.CVE.BackMaker,AboutForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new Point(33' 22);
Magic Number,MSR.CVE.BackMaker,AboutForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new Size(340' 92);
Magic Number,MSR.CVE.BackMaker,AboutForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new Size(340' 92);
Magic Number,MSR.CVE.BackMaker,AboutForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 5;
Magic Number,MSR.CVE.BackMaker,AboutForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AboutForm.cs,InitializeComponent,The following statement contains a magic number: base.ClientSize = new Size(555' 444);
Magic Number,MSR.CVE.BackMaker,AboutForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AboutForm.cs,InitializeComponent,The following statement contains a magic number: base.ClientSize = new Size(555' 444);
Magic Number,MSR.CVE.BackMaker,AffineTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AffineTransformationStyle.cs,getCorrespondencesRequired,The following statement contains a magic number: return 2;
Magic Number,MSR.CVE.BackMaker,AffineTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AffineTransformationStyle.cs,getDescriptionStrings,The following statement contains a magic number: if (numCorrespondences >= 2)  			{  				list.Add("Ready to lock; add more points to increase accuracy.");  			}  			else  			{  				list.Add("Correspondences required:");  			}
Magic Number,MSR.CVE.BackMaker,AffineTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AffineTransformationStyle.cs,getDescriptionStrings,The following statement contains a magic number: if (numCorrespondences < 2)  			{  				list.Add(string.Format("{0} more for rigid."' 2 - numCorrespondences));  			}
Magic Number,MSR.CVE.BackMaker,AffineTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AffineTransformationStyle.cs,getDescriptionStrings,The following statement contains a magic number: if (numCorrespondences < 2)  			{  				list.Add(string.Format("{0} more for rigid."' 2 - numCorrespondences));  			}
Magic Number,MSR.CVE.BackMaker,AffineTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AffineTransformationStyle.cs,getDescriptionStrings,The following statement contains a magic number: if (numCorrespondences < 3)  			{  				list.Add(string.Format("{0} or more for affine."' 3 - numCorrespondences));  			}
Magic Number,MSR.CVE.BackMaker,AffineTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AffineTransformationStyle.cs,getDescriptionStrings,The following statement contains a magic number: if (numCorrespondences < 3)  			{  				list.Add(string.Format("{0} or more for affine."' 3 - numCorrespondences));  			}
Magic Number,MSR.CVE.BackMaker,AutomaticTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AutomaticTransformationStyle.cs,getCorrespondencesRequired,The following statement contains a magic number: return 2;
Magic Number,MSR.CVE.BackMaker,AutomaticTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AutomaticTransformationStyle.cs,getPolynomialDegree,The following statement contains a magic number: if (numCorrespondences < 7)  			{  				return 1;  			}
Magic Number,MSR.CVE.BackMaker,AutomaticTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AutomaticTransformationStyle.cs,getPolynomialDegree,The following statement contains a magic number: return 2;
Magic Number,MSR.CVE.BackMaker,AutomaticTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AutomaticTransformationStyle.cs,getDescriptionStrings,The following statement contains a magic number: if (numCorrespondences < 2)  			{  				list.Add(string.Format("At least {0} more for rigid."' 2 - numCorrespondences));  			}
Magic Number,MSR.CVE.BackMaker,AutomaticTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AutomaticTransformationStyle.cs,getDescriptionStrings,The following statement contains a magic number: if (numCorrespondences < 2)  			{  				list.Add(string.Format("At least {0} more for rigid."' 2 - numCorrespondences));  			}
Magic Number,MSR.CVE.BackMaker,AutomaticTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AutomaticTransformationStyle.cs,getDescriptionStrings,The following statement contains a magic number: if (numCorrespondences < 3)  			{  				list.Add(string.Format("At least {0} more for affine."' 3 - numCorrespondences));  			}
Magic Number,MSR.CVE.BackMaker,AutomaticTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AutomaticTransformationStyle.cs,getDescriptionStrings,The following statement contains a magic number: if (numCorrespondences < 3)  			{  				list.Add(string.Format("At least {0} more for affine."' 3 - numCorrespondences));  			}
Magic Number,MSR.CVE.BackMaker,AutomaticTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AutomaticTransformationStyle.cs,getDescriptionStrings,The following statement contains a magic number: if (numCorrespondences < 7)  			{  				list.Add(string.Format("At least {0} more for quadratic."' 7 - numCorrespondences));  			}
Magic Number,MSR.CVE.BackMaker,AutomaticTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\AutomaticTransformationStyle.cs,getDescriptionStrings,The following statement contains a magic number: if (numCorrespondences < 7)  			{  				list.Add(string.Format("At least {0} more for quadratic."' 7 - numCorrespondences));  			}
Magic Number,MSR.CVE.BackMaker,CompositeTileUnit,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\CompositeTileUnit.cs,DoWork,The following statement contains a magic number: try  			{  				D.Sayf(0' "{0} start compositing {1}"' new object[]  				{  					Clocker.theClock.stamp()'  					this  				});  				if (!this.NeedThisTile())  				{  					D.Say(10' "Skipping extant file: " + this.outputFilename);  					result = false;  				}  				else  				{  					D.Sayf(10' "Compositing {0}"' new object[]  					{  						this.address  					});  					Size tileSize = new MercatorCoordinateSystem().GetTileSize();  					GDIBigLockedImage gDIBigLockedImage = new GDIBigLockedImage(tileSize' "CompositeTileUnit");  					D.Say(10' string.Format("Start({0}) sm.count={1}"' this.address' this.singleSourceUnits.Count));  					foreach (SingleSourceUnit current in this.singleSourceUnits)  					{  						current.CompositeImageInto(gDIBigLockedImage);  					}  					this.SaveTile(gDIBigLockedImage);  					result = true;  				}  			}  			catch (NonredundantRenderComplaint complaint)  			{  				feedback.PostComplaint(complaint);  				result = false;  			}  			catch (Exception arg)  			{  				feedback.PostMessage(string.Format("Exception compositing tile {0}: {1}"' this.address' arg));  				result = false;  			}
Magic Number,MSR.CVE.BackMaker,CompositeTileUnit,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\CompositeTileUnit.cs,DoWork,The following statement contains a magic number: try  			{  				D.Sayf(0' "{0} start compositing {1}"' new object[]  				{  					Clocker.theClock.stamp()'  					this  				});  				if (!this.NeedThisTile())  				{  					D.Say(10' "Skipping extant file: " + this.outputFilename);  					result = false;  				}  				else  				{  					D.Sayf(10' "Compositing {0}"' new object[]  					{  						this.address  					});  					Size tileSize = new MercatorCoordinateSystem().GetTileSize();  					GDIBigLockedImage gDIBigLockedImage = new GDIBigLockedImage(tileSize' "CompositeTileUnit");  					D.Say(10' string.Format("Start({0}) sm.count={1}"' this.address' this.singleSourceUnits.Count));  					foreach (SingleSourceUnit current in this.singleSourceUnits)  					{  						current.CompositeImageInto(gDIBigLockedImage);  					}  					this.SaveTile(gDIBigLockedImage);  					result = true;  				}  			}  			catch (NonredundantRenderComplaint complaint)  			{  				feedback.PostComplaint(complaint);  				result = false;  			}  			catch (Exception arg)  			{  				feedback.PostMessage(string.Format("Exception compositing tile {0}: {1}"' this.address' arg));  				result = false;  			}
Magic Number,MSR.CVE.BackMaker,CompositeTileUnit,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\CompositeTileUnit.cs,DoWork,The following statement contains a magic number: try  			{  				D.Sayf(0' "{0} start compositing {1}"' new object[]  				{  					Clocker.theClock.stamp()'  					this  				});  				if (!this.NeedThisTile())  				{  					D.Say(10' "Skipping extant file: " + this.outputFilename);  					result = false;  				}  				else  				{  					D.Sayf(10' "Compositing {0}"' new object[]  					{  						this.address  					});  					Size tileSize = new MercatorCoordinateSystem().GetTileSize();  					GDIBigLockedImage gDIBigLockedImage = new GDIBigLockedImage(tileSize' "CompositeTileUnit");  					D.Say(10' string.Format("Start({0}) sm.count={1}"' this.address' this.singleSourceUnits.Count));  					foreach (SingleSourceUnit current in this.singleSourceUnits)  					{  						current.CompositeImageInto(gDIBigLockedImage);  					}  					this.SaveTile(gDIBigLockedImage);  					result = true;  				}  			}  			catch (NonredundantRenderComplaint complaint)  			{  				feedback.PostComplaint(complaint);  				result = false;  			}  			catch (Exception arg)  			{  				feedback.PostMessage(string.Format("Exception compositing tile {0}: {1}"' this.address' arg));  				result = false;  			}
Magic Number,MSR.CVE.BackMaker,CrunchedLayer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\CrunchedLayer.cs,CrunchedLayer,The following statement contains a magic number: this.defaultView = this.GetDefaultView(layer' new Size(600' 600)' mapTileSourceFactory' out flag);
Magic Number,MSR.CVE.BackMaker,CrunchedLayer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\CrunchedLayer.cs,CrunchedLayer,The following statement contains a magic number: this.defaultView = this.GetDefaultView(layer' new Size(600' 600)' mapTileSourceFactory' out flag);
Magic Number,MSR.CVE.BackMaker,DebugThreadInterrupter,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DebugThreadInterrupter.cs,DoWork,The following statement contains a magic number: while (true)  			{  				int num = -1;  				this.quitEvent.WaitOne(1000' false);  				if (this.quitFlag)  				{  					break;  				}  				DebugThreadInterrupter.ThreadRec threadRec = null;  				Monitor.Enter(this);  				try  				{  					if (num >= 0)  					{  						threadRec = this.threadDict[num];  					}  				}  				finally  				{  					Monitor.Exit(this);  				}  				if (threadRec != null)  				{  					threadRec.thread.Interrupt();  				}  			}
Magic Number,MSR.CVE.BackMaker,DegreesMinutesSeconds,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DegreesMinutesSeconds.cs,ParseLatLon,The following statement contains a magic number: if (match.Success)  			{  				double num = (match.Groups["Sign"].Length > 0) ? -1.0 : 1.0;  				double num2 = Convert.ToDouble(match.Groups["Degrees"].Value);  				double num3 = 0.0;  				double num4 = 0.0;  				try  				{  					num3 = Convert.ToDouble(match.Groups["Minutes"].Value);  					try  					{  						num4 = Convert.ToDouble(match.Groups["Seconds"].Value);  					}  					catch  					{  					}  				}  				catch  				{  				}  				return num * (num2 + num3 * 0.016666666666666666 + num4 * 0.00027777777777777778);  			}
Magic Number,MSR.CVE.BackMaker,DegreesMinutesSeconds,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DegreesMinutesSeconds.cs,ParseLatLon,The following statement contains a magic number: if (match.Success)  			{  				double num = (match.Groups["Sign"].Length > 0) ? -1.0 : 1.0;  				double num2 = Convert.ToDouble(match.Groups["Degrees"].Value);  				double num3 = 0.0;  				double num4 = 0.0;  				try  				{  					num3 = Convert.ToDouble(match.Groups["Minutes"].Value);  					try  					{  						num4 = Convert.ToDouble(match.Groups["Seconds"].Value);  					}  					catch  					{  					}  				}  				catch  				{  				}  				return num * (num2 + num3 * 0.016666666666666666 + num4 * 0.00027777777777777778);  			}
Magic Number,MSR.CVE.BackMaker,DegreesMinutesSeconds,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DegreesMinutesSeconds.cs,FormatLatLon,The following statement contains a magic number: if (this.outputMode == DegreesMinutesSeconds.OutputMode.DMS)  			{  				int num = 1;  				double num2 = value;  				if (value < 0.0)  				{  					num = -1;  					num2 = -value;  				}  				int num3 = (int)num2;  				double num4 = num2 - (double)num3;  				int num5 = (int)(num4 * 60.0);  				double num6 = num4 * 60.0 - (double)num5;  				double num7 = num6 * 60.0;  				result = string.Format("{0:###}° {1}' {2:##.000}\""' num3 * num' num5' num7);  			}  			else  			{  				if (this.outputMode == DegreesMinutesSeconds.OutputMode.DecimalDegrees)  				{  					result = string.Format("{0:###.00000000}"' value);  				}  				else  				{  					D.Assert(false' "Invalid enum value.");  					result = null;  				}  			}
Magic Number,MSR.CVE.BackMaker,DegreesMinutesSeconds,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DegreesMinutesSeconds.cs,FormatLatLon,The following statement contains a magic number: if (this.outputMode == DegreesMinutesSeconds.OutputMode.DMS)  			{  				int num = 1;  				double num2 = value;  				if (value < 0.0)  				{  					num = -1;  					num2 = -value;  				}  				int num3 = (int)num2;  				double num4 = num2 - (double)num3;  				int num5 = (int)(num4 * 60.0);  				double num6 = num4 * 60.0 - (double)num5;  				double num7 = num6 * 60.0;  				result = string.Format("{0:###}° {1}' {2:##.000}\""' num3 * num' num5' num7);  			}  			else  			{  				if (this.outputMode == DegreesMinutesSeconds.OutputMode.DecimalDegrees)  				{  					result = string.Format("{0:###.00000000}"' value);  				}  				else  				{  					D.Assert(false' "Invalid enum value.");  					result = null;  				}  			}
Magic Number,MSR.CVE.BackMaker,DegreesMinutesSeconds,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DegreesMinutesSeconds.cs,FormatLatLon,The following statement contains a magic number: if (this.outputMode == DegreesMinutesSeconds.OutputMode.DMS)  			{  				int num = 1;  				double num2 = value;  				if (value < 0.0)  				{  					num = -1;  					num2 = -value;  				}  				int num3 = (int)num2;  				double num4 = num2 - (double)num3;  				int num5 = (int)(num4 * 60.0);  				double num6 = num4 * 60.0 - (double)num5;  				double num7 = num6 * 60.0;  				result = string.Format("{0:###}° {1}' {2:##.000}\""' num3 * num' num5' num7);  			}  			else  			{  				if (this.outputMode == DegreesMinutesSeconds.OutputMode.DecimalDegrees)  				{  					result = string.Format("{0:###.00000000}"' value);  				}  				else  				{  					D.Assert(false' "Invalid enum value.");  					result = null;  				}  			}
Magic Number,MSR.CVE.BackMaker,DownhillInverterPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DownhillInverterPointTransformer.cs,getTransformedPoint,The following statement contains a magic number: for (int i = 0; i < 200; i++)  			{  				PointD[] array = new PointD[]  				{  					pointD'  					new PointD(pointD.x + num' pointD.y)'  					new PointD(pointD.x - num' pointD.y)'  					new PointD(pointD.x' pointD.y + num)'  					new PointD(pointD.x' pointD.y - num)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y - num * 0.707106781186547)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y - num * 0.707106781186547)  				};  				PointD[] array2 = Array.ConvertAll<PointD' PointD>(array' delegate(PointD p1)  				{  					PointD pointD2 = new PointD();  					this.destToSourceWarp.doTransform(p1' pointD2);  					return pointD2;  				});  				double[] array3 = new double[9];  				for (int j = 0; j < 9; j++)  				{  					array3[j] = (array2[j] - goal).Length();  				}  				int num2 = 0;  				for (int k = 1; k < 9; k++)  				{  					if (array3[k] < array3[num2])  					{  						num2 = k;  					}  				}  				double num3 = (array2[1] - array2[0]).Length();  				if (debug)  				{  					D.Say(0' string.Format("guess[{0:G19}] = {1} [{5}] source={6} dist = {2} radius={3} spread={4}"' new object[]  					{  						num2'  						pointD'  						array3[num2]'  						num'  						num3'  						num2'  						array2[num2]  					}));  				}  				double num4 = num * array3[num2] / num3;  				pointD = array[num2];  				double arg_25C_0 = array3[num2];  				if (num3 == 0.0 || (num4 >= num && num2 == 0))  				{  					D.Say(6' string.Format("Convergence iters: {0}"' i));  					return pointD;  				}  				num = num4;  			}
Magic Number,MSR.CVE.BackMaker,DownhillInverterPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DownhillInverterPointTransformer.cs,getTransformedPoint,The following statement contains a magic number: for (int i = 0; i < 200; i++)  			{  				PointD[] array = new PointD[]  				{  					pointD'  					new PointD(pointD.x + num' pointD.y)'  					new PointD(pointD.x - num' pointD.y)'  					new PointD(pointD.x' pointD.y + num)'  					new PointD(pointD.x' pointD.y - num)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y - num * 0.707106781186547)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y - num * 0.707106781186547)  				};  				PointD[] array2 = Array.ConvertAll<PointD' PointD>(array' delegate(PointD p1)  				{  					PointD pointD2 = new PointD();  					this.destToSourceWarp.doTransform(p1' pointD2);  					return pointD2;  				});  				double[] array3 = new double[9];  				for (int j = 0; j < 9; j++)  				{  					array3[j] = (array2[j] - goal).Length();  				}  				int num2 = 0;  				for (int k = 1; k < 9; k++)  				{  					if (array3[k] < array3[num2])  					{  						num2 = k;  					}  				}  				double num3 = (array2[1] - array2[0]).Length();  				if (debug)  				{  					D.Say(0' string.Format("guess[{0:G19}] = {1} [{5}] source={6} dist = {2} radius={3} spread={4}"' new object[]  					{  						num2'  						pointD'  						array3[num2]'  						num'  						num3'  						num2'  						array2[num2]  					}));  				}  				double num4 = num * array3[num2] / num3;  				pointD = array[num2];  				double arg_25C_0 = array3[num2];  				if (num3 == 0.0 || (num4 >= num && num2 == 0))  				{  					D.Say(6' string.Format("Convergence iters: {0}"' i));  					return pointD;  				}  				num = num4;  			}
Magic Number,MSR.CVE.BackMaker,DownhillInverterPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DownhillInverterPointTransformer.cs,getTransformedPoint,The following statement contains a magic number: for (int i = 0; i < 200; i++)  			{  				PointD[] array = new PointD[]  				{  					pointD'  					new PointD(pointD.x + num' pointD.y)'  					new PointD(pointD.x - num' pointD.y)'  					new PointD(pointD.x' pointD.y + num)'  					new PointD(pointD.x' pointD.y - num)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y - num * 0.707106781186547)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y - num * 0.707106781186547)  				};  				PointD[] array2 = Array.ConvertAll<PointD' PointD>(array' delegate(PointD p1)  				{  					PointD pointD2 = new PointD();  					this.destToSourceWarp.doTransform(p1' pointD2);  					return pointD2;  				});  				double[] array3 = new double[9];  				for (int j = 0; j < 9; j++)  				{  					array3[j] = (array2[j] - goal).Length();  				}  				int num2 = 0;  				for (int k = 1; k < 9; k++)  				{  					if (array3[k] < array3[num2])  					{  						num2 = k;  					}  				}  				double num3 = (array2[1] - array2[0]).Length();  				if (debug)  				{  					D.Say(0' string.Format("guess[{0:G19}] = {1} [{5}] source={6} dist = {2} radius={3} spread={4}"' new object[]  					{  						num2'  						pointD'  						array3[num2]'  						num'  						num3'  						num2'  						array2[num2]  					}));  				}  				double num4 = num * array3[num2] / num3;  				pointD = array[num2];  				double arg_25C_0 = array3[num2];  				if (num3 == 0.0 || (num4 >= num && num2 == 0))  				{  					D.Say(6' string.Format("Convergence iters: {0}"' i));  					return pointD;  				}  				num = num4;  			}
Magic Number,MSR.CVE.BackMaker,DownhillInverterPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DownhillInverterPointTransformer.cs,getTransformedPoint,The following statement contains a magic number: for (int i = 0; i < 200; i++)  			{  				PointD[] array = new PointD[]  				{  					pointD'  					new PointD(pointD.x + num' pointD.y)'  					new PointD(pointD.x - num' pointD.y)'  					new PointD(pointD.x' pointD.y + num)'  					new PointD(pointD.x' pointD.y - num)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y - num * 0.707106781186547)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y - num * 0.707106781186547)  				};  				PointD[] array2 = Array.ConvertAll<PointD' PointD>(array' delegate(PointD p1)  				{  					PointD pointD2 = new PointD();  					this.destToSourceWarp.doTransform(p1' pointD2);  					return pointD2;  				});  				double[] array3 = new double[9];  				for (int j = 0; j < 9; j++)  				{  					array3[j] = (array2[j] - goal).Length();  				}  				int num2 = 0;  				for (int k = 1; k < 9; k++)  				{  					if (array3[k] < array3[num2])  					{  						num2 = k;  					}  				}  				double num3 = (array2[1] - array2[0]).Length();  				if (debug)  				{  					D.Say(0' string.Format("guess[{0:G19}] = {1} [{5}] source={6} dist = {2} radius={3} spread={4}"' new object[]  					{  						num2'  						pointD'  						array3[num2]'  						num'  						num3'  						num2'  						array2[num2]  					}));  				}  				double num4 = num * array3[num2] / num3;  				pointD = array[num2];  				double arg_25C_0 = array3[num2];  				if (num3 == 0.0 || (num4 >= num && num2 == 0))  				{  					D.Say(6' string.Format("Convergence iters: {0}"' i));  					return pointD;  				}  				num = num4;  			}
Magic Number,MSR.CVE.BackMaker,DownhillInverterPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DownhillInverterPointTransformer.cs,getTransformedPoint,The following statement contains a magic number: for (int i = 0; i < 200; i++)  			{  				PointD[] array = new PointD[]  				{  					pointD'  					new PointD(pointD.x + num' pointD.y)'  					new PointD(pointD.x - num' pointD.y)'  					new PointD(pointD.x' pointD.y + num)'  					new PointD(pointD.x' pointD.y - num)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y - num * 0.707106781186547)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y - num * 0.707106781186547)  				};  				PointD[] array2 = Array.ConvertAll<PointD' PointD>(array' delegate(PointD p1)  				{  					PointD pointD2 = new PointD();  					this.destToSourceWarp.doTransform(p1' pointD2);  					return pointD2;  				});  				double[] array3 = new double[9];  				for (int j = 0; j < 9; j++)  				{  					array3[j] = (array2[j] - goal).Length();  				}  				int num2 = 0;  				for (int k = 1; k < 9; k++)  				{  					if (array3[k] < array3[num2])  					{  						num2 = k;  					}  				}  				double num3 = (array2[1] - array2[0]).Length();  				if (debug)  				{  					D.Say(0' string.Format("guess[{0:G19}] = {1} [{5}] source={6} dist = {2} radius={3} spread={4}"' new object[]  					{  						num2'  						pointD'  						array3[num2]'  						num'  						num3'  						num2'  						array2[num2]  					}));  				}  				double num4 = num * array3[num2] / num3;  				pointD = array[num2];  				double arg_25C_0 = array3[num2];  				if (num3 == 0.0 || (num4 >= num && num2 == 0))  				{  					D.Say(6' string.Format("Convergence iters: {0}"' i));  					return pointD;  				}  				num = num4;  			}
Magic Number,MSR.CVE.BackMaker,DownhillInverterPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DownhillInverterPointTransformer.cs,getTransformedPoint,The following statement contains a magic number: for (int i = 0; i < 200; i++)  			{  				PointD[] array = new PointD[]  				{  					pointD'  					new PointD(pointD.x + num' pointD.y)'  					new PointD(pointD.x - num' pointD.y)'  					new PointD(pointD.x' pointD.y + num)'  					new PointD(pointD.x' pointD.y - num)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y - num * 0.707106781186547)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y - num * 0.707106781186547)  				};  				PointD[] array2 = Array.ConvertAll<PointD' PointD>(array' delegate(PointD p1)  				{  					PointD pointD2 = new PointD();  					this.destToSourceWarp.doTransform(p1' pointD2);  					return pointD2;  				});  				double[] array3 = new double[9];  				for (int j = 0; j < 9; j++)  				{  					array3[j] = (array2[j] - goal).Length();  				}  				int num2 = 0;  				for (int k = 1; k < 9; k++)  				{  					if (array3[k] < array3[num2])  					{  						num2 = k;  					}  				}  				double num3 = (array2[1] - array2[0]).Length();  				if (debug)  				{  					D.Say(0' string.Format("guess[{0:G19}] = {1} [{5}] source={6} dist = {2} radius={3} spread={4}"' new object[]  					{  						num2'  						pointD'  						array3[num2]'  						num'  						num3'  						num2'  						array2[num2]  					}));  				}  				double num4 = num * array3[num2] / num3;  				pointD = array[num2];  				double arg_25C_0 = array3[num2];  				if (num3 == 0.0 || (num4 >= num && num2 == 0))  				{  					D.Say(6' string.Format("Convergence iters: {0}"' i));  					return pointD;  				}  				num = num4;  			}
Magic Number,MSR.CVE.BackMaker,DownhillInverterPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DownhillInverterPointTransformer.cs,getTransformedPoint,The following statement contains a magic number: for (int i = 0; i < 200; i++)  			{  				PointD[] array = new PointD[]  				{  					pointD'  					new PointD(pointD.x + num' pointD.y)'  					new PointD(pointD.x - num' pointD.y)'  					new PointD(pointD.x' pointD.y + num)'  					new PointD(pointD.x' pointD.y - num)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y - num * 0.707106781186547)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y - num * 0.707106781186547)  				};  				PointD[] array2 = Array.ConvertAll<PointD' PointD>(array' delegate(PointD p1)  				{  					PointD pointD2 = new PointD();  					this.destToSourceWarp.doTransform(p1' pointD2);  					return pointD2;  				});  				double[] array3 = new double[9];  				for (int j = 0; j < 9; j++)  				{  					array3[j] = (array2[j] - goal).Length();  				}  				int num2 = 0;  				for (int k = 1; k < 9; k++)  				{  					if (array3[k] < array3[num2])  					{  						num2 = k;  					}  				}  				double num3 = (array2[1] - array2[0]).Length();  				if (debug)  				{  					D.Say(0' string.Format("guess[{0:G19}] = {1} [{5}] source={6} dist = {2} radius={3} spread={4}"' new object[]  					{  						num2'  						pointD'  						array3[num2]'  						num'  						num3'  						num2'  						array2[num2]  					}));  				}  				double num4 = num * array3[num2] / num3;  				pointD = array[num2];  				double arg_25C_0 = array3[num2];  				if (num3 == 0.0 || (num4 >= num && num2 == 0))  				{  					D.Say(6' string.Format("Convergence iters: {0}"' i));  					return pointD;  				}  				num = num4;  			}
Magic Number,MSR.CVE.BackMaker,DownhillInverterPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DownhillInverterPointTransformer.cs,getTransformedPoint,The following statement contains a magic number: for (int i = 0; i < 200; i++)  			{  				PointD[] array = new PointD[]  				{  					pointD'  					new PointD(pointD.x + num' pointD.y)'  					new PointD(pointD.x - num' pointD.y)'  					new PointD(pointD.x' pointD.y + num)'  					new PointD(pointD.x' pointD.y - num)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y - num * 0.707106781186547)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y - num * 0.707106781186547)  				};  				PointD[] array2 = Array.ConvertAll<PointD' PointD>(array' delegate(PointD p1)  				{  					PointD pointD2 = new PointD();  					this.destToSourceWarp.doTransform(p1' pointD2);  					return pointD2;  				});  				double[] array3 = new double[9];  				for (int j = 0; j < 9; j++)  				{  					array3[j] = (array2[j] - goal).Length();  				}  				int num2 = 0;  				for (int k = 1; k < 9; k++)  				{  					if (array3[k] < array3[num2])  					{  						num2 = k;  					}  				}  				double num3 = (array2[1] - array2[0]).Length();  				if (debug)  				{  					D.Say(0' string.Format("guess[{0:G19}] = {1} [{5}] source={6} dist = {2} radius={3} spread={4}"' new object[]  					{  						num2'  						pointD'  						array3[num2]'  						num'  						num3'  						num2'  						array2[num2]  					}));  				}  				double num4 = num * array3[num2] / num3;  				pointD = array[num2];  				double arg_25C_0 = array3[num2];  				if (num3 == 0.0 || (num4 >= num && num2 == 0))  				{  					D.Say(6' string.Format("Convergence iters: {0}"' i));  					return pointD;  				}  				num = num4;  			}
Magic Number,MSR.CVE.BackMaker,DownhillInverterPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DownhillInverterPointTransformer.cs,getTransformedPoint,The following statement contains a magic number: for (int i = 0; i < 200; i++)  			{  				PointD[] array = new PointD[]  				{  					pointD'  					new PointD(pointD.x + num' pointD.y)'  					new PointD(pointD.x - num' pointD.y)'  					new PointD(pointD.x' pointD.y + num)'  					new PointD(pointD.x' pointD.y - num)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y - num * 0.707106781186547)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y - num * 0.707106781186547)  				};  				PointD[] array2 = Array.ConvertAll<PointD' PointD>(array' delegate(PointD p1)  				{  					PointD pointD2 = new PointD();  					this.destToSourceWarp.doTransform(p1' pointD2);  					return pointD2;  				});  				double[] array3 = new double[9];  				for (int j = 0; j < 9; j++)  				{  					array3[j] = (array2[j] - goal).Length();  				}  				int num2 = 0;  				for (int k = 1; k < 9; k++)  				{  					if (array3[k] < array3[num2])  					{  						num2 = k;  					}  				}  				double num3 = (array2[1] - array2[0]).Length();  				if (debug)  				{  					D.Say(0' string.Format("guess[{0:G19}] = {1} [{5}] source={6} dist = {2} radius={3} spread={4}"' new object[]  					{  						num2'  						pointD'  						array3[num2]'  						num'  						num3'  						num2'  						array2[num2]  					}));  				}  				double num4 = num * array3[num2] / num3;  				pointD = array[num2];  				double arg_25C_0 = array3[num2];  				if (num3 == 0.0 || (num4 >= num && num2 == 0))  				{  					D.Say(6' string.Format("Convergence iters: {0}"' i));  					return pointD;  				}  				num = num4;  			}
Magic Number,MSR.CVE.BackMaker,DownhillInverterPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DownhillInverterPointTransformer.cs,getTransformedPoint,The following statement contains a magic number: for (int i = 0; i < 200; i++)  			{  				PointD[] array = new PointD[]  				{  					pointD'  					new PointD(pointD.x + num' pointD.y)'  					new PointD(pointD.x - num' pointD.y)'  					new PointD(pointD.x' pointD.y + num)'  					new PointD(pointD.x' pointD.y - num)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y - num * 0.707106781186547)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y - num * 0.707106781186547)  				};  				PointD[] array2 = Array.ConvertAll<PointD' PointD>(array' delegate(PointD p1)  				{  					PointD pointD2 = new PointD();  					this.destToSourceWarp.doTransform(p1' pointD2);  					return pointD2;  				});  				double[] array3 = new double[9];  				for (int j = 0; j < 9; j++)  				{  					array3[j] = (array2[j] - goal).Length();  				}  				int num2 = 0;  				for (int k = 1; k < 9; k++)  				{  					if (array3[k] < array3[num2])  					{  						num2 = k;  					}  				}  				double num3 = (array2[1] - array2[0]).Length();  				if (debug)  				{  					D.Say(0' string.Format("guess[{0:G19}] = {1} [{5}] source={6} dist = {2} radius={3} spread={4}"' new object[]  					{  						num2'  						pointD'  						array3[num2]'  						num'  						num3'  						num2'  						array2[num2]  					}));  				}  				double num4 = num * array3[num2] / num3;  				pointD = array[num2];  				double arg_25C_0 = array3[num2];  				if (num3 == 0.0 || (num4 >= num && num2 == 0))  				{  					D.Say(6' string.Format("Convergence iters: {0}"' i));  					return pointD;  				}  				num = num4;  			}
Magic Number,MSR.CVE.BackMaker,DownhillInverterPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DownhillInverterPointTransformer.cs,getTransformedPoint,The following statement contains a magic number: for (int i = 0; i < 200; i++)  			{  				PointD[] array = new PointD[]  				{  					pointD'  					new PointD(pointD.x + num' pointD.y)'  					new PointD(pointD.x - num' pointD.y)'  					new PointD(pointD.x' pointD.y + num)'  					new PointD(pointD.x' pointD.y - num)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y - num * 0.707106781186547)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y - num * 0.707106781186547)  				};  				PointD[] array2 = Array.ConvertAll<PointD' PointD>(array' delegate(PointD p1)  				{  					PointD pointD2 = new PointD();  					this.destToSourceWarp.doTransform(p1' pointD2);  					return pointD2;  				});  				double[] array3 = new double[9];  				for (int j = 0; j < 9; j++)  				{  					array3[j] = (array2[j] - goal).Length();  				}  				int num2 = 0;  				for (int k = 1; k < 9; k++)  				{  					if (array3[k] < array3[num2])  					{  						num2 = k;  					}  				}  				double num3 = (array2[1] - array2[0]).Length();  				if (debug)  				{  					D.Say(0' string.Format("guess[{0:G19}] = {1} [{5}] source={6} dist = {2} radius={3} spread={4}"' new object[]  					{  						num2'  						pointD'  						array3[num2]'  						num'  						num3'  						num2'  						array2[num2]  					}));  				}  				double num4 = num * array3[num2] / num3;  				pointD = array[num2];  				double arg_25C_0 = array3[num2];  				if (num3 == 0.0 || (num4 >= num && num2 == 0))  				{  					D.Say(6' string.Format("Convergence iters: {0}"' i));  					return pointD;  				}  				num = num4;  			}
Magic Number,MSR.CVE.BackMaker,DownhillInverterPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DownhillInverterPointTransformer.cs,getTransformedPoint,The following statement contains a magic number: for (int i = 0; i < 200; i++)  			{  				PointD[] array = new PointD[]  				{  					pointD'  					new PointD(pointD.x + num' pointD.y)'  					new PointD(pointD.x - num' pointD.y)'  					new PointD(pointD.x' pointD.y + num)'  					new PointD(pointD.x' pointD.y - num)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y - num * 0.707106781186547)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y - num * 0.707106781186547)  				};  				PointD[] array2 = Array.ConvertAll<PointD' PointD>(array' delegate(PointD p1)  				{  					PointD pointD2 = new PointD();  					this.destToSourceWarp.doTransform(p1' pointD2);  					return pointD2;  				});  				double[] array3 = new double[9];  				for (int j = 0; j < 9; j++)  				{  					array3[j] = (array2[j] - goal).Length();  				}  				int num2 = 0;  				for (int k = 1; k < 9; k++)  				{  					if (array3[k] < array3[num2])  					{  						num2 = k;  					}  				}  				double num3 = (array2[1] - array2[0]).Length();  				if (debug)  				{  					D.Say(0' string.Format("guess[{0:G19}] = {1} [{5}] source={6} dist = {2} radius={3} spread={4}"' new object[]  					{  						num2'  						pointD'  						array3[num2]'  						num'  						num3'  						num2'  						array2[num2]  					}));  				}  				double num4 = num * array3[num2] / num3;  				pointD = array[num2];  				double arg_25C_0 = array3[num2];  				if (num3 == 0.0 || (num4 >= num && num2 == 0))  				{  					D.Say(6' string.Format("Convergence iters: {0}"' i));  					return pointD;  				}  				num = num4;  			}
Magic Number,MSR.CVE.BackMaker,DownhillInverterPointTransformer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DownhillInverterPointTransformer.cs,getTransformedPoint,The following statement contains a magic number: for (int i = 0; i < 200; i++)  			{  				PointD[] array = new PointD[]  				{  					pointD'  					new PointD(pointD.x + num' pointD.y)'  					new PointD(pointD.x - num' pointD.y)'  					new PointD(pointD.x' pointD.y + num)'  					new PointD(pointD.x' pointD.y - num)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y + num * 0.707106781186547)'  					new PointD(pointD.x - num * 0.707106781186547' pointD.y - num * 0.707106781186547)'  					new PointD(pointD.x + num * 0.707106781186547' pointD.y - num * 0.707106781186547)  				};  				PointD[] array2 = Array.ConvertAll<PointD' PointD>(array' delegate(PointD p1)  				{  					PointD pointD2 = new PointD();  					this.destToSourceWarp.doTransform(p1' pointD2);  					return pointD2;  				});  				double[] array3 = new double[9];  				for (int j = 0; j < 9; j++)  				{  					array3[j] = (array2[j] - goal).Length();  				}  				int num2 = 0;  				for (int k = 1; k < 9; k++)  				{  					if (array3[k] < array3[num2])  					{  						num2 = k;  					}  				}  				double num3 = (array2[1] - array2[0]).Length();  				if (debug)  				{  					D.Say(0' string.Format("guess[{0:G19}] = {1} [{5}] source={6} dist = {2} radius={3} spread={4}"' new object[]  					{  						num2'  						pointD'  						array3[num2]'  						num'  						num3'  						num2'  						array2[num2]  					}));  				}  				double num4 = num * array3[num2] / num3;  				pointD = array[num2];  				double arg_25C_0 = array3[num2];  				if (num3 == 0.0 || (num4 >= num && num2 == 0))  				{  					D.Say(6' string.Format("Convergence iters: {0}"' i));  					return pointD;  				}  				num = num4;  			}
Magic Number,MSR.CVE.BackMaker,DynamicallyCompositingLayerViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DynamicallyCompositingLayerViewManager.cs,Activate,The following statement contains a magic number: if (mapRectangle != null)  			{  				Size size = new Size(600' 600);  				position = this.viewControl.GetVEViewerControl().GetCoordinateSystem().GetBestViewContaining(mapRectangle' size);  			}  			else  			{  				position = this.viewControl.GetVEViewerControl().GetCoordinateSystem().GetDefaultView();  			}
Magic Number,MSR.CVE.BackMaker,DynamicallyCompositingLayerViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\DynamicallyCompositingLayerViewManager.cs,Activate,The following statement contains a magic number: if (mapRectangle != null)  			{  				Size size = new Size(600' 600);  				position = this.viewControl.GetVEViewerControl().GetCoordinateSystem().GetBestViewContaining(mapRectangle' size);  			}  			else  			{  				position = this.viewControl.GetVEViewerControl().GetCoordinateSystem().GetDefaultView();  			}
Magic Number,MSR.CVE.BackMaker,FoxitViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FoxitViewer.cs,Render,The following statement contains a magic number: int alpha = transparentBackground ? 0 : 255;
Magic Number,MSR.CVE.BackMaker,FoxitViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FoxitViewer.cs,Render,The following statement contains a magic number: try  			{  				int bitmap = this.foxitLib.Bitmap_Create(outSize.Width' outSize.Height' 1);  				this.foxitLib.Bitmap_FillRect(bitmap' 0' 0' outSize.Width' outSize.Height' 255' 255' 255' alpha);  				this.foxitLib.RenderPageBitmap(bitmap' this.pageHandle' topleft.X' topleft.Y' pagesize.Width' pagesize.Height' 0' 0);  				IntPtr scan = this.foxitLib.Bitmap_GetBuffer(bitmap);  				Bitmap bitmap2 = new Bitmap(outSize.Width' outSize.Height' outSize.Width * 4' PixelFormat.Format32bppArgb' scan);  				this.foxitLib.Bitmap_Destroy(bitmap);  				GDIBigLockedImage gDIBigLockedImage = new GDIBigLockedImage(bitmap2);  				result = gDIBigLockedImage;  			}  			finally  			{  				Monitor.Exit(foxitMutex);  			}
Magic Number,MSR.CVE.BackMaker,FoxitViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FoxitViewer.cs,Render,The following statement contains a magic number: try  			{  				int bitmap = this.foxitLib.Bitmap_Create(outSize.Width' outSize.Height' 1);  				this.foxitLib.Bitmap_FillRect(bitmap' 0' 0' outSize.Width' outSize.Height' 255' 255' 255' alpha);  				this.foxitLib.RenderPageBitmap(bitmap' this.pageHandle' topleft.X' topleft.Y' pagesize.Width' pagesize.Height' 0' 0);  				IntPtr scan = this.foxitLib.Bitmap_GetBuffer(bitmap);  				Bitmap bitmap2 = new Bitmap(outSize.Width' outSize.Height' outSize.Width * 4' PixelFormat.Format32bppArgb' scan);  				this.foxitLib.Bitmap_Destroy(bitmap);  				GDIBigLockedImage gDIBigLockedImage = new GDIBigLockedImage(bitmap2);  				result = gDIBigLockedImage;  			}  			finally  			{  				Monitor.Exit(foxitMutex);  			}
Magic Number,MSR.CVE.BackMaker,FoxitViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FoxitViewer.cs,Render,The following statement contains a magic number: try  			{  				int bitmap = this.foxitLib.Bitmap_Create(outSize.Width' outSize.Height' 1);  				this.foxitLib.Bitmap_FillRect(bitmap' 0' 0' outSize.Width' outSize.Height' 255' 255' 255' alpha);  				this.foxitLib.RenderPageBitmap(bitmap' this.pageHandle' topleft.X' topleft.Y' pagesize.Width' pagesize.Height' 0' 0);  				IntPtr scan = this.foxitLib.Bitmap_GetBuffer(bitmap);  				Bitmap bitmap2 = new Bitmap(outSize.Width' outSize.Height' outSize.Width * 4' PixelFormat.Format32bppArgb' scan);  				this.foxitLib.Bitmap_Destroy(bitmap);  				GDIBigLockedImage gDIBigLockedImage = new GDIBigLockedImage(bitmap2);  				result = gDIBigLockedImage;  			}  			finally  			{  				Monitor.Exit(foxitMutex);  			}
Magic Number,MSR.CVE.BackMaker,FoxitViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FoxitViewer.cs,Render,The following statement contains a magic number: try  			{  				int bitmap = this.foxitLib.Bitmap_Create(outSize.Width' outSize.Height' 1);  				this.foxitLib.Bitmap_FillRect(bitmap' 0' 0' outSize.Width' outSize.Height' 255' 255' 255' alpha);  				this.foxitLib.RenderPageBitmap(bitmap' this.pageHandle' topleft.X' topleft.Y' pagesize.Width' pagesize.Height' 0' 0);  				IntPtr scan = this.foxitLib.Bitmap_GetBuffer(bitmap);  				Bitmap bitmap2 = new Bitmap(outSize.Width' outSize.Height' outSize.Width * 4' PixelFormat.Format32bppArgb' scan);  				this.foxitLib.Bitmap_Destroy(bitmap);  				GDIBigLockedImage gDIBigLockedImage = new GDIBigLockedImage(bitmap2);  				result = gDIBigLockedImage;  			}  			finally  			{  				Monitor.Exit(foxitMutex);  			}
Magic Number,MSR.CVE.BackMaker,FoxitViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FoxitViewer.cs,RenderBytes,The following statement contains a magic number: int alpha = transparentBackground ? 0 : 255;
Magic Number,MSR.CVE.BackMaker,FoxitViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FoxitViewer.cs,RenderBytes,The following statement contains a magic number: try  			{  				int bitmap = this.foxitLib.Bitmap_Create(outSize.Width' outSize.Height' 1);  				this.foxitLib.Bitmap_FillRect(bitmap' 0' 0' outSize.Width' outSize.Height' 255' 255' 255' alpha);  				this.foxitLib.RenderPageBitmap(bitmap' this.pageHandle' topleft.X' topleft.Y' pagesize.Width' pagesize.Height' 0' 0);  				IntPtr source = this.foxitLib.Bitmap_GetBuffer(bitmap);  				int num = outSize.Width * 4;  				byte[] array = new byte[outSize.Height * num];  				Marshal.Copy(source' array' 0' array.Length);  				this.foxitLib.Bitmap_Destroy(bitmap);  				result = new RenderReply(array' outSize.Width * 4);  			}  			finally  			{  				Monitor.Exit(foxitMutex);  			}
Magic Number,MSR.CVE.BackMaker,FoxitViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FoxitViewer.cs,RenderBytes,The following statement contains a magic number: try  			{  				int bitmap = this.foxitLib.Bitmap_Create(outSize.Width' outSize.Height' 1);  				this.foxitLib.Bitmap_FillRect(bitmap' 0' 0' outSize.Width' outSize.Height' 255' 255' 255' alpha);  				this.foxitLib.RenderPageBitmap(bitmap' this.pageHandle' topleft.X' topleft.Y' pagesize.Width' pagesize.Height' 0' 0);  				IntPtr source = this.foxitLib.Bitmap_GetBuffer(bitmap);  				int num = outSize.Width * 4;  				byte[] array = new byte[outSize.Height * num];  				Marshal.Copy(source' array' 0' array.Length);  				this.foxitLib.Bitmap_Destroy(bitmap);  				result = new RenderReply(array' outSize.Width * 4);  			}  			finally  			{  				Monitor.Exit(foxitMutex);  			}
Magic Number,MSR.CVE.BackMaker,FoxitViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FoxitViewer.cs,RenderBytes,The following statement contains a magic number: try  			{  				int bitmap = this.foxitLib.Bitmap_Create(outSize.Width' outSize.Height' 1);  				this.foxitLib.Bitmap_FillRect(bitmap' 0' 0' outSize.Width' outSize.Height' 255' 255' 255' alpha);  				this.foxitLib.RenderPageBitmap(bitmap' this.pageHandle' topleft.X' topleft.Y' pagesize.Width' pagesize.Height' 0' 0);  				IntPtr source = this.foxitLib.Bitmap_GetBuffer(bitmap);  				int num = outSize.Width * 4;  				byte[] array = new byte[outSize.Height * num];  				Marshal.Copy(source' array' 0' array.Length);  				this.foxitLib.Bitmap_Destroy(bitmap);  				result = new RenderReply(array' outSize.Width * 4);  			}  			finally  			{  				Monitor.Exit(foxitMutex);  			}
Magic Number,MSR.CVE.BackMaker,FoxitViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FoxitViewer.cs,RenderBytes,The following statement contains a magic number: try  			{  				int bitmap = this.foxitLib.Bitmap_Create(outSize.Width' outSize.Height' 1);  				this.foxitLib.Bitmap_FillRect(bitmap' 0' 0' outSize.Width' outSize.Height' 255' 255' 255' alpha);  				this.foxitLib.RenderPageBitmap(bitmap' this.pageHandle' topleft.X' topleft.Y' pagesize.Width' pagesize.Height' 0' 0);  				IntPtr source = this.foxitLib.Bitmap_GetBuffer(bitmap);  				int num = outSize.Width * 4;  				byte[] array = new byte[outSize.Height * num];  				Marshal.Copy(source' array' 0' array.Length);  				this.foxitLib.Bitmap_Destroy(bitmap);  				result = new RenderReply(array' outSize.Width * 4);  			}  			finally  			{  				Monitor.Exit(foxitMutex);  			}
Magic Number,MSR.CVE.BackMaker,FoxitViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FoxitViewer.cs,RenderBytes,The following statement contains a magic number: try  			{  				int bitmap = this.foxitLib.Bitmap_Create(outSize.Width' outSize.Height' 1);  				this.foxitLib.Bitmap_FillRect(bitmap' 0' 0' outSize.Width' outSize.Height' 255' 255' 255' alpha);  				this.foxitLib.RenderPageBitmap(bitmap' this.pageHandle' topleft.X' topleft.Y' pagesize.Width' pagesize.Height' 0' 0);  				IntPtr source = this.foxitLib.Bitmap_GetBuffer(bitmap);  				int num = outSize.Width * 4;  				byte[] array = new byte[outSize.Height * num];  				Marshal.Copy(source' array' 0' array.Length);  				this.foxitLib.Bitmap_Destroy(bitmap);  				result = new RenderReply(array' outSize.Width * 4);  			}  			finally  			{  				Monitor.Exit(foxitMutex);  			}
Magic Number,MSR.CVE.BackMaker,FPDFBitmapCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FPDFBitmapCache.cs,Get,The following statement contains a magic number: FPDFBitmapCache.FPDFBitmap_FillRect(this.bitmapHandle' 0' 0' this.allocatedSize.Width' this.allocatedSize.Height' 255' 255' 255' 255);
Magic Number,MSR.CVE.BackMaker,FPDFBitmapCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FPDFBitmapCache.cs,Get,The following statement contains a magic number: FPDFBitmapCache.FPDFBitmap_FillRect(this.bitmapHandle' 0' 0' this.allocatedSize.Width' this.allocatedSize.Height' 255' 255' 255' 255);
Magic Number,MSR.CVE.BackMaker,FPDFBitmapCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FPDFBitmapCache.cs,Get,The following statement contains a magic number: FPDFBitmapCache.FPDFBitmap_FillRect(this.bitmapHandle' 0' 0' this.allocatedSize.Width' this.allocatedSize.Height' 255' 255' 255' 255);
Magic Number,MSR.CVE.BackMaker,FPDFBitmapCache,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\FPDFBitmapCache.cs,Get,The following statement contains a magic number: FPDFBitmapCache.FPDFBitmap_FillRect(this.bitmapHandle' 0' 0' this.allocatedSize.Width' this.allocatedSize.Height' 255' 255' 255' 255);
Magic Number,MSR.CVE.BackMaker,GDIBigLockedImage,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\GDIBigLockedImage.cs,CrementCounter,The following statement contains a magic number: if (!GDIBigLockedImage.fineGrainedImageCounter.ContainsKey(this.sourceLabel))  			{  				GDIBigLockedImage.fineGrainedImageCounter[this.sourceLabel] = DiagnosticUI.theDiagnostics.fetchResourceCounter("GDIBLI-" + this.sourceLabel' 10);  			}
Magic Number,MSR.CVE.BackMaker,GhostscriptConfiguration,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\GhostscriptConfiguration.cs,LookInFilesystem,The following statement contains a magic number: for (int i = 0; i < directories.Length; i++)  			{  				if (directories[i].StartsWith("gs"))  				{  					directories[i] = directories[i].Substring(2);  				}  			}
Magic Number,MSR.CVE.BackMaker,HomographicTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\HomographicTransformationStyle.cs,getCorrespondencesRequired,The following statement contains a magic number: return 3;
Magic Number,MSR.CVE.BackMaker,HomographicTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\HomographicTransformationStyle.cs,getDescriptionStrings,The following statement contains a magic number: if (numCorrespondences >= 2)  			{  				list.Add("Ready to lock; add more points to increase accuracy.");  			}  			else  			{  				list.Add("Correspondences required:");  			}
Magic Number,MSR.CVE.BackMaker,HomographicTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\HomographicTransformationStyle.cs,getDescriptionStrings,The following statement contains a magic number: if (numCorrespondences < 2)  			{  				list.Add(string.Format("{0} more for rigid."' 2 - numCorrespondences));  			}
Magic Number,MSR.CVE.BackMaker,HomographicTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\HomographicTransformationStyle.cs,getDescriptionStrings,The following statement contains a magic number: if (numCorrespondences < 2)  			{  				list.Add(string.Format("{0} more for rigid."' 2 - numCorrespondences));  			}
Magic Number,MSR.CVE.BackMaker,HomographicTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\HomographicTransformationStyle.cs,getDescriptionStrings,The following statement contains a magic number: if (numCorrespondences < 3)  			{  				list.Add(string.Format("{0} or more for affine."' 3 - numCorrespondences));  			}
Magic Number,MSR.CVE.BackMaker,HomographicTransformationStyle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\HomographicTransformationStyle.cs,getDescriptionStrings,The following statement contains a magic number: if (numCorrespondences < 3)  			{  				list.Add(string.Format("{0} or more for affine."' 3 - numCorrespondences));  			}
Magic Number,MSR.CVE.BackMaker,HTMLMessageBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\HTMLMessageBox.cs,InitializeComponent,The following statement contains a magic number: this.webBrowser1.MinimumSize = new Size(20' 20);
Magic Number,MSR.CVE.BackMaker,HTMLMessageBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\HTMLMessageBox.cs,InitializeComponent,The following statement contains a magic number: this.webBrowser1.MinimumSize = new Size(20' 20);
Magic Number,MSR.CVE.BackMaker,HTMLMessageBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\HTMLMessageBox.cs,InitializeComponent,The following statement contains a magic number: this.webBrowser1.Size = new Size(339' 254);
Magic Number,MSR.CVE.BackMaker,HTMLMessageBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\HTMLMessageBox.cs,InitializeComponent,The following statement contains a magic number: this.webBrowser1.Size = new Size(339' 254);
Magic Number,MSR.CVE.BackMaker,HTMLMessageBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\HTMLMessageBox.cs,InitializeComponent,The following statement contains a magic number: this.OKButton.Location = new Point(241' 265);
Magic Number,MSR.CVE.BackMaker,HTMLMessageBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\HTMLMessageBox.cs,InitializeComponent,The following statement contains a magic number: this.OKButton.Location = new Point(241' 265);
Magic Number,MSR.CVE.BackMaker,HTMLMessageBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\HTMLMessageBox.cs,InitializeComponent,The following statement contains a magic number: this.OKButton.Size = new Size(79' 35);
Magic Number,MSR.CVE.BackMaker,HTMLMessageBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\HTMLMessageBox.cs,InitializeComponent,The following statement contains a magic number: this.OKButton.Size = new Size(79' 35);
Magic Number,MSR.CVE.BackMaker,HTMLMessageBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\HTMLMessageBox.cs,InitializeComponent,The following statement contains a magic number: base.ClientSize = new Size(339' 311);
Magic Number,MSR.CVE.BackMaker,HTMLMessageBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\HTMLMessageBox.cs,InitializeComponent,The following statement contains a magic number: base.ClientSize = new Size(339' 311);
Magic Number,MSR.CVE.BackMaker,InsaneSourceMapRemover,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\InsaneSourceMapRemover.cs,InsaneSourceMapRemover,The following statement contains a magic number: if (tryCount > 3)  			{  				return;  			}
Magic Number,MSR.CVE.BackMaker,InsaneSourceMapRemover,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\InsaneSourceMapRemover.cs,InsaneSourceMapRemover,The following statement contains a magic number: Present present = mapTileSourceFactory.CreateUnwarpedSource(sourceMap).GetImagePrototype(new ImageParameterFromTileAddress(ContinuousCoordinateSystem.theInstance)' (FutureFeatures)7).Curry(new ParamDict(new object[]  			{  				TermName.TileAddress'  				new TileAddress(0' 0' ContinuousCoordinateSystem.theInstance.GetDefaultView().zoom)  			})).Realize("SourceMap.CheckRendererSanity");
Magic Number,MSR.CVE.BackMaker,LatLon,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LatLon.cs,DistanceInMeters,The following statement contains a magic number: double d = Math.Pow(Math.Sin(num6 / 2.0)' 2.0) + Math.Cos(num2) * Math.Cos(num4) * Math.Pow(Math.Sin(num5 / 2.0)' 2.0);
Magic Number,MSR.CVE.BackMaker,LatLon,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LatLon.cs,DistanceInMeters,The following statement contains a magic number: double d = Math.Pow(Math.Sin(num6 / 2.0)' 2.0) + Math.Cos(num2) * Math.Cos(num4) * Math.Pow(Math.Sin(num5 / 2.0)' 2.0);
Magic Number,MSR.CVE.BackMaker,LatLon,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LatLon.cs,DistanceInMeters,The following statement contains a magic number: double d = Math.Pow(Math.Sin(num6 / 2.0)' 2.0) + Math.Cos(num2) * Math.Cos(num4) * Math.Pow(Math.Sin(num5 / 2.0)' 2.0);
Magic Number,MSR.CVE.BackMaker,LatLon,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LatLon.cs,DistanceInMeters,The following statement contains a magic number: double d = Math.Pow(Math.Sin(num6 / 2.0)' 2.0) + Math.Cos(num2) * Math.Cos(num4) * Math.Pow(Math.Sin(num5 / 2.0)' 2.0);
Magic Number,MSR.CVE.BackMaker,LatLon,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LatLon.cs,DistanceInMeters,The following statement contains a magic number: double num7 = 2.0 * Math.Asin(Math.Min(1.0' Math.Sqrt(d)));
Magic Number,MSR.CVE.BackMaker,LatLon,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LatLon.cs,DistanceInMeters,The following statement contains a magic number: return 6378137.0 * num7;
Magic Number,MSR.CVE.BackMaker,LatLon,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LatLon.cs,PrettyDistance,The following statement contains a magic number: if (distanceInMeters < 1.0)  			{  				return string.Format("{0:F0}cm"' distanceInMeters * 100.0);  			}
Magic Number,MSR.CVE.BackMaker,LatLon,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LatLon.cs,PrettyDistance,The following statement contains a magic number: if (distanceInMeters < 10.0)  			{  				return string.Format("{0:F1}m"' distanceInMeters);  			}
Magic Number,MSR.CVE.BackMaker,LatLon,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LatLon.cs,PrettyDistance,The following statement contains a magic number: if (distanceInMeters < 1000.0)  			{  				return string.Format("{0:F0}m"' distanceInMeters);  			}
Magic Number,MSR.CVE.BackMaker,LatLon,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LatLon.cs,PrettyDistance,The following statement contains a magic number: if (distanceInMeters < 10000.0)  			{  				return string.Format("{0:F1}km"' distanceInMeters / 1000.0);  			}
Magic Number,MSR.CVE.BackMaker,LatLon,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LatLon.cs,PrettyDistance,The following statement contains a magic number: if (distanceInMeters < 10000.0)  			{  				return string.Format("{0:F1}km"' distanceInMeters / 1000.0);  			}
Magic Number,MSR.CVE.BackMaker,LatLon,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LatLon.cs,PrettyDistance,The following statement contains a magic number: return string.Format("{0:F0}km"' distanceInMeters / 1000.0);
Magic Number,MSR.CVE.BackMaker,LatLon,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LatLon.cs,DegreesToRadians,The following statement contains a magic number: return degrees * 3.1415926535897931 / 180.0;
Magic Number,MSR.CVE.BackMaker,LatLon,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LatLon.cs,DegreesToRadians,The following statement contains a magic number: return degrees * 3.1415926535897931 / 180.0;
Magic Number,MSR.CVE.BackMaker,LatLon,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LatLon.cs,RadiansToDegrees,The following statement contains a magic number: return radians * 180.0 / 3.1415926535897931;
Magic Number,MSR.CVE.BackMaker,LatLon,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LatLon.cs,RadiansToDegrees,The following statement contains a magic number: return radians * 180.0 / 3.1415926535897931;
Magic Number,MSR.CVE.BackMaker,LatLonZoom,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LatLonZoom.cs,USA,The following statement contains a magic number: return new LatLonZoom(40.0' -96.0' 3);
Magic Number,MSR.CVE.BackMaker,LatLonZoom,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LatLonZoom.cs,USA,The following statement contains a magic number: return new LatLonZoom(40.0' -96.0' 3);
Magic Number,MSR.CVE.BackMaker,LatLonZoom,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LatLonZoom.cs,USA,The following statement contains a magic number: return new LatLonZoom(40.0' -96.0' 3);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new Size(221' 237);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new Size(221' 237);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this.gettingStartedLabel.Location = new Point(13' 23);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this.gettingStartedLabel.Location = new Point(13' 23);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this.gettingStartedLabel.Size = new Size(196' 70);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this.gettingStartedLabel.Size = new Size(196' 70);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this.gettingStartedLabel.TabIndex = 3;
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this.getStartedLabel1.Location = new Point(7' 11);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this.getStartedLabel1.Location = new Point(7' 11);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this.getStartedLabel1.Size = new Size(179' 22);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this.getStartedLabel1.Size = new Size(179' 22);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this.getStartedLabel2.Location = new Point(5' 36);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this.getStartedLabel2.Location = new Point(5' 36);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this.getStartedLabel2.Size = new Size(187' 22);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this.getStartedLabel2.Size = new Size(187' 22);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this.getStartedLabel2.TabIndex = 2;
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this._layerTreeView.Location = new Point(3' 16);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this._layerTreeView.Location = new Point(3' 16);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this._layerTreeView.Size = new Size(215' 218);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: this._layerTreeView.Size = new Size(215' 218);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(221' 237);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(221' 237);
Magic Number,MSR.CVE.BackMaker,LayerControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LayerControls.cs,PopupHandler,The following statement contains a magic number: if (this.layerTreeView.SelectedNode != null)  			{  				object tag = this.layerTreeView.SelectedNode.Tag;  				this.addLayerItem.Enabled = (tag is Layer);  				this.addSourceMapItem.Enabled = (tag is Layer);  				this.addLegendItem.Enabled = (tag is SourceMap);  				this.renameMenuItem.Enabled = true;  				if (tag is Layer)  				{  					if (this._mashup.layerList.Count < 2)  					{  						this.removeItem.Enabled = false;  						this.removeItem.Text = "Remove Layer (no other layers)";  						return;  					}  					if (((Layer)tag).Count > 0)  					{  						this.removeItem.Enabled = false;  						this.removeItem.Text = "Remove Layer (layer not empty)";  						return;  					}  					this.removeItem.Enabled = true;  					this.removeItem.Text = "Remove Layer";  					return;  				}  				else  				{  					if (tag is SourceMap)  					{  						this.removeItem.Enabled = true;  						this.removeItem.Text = "Remove Source Map";  						return;  					}  					if (tag is Legend)  					{  						this.removeItem.Enabled = true;  						this.removeItem.Text = "Remove Legend";  					}  				}  			}
Magic Number,MSR.CVE.BackMaker,LegendDisplayableSourceWrapper,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendDisplayableSourceWrapper.cs,GetImagePrototype,The following statement contains a magic number: FutureFeatures features2 = features & (FutureFeatures)(-9);
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new Point(7' 18);
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new Point(7' 18);
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new Size(75' 13);
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new Size(75' 13);
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: int[] array = new int[4];
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: array[0] = 50;
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.renderedSizeSpinner.Location = new Point(165' 16);
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.renderedSizeSpinner.Location = new Point(165' 16);
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: int[] array2 = new int[4];
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: array2[0] = 1000;
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: int[] array3 = new int[4];
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: array3[0] = 50;
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.renderedSizeSpinner.Size = new Size(73' 20);
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.renderedSizeSpinner.Size = new Size(73' 20);
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: int[] array4 = new int[4];
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: array4[0] = 50;
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.previewPanel.Location = new Point(10' 50);
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.previewPanel.Location = new Point(10' 50);
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.previewPanel.Size = new Size(228' 235);
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.previewPanel.Size = new Size(228' 235);
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.previewPanel.TabIndex = 2;
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(250' 296);
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(250' 296);
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,HandleUpdate,The following statement contains a magic number: try  			{  				if (this.previewInterest != null)  				{  					this.previewInterest.Dispose();  					this.previewInterest = null;  					this.waitingForCI = null;  				}  				if (this._legend != null)  				{  					try  					{  						IFuture renderedLegendFuture = this._legend.GetRenderedLegendFuture(this.displayableSource' (FutureFeatures)5);  						if (this.previewFuture != renderedLegendFuture)  						{  							this.previewFuture = renderedLegendFuture;  							AsyncRef asyncRef = (AsyncRef)renderedLegendFuture.Realize("LegendOptionsPanel.UpdatePreviewPanel");  							if (asyncRef.present == null)  							{  								this.waitingForCI = new LegendOptionsPanel.CallbackIgnorinator(this);  								asyncRef.AddCallback(new AsyncRecord.CompleteCallback(this.waitingForCI.Callback));  								asyncRef.SetInterest(524296);  								this.previewInterest = new InterestList();  								this.previewInterest.Add(asyncRef);  								this.previewInterest.Activate();  								this.UpdatePreviewImage(null);  							}  							else  							{  								if (asyncRef.present is ImageRef)  								{  									this.UpdatePreviewImage((ImageRef)asyncRef.present);  								}  							}  						}  					}  					catch (Legend.RenderFailedException)  					{  					}  				}  			}  			finally  			{  				Monitor.Exit(this);  			}
Magic Number,MSR.CVE.BackMaker,LegendOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LegendOptionsPanel.cs,HandleUpdate,The following statement contains a magic number: try  			{  				if (this.previewInterest != null)  				{  					this.previewInterest.Dispose();  					this.previewInterest = null;  					this.waitingForCI = null;  				}  				if (this._legend != null)  				{  					try  					{  						IFuture renderedLegendFuture = this._legend.GetRenderedLegendFuture(this.displayableSource' (FutureFeatures)5);  						if (this.previewFuture != renderedLegendFuture)  						{  							this.previewFuture = renderedLegendFuture;  							AsyncRef asyncRef = (AsyncRef)renderedLegendFuture.Realize("LegendOptionsPanel.UpdatePreviewPanel");  							if (asyncRef.present == null)  							{  								this.waitingForCI = new LegendOptionsPanel.CallbackIgnorinator(this);  								asyncRef.AddCallback(new AsyncRecord.CompleteCallback(this.waitingForCI.Callback));  								asyncRef.SetInterest(524296);  								this.previewInterest = new InterestList();  								this.previewInterest.Add(asyncRef);  								this.previewInterest.Activate();  								this.UpdatePreviewImage(null);  							}  							else  							{  								if (asyncRef.present is ImageRef)  								{  									this.UpdatePreviewImage((ImageRef)asyncRef.present);  								}  							}  						}  					}  					catch (Legend.RenderFailedException)  					{  					}  				}  			}  			finally  			{  				Monitor.Exit(this);  			}
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.groupBox.Location = new Point(3' 3);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.groupBox.Location = new Point(3' 3);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.groupBox.Size = new Size(175' 74);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.groupBox.Size = new Size(175' 74);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.groupBox.TabIndex = 10;
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.zoomLabel.Location = new Point(76' 56);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.zoomLabel.Location = new Point(76' 56);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.zoomLabel.Size = new Size(13' 13);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.zoomLabel.Size = new Size(13' 13);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.zoomLabel.TabIndex = 5;
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.zoomLabel_text.Location = new Point(7' 56);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.zoomLabel_text.Location = new Point(7' 56);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.zoomLabel_text.Size = new Size(63' 13);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.zoomLabel_text.Size = new Size(63' 13);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.zoomLabel_text.TabIndex = 2;
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.lonLabel_text.Location = new Point(7' 33);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.lonLabel_text.Location = new Point(7' 33);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.lonLabel_text.Size = new Size(54' 13);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.lonLabel_text.Size = new Size(54' 13);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.latLabel_text.Location = new Point(7' 16);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.latLabel_text.Location = new Point(7' 16);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.latLabel_text.Size = new Size(45' 13);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.latLabel_text.Size = new Size(45' 13);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.latText.Location = new Point(69' 13);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.latText.Location = new Point(69' 13);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.latText.Size = new Size(100' 20);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.latText.Size = new Size(100' 20);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.latText.TabIndex = 6;
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.lonText.Location = new Point(69' 33);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.lonText.Location = new Point(69' 33);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.lonText.Size = new Size(100' 20);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.lonText.Size = new Size(100' 20);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: this.lonText.TabIndex = 7;
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(181' 80);
Magic Number,MSR.CVE.BackMaker,LLZBox,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\LLZBox.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(181' 80);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,StartUpApplication,The following statement contains a magic number: timer.Interval = 10000;
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,LaunchedRenderComplete,The following statement contains a magic number: if (!this.alreadyExiting)              {                  MainAppForm.ExitDelegate method = new MainAppForm.ExitDelegate(this.LaunchedRenderComplete_ExitApplication);                  int num = (failure == null) ? 0 : 255;                  base.Invoke(method' new object[]  				{  					num  				});              }
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.Size = new System.Drawing.Size(1028' 36);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.Size = new System.Drawing.Size(1028' 36);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.fileToolStripMenuItem.Size = new System.Drawing.Size(54' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.fileToolStripMenuItem.Size = new System.Drawing.Size(54' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.newMashupMenuItem.Size = new System.Drawing.Size(306' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.newMashupMenuItem.Size = new System.Drawing.Size(306' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.openMashupMenuItem.Size = new System.Drawing.Size(306' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.openMashupMenuItem.Size = new System.Drawing.Size(306' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.saveMashupMenuItem.Size = new System.Drawing.Size(306' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.saveMashupMenuItem.Size = new System.Drawing.Size(306' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.saveMashupAsMenuItem.Size = new System.Drawing.Size(306' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.saveMashupAsMenuItem.Size = new System.Drawing.Size(306' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.closeMashupMenuItem.Size = new System.Drawing.Size(306' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.closeMashupMenuItem.Size = new System.Drawing.Size(306' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(303' 6);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(303' 6);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.addSourceMapMenuItem.Size = new System.Drawing.Size(306' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.addSourceMapMenuItem.Size = new System.Drawing.Size(306' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.addSourceMapFromUriMenuItem.Size = new System.Drawing.Size(306' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.addSourceMapFromUriMenuItem.Size = new System.Drawing.Size(306' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator4.Size = new System.Drawing.Size(303' 6);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator4.Size = new System.Drawing.Size(303' 6);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.viewRenderedMenuItem.Size = new System.Drawing.Size(306' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.viewRenderedMenuItem.Size = new System.Drawing.Size(306' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(303' 6);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(303' 6);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.exitToolStripMenuItem.Size = new System.Drawing.Size(306' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.exitToolStripMenuItem.Size = new System.Drawing.Size(306' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.mapOptionsToolStripMenuItem2.Size = new System.Drawing.Size(65' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.mapOptionsToolStripMenuItem2.Size = new System.Drawing.Size(65' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.VEroadView.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.VEroadView.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.VEaerialView.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.VEaerialView.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.VEhybridView.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.VEhybridView.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator3.Size = new System.Drawing.Size(331' 6);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator3.Size = new System.Drawing.Size(331' 6);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.showCrosshairsMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.showCrosshairsMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.showPushPinsMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.showPushPinsMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.showDMSMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.showDMSMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator8.Size = new System.Drawing.Size(331' 6);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator8.Size = new System.Drawing.Size(331' 6);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.AddRegLayerMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.AddRegLayerMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.showSourceMapOverviewMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.showSourceMapOverviewMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.snapFeaturesToolStripSeparator.Size = new System.Drawing.Size(331' 6);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.snapFeaturesToolStripSeparator.Size = new System.Drawing.Size(331' 6);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.restoreSnapViewMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.restoreSnapViewMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.recordSnapViewMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.recordSnapViewMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.restoreSnapZoomMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.restoreSnapZoomMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.recordSnapZoomMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.recordSnapZoomMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.debugModeToolStripSeparator.Size = new System.Drawing.Size(331' 6);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.debugModeToolStripSeparator.Size = new System.Drawing.Size(331' 6);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.enableDebugModeToolStripMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.enableDebugModeToolStripMenuItem.Size = new System.Drawing.Size(334' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.helpToolStripMenuItem.Size = new System.Drawing.Size(65' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.helpToolStripMenuItem.Size = new System.Drawing.Size(65' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.viewMapCruncherTutorialToolStripMenuItem.Size = new System.Drawing.Size(536' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.viewMapCruncherTutorialToolStripMenuItem.Size = new System.Drawing.Size(536' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator7.Size = new System.Drawing.Size(533' 6);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator7.Size = new System.Drawing.Size(533' 6);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.aboutMSRBackMakerToolStripMenuItem.Size = new System.Drawing.Size(536' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.aboutMSRBackMakerToolStripMenuItem.Size = new System.Drawing.Size(536' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.debugToolStripMenuItem.Size = new System.Drawing.Size(83' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.debugToolStripMenuItem.Size = new System.Drawing.Size(83' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.showTileNamesMenuItem.Size = new System.Drawing.Size(269' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.showTileNamesMenuItem.Size = new System.Drawing.Size(269' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.showSourceCropToolStripMenuItem.Size = new System.Drawing.Size(269' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.showSourceCropToolStripMenuItem.Size = new System.Drawing.Size(269' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.showTileBoundariesMenuItem.Size = new System.Drawing.Size(269' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.showTileBoundariesMenuItem.Size = new System.Drawing.Size(269' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.showDiagnosticsUIToolStripMenuItem.Size = new System.Drawing.Size(269' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.showDiagnosticsUIToolStripMenuItem.Size = new System.Drawing.Size(269' 32);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.mapSplitContainer.Location = new System.Drawing.Point(3' 3);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.mapSplitContainer.Location = new System.Drawing.Point(3' 3);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.mapSplitContainer.Panel1MinSize = 100;
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.mapSplitContainer.Panel2MinSize = 100;
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.mapSplitContainer.Size = new System.Drawing.Size(691' 647);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.mapSplitContainer.Size = new System.Drawing.Size(691' 647);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.mapSplitContainer.SplitterDistance = 337;
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.mapSplitContainer.TabIndex = 6;
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.smViewerControl.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.smViewerControl.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.smViewerControl.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.smViewerControl.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.smViewerControl.Size = new System.Drawing.Size(337' 647);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.smViewerControl.Size = new System.Drawing.Size(337' 647);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.veViewerControl.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.veViewerControl.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.veViewerControl.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.veViewerControl.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.veViewerControl.Size = new System.Drawing.Size(350' 647);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.veViewerControl.Size = new System.Drawing.Size(350' 647);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.controlSplitContainer.Location = new System.Drawing.Point(0' 36);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.controlSplitContainer.Size = new System.Drawing.Size(1028' 650);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.controlSplitContainer.Size = new System.Drawing.Size(1028' 650);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.controlSplitContainer.SplitterDistance = 330;
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.controlSplitContainer.TabIndex = 7;
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Location = new System.Drawing.Point(0' 608);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(330' 42);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(330' 42);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.panel1.TabIndex = 9;
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.RenderLaunchButton.Location = new System.Drawing.Point(3' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.RenderLaunchButton.Location = new System.Drawing.Point(3' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.RenderLaunchButton.Size = new System.Drawing.Size(125' 30);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.RenderLaunchButton.Size = new System.Drawing.Size(125' 30);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.RenderLaunchButton.TabIndex = 9;
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.controlsSplitContainer.Size = new System.Drawing.Size(327' 606);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.controlsSplitContainer.Size = new System.Drawing.Size(327' 606);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.controlsSplitContainer.SplitterDistance = 130;
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.controlsSplitContainer.TabIndex = 8;
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.layerControls.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.layerControls.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.layerControls.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.layerControls.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.layerControls.Size = new System.Drawing.Size(327' 130);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.layerControls.Size = new System.Drawing.Size(327' 130);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.layerControls.TabIndex = 10;
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.synergyExplorer.Size = new System.Drawing.Size(327' 472);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.synergyExplorer.Size = new System.Drawing.Size(327' 472);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.synergyExplorer.TabIndex = 7;
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.correspondencesTab.Location = new System.Drawing.Point(4' 46);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.correspondencesTab.Location = new System.Drawing.Point(4' 46);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.correspondencesTab.Padding = new System.Windows.Forms.Padding(3);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.correspondencesTab.Size = new System.Drawing.Size(319' 422);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.correspondencesTab.Size = new System.Drawing.Size(319' 422);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.registrationControls.Location = new System.Drawing.Point(3' 3);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.registrationControls.Location = new System.Drawing.Point(3' 3);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.registrationControls.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.registrationControls.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.registrationControls.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.registrationControls.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.registrationControls.Size = new System.Drawing.Size(313' 416);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.registrationControls.Size = new System.Drawing.Size(313' 416);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.registrationControls.TabIndex = 9;
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.transparencyTab.Location = new System.Drawing.Point(4' 46);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.transparencyTab.Location = new System.Drawing.Point(4' 46);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.transparencyTab.Size = new System.Drawing.Size(319' 412);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.transparencyTab.Size = new System.Drawing.Size(319' 412);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.transparencyTab.TabIndex = 4;
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.transparencyPanel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.transparencyPanel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.transparencyPanel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.transparencyPanel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.transparencyPanel.Size = new System.Drawing.Size(319' 412);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.transparencyPanel.Size = new System.Drawing.Size(319' 412);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.sourceInfoTab.Location = new System.Drawing.Point(4' 46);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.sourceInfoTab.Location = new System.Drawing.Point(4' 46);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.sourceInfoTab.Padding = new System.Windows.Forms.Padding(3);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.sourceInfoTab.Size = new System.Drawing.Size(319' 412);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.sourceInfoTab.Size = new System.Drawing.Size(319' 412);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.sourceInfoTab.TabIndex = 3;
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.sourceMapInfoPanel.Location = new System.Drawing.Point(3' 3);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.sourceMapInfoPanel.Location = new System.Drawing.Point(3' 3);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.sourceMapInfoPanel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.sourceMapInfoPanel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.sourceMapInfoPanel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.sourceMapInfoPanel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.sourceMapInfoPanel.Size = new System.Drawing.Size(313' 406);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.sourceMapInfoPanel.Size = new System.Drawing.Size(313' 406);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.legendTabPage.Location = new System.Drawing.Point(4' 46);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.legendTabPage.Location = new System.Drawing.Point(4' 46);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.legendTabPage.Padding = new System.Windows.Forms.Padding(3);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.legendTabPage.Size = new System.Drawing.Size(319' 412);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.legendTabPage.Size = new System.Drawing.Size(319' 412);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.legendTabPage.TabIndex = 5;
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.legendOptionsPanel1.Location = new System.Drawing.Point(3' 3);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.legendOptionsPanel1.Location = new System.Drawing.Point(3' 3);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.legendOptionsPanel1.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.legendOptionsPanel1.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.legendOptionsPanel1.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.legendOptionsPanel1.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.legendOptionsPanel1.Size = new System.Drawing.Size(313' 406);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.legendOptionsPanel1.Size = new System.Drawing.Size(313' 406);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.legendOptionsPanel1.TabIndex = 10;
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(1028' 686);
Magic Number,MSR.CVE.BackMaker,MainAppForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MainAppForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(1028' 686);
Magic Number,MSR.CVE.BackMaker,Manifest,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Manifest.cs,SetDirty,The following statement contains a magic number: if (this.dirtyCount > 100)              {                  this.CommitChanges();                  this.dirtyCount = 0;              }
Magic Number,MSR.CVE.BackMaker,ManifestBlock,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\Manifest.cs,Split,The following statement contains a magic number: int num = 2;
Magic Number,MSR.CVE.BackMaker,MapRectangle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MapRectangle.cs,MapRectangle,The following statement contains a magic number: if (list.Count != 2)              {                  throw new InvalidMashupFile(context' string.Format("{0} should contain exactly 2 {1} subtags"' "MapRectangle"' LatLon.GetXMLTag()));              }
Magic Number,MSR.CVE.BackMaker,MapRectangle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MapRectangle.cs,GetCenter,The following statement contains a magic number: return new LatLon((this.lat0 + this.lat1) * 0.5' (this.lon0 + this.lon1) * 0.5);
Magic Number,MSR.CVE.BackMaker,MapRectangle,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\MapRectangle.cs,GetCenter,The following statement contains a magic number: return new LatLon((this.lat0 + this.lat1) * 0.5' (this.lon0 + this.lon1) * 0.5);
Magic Number,MSR.CVE.BackMaker,NamedPipeBase,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\NamedPipeBase.cs,SendMessage,The following statement contains a magic number: D.Assert(array2.Length == 147);
Magic Number,MSR.CVE.BackMaker,NamedPipeBase,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\NamedPipeBase.cs,ReadBuffer,The following statement contains a magic number: byte[] array = new byte[4];
Magic Number,MSR.CVE.BackMaker,NamedPipeBase,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\NamedPipeBase.cs,WriteBuffer,The following statement contains a magic number: byte[] array = new byte[4];
Magic Number,MSR.CVE.BackMaker,NamedPipeBase,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\NamedPipeBase.cs,ReadMessage,The following statement contains a magic number: byte[] buffer = this.ReadBuffer(147);
Magic Number,MSR.CVE.BackMaker,NamedPipeClient,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\NamedPipeClient.cs,NamedPipeClient,The following statement contains a magic number: while (true)  			{  				this.pipeHandle = NamedPipeBase.CreateFile("\\\\.\\pipe\\" + name' 3221225472u' 0u' new IntPtr(0)' 3u' 0u' new IntPtr(0));  				if (!this.pipeHandle.IsInvalid)  				{  					return;  				}  				if (DateTime.Now.Subtract(now).TotalSeconds > 10.0)  				{  					break;  				}  				Thread.Sleep(200);  			}
Magic Number,MSR.CVE.BackMaker,NamedPipeClient,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\NamedPipeClient.cs,NamedPipeClient,The following statement contains a magic number: while (true)  			{  				this.pipeHandle = NamedPipeBase.CreateFile("\\\\.\\pipe\\" + name' 3221225472u' 0u' new IntPtr(0)' 3u' 0u' new IntPtr(0));  				if (!this.pipeHandle.IsInvalid)  				{  					return;  				}  				if (DateTime.Now.Subtract(now).TotalSeconds > 10.0)  				{  					break;  				}  				Thread.Sleep(200);  			}
Magic Number,MSR.CVE.BackMaker,OneLayerBoundApplier,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\OneLayerBoundApplier.cs,OneLayerBoundApplier,The following statement contains a magic number: this.clippedImageFuture = new MemCachePrototype(cachePackage.computeCache' new ApplyPrototype(new UserClipperVerb()' new IFuturePrototype[]  			{  				source.GetImagePrototype(null' (FutureFeatures)11)'  				new UnevaluatedTerm(TermName.TileAddress)'  				source.GetUserBounds(null' FutureFeatures.Cached)  			}));
Magic Number,MSR.CVE.BackMaker,ParametricLine,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ParametricLine.cs,Length,The following statement contains a magic number: return Math.Sqrt(Math.Pow(this.d.lon - this.s.lon' 2.0) + Math.Pow(this.d.lat - this.s.lat' 2.0));
Magic Number,MSR.CVE.BackMaker,ParametricLine,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ParametricLine.cs,Length,The following statement contains a magic number: return Math.Sqrt(Math.Pow(this.d.lon - this.s.lon' 2.0) + Math.Pow(this.d.lat - this.s.lat' 2.0));
Magic Number,MSR.CVE.BackMaker,PixelStruct,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\PixelStruct.cs,GetHashCode,The following statement contains a magic number: return (int)(this.a + 131 * (this.r + 131 * (this.g + 131 * this.b)));
Magic Number,MSR.CVE.BackMaker,PixelStruct,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\PixelStruct.cs,GetHashCode,The following statement contains a magic number: return (int)(this.a + 131 * (this.r + 131 * (this.g + 131 * this.b)));
Magic Number,MSR.CVE.BackMaker,PixelStruct,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\PixelStruct.cs,GetHashCode,The following statement contains a magic number: return (int)(this.a + 131 * (this.r + 131 * (this.g + 131 * this.b)));
Magic Number,MSR.CVE.BackMaker,QueuedTileProvider,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\QueuedTileProvider.cs,enqueueTileRequests,The following statement contains a magic number: try  			{  				for (int i = 0; i < qrlist.Length; i++)  				{  					QueueRequestIfc queueRequestIfc = qrlist[i];  					D.Say(10' string.Format("Queueing req {0}"' queueRequestIfc.ToString()));  					this.priQueue.Enqueue(queueRequestIfc);  				}  				this.priQueue.TruncateQueue(QueuedTileProvider.MAX_QLEN);  				this.queueNonemptyEvent.Set();  			}  			finally  			{  				Monitor.Exit(obj);  			}
Magic Number,MSR.CVE.BackMaker,QueuedTileProvider,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\QueuedTileProvider.cs,workerThread,The following statement contains a magic number: D.Say(10' "starting working thread");
Magic Number,MSR.CVE.BackMaker,QueuedTileProvider,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\QueuedTileProvider.cs,workerThread,The following statement contains a magic number: while (true)  			{  				D.Say(10' string.Format("worker going to sleep; queue count {0}"' this.priQueue.Count()));  				this.queueNonemptyEvent.WaitOne();  				D.Say(10' "worker waking up");  				QueueRequestIfc queueRequestIfc = this.Dequeue();  				if (queueRequestIfc == null)  				{  					D.Sayf(10' "Worker thread continuing after apparent queue cancellation; queuelen {0}"' new object[]  					{  						this.priQueue.Count()  					});  				}  				else  				{  					if (queueRequestIfc is QueueSuicideRequest)  					{  						break;  					}  					D.Sayf(10' "Processing {0}"' new object[]  					{  						queueRequestIfc  					});  					queueRequestIfc.DoWork();  					D.Sayf(10' "done with {0}"' new object[]  					{  						queueRequestIfc  					});  				}  			}
Magic Number,MSR.CVE.BackMaker,QueuedTileProvider,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\QueuedTileProvider.cs,workerThread,The following statement contains a magic number: while (true)  			{  				D.Say(10' string.Format("worker going to sleep; queue count {0}"' this.priQueue.Count()));  				this.queueNonemptyEvent.WaitOne();  				D.Say(10' "worker waking up");  				QueueRequestIfc queueRequestIfc = this.Dequeue();  				if (queueRequestIfc == null)  				{  					D.Sayf(10' "Worker thread continuing after apparent queue cancellation; queuelen {0}"' new object[]  					{  						this.priQueue.Count()  					});  				}  				else  				{  					if (queueRequestIfc is QueueSuicideRequest)  					{  						break;  					}  					D.Sayf(10' "Processing {0}"' new object[]  					{  						queueRequestIfc  					});  					queueRequestIfc.DoWork();  					D.Sayf(10' "done with {0}"' new object[]  					{  						queueRequestIfc  					});  				}  			}
Magic Number,MSR.CVE.BackMaker,QueuedTileProvider,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\QueuedTileProvider.cs,workerThread,The following statement contains a magic number: while (true)  			{  				D.Say(10' string.Format("worker going to sleep; queue count {0}"' this.priQueue.Count()));  				this.queueNonemptyEvent.WaitOne();  				D.Say(10' "worker waking up");  				QueueRequestIfc queueRequestIfc = this.Dequeue();  				if (queueRequestIfc == null)  				{  					D.Sayf(10' "Worker thread continuing after apparent queue cancellation; queuelen {0}"' new object[]  					{  						this.priQueue.Count()  					});  				}  				else  				{  					if (queueRequestIfc is QueueSuicideRequest)  					{  						break;  					}  					D.Sayf(10' "Processing {0}"' new object[]  					{  						queueRequestIfc  					});  					queueRequestIfc.DoWork();  					D.Sayf(10' "done with {0}"' new object[]  					{  						queueRequestIfc  					});  				}  			}
Magic Number,MSR.CVE.BackMaker,QueuedTileProvider,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\QueuedTileProvider.cs,workerThread,The following statement contains a magic number: while (true)  			{  				D.Say(10' string.Format("worker going to sleep; queue count {0}"' this.priQueue.Count()));  				this.queueNonemptyEvent.WaitOne();  				D.Say(10' "worker waking up");  				QueueRequestIfc queueRequestIfc = this.Dequeue();  				if (queueRequestIfc == null)  				{  					D.Sayf(10' "Worker thread continuing after apparent queue cancellation; queuelen {0}"' new object[]  					{  						this.priQueue.Count()  					});  				}  				else  				{  					if (queueRequestIfc is QueueSuicideRequest)  					{  						break;  					}  					D.Sayf(10' "Processing {0}"' new object[]  					{  						queueRequestIfc  					});  					queueRequestIfc.DoWork();  					D.Sayf(10' "done with {0}"' new object[]  					{  						queueRequestIfc  					});  				}  			}
Magic Number,MSR.CVE.BackMaker,QueuedTileProvider,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\QueuedTileProvider.cs,workerThread,The following statement contains a magic number: while (true)  			{  				D.Say(10' string.Format("worker going to sleep; queue count {0}"' this.priQueue.Count()));  				this.queueNonemptyEvent.WaitOne();  				D.Say(10' "worker waking up");  				QueueRequestIfc queueRequestIfc = this.Dequeue();  				if (queueRequestIfc == null)  				{  					D.Sayf(10' "Worker thread continuing after apparent queue cancellation; queuelen {0}"' new object[]  					{  						this.priQueue.Count()  					});  				}  				else  				{  					if (queueRequestIfc is QueueSuicideRequest)  					{  						break;  					}  					D.Sayf(10' "Processing {0}"' new object[]  					{  						queueRequestIfc  					});  					queueRequestIfc.DoWork();  					D.Sayf(10' "done with {0}"' new object[]  					{  						queueRequestIfc  					});  				}  			}
Magic Number,MSR.CVE.BackMaker,QueuedTileProvider,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\QueuedTileProvider.cs,workerThread,The following statement contains a magic number: D.Say(3' "worker thread exiting");
Magic Number,MSR.CVE.BackMaker,PriQueue,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\QueuedTileProvider.cs,ToString,The following statement contains a magic number: try  				{  					int num = 10;  					string text = "";  					foreach (QueuedTileProvider.QueueRequestCell current in this.queue.Keys)  					{  						if (num == 0)  						{  							text += "...\n";  							break;  						}  						text = text + current.ToString() + "\n";  						num--;  					}  					result = text;  				}  				finally  				{  					Monitor.Exit(this);  				}
Magic Number,MSR.CVE.BackMaker,PriQueue,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\QueuedTileProvider.cs,UpdateDebugList,The following statement contains a magic number: int num = 10;
Magic Number,MSR.CVE.BackMaker,RecoverAutoSavedFileDialog,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RecoverAutoSavedFileDialog.cs,InitializeComponent,The following statement contains a magic number: this.message.Location = new Point(8' 7);
Magic Number,MSR.CVE.BackMaker,RecoverAutoSavedFileDialog,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RecoverAutoSavedFileDialog.cs,InitializeComponent,The following statement contains a magic number: this.message.Location = new Point(8' 7);
Magic Number,MSR.CVE.BackMaker,RecoverAutoSavedFileDialog,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RecoverAutoSavedFileDialog.cs,InitializeComponent,The following statement contains a magic number: this.message.Size = new Size(376' 173);
Magic Number,MSR.CVE.BackMaker,RecoverAutoSavedFileDialog,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RecoverAutoSavedFileDialog.cs,InitializeComponent,The following statement contains a magic number: this.message.Size = new Size(376' 173);
Magic Number,MSR.CVE.BackMaker,RecoverAutoSavedFileDialog,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RecoverAutoSavedFileDialog.cs,InitializeComponent,The following statement contains a magic number: this.openAsNewButton.Location = new Point(20' 218);
Magic Number,MSR.CVE.BackMaker,RecoverAutoSavedFileDialog,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RecoverAutoSavedFileDialog.cs,InitializeComponent,The following statement contains a magic number: this.openAsNewButton.Location = new Point(20' 218);
Magic Number,MSR.CVE.BackMaker,RecoverAutoSavedFileDialog,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RecoverAutoSavedFileDialog.cs,InitializeComponent,The following statement contains a magic number: this.openAsNewButton.Size = new Size(130' 29);
Magic Number,MSR.CVE.BackMaker,RecoverAutoSavedFileDialog,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RecoverAutoSavedFileDialog.cs,InitializeComponent,The following statement contains a magic number: this.openAsNewButton.Size = new Size(130' 29);
Magic Number,MSR.CVE.BackMaker,RecoverAutoSavedFileDialog,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RecoverAutoSavedFileDialog.cs,InitializeComponent,The following statement contains a magic number: this.deleteBackupButton.Location = new Point(156' 218);
Magic Number,MSR.CVE.BackMaker,RecoverAutoSavedFileDialog,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RecoverAutoSavedFileDialog.cs,InitializeComponent,The following statement contains a magic number: this.deleteBackupButton.Location = new Point(156' 218);
Magic Number,MSR.CVE.BackMaker,RecoverAutoSavedFileDialog,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RecoverAutoSavedFileDialog.cs,InitializeComponent,The following statement contains a magic number: this.deleteBackupButton.Size = new Size(107' 29);
Magic Number,MSR.CVE.BackMaker,RecoverAutoSavedFileDialog,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RecoverAutoSavedFileDialog.cs,InitializeComponent,The following statement contains a magic number: this.deleteBackupButton.Size = new Size(107' 29);
Magic Number,MSR.CVE.BackMaker,RecoverAutoSavedFileDialog,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RecoverAutoSavedFileDialog.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Location = new Point(269' 218);
Magic Number,MSR.CVE.BackMaker,RecoverAutoSavedFileDialog,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RecoverAutoSavedFileDialog.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Location = new Point(269' 218);
Magic Number,MSR.CVE.BackMaker,RecoverAutoSavedFileDialog,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RecoverAutoSavedFileDialog.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Size = new Size(107' 29);
Magic Number,MSR.CVE.BackMaker,RecoverAutoSavedFileDialog,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RecoverAutoSavedFileDialog.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Size = new Size(107' 29);
Magic Number,MSR.CVE.BackMaker,RecoverAutoSavedFileDialog,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RecoverAutoSavedFileDialog.cs,InitializeComponent,The following statement contains a magic number: base.ClientSize = new Size(391' 266);
Magic Number,MSR.CVE.BackMaker,RecoverAutoSavedFileDialog,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RecoverAutoSavedFileDialog.cs,InitializeComponent,The following statement contains a magic number: base.ClientSize = new Size(391' 266);
Magic Number,MSR.CVE.BackMaker,RectangleD,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RectangleD.cs,Grow,The following statement contains a magic number: return new RectangleD(this.X - margin' this.Y - margin' this.Width + 2.0 * margin' this.Height + 2.0 * margin);
Magic Number,MSR.CVE.BackMaker,RectangleD,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RectangleD.cs,Grow,The following statement contains a magic number: return new RectangleD(this.X - margin' this.Y - margin' this.Width + 2.0 * margin' this.Height + 2.0 * margin);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.getStartedBox.Location = new Point(9' 61);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.getStartedBox.Location = new Point(9' 61);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.getStartedBox.Size = new Size(196' 95);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.getStartedBox.Size = new Size(196' 95);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.getStartedBox.TabIndex = 8;
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.textBox.Location = new Point(3' 16);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.textBox.Location = new Point(3' 16);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.textBox.Size = new Size(190' 76);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.textBox.Size = new Size(190' 76);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinNameTable.ColumnCount = 4;
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinNameTable.Controls.Add(this.addPushPinButton' 2' 0);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinNameTable.Controls.Add(this.updatePushPinButton' 3' 0);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinNameTable.Location = new Point(2' 3);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinNameTable.Location = new Point(2' 3);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinNameTable.Size = new Size(223' 24);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinNameTable.Size = new Size(223' 24);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinNameTable.TabIndex = 10;
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinNameTable.SetColumnSpan(this.pinText' 2);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinText.Size = new Size(110' 20);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinText.Size = new Size(110' 20);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinText.TabIndex = 2;
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.addPushPinButton.Location = new Point(113' 0);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.addPushPinButton.Margin = new Padding(3' 0' 0' 0);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.addPushPinButton.Size = new Size(52' 23);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.addPushPinButton.Size = new Size(52' 23);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.updatePushPinButton.Location = new Point(168' 0);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.updatePushPinButton.Margin = new Padding(3' 0' 0' 0);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.updatePushPinButton.Size = new Size(55' 23);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.updatePushPinButton.Size = new Size(55' 23);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.updatePushPinButton.TabIndex = 8;
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.LockButtonTable.ColumnCount = 2;
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.LockButtonTable.Location = new Point(69' 293);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.LockButtonTable.Location = new Point(69' 293);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.LockButtonTable.RowCount = 2;
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.LockButtonTable.Size = new Size(156' 59);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.LockButtonTable.Size = new Size(156' 59);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.LockButtonTable.TabIndex = 9;
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.removePushPinButton.Location = new Point(3' 3);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.removePushPinButton.Location = new Point(3' 3);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.removePushPinButton.Size = new Size(72' 23);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.removePushPinButton.Size = new Size(72' 23);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.removeAllPushpinsButton.Location = new Point(81' 3);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.removeAllPushpinsButton.Location = new Point(81' 3);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.removeAllPushpinsButton.Size = new Size(72' 23);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.removeAllPushpinsButton.Size = new Size(72' 23);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.removeAllPushpinsButton.TabIndex = 4;
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.unlockTransformButton.Location = new Point(3' 32);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.unlockTransformButton.Location = new Point(3' 32);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.unlockTransformButton.Size = new Size(72' 24);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.unlockTransformButton.Size = new Size(72' 24);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.lockTransformButton.Location = new Point(81' 32);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.lockTransformButton.Location = new Point(81' 32);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.lockTransformButton.Size = new Size(72' 24);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.lockTransformButton.Size = new Size(72' 24);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinList.Location = new Point(2' 32);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinList.Location = new Point(2' 32);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinList.Margin = new Padding(2);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinList.RowTemplate.Height = 24;
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinList.Size = new Size(224' 202);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinList.Size = new Size(224' 202);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinList.TabIndex = 7;
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.pinIDcolumn.MinimumWidth = 15;
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.lockStatusText.Location = new Point(3' 239);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.lockStatusText.Location = new Point(3' 239);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.lockStatusText.Size = new Size(223' 48);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.lockStatusText.Size = new Size(223' 48);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.lockStatusText.TabIndex = 6;
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.forceAffineCheckBox.Location = new Point(9' 361);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.forceAffineCheckBox.Location = new Point(9' 361);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.forceAffineCheckBox.Size = new Size(83' 17);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.forceAffineCheckBox.Size = new Size(83' 17);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.forceAffineCheckBox.TabIndex = 11;
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new Size(228' 388);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new Size(228' 388);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: this.panel1.TabIndex = 12;
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(228' 388);
Magic Number,MSR.CVE.BackMaker,registrationControls,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\registrationControls.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(228' 388);
Magic Number,MSR.CVE.BackMaker,RemoteFoxitServer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RemoteFoxitServer.cs,Run,The following statement contains a magic number: while (!flag)  			{  				D.Sayf(0' "Waiting for debugger."' new object[0]);  				Thread.Sleep(250);  			}
Magic Number,MSR.CVE.BackMaker,RemoteFoxitStub,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RemoteFoxitStub.cs,RobustRPC,The following statement contains a magic number: if (this.namedPipeServer.childProcess.VirtualMemorySize64 > 1073741824L || this.namedPipeServer.childProcess.HandleCount > 512)  			{  				this.Teardown();  			}
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,PrintPage,The following statement contains a magic number: int num = 4;
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.Size = new Size(792' 24);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.menuStrip1.Size = new Size(792' 24);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.fileToolStripMenuItem.Size = new Size(35' 20);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.fileToolStripMenuItem.Size = new Size(35' 20);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.pageSetupToolStripMenuItem.Size = new Size(160' 22);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.pageSetupToolStripMenuItem.Size = new Size(160' 22);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.printPreviewToolStripMenuItem.Size = new Size(160' 22);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.printPreviewToolStripMenuItem.Size = new Size(160' 22);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.printToolStripMenuItem.Size = new Size(160' 22);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.printToolStripMenuItem.Size = new Size(160' 22);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.vEBackgroundToolStripMenuItem.Size = new Size(90' 20);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.vEBackgroundToolStripMenuItem.Size = new Size(90' 20);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.VEroadView.Size = new Size(148' 22);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.VEroadView.Size = new Size(148' 22);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.VEaerialView.Size = new Size(148' 22);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.VEaerialView.Size = new Size(148' 22);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.VEhybridView.Size = new Size(148' 22);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.VEhybridView.Size = new Size(148' 22);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.mashupLayersMenuItem.Size = new Size(91' 20);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.mashupLayersMenuItem.Size = new Size(91' 20);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.addLayerToolStripMenuItem.Size = new Size(146' 22);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.addLayerToolStripMenuItem.Size = new Size(146' 22);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new Size(143' 6);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new Size(143' 6);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.viewer.Location = new Point(0' 24);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.viewer.Size = new Size(792' 542);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: this.viewer.Size = new Size(792' 542);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: base.ClientSize = new Size(792' 566);
Magic Number,MSR.CVE.BackMaker,RenderedMashupViewer,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderedMashupViewer.cs,InitializeComponent,The following statement contains a magic number: base.ClientSize = new Size(792' 566);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.publishSourcesCheckbox.Location = new Point(3' 198);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.publishSourcesCheckbox.Location = new Point(3' 198);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.publishSourcesCheckbox.Size = new Size(15' 14);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.publishSourcesCheckbox.Size = new Size(15' 14);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.publishSourcesCheckbox.TabIndex = 15;
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.publishSourcesLabel.Location = new Point(24' 198);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.publishSourcesLabel.Location = new Point(24' 198);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.publishSourcesLabel.Size = new Size(305' 35);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.publishSourcesLabel.Size = new Size(305' 35);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.publishSourcesLabel.TabIndex = 16;
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.permitCompositionCheckbox.Location = new Point(3' 239);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.permitCompositionCheckbox.Location = new Point(3' 239);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.permitCompositionCheckbox.Size = new Size(114' 17);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.permitCompositionCheckbox.Size = new Size(114' 17);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.permitCompositionCheckbox.TabIndex = 15;
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new Size(332' 362);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new Size(332' 362);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.panel1.TabIndex = 18;
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.renderToFileRadio.Location = new Point(19' 23);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.renderToFileRadio.Location = new Point(19' 23);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.renderToFileRadio.Size = new Size(41' 17);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.renderToFileRadio.Size = new Size(41' 17);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.renderToFileRadio.TabIndex = 18;
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new Point(3' 7);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new Point(3' 7);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new Size(57' 13);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new Size(57' 13);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 19;
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.renderToS3radio.Location = new Point(79' 23);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.renderToS3radio.Location = new Point(79' 23);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.renderToS3radio.Size = new Size(38' 17);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.renderToS3radio.Size = new Size(38' 17);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: this.renderToS3radio.TabIndex = 20;
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(332' 362);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(332' 362);
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,Reload,The following statement contains a magic number: if (this.renderOptions != null)  			{  				this.publishSourcesCheckbox.Checked = this.renderOptions.publishSourceData;  				this.permitCompositionCheckbox.Checked = this.renderOptions.permitComposition;  				this.renderToFileRadio.Checked = (this.renderOptions.renderToOptions is RenderToFileOptions);  				this.renderToS3radio.Checked = (this.renderOptions.renderToOptions is RenderToS3Options);  				if (this.renderOptions.renderToOptions is RenderToFileOptions && !(this.renderToControl is RenderToFileControl))  				{  					this.destroyRenderToControl();  					RenderToFileControl renderToFileControl = new RenderToFileControl();  					renderToFileControl.Configure((RenderToFileOptions)this.renderOptions.renderToOptions);  					renderToFileControl.Location = new Point(0' 46);  					this.renderToControl = renderToFileControl;  				}  				if (this.renderOptions.renderToOptions is RenderToS3Options && !(this.renderToControl is RenderToS3Control))  				{  					this.destroyRenderToControl();  					RenderToS3Control renderToS3Control = new RenderToS3Control();  					renderToS3Control.Configure((RenderToS3Options)this.renderOptions.renderToOptions);  					renderToS3Control.Location = new Point(0' 46);  					this.renderToControl = renderToS3Control;  				}  				this.renderToControl.Anchor = (AnchorStyles.Top | AnchorStyles.Left | AnchorStyles.Right);  				this.renderToControl.Size = new Size(this.panel1.Width' this.renderToControl.Height);  				this.panel1.Controls.Add(this.renderToControl);  			}
Magic Number,MSR.CVE.BackMaker,RenderOptionsPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOptionsPanel.cs,Reload,The following statement contains a magic number: if (this.renderOptions != null)  			{  				this.publishSourcesCheckbox.Checked = this.renderOptions.publishSourceData;  				this.permitCompositionCheckbox.Checked = this.renderOptions.permitComposition;  				this.renderToFileRadio.Checked = (this.renderOptions.renderToOptions is RenderToFileOptions);  				this.renderToS3radio.Checked = (this.renderOptions.renderToOptions is RenderToS3Options);  				if (this.renderOptions.renderToOptions is RenderToFileOptions && !(this.renderToControl is RenderToFileControl))  				{  					this.destroyRenderToControl();  					RenderToFileControl renderToFileControl = new RenderToFileControl();  					renderToFileControl.Configure((RenderToFileOptions)this.renderOptions.renderToOptions);  					renderToFileControl.Location = new Point(0' 46);  					this.renderToControl = renderToFileControl;  				}  				if (this.renderOptions.renderToOptions is RenderToS3Options && !(this.renderToControl is RenderToS3Control))  				{  					this.destroyRenderToControl();  					RenderToS3Control renderToS3Control = new RenderToS3Control();  					renderToS3Control.Configure((RenderToS3Options)this.renderOptions.renderToOptions);  					renderToS3Control.Location = new Point(0' 46);  					this.renderToControl = renderToS3Control;  				}  				this.renderToControl.Anchor = (AnchorStyles.Top | AnchorStyles.Left | AnchorStyles.Right);  				this.renderToControl.Size = new Size(this.panel1.Width' this.renderToControl.Height);  				this.panel1.Controls.Add(this.renderToControl);  			}
Magic Number,MSR.CVE.BackMaker,RenderOutputUtil,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOutputUtil.cs,CopyFile,The following statement contains a magic number: byte[] buffer = new byte[65536];
Magic Number,MSR.CVE.BackMaker,RenderOutputUtil,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderOutputUtil.cs,CopyFile,The following statement contains a magic number: while (true)  			{  				int num = stream.Read(buffer' 0' 65536);  				if (num == 0)  				{  					break;  				}  				stream2.Write(buffer' 0' num);  			}
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.tileDisplayPanel.Location = new Point(7' 77);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.tileDisplayPanel.Location = new Point(7' 77);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.tileDisplayPanel.Size = new Size(256' 256);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.tileDisplayPanel.Size = new Size(256' 256);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.tileDisplayPanel.TabIndex = 31;
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.currentTileName.Location = new Point(2' 284);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.currentTileName.Location = new Point(2' 284);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.currentTileName.Size = new Size(261' 13);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.currentTileName.Size = new Size(261' 13);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.currentTileName.TabIndex = 36;
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.estimatedOutputSizeBox.Location = new Point(156' 49);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.estimatedOutputSizeBox.Location = new Point(156' 49);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.estimatedOutputSizeBox.Size = new Size(566' 13);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.estimatedOutputSizeBox.Size = new Size(566' 13);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.estimatedOutputSizeBox.TabIndex = 38;
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new Point(7' 49);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new Point(7' 49);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new Size(143' 13);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new Size(143' 13);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.TabIndex = 39;
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.renderErrors.Location = new Point(269' 77);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.renderErrors.Location = new Point(269' 77);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.renderErrors.Size = new Size(453' 293);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.renderErrors.Size = new Size(453' 293);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.renderErrors.TabIndex = 40;
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.previewRenderedResultsLinkLabel.Location = new Point(266' 377);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.previewRenderedResultsLinkLabel.Location = new Point(266' 377);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.previewRenderedResultsLinkLabel.Size = new Size(170' 18);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.previewRenderedResultsLinkLabel.Size = new Size(170' 18);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.previewRenderedResultsLinkLabel.TabIndex = 41;
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.viewInBrowserLinkLabel.Location = new Point(442' 377);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.viewInBrowserLinkLabel.Location = new Point(442' 377);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.viewInBrowserLinkLabel.Size = new Size(160' 18);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.viewInBrowserLinkLabel.Size = new Size(160' 18);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.viewInBrowserLinkLabel.TabIndex = 41;
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new Size(725' 407);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new Size(725' 407);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.panel1.TabIndex = 42;
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.tileDisplayLabel.Location = new Point(7' 361);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.tileDisplayLabel.Location = new Point(7' 361);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.tileDisplayLabel.Size = new Size(256' 66);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.tileDisplayLabel.Size = new Size(256' 66);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.tileDisplayLabel.TabIndex = 43;
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.renderProgressBar.Location = new Point(156' 20);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.renderProgressBar.Location = new Point(156' 20);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.renderProgressBar.Size = new Size(566' 23);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.renderProgressBar.Size = new Size(566' 23);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.renderProgressBar.TabIndex = 42;
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.renderControlButton.Location = new Point(6' 20);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.renderControlButton.Location = new Point(6' 20);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.renderControlButton.Size = new Size(144' 23);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.renderControlButton.Size = new Size(144' 23);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: this.renderControlButton.TabIndex = 32;
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(725' 407);
Magic Number,MSR.CVE.BackMaker,RenderProgressPanel2,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderProgressPanel2.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(725' 407);
Magic Number,MSR.CVE.BackMaker,RenderRegion,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderRegion.cs,GetClipRegion,The following statement contains a magic number: if (csi is MercatorCoordinateSystem)  			{  				Region region = null;  				for (int i = -360; i <= 0; i += 360)  				{  					MapRectangle clippedMapWindow = new MapRectangle(mapWindow.lat0' mapWindow.lon0 + (double)i' mapWindow.lat1' mapWindow.lon1 + (double)i);  					Region clipRegionComponent = this.GetClipRegionComponent(clippedMapWindow' zoom' csi);  					if (region == null)  					{  						region = clipRegionComponent;  					}  					else  					{  						region.Union(clipRegionComponent);  					}  				}  				return region;  			}
Magic Number,MSR.CVE.BackMaker,RenderRegion,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderRegion.cs,GetClipRegion,The following statement contains a magic number: if (csi is MercatorCoordinateSystem)  			{  				Region region = null;  				for (int i = -360; i <= 0; i += 360)  				{  					MapRectangle clippedMapWindow = new MapRectangle(mapWindow.lat0' mapWindow.lon0 + (double)i' mapWindow.lat1' mapWindow.lon1 + (double)i);  					Region clipRegionComponent = this.GetClipRegionComponent(clippedMapWindow' zoom' csi);  					if (region == null)  					{  						region = clipRegionComponent;  					}  					else  					{  						region.Union(clipRegionComponent);  					}  				}  				return region;  			}
Magic Number,MSR.CVE.BackMaker,RenderRegion,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderRegion.cs,GetPath,The following statement contains a magic number: MapRectangle mapWindow2 = mapWindow.GrowFraction(0.1);
Magic Number,MSR.CVE.BackMaker,RenderRegion,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderRegion.cs,SetDirty,The following statement contains a magic number: this.cachedHashCode = 19;
Magic Number,MSR.CVE.BackMaker,RenderRegion,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderRegion.cs,SetDirty,The following statement contains a magic number: foreach (LatLon arg_1D_0 in this.vertexList)  			{  				this.cachedHashCode = this.cachedHashCode * 131 + this.vertexList.GetHashCode();  			}
Magic Number,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateOuterLoop,The following statement contains a magic number: if (this.mashupScratchCopy != null)  			{  				foreach (Layer current in this.mashupScratchCopy.layerList)  				{  					List<RenderWorkUnit> list2;  					try  					{  						list2 = this.EstimateOneLayer(current' this.boundsList);  					}  					catch (RenderState.RenderAborted)  					{  						flag = false;  						break;  					}  					catch (RenderState.RenderDisposed)  					{  						throw;  					}  					catch (Exception ex)  					{  						this.PostMessage(string.Format("Skipping layer {0}: {1}"' current.displayName' ex.ToString()));  						D.Say(0' string.Format("ConstructRenderListThread failed: {0}"' ex));  						continue;  					}  					list2.Sort();  					List<RangeDescriptor> list3 = new List<RangeDescriptor>();  					this.rangeQueryData[current] = list3;  					foreach (RenderWorkUnit current2 in list2)  					{  						if (list3.Count >= 100)  						{  							break;  						}  						if (current2 is CompositeTileUnit)  						{  							this.rangeQueryData[current].Add(new RangeDescriptor(((CompositeTileUnit)current2).GetTileAddress()));  						}  					}  					list.AddRange(list2);  					this.estimateProgressLayerCount++;  					this.estimateProgressSourceMapCount = 0;  					this.estimateProgressSourceMapsThisLayer = 1;  					this.renderUI.uiChanged();  				}  			}
Magic Number,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateOuterLoop,The following statement contains a magic number: if (flag)  			{  				this.PostStatus("Sorting");  				list.Sort();  				this.renderQueue = new Queue<RenderWorkUnit>(list);  				this.initialQueueSize = this.renderQueue.Count;  				string message = string.Format("Estimated output size: {0} tiles' about {1:f}MB"' this.renderQueue.Count' (double)this.renderQueue.Count * 0.085);  				this.estimateProgressLayerCount++;  				this.PostStatus(message);  				this.PostMessage(message);  				D.Say(0' "EstimateOuterLoop ends");  				return;  			}
Magic Number,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateLayer_SetupUI,The following statement contains a magic number: this.estimateProgressSourceMapsThisLayer = layer.Count * 2 + 1;
Magic Number,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateLayer_MakeProposedTileSet,The following statement contains a magic number: foreach (RenderState.SourceMapRenderInfo current in sourceMapRenderInfosBackToFront)  			{  				this.AddCredit(current.warpedMapTileSource.GetRendererCredit());  				current.warpedMapTileSource.GetOpenDocumentFuture(FutureFeatures.Cached).Realize("EstimateLayer_MakeProposedTileSet");  				BoundsPresent boundsPresent = (BoundsPresent)current.warpedMapTileSource.GetUserBounds(null' FutureFeatures.Cached).Realize("RenderState.EstimateOneLayer");  				current.renderBoundsBoundingBox = boundsPresent.GetRenderRegion().GetBoundingBox();  				if (rect != null)  				{  					current.renderBoundsBoundingBox = current.renderBoundsBoundingBox.ClipTo(rect);  				}  				current.renderBoundsBoundingBox = current.renderBoundsBoundingBox.ClipTo(CoordinateSystemUtilities.GetRangeAsMapRectangle(MercatorCoordinateSystem.theInstance));  				RenderBounds renderBounds = this.mercatorCoordinateSystem.MakeRenderBounds(current.renderBoundsBoundingBox);  				string fileSuffix = "." + this.mashupScratchCopy.GetRenderOptions().outputTileType.extn;  				RenderedTileNamingScheme renderedTileNamingScheme = new VENamingScheme(layer.GetFilesystemName()' fileSuffix);  				boundsPresent.Dispose();  				this.PostStatus(string.Format("(counting {0})"' current.sourceMap.displayName));  				int num2 = Math.Max(current.sourceMap.sourceMapRenderOptions.minZoom' renderBounds.MinZoom);  				int num3 = Math.Min(current.sourceMap.sourceMapRenderOptions.maxZoom' renderBounds.MaxZoom);  				boundsList.Add(renderBounds.tileRectangle[num3]);  				string text = renderedTileNamingScheme.GetFileSuffix();  				D.Assert(text.StartsWith("."));  				text = text.Substring(1);  				for (int i = num2; i <= num3; i++)  				{  					TileRectangle tileRectangle = renderBounds.tileRectangle[i];  					for (int j = tileRectangle.TopLeft.TileY; j <= tileRectangle.BottomRight.TileY; j += tileRectangle.StrideY)  					{  						for (int k = tileRectangle.TopLeft.TileX; k <= tileRectangle.BottomRight.TileX; k += tileRectangle.StrideX)  						{  							TileAddress tileAddress = new TileAddress(k' j' i);  							proposedTileSet.MakeLayeredTileWork(tileAddress' layer' this.renderOutput.MakeChildMethod(renderedTileNamingScheme.GetFilePrefix())' renderedTileNamingScheme.GetTileFilename(tileAddress)' this.mashupScratchCopy.GetRenderOptions().outputTileType);  							this.CheckSignal();  							if (!this.complainedAboutInsaneTileCount && proposedTileSet.Count > 1000000)  							{  								DialogResult dialogResult = MessageBox.Show(string.Format("Estimate exceeds {0} tiles; consider canceling the estimation and selecting lower max zoom levels."' 1000000)' "That's a lot of tiles."' MessageBoxButtons.OKCancel' MessageBoxIcon.Exclamation);  								if (dialogResult == DialogResult.Cancel)  								{  									throw new RenderState.RenderAborted();  								}  							}  							num++;  							if (num % 10000 == 0)  							{  								this.PostStatus(string.Format("(counting {0} ... {1} tiles)"' current.sourceMap.displayName' proposedTileSet.Count));  							}  						}  					}  				}  				this.estimateProgressSourceMapCount++;  			}
Magic Number,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateLayer_MakeProposedTileSet,The following statement contains a magic number: foreach (RenderState.SourceMapRenderInfo current in sourceMapRenderInfosBackToFront)  			{  				this.AddCredit(current.warpedMapTileSource.GetRendererCredit());  				current.warpedMapTileSource.GetOpenDocumentFuture(FutureFeatures.Cached).Realize("EstimateLayer_MakeProposedTileSet");  				BoundsPresent boundsPresent = (BoundsPresent)current.warpedMapTileSource.GetUserBounds(null' FutureFeatures.Cached).Realize("RenderState.EstimateOneLayer");  				current.renderBoundsBoundingBox = boundsPresent.GetRenderRegion().GetBoundingBox();  				if (rect != null)  				{  					current.renderBoundsBoundingBox = current.renderBoundsBoundingBox.ClipTo(rect);  				}  				current.renderBoundsBoundingBox = current.renderBoundsBoundingBox.ClipTo(CoordinateSystemUtilities.GetRangeAsMapRectangle(MercatorCoordinateSystem.theInstance));  				RenderBounds renderBounds = this.mercatorCoordinateSystem.MakeRenderBounds(current.renderBoundsBoundingBox);  				string fileSuffix = "." + this.mashupScratchCopy.GetRenderOptions().outputTileType.extn;  				RenderedTileNamingScheme renderedTileNamingScheme = new VENamingScheme(layer.GetFilesystemName()' fileSuffix);  				boundsPresent.Dispose();  				this.PostStatus(string.Format("(counting {0})"' current.sourceMap.displayName));  				int num2 = Math.Max(current.sourceMap.sourceMapRenderOptions.minZoom' renderBounds.MinZoom);  				int num3 = Math.Min(current.sourceMap.sourceMapRenderOptions.maxZoom' renderBounds.MaxZoom);  				boundsList.Add(renderBounds.tileRectangle[num3]);  				string text = renderedTileNamingScheme.GetFileSuffix();  				D.Assert(text.StartsWith("."));  				text = text.Substring(1);  				for (int i = num2; i <= num3; i++)  				{  					TileRectangle tileRectangle = renderBounds.tileRectangle[i];  					for (int j = tileRectangle.TopLeft.TileY; j <= tileRectangle.BottomRight.TileY; j += tileRectangle.StrideY)  					{  						for (int k = tileRectangle.TopLeft.TileX; k <= tileRectangle.BottomRight.TileX; k += tileRectangle.StrideX)  						{  							TileAddress tileAddress = new TileAddress(k' j' i);  							proposedTileSet.MakeLayeredTileWork(tileAddress' layer' this.renderOutput.MakeChildMethod(renderedTileNamingScheme.GetFilePrefix())' renderedTileNamingScheme.GetTileFilename(tileAddress)' this.mashupScratchCopy.GetRenderOptions().outputTileType);  							this.CheckSignal();  							if (!this.complainedAboutInsaneTileCount && proposedTileSet.Count > 1000000)  							{  								DialogResult dialogResult = MessageBox.Show(string.Format("Estimate exceeds {0} tiles; consider canceling the estimation and selecting lower max zoom levels."' 1000000)' "That's a lot of tiles."' MessageBoxButtons.OKCancel' MessageBoxIcon.Exclamation);  								if (dialogResult == DialogResult.Cancel)  								{  									throw new RenderState.RenderAborted();  								}  							}  							num++;  							if (num % 10000 == 0)  							{  								this.PostStatus(string.Format("(counting {0} ... {1} tiles)"' current.sourceMap.displayName' proposedTileSet.Count));  							}  						}  					}  				}  				this.estimateProgressSourceMapCount++;  			}
Magic Number,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateLayer_MakeProposedTileSet,The following statement contains a magic number: foreach (RenderState.SourceMapRenderInfo current in sourceMapRenderInfosBackToFront)  			{  				this.AddCredit(current.warpedMapTileSource.GetRendererCredit());  				current.warpedMapTileSource.GetOpenDocumentFuture(FutureFeatures.Cached).Realize("EstimateLayer_MakeProposedTileSet");  				BoundsPresent boundsPresent = (BoundsPresent)current.warpedMapTileSource.GetUserBounds(null' FutureFeatures.Cached).Realize("RenderState.EstimateOneLayer");  				current.renderBoundsBoundingBox = boundsPresent.GetRenderRegion().GetBoundingBox();  				if (rect != null)  				{  					current.renderBoundsBoundingBox = current.renderBoundsBoundingBox.ClipTo(rect);  				}  				current.renderBoundsBoundingBox = current.renderBoundsBoundingBox.ClipTo(CoordinateSystemUtilities.GetRangeAsMapRectangle(MercatorCoordinateSystem.theInstance));  				RenderBounds renderBounds = this.mercatorCoordinateSystem.MakeRenderBounds(current.renderBoundsBoundingBox);  				string fileSuffix = "." + this.mashupScratchCopy.GetRenderOptions().outputTileType.extn;  				RenderedTileNamingScheme renderedTileNamingScheme = new VENamingScheme(layer.GetFilesystemName()' fileSuffix);  				boundsPresent.Dispose();  				this.PostStatus(string.Format("(counting {0})"' current.sourceMap.displayName));  				int num2 = Math.Max(current.sourceMap.sourceMapRenderOptions.minZoom' renderBounds.MinZoom);  				int num3 = Math.Min(current.sourceMap.sourceMapRenderOptions.maxZoom' renderBounds.MaxZoom);  				boundsList.Add(renderBounds.tileRectangle[num3]);  				string text = renderedTileNamingScheme.GetFileSuffix();  				D.Assert(text.StartsWith("."));  				text = text.Substring(1);  				for (int i = num2; i <= num3; i++)  				{  					TileRectangle tileRectangle = renderBounds.tileRectangle[i];  					for (int j = tileRectangle.TopLeft.TileY; j <= tileRectangle.BottomRight.TileY; j += tileRectangle.StrideY)  					{  						for (int k = tileRectangle.TopLeft.TileX; k <= tileRectangle.BottomRight.TileX; k += tileRectangle.StrideX)  						{  							TileAddress tileAddress = new TileAddress(k' j' i);  							proposedTileSet.MakeLayeredTileWork(tileAddress' layer' this.renderOutput.MakeChildMethod(renderedTileNamingScheme.GetFilePrefix())' renderedTileNamingScheme.GetTileFilename(tileAddress)' this.mashupScratchCopy.GetRenderOptions().outputTileType);  							this.CheckSignal();  							if (!this.complainedAboutInsaneTileCount && proposedTileSet.Count > 1000000)  							{  								DialogResult dialogResult = MessageBox.Show(string.Format("Estimate exceeds {0} tiles; consider canceling the estimation and selecting lower max zoom levels."' 1000000)' "That's a lot of tiles."' MessageBoxButtons.OKCancel' MessageBoxIcon.Exclamation);  								if (dialogResult == DialogResult.Cancel)  								{  									throw new RenderState.RenderAborted();  								}  							}  							num++;  							if (num % 10000 == 0)  							{  								this.PostStatus(string.Format("(counting {0} ... {1} tiles)"' current.sourceMap.displayName' proposedTileSet.Count));  							}  						}  					}  				}  				this.estimateProgressSourceMapCount++;  			}
Magic Number,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,EstimateLayer_CreateRenderList,The following statement contains a magic number: foreach (CompositeTileUnit current in compositeTileUnits)  			{  				current.stage = num / 100;  				if (vETileSource != null)  				{  					current.AddSupplier(layerApplierMaker.MakeApplier(vETileSource' layer));  				}  				MapRectangle mapRectangle = CoordinateSystemUtilities.TileAddressToMapRectangle(this.mercatorCoordinateSystem' current.GetTileAddress());  				foreach (RenderState.SourceMapRenderInfo current2 in sourceMapRenderInfosBackToFront)  				{  					if (mapRectangle.intersects(current2.renderBoundsBoundingBox))  					{  						current.AddSupplier(layerApplierMaker.MakeApplier(current2.warpedMapTileSource' layer));  					}  				}  				list.Add(current);  				if (useStagedRendering)  				{  					foreach (SingleSourceUnit current3 in current.GetSingleSourceUnits())  					{  						list.Add(current3);  					}  				}  				num++;  				this.CheckSignal();  			}
Magic Number,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,RenderThumbnails,The following statement contains a magic number: foreach (int current in new List<int>  			{  				200'  				500  			})  			{  				foreach (Layer current2 in this.mashupScratchCopy.layerList)  				{  					CrunchedLayer crunchedLayer = crunchedFile[current2];  					if (current2.SomeSourceMapIsReadyToLock())  					{  						this.RenderThumbnail(thumbnailOutput' crunchedLayer' RenderState.ForceValidFilename(string.Format("{0}_{1}.png"' current2.displayName' current))' new CompositeTileSource(current2' this.mapTileSourceFactory)' current);  					}  					foreach (SourceMap current3 in current2)  					{  						if (current3.ReadyToLock())  						{  							SourceMapRecord thumbnailCollection = crunchedLayer[current3];  							this.RenderThumbnail(thumbnailOutput' thumbnailCollection' RenderState.ForceValidFilename(string.Format("{0}_{1}_{2}.png"' current2.displayName' current3.displayName' current))' this.mapTileSourceFactory.CreateDisplayableWarpedSource(current3)' current);  						}  					}  				}  			}
Magic Number,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,RenderThumbnails,The following statement contains a magic number: foreach (int current in new List<int>  			{  				200'  				500  			})  			{  				foreach (Layer current2 in this.mashupScratchCopy.layerList)  				{  					CrunchedLayer crunchedLayer = crunchedFile[current2];  					if (current2.SomeSourceMapIsReadyToLock())  					{  						this.RenderThumbnail(thumbnailOutput' crunchedLayer' RenderState.ForceValidFilename(string.Format("{0}_{1}.png"' current2.displayName' current))' new CompositeTileSource(current2' this.mapTileSourceFactory)' current);  					}  					foreach (SourceMap current3 in current2)  					{  						if (current3.ReadyToLock())  						{  							SourceMapRecord thumbnailCollection = crunchedLayer[current3];  							this.RenderThumbnail(thumbnailOutput' thumbnailCollection' RenderState.ForceValidFilename(string.Format("{0}_{1}_{2}.png"' current2.displayName' current3.displayName' current))' this.mapTileSourceFactory.CreateDisplayableWarpedSource(current3)' current);  						}  					}  				}  			}
Magic Number,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,UI_UpdateProgress,The following statement contains a magic number: if (this.mashupScratchCopy != null)  			{  				int num = this.estimateProgressSourceMapCount * 100 / this.estimateProgressSourceMapsThisLayer;  				int num2 = (this.mashupScratchCopy.layerList.Count + 1) * 100;  				int num3 = this.estimateProgressLayerCount * 100 + num;  				int num4 = this.initialQueueSize;  				int num5 = this.initialQueueSize - this.renderQueue.Count;  				if (num5 < 0)  				{  					num5 = 0;  				}  				if (num5 > this.initialQueueSize)  				{  					num5 = this.initialQueueSize;  				}  				double num6 = (double)num3 * 1.0 / (double)num2 * 0.1;  				double num7 = 0.0;  				if (num4 > 0)  				{  					num7 = (double)num5 * 1.0 / (double)num4 * 0.9;  				}  				double num8 = num6 + num7;  				num8 = Math.Max(Math.Min(num8' 1.0)' 0.0);  				renderProgressBar.Minimum = 0;  				renderProgressBar.Maximum = 1000;  				renderProgressBar.Value = (int)(1000.0 * num8);  				renderProgressBar.Enabled = (this.state == RenderState.States.Rendering);  				return;  			}
Magic Number,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,UI_UpdateProgress,The following statement contains a magic number: if (this.mashupScratchCopy != null)  			{  				int num = this.estimateProgressSourceMapCount * 100 / this.estimateProgressSourceMapsThisLayer;  				int num2 = (this.mashupScratchCopy.layerList.Count + 1) * 100;  				int num3 = this.estimateProgressLayerCount * 100 + num;  				int num4 = this.initialQueueSize;  				int num5 = this.initialQueueSize - this.renderQueue.Count;  				if (num5 < 0)  				{  					num5 = 0;  				}  				if (num5 > this.initialQueueSize)  				{  					num5 = this.initialQueueSize;  				}  				double num6 = (double)num3 * 1.0 / (double)num2 * 0.1;  				double num7 = 0.0;  				if (num4 > 0)  				{  					num7 = (double)num5 * 1.0 / (double)num4 * 0.9;  				}  				double num8 = num6 + num7;  				num8 = Math.Max(Math.Min(num8' 1.0)' 0.0);  				renderProgressBar.Minimum = 0;  				renderProgressBar.Maximum = 1000;  				renderProgressBar.Value = (int)(1000.0 * num8);  				renderProgressBar.Enabled = (this.state == RenderState.States.Rendering);  				return;  			}
Magic Number,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,UI_UpdateProgress,The following statement contains a magic number: if (this.mashupScratchCopy != null)  			{  				int num = this.estimateProgressSourceMapCount * 100 / this.estimateProgressSourceMapsThisLayer;  				int num2 = (this.mashupScratchCopy.layerList.Count + 1) * 100;  				int num3 = this.estimateProgressLayerCount * 100 + num;  				int num4 = this.initialQueueSize;  				int num5 = this.initialQueueSize - this.renderQueue.Count;  				if (num5 < 0)  				{  					num5 = 0;  				}  				if (num5 > this.initialQueueSize)  				{  					num5 = this.initialQueueSize;  				}  				double num6 = (double)num3 * 1.0 / (double)num2 * 0.1;  				double num7 = 0.0;  				if (num4 > 0)  				{  					num7 = (double)num5 * 1.0 / (double)num4 * 0.9;  				}  				double num8 = num6 + num7;  				num8 = Math.Max(Math.Min(num8' 1.0)' 0.0);  				renderProgressBar.Minimum = 0;  				renderProgressBar.Maximum = 1000;  				renderProgressBar.Value = (int)(1000.0 * num8);  				renderProgressBar.Enabled = (this.state == RenderState.States.Rendering);  				return;  			}
Magic Number,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,UI_UpdateProgress,The following statement contains a magic number: if (this.mashupScratchCopy != null)  			{  				int num = this.estimateProgressSourceMapCount * 100 / this.estimateProgressSourceMapsThisLayer;  				int num2 = (this.mashupScratchCopy.layerList.Count + 1) * 100;  				int num3 = this.estimateProgressLayerCount * 100 + num;  				int num4 = this.initialQueueSize;  				int num5 = this.initialQueueSize - this.renderQueue.Count;  				if (num5 < 0)  				{  					num5 = 0;  				}  				if (num5 > this.initialQueueSize)  				{  					num5 = this.initialQueueSize;  				}  				double num6 = (double)num3 * 1.0 / (double)num2 * 0.1;  				double num7 = 0.0;  				if (num4 > 0)  				{  					num7 = (double)num5 * 1.0 / (double)num4 * 0.9;  				}  				double num8 = num6 + num7;  				num8 = Math.Max(Math.Min(num8' 1.0)' 0.0);  				renderProgressBar.Minimum = 0;  				renderProgressBar.Maximum = 1000;  				renderProgressBar.Value = (int)(1000.0 * num8);  				renderProgressBar.Enabled = (this.state == RenderState.States.Rendering);  				return;  			}
Magic Number,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,UI_UpdateProgress,The following statement contains a magic number: if (this.mashupScratchCopy != null)  			{  				int num = this.estimateProgressSourceMapCount * 100 / this.estimateProgressSourceMapsThisLayer;  				int num2 = (this.mashupScratchCopy.layerList.Count + 1) * 100;  				int num3 = this.estimateProgressLayerCount * 100 + num;  				int num4 = this.initialQueueSize;  				int num5 = this.initialQueueSize - this.renderQueue.Count;  				if (num5 < 0)  				{  					num5 = 0;  				}  				if (num5 > this.initialQueueSize)  				{  					num5 = this.initialQueueSize;  				}  				double num6 = (double)num3 * 1.0 / (double)num2 * 0.1;  				double num7 = 0.0;  				if (num4 > 0)  				{  					num7 = (double)num5 * 1.0 / (double)num4 * 0.9;  				}  				double num8 = num6 + num7;  				num8 = Math.Max(Math.Min(num8' 1.0)' 0.0);  				renderProgressBar.Minimum = 0;  				renderProgressBar.Maximum = 1000;  				renderProgressBar.Value = (int)(1000.0 * num8);  				renderProgressBar.Enabled = (this.state == RenderState.States.Rendering);  				return;  			}
Magic Number,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,UI_UpdateProgress,The following statement contains a magic number: if (this.mashupScratchCopy != null)  			{  				int num = this.estimateProgressSourceMapCount * 100 / this.estimateProgressSourceMapsThisLayer;  				int num2 = (this.mashupScratchCopy.layerList.Count + 1) * 100;  				int num3 = this.estimateProgressLayerCount * 100 + num;  				int num4 = this.initialQueueSize;  				int num5 = this.initialQueueSize - this.renderQueue.Count;  				if (num5 < 0)  				{  					num5 = 0;  				}  				if (num5 > this.initialQueueSize)  				{  					num5 = this.initialQueueSize;  				}  				double num6 = (double)num3 * 1.0 / (double)num2 * 0.1;  				double num7 = 0.0;  				if (num4 > 0)  				{  					num7 = (double)num5 * 1.0 / (double)num4 * 0.9;  				}  				double num8 = num6 + num7;  				num8 = Math.Max(Math.Min(num8' 1.0)' 0.0);  				renderProgressBar.Minimum = 0;  				renderProgressBar.Maximum = 1000;  				renderProgressBar.Value = (int)(1000.0 * num8);  				renderProgressBar.Enabled = (this.state == RenderState.States.Rendering);  				return;  			}
Magic Number,MSR.CVE.BackMaker,RenderState,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderState.cs,UI_UpdateProgress,The following statement contains a magic number: if (this.mashupScratchCopy != null)  			{  				int num = this.estimateProgressSourceMapCount * 100 / this.estimateProgressSourceMapsThisLayer;  				int num2 = (this.mashupScratchCopy.layerList.Count + 1) * 100;  				int num3 = this.estimateProgressLayerCount * 100 + num;  				int num4 = this.initialQueueSize;  				int num5 = this.initialQueueSize - this.renderQueue.Count;  				if (num5 < 0)  				{  					num5 = 0;  				}  				if (num5 > this.initialQueueSize)  				{  					num5 = this.initialQueueSize;  				}  				double num6 = (double)num3 * 1.0 / (double)num2 * 0.1;  				double num7 = 0.0;  				if (num4 > 0)  				{  					num7 = (double)num5 * 1.0 / (double)num4 * 0.9;  				}  				double num8 = num6 + num7;  				num8 = Math.Max(Math.Min(num8' 1.0)' 0.0);  				renderProgressBar.Minimum = 0;  				renderProgressBar.Maximum = 1000;  				renderProgressBar.Value = (int)(1000.0 * num8);  				renderProgressBar.Enabled = (this.state == RenderState.States.Rendering);  				return;  			}
Magic Number,MSR.CVE.BackMaker,RenderToFileControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToFileControl.cs,InitializeComponent,The following statement contains a magic number: this.textBox9.Location = new Point(3' 3);
Magic Number,MSR.CVE.BackMaker,RenderToFileControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToFileControl.cs,InitializeComponent,The following statement contains a magic number: this.textBox9.Location = new Point(3' 3);
Magic Number,MSR.CVE.BackMaker,RenderToFileControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToFileControl.cs,InitializeComponent,The following statement contains a magic number: this.textBox9.Size = new Size(67' 13);
Magic Number,MSR.CVE.BackMaker,RenderToFileControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToFileControl.cs,InitializeComponent,The following statement contains a magic number: this.textBox9.Size = new Size(67' 13);
Magic Number,MSR.CVE.BackMaker,RenderToFileControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToFileControl.cs,InitializeComponent,The following statement contains a magic number: this.textBox9.TabIndex = 12;
Magic Number,MSR.CVE.BackMaker,RenderToFileControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToFileControl.cs,InitializeComponent,The following statement contains a magic number: this.selectOutputFolderButton.Location = new Point(247' 3);
Magic Number,MSR.CVE.BackMaker,RenderToFileControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToFileControl.cs,InitializeComponent,The following statement contains a magic number: this.selectOutputFolderButton.Location = new Point(247' 3);
Magic Number,MSR.CVE.BackMaker,RenderToFileControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToFileControl.cs,InitializeComponent,The following statement contains a magic number: this.selectOutputFolderButton.Size = new Size(38' 20);
Magic Number,MSR.CVE.BackMaker,RenderToFileControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToFileControl.cs,InitializeComponent,The following statement contains a magic number: this.selectOutputFolderButton.Size = new Size(38' 20);
Magic Number,MSR.CVE.BackMaker,RenderToFileControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToFileControl.cs,InitializeComponent,The following statement contains a magic number: this.selectOutputFolderButton.TabIndex = 13;
Magic Number,MSR.CVE.BackMaker,RenderToFileControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToFileControl.cs,InitializeComponent,The following statement contains a magic number: this.outputFolderDisplayBox.Location = new Point(3' 29);
Magic Number,MSR.CVE.BackMaker,RenderToFileControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToFileControl.cs,InitializeComponent,The following statement contains a magic number: this.outputFolderDisplayBox.Location = new Point(3' 29);
Magic Number,MSR.CVE.BackMaker,RenderToFileControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToFileControl.cs,InitializeComponent,The following statement contains a magic number: this.outputFolderDisplayBox.Size = new Size(282' 20);
Magic Number,MSR.CVE.BackMaker,RenderToFileControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToFileControl.cs,InitializeComponent,The following statement contains a magic number: this.outputFolderDisplayBox.Size = new Size(282' 20);
Magic Number,MSR.CVE.BackMaker,RenderToFileControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToFileControl.cs,InitializeComponent,The following statement contains a magic number: this.outputFolderDisplayBox.TabIndex = 11;
Magic Number,MSR.CVE.BackMaker,RenderToFileControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToFileControl.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(288' 59);
Magic Number,MSR.CVE.BackMaker,RenderToFileControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToFileControl.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(288' 59);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new Point(3' 92);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new Point(3' 92);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new Size(58' 13);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new Size(58' 13);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.label4.TabIndex = 15;
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new Point(3' 62);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new Point(3' 62);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new Size(41' 13);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new Size(41' 13);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 14;
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new Point(3' 9);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new Point(3' 9);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new Size(59' 13);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new Size(59' 13);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.label5.TabIndex = 12;
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.s3PathPrefix.Location = new Point(68' 89);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.s3PathPrefix.Location = new Point(68' 89);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.s3PathPrefix.Size = new Size(277' 20);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.s3PathPrefix.Size = new Size(277' 20);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.s3PathPrefix.TabIndex = 11;
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.s3Bucket.Location = new Point(68' 59);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.s3Bucket.Location = new Point(68' 59);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.s3Bucket.Size = new Size(277' 20);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.s3Bucket.Size = new Size(277' 20);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.s3Bucket.TabIndex = 10;
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.s3CredentialsFilename.Location = new Point(68' 6);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.s3CredentialsFilename.Location = new Point(68' 6);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.s3CredentialsFilename.Size = new Size(275' 20);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.s3CredentialsFilename.Size = new Size(275' 20);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.s3CredentialsFilename.TabIndex = 8;
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.credentialsBrowseButton.Location = new Point(68' 32);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.credentialsBrowseButton.Location = new Point(68' 32);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.credentialsBrowseButton.Size = new Size(66' 20);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.credentialsBrowseButton.Size = new Size(66' 20);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.credentialsBrowseButton.TabIndex = 16;
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.editButton.Location = new Point(140' 32);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.editButton.Location = new Point(140' 32);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.editButton.Size = new Size(66' 20);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.editButton.Size = new Size(66' 20);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: this.editButton.TabIndex = 17;
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(346' 117);
Magic Number,MSR.CVE.BackMaker,RenderToS3Control,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderToS3Control.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(346' 117);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(2' 3);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(2' 3);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(272' 542);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(272' 542);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.TabIndex = 2;
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.renderOptionsPanel.Location = new System.Drawing.Point(3' 18);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.renderOptionsPanel.Location = new System.Drawing.Point(3' 18);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.renderOptionsPanel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.renderOptionsPanel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.renderOptionsPanel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.renderOptionsPanel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.renderOptionsPanel.Size = new System.Drawing.Size(266' 521);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.renderOptionsPanel.Size = new System.Drawing.Size(266' 521);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.renderProgressPanel.Location = new System.Drawing.Point(280' 12);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.renderProgressPanel.Location = new System.Drawing.Point(280' 12);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.renderProgressPanel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.renderProgressPanel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.renderProgressPanel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.renderProgressPanel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.renderProgressPanel.Size = new System.Drawing.Size(799' 533);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.renderProgressPanel.Size = new System.Drawing.Size(799' 533);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(1081' 547);
Magic Number,MSR.CVE.BackMaker,RenderWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\RenderWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(1081' 547);
Magic Number,MSR.CVE.BackMaker,S3Adaptor,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3Adaptor.cs,EncodeKeyForSignature,The following statement contains a magic number: for (int i = 0; i < key.Length; i++)  			{  				char c = key[i];  				if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9') || c == '/' || c == '.')  				{  					stringBuilder.Append(c);  				}  				else  				{  					string text = string.Format("%{0:x2}"' (int)c);  					D.Assert(text.Length == 3);  					stringBuilder.Append(text);  				}  			}
Magic Number,MSR.CVE.BackMaker,S3Adaptor,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3Adaptor.cs,BuildWebRequest,The following statement contains a magic number: UriBuilder uriBuilder = new UriBuilder("http"' "s3.amazonaws.com"' 80' objectPath);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new Point(9' 55);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new Point(9' 55);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new Size(97' 13);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new Size(97' 13);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 17;
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new Point(9' 6);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new Point(9' 6);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new Size(77' 13);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new Size(77' 13);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.label5.TabIndex = 16;
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.s3SecretAccessKey.Location = new Point(12' 71);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.s3SecretAccessKey.Location = new Point(12' 71);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.s3SecretAccessKey.Size = new Size(355' 20);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.s3SecretAccessKey.Size = new Size(355' 20);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.s3SecretAccessKey.TabIndex = 15;
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.s3AccessKeyId.Location = new Point(12' 22);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.s3AccessKeyId.Location = new Point(12' 22);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.s3AccessKeyId.Size = new Size(355' 20);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.s3AccessKeyId.Size = new Size(355' 20);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.s3AccessKeyId.TabIndex = 14;
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.saveButton.Location = new Point(292' 123);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.saveButton.Location = new Point(292' 123);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.saveButton.Size = new Size(75' 23);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.saveButton.Size = new Size(75' 23);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.saveButton.TabIndex = 18;
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Location = new Point(211' 123);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Location = new Point(211' 123);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Size = new Size(75' 23);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.Size = new Size(75' 23);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: this.cancelButton.TabIndex = 18;
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: base.ClientSize = new Size(379' 158);
Magic Number,MSR.CVE.BackMaker,S3CredentialsForm,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3CredentialsForm.cs,InitializeComponent,The following statement contains a magic number: base.ClientSize = new Size(379' 158);
Magic Number,MSR.CVE.BackMaker,S3OutputMethod,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3OutputMethod.cs,GetUri,The following statement contains a magic number: return new UriBuilder("http"' "s3.amazonaws.com"' 80' pathValue).Uri;
Magic Number,MSR.CVE.BackMaker,S3PutClosure,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\S3OutputMethod.cs,Close,The following statement contains a magic number: int num = 3;
Magic Number,MSR.CVE.BackMaker,SingleSourceUnit,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SingleSourceUnit.cs,DoWork,The following statement contains a magic number: D.Sayf(10' "SingleSourcing {0} {1}"' new object[]  			{  				this.applier.source.GetSourceMapDisplayName()'  				this.address  			});
Magic Number,MSR.CVE.BackMaker,SourceMap,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMap.cs,AutoSelectMaxZoom,The following statement contains a magic number: if (this.sourceMapRenderOptions.maxZoom == -1)  			{  				MapRectangle userBoundingBox = this.GetUserBoundingBox(mapTileSourceFactory);  				if (userBoundingBox == null)  				{  					return;  				}  				Size size = new Size(600' 600);  				LatLonZoom bestViewContaining = new MercatorCoordinateSystem().GetBestViewContaining(userBoundingBox' size);  				IntParameter intParameter = (IntParameter)mapTileSourceFactory.CreateUnwarpedSource(this).GetImageDetailPrototype(FutureFeatures.Cached).Curry(new ParamDict(new object[]  				{  					TermName.ImageDetail'  					new SizeParameter(size)  				})).Realize("SourceMap.AutoSelectMaxZoom");  				this.sourceMapRenderOptions.maxZoom = MercatorCoordinateSystem.theInstance.GetZoomRange().Constrain(bestViewContaining.zoom + intParameter.value + BuildConfig.theConfig.autoMaxZoomOffset);  			}
Magic Number,MSR.CVE.BackMaker,SourceMap,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMap.cs,AutoSelectMaxZoom,The following statement contains a magic number: if (this.sourceMapRenderOptions.maxZoom == -1)  			{  				MapRectangle userBoundingBox = this.GetUserBoundingBox(mapTileSourceFactory);  				if (userBoundingBox == null)  				{  					return;  				}  				Size size = new Size(600' 600);  				LatLonZoom bestViewContaining = new MercatorCoordinateSystem().GetBestViewContaining(userBoundingBox' size);  				IntParameter intParameter = (IntParameter)mapTileSourceFactory.CreateUnwarpedSource(this).GetImageDetailPrototype(FutureFeatures.Cached).Curry(new ParamDict(new object[]  				{  					TermName.ImageDetail'  					new SizeParameter(size)  				})).Realize("SourceMap.AutoSelectMaxZoom");  				this.sourceMapRenderOptions.maxZoom = MercatorCoordinateSystem.theInstance.GetZoomRange().Constrain(bestViewContaining.zoom + intParameter.value + BuildConfig.theConfig.autoMaxZoomOffset);  			}
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new Point(3' 0);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new Size(75' 13);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new Size(75' 13);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.mapFileURLTextBox.Location = new Point(6' 20);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.mapFileURLTextBox.Location = new Point(6' 20);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.mapFileURLTextBox.Size = new Size(300' 20);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.mapFileURLTextBox.Size = new Size(300' 20);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new Point(3' 96);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new Point(3' 96);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new Size(157' 13);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new Size(157' 13);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.mapHomePageTextBox.Location = new Point(6' 68);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.mapHomePageTextBox.Location = new Point(6' 68);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.mapHomePageTextBox.Size = new Size(300' 20);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.mapHomePageTextBox.Size = new Size(300' 20);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.mapDescriptionTextBox.Location = new Point(6' 116);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.mapDescriptionTextBox.Location = new Point(6' 116);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.mapDescriptionTextBox.Size = new Size(300' 198);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.mapDescriptionTextBox.Size = new Size(300' 198);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new Size(309' 365);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new Size(309' 365);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.panel1.TabIndex = 2;
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.textBox7.Location = new Point(6' 345);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.textBox7.Location = new Point(6' 345);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.textBox7.Size = new Size(132' 13);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.textBox7.Size = new Size(132' 13);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.textBox7.TabIndex = 9;
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.closestZoomUpDown.Location = new Point(260' 342);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.closestZoomUpDown.Location = new Point(260' 342);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.closestZoomUpDown.Size = new Size(46' 20);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.closestZoomUpDown.Size = new Size(46' 20);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.closestZoomUpDown.TabIndex = 8;
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new Point(3' 48);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new Point(3' 48);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new Size(87' 13);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new Size(87' 13);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 2;
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(309' 365);
Magic Number,MSR.CVE.BackMaker,SourceMapInfoPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapInfoPanel.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(309' 365);
Magic Number,MSR.CVE.BackMaker,SourceMapOverviewWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapOverviewWindow.cs,InitializeComponent,The following statement contains a magic number: this.viewerControl.Size = new Size(380' 351);
Magic Number,MSR.CVE.BackMaker,SourceMapOverviewWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapOverviewWindow.cs,InitializeComponent,The following statement contains a magic number: this.viewerControl.Size = new Size(380' 351);
Magic Number,MSR.CVE.BackMaker,SourceMapOverviewWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapOverviewWindow.cs,InitializeComponent,The following statement contains a magic number: base.ClientSize = new Size(380' 351);
Magic Number,MSR.CVE.BackMaker,SourceMapOverviewWindow,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapOverviewWindow.cs,InitializeComponent,The following statement contains a magic number: base.ClientSize = new Size(380' 351);
Magic Number,MSR.CVE.BackMaker,SourceMapRecord,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapRecord.cs,thumbnailForLegendFrame,The following statement contains a magic number: Array.Sort<ThumbnailRecord>(array' (ThumbnailRecord r0' ThumbnailRecord r1) => Math.Abs(Math.Max(r0.size.Width' r0.size.Height) - 200) - Math.Abs(Math.Max(r1.size.Width' r1.size.Height) - 200));
Magic Number,MSR.CVE.BackMaker,SourceMapRecord,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapRecord.cs,thumbnailForLegendFrame,The following statement contains a magic number: Array.Sort<ThumbnailRecord>(array' (ThumbnailRecord r0' ThumbnailRecord r1) => Math.Abs(Math.Max(r0.size.Width' r0.size.Height) - 200) - Math.Abs(Math.Max(r1.size.Width' r1.size.Height) - 200));
Magic Number,MSR.CVE.BackMaker,SourceMapRenderOptions,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapRenderOptions.cs,GetHashCode,The following statement contains a magic number: return this.minZoom * 131 + this.maxZoom;
Magic Number,MSR.CVE.BackMaker,SourceMapViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapViewManager.cs,DefaultReferenceMapPosition,The following statement contains a magic number: if (sourceMap.ReadyToLock())  			{  				try  				{  					ViewerControlIfc sMViewerControl = viewControl.GetSMViewerControl();  					MapRectangle bounds = sMViewerControl.GetBounds();  					WarpedMapTileSource warpedMapTileSource = mapTileSourceFactory.CreateWarpedSource(sourceMap);  					IPointTransformer sourceToDestLatLonTransformer = warpedMapTileSource.GetSourceToDestLatLonTransformer();  					MapRectangle mapRectangle = bounds.Transform(sourceToDestLatLonTransformer);  					mapRectangle = mapRectangle.ClipTo(new MapRectangle(-180.0' -360.0' 180.0' 360.0));  					return viewControl.GetVEViewerControl().GetCoordinateSystem().GetBestViewContaining(mapRectangle' sMViewerControl.Size);  				}  				catch (CorrespondencesAreSingularException)  				{  				}  				catch (InsufficientCorrespondencesException)  				{  				}  			}
Magic Number,MSR.CVE.BackMaker,SourceMapViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapViewManager.cs,DefaultReferenceMapPosition,The following statement contains a magic number: if (sourceMap.ReadyToLock())  			{  				try  				{  					ViewerControlIfc sMViewerControl = viewControl.GetSMViewerControl();  					MapRectangle bounds = sMViewerControl.GetBounds();  					WarpedMapTileSource warpedMapTileSource = mapTileSourceFactory.CreateWarpedSource(sourceMap);  					IPointTransformer sourceToDestLatLonTransformer = warpedMapTileSource.GetSourceToDestLatLonTransformer();  					MapRectangle mapRectangle = bounds.Transform(sourceToDestLatLonTransformer);  					mapRectangle = mapRectangle.ClipTo(new MapRectangle(-180.0' -360.0' 180.0' 360.0));  					return viewControl.GetVEViewerControl().GetCoordinateSystem().GetBestViewContaining(mapRectangle' sMViewerControl.Size);  				}  				catch (CorrespondencesAreSingularException)  				{  				}  				catch (InsufficientCorrespondencesException)  				{  				}  			}
Magic Number,MSR.CVE.BackMaker,SourceMapViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapViewManager.cs,DefaultReferenceMapPosition,The following statement contains a magic number: if (sourceMap.ReadyToLock())  			{  				try  				{  					ViewerControlIfc sMViewerControl = viewControl.GetSMViewerControl();  					MapRectangle bounds = sMViewerControl.GetBounds();  					WarpedMapTileSource warpedMapTileSource = mapTileSourceFactory.CreateWarpedSource(sourceMap);  					IPointTransformer sourceToDestLatLonTransformer = warpedMapTileSource.GetSourceToDestLatLonTransformer();  					MapRectangle mapRectangle = bounds.Transform(sourceToDestLatLonTransformer);  					mapRectangle = mapRectangle.ClipTo(new MapRectangle(-180.0' -360.0' 180.0' 360.0));  					return viewControl.GetVEViewerControl().GetCoordinateSystem().GetBestViewContaining(mapRectangle' sMViewerControl.Size);  				}  				catch (CorrespondencesAreSingularException)  				{  				}  				catch (InsufficientCorrespondencesException)  				{  				}  			}
Magic Number,MSR.CVE.BackMaker,SourceMapViewManager,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\SourceMapViewManager.cs,DefaultReferenceMapPosition,The following statement contains a magic number: if (sourceMap.ReadyToLock())  			{  				try  				{  					ViewerControlIfc sMViewerControl = viewControl.GetSMViewerControl();  					MapRectangle bounds = sMViewerControl.GetBounds();  					WarpedMapTileSource warpedMapTileSource = mapTileSourceFactory.CreateWarpedSource(sourceMap);  					IPointTransformer sourceToDestLatLonTransformer = warpedMapTileSource.GetSourceToDestLatLonTransformer();  					MapRectangle mapRectangle = bounds.Transform(sourceToDestLatLonTransformer);  					mapRectangle = mapRectangle.ClipTo(new MapRectangle(-180.0' -360.0' 180.0' 360.0));  					return viewControl.GetVEViewerControl().GetCoordinateSystem().GetBestViewContaining(mapRectangle' sMViewerControl.Size);  				}  				catch (CorrespondencesAreSingularException)  				{  				}  				catch (InsufficientCorrespondencesException)  				{  				}  			}
Magic Number,MSR.CVE.BackMaker,StringUtils,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\StringUtils.cs,breakLines,The following statement contains a magic number: int num = 40;
Magic Number,MSR.CVE.BackMaker,TransparencyColor,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyColor.cs,TransparencyColor,The following statement contains a magic number: this._color = new Pixel(color.r' color.g' color.b' 255);
Magic Number,MSR.CVE.BackMaker,TransparencyColor,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyColor.cs,TransparencyColor,The following statement contains a magic number: while (xMLTagReader.FindNextStartTag())  			{  				if (xMLTagReader.TagIs(Pixel.GetXMLTag()))  				{  					Pixel pixel = new Pixel(context);  					this._color = new Pixel(pixel.r' pixel.g' pixel.b' 255);  					flag = true;  				}  			}
Magic Number,MSR.CVE.BackMaker,TransparencyOptions,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyOptions.cs,AddColor,The following statement contains a magic number: TransparencyColor transparencyColor = new TransparencyColor(color' 2' 0);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.addTransparencyButton.Location = new Point(3' 95);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.addTransparencyButton.Location = new Point(3' 95);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.addTransparencyButton.Size = new Size(210' 23);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.addTransparencyButton.Size = new Size(210' 23);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.colorGrid.Location = new Point(3' 124);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.colorGrid.Location = new Point(3' 124);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.colorGrid.Size = new Size(213' 158);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.colorGrid.Size = new Size(213' 158);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.removeTransparencyButton.Location = new Point(3' 288);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.removeTransparencyButton.Location = new Point(3' 288);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.removeTransparencyButton.Size = new Size(213' 23);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.removeTransparencyButton.Size = new Size(213' 23);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.removeTransparencyButton.TabIndex = 2;
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.normalTransparencyButton.Location = new Point(3' 31);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.normalTransparencyButton.Location = new Point(3' 31);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.normalTransparencyButton.Size = new Size(182' 17);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.normalTransparencyButton.Size = new Size(182' 17);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.normalTransparencyButton.TabIndex = 3;
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.invertedTransparencyButton.Location = new Point(3' 55);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.invertedTransparencyButton.Location = new Point(3' 55);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.invertedTransparencyButton.Size = new Size(155' 17);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.invertedTransparencyButton.Size = new Size(155' 17);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.invertedTransparencyButton.TabIndex = 4;
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.noTransparencyButton.Location = new Point(3' 78);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.noTransparencyButton.Location = new Point(3' 78);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.noTransparencyButton.Size = new Size(124' 17);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.noTransparencyButton.Size = new Size(124' 17);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.noTransparencyButton.TabIndex = 5;
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.fuzzSpinner.Location = new Point(62' 321);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.fuzzSpinner.Location = new Point(62' 321);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.fuzzSpinner.Size = new Size(42' 20);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.fuzzSpinner.Size = new Size(42' 20);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.fuzzSpinner.TabIndex = 6;
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.haloSpinner.Location = new Point(165' 321);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.haloSpinner.Location = new Point(165' 321);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.haloSpinner.Size = new Size(48' 20);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.haloSpinner.Size = new Size(48' 20);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.haloSpinner.TabIndex = 7;
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new Point(0' 323);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new Size(53' 13);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new Size(53' 13);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 8;
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new Point(129' 323);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new Point(129' 323);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new Size(29' 13);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new Size(29' 13);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 9;
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.useDocumentTransparencyCheckbox.Location = new Point(3' 8);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.useDocumentTransparencyCheckbox.Location = new Point(3' 8);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.useDocumentTransparencyCheckbox.Size = new Size(159' 17);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.useDocumentTransparencyCheckbox.Size = new Size(159' 17);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: this.useDocumentTransparencyCheckbox.TabIndex = 10;
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(216' 345);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,InitializeComponent,The following statement contains a magic number: base.Size = new Size(216' 345);
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,update,The following statement contains a magic number: if (this.sourceMap != null)  			{  				foreach (TransparencyColor current in this.sourceMap.transparencyOptions.colorList)  				{  					DataGridViewRow dataGridViewRow = new DataGridViewRow();  					Bitmap bitmap = new Bitmap(40' 12);  					Graphics graphics = Graphics.FromImage(bitmap);  					graphics.FillRectangle(new SolidBrush(current.color.ToColor())' new Rectangle(new Point(0' 0)' bitmap.Size));  					dataGridViewRow.CreateCells(this.colorGrid' new object[]  					{  						bitmap'  						current.fuzz.ToString()'  						current.halo.ToString()  					});  					dataGridViewRow.Tag = current;  					this.colorGrid.Rows.Add(dataGridViewRow);  				}  			}
Magic Number,MSR.CVE.BackMaker,TransparencyPanel,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\TransparencyPanel.cs,update,The following statement contains a magic number: if (this.sourceMap != null)  			{  				foreach (TransparencyColor current in this.sourceMap.transparencyOptions.colorList)  				{  					DataGridViewRow dataGridViewRow = new DataGridViewRow();  					Bitmap bitmap = new Bitmap(40' 12);  					Graphics graphics = Graphics.FromImage(bitmap);  					graphics.FillRectangle(new SolidBrush(current.color.ToColor())' new Rectangle(new Point(0' 0)' bitmap.Size));  					dataGridViewRow.CreateCells(this.colorGrid' new object[]  					{  						bitmap'  						current.fuzz.ToString()'  						current.halo.ToString()  					});  					dataGridViewRow.Tag = current;  					this.colorGrid.Rows.Add(dataGridViewRow);  				}  			}
Magic Number,MSR.CVE.BackMaker,UserRegionViewController,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\UserRegionViewController.cs,RemoveEnabled,The following statement contains a magic number: return this.GetUserRegion().Count > 3;
Magic Number,MSR.CVE.BackMaker,UserRegionViewController,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\UserRegionViewController.cs,Invalidate,The following statement contains a magic number: AsyncRef asyncRef = (AsyncRef)this.displayableSource.GetUserBounds(this.latentRegionHolder' (FutureFeatures)7).Realize("UserRegionViewController.Invalidate");
Magic Number,MSR.CVE.BackMaker,VENamingScheme,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\VENamingScheme.cs,GetQuadKey,The following statement contains a magic number: for (int i = ta.ZoomLevel; i > 0; i--)  			{  				int num = 0;  				int num2 = 1 << i - 1;  				if ((ta.TileX & num2) != 0)  				{  					num++;  				}  				if ((ta.TileY & num2) != 0)  				{  					num += 2;  				}  				text += num.ToString();  			}
Magic Number,MSR.CVE.BackMaker,VEUrlFormat,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\VEUrlFormat.cs,VEUrlFormat,The following statement contains a magic number: if (BuildConfig.theConfig.veFormatUpdateURL != null)  			{  				for (int i = 0; i < 3; i++)  				{  					this.TryOneFetchFormatString();  					if (this.formatString != null)  					{  						break;  					}  				}  				if (this.formatString == null)  				{  					D.Sayf(0' "Dynamic VEUrlFormat unavailable at {0}"' new object[]  					{  						BuildConfig.theConfig.veFormatUpdateURL  					});  				}  			}
Magic Number,MSR.CVE.BackMaker,VEUrlFormat,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\VEUrlFormat.cs,VEUrlFormat,The following statement contains a magic number: if (this.formatString == null)  			{  				this.formatString = "http://{0}{1}.ortho.tiles.virtualearth.net/tiles/{0}{2}.{3}?g={4}";  				this.generationNumber = 66;  			}
Magic Number,MSR.CVE.BackMaker,VEUrlFormat,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\VEUrlFormat.cs,TryOneFetchFormatString,The following statement contains a magic number: try  			{  				HttpWebRequest httpWebRequest = (HttpWebRequest)WebRequest.Create(BuildConfig.theConfig.veFormatUpdateURL);  				httpWebRequest.Timeout = 5000;  				HttpWebResponse httpWebResponse;  				try  				{  					httpWebResponse = (HttpWebResponse)httpWebRequest.GetResponse();  				}  				catch (WebException)  				{  					return;  				}  				if (httpWebResponse.StatusCode == HttpStatusCode.OK)  				{  					Stream responseStream = httpWebResponse.GetResponseStream();  					XmlTextReader reader = new XmlTextReader(responseStream);  					MashupParseContext mashupParseContext = new MashupParseContext(reader);  					using (mashupParseContext)  					{  						while (mashupParseContext.reader.Read())  						{  							if (mashupParseContext.reader.NodeType == XmlNodeType.Element && mashupParseContext.reader.Name == "VEUrlFormat")  							{  								XMLTagReader xMLTagReader = mashupParseContext.NewTagReader("VEUrlFormat");  								this.formatString = mashupParseContext.GetRequiredAttribute("FormatString");  								this.generationNumber = mashupParseContext.GetRequiredAttributeInt("GenerationNumber");  								xMLTagReader.SkipAllSubTags();  								break;  							}  						}  						mashupParseContext.Dispose();  					}  				}  			}  			catch (Exception ex)  			{  				D.Sayf(0' "VEUrlFormat fetch failed with unexpected {0}"' new object[]  				{  					ex  				});  			}
Magic Number,MSR.CVE.BackMaker,VEUrlFormat,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\VEUrlFormat.cs,UpdateGenerationNumber,The following statement contains a magic number: for (int i = 0; i < 3; i++)  			{  				try  				{  					this.generationNumber = this.TryOneFetchGenerationNumber();  					break;  				}  				catch (Exception ex)  				{  					D.Sayf(0' "VEUrlFormat fetch failed with unexpected {0}"' new object[]  					{  						ex  					});  				}  			}
Magic Number,MSR.CVE.BackMaker,VEUrlFormat,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\VEUrlFormat.cs,TryOneFetchGenerationNumber,The following statement contains a magic number: httpWebRequest.Timeout = 5000;
Magic Number,MSR.CVE.BackMaker,VEUrlFormat,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\VEUrlFormat.cs,TryOneFetchGenerationNumber,The following statement contains a magic number: byte[] array = new byte[1000];
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,OnMouseWheel,The following statement contains a magic number: D.Say(3' string.Format("Zooming -- mousedelta={0}"' e.Delta));
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,OnMouseWheel,The following statement contains a magic number: this.zoom(e.Delta / 120);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,ScreenCenter,The following statement contains a magic number: return new Point(base.Size.Width / 2' base.Size.Height / 2);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,ScreenCenter,The following statement contains a magic number: return new Point(base.Size.Width / 2' base.Size.Height / 2);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,MapPositionToPoint,The following statement contains a magic number: PointF result = new PointF((float)(base.Width / 2 + translationInPixels.X)' (float)(base.Height / 2 + translationInPixels.Y));
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,MapPositionToPoint,The following statement contains a magic number: PointF result = new PointF((float)(base.Width / 2 + translationInPixels.X)' (float)(base.Height / 2 + translationInPixels.Y));
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,DrawMarker,The following statement contains a magic number: double num = 24.0;
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,DrawMarker,The following statement contains a magic number: double num2 = 3.0;
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,DrawMarker,The following statement contains a magic number: int num3 = 3;
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,DrawErrorPosition,The following statement contains a magic number: RectangleF rectangleF = new RectangleF((float)(e.ClipRectangle.X - e.ClipRectangle.Width * 2)' (float)(e.ClipRectangle.Y - e.ClipRectangle.Height * 2)' (float)(e.ClipRectangle.Width * 5)' (float)(e.ClipRectangle.Height * 5));
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,DrawErrorPosition,The following statement contains a magic number: RectangleF rectangleF = new RectangleF((float)(e.ClipRectangle.X - e.ClipRectangle.Width * 2)' (float)(e.ClipRectangle.Y - e.ClipRectangle.Height * 2)' (float)(e.ClipRectangle.Width * 5)' (float)(e.ClipRectangle.Height * 5));
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,DrawErrorPosition,The following statement contains a magic number: RectangleF rectangleF = new RectangleF((float)(e.ClipRectangle.X - e.ClipRectangle.Width * 2)' (float)(e.ClipRectangle.Y - e.ClipRectangle.Height * 2)' (float)(e.ClipRectangle.Width * 5)' (float)(e.ClipRectangle.Height * 5));
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,DrawErrorPosition,The following statement contains a magic number: RectangleF rectangleF = new RectangleF((float)(e.ClipRectangle.X - e.ClipRectangle.Width * 2)' (float)(e.ClipRectangle.Y - e.ClipRectangle.Height * 2)' (float)(e.ClipRectangle.Width * 5)' (float)(e.ClipRectangle.Height * 5));
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,PaintGraphics,The following statement contains a magic number: if (MapDrawingOption.IsEnabled(this.ShowCrosshairs))  			{  				Pen pen = new Pen(Color.Yellow);  				Pen[] array = new Pen[]  				{  					pen'  					new Pen(Color.Black)  					{  						DashStyle = DashStyle.Dash  					}  				};  				for (int i = 0; i < array.Length; i++)  				{  					Pen pen2 = array[i];  					e.Graphics.DrawLine(pen2' 0' base.Size.Height / 2' base.Size.Width' base.Size.Height / 2);  					e.Graphics.DrawLine(pen2' base.Size.Width / 2' 0' base.Size.Width / 2' base.Size.Height);  				}  			}
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,PaintGraphics,The following statement contains a magic number: if (MapDrawingOption.IsEnabled(this.ShowCrosshairs))  			{  				Pen pen = new Pen(Color.Yellow);  				Pen[] array = new Pen[]  				{  					pen'  					new Pen(Color.Black)  					{  						DashStyle = DashStyle.Dash  					}  				};  				for (int i = 0; i < array.Length; i++)  				{  					Pen pen2 = array[i];  					e.Graphics.DrawLine(pen2' 0' base.Size.Height / 2' base.Size.Width' base.Size.Height / 2);  					e.Graphics.DrawLine(pen2' base.Size.Width / 2' 0' base.Size.Width / 2' base.Size.Height);  				}  			}
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,PaintGraphics,The following statement contains a magic number: if (MapDrawingOption.IsEnabled(this.ShowCrosshairs))  			{  				Pen pen = new Pen(Color.Yellow);  				Pen[] array = new Pen[]  				{  					pen'  					new Pen(Color.Black)  					{  						DashStyle = DashStyle.Dash  					}  				};  				for (int i = 0; i < array.Length; i++)  				{  					Pen pen2 = array[i];  					e.Graphics.DrawLine(pen2' 0' base.Size.Height / 2' base.Size.Width' base.Size.Height / 2);  					e.Graphics.DrawLine(pen2' base.Size.Width / 2' 0' base.Size.Width / 2' base.Size.Height);  				}  			}
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,PaintGraphics,The following statement contains a magic number: if (MapDrawingOption.IsEnabled(this.ShowCrosshairs))  			{  				Pen pen = new Pen(Color.Yellow);  				Pen[] array = new Pen[]  				{  					pen'  					new Pen(Color.Black)  					{  						DashStyle = DashStyle.Dash  					}  				};  				for (int i = 0; i < array.Length; i++)  				{  					Pen pen2 = array[i];  					e.Graphics.DrawLine(pen2' 0' base.Size.Height / 2' base.Size.Width' base.Size.Height / 2);  					e.Graphics.DrawLine(pen2' base.Size.Width / 2' 0' base.Size.Width / 2' base.Size.Height);  				}  			}
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,AssembleLayer,The following statement contains a magic number: try  			{  				asyncRef = (AsyncRef)tileSource.GetUserBounds(null' (FutureFeatures)7).Realize("ViewerControl.PaintLayer boundsRef");  			}  			catch (Exception ex)  			{  				ViewerControl.MessagePainter item = new ViewerControl.MessagePainter(stackOrder * 12' BigDebugKnob.theKnob.debugFeaturesEnabled ? ex.ToString() : "X"' stackOrder == 0);  				foreach (TileDisplayDescriptor current in tileArrayDescriptor)  				{  					list.Add(new ViewerControl.PaintKit(current.paintLocation)  					{  						annotations =   						{  							item  						}  					});  				}  				return list;  			}
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,AssembleLayer,The following statement contains a magic number: try  			{  				asyncRef = (AsyncRef)tileSource.GetUserBounds(null' (FutureFeatures)7).Realize("ViewerControl.PaintLayer boundsRef");  			}  			catch (Exception ex)  			{  				ViewerControl.MessagePainter item = new ViewerControl.MessagePainter(stackOrder * 12' BigDebugKnob.theKnob.debugFeaturesEnabled ? ex.ToString() : "X"' stackOrder == 0);  				foreach (TileDisplayDescriptor current in tileArrayDescriptor)  				{  					list.Add(new ViewerControl.PaintKit(current.paintLocation)  					{  						annotations =   						{  							item  						}  					});  				}  				return list;  			}
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,AssembleLayer,The following statement contains a magic number: if (asyncRef.present == null)  			{  				asyncRef.AddCallback(new AsyncRecord.CompleteCallback(this.BoundsRefAvailable));  				asyncRef.SetInterest(524290);  			}
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,AssembleLayer,The following statement contains a magic number: foreach (TileDisplayDescriptor current2 in tileArrayDescriptor)  			{  				ViewerControl.PaintKit paintKit = new ViewerControl.PaintKit(current2.paintLocation);  				D.Sayf(10' "count {0} tdd {1}"' new object[]  				{  					num'  					current2.tileAddress  				});  				num++;  				if (e.SynchronousTiles)  				{  					D.Sayf(0' "PaintLayer({0}' tdd.ta={1})"' new object[]  					{  						tileSource.GetHashCode()'  						current2.tileAddress  					});  				}  				bool arg_1F5_0 = e.SynchronousTiles;  				Present present = tileSource.GetImagePrototype(null' (FutureFeatures)15).Curry(new ParamDict(new object[]  				{  					TermName.TileAddress'  					current2.tileAddress  				})).Realize("ViewerControl.PaintLayer imageAsyncRef");  				AsyncRef asyncRef2 = (AsyncRef)present;  				Rectangle rectangle = Rectangle.Intersect(e.ClipRectangle' current2.paintLocation);  				int interest = rectangle.Height * rectangle.Width + 524296;  				asyncRef2.SetInterest(interest);  				if (asyncRef2.present == null)  				{  					ViewerControl.AsyncNotifier @object = new ViewerControl.AsyncNotifier(this);  					asyncRef2.AddCallback(new AsyncRecord.CompleteCallback(@object.AsyncRecordComplete));  				}  				this.activeTiles.Add(asyncRef2);  				asyncRef2 = (AsyncRef)asyncRef2.Duplicate("ViewerControl.PaintLayer");  				if (e.SynchronousTiles)  				{  					D.Assert(false' "unimpl");  				}  				if (asyncRef2.present == null)  				{  					D.Assert(!e.SynchronousTiles);  				}  				bool flag;  				if (asyncRef2.present != null && asyncRef2.present is ImageRef)  				{  					flag = false;  					ImageRef imageRef = (ImageRef)asyncRef2.present.Duplicate("tpc");  					paintKit.meatyParts.Add(new ViewerControl.ImagePainter(imageRef' clipRegion));  				}  				else  				{  					if (asyncRef2.present != null && asyncRef2.present is BeyondImageBounds)  					{  						flag = false;  					}  					else  					{  						if (asyncRef2.present != null && asyncRef2.present is PresentFailureCode)  						{  							flag = false;  							PresentFailureCode presentFailureCode = (PresentFailureCode)asyncRef2.present;  							ViewerControl.MessagePainter item2 = new ViewerControl.MessagePainter(stackOrder * 12' BigDebugKnob.theKnob.debugFeaturesEnabled ? StringUtils.breakLines(presentFailureCode.ToString()) : "X"' stackOrder == 0);  							paintKit.annotations.Add(item2);  						}  						else  						{  							flag = true;  							ViewerControl.MessagePainter item3 = new ViewerControl.MessagePainter(stackOrder * 12' stackOrder.ToString()' stackOrder == 0);  							if (stackOrder == 0)  							{  								paintKit.meatyParts.Add(item3);  							}  							else  							{  								paintKit.annotations.Add(item3);  							}  						}  					}  				}  				this.tilesRequired++;  				if (!flag)  				{  					this.tilesAvailable++;  				}  				if ((flag && stackOrder == 0) || MapDrawingOption.IsEnabled(this.ShowTileBoundaries))  				{  					paintKit.annotations.Add(new ViewerControl.TileBoundaryPainter());  				}  				if (MapDrawingOption.IsEnabled(this.ShowTileNames))  				{  					paintKit.annotations.Add(new ViewerControl.TileNamePainter(current2.tileAddress.ToString()));  				}  				asyncRef2.Dispose();  				list.Add(paintKit);  			}
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,AssembleLayer,The following statement contains a magic number: foreach (TileDisplayDescriptor current2 in tileArrayDescriptor)  			{  				ViewerControl.PaintKit paintKit = new ViewerControl.PaintKit(current2.paintLocation);  				D.Sayf(10' "count {0} tdd {1}"' new object[]  				{  					num'  					current2.tileAddress  				});  				num++;  				if (e.SynchronousTiles)  				{  					D.Sayf(0' "PaintLayer({0}' tdd.ta={1})"' new object[]  					{  						tileSource.GetHashCode()'  						current2.tileAddress  					});  				}  				bool arg_1F5_0 = e.SynchronousTiles;  				Present present = tileSource.GetImagePrototype(null' (FutureFeatures)15).Curry(new ParamDict(new object[]  				{  					TermName.TileAddress'  					current2.tileAddress  				})).Realize("ViewerControl.PaintLayer imageAsyncRef");  				AsyncRef asyncRef2 = (AsyncRef)present;  				Rectangle rectangle = Rectangle.Intersect(e.ClipRectangle' current2.paintLocation);  				int interest = rectangle.Height * rectangle.Width + 524296;  				asyncRef2.SetInterest(interest);  				if (asyncRef2.present == null)  				{  					ViewerControl.AsyncNotifier @object = new ViewerControl.AsyncNotifier(this);  					asyncRef2.AddCallback(new AsyncRecord.CompleteCallback(@object.AsyncRecordComplete));  				}  				this.activeTiles.Add(asyncRef2);  				asyncRef2 = (AsyncRef)asyncRef2.Duplicate("ViewerControl.PaintLayer");  				if (e.SynchronousTiles)  				{  					D.Assert(false' "unimpl");  				}  				if (asyncRef2.present == null)  				{  					D.Assert(!e.SynchronousTiles);  				}  				bool flag;  				if (asyncRef2.present != null && asyncRef2.present is ImageRef)  				{  					flag = false;  					ImageRef imageRef = (ImageRef)asyncRef2.present.Duplicate("tpc");  					paintKit.meatyParts.Add(new ViewerControl.ImagePainter(imageRef' clipRegion));  				}  				else  				{  					if (asyncRef2.present != null && asyncRef2.present is BeyondImageBounds)  					{  						flag = false;  					}  					else  					{  						if (asyncRef2.present != null && asyncRef2.present is PresentFailureCode)  						{  							flag = false;  							PresentFailureCode presentFailureCode = (PresentFailureCode)asyncRef2.present;  							ViewerControl.MessagePainter item2 = new ViewerControl.MessagePainter(stackOrder * 12' BigDebugKnob.theKnob.debugFeaturesEnabled ? StringUtils.breakLines(presentFailureCode.ToString()) : "X"' stackOrder == 0);  							paintKit.annotations.Add(item2);  						}  						else  						{  							flag = true;  							ViewerControl.MessagePainter item3 = new ViewerControl.MessagePainter(stackOrder * 12' stackOrder.ToString()' stackOrder == 0);  							if (stackOrder == 0)  							{  								paintKit.meatyParts.Add(item3);  							}  							else  							{  								paintKit.annotations.Add(item3);  							}  						}  					}  				}  				this.tilesRequired++;  				if (!flag)  				{  					this.tilesAvailable++;  				}  				if ((flag && stackOrder == 0) || MapDrawingOption.IsEnabled(this.ShowTileBoundaries))  				{  					paintKit.annotations.Add(new ViewerControl.TileBoundaryPainter());  				}  				if (MapDrawingOption.IsEnabled(this.ShowTileNames))  				{  					paintKit.annotations.Add(new ViewerControl.TileNamePainter(current2.tileAddress.ToString()));  				}  				asyncRef2.Dispose();  				list.Add(paintKit);  			}
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,AssembleLayer,The following statement contains a magic number: foreach (TileDisplayDescriptor current2 in tileArrayDescriptor)  			{  				ViewerControl.PaintKit paintKit = new ViewerControl.PaintKit(current2.paintLocation);  				D.Sayf(10' "count {0} tdd {1}"' new object[]  				{  					num'  					current2.tileAddress  				});  				num++;  				if (e.SynchronousTiles)  				{  					D.Sayf(0' "PaintLayer({0}' tdd.ta={1})"' new object[]  					{  						tileSource.GetHashCode()'  						current2.tileAddress  					});  				}  				bool arg_1F5_0 = e.SynchronousTiles;  				Present present = tileSource.GetImagePrototype(null' (FutureFeatures)15).Curry(new ParamDict(new object[]  				{  					TermName.TileAddress'  					current2.tileAddress  				})).Realize("ViewerControl.PaintLayer imageAsyncRef");  				AsyncRef asyncRef2 = (AsyncRef)present;  				Rectangle rectangle = Rectangle.Intersect(e.ClipRectangle' current2.paintLocation);  				int interest = rectangle.Height * rectangle.Width + 524296;  				asyncRef2.SetInterest(interest);  				if (asyncRef2.present == null)  				{  					ViewerControl.AsyncNotifier @object = new ViewerControl.AsyncNotifier(this);  					asyncRef2.AddCallback(new AsyncRecord.CompleteCallback(@object.AsyncRecordComplete));  				}  				this.activeTiles.Add(asyncRef2);  				asyncRef2 = (AsyncRef)asyncRef2.Duplicate("ViewerControl.PaintLayer");  				if (e.SynchronousTiles)  				{  					D.Assert(false' "unimpl");  				}  				if (asyncRef2.present == null)  				{  					D.Assert(!e.SynchronousTiles);  				}  				bool flag;  				if (asyncRef2.present != null && asyncRef2.present is ImageRef)  				{  					flag = false;  					ImageRef imageRef = (ImageRef)asyncRef2.present.Duplicate("tpc");  					paintKit.meatyParts.Add(new ViewerControl.ImagePainter(imageRef' clipRegion));  				}  				else  				{  					if (asyncRef2.present != null && asyncRef2.present is BeyondImageBounds)  					{  						flag = false;  					}  					else  					{  						if (asyncRef2.present != null && asyncRef2.present is PresentFailureCode)  						{  							flag = false;  							PresentFailureCode presentFailureCode = (PresentFailureCode)asyncRef2.present;  							ViewerControl.MessagePainter item2 = new ViewerControl.MessagePainter(stackOrder * 12' BigDebugKnob.theKnob.debugFeaturesEnabled ? StringUtils.breakLines(presentFailureCode.ToString()) : "X"' stackOrder == 0);  							paintKit.annotations.Add(item2);  						}  						else  						{  							flag = true;  							ViewerControl.MessagePainter item3 = new ViewerControl.MessagePainter(stackOrder * 12' stackOrder.ToString()' stackOrder == 0);  							if (stackOrder == 0)  							{  								paintKit.meatyParts.Add(item3);  							}  							else  							{  								paintKit.annotations.Add(item3);  							}  						}  					}  				}  				this.tilesRequired++;  				if (!flag)  				{  					this.tilesAvailable++;  				}  				if ((flag && stackOrder == 0) || MapDrawingOption.IsEnabled(this.ShowTileBoundaries))  				{  					paintKit.annotations.Add(new ViewerControl.TileBoundaryPainter());  				}  				if (MapDrawingOption.IsEnabled(this.ShowTileNames))  				{  					paintKit.annotations.Add(new ViewerControl.TileNamePainter(current2.tileAddress.ToString()));  				}  				asyncRef2.Dispose();  				list.Add(paintKit);  			}
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,AssembleLayer,The following statement contains a magic number: foreach (TileDisplayDescriptor current2 in tileArrayDescriptor)  			{  				ViewerControl.PaintKit paintKit = new ViewerControl.PaintKit(current2.paintLocation);  				D.Sayf(10' "count {0} tdd {1}"' new object[]  				{  					num'  					current2.tileAddress  				});  				num++;  				if (e.SynchronousTiles)  				{  					D.Sayf(0' "PaintLayer({0}' tdd.ta={1})"' new object[]  					{  						tileSource.GetHashCode()'  						current2.tileAddress  					});  				}  				bool arg_1F5_0 = e.SynchronousTiles;  				Present present = tileSource.GetImagePrototype(null' (FutureFeatures)15).Curry(new ParamDict(new object[]  				{  					TermName.TileAddress'  					current2.tileAddress  				})).Realize("ViewerControl.PaintLayer imageAsyncRef");  				AsyncRef asyncRef2 = (AsyncRef)present;  				Rectangle rectangle = Rectangle.Intersect(e.ClipRectangle' current2.paintLocation);  				int interest = rectangle.Height * rectangle.Width + 524296;  				asyncRef2.SetInterest(interest);  				if (asyncRef2.present == null)  				{  					ViewerControl.AsyncNotifier @object = new ViewerControl.AsyncNotifier(this);  					asyncRef2.AddCallback(new AsyncRecord.CompleteCallback(@object.AsyncRecordComplete));  				}  				this.activeTiles.Add(asyncRef2);  				asyncRef2 = (AsyncRef)asyncRef2.Duplicate("ViewerControl.PaintLayer");  				if (e.SynchronousTiles)  				{  					D.Assert(false' "unimpl");  				}  				if (asyncRef2.present == null)  				{  					D.Assert(!e.SynchronousTiles);  				}  				bool flag;  				if (asyncRef2.present != null && asyncRef2.present is ImageRef)  				{  					flag = false;  					ImageRef imageRef = (ImageRef)asyncRef2.present.Duplicate("tpc");  					paintKit.meatyParts.Add(new ViewerControl.ImagePainter(imageRef' clipRegion));  				}  				else  				{  					if (asyncRef2.present != null && asyncRef2.present is BeyondImageBounds)  					{  						flag = false;  					}  					else  					{  						if (asyncRef2.present != null && asyncRef2.present is PresentFailureCode)  						{  							flag = false;  							PresentFailureCode presentFailureCode = (PresentFailureCode)asyncRef2.present;  							ViewerControl.MessagePainter item2 = new ViewerControl.MessagePainter(stackOrder * 12' BigDebugKnob.theKnob.debugFeaturesEnabled ? StringUtils.breakLines(presentFailureCode.ToString()) : "X"' stackOrder == 0);  							paintKit.annotations.Add(item2);  						}  						else  						{  							flag = true;  							ViewerControl.MessagePainter item3 = new ViewerControl.MessagePainter(stackOrder * 12' stackOrder.ToString()' stackOrder == 0);  							if (stackOrder == 0)  							{  								paintKit.meatyParts.Add(item3);  							}  							else  							{  								paintKit.annotations.Add(item3);  							}  						}  					}  				}  				this.tilesRequired++;  				if (!flag)  				{  					this.tilesAvailable++;  				}  				if ((flag && stackOrder == 0) || MapDrawingOption.IsEnabled(this.ShowTileBoundaries))  				{  					paintKit.annotations.Add(new ViewerControl.TileBoundaryPainter());  				}  				if (MapDrawingOption.IsEnabled(this.ShowTileNames))  				{  					paintKit.annotations.Add(new ViewerControl.TileNamePainter(current2.tileAddress.ToString()));  				}  				asyncRef2.Dispose();  				list.Add(paintKit);  			}
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,AssembleLayer,The following statement contains a magic number: foreach (TileDisplayDescriptor current2 in tileArrayDescriptor)  			{  				ViewerControl.PaintKit paintKit = new ViewerControl.PaintKit(current2.paintLocation);  				D.Sayf(10' "count {0} tdd {1}"' new object[]  				{  					num'  					current2.tileAddress  				});  				num++;  				if (e.SynchronousTiles)  				{  					D.Sayf(0' "PaintLayer({0}' tdd.ta={1})"' new object[]  					{  						tileSource.GetHashCode()'  						current2.tileAddress  					});  				}  				bool arg_1F5_0 = e.SynchronousTiles;  				Present present = tileSource.GetImagePrototype(null' (FutureFeatures)15).Curry(new ParamDict(new object[]  				{  					TermName.TileAddress'  					current2.tileAddress  				})).Realize("ViewerControl.PaintLayer imageAsyncRef");  				AsyncRef asyncRef2 = (AsyncRef)present;  				Rectangle rectangle = Rectangle.Intersect(e.ClipRectangle' current2.paintLocation);  				int interest = rectangle.Height * rectangle.Width + 524296;  				asyncRef2.SetInterest(interest);  				if (asyncRef2.present == null)  				{  					ViewerControl.AsyncNotifier @object = new ViewerControl.AsyncNotifier(this);  					asyncRef2.AddCallback(new AsyncRecord.CompleteCallback(@object.AsyncRecordComplete));  				}  				this.activeTiles.Add(asyncRef2);  				asyncRef2 = (AsyncRef)asyncRef2.Duplicate("ViewerControl.PaintLayer");  				if (e.SynchronousTiles)  				{  					D.Assert(false' "unimpl");  				}  				if (asyncRef2.present == null)  				{  					D.Assert(!e.SynchronousTiles);  				}  				bool flag;  				if (asyncRef2.present != null && asyncRef2.present is ImageRef)  				{  					flag = false;  					ImageRef imageRef = (ImageRef)asyncRef2.present.Duplicate("tpc");  					paintKit.meatyParts.Add(new ViewerControl.ImagePainter(imageRef' clipRegion));  				}  				else  				{  					if (asyncRef2.present != null && asyncRef2.present is BeyondImageBounds)  					{  						flag = false;  					}  					else  					{  						if (asyncRef2.present != null && asyncRef2.present is PresentFailureCode)  						{  							flag = false;  							PresentFailureCode presentFailureCode = (PresentFailureCode)asyncRef2.present;  							ViewerControl.MessagePainter item2 = new ViewerControl.MessagePainter(stackOrder * 12' BigDebugKnob.theKnob.debugFeaturesEnabled ? StringUtils.breakLines(presentFailureCode.ToString()) : "X"' stackOrder == 0);  							paintKit.annotations.Add(item2);  						}  						else  						{  							flag = true;  							ViewerControl.MessagePainter item3 = new ViewerControl.MessagePainter(stackOrder * 12' stackOrder.ToString()' stackOrder == 0);  							if (stackOrder == 0)  							{  								paintKit.meatyParts.Add(item3);  							}  							else  							{  								paintKit.annotations.Add(item3);  							}  						}  					}  				}  				this.tilesRequired++;  				if (!flag)  				{  					this.tilesAvailable++;  				}  				if ((flag && stackOrder == 0) || MapDrawingOption.IsEnabled(this.ShowTileBoundaries))  				{  					paintKit.annotations.Add(new ViewerControl.TileBoundaryPainter());  				}  				if (MapDrawingOption.IsEnabled(this.ShowTileNames))  				{  					paintKit.annotations.Add(new ViewerControl.TileNamePainter(current2.tileAddress.ToString()));  				}  				asyncRef2.Dispose();  				list.Add(paintKit);  			}
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,GetBaseLayerCenterPixel,The following statement contains a magic number: int num = base.Size.Width / 2;
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,GetBaseLayerCenterPixel,The following statement contains a magic number: int num2 = base.Size.Height / 2;
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,GetBaseLayerCenterPixel,The following statement contains a magic number: foreach (TileDisplayDescriptor current in tileArrayDescriptor)  			{  				Rectangle paintLocation = current.paintLocation;  				if (paintLocation.Left <= num)  				{  					Rectangle paintLocation2 = current.paintLocation;  					if (paintLocation2.Right > num)  					{  						Rectangle paintLocation3 = current.paintLocation;  						if (paintLocation3.Top <= num2)  						{  							Rectangle paintLocation4 = current.paintLocation;  							if (paintLocation4.Bottom > num2)  							{  								int arg_D1_0 = num;  								Rectangle paintLocation5 = current.paintLocation;  								int x = arg_D1_0 - paintLocation5.Left;  								int arg_E6_0 = num2;  								Rectangle paintLocation6 = current.paintLocation;  								int y = arg_E6_0 - paintLocation6.Top;  								Present present = displayableSource.GetImagePrototype(null' (FutureFeatures)19).Curry(new ParamDict(new object[]  								{  									TermName.TileAddress'  									current.tileAddress  								})).Realize("ViewerControl.GetBaseLayerCenterPixel imageRef");  								Pixel result;  								if (!(present is ImageRef))  								{  									result = new UndefinedPixel();  									return result;  								}  								ImageRef imageRef = (ImageRef)present;  								GDIBigLockedImage image;  								Monitor.Enter(image = imageRef.image);  								Pixel pixel2;  								try  								{  									Image image2 = imageRef.image.IPromiseIAmHoldingGDISLockSoPleaseGiveMeTheImage();  									Bitmap bitmap = (Bitmap)image2;  									Color pixel = bitmap.GetPixel(x' y);  									pixel2 = new Pixel(pixel);  								}  								finally  								{  									Monitor.Exit(image);  								}  								imageRef.Dispose();  								result = pixel2;  								return result;  							}  						}  					}  				}  			}
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.zoomOutButton.Location = new System.Drawing.Point(242' 39);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.zoomOutButton.Location = new System.Drawing.Point(242' 39);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.zoomOutButton.Size = new System.Drawing.Size(82' 23);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.zoomOutButton.Size = new System.Drawing.Size(82' 23);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.zoomOutButton.TabIndex = 9;
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.zoomInButton.Location = new System.Drawing.Point(242' 68);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.zoomInButton.Location = new System.Drawing.Point(242' 68);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.zoomInButton.Size = new System.Drawing.Size(82' 23);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.zoomInButton.Size = new System.Drawing.Size(82' 23);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.zoomInButton.TabIndex = 10;
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.creditsTextBox.Location = new System.Drawing.Point(330' 34);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.creditsTextBox.Location = new System.Drawing.Point(330' 34);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.creditsTextBox.Size = new System.Drawing.Size(115' 32);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.creditsTextBox.Size = new System.Drawing.Size(115' 32);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.creditsTextBox.TabIndex = 12;
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.zenButton.Location = new System.Drawing.Point(242' 10);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.zenButton.Location = new System.Drawing.Point(242' 10);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.zenButton.Size = new System.Drawing.Size(82' 23);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.zenButton.Size = new System.Drawing.Size(82' 23);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.zenButton.TabIndex = 13;
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.displayProgressBar.Location = new System.Drawing.Point(330' 14);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.displayProgressBar.Location = new System.Drawing.Point(330' 14);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.displayProgressBar.Size = new System.Drawing.Size(115' 19);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.displayProgressBar.Size = new System.Drawing.Size(115' 19);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.displayProgressBar.TabIndex = 14;
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.llzBox.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.llzBox.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.llzBox.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.llzBox.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.llzBox.Size = new System.Drawing.Size(456' 95);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.llzBox.Size = new System.Drawing.Size(456' 95);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.llzBox.TabIndex = 11;
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(456' 615);
Magic Number,MSR.CVE.BackMaker,ViewerControl,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(456' 615);
Magic Number,MSR.CVE.BackMaker,TileNamePainter,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,PaintTile,The following statement contains a magic number: PointF point = new Point(paintLocation.X + 20' paintLocation.Y + 8);
Magic Number,MSR.CVE.BackMaker,TileNamePainter,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,PaintTile,The following statement contains a magic number: PointF point = new Point(paintLocation.X + 20' paintLocation.Y + 8);
Magic Number,MSR.CVE.BackMaker,TileNamePainter,C:\repos\radioman_greatmaps\Tools\MapCruncher\MSR.CVE.BackMaker\ViewerControl.cs,PaintTile,The following statement contains a magic number: Brush brush = new SolidBrush(Color.FromArgb(40' 0' 0' 0));
Missing Default,Jama,SingularValueDecomposition,C:\repos\radioman_greatmaps\Tools\MapCruncher\Jama\Jama\SingularValueDecomposition.cs,SingularValueDecomposition,The following switch statement is missing a default case: switch (num9)  				{  				case 1:  				{  					double num10 = array[m - 2];  					array[m - 2] = 0.0;  					for (int l = m - 2; l >= k; l--)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						if (l != k)  						{  							num10 = -num12 * array[l - 1];  							array[l - 1] = num11 * array[l - 1];  						}  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][m - 1];  								this.V[i][m - 1] = -num12 * this.V[i][l] + num11 * this.V[i][m - 1];  								this.V[i][l] = num4;  							}  						}  					}  					break;  				}  				case 2:  				{  					double num10 = array[k - 1];  					array[k - 1] = 0.0;  					for (int l = k; l < m; l++)  					{  						double num4 = Maths.hypot(this.s[l]' num10);  						double num11 = this.s[l] / num4;  						double num12 = num10 / num4;  						this.s[l] = num4;  						num10 = -num12 * array[l];  						array[l] = num11 * array[l];  						if (flag)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][k - 1];  								this.U[i][k - 1] = -num12 * this.U[i][l] + num11 * this.U[i][k - 1];  								this.U[i][l] = num4;  							}  						}  					}  					break;  				}  				case 3:  				{  					double num13 = Math.Max(Math.Max(Math.Max(Math.Max(Math.Abs(this.s[m - 1])' Math.Abs(this.s[m - 2]))' Math.Abs(array[m - 2]))' Math.Abs(this.s[k]))' Math.Abs(array[k]));  					double num14 = this.s[m - 1] / num13;  					double num15 = this.s[m - 2] / num13;  					double num16 = array[m - 2] / num13;  					double num17 = this.s[k] / num13;  					double num18 = array[k] / num13;  					double num19 = ((num15 + num14) * (num15 - num14) + num16 * num16) / 2.0;  					double num20 = num14 * num16 * (num14 * num16);  					double num21 = 0.0;  					if (num19 != 0.0 | num20 != 0.0)  					{  						num21 = Math.Sqrt(num19 * num19 + num20);  						if (num19 < 0.0)  						{  							num21 = -num21;  						}  						num21 = num20 / (num19 + num21);  					}  					double num10 = (num17 + num14) * (num17 - num14) + num21;  					double num22 = num17 * num18;  					for (int l = k; l < m - 1; l++)  					{  						double num4 = Maths.hypot(num10' num22);  						double num11 = num10 / num4;  						double num12 = num22 / num4;  						if (l != k)  						{  							array[l - 1] = num4;  						}  						num10 = num11 * this.s[l] + num12 * array[l];  						array[l] = num11 * array[l] - num12 * this.s[l];  						num22 = num12 * this.s[l + 1];  						this.s[l + 1] = num11 * this.s[l + 1];  						if (flag2)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = num11 * this.V[i][l] + num12 * this.V[i][l + 1];  								this.V[i][l + 1] = -num12 * this.V[i][l] + num11 * this.V[i][l + 1];  								this.V[i][l] = num4;  							}  						}  						num4 = Maths.hypot(num10' num22);  						num11 = num10 / num4;  						num12 = num22 / num4;  						this.s[l] = num4;  						num10 = num11 * array[l] + num12 * this.s[l + 1];  						this.s[l + 1] = -num12 * array[l] + num11 * this.s[l + 1];  						num22 = num12 * array[l + 1];  						array[l + 1] = num11 * array[l + 1];  						if (flag && l < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = num11 * this.U[i][l] + num12 * this.U[i][l + 1];  								this.U[i][l + 1] = -num12 * this.U[i][l] + num11 * this.U[i][l + 1];  								this.U[i][l] = num4;  							}  						}  					}  					array[m - 2] = num10;  					num6++;  					break;  				}  				case 4:  					if (this.s[k] <= 0.0)  					{  						this.s[k] = ((this.s[k] < 0.0) ? (-this.s[k]) : 0.0);  						if (flag2)  						{  							for (int i = 0; i <= num5; i++)  							{  								this.V[i][k] = -this.V[i][k];  							}  						}  					}  					while (k < num5)  					{  						if (this.s[k] >= this.s[k + 1])  						{  							break;  						}  						double num4 = this.s[k];  						this.s[k] = this.s[k + 1];  						this.s[k + 1] = num4;  						if (flag2 && k < this.n - 1)  						{  							for (int i = 0; i < this.n; i++)  							{  								num4 = this.V[i][k + 1];  								this.V[i][k + 1] = this.V[i][k];  								this.V[i][k] = num4;  							}  						}  						if (flag && k < this.m - 1)  						{  							for (int i = 0; i < this.m; i++)  							{  								num4 = this.U[i][k + 1];  								this.U[i][k + 1] = this.U[i][k];  								this.U[i][k] = num4;  							}  						}  						k++;  					}  					num6 = 0;  					m--;  					break;  				}
