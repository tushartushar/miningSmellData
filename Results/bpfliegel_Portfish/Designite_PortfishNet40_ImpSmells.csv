Implementation smell,Namespace,Class,File,Method,Description
Long Method,Portfish,Benchmark,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Benchmark.cs,benchmark,The method has 103 lines of code.
Long Method,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,probe,The method has 141 lines of code.
Long Method,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The method has 101 lines of code.
Long Method,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The method has 122 lines of code.
Long Method,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The method has 240 lines of code.
Long Method,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_king,The method has 196 lines of code.
Long Method,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_unstoppable_pawns,The method has 136 lines of code.
Long Method,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The method has 136 lines of code.
Long Method,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,from_fen,The method has 122 lines of code.
Long Method,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The method has 190 lines of code.
Long Method,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,pos_is_ok,The method has 114 lines of code.
Long Method,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,id_loop,The method has 172 lines of code.
Long Method,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The method has 664 lines of code.
Long Method,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The method has 201 lines of code.
Long Method,Portfish,Thread,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Thread.cs,idle_loop,The method has 129 lines of code.
Long Method,Portfish,Uci,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Uci.cs,uci_loop,The method has 120 lines of code.
Long Method,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The method has 121 lines of code.
Complex Method,Portfish,Benchmark,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Benchmark.cs,benchmark,Cyclomatic complexity of the method is 9
Complex Method,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,init,Cyclomatic complexity of the method is 8
Complex Method,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,classify_leaf,Cyclomatic complexity of the method is 9
Complex Method,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,probe,Cyclomatic complexity of the method is 8
Complex Method,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,Cyclomatic complexity of the method is 13
Complex Method,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPPKRP,Cyclomatic complexity of the method is 8
Complex Method,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KBPPKB,Cyclomatic complexity of the method is 8
Complex Method,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,Cyclomatic complexity of the method is 32
Complex Method,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_king,Cyclomatic complexity of the method is 12
Complex Method,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_unstoppable_pawns,Cyclomatic complexity of the method is 19
Complex Method,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,Cyclomatic complexity of the method is 20
Complex Method,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_pawn_moves,Cyclomatic complexity of the method is 16
Complex Method,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,generate_next,Cyclomatic complexity of the method is 11
Complex Method,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,next_move,Cyclomatic complexity of the method is 22
Complex Method,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,Cyclomatic complexity of the method is 21
Complex Method,Portfish,PawnTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,evaluate_pawns,Cyclomatic complexity of the method is 13
Complex Method,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,from_fen,Cyclomatic complexity of the method is 17
Complex Method,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,to_fen,Cyclomatic complexity of the method is 12
Complex Method,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_pseudo_legal,Cyclomatic complexity of the method is 23
Complex Method,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,Cyclomatic complexity of the method is 8
Complex Method,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,Cyclomatic complexity of the method is 18
Complex Method,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,init,Cyclomatic complexity of the method is 10
Complex Method,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,flip,Cyclomatic complexity of the method is 8
Complex Method,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,pos_is_ok,Cyclomatic complexity of the method is 40
Complex Method,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,Cyclomatic complexity of the method is 8
Complex Method,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,id_loop,Cyclomatic complexity of the method is 16
Complex Method,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,Cyclomatic complexity of the method is 76
Complex Method,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,Cyclomatic complexity of the method is 22
Complex Method,Portfish,Thread,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Thread.cs,idle_loop,Cyclomatic complexity of the method is 12
Complex Method,Portfish,TT,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\TT.cs,store,Cyclomatic complexity of the method is 8
Complex Method,Portfish,Uci,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Uci.cs,uci_loop,Cyclomatic complexity of the method is 22
Complex Method,Portfish,Uci,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Uci.cs,go,Cyclomatic complexity of the method is 14
Complex Method,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,Cyclomatic complexity of the method is 25
Complex Method,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,move_to_san,Cyclomatic complexity of the method is 16
Long Parameter List,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The method has 5 parameters. Parameters: Us' Trace' pos' ei' mobility
Long Parameter List,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_king,The method has 6 parameters. Parameters: Us' Trace' pos' ei' marginsWHITE' marginsBLACK
Long Parameter List,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_castle,The method has 6 parameters. Parameters: Side' OnlyChecks' pos' ms' mpos' us
Long Parameter List,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_promotions,The method has 7 parameters. Parameters: Type' Delta' ms' mpos' pawnsOn7' target' ksq
Long Parameter List,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_pawn_moves,The method has 7 parameters. Parameters: Us' Type' pos' ms' mpos' target' ksq
Long Parameter List,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_direct_checks,The method has 6 parameters. Parameters: Pt' pos' ms' mpos' us' ci
Long Parameter List,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_king_moves,The method has 5 parameters. Parameters: pos' ms' mpos' us' target
Long Parameter List,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_moves,The method has 5 parameters. Parameters: pos' ms' mpos' us' target
Long Parameter List,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,MovePickerC,The method has 7 parameters. Parameters: p' ttm' d' h' ss' beta' mpExt
Long Parameter List,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,MovePickerC,The method has 5 parameters. Parameters: p' ttm' d' h' sq
Long Parameter List,Portfish,PawnTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,evaluate_pawns,The method has 5 parameters. Parameters: Us' pos' ourPawns' theirPawns' e
Long Parameter List,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The method has 7 parameters. Parameters: NT' pos' ss' ssPos' alpha' beta' depth
Long Parameter List,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The method has 7 parameters. Parameters: NT' pos' ss' ssPos' alpha' beta' depth
Long Parameter List,Portfish,Threads,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Thread.cs,split,The method has 13 parameters. Parameters: Fake' pos' ss' ssPos' alpha' beta' bestValue' bestMove' depth' threatMove' moveCount' mp' nodeType
Long Parameter List,Portfish,TimeMgr,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Timeman.cs,remaining,The method has 5 parameters. Parameters: T' myTime' movesToGo' currentPly' slowMover
Long Parameter List,Portfish,TTEntry,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\TT.cs,save,The method has 8 parameters. Parameters: k' v' t' d' m' g' statV' statM
Long Parameter List,Portfish,TT,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\TT.cs,store,The method has 7 parameters. Parameters: posKey' v' t' d' m' statV' kingD
Long Parameter List,Portfish,UCIOption,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,UCIOption,The method has 5 parameters. Parameters: index' v' minv' maxv' fn
Long Parameter List,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init_magics,The method has 7 parameters. Parameters: Pt' attacks' magics' masks' shifts' deltas' index
Long Identifier,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,,The length of the parameter QuadraticCoefficientsSameColor is 30.
Long Identifier,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,,The length of the parameter QuadraticCoefficientsOppositeColor is 34.
Long Statement,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KQKRPs,The length of the statement  "                && ((pos.pieces_PTC(PieceTypeC.ROOK' weakerSide) & Utils.rank_bb_R(Utils.relative_rank_CR(weakerSide' RankC.RANK_3))) != 0) " is 123.
Long Statement,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KQKRPs,The length of the statement  "                && ((pos.pieces_PTC(PieceTypeC.PAWN' weakerSide) & Utils.rank_bb_R(Utils.relative_rank_CR(weakerSide' RankC.RANK_2))) != 0) " is 123.
Long Statement,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The length of the statement  "                && (Utils.square_distance(wksq' wpsq + SquareC.DELTA_N) < Utils.square_distance(bksq' wpsq + SquareC.DELTA_N) - 2 + tempo) " is 122.
Long Statement,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KPKP,The length of the statement  "            return (KPKPosition.probe_kpk_bitbase(wksq' wpsq' bksq' stm) != 0) ? ScaleFactorC.SCALE_FACTOR_NONE : ScaleFactorC.SCALE_FACTOR_DRAW; " is 133.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,init,The length of the statement  "            Weights[EvalWeightC.Mobility] = weight_option("Mobility (Middle Game)"' "Mobility (Endgame)"' WeightsInternal[EvalWeightC.Mobility]); " is 133.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,init,The length of the statement  "            Weights[EvalWeightC.PassedPawns] = weight_option("Passed Pawns (Middle Game)"' "Passed Pawns (Endgame)"' WeightsInternal[EvalWeightC.PassedPawns]); " is 147.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,init,The length of the statement  "            Weights[EvalWeightC.KingDangerThem] = weight_option("Aggressiveness"' "Aggressiveness"' WeightsInternal[EvalWeightC.KingDangerThem]); " is 133.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,init,The length of the statement  "                Weights[EvalWeightC.KingDangerUs] = Weights[EvalWeightC.KingDangerThem] = (Weights[EvalWeightC.KingDangerUs] + Weights[EvalWeightC.KingDangerThem]) / 2; " is 152.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The length of the statement  "                ((((int)(((((mobilityWhite - mobilityBlack) + 32768) & ~0xffff) / 0x10000)) * (((Weights[EvalWeightC.Mobility] + 32768) & ~0xffff) / 0x10000)) / 0x100) << 16) + " is 160.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The length of the statement  "                (((int)(((Int16)((mobilityWhite - mobilityBlack) & 0xffff))) * ((Int16)(Weights[EvalWeightC.Mobility] & 0xffff))) / 0x100) " is 122.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The length of the statement  "            score += evaluate_king(ColorC.WHITE' Trace' pos' ei' ref marginsWHITE' ref marginsBLACK) - evaluate_king(ColorC.BLACK' Trace' pos' ei' ref marginsWHITE' ref marginsBLACK); " is 171.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The length of the statement  "                score += (((((int)((((((s * ei.mi.spaceWeight) << 16) + 32768) & ~0xffff) / 0x10000)) * (((Weights[EvalWeightC.Space] + 32768) & ~0xffff) / 0x10000)) / 0x100) << 16)  " is 165.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The length of the statement  "                    + (((int)(((Int16)(((s * ei.mi.spaceWeight) << 16) & 0xffff))) * ((Int16)(Weights[EvalWeightC.Space] & 0xffff))) / 0x100)); " is 123.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The length of the statement  "            ScaleFactor sf = ((Int16)(score & 0xffff)) > ValueC.VALUE_DRAW ? ei.mi.scale_factor_WHITE(pos) : ei.mi.scale_factor_BLACK(pos); " is 127.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The length of the statement  "                    (((((pos.pieceList[ColorC.WHITE][PieceTypeC.BISHOP][0] ^ pos.pieceList[ColorC.BLACK][PieceTypeC.BISHOP][0]) >> 3) ^ (pos.pieceList[ColorC.WHITE][PieceTypeC.BISHOP][0] ^ pos.pieceList[ColorC.BLACK][PieceTypeC.BISHOP][0])) & 1) != 0) " is 231.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The length of the statement  "            int result = ((((score + 32768) & ~0xffff) / 0x10000) * (int)(ei.mi.gamePhase) + ev * (int)(128 - ei.mi.gamePhase)) / 128; " is 122.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The length of the statement  "                trace_add(TracedTypeC.MOBILITY' Utils.apply_weight(mobilityWhite' Weights[EvalWeightC.Mobility])' Utils.apply_weight(mobilityBlack' Weights[EvalWeightC.Mobility])); " is 164.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The length of the statement  "                trace_add(TracedTypeC.PASSED' evaluate_passed_pawns(ColorC.WHITE' pos' ei)' evaluate_passed_pawns(ColorC.BLACK' pos' ei)); " is 122.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The length of the statement  "                trace_add(TracedTypeC.SPACE' Utils.apply_weight(w' Weights[EvalWeightC.Space])' Utils.apply_weight(b' Weights[EvalWeightC.Space])); " is 131.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,init_eval_info,The length of the statement  "                && (Us == 0 ? pos.st.npMaterialWHITE : pos.st.npMaterialBLACK) >= Constants.QueenValueMidgame + Constants.RookValueMidgame) " is 123.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The length of the statement  "                        b = Utils.BAttacks[s][(((pos.occupied_squares & Utils.BMasks[s]) * Utils.BMagics[s]) >> Utils.BShifts[s])] | Utils.RAttacks[s][(((pos.occupied_squares & Utils.RMasks[s]) * Utils.RMagics[s]) >> Utils.RShifts[s])]; " is 212.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The length of the statement  "                    mob = (Piece != PieceTypeC.QUEEN ? Bitcount.popcount_1s_Max15(b & mobilityArea) : Bitcount.popcount_1s_Full(b & mobilityArea)); " is 127.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The length of the statement  "                            score += ThreatBonus[Piece][pos.board[Utils.BSFTable[((b & (0xffffffffffffffff - b + 1)) * 0x218A392CD3D5DBFUL) >> 58]] & 7]; " is 125.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The length of the statement  "                                (((((0xAA55AA55AA55AA55UL & Utils.SquareBB[s]) != 0) ? 0xAA55AA55AA55AA55UL : ~0xAA55AA55AA55AA55UL) & (pos.byTypeBB[PieceTypeC.BISHOP] & pos.byColorBB[Them])) == 0) " is 165.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The length of the statement  "                        bool halfOpenUs = ((Us == ColorC.WHITE) ? (ei.pi.halfOpenFilesWHITE & (1 << f)) : (ei.pi.halfOpenFilesBLACK & (1 << f))) != 0; " is 126.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The length of the statement  "                                    if (((Us == ColorC.WHITE) ? (ei.pi.halfOpenFilesWHITE & ~((1 << ((ksq & 7) + 1)) - 1)) : (ei.pi.halfOpenFilesBLACK & ~((1 << ((ksq & 7) + 1)) - 1))) == 0) " is 154.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The length of the statement  "                                        score -= ((((pos.st.castleRights & (CastleRightC.WHITE_ANY << (Us << 1))) != 0) ? (TrappedRookPenalty - mob * 16) / 2 : (TrappedRookPenalty - mob * 16)) << 16); " is 160.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The length of the statement  "                                    if (((Us == ColorC.WHITE) ? (ei.pi.halfOpenFilesWHITE & ((1 << (ksq & 7)) - 1)) : (ei.pi.halfOpenFilesBLACK & ((1 << (ksq & 7)) - 1))) == 0) " is 140.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The length of the statement  "                                        score -= ((((pos.st.castleRights & (CastleRightC.WHITE_ANY << (Us << 1))) != 0) ? (TrappedRookPenalty - mob * 16) / 2 : (TrappedRookPenalty - mob * 16)) << 16); " is 160.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_king,The length of the statement  "                b1 = (Utils.RAttacks[ksq][(((pos.occupied_squares & Utils.RMasks[ksq]) * Utils.RMagics[ksq]) >> Utils.RShifts[ksq])]) & safe; " is 125.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_king,The length of the statement  "                b2 = (Utils.BAttacks[ksq][(((pos.occupied_squares & Utils.BMasks[ksq]) * Utils.BMagics[ksq]) >> Utils.BShifts[ksq])]) & safe; " is 125.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_passed_pawns,The length of the statement  "                        ebonus -= (Utils.SquareDistance[pos.pieceList[Us][PieceTypeC.KING][0]][blockSq + (Us == ColorC.WHITE ? SquareC.DELTA_N : SquareC.DELTA_S)] * rr); " is 145.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_passed_pawns,The length of the statement  "                            ((Utils.ForwardBB[Them][s] & ((pos.byTypeBB[PieceTypeC.ROOK] | pos.byTypeBB[PieceTypeC.QUEEN]) & pos.byColorBB[Them])) != 0) " is 124.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_passed_pawns,The length of the statement  "                            ((Utils.ForwardBB[Them][s] & ((pos.byTypeBB[PieceTypeC.ROOK] | pos.byTypeBB[PieceTypeC.QUEEN]) & pos.byColorBB[Them]) & pos.attacks_from_ROOK(s)) != 0) " is 151.
Long Statement,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_unstoppable_pawns,The length of the statement  "                    oppMovesToGo = Utils.square_distance(pos.king_square(Utils.flip_C(c))' queeningSquare) - ((c != pos.sideToMove) ? 1 : 0); " is 121.
Long Statement,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The length of the statement  "            if ((pos.pieces_PT(PieceTypeC.PAWN) == 0) && (pos.pieces_PT(PieceTypeC.ROOK) == 0) && (pos.pieces_PT(PieceTypeC.QUEEN) == 0)) " is 125.
Long Statement,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The length of the statement  "                (npm_w == npm_b || npm_w < Constants.RookValueMidgame ? 0 : NoPawnsSF[Math.Min(pos.piece_count(ColorC.WHITE' PieceTypeC.BISHOP)' 2)]); " is 134.
Long Statement,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The length of the statement  "                (npm_w == npm_b || npm_b < Constants.RookValueMidgame ? 0 : NoPawnsSF[Math.Min(pos.piece_count(ColorC.BLACK' PieceTypeC.BISHOP)' 2)]); " is 134.
Long Statement,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The length of the statement  "            if (npm_w + npm_b >= 2 * Constants.QueenValueMidgame + 4 * Constants.RookValueMidgame + 2 * Constants.KnightValueMidgame) " is 121.
Long Statement,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The length of the statement  "                int minorPieceCount = pos.piece_count(ColorC.WHITE' PieceTypeC.KNIGHT) + pos.piece_count(ColorC.WHITE' PieceTypeC.BISHOP) " is 121.
Long Statement,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_moves,The length of the statement  "                        if (pieceType == PieceTypeC.BISHOP) { b = Utils.BAttacks[s][(((pos.occupied_squares & Utils.BMasks[s]) * Utils.BMagics[s]) >> Utils.BShifts[s])] & target; } " is 156.
Long Statement,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_moves,The length of the statement  "                        else if (pieceType == PieceTypeC.ROOK) { b = Utils.RAttacks[s][(((pos.occupied_squares & Utils.RMasks[s]) * Utils.RMagics[s]) >> Utils.RShifts[s])] & target; } " is 159.
Long Statement,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_moves,The length of the statement  "                        else if (pieceType == PieceTypeC.QUEEN) { b = (Utils.BAttacks[s][(((pos.occupied_squares & Utils.BMasks[s]) * Utils.BMagics[s]) >> Utils.BShifts[s])] | Utils.RAttacks[s][(((pos.occupied_squares & Utils.RMasks[s]) * Utils.RMagics[s]) >> Utils.RShifts[s])]) & target; } " is 267.
Long Statement,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_moves,The length of the statement  "                        else if (pieceType == PieceTypeC.QUEEN) { b = (Utils.bishop_attacks_bb(s' pos.occupied_squares) | Utils.rook_attacks_bb(s' pos.occupied_squares)) & target; } " is 157.
Long Statement,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_evasion,The length of the statement  "                        if ((Utils.between_bb(ksq' checksq) != 0) || ((Utils.bit_is_set(Utils.PseudoAttacks[PieceTypeC.BISHOP][checksq]' ksq)) == 0)) " is 125.
Long Statement,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,score_evasions,The length of the statement  "                if ((seeScore = ((Position.PieceValueMidgame[pos.board[m & 0x3F]] >= Position.PieceValueMidgame[pos.board[((m >> 6) & 0x3F)]]) ? 1 : pos.see(m' false))) < 0) " is 157.
Long Statement,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,score_evasions,The length of the statement  "                else if (((pos.board[m & 0x3F] != PieceC.NO_PIECE) && !((m & (3 << 14)) == (3 << 14))) || ((m & (3 << 14)) == (2 << 14))) " is 121.
Long Statement,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,score_evasions,The length of the statement  "                    ms[idx].score = Position.PieceValueMidgame[pos.board[(m & 0x3F)]] - (pos.board[((m >> 6) & 0x3F)] & 7) + History.MaxValue; " is 122.
Long Statement,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The length of the statement  "            brokerSize = 40; for (i = 0; i < brokerSize; i++) { CheckInfoBroker.GetObject(); } for (i = 0; i < brokerSize; i++) { CheckInfoBroker.Free(); } " is 143.
Long Statement,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The length of the statement  "            brokerSize = 4; for (i = 0; i < brokerSize; i++) { EvalInfoBroker.GetObject(); } for (i = 0; i < brokerSize; i++) { EvalInfoBroker.Free(); } " is 140.
Long Statement,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The length of the statement  "            brokerSize = 4; for (i = 0; i < brokerSize; i++) { SwapListBroker.GetObject(); } for (i = 0; i < brokerSize; i++) { SwapListBroker.Free(); } " is 140.
Long Statement,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The length of the statement  "            brokerSize = 36; for (i = 0; i < brokerSize; i++) { MovesSearchedBroker.GetObject(); } for (i = 0; i < brokerSize; i++) { MovesSearchedBroker.Free(); } " is 151.
Long Statement,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The length of the statement  "            brokerSize = 8; for (i = 0; i < brokerSize; i++) { PositionBroker.GetObject(); } for (i = 0; i < brokerSize; i++) { PositionBroker.Free(); } " is 140.
Long Statement,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The length of the statement  "            brokerSize = 4; for (i = 0; i < brokerSize; i++) { StateInfoArrayBroker.GetObject(); } for (i = 0; i < brokerSize; i++) { StateInfoArrayBroker.Free(); } " is 152.
Long Statement,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The length of the statement  "            brokerSize = 4; for (i = 0; i < brokerSize; i++) { MListBroker.GetObject(); } for (i = 0; i < brokerSize; i++) { MListBroker.Free(); } " is 134.
Long Statement,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The length of the statement  "            brokerSize = 36; for (i = 0; i < brokerSize; i++) { StateInfoBroker.GetObject(); } for (i = 0; i < brokerSize; i++) { StateInfoBroker.Free(); } " is 143.
Long Statement,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The length of the statement  "            brokerSize = 8; LoopStack[] arrLoopStack = new LoopStack[brokerSize]; for (i = 0; i < brokerSize; i++) { arrLoopStack[i] = LoopStackBroker.GetObject(); } for (i = brokerSize - 1; i >= 0; i--) { LoopStackBroker.Free(arrLoopStack[i]); } " is 234.
Long Statement,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The length of the statement  "            brokerSize = 40; MovePicker[] arrMovePicker = new MovePicker[brokerSize]; for (i = 0; i < brokerSize; i++) { arrMovePicker[i] = MovePickerBroker.GetObject(); } for (i = brokerSize - 1; i >= 0; i--) { MovePickerBroker.Free(arrMovePicker[i]); } " is 242.
Long Statement,Portfish,CheckInfoBroker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Report,The length of the statement  "            return string.Format("CheckInfoBroker: {0}{1}\r\n"' entryCount' entryCount>0 ? string.Format(" ({0})"' sb.ToString().Substring(1)) : string.Empty); " is 147.
Long Statement,Portfish,EvalInfoBroker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Report,The length of the statement  "            return string.Format("EvalInfoBroker: {0}{1}\r\n"' entryCount' entryCount > 0 ? string.Format(" ({0})"' sb.ToString().Substring(1)) : string.Empty); " is 148.
Long Statement,Portfish,SwapListBroker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Report,The length of the statement  "            return string.Format("SwapListBroker: {0}{1}\r\n"' entryCount' entryCount > 0 ? string.Format(" ({0})"' sb.ToString().Substring(1)) : string.Empty); " is 148.
Long Statement,Portfish,MovesSearchedBroker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Report,The length of the statement  "            return string.Format("MovesSearchedBroker: {0}{1}\r\n"' entryCount' entryCount > 0 ? string.Format(" ({0})"' sb.ToString().Substring(1)) : string.Empty); " is 153.
Long Statement,Portfish,StateInfoArrayBroker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Report,The length of the statement  "            return string.Format("StateInfoArrayBroker: {0}{1}\r\n"' entryCount' entryCount > 0 ? string.Format(" ({0})"' sb.ToString().Substring(1)) : string.Empty); " is 154.
Long Statement,Portfish,PositionBroker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Report,The length of the statement  "            return string.Format("PositionBroker: {0}{1}\r\n"' entryCount' entryCount > 0 ? string.Format(" ({0})"' sb.ToString().Substring(1)) : string.Empty); " is 148.
Long Statement,Portfish,MListBroker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Report,The length of the statement  "            return string.Format("MListBroker: {0}{1}\r\n"' entryCount' entryCount > 0 ? string.Format(" ({0})"' sb.ToString().Substring(1)) : string.Empty); " is 145.
Long Statement,Portfish,StateInfoBroker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Report,The length of the statement  "            return string.Format("StateInfoBroker: {0}{1}\r\n"' entryCount' entryCount > 0 ? string.Format(" ({0})"' sb.ToString().Substring(1)) : string.Empty); " is 149.
Long Statement,Portfish,MovePickerBroker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Report,The length of the statement  "            return string.Format("MovePickerBroker: {0}{1}\r\n"' entryCount' entryCount > 0 ? string.Format(" ({0})"' sb.ToString().Substring(1)) : string.Empty); " is 150.
Long Statement,Portfish,LoopStackBroker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Report,The length of the statement  "            return string.Format("LoopStackBroker: {0}{1}\r\n"' entryCount' entryCount > 0 ? string.Format(" ({0})"' sb.ToString().Substring(1)) : string.Empty); " is 149.
Long Statement,Portfish,CheckInfo,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,CreateCheckInfo,The length of the statement  "            checkSq[PieceTypeC.BISHOP] = Utils.BAttacks[ksq][(((pos.occupied_squares & Utils.BMasks[ksq]) * Utils.BMagics[ksq]) >> Utils.BShifts[ksq])]; " is 140.
Long Statement,Portfish,CheckInfo,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,CreateCheckInfo,The length of the statement  "            checkSq[PieceTypeC.ROOK] = Utils.RAttacks[ksq][(((pos.occupied_squares & Utils.RMasks[ksq]) * Utils.RMagics[ksq]) >> Utils.RShifts[ksq])]; " is 138.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attacks_from_PTS,The length of the statement  "            if (pieceType == PieceTypeC.QUEEN) return Utils.bishop_attacks_bb(s' occupied_squares) | Utils.rook_attacks_bb(s' occupied_squares); " is 132.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attacks_from_BISHOP,The length of the statement  "            return Utils.BAttacks[s][(lo * (UInt32)(Utils.BMagics[s]) ^ hi * (UInt32)(Utils.BMagics[s] >> 32)) >> Utils.BShifts[s]]; " is 120.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attacks_from_ROOK,The length of the statement  "            return Utils.RAttacks[s][(lo * (UInt32)(Utils.RMagics[s]) ^ hi * (UInt32)(Utils.RMagics[s] >> 32)) >> Utils.RShifts[s]]; " is 120.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attacks_from_QUEEN,The length of the statement  "            return Utils.BAttacks[s][(((occupied_squares & Utils.BMasks[s]) * Utils.BMagics[s]) >> Utils.BShifts[s])] | Utils.RAttacks[s][(((occupied_squares & Utils.RMasks[s]) * Utils.RMagics[s]) >> Utils.RShifts[s])]; " is 207.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attacks_from_QUEEN,The length of the statement  "            return Utils.BAttacks[s][(lob * (UInt32)(Utils.BMagics[s]) ^ hib * (UInt32)(Utils.BMagics[s] >> 32)) >> Utils.BShifts[s]] | Utils.RAttacks[s][(lor * (UInt32)(Utils.RMagics[s]) ^ hir * (UInt32)(Utils.RMagics[s] >> 32)) >> Utils.RShifts[s]]; " is 239.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attackers_to,The length of the statement  "            return ((Utils.StepAttacksBB[((ColorC.BLACK << 3) | PieceTypeC.PAWN)][s]) & (byTypeBB[PieceTypeC.PAWN] & byColorBB[ColorC.WHITE])) " is 130.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attackers_to,The length of the statement  "                  | ((Utils.StepAttacksBB[((ColorC.WHITE << 3) | PieceTypeC.PAWN)][s]) & (byTypeBB[PieceTypeC.PAWN] & byColorBB[ColorC.BLACK])) " is 125.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attackers_to,The length of the statement  "                  | ((Utils.RAttacks[s][(((occupied_squares & Utils.RMasks[s]) * Utils.RMagics[s]) >> Utils.RShifts[s])]) & (byTypeBB[PieceTypeC.ROOK] | byTypeBB[PieceTypeC.QUEEN])) " is 163.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attackers_to,The length of the statement  "                  | ((Utils.BAttacks[s][(((occupied_squares & Utils.BMasks[s]) * Utils.BMagics[s]) >> Utils.BShifts[s])]) & (byTypeBB[PieceTypeC.BISHOP] | byTypeBB[PieceTypeC.QUEEN])) " is 165.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attackers_to,The length of the statement  "            return ((Utils.StepAttacksBB[((ColorC.BLACK << 3) | PieceTypeC.PAWN)][s]) & (byTypeBB[PieceTypeC.PAWN] & byColorBB[ColorC.WHITE])) " is 130.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attackers_to,The length of the statement  "                  | ((Utils.StepAttacksBB[((ColorC.WHITE << 3) | PieceTypeC.PAWN)][s]) & (byTypeBB[PieceTypeC.PAWN] & byColorBB[ColorC.BLACK])) " is 125.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attackers_to,The length of the statement  "            return ((Utils.StepAttacksBB[((ColorC.BLACK << 3) | PieceTypeC.PAWN)][s]) & (byTypeBB[PieceTypeC.PAWN] & byColorBB[ColorC.WHITE])) " is 130.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attackers_to,The length of the statement  "                  | ((Utils.StepAttacksBB[((ColorC.WHITE << 3) | PieceTypeC.PAWN)][s]) & (byTypeBB[PieceTypeC.PAWN] & byColorBB[ColorC.BLACK])) " is 125.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attackers_to,The length of the statement  "                  | ((Utils.RAttacks[s][(((occ & Utils.RMasks[s]) * Utils.RMagics[s]) >> Utils.RShifts[s])]) & (byTypeBB[PieceTypeC.ROOK] | byTypeBB[PieceTypeC.QUEEN])) " is 150.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attackers_to,The length of the statement  "                  | ((Utils.BAttacks[s][(((occ & Utils.BMasks[s]) * Utils.BMagics[s]) >> Utils.BShifts[s])]) & (byTypeBB[PieceTypeC.BISHOP] | byTypeBB[PieceTypeC.QUEEN])) " is 152.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attackers_to,The length of the statement  "            return ((Utils.StepAttacksBB[((ColorC.BLACK << 3) | PieceTypeC.PAWN)][s]) & (byTypeBB[PieceTypeC.PAWN] & byColorBB[ColorC.WHITE])) " is 130.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attackers_to,The length of the statement  "                  | ((Utils.StepAttacksBB[((ColorC.WHITE << 3) | PieceTypeC.PAWN)][s]) & (byTypeBB[PieceTypeC.PAWN] & byColorBB[ColorC.BLACK])) " is 125.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,discovered_check_candidates,The length of the statement  "            Bitboard pinners = byColorBB[sideToMove] & (((byTypeBB[PieceTypeC.ROOK] | byTypeBB[PieceTypeC.QUEEN]) & Utils.PseudoAttacks_ROOK[ksq]) " is 134.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,discovered_check_candidates,The length of the statement  "                b = (Utils.BetweenBB[ksq][(Utils.BSFTable[((bb & (0xffffffffffffffff - bb + 1)) * 0x218A392CD3D5DBFUL) >> 58])]) & occupied_squares; " is 132.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,pinned_pieces,The length of the statement  "            Bitboard pinners = byColorBB[sideToMove ^ 1] & (((byTypeBB[PieceTypeC.ROOK] | byTypeBB[PieceTypeC.QUEEN]) & Utils.PseudoAttacks_ROOK[ksq]) " is 138.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,pinned_pieces,The length of the statement  "                b = (Utils.BetweenBB[ksq][(Utils.BSFTable[((bb & (0xffffffffffffffff - bb + 1)) * 0x218A392CD3D5DBFUL) >> 58])]) & occupied_squares; " is 132.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,to_fen,The length of the statement  "                fen.Append(chess960 ? (Utils.toupper(Utils.file_to_char(Utils.file_of(castle_rook_square(ColorC.WHITE' CastlingSideC.KING_SIDE))))) : 'K'); " is 139.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,to_fen,The length of the statement  "                fen.Append(chess960 ? (Utils.toupper(Utils.file_to_char(Utils.file_of(castle_rook_square(ColorC.WHITE' CastlingSideC.QUEEN_SIDE))))) : 'Q'); " is 140.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,to_fen,The length of the statement  "                fen.Append(chess960 ? Utils.file_to_char(Utils.file_of(castle_rook_square(ColorC.BLACK' CastlingSideC.KING_SIDE))) : 'k'); " is 122.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,to_fen,The length of the statement  "                fen.Append(chess960 ? Utils.file_to_char(Utils.file_of(castle_rook_square(ColorC.BLACK' CastlingSideC.QUEEN_SIDE))) : 'q'); " is 123.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,pl_move_is_legal,The length of the statement  "                return ((Utils.rook_attacks_bb(ksq' b) & ((byTypeBB[PieceTypeC.ROOK] | byTypeBB[PieceTypeC.QUEEN]) & byColorBB[them])) == 0) " is 124.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,pl_move_is_legal,The length of the statement  "                      && ((Utils.bishop_attacks_bb(ksq' b) & ((byTypeBB[PieceTypeC.BISHOP] | byTypeBB[PieceTypeC.QUEEN]) & byColorBB[them])) == 0); " is 125.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The length of the statement  "                    || (((Utils.BetweenBB[from][to] | Utils.BetweenBB[from][pieceList[sideToMove ^ 1][PieceTypeC.KING][0]] | Utils.BetweenBB[to][pieceList[sideToMove ^ 1][PieceTypeC.KING][0]]) & (Utils.SquareBB[from] | Utils.SquareBB[to] | Utils.SquareBB[pieceList[sideToMove ^ 1][PieceTypeC.KING][0]])) == 0)) " is 290.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The length of the statement  "                return ((Utils.rook_attacks_bb(ksq' b) & ((byTypeBB[PieceTypeC.ROOK] | byTypeBB[PieceTypeC.QUEEN]) & byColorBB[us])) != 0) " is 122.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The length of the statement  "                      || ((Utils.bishop_attacks_bb(ksq' b) & ((byTypeBB[PieceTypeC.BISHOP] | byTypeBB[PieceTypeC.QUEEN]) & byColorBB[us])) != 0); " is 123.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The length of the statement  "                Bitboard b = (occupied_squares ^ Utils.SquareBB[kfrom] ^ Utils.SquareBB[rfrom]) | Utils.SquareBB[rto] | Utils.SquareBB[kto]; " is 124.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The length of the statement  "                    if (them == 0) { st.npMaterialWHITE -= PieceValueMidgame[capture]; } else { st.npMaterialBLACK -= PieceValueMidgame[capture]; } " is 127.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The length of the statement  "                    && ((((Utils.StepAttacksBB[((us << 3) | PieceTypeC.PAWN)][from + (us == ColorC.WHITE ? SquareC.DELTA_N : SquareC.DELTA_S)]) & (byTypeBB[PieceTypeC.PAWN] & byColorBB[them]))) != 0)) " is 180.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The length of the statement  "                            st.checkersBB |= attacks_from_ROOK(pieceList[them][PieceTypeC.KING][0]) & ((byTypeBB[PieceTypeC.ROOK] | byTypeBB[PieceTypeC.QUEEN]) & byColorBB[us]); " is 149.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The length of the statement  "                            st.checkersBB |= attacks_from_BISHOP(pieceList[them][PieceTypeC.KING][0]) & ((byTypeBB[PieceTypeC.BISHOP] | byTypeBB[PieceTypeC.QUEEN]) & byColorBB[us]); " is 153.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,see,The length of the statement  "                attackers |= ((Utils.RAttacks[to][(((occ & Utils.RMasks[to]) * Utils.RMagics[to]) >> Utils.RShifts[to])]) & (byTypeBB[PieceTypeC.ROOK] | byTypeBB[PieceTypeC.QUEEN])) " is 165.
Long Statement,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,see,The length of the statement  "                            | ((Utils.BAttacks[to][(((occ & Utils.BMasks[to]) * Utils.BMagics[to]) >> Utils.BShifts[to])]) & (byTypeBB[PieceTypeC.BISHOP] | byTypeBB[PieceTypeC.QUEEN])); " is 157.
Long Statement,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,is_dangerous,The length of the statement  "                && (pos.st.npMaterialWHITE + pos.st.npMaterialBLACK - Position.PieceValueMidgame[pos.board[m & 0x3F]] == ValueC.VALUE_ZERO)" is 123.
Long Statement,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The length of the statement  "            bool PvNode = (NT == NodeTypeC.PV || NT == NodeTypeC.Root || NT == NodeTypeC.SplitPointPV || NT == NodeTypeC.SplitPointRoot);" is 125.
Long Statement,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The length of the statement  "                TT.store(posKey' ValueC.VALUE_NONE' Bound.BOUND_NONE' DepthC.DEPTH_NONE' MoveC.MOVE_NONE' ss[ssPos].eval' ss[ssPos].evalMargin);" is 128.
Long Statement,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The length of the statement  "                nullValue = depth - R * DepthC.ONE_PLY < DepthC.ONE_PLY ? -qsearch(NodeTypeC.NonPV' pos' ss' ssPos + 1' -beta' -alpha' DepthC.DEPTH_ZERO)" is 137.
Long Statement,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The length of the statement  "            mp.MovePickerC(pos' ttMove' depth' H' ss[ssPos]' PvNode ? -ValueC.VALUE_INFINITE : beta' SpNode ? ss[ssPos].sp.mp : null);" is 122.
Long Statement,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The length of the statement  "                    value = newDepth < DepthC.ONE_PLY ? -qsearch(NodeTypeC.NonPV' pos' ss' ssPos + 1' -(alpha + 1)' -alpha' DepthC.DEPTH_ZERO)" is 122.
Long Statement,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The length of the statement  "                    bestValue = Threads.split(Constants.FakeSplit' pos' ss' ssPos' alpha' beta' bestValue' ref bestMove' depth' threatMove' moveCount' mp' NT);" is 139.
Long Statement,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The length of the statement  "                        TT.store(pos.key()' value_to_tt(bestValue' ss[ssPos].ply)' Bound.BOUND_LOWER' DepthC.DEPTH_NONE' MoveC.MOVE_NONE' ss[ssPos].eval' evalMargin);" is 142.
Long Statement,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The length of the statement  "                                 && !(((pos.board[move & 0x3F] != PieceC.NO_PIECE) && !((move & (3 << 14)) == (3 << 14))) || ((move & (3 << 14)) == (2 << 14)))" is 126.
Long Statement,Portfish,Threads,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Thread.cs,init,The length of the statement  "            Windows.Foundation.IAsyncAction action = Windows.System.Threading.ThreadPool.RunAsync(delegate { launch_threads(initEvents); }' WorkItemPriority.Normal); " is 153.
Long Statement,Portfish,TimeMgr,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Timeman.cs,remaining,The length of the statement  "            float ratio2 = (thisMoveImportance + TStealRatio * otherMovesImportance) / (float)(thisMoveImportance + otherMovesImportance); " is 126.
Long Statement,Portfish,TT,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\TT.cs,store,The length of the statement  "                //if ((entries[replacePos].generation8 == generation ? 2 : 0) + (tte.generation8 == generation || tte.bound == 3/*Bound.BOUND_EXACT*/ ? -2 : 0) + (tte.depth16 < entries[replacePos].depth16 ? 1 : 0) > 0) " is 202.
Long Statement,Portfish,TT,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\TT.cs,store,The length of the statement  "                    if ((!(tte.generation8 == generation || tte.bound == 3/*Bound.BOUND_EXACT*/)) && (tte.depth16 < entries[replacePos].depth16)) " is 125.
Long Statement,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init_magics,The length of the statement  "                edges = ((Constants.Rank1BB | Constants.Rank8BB) & ~Utils.rank_bb_S(s)) | ((Constants.FileABB | Constants.FileHBB) & ~Utils.file_bb_S(s)); " is 138.
Long Statement,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,engine_info,The length of the statement  "            string versionInfo = buildDateTime.Year.ToString() + buildDateTime.Month.ToString().PadLeft(2' '0') + buildDateTime.Day.ToString().PadLeft(2' '0'); " is 147.
Long Statement,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,apply_weight,The length of the statement  "            return (((((int)((((v + 32768) & ~0xffff) / 0x10000)) * (((w + 32768) & ~0xffff) / 0x10000)) / 0x100) << 16) + (((int)(((Int16)(v & 0xffff))) * ((Int16)(w & 0xffff))) / 0x100)); " is 177.
Complex Conditional,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,classify_leaf,The conditional expression  "wksq == psq || wksq == bksq || bksq == psq                  || (Utils.bit_is_set(k_attacks(ColorC.WHITE)'bksq)!=0)                  || (stm == ColorC.WHITE && (Utils.bit_is_set(p_attacks()'bksq)!=0))"  is complex.
Complex Conditional,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,classify_leaf,The conditional expression  "Utils.rank_of(psq) == RankC.RANK_7                  && stm == ColorC.WHITE                  && wksq != psq + SquareC.DELTA_N                  && (Utils.square_distance(bksq' psq + SquareC.DELTA_N) > 1                      || (Utils.bit_is_set(k_attacks(ColorC.WHITE)'(psq + SquareC.DELTA_N))!=0) )"  is complex.
Complex Conditional,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,classify_leaf,The conditional expression  "stm == ColorC.WHITE                  && wksq == psq + SquareC.DELTA_N                  && bksq == wksq + SquareC.DELTA_N + SquareC.DELTA_N                  && Utils.rank_of(psq) < RankC.RANK_5"  is complex.
Complex Conditional,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,classify_leaf,The conditional expression  "Utils.file_of(wksq) == FileC.FILE_A                  && Utils.file_of(psq) == FileC.FILE_A                  && Utils.rank_of(wksq) > Utils.rank_of(psq)                  && bksq == wksq + 2"  is complex.
Complex Conditional,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,probe,The conditional expression  "((sum!=0) && (RKiss.rand() % sum < e.count))                              || (pickBest && e.count == best)"  is complex.
Complex Conditional,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRKP,The conditional expression  "Utils.rank_of(bksq) <= RankC.RANK_3                       && Utils.square_distance(bksq' bpsq) == 1                       && Utils.rank_of(wksq) >= RankC.RANK_4                       && Utils.square_distance(wksq' bpsq) - tempo > 2"  is complex.
Complex Conditional,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KQKRPs,The conditional expression  "Utils.relative_rank_CS(weakerSide' kingSq) <= RankC.RANK_2                  && Utils.relative_rank_CS(weakerSide' pos.king_square(strongerSide)) >= RankC.RANK_4                  && ((pos.pieces_PTC(PieceTypeC.ROOK' weakerSide) & Utils.rank_bb_R(Utils.relative_rank_CR(weakerSide' RankC.RANK_3))) != 0)                  && ((pos.pieces_PTC(PieceTypeC.PAWN' weakerSide) & Utils.rank_bb_R(Utils.relative_rank_CR(weakerSide' RankC.RANK_2))) != 0)                  && ((Position.attacks_from_KING(kingSq) & pos.pieces_PTC(PieceTypeC.PAWN' weakerSide)) != 0)"  is complex.
Complex Conditional,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The conditional expression  "r <= RankC.RANK_5                  && Utils.square_distance(bksq' queeningSq) <= 1                  && wksq <= SquareC.SQ_H5                  && (Utils.rank_of(brsq) == RankC.RANK_6 || (r <= RankC.RANK_3 && Utils.rank_of(wrsq) != RankC.RANK_6))"  is complex.
Complex Conditional,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The conditional expression  "r == RankC.RANK_6                  && Utils.square_distance(bksq' queeningSq) <= 1                  && Utils.rank_of(wksq) + tempo <= RankC.RANK_6                  && (Utils.rank_of(brsq) == RankC.RANK_1 || ((tempo == 0) && Math.Abs(Utils.file_of(brsq) - f) >= 3))"  is complex.
Complex Conditional,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The conditional expression  "r >= RankC.RANK_6                  && bksq == queeningSq                  && Utils.rank_of(brsq) == RankC.RANK_1                  && ((tempo == 0) || Utils.square_distance(wksq' wpsq) >= 2)"  is complex.
Complex Conditional,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The conditional expression  "wpsq == SquareC.SQ_A7                  && wrsq == SquareC.SQ_A8                  && (bksq == SquareC.SQ_H7 || bksq == SquareC.SQ_G7)                  && Utils.file_of(brsq) == FileC.FILE_A                  && (Utils.rank_of(brsq) <= RankC.RANK_3 || Utils.file_of(wksq) >= FileC.FILE_D || Utils.rank_of(wksq) <= RankC.RANK_5)"  is complex.
Complex Conditional,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The conditional expression  "r <= RankC.RANK_5                  && bksq == wpsq + SquareC.DELTA_N                  && Utils.square_distance(wksq' wpsq) - tempo >= 2                  && Utils.square_distance(wksq' brsq) - tempo >= 2"  is complex.
Complex Conditional,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The conditional expression  "r == RankC.RANK_7                  && f != FileC.FILE_A                  && Utils.file_of(wrsq) == f                  && wrsq != queeningSq                  && (Utils.square_distance(wksq' queeningSq) < Utils.square_distance(bksq' queeningSq) - 2 + tempo)                  && (Utils.square_distance(wksq' queeningSq) < Utils.square_distance(bksq' wrsq) + tempo)"  is complex.
Complex Conditional,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The conditional expression  "f != FileC.FILE_A                  && Utils.file_of(wrsq) == f                  && wrsq < wpsq                  && (Utils.square_distance(wksq' queeningSq) < Utils.square_distance(bksq' queeningSq) - 2 + tempo)                  && (Utils.square_distance(wksq' wpsq + SquareC.DELTA_N) < Utils.square_distance(bksq' wpsq + SquareC.DELTA_N) - 2 + tempo)                  && (Utils.square_distance(bksq' wrsq) + tempo >= 3                      || (Utils.square_distance(wksq' queeningSq) < Utils.square_distance(bksq' wrsq) + tempo                          && (Utils.square_distance(wksq' wpsq + SquareC.DELTA_N) < Utils.square_distance(bksq' wrsq) + tempo)))"  is complex.
Complex Conditional,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KBPKB,The conditional expression  "Utils.file_of(weakerKingSq) == Utils.file_of(pawnSq)                  && Utils.relative_rank_CS(strongerSide' pawnSq) < Utils.relative_rank_CS(strongerSide' weakerKingSq)                  && (Utils.opposite_colors(weakerKingSq' strongerBishopSq)                      || Utils.relative_rank_CS(strongerSide' weakerKingSq) <= RankC.RANK_6)"  is complex.
Complex Conditional,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KBPPKB,The conditional expression  "ksq == blockSq1                          && Utils.opposite_colors(ksq' wbsq)                          && (bbsq == blockSq2                              || (((pos.attacks_from_BISHOP(blockSq2) & pos.pieces_PTC(PieceTypeC.BISHOP' weakerSide))) != 0)                              || Math.Abs(r1 - r2) >= 2)"  is complex.
Complex Conditional,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KBPPKB,The conditional expression  "ksq == blockSq2                               && Utils.opposite_colors(ksq' wbsq)                               && (bbsq == blockSq1                                   || (((pos.attacks_from_BISHOP(blockSq1) & pos.pieces_PTC(PieceTypeC.BISHOP' weakerSide)))) != 0)"  is complex.
Complex Conditional,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KBPKN,The conditional expression  "Utils.file_of(weakerKingSq) == Utils.file_of(pawnSq)                  && Utils.relative_rank_CS(strongerSide' pawnSq) < Utils.relative_rank_CS(strongerSide' weakerKingSq)                  && (Utils.opposite_colors(weakerKingSq' strongerBishopSq)                      || Utils.relative_rank_CS(strongerSide' weakerKingSq) <= RankC.RANK_6)"  is complex.
Complex Conditional,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The conditional expression  "ei.mi.gamePhase < PhaseC.PHASE_MIDGAME                  &&                   (                      pos.pieceCount[ColorC.WHITE][PieceTypeC.BISHOP] == 1                      &&                       pos.pieceCount[ColorC.BLACK][PieceTypeC.BISHOP] == 1                      &&                       (((((pos.pieceList[ColorC.WHITE][PieceTypeC.BISHOP][0] ^ pos.pieceList[ColorC.BLACK][PieceTypeC.BISHOP][0]) >> 3) ^ (pos.pieceList[ColorC.WHITE][PieceTypeC.BISHOP][0] ^ pos.pieceList[ColorC.BLACK][PieceTypeC.BISHOP][0])) & 1) != 0)                  )                  && sf == ScaleFactorC.SCALE_FACTOR_NORMAL"  is complex.
Complex Conditional,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The conditional expression  "(Piece == PieceTypeC.BISHOP || Piece == PieceTypeC.ROOK || Piece == PieceTypeC.QUEEN)                          &&                          ((Utils.PseudoAttacks[Piece][pos.pieceList[Them][PieceTypeC.KING][0]] & Utils.SquareBB[s]) != 0)"  is complex.
Complex Conditional,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The conditional expression  "(Piece == PieceTypeC.ROOK || Piece == PieceTypeC.QUEEN)                          &&                          ((s >> 3) ^ (Us * 7)) == RankC.RANK_7                          &&                          (((pos.pieceList[Them][PieceTypeC.KING][0]) >> 3) ^ (Us * 7)) == RankC.RANK_8"  is complex.
Complex Conditional,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_direct_checks,The conditional expression  "(Pt == PieceTypeC.BISHOP || Pt == PieceTypeC.ROOK || Pt == PieceTypeC.QUEEN)                          && ((Utils.PseudoAttacks[Pt][from] & target) == 0)"  is complex.
Complex Conditional,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,next_move,The conditional expression  "move != MoveC.MOVE_NONE                              && pos.is_pseudo_legal(move)                              && move != ttMove                              && !pos.is_capture(move)"  is complex.
Complex Conditional,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,from_fen,The conditional expression  "((col >= 'a' && col <= 'h'))                          && ((row == '3' || row == '6'))"  is complex.
Complex Conditional,Portfish,RootMove,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,extract_pv_from_tt,The conditional expression  "TT.probe(pos.key()' ref ttePos' out tte)                && (m = tte.move()) != MoveC.MOVE_NONE // Local copy' TT entry could change                && pos.is_pseudo_legal(m)                && pos.pl_move_is_legal(m' pos.pinned_pieces())                && ply < Constants.MAX_PLY                && (!pos.is_draw(false) || ply < 2)"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,is_dangerous,The conditional expression  "captureOrPromotion                 && (pos.board[m & 0x3F] & 7) != PieceTypeC.PAWN                 && ((m & (3 << 14)) == 0)                 && (pos.st.npMaterialWHITE + pos.st.npMaterialBLACK - Position.PieceValueMidgame[pos.board[m & 0x3F]] == ValueC.VALUE_ZERO)"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,id_loop,The conditional expression  "!SignalsStop && ++depth <= Constants.MAX_PLY && ((Limits.depth == 0) || depth <= Limits.depth)"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,id_loop,The conditional expression  "depth >= 12                         && !stop                         && ((bestMoveNeverChanged && (pos.captured_piece_type() != 0))                             || SearchTime.ElapsedMilliseconds > (TimeMgr.available_time() * 40) / 100)"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The conditional expression  "(SignalsStop                  || pos.is_draw(false)                  || ss[ssPos].ply > Constants.MAX_PLY) && !RootNode"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The conditional expression  "!RootNode && tteHasValue && (PvNode ? tte.depth() >= depth && tte.type() == Bound.BOUND_EXACT                                             : can_return_tt(tte' depth' ttValue' beta))"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The conditional expression  "ttValue >= beta                     && (ttMove != 0)                     && !pos.is_capture_or_promotion(ttMove)                     && ttMove != ss[ssPos].killers0"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The conditional expression  "(move = ss[ssPos - 1].currentMove) != MoveC.MOVE_NULL                 && ss[ssPos - 1].eval != ValueC.VALUE_NONE                 && ss[ssPos].eval != ValueC.VALUE_NONE                 && (pos.captured_piece_type() == 0)                 && !Utils.is_special(move)"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The conditional expression  "!PvNode && !inCheck                 && depth < RazorDepth                 && refinedValue + razor_margin(depth) < beta                 && ttMove == MoveC.MOVE_NONE                 && Math.Abs(beta) < ValueC.VALUE_MATE_IN_MAX_PLY                 && !pos.pawn_on_7th(pos.sideToMove)"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The conditional expression  "!PvNode && !inCheck                 && (ss[ssPos].skipNullMove == 0)                 && depth < RazorDepth                 && Math.Abs(beta) < ValueC.VALUE_MATE_IN_MAX_PLY                 && refinedValue - futility_margin(depth' 0) >= beta                 && (pos.non_pawn_material(pos.sideToMove) != 0)"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The conditional expression  "!PvNode && !inCheck                 && (ss[ssPos].skipNullMove == 0)                 && depth > DepthC.ONE_PLY                 && refinedValue >= beta                 && Math.Abs(beta) < ValueC.VALUE_MATE_IN_MAX_PLY                 && (pos.non_pawn_material(pos.sideToMove) != 0)"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The conditional expression  "depth < ThreatDepth                         && (ss[ssPos - 1].reduction != 0)                         && threatMove != MoveC.MOVE_NONE                         && connected_moves(pos' ss[ssPos - 1].currentMove' threatMove)"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The conditional expression  "!PvNode && !inCheck                 && excludedMove == MoveC.MOVE_NONE                 && depth >= RazorDepth + DepthC.ONE_PLY                 && (ss[ssPos].skipNullMove == 0)                 && Math.Abs(beta) < ValueC.VALUE_MATE_IN_MAX_PLY"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The conditional expression  "ttMove == MoveC.MOVE_NONE                 && depth >= IIDDepth[PvNode ? 1 : 0]                 && (PvNode || (!inCheck && ss[ssPos].eval + IIDMargin >= beta))"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The conditional expression  "bestValue < beta                    && (move = mp.next_move()) != MoveC.MOVE_NONE                     && !thisThread.cutoff_occurred()                     && !SignalsStop"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The conditional expression  "singularExtensionNode                     && (ext == 0)                     && move == ttMove                     && pos.pl_move_is_legal(move' ci.pinned)"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The conditional expression  "!PvNode && !inCheck                     && !captureOrPromotion                     && !dangerous                     && move != ttMove                     && (bestValue > ValueC.VALUE_MATED_IN_MAX_PLY || bestValue == -ValueC.VALUE_INFINITE)                     && !Utils.is_castle(move)"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The conditional expression  "!isPvMove                     && !captureOrPromotion                     && !dangerous                     && ss[ssPos].killers0 != move                     && ss[ssPos].killers1 != move                     && depth > 3 * DepthC.ONE_PLY                     && !Utils.is_castle(move)"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The conditional expression  "PvNode && (isPvMove || (value > alpha && (RootNode || value < beta)))"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The conditional expression  "!SpNode                   && depth >= Threads.min_split_depth()                   && bestValue < beta                   && Threads.available_slave_exists(thisThread)                   && !SignalsStop                   && !thisThread.cutoff_occurred()"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The conditional expression  "!PvNode                     && !inCheck                     && !givesCheck                     && move != ttMove                     && enoughMaterial                     && ((move & (3 << 14)) != (1 << 14))                     && !pos.is_passed_pawn_push(move)"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The conditional expression  "!PvNode                     && move != ttMove                     && (!inCheck || evasionPrunable)                     && (move & (3 << 14)) != (1 << 14)                     && pos.see(move' true) < 0"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The conditional expression  "!PvNode                     && !inCheck                     && givesCheck                     && move != ttMove                     && !(((move & (3 << 14)) != 0) ? ((move & (3 << 14)) != (3 << 14)) : (pos.board[move & 0x3F] != PieceC.NO_PIECE))                     && ss[ssPos].eval + Constants.PawnValueMidgame / 4 < beta                     && !check_is_dangerous(pos' move' futilityBase' beta)"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,connected_threat,The conditional expression  "pos.is_capture(threat)                 && (Position.PieceValueMidgame[pos.piece_on(tfrom)] >= Position.PieceValueMidgame[pos.piece_on(tto)]                     || Utils.type_of(pos.piece_on(tfrom)) == PieceTypeC.KING)                 && pos.move_attacks_square(m' tto)"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,refine_eval,The conditional expression  "(((tte.type() & Bound.BOUND_LOWER) != 0) && v >= defaultEval)                 || (((tte.type() & Bound.BOUND_UPPER) != 0) && v < defaultEval)"  is complex.
Complex Conditional,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,check_time,The conditional expression  "(Limits.use_time_management() && noMoreTime)                 || ((Limits.movetime != 0) && e >= Limits.movetime)"  is complex.
Complex Conditional,Portfish,Thread,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Thread.cs,idle_loop,The conditional expression  "do_sleep                         || do_exit                         || (!is_searching && use_sleeping_threads)"  is complex.
Magic Number,Portfish,Benchmark,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Benchmark.cs,benchmark,The following statement contains a magic number: limits.movetime = 1000 * int.Parse(limit);
Magic Number,Portfish,Benchmark,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Benchmark.cs,benchmark,The following statement contains a magic number: Plug.Write(((int)(nodes / (e / 1000.0))).ToString());
Magic Number,Portfish,Benchmark,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Benchmark.cs,benchmark,The following statement contains a magic number: Plug.Write(((int)(nodesAll / (eAll / 1000.0))).ToString());
Magic Number,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,probe_kpk_bitbase,The following statement contains a magic number: int idx = stm + (bksq << 1) + (wksq << 7) + ((wpsq & 7) << 13) + (((wpsq >> 3) - 1) << 15);
Magic Number,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,probe_kpk_bitbase,The following statement contains a magic number: int idx = stm + (bksq << 1) + (wksq << 7) + ((wpsq & 7) << 13) + (((wpsq >> 3) - 1) << 15);
Magic Number,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,probe_kpk_bitbase,The following statement contains a magic number: int idx = stm + (bksq << 1) + (wksq << 7) + ((wpsq & 7) << 13) + (((wpsq >> 3) - 1) << 15);
Magic Number,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,probe_kpk_bitbase,The following statement contains a magic number: int idx = stm + (bksq << 1) + (wksq << 7) + ((wpsq & 7) << 13) + (((wpsq >> 3) - 1) << 15);
Magic Number,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,probe_kpk_bitbase,The following statement contains a magic number: int idx = stm + (bksq << 1) + (wksq << 7) + ((wpsq & 7) << 13) + (((wpsq >> 3) - 1) << 15);
Magic Number,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,probe_kpk_bitbase,The following statement contains a magic number: return KPKBitbase[idx / 32] & (Constants.UInt32One << (idx & 31));
Magic Number,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,probe_kpk_bitbase,The following statement contains a magic number: return KPKBitbase[idx / 32] & (Constants.UInt32One << (idx & 31));
Magic Number,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,init,The following statement contains a magic number: db[32 * idx + bit] == ResultC.WIN
Magic Number,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,init,The following statement contains a magic number: idx < IndexMax / 32
Magic Number,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,index,The following statement contains a magic number: return c + (b << 1) + (w << 7) + (Utils.file_of(p) << 13) + ((Utils.rank_of(p) - 1) << 15);
Magic Number,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,index,The following statement contains a magic number: return c + (b << 1) + (w << 7) + (Utils.file_of(p) << 13) + ((Utils.rank_of(p) - 1) << 15);
Magic Number,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,index,The following statement contains a magic number: return c + (b << 1) + (w << 7) + (Utils.file_of(p) << 13) + ((Utils.rank_of(p) - 1) << 15);
Magic Number,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,decode_index,The following statement contains a magic number: bksq = ((idx >> 1) & 63);
Magic Number,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,decode_index,The following statement contains a magic number: wksq = ((idx >> 7) & 63);
Magic Number,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,decode_index,The following statement contains a magic number: wksq = ((idx >> 7) & 63);
Magic Number,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,decode_index,The following statement contains a magic number: psq = Utils.make_square(((idx >> 13) & 3)' ((idx >> 15) + 1));
Magic Number,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,decode_index,The following statement contains a magic number: psq = Utils.make_square(((idx >> 13) & 3)' ((idx >> 15) + 1));
Magic Number,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,decode_index,The following statement contains a magic number: psq = Utils.make_square(((idx >> 13) & 3)' ((idx >> 15) + 1));
Magic Number,Portfish,KPKPosition,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitbase.cs,classify_leaf,The following statement contains a magic number: Utils.file_of(wksq) == FileC.FILE_A                  && Utils.file_of(psq) == FileC.FILE_A                  && Utils.rank_of(wksq) > Utils.rank_of(psq)                  && bksq == wksq + 2
Magic Number,Portfish,Bitcount,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitcount.cs,popcount_1s_Full,The following statement contains a magic number: UInt32 w = (UInt32)(b >> 32)' v = (UInt32)(b);
Magic Number,Portfish,Bitcount,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitcount.cs,popcount_1s_Full,The following statement contains a magic number: v = ((v >> 2) & 0x33333333) + (v & 0x33333333);
Magic Number,Portfish,Bitcount,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitcount.cs,popcount_1s_Full,The following statement contains a magic number: w = ((w >> 2) & 0x33333333) + (w & 0x33333333);
Magic Number,Portfish,Bitcount,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitcount.cs,popcount_1s_Full,The following statement contains a magic number: v = ((v >> 4) + v) & 0x0F0F0F0F;
Magic Number,Portfish,Bitcount,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitcount.cs,popcount_1s_Full,The following statement contains a magic number: v += (((w >> 4) + w) & 0x0F0F0F0F);
Magic Number,Portfish,Bitcount,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitcount.cs,popcount_1s_Full,The following statement contains a magic number: return (int)(v >> 24);
Magic Number,Portfish,Bitcount,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitcount.cs,popcount_1s_Max15,The following statement contains a magic number: UInt32 w = (UInt32)(b >> 32)' v = (UInt32)(b);
Magic Number,Portfish,Bitcount,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitcount.cs,popcount_1s_Max15,The following statement contains a magic number: v = ((v >> 2) & 0x33333333) + (v & 0x33333333);
Magic Number,Portfish,Bitcount,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitcount.cs,popcount_1s_Max15,The following statement contains a magic number: w = ((w >> 2) & 0x33333333) + (w & 0x33333333);
Magic Number,Portfish,Bitcount,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Bitcount.cs,popcount_1s_Max15,The following statement contains a magic number: return (int)(v >> 28);
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,probe,The following statement contains a magic number: int pt = (move >> 12) & 7;
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,probe,The following statement contains a magic number: int pt = (move >> 12) & 7;
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.key =                  (((UInt64)t[0]) << 56) |                  (((UInt64)t[1]) << 48) |                  (((UInt64)t[2]) << 40) |                  (((UInt64)t[3]) << 32) |                  (((UInt64)t[4]) << 24) |                  (((UInt64)t[5]) << 16) |                  (((UInt64)t[6]) << 8) |                  (((UInt64)t[7]) << 0);
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.key =                  (((UInt64)t[0]) << 56) |                  (((UInt64)t[1]) << 48) |                  (((UInt64)t[2]) << 40) |                  (((UInt64)t[3]) << 32) |                  (((UInt64)t[4]) << 24) |                  (((UInt64)t[5]) << 16) |                  (((UInt64)t[6]) << 8) |                  (((UInt64)t[7]) << 0);
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.key =                  (((UInt64)t[0]) << 56) |                  (((UInt64)t[1]) << 48) |                  (((UInt64)t[2]) << 40) |                  (((UInt64)t[3]) << 32) |                  (((UInt64)t[4]) << 24) |                  (((UInt64)t[5]) << 16) |                  (((UInt64)t[6]) << 8) |                  (((UInt64)t[7]) << 0);
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.key =                  (((UInt64)t[0]) << 56) |                  (((UInt64)t[1]) << 48) |                  (((UInt64)t[2]) << 40) |                  (((UInt64)t[3]) << 32) |                  (((UInt64)t[4]) << 24) |                  (((UInt64)t[5]) << 16) |                  (((UInt64)t[6]) << 8) |                  (((UInt64)t[7]) << 0);
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.key =                  (((UInt64)t[0]) << 56) |                  (((UInt64)t[1]) << 48) |                  (((UInt64)t[2]) << 40) |                  (((UInt64)t[3]) << 32) |                  (((UInt64)t[4]) << 24) |                  (((UInt64)t[5]) << 16) |                  (((UInt64)t[6]) << 8) |                  (((UInt64)t[7]) << 0);
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.key =                  (((UInt64)t[0]) << 56) |                  (((UInt64)t[1]) << 48) |                  (((UInt64)t[2]) << 40) |                  (((UInt64)t[3]) << 32) |                  (((UInt64)t[4]) << 24) |                  (((UInt64)t[5]) << 16) |                  (((UInt64)t[6]) << 8) |                  (((UInt64)t[7]) << 0);
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.key =                  (((UInt64)t[0]) << 56) |                  (((UInt64)t[1]) << 48) |                  (((UInt64)t[2]) << 40) |                  (((UInt64)t[3]) << 32) |                  (((UInt64)t[4]) << 24) |                  (((UInt64)t[5]) << 16) |                  (((UInt64)t[6]) << 8) |                  (((UInt64)t[7]) << 0);
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.key =                  (((UInt64)t[0]) << 56) |                  (((UInt64)t[1]) << 48) |                  (((UInt64)t[2]) << 40) |                  (((UInt64)t[3]) << 32) |                  (((UInt64)t[4]) << 24) |                  (((UInt64)t[5]) << 16) |                  (((UInt64)t[6]) << 8) |                  (((UInt64)t[7]) << 0);
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.key =                  (((UInt64)t[0]) << 56) |                  (((UInt64)t[1]) << 48) |                  (((UInt64)t[2]) << 40) |                  (((UInt64)t[3]) << 32) |                  (((UInt64)t[4]) << 24) |                  (((UInt64)t[5]) << 16) |                  (((UInt64)t[6]) << 8) |                  (((UInt64)t[7]) << 0);
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.key =                  (((UInt64)t[0]) << 56) |                  (((UInt64)t[1]) << 48) |                  (((UInt64)t[2]) << 40) |                  (((UInt64)t[3]) << 32) |                  (((UInt64)t[4]) << 24) |                  (((UInt64)t[5]) << 16) |                  (((UInt64)t[6]) << 8) |                  (((UInt64)t[7]) << 0);
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.key =                  (((UInt64)t[0]) << 56) |                  (((UInt64)t[1]) << 48) |                  (((UInt64)t[2]) << 40) |                  (((UInt64)t[3]) << 32) |                  (((UInt64)t[4]) << 24) |                  (((UInt64)t[5]) << 16) |                  (((UInt64)t[6]) << 8) |                  (((UInt64)t[7]) << 0);
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.key =                  (((UInt64)t[0]) << 56) |                  (((UInt64)t[1]) << 48) |                  (((UInt64)t[2]) << 40) |                  (((UInt64)t[3]) << 32) |                  (((UInt64)t[4]) << 24) |                  (((UInt64)t[5]) << 16) |                  (((UInt64)t[6]) << 8) |                  (((UInt64)t[7]) << 0);
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.key =                  (((UInt64)t[0]) << 56) |                  (((UInt64)t[1]) << 48) |                  (((UInt64)t[2]) << 40) |                  (((UInt64)t[3]) << 32) |                  (((UInt64)t[4]) << 24) |                  (((UInt64)t[5]) << 16) |                  (((UInt64)t[6]) << 8) |                  (((UInt64)t[7]) << 0);
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.move = (UInt16)(                  (((UInt64)t[8]) << 8) |                  (((UInt64)t[9]) << 0));
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.move = (UInt16)(                  (((UInt64)t[8]) << 8) |                  (((UInt64)t[9]) << 0));
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.move = (UInt16)(                  (((UInt64)t[8]) << 8) |                  (((UInt64)t[9]) << 0));
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.count = (UInt16)(                  (((UInt64)t[10]) << 8) |                  (((UInt64)t[11]) << 0));
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.count = (UInt16)(                  (((UInt64)t[10]) << 8) |                  (((UInt64)t[11]) << 0));
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.count = (UInt16)(                  (((UInt64)t[10]) << 8) |                  (((UInt64)t[11]) << 0));
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.learn = (UInt32)(                  (((UInt64)t[12]) << 24) |                  (((UInt64)t[13]) << 16) |                  (((UInt64)t[14]) << 8) |                  (((UInt64)t[15]) << 0));
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.learn = (UInt32)(                  (((UInt64)t[12]) << 24) |                  (((UInt64)t[13]) << 16) |                  (((UInt64)t[14]) << 8) |                  (((UInt64)t[15]) << 0));
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.learn = (UInt32)(                  (((UInt64)t[12]) << 24) |                  (((UInt64)t[13]) << 16) |                  (((UInt64)t[14]) << 8) |                  (((UInt64)t[15]) << 0));
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.learn = (UInt32)(                  (((UInt64)t[12]) << 24) |                  (((UInt64)t[13]) << 16) |                  (((UInt64)t[14]) << 8) |                  (((UInt64)t[15]) << 0));
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.learn = (UInt32)(                  (((UInt64)t[12]) << 24) |                  (((UInt64)t[13]) << 16) |                  (((UInt64)t[14]) << 8) |                  (((UInt64)t[15]) << 0));
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.learn = (UInt32)(                  (((UInt64)t[12]) << 24) |                  (((UInt64)t[13]) << 16) |                  (((UInt64)t[14]) << 8) |                  (((UInt64)t[15]) << 0));
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,Read,The following statement contains a magic number: e.learn = (UInt32)(                  (((UInt64)t[12]) << 24) |                  (((UInt64)t[13]) << 16) |                  (((UInt64)t[14]) << 8) |                  (((UInt64)t[15]) << 0));
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,book_key,The following statement contains a magic number: int polyPiece = 2 * (Utils.type_of(p) - 1) + (Utils.color_of(p) == ColorC.WHITE ? 1 : 0);
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,book_key,The following statement contains a magic number: key ^= PolyGlotRandoms[ZobPieceOffset + (64 * polyPiece + s)];
Magic Number,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,binary_search,The following statement contains a magic number: mid = (low + high) / 2;
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,key,The following statement contains a magic number: Debug.Assert(code.Length > 0 && code.Length < 8);
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,key,The following statement contains a magic number: string fen = sides[0] + (char)('0' + (int)(8 - code.Length))                          + sides[1] + "/8/8/8/8/8/8/8 w - - 0 10";
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KBBKN,The following statement contains a magic number: Debug.Assert(pos.piece_count(strongerSide' PieceTypeC.BISHOP) == 2);
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KBBKN,The following statement contains a magic number: Debug.Assert(pos.non_pawn_material(strongerSide) == 2 * Constants.BishopValueMidgame);
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KBBKN,The following statement contains a magic number: result += (Utils.square_distance(bksq' nsq) * 32);
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KBBKN,The following statement contains a magic number: result += ((8 - Bitcount.popcount_1s_Max15(Position.attacks_from_KNIGHT(nsq))) * 8);
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KBBKN,The following statement contains a magic number: result += ((8 - Bitcount.popcount_1s_Max15(Position.attacks_from_KNIGHT(nsq))) * 8);
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The following statement contains a magic number: r == RankC.RANK_6                  && Utils.square_distance(bksq' queeningSq) <= 1                  && Utils.rank_of(wksq) + tempo <= RankC.RANK_6                  && (Utils.rank_of(brsq) == RankC.RANK_1 || ((tempo == 0) && Math.Abs(Utils.file_of(brsq) - f) >= 3))
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The following statement contains a magic number: r >= RankC.RANK_6                  && bksq == queeningSq                  && Utils.rank_of(brsq) == RankC.RANK_1                  && ((tempo == 0) || Utils.square_distance(wksq' wpsq) >= 2)
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The following statement contains a magic number: r <= RankC.RANK_5                  && bksq == wpsq + SquareC.DELTA_N                  && Utils.square_distance(wksq' wpsq) - tempo >= 2                  && Utils.square_distance(wksq' brsq) - tempo >= 2
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The following statement contains a magic number: r <= RankC.RANK_5                  && bksq == wpsq + SquareC.DELTA_N                  && Utils.square_distance(wksq' wpsq) - tempo >= 2                  && Utils.square_distance(wksq' brsq) - tempo >= 2
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The following statement contains a magic number: return (ScaleFactorC.SCALE_FACTOR_MAX - 2 * Utils.square_distance(wksq' queeningSq));
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The following statement contains a magic number: r == RankC.RANK_7                  && f != FileC.FILE_A                  && Utils.file_of(wrsq) == f                  && wrsq != queeningSq                  && (Utils.square_distance(wksq' queeningSq) < Utils.square_distance(bksq' queeningSq) - 2 + tempo)                  && (Utils.square_distance(wksq' queeningSq) < Utils.square_distance(bksq' wrsq) + tempo)
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The following statement contains a magic number: return (ScaleFactorC.SCALE_FACTOR_MAX                                     - 8 * Utils.square_distance(wpsq' queeningSq)                                     - 2 * Utils.square_distance(wksq' queeningSq));
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The following statement contains a magic number: return (ScaleFactorC.SCALE_FACTOR_MAX                                     - 8 * Utils.square_distance(wpsq' queeningSq)                                     - 2 * Utils.square_distance(wksq' queeningSq));
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The following statement contains a magic number: f != FileC.FILE_A                  && Utils.file_of(wrsq) == f                  && wrsq < wpsq                  && (Utils.square_distance(wksq' queeningSq) < Utils.square_distance(bksq' queeningSq) - 2 + tempo)                  && (Utils.square_distance(wksq' wpsq + SquareC.DELTA_N) < Utils.square_distance(bksq' wpsq + SquareC.DELTA_N) - 2 + tempo)                  && (Utils.square_distance(bksq' wrsq) + tempo >= 3                      || (Utils.square_distance(wksq' queeningSq) < Utils.square_distance(bksq' wrsq) + tempo                          && (Utils.square_distance(wksq' wpsq + SquareC.DELTA_N) < Utils.square_distance(bksq' wrsq) + tempo)))
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The following statement contains a magic number: f != FileC.FILE_A                  && Utils.file_of(wrsq) == f                  && wrsq < wpsq                  && (Utils.square_distance(wksq' queeningSq) < Utils.square_distance(bksq' queeningSq) - 2 + tempo)                  && (Utils.square_distance(wksq' wpsq + SquareC.DELTA_N) < Utils.square_distance(bksq' wpsq + SquareC.DELTA_N) - 2 + tempo)                  && (Utils.square_distance(bksq' wrsq) + tempo >= 3                      || (Utils.square_distance(wksq' queeningSq) < Utils.square_distance(bksq' wrsq) + tempo                          && (Utils.square_distance(wksq' wpsq + SquareC.DELTA_N) < Utils.square_distance(bksq' wrsq) + tempo)))
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The following statement contains a magic number: f != FileC.FILE_A                  && Utils.file_of(wrsq) == f                  && wrsq < wpsq                  && (Utils.square_distance(wksq' queeningSq) < Utils.square_distance(bksq' queeningSq) - 2 + tempo)                  && (Utils.square_distance(wksq' wpsq + SquareC.DELTA_N) < Utils.square_distance(bksq' wpsq + SquareC.DELTA_N) - 2 + tempo)                  && (Utils.square_distance(bksq' wrsq) + tempo >= 3                      || (Utils.square_distance(wksq' queeningSq) < Utils.square_distance(bksq' wrsq) + tempo                          && (Utils.square_distance(wksq' wpsq + SquareC.DELTA_N) < Utils.square_distance(bksq' wrsq) + tempo)))
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The following statement contains a magic number: return (10);
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The following statement contains a magic number: return (24 - 2 * Utils.square_distance(wksq' bksq));
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The following statement contains a magic number: return (24 - 2 * Utils.square_distance(wksq' bksq));
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPKR,The following statement contains a magic number: Math.Abs(Utils.file_of(bksq) - Utils.file_of(wpsq)) == 1                      && Utils.square_distance(wksq' bksq) > 2
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPPKRP,The following statement contains a magic number: Debug.Assert(pos.piece_count(strongerSide' PieceTypeC.PAWN) == 2);
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPPKRP,The following statement contains a magic number: switch (r)                  {                      case RankC.RANK_2: return (10);                      case RankC.RANK_3: return (10);                      case RankC.RANK_4: return (15);                      case RankC.RANK_5: return (20);                      case RankC.RANK_6: return (40);                      default: Debug.Assert(false); break;                  }
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPPKRP,The following statement contains a magic number: switch (r)                  {                      case RankC.RANK_2: return (10);                      case RankC.RANK_3: return (10);                      case RankC.RANK_4: return (15);                      case RankC.RANK_5: return (20);                      case RankC.RANK_6: return (40);                      default: Debug.Assert(false); break;                  }
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPPKRP,The following statement contains a magic number: switch (r)                  {                      case RankC.RANK_2: return (10);                      case RankC.RANK_3: return (10);                      case RankC.RANK_4: return (15);                      case RankC.RANK_5: return (20);                      case RankC.RANK_6: return (40);                      default: Debug.Assert(false); break;                  }
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPPKRP,The following statement contains a magic number: switch (r)                  {                      case RankC.RANK_2: return (10);                      case RankC.RANK_3: return (10);                      case RankC.RANK_4: return (15);                      case RankC.RANK_5: return (20);                      case RankC.RANK_6: return (40);                      default: Debug.Assert(false); break;                  }
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KRPPKRP,The following statement contains a magic number: switch (r)                  {                      case RankC.RANK_2: return (10);                      case RankC.RANK_3: return (10);                      case RankC.RANK_4: return (15);                      case RankC.RANK_5: return (20);                      case RankC.RANK_6: return (40);                      default: Debug.Assert(false); break;                  }
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KPsK,The following statement contains a magic number: Debug.Assert(pos.piece_count(strongerSide' PieceTypeC.PAWN) >= 2);
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KBPPKB,The following statement contains a magic number: Debug.Assert(pos.piece_count(strongerSide' PieceTypeC.PAWN) == 2);
Magic Number,Portfish,Endgame,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Endgame.cs,Endgame_KBPPKB,The following statement contains a magic number: switch (Utils.file_distance(psq1' psq2))              {                  case 0:                      // Both pawns are on the same file. Easy draw if defender firmly controls                      // some square in the frontmost pawn's path.                      if (Utils.file_of(ksq) == Utils.file_of(blockSq1)                    && Utils.relative_rank_CS(strongerSide' ksq) >= Utils.relative_rank_CS(strongerSide' blockSq1)                    && Utils.opposite_colors(ksq' wbsq))                          return ScaleFactorC.SCALE_FACTOR_DRAW;                      else                          return ScaleFactorC.SCALE_FACTOR_NONE;                    case 1:                      // Pawns on adjacent files. Draw if defender firmly controls the square                      // in front of the frontmost pawn's path' and the square diagonally behind                      // this square on the file of the other pawn.                      if (ksq == blockSq1                          && Utils.opposite_colors(ksq' wbsq)                          && (bbsq == blockSq2                              || (((pos.attacks_from_BISHOP(blockSq2) & pos.pieces_PTC(PieceTypeC.BISHOP' weakerSide))) != 0)                              || Math.Abs(r1 - r2) >= 2))                          return ScaleFactorC.SCALE_FACTOR_DRAW;                        else if (ksq == blockSq2                               && Utils.opposite_colors(ksq' wbsq)                               && (bbsq == blockSq1                                   || (((pos.attacks_from_BISHOP(blockSq1) & pos.pieces_PTC(PieceTypeC.BISHOP' weakerSide)))) != 0))                          return ScaleFactorC.SCALE_FACTOR_DRAW;                      else                          return ScaleFactorC.SCALE_FACTOR_NONE;                    default:                      // The pawns are not on the same file or adjacent files. No scaling.                      return ScaleFactorC.SCALE_FACTOR_NONE;              }
Magic Number,Portfish,EvalInfo,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,EvalInfo,The following statement contains a magic number: attackedBy[i] = new Bitboard[8];
Magic Number,Portfish,EvalInfo,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,EvalInfo,The following statement contains a magic number: i < 2
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,init,The following statement contains a magic number: TracedScores[0] = new Score[16];
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,init,The following statement contains a magic number: TracedScores[1] = new Score[16];
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,init,The following statement contains a magic number: KingDangerTable[0] = new Score[128];
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,init,The following statement contains a magic number: KingDangerTable[1] = new Score[128];
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,init,The following statement contains a magic number: Weights[EvalWeightC.KingDangerUs] = Weights[EvalWeightC.KingDangerThem] = (Weights[EvalWeightC.KingDangerUs] + Weights[EvalWeightC.KingDangerThem]) / 2;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,init,The following statement contains a magic number: t = Math.Min(Peak' Math.Min((int)(0.4 * i * i)' t + MaxSlope));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,init,The following statement contains a magic number: i < 100
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,trace,The following statement contains a magic number: Array.Clear(TracedScores[0]' 0' 16);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,trace,The following statement contains a magic number: Array.Clear(TracedScores[1]' 0' 16);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,trace,The following statement contains a magic number: TraceStream.Append("Eval term ".PadLeft(21' ' '));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: score += ((ei.mi.value << 16) + ei.mi.value);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: score += (                  ((((int)(((((mobilityWhite - mobilityBlack) + 32768) & ~0xffff) / 0x10000)) * (((Weights[EvalWeightC.Mobility] + 32768) & ~0xffff) / 0x10000)) / 0x100) << 16) +                  (((int)(((Int16)((mobilityWhite - mobilityBlack) & 0xffff))) * ((Int16)(Weights[EvalWeightC.Mobility] & 0xffff))) / 0x100)              );
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: score += (                  ((((int)(((((mobilityWhite - mobilityBlack) + 32768) & ~0xffff) / 0x10000)) * (((Weights[EvalWeightC.Mobility] + 32768) & ~0xffff) / 0x10000)) / 0x100) << 16) +                  (((int)(((Int16)((mobilityWhite - mobilityBlack) & 0xffff))) * ((Int16)(Weights[EvalWeightC.Mobility] & 0xffff))) / 0x100)              );
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: score += (                  ((((int)(((((mobilityWhite - mobilityBlack) + 32768) & ~0xffff) / 0x10000)) * (((Weights[EvalWeightC.Mobility] + 32768) & ~0xffff) / 0x10000)) / 0x100) << 16) +                  (((int)(((Int16)((mobilityWhite - mobilityBlack) & 0xffff))) * ((Int16)(Weights[EvalWeightC.Mobility] & 0xffff))) / 0x100)              );
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: score += (((((int)((((((s * ei.mi.spaceWeight) << 16) + 32768) & ~0xffff) / 0x10000)) * (((Weights[EvalWeightC.Space] + 32768) & ~0xffff) / 0x10000)) / 0x100) << 16)                       + (((int)(((Int16)(((s * ei.mi.spaceWeight) << 16) & 0xffff))) * ((Int16)(Weights[EvalWeightC.Space] & 0xffff))) / 0x100));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: score += (((((int)((((((s * ei.mi.spaceWeight) << 16) + 32768) & ~0xffff) / 0x10000)) * (((Weights[EvalWeightC.Space] + 32768) & ~0xffff) / 0x10000)) / 0x100) << 16)                       + (((int)(((Int16)(((s * ei.mi.spaceWeight) << 16) & 0xffff))) * ((Int16)(Weights[EvalWeightC.Space] & 0xffff))) / 0x100));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: score += (((((int)((((((s * ei.mi.spaceWeight) << 16) + 32768) & ~0xffff) / 0x10000)) * (((Weights[EvalWeightC.Space] + 32768) & ~0xffff) / 0x10000)) / 0x100) << 16)                       + (((int)(((Int16)(((s * ei.mi.spaceWeight) << 16) & 0xffff))) * ((Int16)(Weights[EvalWeightC.Space] & 0xffff))) / 0x100));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: score += (((((int)((((((s * ei.mi.spaceWeight) << 16) + 32768) & ~0xffff) / 0x10000)) * (((Weights[EvalWeightC.Space] + 32768) & ~0xffff) / 0x10000)) / 0x100) << 16)                       + (((int)(((Int16)(((s * ei.mi.spaceWeight) << 16) & 0xffff))) * ((Int16)(Weights[EvalWeightC.Space] & 0xffff))) / 0x100));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: score += (((((int)((((((s * ei.mi.spaceWeight) << 16) + 32768) & ~0xffff) / 0x10000)) * (((Weights[EvalWeightC.Space] + 32768) & ~0xffff) / 0x10000)) / 0x100) << 16)                       + (((int)(((Int16)(((s * ei.mi.spaceWeight) << 16) & 0xffff))) * ((Int16)(Weights[EvalWeightC.Space] & 0xffff))) / 0x100));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: sf = (pos.pieceCount[ColorC.WHITE][PieceTypeC.PAWN] + pos.pieceCount[ColorC.BLACK][PieceTypeC.PAWN] == 1) ? (8) : (32);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: sf = (pos.pieceCount[ColorC.WHITE][PieceTypeC.PAWN] + pos.pieceCount[ColorC.BLACK][PieceTypeC.PAWN] == 1) ? (8) : (32);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: ei.mi.gamePhase < PhaseC.PHASE_MIDGAME                  &&                   (                      pos.pieceCount[ColorC.WHITE][PieceTypeC.BISHOP] == 1                      &&                       pos.pieceCount[ColorC.BLACK][PieceTypeC.BISHOP] == 1                      &&                       (((((pos.pieceList[ColorC.WHITE][PieceTypeC.BISHOP][0] ^ pos.pieceList[ColorC.BLACK][PieceTypeC.BISHOP][0]) >> 3) ^ (pos.pieceList[ColorC.WHITE][PieceTypeC.BISHOP][0] ^ pos.pieceList[ColorC.BLACK][PieceTypeC.BISHOP][0])) & 1) != 0)                  )                  && sf == ScaleFactorC.SCALE_FACTOR_NORMAL
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: int result = ((((score + 32768) & ~0xffff) / 0x10000) * (int)(ei.mi.gamePhase) + ev * (int)(128 - ei.mi.gamePhase)) / 128;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: int result = ((((score + 32768) & ~0xffff) / 0x10000) * (int)(ei.mi.gamePhase) + ev * (int)(128 - ei.mi.gamePhase)) / 128;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: int result = ((((score + 32768) & ~0xffff) / 0x10000) * (int)(ei.mi.gamePhase) + ev * (int)(128 - ei.mi.gamePhase)) / 128;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: Value v = ((result + GrainSize / 2) & ~(GrainSize - 1));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: TraceStream.Append(FormatDouble((100.0 * ei.mi.game_phase() / 128.0)' 6' false));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: TraceStream.Append(FormatDouble((100.0 * ei.mi.game_phase() / 128.0)' 6' false));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: TraceStream.Append(FormatDouble((100.0 * ei.mi.game_phase() / 128.0)' 6' false));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: TraceStream.Append(FormatDouble((100.0 * (1.0 - ei.mi.game_phase() / 128.0))' 6' false));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: TraceStream.Append(FormatDouble((100.0 * (1.0 - ei.mi.game_phase() / 128.0))' 6' false));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: TraceStream.Append(FormatDouble((100.0 * (1.0 - ei.mi.game_phase() / 128.0))' 6' false));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: TraceStream.Append(FormatDouble(((100.0 * sf) / ScaleFactorC.SCALE_FACTOR_NORMAL)' 6' false));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,do_evaluate,The following statement contains a magic number: TraceStream.Append(FormatDouble(((100.0 * sf) / ScaleFactorC.SCALE_FACTOR_NORMAL)' 6' false));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,init_eval_info,The following statement contains a magic number: ei.kingRing[Them] = (b | (Us == ColorC.WHITE ? b >> 8 : b << 8));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,init_eval_info,The following statement contains a magic number: ei.kingRing[Them] = (b | (Us == ColorC.WHITE ? b >> 8 : b << 8));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,init_eval_info,The following statement contains a magic number: ei.kingAttackersCount[Us] = (b != 0) ? Bitcount.popcount_1s_Max15(b) / 2 : 0;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_threats,The following statement contains a magic number: score += ((undefendedMinors & (undefendedMinors - 1)) != 0) ? UndefendedMinorPenalty * 2 : UndefendedMinorPenalty;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: score += ThreatBonus[Piece][pos.board[Utils.first_1(b)] & 7];
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: Value bonus = OutpostBonus[Piece == PieceTypeC.BISHOP ? 1 : 0][s ^ (Us * 56)];
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: bonus += bonus + bonus / 2;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: score += ((bonus << 16) + bonus);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: (Piece == PieceTypeC.ROOK || Piece == PieceTypeC.QUEEN)                          &&                          ((s >> 3) ^ (Us * 7)) == RankC.RANK_7                          &&                          (((pos.pieceList[Them][PieceTypeC.KING][0]) >> 3) ^ (Us * 7)) == RankC.RANK_8
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: (Piece == PieceTypeC.ROOK || Piece == PieceTypeC.QUEEN)                          &&                          ((s >> 3) ^ (Us * 7)) == RankC.RANK_7                          &&                          (((pos.pieceList[Them][PieceTypeC.KING][0]) >> 3) ^ (Us * 7)) == RankC.RANK_8
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: (Piece == PieceTypeC.ROOK || Piece == PieceTypeC.QUEEN)                          &&                          ((s >> 3) ^ (Us * 7)) == RankC.RANK_7                          &&                          (((pos.pieceList[Them][PieceTypeC.KING][0]) >> 3) ^ (Us * 7)) == RankC.RANK_8
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: (Piece == PieceTypeC.ROOK || Piece == PieceTypeC.QUEEN)                          &&                          ((s >> 3) ^ (Us * 7)) == RankC.RANK_7                          &&                          (((pos.pieceList[Them][PieceTypeC.KING][0]) >> 3) ^ (Us * 7)) == RankC.RANK_8
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: score -= 2 * TrappedBishopA1H1Penalty;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: f = (s & 7);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: mob > 6 || halfOpenUs
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: score -= ((((pos.st.castleRights & (CastleRightC.WHITE_ANY << (Us << 1))) != 0) ? (TrappedRookPenalty - mob * 16) / 2 : (TrappedRookPenalty - mob * 16)) << 16);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: score -= ((((pos.st.castleRights & (CastleRightC.WHITE_ANY << (Us << 1))) != 0) ? (TrappedRookPenalty - mob * 16) / 2 : (TrappedRookPenalty - mob * 16)) << 16);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: score -= ((((pos.st.castleRights & (CastleRightC.WHITE_ANY << (Us << 1))) != 0) ? (TrappedRookPenalty - mob * 16) / 2 : (TrappedRookPenalty - mob * 16)) << 16);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: score -= ((((pos.st.castleRights & (CastleRightC.WHITE_ANY << (Us << 1))) != 0) ? (TrappedRookPenalty - mob * 16) / 2 : (TrappedRookPenalty - mob * 16)) << 16);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: ((Us == ColorC.WHITE) ? (ei.pi.halfOpenFilesWHITE & ~((1 << ((ksq & 7) + 1)) - 1)) : (ei.pi.halfOpenFilesBLACK & ~((1 << ((ksq & 7) + 1)) - 1))) == 0
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: ((Us == ColorC.WHITE) ? (ei.pi.halfOpenFilesWHITE & ~((1 << ((ksq & 7) + 1)) - 1)) : (ei.pi.halfOpenFilesBLACK & ~((1 << ((ksq & 7) + 1)) - 1))) == 0
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: f > (ksq & 7)
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: (ksq & 7) >= FileC.FILE_E
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: ((ksq >> 3) ^ (Us * 7)) == RankC.RANK_1 || (ksq >> 3) == (s >> 3)
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: ((ksq >> 3) ^ (Us * 7)) == RankC.RANK_1 || (ksq >> 3) == (s >> 3)
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: ((ksq >> 3) ^ (Us * 7)) == RankC.RANK_1 || (ksq >> 3) == (s >> 3)
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_pieces_of_color,The following statement contains a magic number: ((ksq >> 3) ^ (Us * 7)) == RankC.RANK_1 || (ksq >> 3) == (s >> 3)
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_king,The following statement contains a magic number: attackUnits = Math.Min(25' (ei.kingAttackersCount[Them] * ei.kingAttackersWeight[Them]) / 2)                               + 3 * (ei.kingAdjacentZoneAttacksCount[Them] + Bitcount.popcount_1s_Max15(undefended))                               + InitKingDanger[(ksq ^ (Us * 56))]                               - ((((score) + 32768) & ~0xffff) / 0x10000) / 32;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_king,The following statement contains a magic number: attackUnits = Math.Min(25' (ei.kingAttackersCount[Them] * ei.kingAttackersWeight[Them]) / 2)                               + 3 * (ei.kingAdjacentZoneAttacksCount[Them] + Bitcount.popcount_1s_Max15(undefended))                               + InitKingDanger[(ksq ^ (Us * 56))]                               - ((((score) + 32768) & ~0xffff) / 0x10000) / 32;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_king,The following statement contains a magic number: attackUnits = Math.Min(25' (ei.kingAttackersCount[Them] * ei.kingAttackersWeight[Them]) / 2)                               + 3 * (ei.kingAdjacentZoneAttacksCount[Them] + Bitcount.popcount_1s_Max15(undefended))                               + InitKingDanger[(ksq ^ (Us * 56))]                               - ((((score) + 32768) & ~0xffff) / 0x10000) / 32;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_king,The following statement contains a magic number: attackUnits = Math.Min(25' (ei.kingAttackersCount[Them] * ei.kingAttackersWeight[Them]) / 2)                               + 3 * (ei.kingAdjacentZoneAttacksCount[Them] + Bitcount.popcount_1s_Max15(undefended))                               + InitKingDanger[(ksq ^ (Us * 56))]                               - ((((score) + 32768) & ~0xffff) / 0x10000) / 32;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_king,The following statement contains a magic number: attackUnits = Math.Min(25' (ei.kingAttackersCount[Them] * ei.kingAttackersWeight[Them]) / 2)                               + 3 * (ei.kingAdjacentZoneAttacksCount[Them] + Bitcount.popcount_1s_Max15(undefended))                               + InitKingDanger[(ksq ^ (Us * 56))]                               - ((((score) + 32768) & ~0xffff) / 0x10000) / 32;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_king,The following statement contains a magic number: attackUnits = Math.Min(25' (ei.kingAttackersCount[Them] * ei.kingAttackersWeight[Them]) / 2)                               + 3 * (ei.kingAdjacentZoneAttacksCount[Them] + Bitcount.popcount_1s_Max15(undefended))                               + InitKingDanger[(ksq ^ (Us * 56))]                               - ((((score) + 32768) & ~0xffff) / 0x10000) / 32;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_king,The following statement contains a magic number: attackUnits += QueenContactCheckBonus                                        * Bitcount.popcount_1s_Max15(b)                                        * (Them == pos.sideToMove ? 2 : 1);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_king,The following statement contains a magic number: attackUnits += RookContactCheckBonus                                        * Bitcount.popcount_1s_Max15(b)                                        * (Them == pos.sideToMove ? 2 : 1);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_king,The following statement contains a magic number: attackUnits = Math.Min(99' Math.Max(0' attackUnits));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_king,The following statement contains a magic number: marginsWHITE += (((kingScore + 32768) & ~0xffff) / 0x10000);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_king,The following statement contains a magic number: ei.kingAttackersCount[Them] >= 2                  && (ei.kingAdjacentZoneAttacksCount[Them] != 0)
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_passed_pawns,The following statement contains a magic number: int r = ((s >> 3) ^ (Us * 7)) - RankC.RANK_2;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_passed_pawns,The following statement contains a magic number: int r = ((s >> 3) ^ (Us * 7)) - RankC.RANK_2;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_passed_pawns,The following statement contains a magic number: Value mbonus = (20 * rr);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_passed_pawns,The following statement contains a magic number: Value ebonus = (10 * (rr + r + 1));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_passed_pawns,The following statement contains a magic number: ebonus += (Utils.SquareDistance[pos.pieceList[Them][PieceTypeC.KING][0]][blockSq] * 5 * rr);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_passed_pawns,The following statement contains a magic number: ebonus -= (Utils.SquareDistance[pos.pieceList[Us][PieceTypeC.KING][0]][blockSq] * 2 * rr);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_passed_pawns,The following statement contains a magic number: (blockSq >> 3) != (Us == ColorC.WHITE ? RankC.RANK_8 : RankC.RANK_1)
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_passed_pawns,The following statement contains a magic number: ebonus += (rr * (squaresToQueen == defendedSquares ? 17 : 15));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_passed_pawns,The following statement contains a magic number: ebonus += (rr * (squaresToQueen == defendedSquares ? 17 : 15));
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_passed_pawns,The following statement contains a magic number: supportingPawns = (pos.byTypeBB[PieceTypeC.PAWN] & pos.byColorBB[Us]) & Utils.AdjacentFilesBB[s & 7];
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_passed_pawns,The following statement contains a magic number: ebonus += (r * 20);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_passed_pawns,The following statement contains a magic number: (supportingPawns & Utils.RankBB[s >> 3]) != 0
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_passed_pawns,The following statement contains a magic number: ebonus += ebonus / 4;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_passed_pawns,The following statement contains a magic number: (s & 7) == FileC.FILE_A || (s & 7) == FileC.FILE_H
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_passed_pawns,The following statement contains a magic number: (s & 7) == FileC.FILE_A || (s & 7) == FileC.FILE_H
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_passed_pawns,The following statement contains a magic number: score += ((mbonus << 16) + ebonus);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_unstoppable_pawns,The following statement contains a magic number: int pliesToQueenWHITE = 256' pliesToQueenBLACK = 256' pliesToQueenWinner = 256;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_unstoppable_pawns,The following statement contains a magic number: int pliesToQueenWHITE = 256' pliesToQueenBLACK = 256' pliesToQueenWinner = 256;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_unstoppable_pawns,The following statement contains a magic number: int pliesToQueenWHITE = 256' pliesToQueenBLACK = 256' pliesToQueenWinner = 256;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_unstoppable_pawns,The following statement contains a magic number: pliesToGo = 2 * movesToGo - ((c == pos.sideToMove) ? 1 : 0);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_unstoppable_pawns,The following statement contains a magic number: Math.Abs(pliesToQueenWHITE - pliesToQueenBLACK) < 3
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_unstoppable_pawns,The following statement contains a magic number: pliesToGo = 2 * movesToGo - ((loserSide == pos.sideToMove) ? 1 : 0);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_unstoppable_pawns,The following statement contains a magic number: (pliesToQueenWinner + 3 <= pliesToGo)                      ||                      ((Utils.forward_bb(loserSide' s) & pos.pieces_PTC(PieceTypeC.PAWN' loserSide)) != 0)
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_unstoppable_pawns,The following statement contains a magic number: minKingDist = kingptg = 256;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_unstoppable_pawns,The following statement contains a magic number: pliesToGo = 2 * movesToGo - ((loserSide == pos.sideToMove) ? 1 : 0);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_unstoppable_pawns,The following statement contains a magic number: movesToGo = 256;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_unstoppable_pawns,The following statement contains a magic number: d = Utils.square_distance(blockSq' Utils.pop_1st_bit(ref b2)) - 2;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_unstoppable_pawns,The following statement contains a magic number: d = Utils.square_distance(blockSq' Utils.pop_1st_bit(ref b2)) - 2;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_unstoppable_pawns,The following statement contains a magic number: sacptg += movesToGo * 2;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_unstoppable_pawns,The following statement contains a magic number: kingptg = (minKingDist + blockersCount) * 2;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_unstoppable_pawns,The following statement contains a magic number: pliesToQueenWinner + 3 > pliesToGo + sacptg
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_unstoppable_pawns,The following statement contains a magic number: pliesToQueenWinner + 3 > pliesToGo + kingptg
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_space,The following statement contains a magic number: behind |= (Us == ColorC.WHITE ? behind >> 8 : behind << 8);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_space,The following statement contains a magic number: behind |= (Us == ColorC.WHITE ? behind >> 8 : behind << 8);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_space,The following statement contains a magic number: behind |= (Us == ColorC.WHITE ? behind >> 16 : behind << 16);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,evaluate_space,The following statement contains a magic number: behind |= (Us == ColorC.WHITE ? behind >> 16 : behind << 16);
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,weight_option,The following statement contains a magic number: int mg = int.Parse(OptionMap.Instance[mgOpt].v) * 256 / 100;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,weight_option,The following statement contains a magic number: int mg = int.Parse(OptionMap.Instance[mgOpt].v) * 256 / 100;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,weight_option,The following statement contains a magic number: int eg = int.Parse(OptionMap.Instance[egOpt].v) * 256 / 100;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,weight_option,The following statement contains a magic number: int eg = int.Parse(OptionMap.Instance[egOpt].v) * 256 / 100;
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,trace_row,The following statement contains a magic number: switch (idx)              {                  case TracedTypeC.PST:                  case TracedTypeC.IMBALANCE:                  case PieceTypeC.PAWN:                  case TracedTypeC.UNSTOPPABLE:                  case TracedTypeC.TOTAL:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" |   ---   --- |   ---   --- | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 6' true));                      TraceStream.Append(" \n");                      break;                  default:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 5' false));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(bScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(bScore))' 5' false));                      TraceStream.Append(" | ");                        TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" \n");                      break;              }
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,trace_row,The following statement contains a magic number: switch (idx)              {                  case TracedTypeC.PST:                  case TracedTypeC.IMBALANCE:                  case PieceTypeC.PAWN:                  case TracedTypeC.UNSTOPPABLE:                  case TracedTypeC.TOTAL:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" |   ---   --- |   ---   --- | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 6' true));                      TraceStream.Append(" \n");                      break;                  default:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 5' false));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(bScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(bScore))' 5' false));                      TraceStream.Append(" | ");                        TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" \n");                      break;              }
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,trace_row,The following statement contains a magic number: switch (idx)              {                  case TracedTypeC.PST:                  case TracedTypeC.IMBALANCE:                  case PieceTypeC.PAWN:                  case TracedTypeC.UNSTOPPABLE:                  case TracedTypeC.TOTAL:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" |   ---   --- |   ---   --- | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 6' true));                      TraceStream.Append(" \n");                      break;                  default:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 5' false));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(bScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(bScore))' 5' false));                      TraceStream.Append(" | ");                        TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" \n");                      break;              }
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,trace_row,The following statement contains a magic number: switch (idx)              {                  case TracedTypeC.PST:                  case TracedTypeC.IMBALANCE:                  case PieceTypeC.PAWN:                  case TracedTypeC.UNSTOPPABLE:                  case TracedTypeC.TOTAL:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" |   ---   --- |   ---   --- | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 6' true));                      TraceStream.Append(" \n");                      break;                  default:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 5' false));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(bScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(bScore))' 5' false));                      TraceStream.Append(" | ");                        TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" \n");                      break;              }
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,trace_row,The following statement contains a magic number: switch (idx)              {                  case TracedTypeC.PST:                  case TracedTypeC.IMBALANCE:                  case PieceTypeC.PAWN:                  case TracedTypeC.UNSTOPPABLE:                  case TracedTypeC.TOTAL:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" |   ---   --- |   ---   --- | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 6' true));                      TraceStream.Append(" \n");                      break;                  default:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 5' false));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(bScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(bScore))' 5' false));                      TraceStream.Append(" | ");                        TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" \n");                      break;              }
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,trace_row,The following statement contains a magic number: switch (idx)              {                  case TracedTypeC.PST:                  case TracedTypeC.IMBALANCE:                  case PieceTypeC.PAWN:                  case TracedTypeC.UNSTOPPABLE:                  case TracedTypeC.TOTAL:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" |   ---   --- |   ---   --- | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 6' true));                      TraceStream.Append(" \n");                      break;                  default:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 5' false));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(bScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(bScore))' 5' false));                      TraceStream.Append(" | ");                        TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" \n");                      break;              }
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,trace_row,The following statement contains a magic number: switch (idx)              {                  case TracedTypeC.PST:                  case TracedTypeC.IMBALANCE:                  case PieceTypeC.PAWN:                  case TracedTypeC.UNSTOPPABLE:                  case TracedTypeC.TOTAL:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" |   ---   --- |   ---   --- | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 6' true));                      TraceStream.Append(" \n");                      break;                  default:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 5' false));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(bScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(bScore))' 5' false));                      TraceStream.Append(" | ");                        TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" \n");                      break;              }
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,trace_row,The following statement contains a magic number: switch (idx)              {                  case TracedTypeC.PST:                  case TracedTypeC.IMBALANCE:                  case PieceTypeC.PAWN:                  case TracedTypeC.UNSTOPPABLE:                  case TracedTypeC.TOTAL:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" |   ---   --- |   ---   --- | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 6' true));                      TraceStream.Append(" \n");                      break;                  default:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 5' false));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(bScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(bScore))' 5' false));                      TraceStream.Append(" | ");                        TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" \n");                      break;              }
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,trace_row,The following statement contains a magic number: switch (idx)              {                  case TracedTypeC.PST:                  case TracedTypeC.IMBALANCE:                  case PieceTypeC.PAWN:                  case TracedTypeC.UNSTOPPABLE:                  case TracedTypeC.TOTAL:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" |   ---   --- |   ---   --- | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 6' true));                      TraceStream.Append(" \n");                      break;                  default:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 5' false));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(bScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(bScore))' 5' false));                      TraceStream.Append(" | ");                        TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" \n");                      break;              }
Magic Number,Portfish,Evaluate,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Evaluate.cs,trace_row,The following statement contains a magic number: switch (idx)              {                  case TracedTypeC.PST:                  case TracedTypeC.IMBALANCE:                  case PieceTypeC.PAWN:                  case TracedTypeC.UNSTOPPABLE:                  case TracedTypeC.TOTAL:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" |   ---   --- |   ---   --- | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 6' true));                      TraceStream.Append(" \n");                      break;                  default:                      TraceStream.Append(name.PadLeft(20' ' '));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore))' 5' false));                      TraceStream.Append(" | ");                      TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(bScore))' 5' false));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(bScore))' 5' false));                      TraceStream.Append(" | ");                        TraceStream.Append(FormatDouble(to_cp(Utils.mg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" ");                      TraceStream.Append(FormatDouble(to_cp(Utils.eg_value(wScore - bScore))' 6' true));                      TraceStream.Append(" \n");                      break;              }
Magic Number,Portfish,History,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\History.cs,History,The following statement contains a magic number: history[i] = new Value[64];
Magic Number,Portfish,History,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\History.cs,History,The following statement contains a magic number: maxGains[i] = new Value[64];
Magic Number,Portfish,History,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\History.cs,History,The following statement contains a magic number: i < 16
Magic Number,Portfish,History,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\History.cs,clear,The following statement contains a magic number: Array.Clear(history[i]' 0' 64);
Magic Number,Portfish,History,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\History.cs,clear,The following statement contains a magic number: Array.Clear(maxGains[i]' 0' 64);
Magic Number,Portfish,History,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\History.cs,clear,The following statement contains a magic number: i < 16
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,MaterialTable,The following statement contains a magic number: pieceCount[0] = new int[6];
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,MaterialTable,The following statement contains a magic number: pieceCount[1] = new int[6];
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The following statement contains a magic number: e.gamePhase = npm >= MidgameLimit ? PhaseC.PHASE_MIDGAME                    : npm <= EndgameLimit ? PhaseC.PHASE_ENDGAME                    : (((npm - EndgameLimit) * 128) / (MidgameLimit - EndgameLimit));
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The following statement contains a magic number: pos.piece_count(ColorC.WHITE' PieceTypeC.BISHOP) + pos.piece_count(ColorC.WHITE' PieceTypeC.KNIGHT) <= 2                      && pos.piece_count(ColorC.BLACK' PieceTypeC.BISHOP) + pos.piece_count(ColorC.BLACK' PieceTypeC.KNIGHT) <= 2
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The following statement contains a magic number: pos.piece_count(ColorC.WHITE' PieceTypeC.BISHOP) + pos.piece_count(ColorC.WHITE' PieceTypeC.KNIGHT) <= 2                      && pos.piece_count(ColorC.BLACK' PieceTypeC.BISHOP) + pos.piece_count(ColorC.BLACK' PieceTypeC.KNIGHT) <= 2
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The following statement contains a magic number: Debug.Assert(pos.piece_count(ColorC.WHITE' PieceTypeC.PAWN) >= 2);
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The following statement contains a magic number: e.factorWHITE = (byte)                  (npm_w == npm_b || npm_w < Constants.RookValueMidgame ? 0 : NoPawnsSF[Math.Min(pos.piece_count(ColorC.WHITE' PieceTypeC.BISHOP)' 2)]);
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The following statement contains a magic number: e.factorBLACK = (byte)                  (npm_w == npm_b || npm_b < Constants.RookValueMidgame ? 0 : NoPawnsSF[Math.Min(pos.piece_count(ColorC.BLACK' PieceTypeC.BISHOP)' 2)]);
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The following statement contains a magic number: npm_w + npm_b >= 2 * Constants.QueenValueMidgame + 4 * Constants.RookValueMidgame + 2 * Constants.KnightValueMidgame
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The following statement contains a magic number: npm_w + npm_b >= 2 * Constants.QueenValueMidgame + 4 * Constants.RookValueMidgame + 2 * Constants.KnightValueMidgame
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The following statement contains a magic number: npm_w + npm_b >= 2 * Constants.QueenValueMidgame + 4 * Constants.RookValueMidgame + 2 * Constants.KnightValueMidgame
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The following statement contains a magic number: pieceCount[0][2] = pos.piece_count(ColorC.WHITE' PieceTypeC.KNIGHT);
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The following statement contains a magic number: pieceCount[0][3] = pos.piece_count(ColorC.WHITE' PieceTypeC.BISHOP);
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The following statement contains a magic number: pieceCount[0][4] = pos.piece_count(ColorC.WHITE' PieceTypeC.ROOK);
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The following statement contains a magic number: pieceCount[0][5] = pos.piece_count(ColorC.WHITE' PieceTypeC.QUEEN);
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The following statement contains a magic number: pieceCount[1][2] = pos.piece_count(ColorC.BLACK' PieceTypeC.KNIGHT);
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The following statement contains a magic number: pieceCount[1][3] = pos.piece_count(ColorC.BLACK' PieceTypeC.BISHOP);
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The following statement contains a magic number: pieceCount[1][4] = pos.piece_count(ColorC.BLACK' PieceTypeC.ROOK);
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The following statement contains a magic number: pieceCount[1][5] = pos.piece_count(ColorC.BLACK' PieceTypeC.QUEEN);
Magic Number,Portfish,MaterialTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Material.cs,probe,The following statement contains a magic number: e.value = (Int16)((imbalance(ColorC.WHITE) - imbalance(ColorC.BLACK)) / 16);
Magic Number,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,move_pawns,The following statement contains a magic number: return Delta == SquareC.DELTA_N ? p << 8                : Delta == SquareC.DELTA_S ? p >> 8                : Delta == SquareC.DELTA_NE ? (p & ~Constants.FileHBB) << 9                : Delta == SquareC.DELTA_SE ? (p & ~Constants.FileHBB) >> 7                : Delta == SquareC.DELTA_NW ? (p & ~Constants.FileABB) << 7                : Delta == SquareC.DELTA_SW ? (p & ~Constants.FileABB) >> 9 : 0;
Magic Number,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,move_pawns,The following statement contains a magic number: return Delta == SquareC.DELTA_N ? p << 8                : Delta == SquareC.DELTA_S ? p >> 8                : Delta == SquareC.DELTA_NE ? (p & ~Constants.FileHBB) << 9                : Delta == SquareC.DELTA_SE ? (p & ~Constants.FileHBB) >> 7                : Delta == SquareC.DELTA_NW ? (p & ~Constants.FileABB) << 7                : Delta == SquareC.DELTA_SW ? (p & ~Constants.FileABB) >> 9 : 0;
Magic Number,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,move_pawns,The following statement contains a magic number: return Delta == SquareC.DELTA_N ? p << 8                : Delta == SquareC.DELTA_S ? p >> 8                : Delta == SquareC.DELTA_NE ? (p & ~Constants.FileHBB) << 9                : Delta == SquareC.DELTA_SE ? (p & ~Constants.FileHBB) >> 7                : Delta == SquareC.DELTA_NW ? (p & ~Constants.FileABB) << 7                : Delta == SquareC.DELTA_SW ? (p & ~Constants.FileABB) >> 9 : 0;
Magic Number,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,move_pawns,The following statement contains a magic number: return Delta == SquareC.DELTA_N ? p << 8                : Delta == SquareC.DELTA_S ? p >> 8                : Delta == SquareC.DELTA_NE ? (p & ~Constants.FileHBB) << 9                : Delta == SquareC.DELTA_SE ? (p & ~Constants.FileHBB) >> 7                : Delta == SquareC.DELTA_NW ? (p & ~Constants.FileABB) << 7                : Delta == SquareC.DELTA_SW ? (p & ~Constants.FileABB) >> 9 : 0;
Magic Number,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,move_pawns,The following statement contains a magic number: return Delta == SquareC.DELTA_N ? p << 8                : Delta == SquareC.DELTA_S ? p >> 8                : Delta == SquareC.DELTA_NE ? (p & ~Constants.FileHBB) << 9                : Delta == SquareC.DELTA_SE ? (p & ~Constants.FileHBB) >> 7                : Delta == SquareC.DELTA_NW ? (p & ~Constants.FileABB) << 7                : Delta == SquareC.DELTA_SW ? (p & ~Constants.FileABB) >> 9 : 0;
Magic Number,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,move_pawns,The following statement contains a magic number: return Delta == SquareC.DELTA_N ? p << 8                : Delta == SquareC.DELTA_S ? p >> 8                : Delta == SquareC.DELTA_NE ? (p & ~Constants.FileHBB) << 9                : Delta == SquareC.DELTA_SE ? (p & ~Constants.FileHBB) >> 7                : Delta == SquareC.DELTA_NW ? (p & ~Constants.FileABB) << 7                : Delta == SquareC.DELTA_SW ? (p & ~Constants.FileABB) >> 9 : 0;
Magic Number,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_pawn_moves,The following statement contains a magic number: b1 &= Utils.StepAttacksBB[((Them << 3) | PieceTypeC.PAWN)][ksq];
Magic Number,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_pawn_moves,The following statement contains a magic number: b2 &= Utils.StepAttacksBB[((Them << 3) | PieceTypeC.PAWN)][ksq];
Magic Number,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_pawn_moves,The following statement contains a magic number: dc1 = move_pawns(UP' pawnsNotOn7 & target) & emptySquares & ~(Utils.FileBB[ksq & 7]);
Magic Number,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_pawn_moves,The following statement contains a magic number: ms[mpos++].move = (to | ((to - UP) << 6));
Magic Number,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_pawn_moves,The following statement contains a magic number: ms[mpos++].move = (to | ((to - UP - UP) << 6));
Magic Number,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_pawn_moves,The following statement contains a magic number: ms[mpos++].move = (to | ((to - RIGHT) << 6));
Magic Number,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_pawn_moves,The following statement contains a magic number: ms[mpos++].move = (to | ((to - LEFT) << 6));
Magic Number,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_pawn_moves,The following statement contains a magic number: b1 = pawnsNotOn7 & Utils.StepAttacksBB[((Them << 3) | PieceTypeC.PAWN)][pos.st.epSquare];
Magic Number,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_pawn_moves,The following statement contains a magic number: ms[mpos++].move = (pos.st.epSquare | (Utils.pop_1st_bit(ref b1) << 6) | (2 << 14));
Magic Number,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_pawn_moves,The following statement contains a magic number: ms[mpos++].move = (pos.st.epSquare | (Utils.pop_1st_bit(ref b1) << 6) | (2 << 14));
Magic Number,Portfish,Movegen,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Movegen.cs,generate_pawn_moves,The following statement contains a magic number: ms[mpos++].move = (pos.st.epSquare | (Utils.pop_1st_bit(ref b1) << 6) | (2 << 14));
Magic Number,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,score_captures,The following statement contains a magic number: ms[idx].score = Position.PieceValueMidgame[pos.board[m & 0x3F]] - (pos.board[((m >> 6) & 0x3F)] & 7);
Magic Number,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,score_captures,The following statement contains a magic number: ms[idx].score = Position.PieceValueMidgame[pos.board[m & 0x3F]] - (pos.board[((m >> 6) & 0x3F)] & 7);
Magic Number,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,score_captures,The following statement contains a magic number: ms[idx].score += Position.PieceValueMidgame[(((m >> 12) & 3) + 2)];
Magic Number,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,score_captures,The following statement contains a magic number: ms[idx].score += Position.PieceValueMidgame[(((m >> 12) & 3) + 2)];
Magic Number,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,score_captures,The following statement contains a magic number: ms[idx].score += Position.PieceValueMidgame[(((m >> 12) & 3) + 2)];
Magic Number,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,score_captures,The following statement contains a magic number: (m & (3 << 14)) == (1 << 14)
Magic Number,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,score_captures,The following statement contains a magic number: (m & (3 << 14)) == (1 << 14)
Magic Number,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,score_captures,The following statement contains a magic number: (m & (3 << 14)) == (1 << 14)
Magic Number,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,score_noncaptures,The following statement contains a magic number: ms[idx].score = H.history[pos.board[((ms[idx].move >> 6) & 0x3F)]][ms[idx].move & 0x3F];
Magic Number,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,score_evasions,The following statement contains a magic number: lastMovePos < 2
Magic Number,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,score_evasions,The following statement contains a magic number: (seeScore = ((Position.PieceValueMidgame[pos.board[m & 0x3F]] >= Position.PieceValueMidgame[pos.board[((m >> 6) & 0x3F)]]) ? 1 : pos.see(m' false))) < 0
Magic Number,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,generate_next,The following statement contains a magic number: switch (++phase)              {                  case SequencerC.CAPTURES_S1:                  case SequencerC.CAPTURES_S3:                  case SequencerC.CAPTURES_S4:                  case SequencerC.CAPTURES_S5:                  case SequencerC.CAPTURES_S6:                      mpos = 0;                      Movegen.generate_capture(pos' ms' ref mpos);                      lastMovePos = mpos;                      score_captures();                      return;                    case SequencerC.KILLERS_S1:                      curMovePos = Constants.MAX_MOVES;//killers[0];                      lastMovePos = curMovePos + 2;                      return;                    case SequencerC.QUIETS_1_S1:                      mpos = 0;                      Movegen.generate_quiet(pos' ms' ref mpos);                      lastQuietPos = lastMovePos = mpos;                      score_noncaptures();                      lastMovePos = partition(curMovePos' lastMovePos);                      sort();                      return;                    case SequencerC.QUIETS_2_S1:                      curMovePos = lastMovePos;                      lastMovePos = lastQuietPos;                      if (depth >= 3 * DepthC.ONE_PLY)                      {                          sort();                      }                      return;                    case SequencerC.BAD_CAPTURES_S1:                      // Just pick them in reverse order to get MVV/LVA ordering                      curMovePos = Constants.MAX_MOVES - 1;                      lastMovePos = lastBadCapturePos;                      return;                    case SequencerC.EVASIONS_S2:                      mpos = 0;                      Movegen.generate_evasion(pos' ms' ref mpos);                      lastMovePos = mpos;                      score_evasions();                      return;                    case SequencerC.QUIET_CHECKS_S3:                      mpos = 0;                      Movegen.generate_quiet_check(pos' ms' ref mpos);                      lastMovePos = mpos;                      return;                    case SequencerC.EVASION:                  case SequencerC.QSEARCH_0:                  case SequencerC.QSEARCH_1:                  case SequencerC.PROBCUT:                  case SequencerC.RECAPTURE:                      phase = SequencerC.STOP;                      lastMovePos = curMovePos + 1; // Avoid another next_phase() call                      break;                    case SequencerC.STOP:                      lastMovePos = curMovePos + 1; // Avoid another next_phase() call                      return;                    default:                      Debug.Assert(false);                      break;              }
Magic Number,Portfish,MovePicker,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\MovePicker.cs,generate_next,The following statement contains a magic number: switch (++phase)              {                  case SequencerC.CAPTURES_S1:                  case SequencerC.CAPTURES_S3:                  case SequencerC.CAPTURES_S4:                  case SequencerC.CAPTURES_S5:                  case SequencerC.CAPTURES_S6:                      mpos = 0;                      Movegen.generate_capture(pos' ms' ref mpos);                      lastMovePos = mpos;                      score_captures();                      return;                    case SequencerC.KILLERS_S1:                      curMovePos = Constants.MAX_MOVES;//killers[0];                      lastMovePos = curMovePos + 2;                      return;                    case SequencerC.QUIETS_1_S1:                      mpos = 0;                      Movegen.generate_quiet(pos' ms' ref mpos);                      lastQuietPos = lastMovePos = mpos;                      score_noncaptures();                      lastMovePos = partition(curMovePos' lastMovePos);                      sort();                      return;                    case SequencerC.QUIETS_2_S1:                      curMovePos = lastMovePos;                      lastMovePos = lastQuietPos;                      if (depth >= 3 * DepthC.ONE_PLY)                      {                          sort();                      }                      return;                    case SequencerC.BAD_CAPTURES_S1:                      // Just pick them in reverse order to get MVV/LVA ordering                      curMovePos = Constants.MAX_MOVES - 1;                      lastMovePos = lastBadCapturePos;                      return;                    case SequencerC.EVASIONS_S2:                      mpos = 0;                      Movegen.generate_evasion(pos' ms' ref mpos);                      lastMovePos = mpos;                      score_evasions();                      return;                    case SequencerC.QUIET_CHECKS_S3:                      mpos = 0;                      Movegen.generate_quiet_check(pos' ms' ref mpos);                      lastMovePos = mpos;                      return;                    case SequencerC.EVASION:                  case SequencerC.QSEARCH_0:                  case SequencerC.QSEARCH_1:                  case SequencerC.PROBCUT:                  case SequencerC.RECAPTURE:                      phase = SequencerC.STOP;                      lastMovePos = curMovePos + 1; // Avoid another next_phase() call                      break;                    case SequencerC.STOP:                      lastMovePos = curMovePos + 1; // Avoid another next_phase() call                      return;                    default:                      Debug.Assert(false);                      break;              }
Magic Number,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The following statement contains a magic number: brokerSize = 40;
Magic Number,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The following statement contains a magic number: brokerSize = 4;
Magic Number,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The following statement contains a magic number: brokerSize = 4;
Magic Number,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The following statement contains a magic number: brokerSize = 36;
Magic Number,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The following statement contains a magic number: brokerSize = 8;
Magic Number,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The following statement contains a magic number: brokerSize = 4;
Magic Number,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The following statement contains a magic number: brokerSize = 4;
Magic Number,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The following statement contains a magic number: brokerSize = 36;
Magic Number,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The following statement contains a magic number: brokerSize = 8;
Magic Number,Portfish,BrokerManager,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\ObjectBroker.cs,Warmup,The following statement contains a magic number: brokerSize = 40;
Magic Number,Portfish,PawnEntry,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,shelter_storm,The following statement contains a magic number: Bitboard b = pos.byTypeBB[PieceTypeC.PAWN] & (Utils.InFrontBB[Us][ksq >> 3] | Utils.RankBB[ksq >> 3]);
Magic Number,Portfish,PawnEntry,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,shelter_storm,The following statement contains a magic number: Bitboard b = pos.byTypeBB[PieceTypeC.PAWN] & (Utils.InFrontBB[Us][ksq >> 3] | Utils.RankBB[ksq >> 3]);
Magic Number,Portfish,PawnEntry,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,shelter_storm,The following statement contains a magic number: Bitboard ourPawns = b & pos.byColorBB[Us] & ~Utils.RankBB[ksq >> 3];
Magic Number,Portfish,PawnEntry,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,shelter_storm,The following statement contains a magic number: File kf = ksq & 7;
Magic Number,Portfish,PawnEntry,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,shelter_storm,The following statement contains a magic number: rkUs = (b != 0) ? ((Us == ColorC.WHITE ? Utils.first_1(b) : (Utils.last_1(b) ^ 56)) >> 3) : RankC.RANK_1;
Magic Number,Portfish,PawnEntry,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,shelter_storm,The following statement contains a magic number: rkUs = (b != 0) ? ((Us == ColorC.WHITE ? Utils.first_1(b) : (Utils.last_1(b) ^ 56)) >> 3) : RankC.RANK_1;
Magic Number,Portfish,PawnEntry,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,shelter_storm,The following statement contains a magic number: rkThem = (b != 0) ? ((Us == ColorC.WHITE ? Utils.first_1(b) : (Utils.last_1(b) ^ 56)) >> 3) : RankC.RANK_1;
Magic Number,Portfish,PawnEntry,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,shelter_storm,The following statement contains a magic number: rkThem = (b != 0) ? ((Us == ColorC.WHITE ? Utils.first_1(b) : (Utils.last_1(b) ^ 56)) >> 3) : RankC.RANK_1;
Magic Number,Portfish,PawnEntry,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,update_safety_WHITE,The following statement contains a magic number: ((ksq >> 3) ^ (ColorC.WHITE * 7)) > RankC.RANK_4
Magic Number,Portfish,PawnEntry,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,update_safety_WHITE,The following statement contains a magic number: ((ksq >> 3) ^ (ColorC.WHITE * 7)) > RankC.RANK_4
Magic Number,Portfish,PawnEntry,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,update_safety_WHITE,The following statement contains a magic number: bonus = Math.Max(bonus' shelter_storm(ColorC.WHITE' pos' (SquareC.SQ_G1 ^ (ColorC.WHITE * 56))));
Magic Number,Portfish,PawnEntry,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,update_safety_WHITE,The following statement contains a magic number: bonus = Math.Max(bonus' shelter_storm(ColorC.WHITE' pos' (SquareC.SQ_C1 ^ (ColorC.WHITE * 56))));
Magic Number,Portfish,PawnEntry,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,update_safety_WHITE,The following statement contains a magic number: return kingSafetyWHITE = (bonus << 16);
Magic Number,Portfish,PawnEntry,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,update_safety_BLACK,The following statement contains a magic number: ((ksq >> 3) ^ (ColorC.BLACK * 7)) > RankC.RANK_4
Magic Number,Portfish,PawnEntry,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,update_safety_BLACK,The following statement contains a magic number: ((ksq >> 3) ^ (ColorC.BLACK * 7)) > RankC.RANK_4
Magic Number,Portfish,PawnEntry,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,update_safety_BLACK,The following statement contains a magic number: bonus = Math.Max(bonus' shelter_storm(ColorC.BLACK' pos' (SquareC.SQ_G1 ^ (ColorC.BLACK * 56))));
Magic Number,Portfish,PawnEntry,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,update_safety_BLACK,The following statement contains a magic number: bonus = Math.Max(bonus' shelter_storm(ColorC.BLACK' pos' (SquareC.SQ_C1 ^ (ColorC.BLACK * 56))));
Magic Number,Portfish,PawnEntry,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,update_safety_BLACK,The following statement contains a magic number: return kingSafetyBLACK = (bonus << 16);
Magic Number,Portfish,PawnTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,probe,The following statement contains a magic number: e.pawnAttacksWHITE = ((wPawns & ~Constants.FileHBB) << 9) | ((wPawns & ~Constants.FileABB) << 7);
Magic Number,Portfish,PawnTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,probe,The following statement contains a magic number: e.pawnAttacksWHITE = ((wPawns & ~Constants.FileHBB) << 9) | ((wPawns & ~Constants.FileABB) << 7);
Magic Number,Portfish,PawnTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,probe,The following statement contains a magic number: e.pawnAttacksBLACK = ((bPawns & ~Constants.FileHBB) >> 7) | ((bPawns & ~Constants.FileABB) >> 9);
Magic Number,Portfish,PawnTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,probe,The following statement contains a magic number: e.pawnAttacksBLACK = ((bPawns & ~Constants.FileHBB) >> 7) | ((bPawns & ~Constants.FileABB) >> 9);
Magic Number,Portfish,PawnTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,evaluate_pawns,The following statement contains a magic number: f = (s & 7);
Magic Number,Portfish,PawnTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,evaluate_pawns,The following statement contains a magic number: r = (s >> 3);
Magic Number,Portfish,PawnTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,evaluate_pawns,The following statement contains a magic number: b = Utils.StepAttacksBB[((Us << 3) | PieceTypeC.PAWN)][s];
Magic Number,Portfish,PawnTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,evaluate_pawns,The following statement contains a magic number: b <<= 8;
Magic Number,Portfish,PawnTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,evaluate_pawns,The following statement contains a magic number: backward = (((b | (Us == ColorC.WHITE ? b << 8 : b >> 8)) & theirPawns) != 0);
Magic Number,Portfish,PawnTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,evaluate_pawns,The following statement contains a magic number: backward = (((b | (Us == ColorC.WHITE ? b << 8 : b >> 8)) & theirPawns) != 0);
Magic Number,Portfish,PawnTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,evaluate_pawns,The following statement contains a magic number: !(passed | isolated | chain)                      && (((ourPawns & Utils.AttackSpanMask[Them][s])) == 0)                      && ((((Utils.StepAttacksBB[((Us << 3) | PieceTypeC.PAWN)][s]) & theirPawns)) == 0)
Magic Number,Portfish,PawnTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,evaluate_pawns,The following statement contains a magic number: value += CandidateBonus[((s >> 3) ^ (Us * 7))];
Magic Number,Portfish,PawnTable,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\PawnInfo.cs,evaluate_pawns,The following statement contains a magic number: value += CandidateBonus[((s >> 3) ^ (Us * 7))];
Magic Number,Portfish,CheckInfo,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,CreateCheckInfo,The following statement contains a magic number: checkSq[PieceTypeC.PAWN] = Utils.StepAttacksBB[((them << 3) | PieceTypeC.PAWN)][ksq];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,piece_moved,The following statement contains a magic number: return board[((m >> 6) & 0x3F)];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attacks_from_PAWN,The following statement contains a magic number: return Utils.StepAttacksBB[((c << 3) | PieceTypeC.PAWN)][s];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attacks_from_BISHOP,The following statement contains a magic number: UInt32 hi = (UInt32)(occupied_squares >> 32) & (UInt32)(Utils.BMasks[s] >> 32);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attacks_from_BISHOP,The following statement contains a magic number: UInt32 hi = (UInt32)(occupied_squares >> 32) & (UInt32)(Utils.BMasks[s] >> 32);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attacks_from_BISHOP,The following statement contains a magic number: return Utils.BAttacks[s][(lo * (UInt32)(Utils.BMagics[s]) ^ hi * (UInt32)(Utils.BMagics[s] >> 32)) >> Utils.BShifts[s]];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attacks_from_ROOK,The following statement contains a magic number: UInt32 hi = (UInt32)(occupied_squares >> 32) & (UInt32)(Utils.RMasks[s] >> 32);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attacks_from_ROOK,The following statement contains a magic number: UInt32 hi = (UInt32)(occupied_squares >> 32) & (UInt32)(Utils.RMasks[s] >> 32);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attacks_from_ROOK,The following statement contains a magic number: return Utils.RAttacks[s][(lo * (UInt32)(Utils.RMagics[s]) ^ hi * (UInt32)(Utils.RMagics[s] >> 32)) >> Utils.RShifts[s]];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attacks_from_QUEEN,The following statement contains a magic number: UInt32 hir = (UInt32)(occupied_squares >> 32) & (UInt32)(Utils.RMasks[s] >> 32);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attacks_from_QUEEN,The following statement contains a magic number: UInt32 hir = (UInt32)(occupied_squares >> 32) & (UInt32)(Utils.RMasks[s] >> 32);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attacks_from_QUEEN,The following statement contains a magic number: UInt32 hib = (UInt32)(occupied_squares >> 32) & (UInt32)(Utils.BMasks[s] >> 32);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attacks_from_QUEEN,The following statement contains a magic number: UInt32 hib = (UInt32)(occupied_squares >> 32) & (UInt32)(Utils.BMasks[s] >> 32);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attacks_from_QUEEN,The following statement contains a magic number: return Utils.BAttacks[s][(lob * (UInt32)(Utils.BMagics[s]) ^ hib * (UInt32)(Utils.BMagics[s] >> 32)) >> Utils.BShifts[s]] | Utils.RAttacks[s][(lor * (UInt32)(Utils.RMagics[s]) ^ hir * (UInt32)(Utils.RMagics[s] >> 32)) >> Utils.RShifts[s]];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attacks_from_QUEEN,The following statement contains a magic number: return Utils.BAttacks[s][(lob * (UInt32)(Utils.BMagics[s]) ^ hib * (UInt32)(Utils.BMagics[s] >> 32)) >> Utils.BShifts[s]] | Utils.RAttacks[s][(lor * (UInt32)(Utils.RMagics[s]) ^ hir * (UInt32)(Utils.RMagics[s] >> 32)) >> Utils.RShifts[s]];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attackers_to,The following statement contains a magic number: return ((Utils.StepAttacksBB[((ColorC.BLACK << 3) | PieceTypeC.PAWN)][s]) & (byTypeBB[PieceTypeC.PAWN] & byColorBB[ColorC.WHITE]))                    | ((Utils.StepAttacksBB[((ColorC.WHITE << 3) | PieceTypeC.PAWN)][s]) & (byTypeBB[PieceTypeC.PAWN] & byColorBB[ColorC.BLACK]))                    | (Utils.StepAttacksBB[PieceTypeC.KNIGHT][s] & byTypeBB[PieceTypeC.KNIGHT])                    | (Utils.rook_attacks_bb(s' occupied_squares) & (byTypeBB[PieceTypeC.ROOK] | byTypeBB[PieceTypeC.QUEEN]))                    | (Utils.bishop_attacks_bb(s' occupied_squares) & (byTypeBB[PieceTypeC.BISHOP] | byTypeBB[PieceTypeC.QUEEN]))                    | (Utils.StepAttacksBB[PieceTypeC.KING][s] & byTypeBB[PieceTypeC.KING]);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attackers_to,The following statement contains a magic number: return ((Utils.StepAttacksBB[((ColorC.BLACK << 3) | PieceTypeC.PAWN)][s]) & (byTypeBB[PieceTypeC.PAWN] & byColorBB[ColorC.WHITE]))                    | ((Utils.StepAttacksBB[((ColorC.WHITE << 3) | PieceTypeC.PAWN)][s]) & (byTypeBB[PieceTypeC.PAWN] & byColorBB[ColorC.BLACK]))                    | (Utils.StepAttacksBB[PieceTypeC.KNIGHT][s] & byTypeBB[PieceTypeC.KNIGHT])                    | (Utils.rook_attacks_bb(s' occupied_squares) & (byTypeBB[PieceTypeC.ROOK] | byTypeBB[PieceTypeC.QUEEN]))                    | (Utils.bishop_attacks_bb(s' occupied_squares) & (byTypeBB[PieceTypeC.BISHOP] | byTypeBB[PieceTypeC.QUEEN]))                    | (Utils.StepAttacksBB[PieceTypeC.KING][s] & byTypeBB[PieceTypeC.KING]);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attackers_to,The following statement contains a magic number: return ((Utils.StepAttacksBB[((ColorC.BLACK << 3) | PieceTypeC.PAWN)][s]) & (byTypeBB[PieceTypeC.PAWN] & byColorBB[ColorC.WHITE]))                    | ((Utils.StepAttacksBB[((ColorC.WHITE << 3) | PieceTypeC.PAWN)][s]) & (byTypeBB[PieceTypeC.PAWN] & byColorBB[ColorC.BLACK]))                    | (Utils.StepAttacksBB[PieceTypeC.KNIGHT][s] & byTypeBB[PieceTypeC.KNIGHT])                    | (Utils.rook_attacks_bb(s' occ) & (byTypeBB[PieceTypeC.ROOK] | byTypeBB[PieceTypeC.QUEEN]))                    | (Utils.bishop_attacks_bb(s' occ) & (byTypeBB[PieceTypeC.BISHOP] | byTypeBB[PieceTypeC.QUEEN]))                    | (Utils.StepAttacksBB[PieceTypeC.KING][s] & byTypeBB[PieceTypeC.KING]);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,attackers_to,The following statement contains a magic number: return ((Utils.StepAttacksBB[((ColorC.BLACK << 3) | PieceTypeC.PAWN)][s]) & (byTypeBB[PieceTypeC.PAWN] & byColorBB[ColorC.WHITE]))                    | ((Utils.StepAttacksBB[((ColorC.WHITE << 3) | PieceTypeC.PAWN)][s]) & (byTypeBB[PieceTypeC.PAWN] & byColorBB[ColorC.BLACK]))                    | (Utils.StepAttacksBB[PieceTypeC.KNIGHT][s] & byTypeBB[PieceTypeC.KNIGHT])                    | (Utils.rook_attacks_bb(s' occ) & (byTypeBB[PieceTypeC.ROOK] | byTypeBB[PieceTypeC.QUEEN]))                    | (Utils.bishop_attacks_bb(s' occ) & (byTypeBB[PieceTypeC.BISHOP] | byTypeBB[PieceTypeC.QUEEN]))                    | (Utils.StepAttacksBB[PieceTypeC.KING][s] & byTypeBB[PieceTypeC.KING]);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_passed_pawn_push,The following statement contains a magic number: return (board[((m >> 6) & 0x3F)] & 7) == PieceTypeC.PAWN                  && (((byTypeBB[PieceTypeC.PAWN] & byColorBB[sideToMove ^ 1]) & Utils.PassedPawnMask[sideToMove][m & 0x3F]) == 0);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_passed_pawn_push,The following statement contains a magic number: return (board[((m >> 6) & 0x3F)] & 7) == PieceTypeC.PAWN                  && (((byTypeBB[PieceTypeC.PAWN] & byColorBB[sideToMove ^ 1]) & Utils.PassedPawnMask[sideToMove][m & 0x3F]) == 0);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,bishop_pair,The following statement contains a magic number: return pieceCount[c][PieceTypeC.BISHOP] >= 2 &&                      Utils.opposite_colors(pieceList[c][PieceTypeC.BISHOP][0]' pieceList[c][PieceTypeC.BISHOP][1]);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_capture_or_promotion,The following statement contains a magic number: return ((m & (3 << 14)) != 0) ? ((m & (3 << 14)) != (3 << 14)) : (board[m & 0x3F] != PieceC.NO_PIECE);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_capture_or_promotion,The following statement contains a magic number: return ((m & (3 << 14)) != 0) ? ((m & (3 << 14)) != (3 << 14)) : (board[m & 0x3F] != PieceC.NO_PIECE);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_capture_or_promotion,The following statement contains a magic number: return ((m & (3 << 14)) != 0) ? ((m & (3 << 14)) != (3 << 14)) : (board[m & 0x3F] != PieceC.NO_PIECE);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_capture_or_promotion,The following statement contains a magic number: return ((m & (3 << 14)) != 0) ? ((m & (3 << 14)) != (3 << 14)) : (board[m & 0x3F] != PieceC.NO_PIECE);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_capture_or_promotion,The following statement contains a magic number: return ((m & (3 << 14)) != 0) ? ((m & (3 << 14)) != (3 << 14)) : (board[m & 0x3F] != PieceC.NO_PIECE);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_capture_or_promotion,The following statement contains a magic number: return ((m & (3 << 14)) != 0) ? ((m & (3 << 14)) != (3 << 14)) : (board[m & 0x3F] != PieceC.NO_PIECE);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_capture,The following statement contains a magic number: return ((board[m & 0x3F] != PieceC.NO_PIECE) && !((m & (3 << 14)) == (3 << 14))) || ((m & (3 << 14)) == (2 << 14));
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_capture,The following statement contains a magic number: return ((board[m & 0x3F] != PieceC.NO_PIECE) && !((m & (3 << 14)) == (3 << 14))) || ((m & (3 << 14)) == (2 << 14));
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_capture,The following statement contains a magic number: return ((board[m & 0x3F] != PieceC.NO_PIECE) && !((m & (3 << 14)) == (3 << 14))) || ((m & (3 << 14)) == (2 << 14));
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_capture,The following statement contains a magic number: return ((board[m & 0x3F] != PieceC.NO_PIECE) && !((m & (3 << 14)) == (3 << 14))) || ((m & (3 << 14)) == (2 << 14));
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_capture,The following statement contains a magic number: return ((board[m & 0x3F] != PieceC.NO_PIECE) && !((m & (3 << 14)) == (3 << 14))) || ((m & (3 << 14)) == (2 << 14));
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_capture,The following statement contains a magic number: return ((board[m & 0x3F] != PieceC.NO_PIECE) && !((m & (3 << 14)) == (3 << 14))) || ((m & (3 << 14)) == (2 << 14));
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_capture,The following statement contains a magic number: return ((board[m & 0x3F] != PieceC.NO_PIECE) && !((m & (3 << 14)) == (3 << 14))) || ((m & (3 << 14)) == (2 << 14));
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_capture,The following statement contains a magic number: return ((board[m & 0x3F] != PieceC.NO_PIECE) && !((m & (3 << 14)) == (3 << 14))) || ((m & (3 << 14)) == (2 << 14));
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,copy,The following statement contains a magic number: Array.Copy(pos.board' this.board' 64);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,copy,The following statement contains a magic number: Array.Copy(pos.byTypeBB' this.byTypeBB' 8);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,copy,The following statement contains a magic number: Array.Copy(pos.byColorBB' this.byColorBB' 2);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,copy,The following statement contains a magic number: Array.Copy(pos.castleRookSquare[i]' this.castleRookSquare[i]' 2);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,copy,The following statement contains a magic number: Array.Copy(pos.castlePath[i]' this.castlePath[i]' 2);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,copy,The following statement contains a magic number: Array.Copy(pos.pieceCount[i]' this.pieceCount[i]' 8);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,copy,The following statement contains a magic number: Array.Copy(pos.pieceList[i][j]' this.pieceList[i][j]' 16);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,copy,The following statement contains a magic number: j < 8
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,copy,The following statement contains a magic number: i < 2
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,copy,The following statement contains a magic number: Array.Copy(pos.index' this.index' 64);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,copy,The following statement contains a magic number: Array.Copy(pos.castleRightsMask' this.castleRightsMask' 64);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,Position,The following statement contains a magic number: castleRookSquare[i] = new Square[2];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,Position,The following statement contains a magic number: castlePath[i] = new Bitboard[2];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,Position,The following statement contains a magic number: pieceCount[i] = new int[8];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,Position,The following statement contains a magic number: pieceList[i] = new int[8][];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,Position,The following statement contains a magic number: pieceList[i][j] = new int[16];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,Position,The following statement contains a magic number: j < 8
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,Position,The following statement contains a magic number: i < 2
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,from_fen,The following statement contains a magic number: startPosPly = Math.Max(2 * (startPosPly - 1)' 0) + ((sideToMove == ColorC.BLACK) ? 1 : 0);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,to_fen,The following statement contains a magic number: fen.Append(st.rule50).Append(" ").Append(1 + (startPosPly - (sideToMove == ColorC.BLACK ? 1 : 0)) / 2);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,pl_move_is_legal,The following statement contains a magic number: Square from = ((m >> 6) & 0x3F);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,pl_move_is_legal,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,pl_move_is_legal,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,pl_move_is_legal,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,pl_move_is_legal,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,pl_move_is_legal,The following statement contains a magic number: return ((m & (3 << 14)) == (3 << 14)) || ((attackers_to((m & 0x3F)) & byColorBB[us ^ 1]) == 0);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,pl_move_is_legal,The following statement contains a magic number: return ((m & (3 << 14)) == (3 << 14)) || ((attackers_to((m & 0x3F)) & byColorBB[us ^ 1]) == 0);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,pl_move_is_legal,The following statement contains a magic number: return ((m & (3 << 14)) == (3 << 14)) || ((attackers_to((m & 0x3F)) & byColorBB[us ^ 1]) == 0);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,pl_move_is_legal,The following statement contains a magic number: return ((m & (3 << 14)) == (3 << 14)) || ((attackers_to((m & 0x3F)) & byColorBB[us ^ 1]) == 0);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,pl_move_is_legal,The following statement contains a magic number: (board[from] & 7) == PieceTypeC.KING
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_pseudo_legal,The following statement contains a magic number: Square from = ((m >> 6) & 0x3F);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_pseudo_legal,The following statement contains a magic number: Piece pc = board[((m >> 6) & 0x3F)];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_pseudo_legal,The following statement contains a magic number: (m & (3 << 14)) != 0
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_pseudo_legal,The following statement contains a magic number: (m & (3 << 14)) != 0
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_pseudo_legal,The following statement contains a magic number: ((m >> 12) & 3) != PieceTypeC.NO_PIECE_TYPE
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_pseudo_legal,The following statement contains a magic number: ((m >> 12) & 3) != PieceTypeC.NO_PIECE_TYPE
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_pseudo_legal,The following statement contains a magic number: pc == PieceC.NO_PIECE || (pc >> 3) != us
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_pseudo_legal,The following statement contains a magic number: (board[to] >> 3) == us
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_pseudo_legal,The following statement contains a magic number: (to >> 3) == RankC.RANK_8 || (to >> 3) == RankC.RANK_1
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_pseudo_legal,The following statement contains a magic number: (to >> 3) == RankC.RANK_8 || (to >> 3) == RankC.RANK_1
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_pseudo_legal,The following statement contains a magic number: switch (direction)                  {                      case SquareC.DELTA_NW:                      case SquareC.DELTA_NE:                      case SquareC.DELTA_SW:                      case SquareC.DELTA_SE:                          // Capture. The destination square must be occupied by an enemy                          // piece (en passant captures was handled earlier).                          if ((board[to] >> 3) != them)                              return false;                            // From and to files must be one file apart' avoids a7h5                          if (Math.Abs((from & 7) - (to & 7)) != 1)                              return false;                          break;                        case SquareC.DELTA_N:                      case SquareC.DELTA_S:                          // Pawn push. The destination square must be empty.                          if (board[to] != PieceC.NO_PIECE)                              return false;                          break;                        case SquareC.DELTA_NN:                          // Double white pawn push. The destination square must be on the fourth                          // rank' and both the destination square and the square between the                          // source and destination squares must be empty.                          if ((to >> 3) != RankC.RANK_4                              || (board[to] != PieceC.NO_PIECE)                              || (board[from + SquareC.DELTA_N] != PieceC.NO_PIECE))                              return false;                          break;                        case SquareC.DELTA_SS:                          // Double black pawn push. The destination square must be on the fifth                          // rank' and both the destination square and the square between the                          // source and destination squares must be empty.                          if ((to >> 3) != RankC.RANK_5                              || (board[to] != PieceC.NO_PIECE)                              || (board[from + SquareC.DELTA_S] != PieceC.NO_PIECE))                              return false;                          break;                        default:                          return false;                  }
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_pseudo_legal,The following statement contains a magic number: switch (direction)                  {                      case SquareC.DELTA_NW:                      case SquareC.DELTA_NE:                      case SquareC.DELTA_SW:                      case SquareC.DELTA_SE:                          // Capture. The destination square must be occupied by an enemy                          // piece (en passant captures was handled earlier).                          if ((board[to] >> 3) != them)                              return false;                            // From and to files must be one file apart' avoids a7h5                          if (Math.Abs((from & 7) - (to & 7)) != 1)                              return false;                          break;                        case SquareC.DELTA_N:                      case SquareC.DELTA_S:                          // Pawn push. The destination square must be empty.                          if (board[to] != PieceC.NO_PIECE)                              return false;                          break;                        case SquareC.DELTA_NN:                          // Double white pawn push. The destination square must be on the fourth                          // rank' and both the destination square and the square between the                          // source and destination squares must be empty.                          if ((to >> 3) != RankC.RANK_4                              || (board[to] != PieceC.NO_PIECE)                              || (board[from + SquareC.DELTA_N] != PieceC.NO_PIECE))                              return false;                          break;                        case SquareC.DELTA_SS:                          // Double black pawn push. The destination square must be on the fifth                          // rank' and both the destination square and the square between the                          // source and destination squares must be empty.                          if ((to >> 3) != RankC.RANK_5                              || (board[to] != PieceC.NO_PIECE)                              || (board[from + SquareC.DELTA_S] != PieceC.NO_PIECE))                              return false;                          break;                        default:                          return false;                  }
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_pseudo_legal,The following statement contains a magic number: switch (direction)                  {                      case SquareC.DELTA_NW:                      case SquareC.DELTA_NE:                      case SquareC.DELTA_SW:                      case SquareC.DELTA_SE:                          // Capture. The destination square must be occupied by an enemy                          // piece (en passant captures was handled earlier).                          if ((board[to] >> 3) != them)                              return false;                            // From and to files must be one file apart' avoids a7h5                          if (Math.Abs((from & 7) - (to & 7)) != 1)                              return false;                          break;                        case SquareC.DELTA_N:                      case SquareC.DELTA_S:                          // Pawn push. The destination square must be empty.                          if (board[to] != PieceC.NO_PIECE)                              return false;                          break;                        case SquareC.DELTA_NN:                          // Double white pawn push. The destination square must be on the fourth                          // rank' and both the destination square and the square between the                          // source and destination squares must be empty.                          if ((to >> 3) != RankC.RANK_4                              || (board[to] != PieceC.NO_PIECE)                              || (board[from + SquareC.DELTA_N] != PieceC.NO_PIECE))                              return false;                          break;                        case SquareC.DELTA_SS:                          // Double black pawn push. The destination square must be on the fifth                          // rank' and both the destination square and the square between the                          // source and destination squares must be empty.                          if ((to >> 3) != RankC.RANK_5                              || (board[to] != PieceC.NO_PIECE)                              || (board[from + SquareC.DELTA_S] != PieceC.NO_PIECE))                              return false;                          break;                        default:                          return false;                  }
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_pseudo_legal,The following statement contains a magic number: switch (direction)                  {                      case SquareC.DELTA_NW:                      case SquareC.DELTA_NE:                      case SquareC.DELTA_SW:                      case SquareC.DELTA_SE:                          // Capture. The destination square must be occupied by an enemy                          // piece (en passant captures was handled earlier).                          if ((board[to] >> 3) != them)                              return false;                            // From and to files must be one file apart' avoids a7h5                          if (Math.Abs((from & 7) - (to & 7)) != 1)                              return false;                          break;                        case SquareC.DELTA_N:                      case SquareC.DELTA_S:                          // Pawn push. The destination square must be empty.                          if (board[to] != PieceC.NO_PIECE)                              return false;                          break;                        case SquareC.DELTA_NN:                          // Double white pawn push. The destination square must be on the fourth                          // rank' and both the destination square and the square between the                          // source and destination squares must be empty.                          if ((to >> 3) != RankC.RANK_4                              || (board[to] != PieceC.NO_PIECE)                              || (board[from + SquareC.DELTA_N] != PieceC.NO_PIECE))                              return false;                          break;                        case SquareC.DELTA_SS:                          // Double black pawn push. The destination square must be on the fifth                          // rank' and both the destination square and the square between the                          // source and destination squares must be empty.                          if ((to >> 3) != RankC.RANK_5                              || (board[to] != PieceC.NO_PIECE)                              || (board[from + SquareC.DELTA_S] != PieceC.NO_PIECE))                              return false;                          break;                        default:                          return false;                  }
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_pseudo_legal,The following statement contains a magic number: switch (direction)                  {                      case SquareC.DELTA_NW:                      case SquareC.DELTA_NE:                      case SquareC.DELTA_SW:                      case SquareC.DELTA_SE:                          // Capture. The destination square must be occupied by an enemy                          // piece (en passant captures was handled earlier).                          if ((board[to] >> 3) != them)                              return false;                            // From and to files must be one file apart' avoids a7h5                          if (Math.Abs((from & 7) - (to & 7)) != 1)                              return false;                          break;                        case SquareC.DELTA_N:                      case SquareC.DELTA_S:                          // Pawn push. The destination square must be empty.                          if (board[to] != PieceC.NO_PIECE)                              return false;                          break;                        case SquareC.DELTA_NN:                          // Double white pawn push. The destination square must be on the fourth                          // rank' and both the destination square and the square between the                          // source and destination squares must be empty.                          if ((to >> 3) != RankC.RANK_4                              || (board[to] != PieceC.NO_PIECE)                              || (board[from + SquareC.DELTA_N] != PieceC.NO_PIECE))                              return false;                          break;                        case SquareC.DELTA_SS:                          // Double black pawn push. The destination square must be on the fifth                          // rank' and both the destination square and the square between the                          // source and destination squares must be empty.                          if ((to >> 3) != RankC.RANK_5                              || (board[to] != PieceC.NO_PIECE)                              || (board[from + SquareC.DELTA_S] != PieceC.NO_PIECE))                              return false;                          break;                        default:                          return false;                  }
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_pseudo_legal,The following statement contains a magic number: (pc & 7) == PieceTypeC.PAWN
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_pseudo_legal,The following statement contains a magic number: (pc & 7) != PieceTypeC.KING
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: Square from = (m >> 6) & 0x3F;
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: PieceType pt = board[from] & 7;
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: (m & (3 << 14)) == 0
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: (m & (3 << 14)) == 0
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: return (attacks_from((((m >> 12) & 3) + 2)' to' occupied_squares ^ Utils.SquareBB[from]) & Utils.SquareBB[ksq]) != 0;
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: return (attacks_from((((m >> 12) & 3) + 2)' to' occupied_squares ^ Utils.SquareBB[from]) & Utils.SquareBB[ksq]) != 0;
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: return (attacks_from((((m >> 12) & 3) + 2)' to' occupied_squares ^ Utils.SquareBB[from]) & Utils.SquareBB[ksq]) != 0;
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: (m & (3 << 14)) == (1 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: (m & (3 << 14)) == (1 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: (m & (3 << 14)) == (1 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: Square capsq = (((from >> 3) << 3) | (to & 7));
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: Square capsq = (((from >> 3) << 3) | (to & 7));
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: Square capsq = (((from >> 3) << 3) | (to & 7));
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: Square kto = ((rfrom > kfrom ? SquareC.SQ_G1 : SquareC.SQ_C1) ^ (us * 56));
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: Square rto = ((rfrom > kfrom ? SquareC.SQ_F1 : SquareC.SQ_D1) ^ (us * 56));
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: (m & (3 << 14)) == (3 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: (m & (3 << 14)) == (3 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: (m & (3 << 14)) == (3 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,move_gives_check,The following statement contains a magic number: (m & (3 << 14)) == (3 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: (m & (3 << 14)) == (3 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: (m & (3 << 14)) == (3 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: (m & (3 << 14)) == (3 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: (m & (3 << 14)) == (3 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: Square from = ((m >> 6) & 0x3F);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: PieceType pt = (piece & 7);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: PieceType capture = ((m & (3 << 14)) == (2 << 14)) ? PieceTypeC.PAWN : (board[to] & 7);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: PieceType capture = ((m & (3 << 14)) == (2 << 14)) ? PieceTypeC.PAWN : (board[to] & 7);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: PieceType capture = ((m & (3 << 14)) == (2 << 14)) ? PieceTypeC.PAWN : (board[to] & 7);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: PieceType capture = ((m & (3 << 14)) == (2 << 14)) ? PieceTypeC.PAWN : (board[to] & 7);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: PieceType capture = ((m & (3 << 14)) == (2 << 14)) ? PieceTypeC.PAWN : (board[to] & 7);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: st.psqScore -= pieceSquareTable[((them << 3) | capture)][capsq];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: k ^= zobEp[st.epSquare & 7];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: st.epSquare = ((from + to) / 2);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: k ^= zobEp[st.epSquare & 7];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: (to ^ from) == 16                      && ((((Utils.StepAttacksBB[((us << 3) | PieceTypeC.PAWN)][from + (us == ColorC.WHITE ? SquareC.DELTA_N : SquareC.DELTA_S)]) & (byTypeBB[PieceTypeC.PAWN] & byColorBB[them]))) != 0)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: (to ^ from) == 16                      && ((((Utils.StepAttacksBB[((us << 3) | PieceTypeC.PAWN)][from + (us == ColorC.WHITE ? SquareC.DELTA_N : SquareC.DELTA_S)]) & (byTypeBB[PieceTypeC.PAWN] & byColorBB[them]))) != 0)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: PieceType promotion = (((m >> 12) & 3) + 2);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: PieceType promotion = (((m >> 12) & 3) + 2);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: PieceType promotion = (((m >> 12) & 3) + 2);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: board[to] = ((us << 3) | promotion);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: st.psqScore += pieceSquareTable[((us << 3) | promotion)][to] - pieceSquareTable[((us << 3) | PieceTypeC.PAWN)][to];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: st.psqScore += pieceSquareTable[((us << 3) | promotion)][to] - pieceSquareTable[((us << 3) | PieceTypeC.PAWN)][to];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: (m & (3 << 14)) == (1 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: (m & (3 << 14)) == (1 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: (m & (3 << 14)) == (1 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: (m & (3 << 14)) != 0
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,do_move,The following statement contains a magic number: (m & (3 << 14)) != 0
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,undo_move,The following statement contains a magic number: (m & (3 << 14)) == (3 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,undo_move,The following statement contains a magic number: (m & (3 << 14)) == (3 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,undo_move,The following statement contains a magic number: (m & (3 << 14)) == (3 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,undo_move,The following statement contains a magic number: (m & (3 << 14)) == (3 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,undo_move,The following statement contains a magic number: Square from = ((m >> 6) & 0x3F);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,undo_move,The following statement contains a magic number: PieceType pt = piece & 7;
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,undo_move,The following statement contains a magic number: PieceType promotion = (((m >> 12) & 3) + 2);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,undo_move,The following statement contains a magic number: PieceType promotion = (((m >> 12) & 3) + 2);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,undo_move,The following statement contains a magic number: PieceType promotion = (((m >> 12) & 3) + 2);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,undo_move,The following statement contains a magic number: board[to] = ((us << 3) | PieceTypeC.PAWN);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,undo_move,The following statement contains a magic number: (m & (3 << 14)) == (1 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,undo_move,The following statement contains a magic number: (m & (3 << 14)) == (1 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,undo_move,The following statement contains a magic number: (m & (3 << 14)) == (1 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,undo_move,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,undo_move,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,undo_move,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,undo_move,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,undo_move,The following statement contains a magic number: board[capsq] = ((them << 3) | capture);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,see,The following statement contains a magic number: (with_sign) && (PieceValueMidgame[board[m & 0x3F]] >= PieceValueMidgame[board[((m >> 6) & 0x3F)]])
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,see,The following statement contains a magic number: (m & (3 << 14)) == (3 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,see,The following statement contains a magic number: (m & (3 << 14)) == (3 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,see,The following statement contains a magic number: (m & (3 << 14)) == (3 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,see,The following statement contains a magic number: (m & (3 << 14)) == (3 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,see,The following statement contains a magic number: from = ((m >> 6) & 0x3F);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,see,The following statement contains a magic number: capturedType = board[to] & 7;
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,see,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,see,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,see,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,see,The following statement contains a magic number: (m & (3 << 14)) == (2 << 14)
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,see,The following statement contains a magic number: stm = ((board[from] >> 3) ^ 1);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,see,The following statement contains a magic number: capturedType = board[from] & 7;
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,see,The following statement contains a magic number: Debug.Assert(slIndex < 32);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,see,The following statement contains a magic number: Debug.Assert(slIndex < 32);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,see,The following statement contains a magic number: swapList[slIndex++] = Constants.QueenValueMidgame * 10;
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,clear,The following statement contains a magic number: Array.Clear(byColorBB' 0' 2);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,clear,The following statement contains a magic number: Array.Clear(byTypeBB' 0' 8);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,clear,The following statement contains a magic number: Array.Clear(pieceCount[0]' 0' 8);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,clear,The following statement contains a magic number: Array.Clear(pieceCount[1]' 0' 8);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,clear,The following statement contains a magic number: Array.Clear(index' 0' 64);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,clear,The following statement contains a magic number: Array.Clear(castleRightsMask' 0' 64);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,clear,The following statement contains a magic number: Array.Clear(castleRookSquare[0]' 0' 2);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,clear,The following statement contains a magic number: Array.Clear(castleRookSquare[1]' 0' 2);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,clear,The following statement contains a magic number: Array.Clear(castlePath[0]' 0' 2);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,clear,The following statement contains a magic number: Array.Clear(castlePath[1]' 0' 2);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,clear,The following statement contains a magic number: i < 8
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_draw,The following statement contains a magic number: st.rule50 > 99
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_draw,The following statement contains a magic number: int i = 4' e = Math.Min(st.rule50' st.pliesFromNull);
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,is_draw,The following statement contains a magic number: i += 2;
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,init,The following statement contains a magic number: zobrist[c] = new Bitboard[8][];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,init,The following statement contains a magic number: zobrist[c][pt] = new Bitboard[64];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,init,The following statement contains a magic number: pieceSquareTable[i] = new Score[64];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,init,The following statement contains a magic number: i < 16
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,flip,The following statement contains a magic number: put_piece((pos.piece_on(s) ^ 8)' Utils.flip_S(s));
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,pos_is_ok,The following statement contains a magic number: int[] kingCount = new int[2];
Magic Number,Portfish,Position,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Position.cs,pos_is_ok,The following statement contains a magic number: debugCheckerCount && Bitcount.popcount_1s_Full(st.checkersBB) > 2
Magic Number,Portfish,RKISS,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\RKISS.cs,RKISS,The following statement contains a magic number: i < 73
Magic Number,Portfish,RKISS,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\RKISS.cs,rand,The following statement contains a magic number: e = a - ((b << 7) | (b >> 57));
Magic Number,Portfish,RKISS,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\RKISS.cs,rand,The following statement contains a magic number: e = a - ((b << 7) | (b >> 57));
Magic Number,Portfish,RKISS,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\RKISS.cs,rand,The following statement contains a magic number: a = b ^ ((c << 13) | (c >> 51));
Magic Number,Portfish,RKISS,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\RKISS.cs,rand,The following statement contains a magic number: a = b ^ ((c << 13) | (c >> 51));
Magic Number,Portfish,RKISS,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\RKISS.cs,rand,The following statement contains a magic number: b = c + ((d << 37) | (d >> 27));
Magic Number,Portfish,RKISS,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\RKISS.cs,rand,The following statement contains a magic number: b = c + ((d << 37) | (d >> 27));
Magic Number,Portfish,RootMove,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,extract_pv_from_tt,The following statement contains a magic number: TT.probe(pos.key()' ref ttePos' out tte)                && (m = tte.move()) != MoveC.MOVE_NONE // Local copy' TT entry could change                && pos.is_pseudo_legal(m)                && pos.pl_move_is_legal(m' pos.pinned_pieces())                && ply < Constants.MAX_PLY                && (!pos.is_draw(false) || ply < 2)
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,futility_margin,The following statement contains a magic number: return d < 7 * DepthC.ONE_PLY ? FutilityMargins[Math.Max(d' 1)][Math.Min(mn' 63)]                                    : 2 * ValueC.VALUE_INFINITE;
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,futility_margin,The following statement contains a magic number: return d < 7 * DepthC.ONE_PLY ? FutilityMargins[Math.Max(d' 1)][Math.Min(mn' 63)]                                    : 2 * ValueC.VALUE_INFINITE;
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,futility_margin,The following statement contains a magic number: return d < 7 * DepthC.ONE_PLY ? FutilityMargins[Math.Max(d' 1)][Math.Min(mn' 63)]                                    : 2 * ValueC.VALUE_INFINITE;
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,futility_move_count,The following statement contains a magic number: return d < 16 * DepthC.ONE_PLY ? FutilityMoveCounts[d] : Constants.MAX_MOVES;
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,reduction,The following statement contains a magic number: return (Depth)Reductions[PvNode ? 1 : 0][Math.Min((d) / DepthC.ONE_PLY' 63)][Math.Min(mn' 63)];
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,reduction,The following statement contains a magic number: return (Depth)Reductions[PvNode ? 1 : 0][Math.Min((d) / DepthC.ONE_PLY' 63)][Math.Min(mn' 63)];
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,is_dangerous,The following statement contains a magic number: (pos.board[((m >> 6) & 0x3F)] & 7) == PieceTypeC.PAWN
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,is_dangerous,The following statement contains a magic number: (pos.board[((m >> 6) & 0x3F)] & 7) == PieceTypeC.PAWN
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,is_dangerous,The following statement contains a magic number: captureOrPromotion                 && (pos.board[m & 0x3F] & 7) != PieceTypeC.PAWN                 && ((m & (3 << 14)) == 0)                 && (pos.st.npMaterialWHITE + pos.st.npMaterialBLACK - Position.PieceValueMidgame[pos.board[m & 0x3F]] == ValueC.VALUE_ZERO)
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,is_dangerous,The following statement contains a magic number: captureOrPromotion                 && (pos.board[m & 0x3F] & 7) != PieceTypeC.PAWN                 && ((m & (3 << 14)) == 0)                 && (pos.st.npMaterialWHITE + pos.st.npMaterialBLACK - Position.PieceValueMidgame[pos.board[m & 0x3F]] == ValueC.VALUE_ZERO)
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,is_dangerous,The following statement contains a magic number: captureOrPromotion                 && (pos.board[m & 0x3F] & 7) != PieceTypeC.PAWN                 && ((m & (3 << 14)) == 0)                 && (pos.st.npMaterialWHITE + pos.st.npMaterialBLACK - Position.PieceValueMidgame[pos.board[m & 0x3F]] == ValueC.VALUE_ZERO)
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: Reductions[0] = new sbyte[64][];
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: Reductions[1] = new sbyte[64][];
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: Reductions[0][hd] = new sbyte[64];
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: Reductions[1][hd] = new sbyte[64];
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: double pvRed = Math.Log((double)(hd)) * Math.Log((double)(mc)) / 3.0;
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: double nonPVRed = 0.33 + Math.Log((double)(hd)) * Math.Log((double)(mc)) / 2.25;
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: double nonPVRed = 0.33 + Math.Log((double)(hd)) * Math.Log((double)(mc)) / 2.25;
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: mc < 64
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: hd < 64
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: FutilityMargins[d] = new Value[64];
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: FutilityMargins[d][mc] = (112 * (int)(Math.Log((double)(d * d) / 2) / Math.Log(2.0) + 1.001) - 8 * mc + 45);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: FutilityMargins[d][mc] = (112 * (int)(Math.Log((double)(d * d) / 2) / Math.Log(2.0) + 1.001) - 8 * mc + 45);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: FutilityMargins[d][mc] = (112 * (int)(Math.Log((double)(d * d) / 2) / Math.Log(2.0) + 1.001) - 8 * mc + 45);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: FutilityMargins[d][mc] = (112 * (int)(Math.Log((double)(d * d) / 2) / Math.Log(2.0) + 1.001) - 8 * mc + 45);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: FutilityMargins[d][mc] = (112 * (int)(Math.Log((double)(d * d) / 2) / Math.Log(2.0) + 1.001) - 8 * mc + 45);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: FutilityMargins[d][mc] = (112 * (int)(Math.Log((double)(d * d) / 2) / Math.Log(2.0) + 1.001) - 8 * mc + 45);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: mc < 64
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: d < 16
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: FutilityMoveCounts[d] = (int)(3.001 + 0.25 * Math.Pow(d' 2.0));
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: FutilityMoveCounts[d] = (int)(3.001 + 0.25 * Math.Pow(d' 2.0));
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: FutilityMoveCounts[d] = (int)(3.001 + 0.25 * Math.Pow(d' 2.0));
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,init,The following statement contains a magic number: d < 32
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,validmoves,The following statement contains a magic number: Square from = ((m >> 6) & 0x3F);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,think,The following statement contains a magic number: SkillLevelEnabled = (SkillLevel < 20);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,think,The following statement contains a magic number: MultiPV = (SkillLevelEnabled ? Math.Max(UCIMultiPV' (Int32)4) : UCIMultiPV);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,think,The following statement contains a magic number: Threads.set_timer(Math.Min(100' Math.Max(TimeMgr.available_time() / 16' TimerResolution)));
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,think,The following statement contains a magic number: Threads.set_timer(Math.Min(100' Math.Max(TimeMgr.available_time() / 16' TimerResolution)));
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,id_loop,The following statement contains a magic number: delta = 16;
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,id_loop,The following statement contains a magic number: depth >= 5 && Math.Abs(RootMoves[PVIdx].prevScore) < ValueC.VALUE_KNOWN_WIN
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,id_loop,The following statement contains a magic number: (bestValue > alpha && bestValue < beta) || SearchTime.ElapsedMilliseconds > 2000
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,id_loop,The following statement contains a magic number: delta += delta / 2;
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,id_loop,The following statement contains a magic number: depth > 2 && (BestMoveChanges != 0)
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,id_loop,The following statement contains a magic number: depth > 4 && depth < 50
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,id_loop,The following statement contains a magic number: depth > 4 && depth < 50
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,id_loop,The following statement contains a magic number: SearchTime.ElapsedMilliseconds > (TimeMgr.available_time() * 62) / 100
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,id_loop,The following statement contains a magic number: SearchTime.ElapsedMilliseconds > (TimeMgr.available_time() * 62) / 100
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,id_loop,The following statement contains a magic number: Value v = search(NodeTypeC.NonPV' pos' ss' ssPos + 1' rBeta - 1' rBeta' (depth - 3) * DepthC.ONE_PLY);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,id_loop,The following statement contains a magic number: depth >= 12                         && !stop                         && ((bestMoveNeverChanged && (pos.captured_piece_type() != 0))                             || SearchTime.ElapsedMilliseconds > (TimeMgr.available_time() * 40) / 100)
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,id_loop,The following statement contains a magic number: depth >= 12                         && !stop                         && ((bestMoveNeverChanged && (pos.captured_piece_type() != 0))                             || SearchTime.ElapsedMilliseconds > (TimeMgr.available_time() * 40) / 100)
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,id_loop,The following statement contains a magic number: depth >= 12                         && !stop                         && ((bestMoveNeverChanged && (pos.captured_piece_type() != 0))                             || SearchTime.ElapsedMilliseconds > (TimeMgr.available_time() * 40) / 100)
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The following statement contains a magic number: int R = 3 + (depth >= 5 * DepthC.ONE_PLY ? depth / 8 : 0);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The following statement contains a magic number: int R = 3 + (depth >= 5 * DepthC.ONE_PLY ? depth / 8 : 0);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The following statement contains a magic number: int R = 3 + (depth >= 5 * DepthC.ONE_PLY ? depth / 8 : 0);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The following statement contains a magic number: depth < 6 * DepthC.ONE_PLY
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The following statement contains a magic number: Value rbeta = beta + 200;
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The following statement contains a magic number: Depth rdepth = depth - DepthC.ONE_PLY - 3 * DepthC.ONE_PLY;
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The following statement contains a magic number: Depth d = (PvNode ? depth - 2 * DepthC.ONE_PLY : depth / 2);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The following statement contains a magic number: Depth d = (PvNode ? depth - 2 * DepthC.ONE_PLY : depth / 2);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The following statement contains a magic number: singularExtensionNode = !RootNode                                    && !SpNode                                    && depth >= SingularExtensionDepth[PvNode ? 1 : 0]                                    && ttMove != MoveC.MOVE_NONE                                    && (excludedMove == 0) // Recursive singular search is not allowed                                    && ((tte.type() & Bound.BOUND_LOWER) != 0) // FIXME: uninitialized!                                    && tte.depth() >= depth - 3 * DepthC.ONE_PLY;
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The following statement contains a magic number: thisThread == Threads.main_thread() && SearchTime.ElapsedMilliseconds > 2000
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The following statement contains a magic number: value = search(NodeTypeC.NonPV' pos' ss' ssPos' rBeta - 1' rBeta' depth / 2);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The following statement contains a magic number: predictedDepth < 2 * DepthC.ONE_PLY                         && pos.see(move' true) < 0
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The following statement contains a magic number: !SpNode && !captureOrPromotion && playedMoveCount < 64
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,search,The following statement contains a magic number: !isPvMove                     && !captureOrPromotion                     && !dangerous                     && ss[ssPos].killers0 != move                     && ss[ssPos].killers1 != move                     && depth > 3 * DepthC.ONE_PLY                     && !Utils.is_castle(move)
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: futilityValue = futilityBase                                    + Position.PieceValueEndgame[pos.board[move & 0x3F]]                                    + (((move & (3 << 14)) == (2 << 14)) ? Constants.PawnValueEndgame : ValueC.VALUE_ZERO);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: futilityValue = futilityBase                                    + Position.PieceValueEndgame[pos.board[move & 0x3F]]                                    + (((move & (3 << 14)) == (2 << 14)) ? Constants.PawnValueEndgame : ValueC.VALUE_ZERO);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: futilityValue = futilityBase                                    + Position.PieceValueEndgame[pos.board[move & 0x3F]]                                    + (((move & (3 << 14)) == (2 << 14)) ? Constants.PawnValueEndgame : ValueC.VALUE_ZERO);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: futilityValue = futilityBase                                    + Position.PieceValueEndgame[pos.board[move & 0x3F]]                                    + (((move & (3 << 14)) == (2 << 14)) ? Constants.PawnValueEndgame : ValueC.VALUE_ZERO);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: !PvNode                     && !inCheck                     && !givesCheck                     && move != ttMove                     && enoughMaterial                     && ((move & (3 << 14)) != (1 << 14))                     && !pos.is_passed_pawn_push(move)
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: !PvNode                     && !inCheck                     && !givesCheck                     && move != ttMove                     && enoughMaterial                     && ((move & (3 << 14)) != (1 << 14))                     && !pos.is_passed_pawn_push(move)
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: !PvNode                     && !inCheck                     && !givesCheck                     && move != ttMove                     && enoughMaterial                     && ((move & (3 << 14)) != (1 << 14))                     && !pos.is_passed_pawn_push(move)
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: evasionPrunable = !PvNode                                  && inCheck                                  && bestValue > ValueC.VALUE_MATED_IN_MAX_PLY                                  && !(((pos.board[move & 0x3F] != PieceC.NO_PIECE) && !((move & (3 << 14)) == (3 << 14))) || ((move & (3 << 14)) == (2 << 14)))                                  && ((pos.st.castleRights & (CastleRightC.WHITE_ANY << (pos.sideToMove << 1))) == 0);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: evasionPrunable = !PvNode                                  && inCheck                                  && bestValue > ValueC.VALUE_MATED_IN_MAX_PLY                                  && !(((pos.board[move & 0x3F] != PieceC.NO_PIECE) && !((move & (3 << 14)) == (3 << 14))) || ((move & (3 << 14)) == (2 << 14)))                                  && ((pos.st.castleRights & (CastleRightC.WHITE_ANY << (pos.sideToMove << 1))) == 0);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: evasionPrunable = !PvNode                                  && inCheck                                  && bestValue > ValueC.VALUE_MATED_IN_MAX_PLY                                  && !(((pos.board[move & 0x3F] != PieceC.NO_PIECE) && !((move & (3 << 14)) == (3 << 14))) || ((move & (3 << 14)) == (2 << 14)))                                  && ((pos.st.castleRights & (CastleRightC.WHITE_ANY << (pos.sideToMove << 1))) == 0);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: evasionPrunable = !PvNode                                  && inCheck                                  && bestValue > ValueC.VALUE_MATED_IN_MAX_PLY                                  && !(((pos.board[move & 0x3F] != PieceC.NO_PIECE) && !((move & (3 << 14)) == (3 << 14))) || ((move & (3 << 14)) == (2 << 14)))                                  && ((pos.st.castleRights & (CastleRightC.WHITE_ANY << (pos.sideToMove << 1))) == 0);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: evasionPrunable = !PvNode                                  && inCheck                                  && bestValue > ValueC.VALUE_MATED_IN_MAX_PLY                                  && !(((pos.board[move & 0x3F] != PieceC.NO_PIECE) && !((move & (3 << 14)) == (3 << 14))) || ((move & (3 << 14)) == (2 << 14)))                                  && ((pos.st.castleRights & (CastleRightC.WHITE_ANY << (pos.sideToMove << 1))) == 0);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: evasionPrunable = !PvNode                                  && inCheck                                  && bestValue > ValueC.VALUE_MATED_IN_MAX_PLY                                  && !(((pos.board[move & 0x3F] != PieceC.NO_PIECE) && !((move & (3 << 14)) == (3 << 14))) || ((move & (3 << 14)) == (2 << 14)))                                  && ((pos.st.castleRights & (CastleRightC.WHITE_ANY << (pos.sideToMove << 1))) == 0);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: evasionPrunable = !PvNode                                  && inCheck                                  && bestValue > ValueC.VALUE_MATED_IN_MAX_PLY                                  && !(((pos.board[move & 0x3F] != PieceC.NO_PIECE) && !((move & (3 << 14)) == (3 << 14))) || ((move & (3 << 14)) == (2 << 14)))                                  && ((pos.st.castleRights & (CastleRightC.WHITE_ANY << (pos.sideToMove << 1))) == 0);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: evasionPrunable = !PvNode                                  && inCheck                                  && bestValue > ValueC.VALUE_MATED_IN_MAX_PLY                                  && !(((pos.board[move & 0x3F] != PieceC.NO_PIECE) && !((move & (3 << 14)) == (3 << 14))) || ((move & (3 << 14)) == (2 << 14)))                                  && ((pos.st.castleRights & (CastleRightC.WHITE_ANY << (pos.sideToMove << 1))) == 0);
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: !PvNode                     && move != ttMove                     && (!inCheck || evasionPrunable)                     && (move & (3 << 14)) != (1 << 14)                     && pos.see(move' true) < 0
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: !PvNode                     && move != ttMove                     && (!inCheck || evasionPrunable)                     && (move & (3 << 14)) != (1 << 14)                     && pos.see(move' true) < 0
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: !PvNode                     && move != ttMove                     && (!inCheck || evasionPrunable)                     && (move & (3 << 14)) != (1 << 14)                     && pos.see(move' true) < 0
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: !PvNode                     && !inCheck                     && givesCheck                     && move != ttMove                     && !(((move & (3 << 14)) != 0) ? ((move & (3 << 14)) != (3 << 14)) : (pos.board[move & 0x3F] != PieceC.NO_PIECE))                     && ss[ssPos].eval + Constants.PawnValueMidgame / 4 < beta                     && !check_is_dangerous(pos' move' futilityBase' beta)
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: !PvNode                     && !inCheck                     && givesCheck                     && move != ttMove                     && !(((move & (3 << 14)) != 0) ? ((move & (3 << 14)) != (3 << 14)) : (pos.board[move & 0x3F] != PieceC.NO_PIECE))                     && ss[ssPos].eval + Constants.PawnValueMidgame / 4 < beta                     && !check_is_dangerous(pos' move' futilityBase' beta)
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: !PvNode                     && !inCheck                     && givesCheck                     && move != ttMove                     && !(((move & (3 << 14)) != 0) ? ((move & (3 << 14)) != (3 << 14)) : (pos.board[move & 0x3F] != PieceC.NO_PIECE))                     && ss[ssPos].eval + Constants.PawnValueMidgame / 4 < beta                     && !check_is_dangerous(pos' move' futilityBase' beta)
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: !PvNode                     && !inCheck                     && givesCheck                     && move != ttMove                     && !(((move & (3 << 14)) != 0) ? ((move & (3 << 14)) != (3 << 14)) : (pos.board[move & 0x3F] != PieceC.NO_PIECE))                     && ss[ssPos].eval + Constants.PawnValueMidgame / 4 < beta                     && !check_is_dangerous(pos' move' futilityBase' beta)
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: !PvNode                     && !inCheck                     && givesCheck                     && move != ttMove                     && !(((move & (3 << 14)) != 0) ? ((move & (3 << 14)) != (3 << 14)) : (pos.board[move & 0x3F] != PieceC.NO_PIECE))                     && ss[ssPos].eval + Constants.PawnValueMidgame / 4 < beta                     && !check_is_dangerous(pos' move' futilityBase' beta)
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: !PvNode                     && !inCheck                     && givesCheck                     && move != ttMove                     && !(((move & (3 << 14)) != 0) ? ((move & (3 << 14)) != (3 << 14)) : (pos.board[move & 0x3F] != PieceC.NO_PIECE))                     && ss[ssPos].eval + Constants.PawnValueMidgame / 4 < beta                     && !check_is_dangerous(pos' move' futilityBase' beta)
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,qsearch,The following statement contains a magic number: !PvNode                     && !inCheck                     && givesCheck                     && move != ttMove                     && !(((move & (3 << 14)) != 0) ? ((move & (3 << 14)) != (3 << 14)) : (pos.board[move & 0x3F] != PieceC.NO_PIECE))                     && ss[ssPos].eval + Constants.PawnValueMidgame / 4 < beta                     && !check_is_dangerous(pos' move' futilityBase' beta)
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,pv_info_to_uci,The following statement contains a magic number: Plug.Write(((t > 0 ? pos.nodes * 1000 / t : 0)).ToString());
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,do_skill_level,The following statement contains a magic number: int weakness = 120 - 2 * SkillLevel;
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,do_skill_level,The following statement contains a magic number: int weakness = 120 - 2 * SkillLevel;
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,do_skill_level,The following statement contains a magic number: s += (weakness * (int)(RootMoves[0].score - s)                       + variance * (int)(rk.rand() % (ulong)weakness)) / 128;
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,score_to_uci,The following statement contains a magic number: s.Append("cp ").Append(v * 100 / (int)(Constants.PawnValueMidgame));
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,check_time,The following statement contains a magic number: lastInfoTime.ElapsedMilliseconds >= 1000
Magic Number,Portfish,Search,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Search.cs,check_time,The following statement contains a magic number: bool noMoreTime = e > TimeMgr.maximum_time() - 2 * TimerResolution                            || stillAtFirstMove;
Magic Number,Portfish,Thread,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Thread.cs,idle_loop,The following statement contains a magic number: Array.Copy(sp.ss' sp.ssPos - 1' ss' ssPos' 4);
Magic Number,Portfish,TimeMgr,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Timeman.cs,move_importance,The following statement contains a magic number: return MoveImportance[Math.Min(ply' 511)];
Magic Number,Portfish,TimeMgr,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Timeman.cs,pv_instability,The following statement contains a magic number: unstablePVExtraTime = curChanges * (optimumSearchTime / 2)                                   + prevChanges * (optimumSearchTime / 3);
Magic Number,Portfish,TimeMgr,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Timeman.cs,pv_instability,The following statement contains a magic number: unstablePVExtraTime = curChanges * (optimumSearchTime / 2)                                   + prevChanges * (optimumSearchTime / 3);
Magic Number,Portfish,TimeMgr,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Timeman.cs,init,The following statement contains a magic number: optimumSearchTime += optimumSearchTime / 4;
Magic Number,Portfish,TimeMgr,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Timeman.cs,remaining,The following statement contains a magic number: int thisMoveImportance = move_importance(currentPly) * slowMover / 100;
Magic Number,Portfish,TimeMgr,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Timeman.cs,remaining,The following statement contains a magic number: otherMovesImportance += move_importance(currentPly + 2 * i);
Magic Number,Portfish,TT,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\TT.cs,set_size,The following statement contains a magic number: UInt32 newSize = 1024;
Magic Number,Portfish,TT,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\TT.cs,set_size,The following statement contains a magic number: newSize *= 2;
Magic Number,Portfish,TT,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\TT.cs,set_size,The following statement contains a magic number: 2UL * newSize * 64 <= (mbSize << 20)
Magic Number,Portfish,TT,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\TT.cs,set_size,The following statement contains a magic number: 2UL * newSize * 64 <= (mbSize << 20)
Magic Number,Portfish,TT,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\TT.cs,set_size,The following statement contains a magic number: 2UL * newSize * 64 <= (mbSize << 20)
Magic Number,Portfish,TT,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\TT.cs,set_size,The following statement contains a magic number: entries = new TTEntry[size * 4];
Magic Number,Portfish,TT,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\TT.cs,store,The following statement contains a magic number: UInt32 posKey32 = (UInt32)(posKey >> 32);
Magic Number,Portfish,TT,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\TT.cs,store,The following statement contains a magic number: ttePos = replacePos = (((UInt32)posKey) & sizeMask) << 2;
Magic Number,Portfish,TT,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\TT.cs,store,The following statement contains a magic number: tte.generation8 == generation || tte.bound == 3
Magic Number,Portfish,TT,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\TT.cs,probe,The following statement contains a magic number: UInt32 posKey32 = (UInt32)(posKey >> 32);
Magic Number,Portfish,TT,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\TT.cs,probe,The following statement contains a magic number: UInt32 offset = (((UInt32)posKey) & sizeMask) << 2;
Magic Number,Portfish,Uci,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Uci.cs,uci_loop,The following statement contains a magic number: i < 102
Magic Number,Portfish,Uci,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Uci.cs,set_position,The following statement contains a magic number: SetupStatePos = (SetupStatePos + 1) % 102;
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: int msd = cpus < 8 ? 4 : 7;
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: int msd = cpus < 8 ? 4 : 7;
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: int msd = cpus < 8 ? 4 : 7;
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Mobility (Middle Game)"' new UCIOption(idx++' 100' 0' 200' UCIOptionChanges.on_eval));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Mobility (Middle Game)"' new UCIOption(idx++' 100' 0' 200' UCIOptionChanges.on_eval));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Mobility (Endgame)"' new UCIOption(idx++' 100' 0' 200' UCIOptionChanges.on_eval));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Mobility (Endgame)"' new UCIOption(idx++' 100' 0' 200' UCIOptionChanges.on_eval));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Passed Pawns (Middle Game)"' new UCIOption(idx++' 100' 0' 200' UCIOptionChanges.on_eval));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Passed Pawns (Middle Game)"' new UCIOption(idx++' 100' 0' 200' UCIOptionChanges.on_eval));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Passed Pawns (Endgame)"' new UCIOption(idx++' 100' 0' 200' UCIOptionChanges.on_eval));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Passed Pawns (Endgame)"' new UCIOption(idx++' 100' 0' 200' UCIOptionChanges.on_eval));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Space"' new UCIOption(idx++' 100' 0' 200' UCIOptionChanges.on_eval));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Space"' new UCIOption(idx++' 100' 0' 200' UCIOptionChanges.on_eval));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Aggressiveness"' new UCIOption(idx++' 100' 0' 200' UCIOptionChanges.on_eval));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Aggressiveness"' new UCIOption(idx++' 100' 0' 200' UCIOptionChanges.on_eval));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Cowardice"' new UCIOption(idx++' 100' 0' 200' UCIOptionChanges.on_eval));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Cowardice"' new UCIOption(idx++' 100' 0' 200' UCIOptionChanges.on_eval));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Min Split Depth"' new UCIOption(idx++' msd' 4' 7' UCIOptionChanges.on_threads));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Min Split Depth"' new UCIOption(idx++' msd' 4' 7' UCIOptionChanges.on_threads));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Max Threads per Split Point"' new UCIOption(idx++' 5' 4' 8' UCIOptionChanges.on_threads));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Max Threads per Split Point"' new UCIOption(idx++' 5' 4' 8' UCIOptionChanges.on_threads));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Max Threads per Split Point"' new UCIOption(idx++' 5' 4' 8' UCIOptionChanges.on_threads));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Hash"' new UCIOption(idx++' 32' 4' 8192' null));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Hash"' new UCIOption(idx++' 32' 4' 8192' null));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Hash"' new UCIOption(idx++' 32' 4' 8192' null));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("MultiPV"' new UCIOption(idx++' 1' 1' 500' null));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Skill Level"' new UCIOption(idx++' 20' 0' 20' null));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Skill Level"' new UCIOption(idx++' 20' 0' 20' null));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Emergency Move Horizon"' new UCIOption(idx++' 40' 0' 50' null));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Emergency Move Horizon"' new UCIOption(idx++' 40' 0' 50' null));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Emergency Base Time"' new UCIOption(idx++' 200' 0' 30000' null));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Emergency Base Time"' new UCIOption(idx++' 200' 0' 30000' null));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Emergency Move Time"' new UCIOption(idx++' 70' 0' 5000' null));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Emergency Move Time"' new UCIOption(idx++' 70' 0' 5000' null));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Minimum Thinking Time"' new UCIOption(idx++' 20' 0' 5000' null));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Minimum Thinking Time"' new UCIOption(idx++' 20' 0' 5000' null));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Slow Mover"' new UCIOption(idx++' 100' 10' 1000' null));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Slow Mover"' new UCIOption(idx++' 100' 10' 1000' null));
Magic Number,Portfish,OptionMap,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\UciOptions.cs,OptionMap,The following statement contains a magic number: this.Add("Slow Mover"' new UCIOption(idx++' 100' 10' 1000' null));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: k < (2 << i)
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: i < 8
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: b < 256
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: RankBB[i] = RankBB[i - 1] << 8;
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: i < 8
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: InFrontBB[ColorC.WHITE] = new Bitboard[8];
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: InFrontBB[ColorC.BLACK] = new Bitboard[8];
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: ForwardBB[c] = new Bitboard[64];
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: PassedPawnMask[c] = new Bitboard[64];
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: AttackSpanMask[c] = new Bitboard[64];
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: SquareDistance[s1] = new int[64];
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: b ^= b >> 32;
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: BSFTable[(UInt32)(b * 0x783A9B23) >> 26] = i;
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: i < 64
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: StepAttacksBB[piece] = new Bitboard[64];
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: Utils.is_ok_S(to) && SquareDistance[s][to] < 3
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: i < 64
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: PseudoAttacks[i] = new Bitboard[64];
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: i < 6
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init,The following statement contains a magic number: BetweenBB[s1] = new Bitboard[64];
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,sliding_attack,The following statement contains a magic number: i < 4
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,pick_random,The following statement contains a magic number: int s1 = booster & 63' s2 = (booster >> 6) & 63;
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,pick_random,The following statement contains a magic number: int s1 = booster & 63' s2 = (booster >> 6) & 63;
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,pick_random,The following statement contains a magic number: int s1 = booster & 63' s2 = (booster >> 6) & 63;
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,pick_random,The following statement contains a magic number: magic = (magic >> s1) | (magic << (64 - s1));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,pick_random,The following statement contains a magic number: magic = (magic >> s2) | (magic << (64 - s2));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,pick_random,The following statement contains a magic number: BitCount8Bit[(mask * magic) >> 56] >= 6
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,pick_random,The following statement contains a magic number: BitCount8Bit[(mask * magic) >> 56] >= 6
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,init_magics,The following statement contains a magic number: shifts[s] = 32 - Bitcount.popcount_1s_Max15(masks[s]);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,pop_1st_bit,The following statement contains a magic number: return BSFTable[(((UInt32)((bb & 0xffffffff) ^ (bb >> 32))) * 0x783a9b23) >> 26];
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,pop_1st_bit,The following statement contains a magic number: return BSFTable[(((UInt32)((bb & 0xffffffff) ^ (bb >> 32))) * 0x783a9b23) >> 26];
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,first_1,The following statement contains a magic number: return BSFTable[(((UInt32)((b & 0xffffffff) ^ (b >> 32))) * 0x783A9B23) >> 26];
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,first_1,The following statement contains a magic number: return BSFTable[(((UInt32)((b & 0xffffffff) ^ (b >> 32))) * 0x783A9B23) >> 26];
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,last_1,The following statement contains a magic number: b >>= 32;
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,last_1,The following statement contains a magic number: result = 32;
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,last_1,The following statement contains a magic number: b >>= 16;
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,last_1,The following statement contains a magic number: result += 16;
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,last_1,The following statement contains a magic number: b >>= 8;
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,last_1,The following statement contains a magic number: result += 8;
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,magic_index,The following statement contains a magic number: UInt32 hi = (UInt32)(occ >> 32) & (UInt32)(Masks[s] >> 32);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,magic_index,The following statement contains a magic number: UInt32 hi = (UInt32)(occ >> 32) & (UInt32)(Masks[s] >> 32);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,magic_index,The following statement contains a magic number: return (lo * (UInt32)(Magics[s]) ^ hi * (UInt32)(Magics[s] >> 32)) >> Shifts[s];
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,rook_attacks_bb,The following statement contains a magic number: UInt32 hi = (UInt32)(occ >> 32) & (UInt32)(RMasks[s] >> 32);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,rook_attacks_bb,The following statement contains a magic number: UInt32 hi = (UInt32)(occ >> 32) & (UInt32)(RMasks[s] >> 32);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,rook_attacks_bb,The following statement contains a magic number: return RAttacks[s][(lo * (UInt32)(RMagics[s]) ^ hi * (UInt32)(RMagics[s] >> 32)) >> RShifts[s]];
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,bishop_attacks_bb,The following statement contains a magic number: UInt32 hi = (UInt32)(occ >> 32) & (UInt32)(BMasks[s] >> 32);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,bishop_attacks_bb,The following statement contains a magic number: UInt32 hi = (UInt32)(occ >> 32) & (UInt32)(BMasks[s] >> 32);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,bishop_attacks_bb,The following statement contains a magic number: return BAttacks[s][(lo * (UInt32)(BMagics[s]) ^ hi * (UInt32)(BMagics[s] >> 32)) >> BShifts[s]];
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,make_piece,The following statement contains a magic number: return ((c << 3) | pt);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,type_of,The following statement contains a magic number: return (p & 7);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,color_of,The following statement contains a magic number: return (p >> 3);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,make_square,The following statement contains a magic number: return ((r << 3) | f);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,file_of,The following statement contains a magic number: return (s & 7);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,rank_of,The following statement contains a magic number: return (s >> 3);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,flip_S,The following statement contains a magic number: return (s ^ 56);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,mirror,The following statement contains a magic number: return (s ^ 7);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,relative_square,The following statement contains a magic number: return (s ^ (c * 56));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,relative_rank_CR,The following statement contains a magic number: return (r ^ (c * 7));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,relative_rank_CS,The following statement contains a magic number: return ((s >> 3) ^ (c * 7));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,relative_rank_CS,The following statement contains a magic number: return ((s >> 3) ^ (c * 7));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,opposite_colors,The following statement contains a magic number: return (((s >> 3) ^ s) & 1) != 0;
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,from_sq,The following statement contains a magic number: return ((m >> 6) & 0x3F);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,is_special,The following statement contains a magic number: return (m & (3 << 14)) != 0;
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,is_special,The following statement contains a magic number: return (m & (3 << 14)) != 0;
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,is_promotion,The following statement contains a magic number: return (m & (3 << 14)) == (1 << 14);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,is_promotion,The following statement contains a magic number: return (m & (3 << 14)) == (1 << 14);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,is_promotion,The following statement contains a magic number: return (m & (3 << 14)) == (1 << 14);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,is_enpassant,The following statement contains a magic number: return (m & (3 << 14)) == (2 << 14);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,is_enpassant,The following statement contains a magic number: return (m & (3 << 14)) == (2 << 14);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,is_enpassant,The following statement contains a magic number: return (m & (3 << 14)) == (2 << 14);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,is_enpassant,The following statement contains a magic number: return (m & (3 << 14)) == (2 << 14);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,is_castle,The following statement contains a magic number: return (m & (3 << 14)) == (3 << 14);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,is_castle,The following statement contains a magic number: return (m & (3 << 14)) == (3 << 14);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,is_castle,The following statement contains a magic number: return (m & (3 << 14)) == (3 << 14);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,is_castle,The following statement contains a magic number: return (m & (3 << 14)) == (3 << 14);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,promotion_type,The following statement contains a magic number: return (((m >> 12) & 3) + 2);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,promotion_type,The following statement contains a magic number: return (((m >> 12) & 3) + 2);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,promotion_type,The following statement contains a magic number: return (((m >> 12) & 3) + 2);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,make_move,The following statement contains a magic number: return (to | (from << 6));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,make_promotion,The following statement contains a magic number: return (to | (from << 6) | (1 << 14) | ((pt - 2) << 12));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,make_promotion,The following statement contains a magic number: return (to | (from << 6) | (1 << 14) | ((pt - 2) << 12));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,make_promotion,The following statement contains a magic number: return (to | (from << 6) | (1 << 14) | ((pt - 2) << 12));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,make_promotion,The following statement contains a magic number: return (to | (from << 6) | (1 << 14) | ((pt - 2) << 12));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,make_enpassant,The following statement contains a magic number: return (to | (from << 6) | (2 << 14));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,make_enpassant,The following statement contains a magic number: return (to | (from << 6) | (2 << 14));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,make_enpassant,The following statement contains a magic number: return (to | (from << 6) | (2 << 14));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,make_castle,The following statement contains a magic number: return (to | (from << 6) | (3 << 14));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,make_castle,The following statement contains a magic number: return (to | (from << 6) | (3 << 14));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,make_castle,The following statement contains a magic number: return (to | (from << 6) | (3 << 14));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,make_castle_right,The following statement contains a magic number: return CastleRightC.WHITE_OO << ((s == CastlingSideC.QUEEN_SIDE ? 1 : 0) + 2 * c);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,engine_info,The following statement contains a magic number: string versionRaw = fullName.Substring(vspos + 8' vepos - vspos - 8);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,engine_info,The following statement contains a magic number: string versionRaw = fullName.Substring(vspos + 8' vepos - vspos - 8);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,engine_info,The following statement contains a magic number: DateTime buildDateTime = new DateTime(2000' 1' 1).Add(                  new TimeSpan(                      TimeSpan.TicksPerDay * version.Build + // days since 1 January 2000                      TimeSpan.TicksPerSecond * 2 * version.Revision));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,engine_info,The following statement contains a magic number: DateTime buildDateTime = new DateTime(2000' 1' 1).Add(                  new TimeSpan(                      TimeSpan.TicksPerDay * version.Build + // days since 1 January 2000                      TimeSpan.TicksPerSecond * 2 * version.Revision));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,engine_info,The following statement contains a magic number: string versionInfo = buildDateTime.Year.ToString() + buildDateTime.Month.ToString().PadLeft(2' '0') + buildDateTime.Day.ToString().PadLeft(2' '0');
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,engine_info,The following statement contains a magic number: string versionInfo = buildDateTime.Year.ToString() + buildDateTime.Month.ToString().PadLeft(2' '0') + buildDateTime.Day.ToString().PadLeft(2' '0');
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,move_to_uci,The following statement contains a magic number: to = from + (file_of(to) == FileC.FILE_H ? 2 : -2);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,move_to_uci,The following statement contains a magic number: to = from + (file_of(to) == FileC.FILE_H ? 2 : -2);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,move_from_uci,The following statement contains a magic number: string strLowerPromotion = (str.Length == 5 ? str.Substring(0' 4) + str.Substring(4).ToLowerInvariant() : str);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,move_from_uci,The following statement contains a magic number: string strLowerPromotion = (str.Length == 5 ? str.Substring(0' 4) + str.Substring(4).ToLowerInvariant() : str);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,move_from_uci,The following statement contains a magic number: string strLowerPromotion = (str.Length == 5 ? str.Substring(0' 4) + str.Substring(4).ToLowerInvariant() : str);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,make_score,The following statement contains a magic number: return ((mg << 16) + eg);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,mg_value,The following statement contains a magic number: return (((s + 32768) & ~0xffff) / 0x10000);
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,apply_weight,The following statement contains a magic number: return (((((int)((((v + 32768) & ~0xffff) / 0x10000)) * (((w + 32768) & ~0xffff) / 0x10000)) / 0x100) << 16) + (((int)(((Int16)(v & 0xffff))) * ((Int16)(w & 0xffff))) / 0x100));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,apply_weight,The following statement contains a magic number: return (((((int)((((v + 32768) & ~0xffff) / 0x10000)) * (((w + 32768) & ~0xffff) / 0x10000)) / 0x100) << 16) + (((int)(((Int16)(v & 0xffff))) * ((Int16)(w & 0xffff))) / 0x100));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,apply_weight,The following statement contains a magic number: return (((((int)((((v + 32768) & ~0xffff) / 0x10000)) * (((w + 32768) & ~0xffff) / 0x10000)) / 0x100) << 16) + (((int)(((Int16)(v & 0xffff))) * ((Int16)(w & 0xffff))) / 0x100));
Magic Number,Portfish,Utils,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Utils.cs,dbg_print,The following statement contains a magic number: Plug.Write((100 * hits[1] / hits[0]).ToString());
Duplicate Code,Portfish,Book,D:\research\architectureSmells\repos\bpfliegel_Portfish\src\Book.cs,probe,The method contains a code clone-set at the following line numbers (starting from the method definition): ((21' 40)' (61' 80))
