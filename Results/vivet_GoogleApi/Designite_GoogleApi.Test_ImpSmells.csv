Implementation smell,Namespace,Class,File,Method,Description
Long Statement,GoogleApi.Test,BaseTest,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\BaseTest.cs,Setup,The length of the statement  "            var fileInfo = directoryInfo?.GetFiles().FirstOrDefault(x => x.Name == "application.json") ?? directoryInfo?.GetFiles().FirstOrDefault(x => x.Name == "application.default.json"); " is 178.
Long Statement,GoogleApi.Test.Places.Photos,PhotosTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Photos\PhotosTests.cs,PlacesPhotosWhenMaxHeightIsLessThanOneTest,The length of the statement  "            Assert.AreEqual(innerException.Message' "MaxHeight must be greater than or equal to 1 and less than or equal to 1.600"); " is 120.
Long Statement,GoogleApi.Test.Places.Photos,PhotosTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Photos\PhotosTests.cs,PlacesPhotosWhenMaxHeightIsGreaterThanSexteenHundredthsTest,The length of the statement  "            Assert.AreEqual(innerException.Message' "MaxHeight must be greater than or equal to 1 and less than or equal to 1.600"); " is 120.
Long Statement,GoogleApi.Test.Search.Image,ImageSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Image\ImageSearchTests.cs,ImageSearchTest,The length of the statement  "            Assert.AreEqual(response.Url.Template' "https://www.googleapis.com/customsearch/v1?q={searchTerms}&num={count?}&start={startIndex?}&lr={language?}&safe={safe?}&cx={cx?}&sort={sort?}&filter={filter?}&gl={gl?}&cr={cr?}&googlehost={googleHost?}&c2coff={disableCnTwTranslation?}&hq={hq?}&hl={hl?}&siteSearch={siteSearch?}&siteSearchFilter={siteSearchFilter?}&exactTerms={exactTerms?}&excludeTerms={excludeTerms?}&linkSite={linkSite?}&orTerms={orTerms?}&relatedSite={relatedSite?}&dateRestrict={dateRestrict?}&lowRange={lowRange?}&highRange={highRange?}&searchType={searchType}&fileType={fileType?}&rights={rights?}&imgSize={imgSize?}&imgType={imgType?}&imgColorType={imgColorType?}&imgDominantColor={imgDominantColor?}&alt=json"); " is 726.
Long Statement,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchTest,The length of the statement  "            Assert.AreEqual(response.Url.Template' "https://www.googleapis.com/customsearch/v1?q={searchTerms}&num={count?}&start={startIndex?}&lr={language?}&safe={safe?}&cx={cx?}&sort={sort?}&filter={filter?}&gl={gl?}&cr={cr?}&googlehost={googleHost?}&c2coff={disableCnTwTranslation?}&hq={hq?}&hl={hl?}&siteSearch={siteSearch?}&siteSearchFilter={siteSearchFilter?}&exactTerms={exactTerms?}&excludeTerms={excludeTerms?}&linkSite={linkSite?}&orTerms={orTerms?}&relatedSite={relatedSite?}&dateRestrict={dateRestrict?}&lowRange={lowRange?}&highRange={highRange?}&searchType={searchType}&fileType={fileType?}&rights={rights?}&imgSize={imgSize?}&imgType={imgType?}&imgColorType={imgColorType?}&imgDominantColor={imgDominantColor?}&alt=json"); " is 726.
Long Statement,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchWhenSafetyLevelAndNotAllowedTest,The length of the statement  "            Assert.AreEqual(innerException.Message' $"SafetyLevel is not allowed for specified InterfaceLanguage: {request.Options.InterfaceLanguage}"); " is 140.
Magic Number,GoogleApi.Test.Functions,FunctionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Functions\FunctionsTests.cs,EncodePolyLineTest,The following statement contains a magic number: var locations = new[] { new Location(1.0101' 1.0101)' new Location(2.20202' 2.20202)' new Location(3.30303' 3.30303) };
Magic Number,GoogleApi.Test.Functions,FunctionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Functions\FunctionsTests.cs,EncodePolyLineTest,The following statement contains a magic number: var locations = new[] { new Location(1.0101' 1.0101)' new Location(2.20202' 2.20202)' new Location(3.30303' 3.30303) };
Magic Number,GoogleApi.Test.Functions,FunctionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Functions\FunctionsTests.cs,EncodePolyLineTest,The following statement contains a magic number: var locations = new[] { new Location(1.0101' 1.0101)' new Location(2.20202' 2.20202)' new Location(3.30303' 3.30303) };
Magic Number,GoogleApi.Test.Functions,FunctionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Functions\FunctionsTests.cs,EncodePolyLineTest,The following statement contains a magic number: var locations = new[] { new Location(1.0101' 1.0101)' new Location(2.20202' 2.20202)' new Location(3.30303' 3.30303) };
Magic Number,GoogleApi.Test.Functions,FunctionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Functions\FunctionsTests.cs,EncodePolyLineTest,The following statement contains a magic number: var locations = new[] { new Location(1.0101' 1.0101)' new Location(2.20202' 2.20202)' new Location(3.30303' 3.30303) };
Magic Number,GoogleApi.Test.Functions,FunctionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Functions\FunctionsTests.cs,EncodePolyLineTest,The following statement contains a magic number: var locations = new[] { new Location(1.0101' 1.0101)' new Location(2.20202' 2.20202)' new Location(3.30303' 3.30303) };
Magic Number,GoogleApi.Test.Functions,FunctionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Functions\FunctionsTests.cs,MergePolyLineTest,The following statement contains a magic number: Assert.AreEqual(6' decodePolyLine.Length);
Magic Number,GoogleApi.Test.Functions,FunctionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Functions\FunctionsTests.cs,MergePolyLineTest,The following statement contains a magic number: Assert.AreEqual(decodePolyLine[2].ToString()' location3.ToString());
Magic Number,GoogleApi.Test.Functions,FunctionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Functions\FunctionsTests.cs,MergePolyLineTest,The following statement contains a magic number: Assert.AreEqual(decodePolyLine[3].ToString()' location4.ToString());
Magic Number,GoogleApi.Test.Functions,FunctionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Functions\FunctionsTests.cs,MergePolyLineTest,The following statement contains a magic number: Assert.AreEqual(decodePolyLine[4].ToString()' location5.ToString());
Magic Number,GoogleApi.Test.Functions,FunctionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Functions\FunctionsTests.cs,MergePolyLineTest,The following statement contains a magic number: Assert.AreEqual(decodePolyLine[5].ToString()' location6.ToString());
Magic Number,GoogleApi.Test.Functions,FunctionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Functions\FunctionsTests.cs,DecodePolyLineTest,The following statement contains a magic number: Assert.AreEqual(3' decodePolyLine.Length);
Magic Number,GoogleApi.Test.Functions,FunctionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Functions\FunctionsTests.cs,DecodePolyLineTest,The following statement contains a magic number: Assert.AreEqual(decodePolyLine[2].ToString()' location3.ToString());
Magic Number,GoogleApi.Test.Maps.Directions,DirectionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Directions\DirectionsTests.cs,DirectionsTest,The following statement contains a magic number: Assert.AreEqual(400' overviewPath.Points.Length' 300);
Magic Number,GoogleApi.Test.Maps.Directions,DirectionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Directions\DirectionsTests.cs,DirectionsTest,The following statement contains a magic number: Assert.AreEqual(400' overviewPath.Points.Length' 300);
Magic Number,GoogleApi.Test.Maps.Directions,DirectionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Directions\DirectionsTests.cs,DirectionsTest,The following statement contains a magic number: Assert.AreEqual(25' polyline.Points.Length' 10);
Magic Number,GoogleApi.Test.Maps.Directions,DirectionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Directions\DirectionsTests.cs,DirectionsTest,The following statement contains a magic number: Assert.AreEqual(25' polyline.Points.Length' 10);
Magic Number,GoogleApi.Test.Maps.Directions,DirectionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Directions\DirectionsTests.cs,DirectionsTest,The following statement contains a magic number: Assert.AreEqual(8258.00' result.Routes.First().Legs.First().Steps.Sum(s => s.Distance.Value)' 5000.00);
Magic Number,GoogleApi.Test.Maps.Directions,DirectionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Directions\DirectionsTests.cs,DirectionsTest,The following statement contains a magic number: Assert.AreEqual(8258.00' result.Routes.First().Legs.First().Steps.Sum(s => s.Distance.Value)' 5000.00);
Magic Number,GoogleApi.Test.Maps.Directions,DirectionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Directions\DirectionsTests.cs,DirectionsTest,The following statement contains a magic number: Assert.AreEqual(1135.00' result.Routes.First().Legs.First().Steps.Sum(s => s.Duration.Value)' 500.00);
Magic Number,GoogleApi.Test.Maps.Directions,DirectionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Directions\DirectionsTests.cs,DirectionsTest,The following statement contains a magic number: Assert.AreEqual(1135.00' result.Routes.First().Legs.First().Steps.Sum(s => s.Duration.Value)' 500.00);
Magic Number,GoogleApi.Test.Maps.Directions,DirectionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Directions\DirectionsTests.cs,DirectionsWhenTransitModeTest,The following statement contains a magic number: var request = new DirectionsRequest              {                  Key = this.ApiKey'                  Origin = new Location("285 Bedford Ave' Brooklyn' NY' USA")'                  Destination = new Location("185 Broadway Ave' Manhattan' NY' USA")'                  TravelMode = TravelMode.Transit'                  ArrivalTime = DateTime.UtcNow.AddHours(2)'                  DepartureTime = DateTime.UtcNow.AddHours(1)              };
Magic Number,GoogleApi.Test.Maps.Directions,DirectionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Directions\DirectionsTests.cs,DirectionsWhenhWayPointsTest,The following statement contains a magic number: Assert.AreEqual(156084' leg.Steps.Sum(s => s.Distance.Value)' 15000);
Magic Number,GoogleApi.Test.Maps.Directions,DirectionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Directions\DirectionsTests.cs,DirectionsWhenhWayPointsTest,The following statement contains a magic number: Assert.AreEqual(156084' leg.Steps.Sum(s => s.Distance.Value)' 15000);
Magic Number,GoogleApi.Test.Maps.Directions,DirectionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Directions\DirectionsTests.cs,DirectionsWhenWayÆointsAndOptimizeWaypointsTest,The following statement contains a magic number: Assert.AreEqual(156084' leg.Steps.Sum(s => s.Distance.Value)' 15000);
Magic Number,GoogleApi.Test.Maps.Directions,DirectionsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Directions\DirectionsTests.cs,DirectionsWhenWayÆointsAndOptimizeWaypointsTest,The following statement contains a magic number: Assert.AreEqual(156084' leg.Steps.Sum(s => s.Distance.Value)' 15000);
Magic Number,GoogleApi.Test.Maps.DistanceMatrix,DistanceMatrixTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\DistanceMatrix\DistanceMatrixTests.cs,DistanceMatrixTest,The following statement contains a magic number: var request = new DistanceMatrixRequest              {                  Key = this.ApiKey'                  Origins = new[] { new Location(40.7141289' -73.9614074) }'                  Destinations = new[] { new Location("185 Broadway Ave' Manhattan' NY' USA") }              };
Magic Number,GoogleApi.Test.Maps.DistanceMatrix,DistanceMatrixTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\DistanceMatrix\DistanceMatrixTests.cs,DistanceMatrixTest,The following statement contains a magic number: var request = new DistanceMatrixRequest              {                  Key = this.ApiKey'                  Origins = new[] { new Location(40.7141289' -73.9614074) }'                  Destinations = new[] { new Location("185 Broadway Ave' Manhattan' NY' USA") }              };
Magic Number,GoogleApi.Test.Maps.DistanceMatrix,DistanceMatrixTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\DistanceMatrix\DistanceMatrixTests.cs,DistanceMatrixTest,The following statement contains a magic number: Assert.AreEqual(8258.00' element.Distance.Value' 5000.00);
Magic Number,GoogleApi.Test.Maps.DistanceMatrix,DistanceMatrixTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\DistanceMatrix\DistanceMatrixTests.cs,DistanceMatrixTest,The following statement contains a magic number: Assert.AreEqual(8258.00' element.Distance.Value' 5000.00);
Magic Number,GoogleApi.Test.Maps.DistanceMatrix,DistanceMatrixTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\DistanceMatrix\DistanceMatrixTests.cs,DistanceMatrixTest,The following statement contains a magic number: Assert.AreEqual(1135.00' element.Duration.Value' 500.00);
Magic Number,GoogleApi.Test.Maps.DistanceMatrix,DistanceMatrixTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\DistanceMatrix\DistanceMatrixTests.cs,DistanceMatrixTest,The following statement contains a magic number: Assert.AreEqual(1135.00' element.Duration.Value' 500.00);
Magic Number,GoogleApi.Test.Maps.DistanceMatrix,DistanceMatrixTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\DistanceMatrix\DistanceMatrixTests.cs,DistanceMatrixWhenAsyncTest,The following statement contains a magic number: var request = new DistanceMatrixRequest              {                  Key = this.ApiKey'                  Origins = new[] { new Location(40.7141289' -73.9614074) }'                  Destinations = new[] { new Location("185 Broadway Ave' Manhattan' NY' USA") }              };
Magic Number,GoogleApi.Test.Maps.DistanceMatrix,DistanceMatrixTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\DistanceMatrix\DistanceMatrixTests.cs,DistanceMatrixWhenAsyncTest,The following statement contains a magic number: var request = new DistanceMatrixRequest              {                  Key = this.ApiKey'                  Origins = new[] { new Location(40.7141289' -73.9614074) }'                  Destinations = new[] { new Location("185 Broadway Ave' Manhattan' NY' USA") }              };
Magic Number,GoogleApi.Test.Maps.DistanceMatrix,DistanceMatrixTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\DistanceMatrix\DistanceMatrixTests.cs,DistanceMatrixWhenAvoidWayTest,The following statement contains a magic number: var request = new DistanceMatrixRequest              {                  Key = this.ApiKey'                  Origins = new[] { new Location(40.7141289' -73.9614074) }'                  Destinations = new[] { new Location("185 Broadway Ave' Manhattan' NY' USA") }'                  Avoid = AvoidWay.Tolls | AvoidWay.Highways'                  DepartureTime = DateTime.Now              };
Magic Number,GoogleApi.Test.Maps.DistanceMatrix,DistanceMatrixTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\DistanceMatrix\DistanceMatrixTests.cs,DistanceMatrixWhenAvoidWayTest,The following statement contains a magic number: var request = new DistanceMatrixRequest              {                  Key = this.ApiKey'                  Origins = new[] { new Location(40.7141289' -73.9614074) }'                  Destinations = new[] { new Location("185 Broadway Ave' Manhattan' NY' USA") }'                  Avoid = AvoidWay.Tolls | AvoidWay.Highways'                  DepartureTime = DateTime.Now              };
Magic Number,GoogleApi.Test.Maps.DistanceMatrix,DistanceMatrixTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\DistanceMatrix\DistanceMatrixTests.cs,DistanceMatrixWhenAvoidWayTest,The following statement contains a magic number: Assert.AreEqual(5857.00' element.Distance.Value' 500.00);
Magic Number,GoogleApi.Test.Maps.DistanceMatrix,DistanceMatrixTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\DistanceMatrix\DistanceMatrixTests.cs,DistanceMatrixWhenAvoidWayTest,The following statement contains a magic number: Assert.AreEqual(5857.00' element.Distance.Value' 500.00);
Magic Number,GoogleApi.Test.Maps.DistanceMatrix,DistanceMatrixTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\DistanceMatrix\DistanceMatrixTests.cs,DistanceMatrixWhenAvoidWayTest,The following statement contains a magic number: Assert.AreEqual(1509.00' element.Duration.Value' 500.00);
Magic Number,GoogleApi.Test.Maps.DistanceMatrix,DistanceMatrixTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\DistanceMatrix\DistanceMatrixTests.cs,DistanceMatrixWhenAvoidWayTest,The following statement contains a magic number: Assert.AreEqual(1509.00' element.Duration.Value' 500.00);
Magic Number,GoogleApi.Test.Maps.DistanceMatrix,DistanceMatrixTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\DistanceMatrix\DistanceMatrixTests.cs,DistanceMatrixWhenDepartureTimeTest,The following statement contains a magic number: var request = new DistanceMatrixRequest              {                  Key = this.ApiKey'                  Origins = new[] { new Location(40.7141289' -73.9614074) }'                  Destinations = new[] { new Location("185 Broadway Ave' Manhattan' NY' USA") }'                  DepartureTime = DateTime.Now              };
Magic Number,GoogleApi.Test.Maps.DistanceMatrix,DistanceMatrixTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\DistanceMatrix\DistanceMatrixTests.cs,DistanceMatrixWhenDepartureTimeTest,The following statement contains a magic number: var request = new DistanceMatrixRequest              {                  Key = this.ApiKey'                  Origins = new[] { new Location(40.7141289' -73.9614074) }'                  Destinations = new[] { new Location("185 Broadway Ave' Manhattan' NY' USA") }'                  DepartureTime = DateTime.Now              };
Magic Number,GoogleApi.Test.Maps.Elevation,ElevationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Elevation\ElevationTests.cs,ElevationWhenLocationTest,The following statement contains a magic number: var request = new ElevationRequest              {                  Key = this.ApiKey'                  Locations = new[] { new Location(40.7141289' -73.9614074) }              };
Magic Number,GoogleApi.Test.Maps.Elevation,ElevationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Elevation\ElevationTests.cs,ElevationWhenLocationTest,The following statement contains a magic number: var request = new ElevationRequest              {                  Key = this.ApiKey'                  Locations = new[] { new Location(40.7141289' -73.9614074) }              };
Magic Number,GoogleApi.Test.Maps.Elevation,ElevationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Elevation\ElevationTests.cs,ElevationWhenLocationTest,The following statement contains a magic number: Assert.AreEqual(16.9243183135986' response.Results.First().Elevation' 2.00);
Magic Number,GoogleApi.Test.Maps.Elevation,ElevationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Elevation\ElevationTests.cs,ElevationWhenLocationTest,The following statement contains a magic number: Assert.AreEqual(16.9243183135986' response.Results.First().Elevation' 2.00);
Magic Number,GoogleApi.Test.Maps.Elevation,ElevationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Elevation\ElevationTests.cs,ElevationWhenAsyncTest,The following statement contains a magic number: var request = new ElevationRequest              {                  Key = this.ApiKey'                  Locations = new[] { new Location(40.7141289' -73.9614074) }              };
Magic Number,GoogleApi.Test.Maps.Elevation,ElevationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Elevation\ElevationTests.cs,ElevationWhenAsyncTest,The following statement contains a magic number: var request = new ElevationRequest              {                  Key = this.ApiKey'                  Locations = new[] { new Location(40.7141289' -73.9614074) }              };
Magic Number,GoogleApi.Test.Maps.Elevation,ElevationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Elevation\ElevationTests.cs,ElevationWhenAsyncAndCancelledTest,The following statement contains a magic number: var request = new ElevationRequest              {                  Key = this.ApiKey'                  Locations = new[] { new Location(40.7141289' -73.9614074) }              };
Magic Number,GoogleApi.Test.Maps.Elevation,ElevationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Elevation\ElevationTests.cs,ElevationWhenAsyncAndCancelledTest,The following statement contains a magic number: var request = new ElevationRequest              {                  Key = this.ApiKey'                  Locations = new[] { new Location(40.7141289' -73.9614074) }              };
Magic Number,GoogleApi.Test.Maps.Elevation,ElevationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Elevation\ElevationTests.cs,ElevationWhenPathAndSamplesIsNullTest,The following statement contains a magic number: var request = new ElevationRequest              {                  Key = this.ApiKey'                  Path = new[] { new Location(40.7141289' -73.9614074) }'                  Samples = null              };
Magic Number,GoogleApi.Test.Maps.Elevation,ElevationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Elevation\ElevationTests.cs,ElevationWhenPathAndSamplesIsNullTest,The following statement contains a magic number: var request = new ElevationRequest              {                  Key = this.ApiKey'                  Path = new[] { new Location(40.7141289' -73.9614074) }'                  Samples = null              };
Magic Number,GoogleApi.Test.Maps.Elevation,ElevationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Elevation\ElevationTests.cs,ElevationWhenPathAndLocationTest,The following statement contains a magic number: var request = new ElevationRequest              {                  Key = this.ApiKey'                  Path = new[] { new Location(40.7141289' -73.9614074) }'                  Locations = new[] { new Location(40.7141289' -73.9614074) }              };
Magic Number,GoogleApi.Test.Maps.Elevation,ElevationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Elevation\ElevationTests.cs,ElevationWhenPathAndLocationTest,The following statement contains a magic number: var request = new ElevationRequest              {                  Key = this.ApiKey'                  Path = new[] { new Location(40.7141289' -73.9614074) }'                  Locations = new[] { new Location(40.7141289' -73.9614074) }              };
Magic Number,GoogleApi.Test.Maps.Elevation,ElevationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Elevation\ElevationTests.cs,ElevationWhenPathAndLocationTest,The following statement contains a magic number: var request = new ElevationRequest              {                  Key = this.ApiKey'                  Path = new[] { new Location(40.7141289' -73.9614074) }'                  Locations = new[] { new Location(40.7141289' -73.9614074) }              };
Magic Number,GoogleApi.Test.Maps.Elevation,ElevationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Elevation\ElevationTests.cs,ElevationWhenPathAndLocationTest,The following statement contains a magic number: var request = new ElevationRequest              {                  Key = this.ApiKey'                  Path = new[] { new Location(40.7141289' -73.9614074) }'                  Locations = new[] { new Location(40.7141289' -73.9614074) }              };
Magic Number,GoogleApi.Test.Maps.Geocoding.Address,AddressGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Address\AddressGeocodeTests.cs,AddressGeocodeTest,The following statement contains a magic number: Assert.AreEqual(40.7140415' geocodeResult.Geometry.Location.Latitude' 0.001);
Magic Number,GoogleApi.Test.Maps.Geocoding.Address,AddressGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Address\AddressGeocodeTests.cs,AddressGeocodeTest,The following statement contains a magic number: Assert.AreEqual(40.7140415' geocodeResult.Geometry.Location.Latitude' 0.001);
Magic Number,GoogleApi.Test.Maps.Geocoding.Address,AddressGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Address\AddressGeocodeTests.cs,AddressGeocodeTest,The following statement contains a magic number: Assert.AreEqual(-73.9613119' geocodeResult.Geometry.Location.Longitude' 0.001);
Magic Number,GoogleApi.Test.Maps.Geocoding.Address,AddressGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Address\AddressGeocodeTests.cs,AddressGeocodeTest,The following statement contains a magic number: Assert.AreEqual(-73.9613119' geocodeResult.Geometry.Location.Longitude' 0.001);
Magic Number,GoogleApi.Test.Maps.Geocoding.Address,AddressGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Address\AddressGeocodeTests.cs,AddressGeocodeWhenBoundsTest,The following statement contains a magic number: var request = new AddressGeocodeRequest              {                  Key = this.ApiKey'                  Address = "285 Bedford Ave' Brooklyn' NY 11211' USA"'                  Bounds = new ViewPort                  {                      NorthEast = new Entities.Common.Location(40.7141289' -73.9614074)'                      SouthWest = new Entities.Common.Location(40.7141289' -73.9614074)                  }              };
Magic Number,GoogleApi.Test.Maps.Geocoding.Address,AddressGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Address\AddressGeocodeTests.cs,AddressGeocodeWhenBoundsTest,The following statement contains a magic number: var request = new AddressGeocodeRequest              {                  Key = this.ApiKey'                  Address = "285 Bedford Ave' Brooklyn' NY 11211' USA"'                  Bounds = new ViewPort                  {                      NorthEast = new Entities.Common.Location(40.7141289' -73.9614074)'                      SouthWest = new Entities.Common.Location(40.7141289' -73.9614074)                  }              };
Magic Number,GoogleApi.Test.Maps.Geocoding.Address,AddressGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Address\AddressGeocodeTests.cs,AddressGeocodeWhenBoundsTest,The following statement contains a magic number: var request = new AddressGeocodeRequest              {                  Key = this.ApiKey'                  Address = "285 Bedford Ave' Brooklyn' NY 11211' USA"'                  Bounds = new ViewPort                  {                      NorthEast = new Entities.Common.Location(40.7141289' -73.9614074)'                      SouthWest = new Entities.Common.Location(40.7141289' -73.9614074)                  }              };
Magic Number,GoogleApi.Test.Maps.Geocoding.Address,AddressGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Address\AddressGeocodeTests.cs,AddressGeocodeWhenBoundsTest,The following statement contains a magic number: var request = new AddressGeocodeRequest              {                  Key = this.ApiKey'                  Address = "285 Bedford Ave' Brooklyn' NY 11211' USA"'                  Bounds = new ViewPort                  {                      NorthEast = new Entities.Common.Location(40.7141289' -73.9614074)'                      SouthWest = new Entities.Common.Location(40.7141289' -73.9614074)                  }              };
Magic Number,GoogleApi.Test.Maps.Geocoding.Address,AddressGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Address\AddressGeocodeTests.cs,AddressGeocodeWhenBoundsTest,The following statement contains a magic number: Assert.AreEqual(40.7140415' geocodeResult.Geometry.Location.Latitude' 0.001);
Magic Number,GoogleApi.Test.Maps.Geocoding.Address,AddressGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Address\AddressGeocodeTests.cs,AddressGeocodeWhenBoundsTest,The following statement contains a magic number: Assert.AreEqual(40.7140415' geocodeResult.Geometry.Location.Latitude' 0.001);
Magic Number,GoogleApi.Test.Maps.Geocoding.Address,AddressGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Address\AddressGeocodeTests.cs,AddressGeocodeWhenBoundsTest,The following statement contains a magic number: Assert.AreEqual(-73.9613119' geocodeResult.Geometry.Location.Longitude' 0.001);
Magic Number,GoogleApi.Test.Maps.Geocoding.Address,AddressGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Address\AddressGeocodeTests.cs,AddressGeocodeWhenBoundsTest,The following statement contains a magic number: Assert.AreEqual(-73.9613119' geocodeResult.Geometry.Location.Longitude' 0.001);
Magic Number,GoogleApi.Test.Maps.Geocoding.Address,AddressGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Address\AddressGeocodeTests.cs,AddressGeocodeWhenRegionTest,The following statement contains a magic number: Assert.AreEqual(40.7140415' geocodeResult.Geometry.Location.Latitude' 0.001);
Magic Number,GoogleApi.Test.Maps.Geocoding.Address,AddressGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Address\AddressGeocodeTests.cs,AddressGeocodeWhenRegionTest,The following statement contains a magic number: Assert.AreEqual(40.7140415' geocodeResult.Geometry.Location.Latitude' 0.001);
Magic Number,GoogleApi.Test.Maps.Geocoding.Address,AddressGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Address\AddressGeocodeTests.cs,AddressGeocodeWhenRegionTest,The following statement contains a magic number: Assert.AreEqual(-73.9613119' geocodeResult.Geometry.Location.Longitude' 0.001);
Magic Number,GoogleApi.Test.Maps.Geocoding.Address,AddressGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Address\AddressGeocodeTests.cs,AddressGeocodeWhenRegionTest,The following statement contains a magic number: Assert.AreEqual(-73.9613119' geocodeResult.Geometry.Location.Longitude' 0.001);
Magic Number,GoogleApi.Test.Maps.Geocoding.Location,LocationGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Location\LocationGeocodeTests.cs,LocationGeocodeTest,The following statement contains a magic number: var request = new LocationGeocodeRequest              {                  Key = this.ApiKey'                  Location = new Entities.Common.Location(40.7141289' -73.9614074)              };
Magic Number,GoogleApi.Test.Maps.Geocoding.Location,LocationGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Location\LocationGeocodeTests.cs,LocationGeocodeTest,The following statement contains a magic number: var request = new LocationGeocodeRequest              {                  Key = this.ApiKey'                  Location = new Entities.Common.Location(40.7141289' -73.9614074)              };
Magic Number,GoogleApi.Test.Maps.Geocoding.Location,LocationGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Location\LocationGeocodeTests.cs,LocationGeocodeWhenAsyncTest,The following statement contains a magic number: var request = new LocationGeocodeRequest              {                  Key = this.ApiKey'                  Location = new Entities.Common.Location(40.7141289' -73.9614074)              };
Magic Number,GoogleApi.Test.Maps.Geocoding.Location,LocationGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Location\LocationGeocodeTests.cs,LocationGeocodeWhenAsyncTest,The following statement contains a magic number: var request = new LocationGeocodeRequest              {                  Key = this.ApiKey'                  Location = new Entities.Common.Location(40.7141289' -73.9614074)              };
Magic Number,GoogleApi.Test.Maps.Geocoding.Location,LocationGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Location\LocationGeocodeTests.cs,LocationGeocodeWhenAsyncAndCancelledTest,The following statement contains a magic number: var request = new LocationGeocodeRequest              {                  Location = new Entities.Common.Location(40.7141289' -73.9614074)              };
Magic Number,GoogleApi.Test.Maps.Geocoding.Location,LocationGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Location\LocationGeocodeTests.cs,LocationGeocodeWhenAsyncAndCancelledTest,The following statement contains a magic number: var request = new LocationGeocodeRequest              {                  Location = new Entities.Common.Location(40.7141289' -73.9614074)              };
Magic Number,GoogleApi.Test.Maps.Geocoding.Location,LocationGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Location\LocationGeocodeTests.cs,LocationGeocodeWhenResultTypesTest,The following statement contains a magic number: var request = new LocationGeocodeRequest              {                  Key = this.ApiKey'                  Location = new Entities.Common.Location(40.7141289' -73.9614074)'                  ResultTypes = new List<PlaceLocationType> { PlaceLocationType.Premise' PlaceLocationType.Accounting }              };
Magic Number,GoogleApi.Test.Maps.Geocoding.Location,LocationGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Location\LocationGeocodeTests.cs,LocationGeocodeWhenResultTypesTest,The following statement contains a magic number: var request = new LocationGeocodeRequest              {                  Key = this.ApiKey'                  Location = new Entities.Common.Location(40.7141289' -73.9614074)'                  ResultTypes = new List<PlaceLocationType> { PlaceLocationType.Premise' PlaceLocationType.Accounting }              };
Magic Number,GoogleApi.Test.Maps.Geocoding.Location,LocationGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Location\LocationGeocodeTests.cs,LocationGeocodeWhenResultTypesWhenNoResultsTest,The following statement contains a magic number: var request = new LocationGeocodeRequest              {                  Key = this.ApiKey'                  Location = new Entities.Common.Location(40.7141289' -73.9614074)'                  ResultTypes = new List<PlaceLocationType> { PlaceLocationType.Accounting }              };
Magic Number,GoogleApi.Test.Maps.Geocoding.Location,LocationGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Location\LocationGeocodeTests.cs,LocationGeocodeWhenResultTypesWhenNoResultsTest,The following statement contains a magic number: var request = new LocationGeocodeRequest              {                  Key = this.ApiKey'                  Location = new Entities.Common.Location(40.7141289' -73.9614074)'                  ResultTypes = new List<PlaceLocationType> { PlaceLocationType.Accounting }              };
Magic Number,GoogleApi.Test.Maps.Geocoding.Location,LocationGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Location\LocationGeocodeTests.cs,LocationGeocodeWhenLoncationTypesTest,The following statement contains a magic number: var request = new LocationGeocodeRequest              {                  Key = this.ApiKey'                  Location = new Entities.Common.Location(40.7141289' -73.9614074)'                  LocationTypes = new List<GeometryLocationType> {  GeometryLocationType.Rooftop }              };
Magic Number,GoogleApi.Test.Maps.Geocoding.Location,LocationGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\Location\LocationGeocodeTests.cs,LocationGeocodeWhenLoncationTypesTest,The following statement contains a magic number: var request = new LocationGeocodeRequest              {                  Key = this.ApiKey'                  Location = new Entities.Common.Location(40.7141289' -73.9614074)'                  LocationTypes = new List<GeometryLocationType> {  GeometryLocationType.Rooftop }              };
Magic Number,GoogleApi.Test.Maps.Geocoding.PlusCode,PlusCodeGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\PlusCode\PlusCodeGeocodeTests.cs,PlusCodeGeocodeWhenLocationTest,The following statement contains a magic number: var request = new PlusCodeGeocodeRequest              {                  Key = this.ApiKey'                  Location = new Entities.Common.Location(40.71406249999997' -73.9613125)              };
Magic Number,GoogleApi.Test.Maps.Geocoding.PlusCode,PlusCodeGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\PlusCode\PlusCodeGeocodeTests.cs,PlusCodeGeocodeWhenLocationTest,The following statement contains a magic number: var request = new PlusCodeGeocodeRequest              {                  Key = this.ApiKey'                  Location = new Entities.Common.Location(40.71406249999997' -73.9613125)              };
Magic Number,GoogleApi.Test.Maps.Geocoding.PlusCode,PlusCodeGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\PlusCode\PlusCodeGeocodeTests.cs,PlusCodeGeocodeWhenAsyncTest,The following statement contains a magic number: var request = new PlusCodeGeocodeRequest              {                  Key = this.ApiKey'                  Location = new Entities.Common.Location(40.71406249999997' -73.9613125)              };
Magic Number,GoogleApi.Test.Maps.Geocoding.PlusCode,PlusCodeGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\PlusCode\PlusCodeGeocodeTests.cs,PlusCodeGeocodeWhenAsyncTest,The following statement contains a magic number: var request = new PlusCodeGeocodeRequest              {                  Key = this.ApiKey'                  Location = new Entities.Common.Location(40.71406249999997' -73.9613125)              };
Magic Number,GoogleApi.Test.Maps.Geocoding.PlusCode,PlusCodeGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\PlusCode\PlusCodeGeocodeTests.cs,PlusCodeGeocodeWhenAsyncAndCancelledTest,The following statement contains a magic number: var request = new PlusCodeGeocodeRequest              {                  Key = this.ApiKey'                  Location = new Entities.Common.Location(40.71406249999997' -73.9613125)              };
Magic Number,GoogleApi.Test.Maps.Geocoding.PlusCode,PlusCodeGeocodeTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geocoding\PlusCode\PlusCodeGeocodeTests.cs,PlusCodeGeocodeWhenAsyncAndCancelledTest,The following statement contains a magic number: var request = new PlusCodeGeocodeRequest              {                  Key = this.ApiKey'                  Location = new Entities.Common.Location(40.71406249999997' -73.9613125)              };
Magic Number,GoogleApi.Test.Maps.Geolocation,GeolocationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geolocation\GeolocationTests.cs,GeolocationTest,The following statement contains a magic number: Assert.AreEqual(3628.00' result.Accuracy' 3500.00);
Magic Number,GoogleApi.Test.Maps.Geolocation,GeolocationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geolocation\GeolocationTests.cs,GeolocationTest,The following statement contains a magic number: Assert.AreEqual(3628.00' result.Accuracy' 3500.00);
Magic Number,GoogleApi.Test.Maps.Geolocation,GeolocationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geolocation\GeolocationTests.cs,GeolocationTest,The following statement contains a magic number: Assert.AreEqual(55.692889700000002d' result.Location.Latitude' 0.1);
Magic Number,GoogleApi.Test.Maps.Geolocation,GeolocationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geolocation\GeolocationTests.cs,GeolocationTest,The following statement contains a magic number: Assert.AreEqual(55.692889700000002d' result.Location.Latitude' 0.1);
Magic Number,GoogleApi.Test.Maps.Geolocation,GeolocationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geolocation\GeolocationTests.cs,GeolocationTest,The following statement contains a magic number: Assert.AreEqual(12.547805d' result.Location.Longitude' 0.1);
Magic Number,GoogleApi.Test.Maps.Geolocation,GeolocationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geolocation\GeolocationTests.cs,GeolocationTest,The following statement contains a magic number: Assert.AreEqual(12.547805d' result.Location.Longitude' 0.1);
Magic Number,GoogleApi.Test.Maps.Geolocation,GeolocationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geolocation\GeolocationTests.cs,GeolocationWhenWifiAccessPointsTest,The following statement contains a magic number: var request = new GeolocationRequest              {                  Key = this.ApiKey'                  WifiAccessPoints = new[]                  {                      new WifiAccessPoint                      {                          MacAddress = "00:25:9c:cf:1c:ac"'                          SignalStrength = -43'                          SignalToNoiseRatio = 0                      }'                      new WifiAccessPoint                      {                          MacAddress = "00:25:9c:cf:1c:ad"'                          SignalStrength = -55'                          SignalToNoiseRatio = 0                      }                  }              };
Magic Number,GoogleApi.Test.Maps.Geolocation,GeolocationTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Geolocation\GeolocationTests.cs,GeolocationWhenWifiAccessPointsTest,The following statement contains a magic number: var request = new GeolocationRequest              {                  Key = this.ApiKey'                  WifiAccessPoints = new[]                  {                      new WifiAccessPoint                      {                          MacAddress = "00:25:9c:cf:1c:ac"'                          SignalStrength = -43'                          SignalToNoiseRatio = 0                      }'                      new WifiAccessPoint                      {                          MacAddress = "00:25:9c:cf:1c:ad"'                          SignalStrength = -55'                          SignalToNoiseRatio = 0                      }                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: var request = new NearestRoadsRequest              {                  Key = this.ApiKey'                  Points = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: var request = new NearestRoadsRequest              {                  Key = this.ApiKey'                  Points = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: var request = new NearestRoadsRequest              {                  Key = this.ApiKey'                  Points = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: var request = new NearestRoadsRequest              {                  Key = this.ApiKey'                  Points = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: var request = new NearestRoadsRequest              {                  Key = this.ApiKey'                  Points = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: var request = new NearestRoadsRequest              {                  Key = this.ApiKey'                  Points = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: Assert.AreEqual(3' snappedPoints.Length);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: Assert.AreEqual(60.170877918672588' snappedPoints[0].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: Assert.AreEqual(60.170877918672588' snappedPoints[0].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: Assert.AreEqual(24.942699821922421' snappedPoints[0].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: Assert.AreEqual(24.942699821922421' snappedPoints[0].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: Assert.AreEqual(60.170876898776406' snappedPoints[1].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: Assert.AreEqual(60.170876898776406' snappedPoints[1].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: Assert.AreEqual(24.942699912064771' snappedPoints[1].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: Assert.AreEqual(24.942699912064771' snappedPoints[1].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: Assert.AreEqual(2' snappedPoints[2].OriginalIndex);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: Assert.AreEqual(2' snappedPoints[2].OriginalIndex);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: Assert.AreEqual(60.170874902634374' snappedPoints[2].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: Assert.AreEqual(60.170874902634374' snappedPoints[2].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: Assert.AreEqual(60.170874902634374' snappedPoints[2].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: Assert.AreEqual(24.942700088491474' snappedPoints[2].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: Assert.AreEqual(24.942700088491474' snappedPoints[2].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsTest,The following statement contains a magic number: Assert.AreEqual(24.942700088491474' snappedPoints[2].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: var request = new NearestRoadsRequest              {                  Key = this.ApiKey'                  Points = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: var request = new NearestRoadsRequest              {                  Key = this.ApiKey'                  Points = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: var request = new NearestRoadsRequest              {                  Key = this.ApiKey'                  Points = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: var request = new NearestRoadsRequest              {                  Key = this.ApiKey'                  Points = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: var request = new NearestRoadsRequest              {                  Key = this.ApiKey'                  Points = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: var request = new NearestRoadsRequest              {                  Key = this.ApiKey'                  Points = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(3' snappedPoints.Length);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(60.170877918672588' snappedPoints[0].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(60.170877918672588' snappedPoints[0].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(24.942699821922421' snappedPoints[0].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(24.942699821922421' snappedPoints[0].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(60.170876898776406' snappedPoints[1].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(60.170876898776406' snappedPoints[1].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(24.942699912064771' snappedPoints[1].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(24.942699912064771' snappedPoints[1].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(2' snappedPoints[2].OriginalIndex);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(2' snappedPoints[2].OriginalIndex);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(60.170874902634374' snappedPoints[2].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(60.170874902634374' snappedPoints[2].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(60.170874902634374' snappedPoints[2].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(24.942700088491474' snappedPoints[2].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(24.942700088491474' snappedPoints[2].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(24.942700088491474' snappedPoints[2].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenInvalidKeyTest,The following statement contains a magic number: var request = new NearestRoadsRequest              {                  Key = "test"'                  Points = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenInvalidKeyTest,The following statement contains a magic number: var request = new NearestRoadsRequest              {                  Key = "test"'                  Points = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenInvalidKeyTest,The following statement contains a magic number: var request = new NearestRoadsRequest              {                  Key = "test"'                  Points = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenInvalidKeyTest,The following statement contains a magic number: var request = new NearestRoadsRequest              {                  Key = "test"'                  Points = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenInvalidKeyTest,The following statement contains a magic number: var request = new NearestRoadsRequest              {                  Key = "test"'                  Points = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.NearestRoads,NearestRoadsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\NearestRoads\NearestRoadsTests.cs,NearestRoadsWhenInvalidKeyTest,The following statement contains a magic number: var request = new NearestRoadsRequest              {                  Key = "test"'                  Points = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: var request = new SnapToRoadsRequest              {                  Key = this.ApiKey'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: var request = new SnapToRoadsRequest              {                  Key = this.ApiKey'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: var request = new SnapToRoadsRequest              {                  Key = this.ApiKey'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: var request = new SnapToRoadsRequest              {                  Key = this.ApiKey'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: var request = new SnapToRoadsRequest              {                  Key = this.ApiKey'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: var request = new SnapToRoadsRequest              {                  Key = this.ApiKey'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: Assert.AreEqual(3' snappedPoints.Length);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: Assert.AreEqual(60.170877918672588' snappedPoints[0].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: Assert.AreEqual(60.170877918672588' snappedPoints[0].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: Assert.AreEqual(24.942699821922421' snappedPoints[0].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: Assert.AreEqual(24.942699821922421' snappedPoints[0].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: Assert.AreEqual(60.170876898776406' snappedPoints[1].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: Assert.AreEqual(60.170876898776406' snappedPoints[1].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: Assert.AreEqual(24.942699912064771' snappedPoints[1].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: Assert.AreEqual(24.942699912064771' snappedPoints[1].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: Assert.AreEqual(2' snappedPoints[2].OriginalIndex);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: Assert.AreEqual(2' snappedPoints[2].OriginalIndex);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: Assert.AreEqual(60.170874902634374' snappedPoints[2].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: Assert.AreEqual(60.170874902634374' snappedPoints[2].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: Assert.AreEqual(60.170874902634374' snappedPoints[2].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: Assert.AreEqual(24.942700088491474' snappedPoints[2].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: Assert.AreEqual(24.942700088491474' snappedPoints[2].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadTest,The following statement contains a magic number: Assert.AreEqual(24.942700088491474' snappedPoints[2].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: var request = new SnapToRoadsRequest              {                  Key = this.ApiKey'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: var request = new SnapToRoadsRequest              {                  Key = this.ApiKey'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: var request = new SnapToRoadsRequest              {                  Key = this.ApiKey'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: var request = new SnapToRoadsRequest              {                  Key = this.ApiKey'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: var request = new SnapToRoadsRequest              {                  Key = this.ApiKey'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: var request = new SnapToRoadsRequest              {                  Key = this.ApiKey'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(3' snappedPoints.Length);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(60.170877918672588' snappedPoints[0].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(60.170877918672588' snappedPoints[0].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(24.942699821922421' snappedPoints[0].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(24.942699821922421' snappedPoints[0].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(60.170876898776406' snappedPoints[1].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(60.170876898776406' snappedPoints[1].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(24.942699912064771' snappedPoints[1].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(24.942699912064771' snappedPoints[1].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(2' snappedPoints[2].OriginalIndex);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(2' snappedPoints[2].OriginalIndex);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(60.170874902634374' snappedPoints[2].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(60.170874902634374' snappedPoints[2].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(60.170874902634374' snappedPoints[2].Location.Latitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(24.942700088491474' snappedPoints[2].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(24.942700088491474' snappedPoints[2].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(24.942700088491474' snappedPoints[2].Location.Longitude' 0.0001);
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenInvalidKeyTest,The following statement contains a magic number: var request = new SnapToRoadsRequest              {                  Key = "test"'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenInvalidKeyTest,The following statement contains a magic number: var request = new SnapToRoadsRequest              {                  Key = "test"'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenInvalidKeyTest,The following statement contains a magic number: var request = new SnapToRoadsRequest              {                  Key = "test"'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenInvalidKeyTest,The following statement contains a magic number: var request = new SnapToRoadsRequest              {                  Key = "test"'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenInvalidKeyTest,The following statement contains a magic number: var request = new SnapToRoadsRequest              {                  Key = "test"'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SnapToRoad,SnapToRoadTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SnapToRoad\SnapToRoadTests.cs,SnapToRoadWhenInvalidKeyTest,The following statement contains a magic number: var request = new SnapToRoadsRequest              {                  Key = "test"'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SpeedLimits,SpeedLimitsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SpeedLimits\SpeedLimitsTests.cs,SpeedLimitsTest,The following statement contains a magic number: var request = new SpeedLimitsRequest              {                  Key = this.ApiKey'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SpeedLimits,SpeedLimitsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SpeedLimits\SpeedLimitsTests.cs,SpeedLimitsTest,The following statement contains a magic number: var request = new SpeedLimitsRequest              {                  Key = this.ApiKey'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SpeedLimits,SpeedLimitsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SpeedLimits\SpeedLimitsTests.cs,SpeedLimitsTest,The following statement contains a magic number: var request = new SpeedLimitsRequest              {                  Key = this.ApiKey'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SpeedLimits,SpeedLimitsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SpeedLimits\SpeedLimitsTests.cs,SpeedLimitsTest,The following statement contains a magic number: var request = new SpeedLimitsRequest              {                  Key = this.ApiKey'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SpeedLimits,SpeedLimitsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SpeedLimits\SpeedLimitsTests.cs,SpeedLimitsTest,The following statement contains a magic number: var request = new SpeedLimitsRequest              {                  Key = this.ApiKey'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SpeedLimits,SpeedLimitsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SpeedLimits\SpeedLimitsTests.cs,SpeedLimitsTest,The following statement contains a magic number: var request = new SpeedLimitsRequest              {                  Key = this.ApiKey'                  Path = new[]                  {                      new Location(60.170880' 24.942795)'                      new Location(60.170879' 24.942796)'                      new Location(60.170877' 24.942796)                  }              };
Magic Number,GoogleApi.Test.Maps.Roads.SpeedLimits,SpeedLimitsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SpeedLimits\SpeedLimitsTests.cs,SpeedLimitsWhenInvalidKeyTest,The following statement contains a magic number: var request = new SpeedLimitsRequest  	        {  	            Key = "test"'  	            Path = new[]  	            {  	                new Location(60.170880' 24.942795)'  	                new Location(60.170879' 24.942796)'  	                new Location(60.170877' 24.942796)  	            }  	        };
Magic Number,GoogleApi.Test.Maps.Roads.SpeedLimits,SpeedLimitsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SpeedLimits\SpeedLimitsTests.cs,SpeedLimitsWhenInvalidKeyTest,The following statement contains a magic number: var request = new SpeedLimitsRequest  	        {  	            Key = "test"'  	            Path = new[]  	            {  	                new Location(60.170880' 24.942795)'  	                new Location(60.170879' 24.942796)'  	                new Location(60.170877' 24.942796)  	            }  	        };
Magic Number,GoogleApi.Test.Maps.Roads.SpeedLimits,SpeedLimitsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SpeedLimits\SpeedLimitsTests.cs,SpeedLimitsWhenInvalidKeyTest,The following statement contains a magic number: var request = new SpeedLimitsRequest  	        {  	            Key = "test"'  	            Path = new[]  	            {  	                new Location(60.170880' 24.942795)'  	                new Location(60.170879' 24.942796)'  	                new Location(60.170877' 24.942796)  	            }  	        };
Magic Number,GoogleApi.Test.Maps.Roads.SpeedLimits,SpeedLimitsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SpeedLimits\SpeedLimitsTests.cs,SpeedLimitsWhenInvalidKeyTest,The following statement contains a magic number: var request = new SpeedLimitsRequest  	        {  	            Key = "test"'  	            Path = new[]  	            {  	                new Location(60.170880' 24.942795)'  	                new Location(60.170879' 24.942796)'  	                new Location(60.170877' 24.942796)  	            }  	        };
Magic Number,GoogleApi.Test.Maps.Roads.SpeedLimits,SpeedLimitsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SpeedLimits\SpeedLimitsTests.cs,SpeedLimitsWhenInvalidKeyTest,The following statement contains a magic number: var request = new SpeedLimitsRequest  	        {  	            Key = "test"'  	            Path = new[]  	            {  	                new Location(60.170880' 24.942795)'  	                new Location(60.170879' 24.942796)'  	                new Location(60.170877' 24.942796)  	            }  	        };
Magic Number,GoogleApi.Test.Maps.Roads.SpeedLimits,SpeedLimitsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SpeedLimits\SpeedLimitsTests.cs,SpeedLimitsWhenInvalidKeyTest,The following statement contains a magic number: var request = new SpeedLimitsRequest  	        {  	            Key = "test"'  	            Path = new[]  	            {  	                new Location(60.170880' 24.942795)'  	                new Location(60.170879' 24.942796)'  	                new Location(60.170877' 24.942796)  	            }  	        };
Magic Number,GoogleApi.Test.Maps.Roads.SpeedLimits,SpeedLimitsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\Roads\SpeedLimits\SpeedLimitsTests.cs,SpeedLimitsWhenPlaceIdsCountIsGreaterThanAllowedTest,The following statement contains a magic number: var request = new SpeedLimitsRequest              {                  Key = this.ApiKey'                  PlaceIds = new string[101]              };
Magic Number,GoogleApi.Test.Maps.StaticMaps,StaticMapsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StaticMaps\StaticMapsTests.cs,StaticMapsTest,The following statement contains a magic number: var request = new StaticMapsRequest              {                  Key = this.ApiKey'                  Center = new Location(60.170877' 24.942796)'                  ZoomLevel = 1              };
Magic Number,GoogleApi.Test.Maps.StaticMaps,StaticMapsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StaticMaps\StaticMapsTests.cs,StaticMapsTest,The following statement contains a magic number: var request = new StaticMapsRequest              {                  Key = this.ApiKey'                  Center = new Location(60.170877' 24.942796)'                  ZoomLevel = 1              };
Magic Number,GoogleApi.Test.Maps.StaticMaps,StaticMapsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StaticMaps\StaticMapsTests.cs,StaticMapsWhenAsyncTest,The following statement contains a magic number: var request = new StaticMapsRequest              {                  Key = this.ApiKey'                  Center = new Location(60.170877' 24.942796)'                  ZoomLevel = 1              };
Magic Number,GoogleApi.Test.Maps.StaticMaps,StaticMapsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StaticMaps\StaticMapsTests.cs,StaticMapsWhenAsyncTest,The following statement contains a magic number: var request = new StaticMapsRequest              {                  Key = this.ApiKey'                  Center = new Location(60.170877' 24.942796)'                  ZoomLevel = 1              };
Magic Number,GoogleApi.Test.Maps.StaticMaps,StaticMapsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StaticMaps\StaticMapsTests.cs,StaticMapsWhenAsyncAndCancelledTest,The following statement contains a magic number: var request = new StaticMapsRequest              {                  Key = this.ApiKey'                  Center = new Location(60.170877' 24.942796)'                  ZoomLevel = 1              };
Magic Number,GoogleApi.Test.Maps.StaticMaps,StaticMapsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StaticMaps\StaticMapsTests.cs,StaticMapsWhenAsyncAndCancelledTest,The following statement contains a magic number: var request = new StaticMapsRequest              {                  Key = this.ApiKey'                  Center = new Location(60.170877' 24.942796)'                  ZoomLevel = 1              };
Magic Number,GoogleApi.Test.Maps.StaticMaps,StaticMapsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StaticMaps\StaticMapsTests.cs,StaticMapsWhenInvalidKeyTest,The following statement contains a magic number: var request = new StaticMapsRequest              {                  Key = "test"'                  Center = new Location(60.170877' 24.942796)'                  ZoomLevel = 1              };
Magic Number,GoogleApi.Test.Maps.StaticMaps,StaticMapsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StaticMaps\StaticMapsTests.cs,StaticMapsWhenInvalidKeyTest,The following statement contains a magic number: var request = new StaticMapsRequest              {                  Key = "test"'                  Center = new Location(60.170877' 24.942796)'                  ZoomLevel = 1              };
Magic Number,GoogleApi.Test.Maps.StaticMaps,StaticMapsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StaticMaps\StaticMapsTests.cs,StaticMapsWhenKeyIsNullTest,The following statement contains a magic number: var request = new StaticMapsRequest              {                  Key = null'                  Center = new Location(60.170877' 24.942796)'                  ZoomLevel = 1              };
Magic Number,GoogleApi.Test.Maps.StaticMaps,StaticMapsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StaticMaps\StaticMapsTests.cs,StaticMapsWhenKeyIsNullTest,The following statement contains a magic number: var request = new StaticMapsRequest              {                  Key = null'                  Center = new Location(60.170877' 24.942796)'                  ZoomLevel = 1              };
Magic Number,GoogleApi.Test.Maps.StaticMaps,StaticMapsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StaticMaps\StaticMapsTests.cs,StaticMapsWhenKeyIsStringEmptyTest,The following statement contains a magic number: var request = new StaticMapsRequest              {                  Key = string.Empty'                  Center = new Location(60.170877' 24.942796)'                  ZoomLevel = 1              };
Magic Number,GoogleApi.Test.Maps.StaticMaps,StaticMapsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StaticMaps\StaticMapsTests.cs,StaticMapsWhenKeyIsStringEmptyTest,The following statement contains a magic number: var request = new StaticMapsRequest              {                  Key = string.Empty'                  Center = new Location(60.170877' 24.942796)'                  ZoomLevel = 1              };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = this.ApiKey'                  Location = new Location(60.170877' 24.942796)              };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = this.ApiKey'                  Location = new Location(60.170877' 24.942796)              };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewWhenAsyncTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = this.ApiKey'                  Location = new Location(60.170877' 24.942796)                };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewWhenAsyncTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = this.ApiKey'                  Location = new Location(60.170877' 24.942796)                };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewWhenAsyncAndCancelledTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = this.ApiKey'                  Location = new Location(60.170877' 24.942796)              };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewWhenAsyncAndCancelledTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = this.ApiKey'                  Location = new Location(60.170877' 24.942796)              };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewWhenInvalidKeyTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = "test"'                  Location = new Location(60.170877' 24.942796)              };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewWhenInvalidKeyTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = "test"'                  Location = new Location(60.170877' 24.942796)              };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewWhenKeyIsNullTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = null'                  Location = new Location(60.170877' 24.942796)              };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewWhenKeyIsNullTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = null'                  Location = new Location(60.170877' 24.942796)              };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewWhenKeyIsStringEmptyTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = string.Empty'                  Location = new Location(60.170877' 24.942796)              };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewWhenKeyIsStringEmptyTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = string.Empty'                  Location = new Location(60.170877' 24.942796)              };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewWhenPitchTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = this.ApiKey'                  Location = new Location(60.170877' 24.942796)'                  Pitch = 80              };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewWhenPitchTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = this.ApiKey'                  Location = new Location(60.170877' 24.942796)'                  Pitch = 80              };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewWhenPitchTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = this.ApiKey'                  Location = new Location(60.170877' 24.942796)'                  Pitch = 80              };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewWhenHeadingTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = this.ApiKey'                  Location = new Location(60.170877' 24.942796)'                  Heading = 80              };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewWhenHeadingTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = this.ApiKey'                  Location = new Location(60.170877' 24.942796)'                  Heading = 80              };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewWhenHeadingTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = this.ApiKey'                  Location = new Location(60.170877' 24.942796)'                  Heading = 80              };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewWhenFieldOfViewTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = this.ApiKey'                  Location = new Location(60.170877' 24.942796)'                  FieldOfView = 50              };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewWhenFieldOfViewTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = this.ApiKey'                  Location = new Location(60.170877' 24.942796)'                  FieldOfView = 50              };
Magic Number,GoogleApi.Test.Maps.StreetView,StreetViewTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\StreetView\StreetViewTests.cs,StreetViewWhenFieldOfViewTest,The following statement contains a magic number: var request = new StreetViewRequest              {                  Key = this.ApiKey'                  Location = new Location(60.170877' 24.942796)'                  FieldOfView = 50              };
Magic Number,GoogleApi.Test.Maps.TimeZone,TimeZoneTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\TimeZone\TimeZoneTests.cs,TimeZoneTest,The following statement contains a magic number: var location = new Location(40.7141289' -73.9614074);
Magic Number,GoogleApi.Test.Maps.TimeZone,TimeZoneTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\TimeZone\TimeZoneTests.cs,TimeZoneTest,The following statement contains a magic number: var location = new Location(40.7141289' -73.9614074);
Magic Number,GoogleApi.Test.Maps.TimeZone,TimeZoneTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\TimeZone\TimeZoneTests.cs,TimeZoneWhenAsyncTest,The following statement contains a magic number: var location = new Location(40.7141289' -73.9614074);
Magic Number,GoogleApi.Test.Maps.TimeZone,TimeZoneTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\TimeZone\TimeZoneTests.cs,TimeZoneWhenAsyncTest,The following statement contains a magic number: var location = new Location(40.7141289' -73.9614074);
Magic Number,GoogleApi.Test.Maps.TimeZone,TimeZoneTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\TimeZone\TimeZoneTests.cs,TimeZoneWhenAsyncAndCancelledTest,The following statement contains a magic number: var location = new Location(40.7141289' -73.9614074);
Magic Number,GoogleApi.Test.Maps.TimeZone,TimeZoneTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\TimeZone\TimeZoneTests.cs,TimeZoneWhenAsyncAndCancelledTest,The following statement contains a magic number: var location = new Location(40.7141289' -73.9614074);
Magic Number,GoogleApi.Test.Maps.TimeZone,TimeZoneTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\TimeZone\TimeZoneTests.cs,TimeZoneWhenLanguageTest,The following statement contains a magic number: var location = new Location(40.7141289' -73.9614074);
Magic Number,GoogleApi.Test.Maps.TimeZone,TimeZoneTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\TimeZone\TimeZoneTests.cs,TimeZoneWhenLanguageTest,The following statement contains a magic number: var location = new Location(40.7141289' -73.9614074);
Magic Number,GoogleApi.Test.Maps.TimeZone,TimeZoneTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\TimeZone\TimeZoneTests.cs,TimeZoneWhenTimeStampTest,The following statement contains a magic number: var location = new Location(40.7141289' -73.9614074);
Magic Number,GoogleApi.Test.Maps.TimeZone,TimeZoneTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\TimeZone\TimeZoneTests.cs,TimeZoneWhenTimeStampTest,The following statement contains a magic number: var location = new Location(40.7141289' -73.9614074);
Magic Number,GoogleApi.Test.Maps.TimeZone,TimeZoneTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Maps\TimeZone\TimeZoneTests.cs,TimeZoneWhenTimeStampTest,The following statement contains a magic number: var request = new TimeZoneRequest              {                  Key = this.ApiKey'                  Location = location'                  TimeStamp = DateTime.Now.AddMonths(6)              };
Magic Number,GoogleApi.Test.Places.AutoComplete,AutoCompleteTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\AutoComplete\AutoCompleteTests.cs,PlacesAutoCompleteTest,The following statement contains a magic number: Assert.AreEqual(3' matchedSubstrings.Length);
Magic Number,GoogleApi.Test.Places.AutoComplete,AutoCompleteTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\AutoComplete\AutoCompleteTests.cs,PlacesAutoCompleteWhenLanguageTest,The following statement contains a magic number: Assert.GreaterOrEqual(results.Length' 2);
Magic Number,GoogleApi.Test.Places.AutoComplete,AutoCompleteTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\AutoComplete\AutoCompleteTests.cs,PlacesAutoCompleteWhenRadiusIsGereaterThanFiftyThousandTest,The following statement contains a magic number: var request = new PlacesAutoCompleteRequest              {                  Key = this.ApiKey'                  Input = "abc"'                  Radius = 50001              };
Magic Number,GoogleApi.Test.Places.Details,DetailsTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Details\DetailsTests.cs,PlacesDetailsTest,The following statement contains a magic number: Assert.AreEqual(4' addressComponents.Length);
Magic Number,GoogleApi.Test.Places.Photos,PhotosTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Photos\PhotosTests.cs,PlacesPhotosTest,The following statement contains a magic number: var response3 = GooglePlaces.Photos.Query(new PlacesPhotosRequest              {                  Key = this.ApiKey'                  PhotoReference = response2.Result.Photos.Select(x => x.PhotoReference).FirstOrDefault()'                  MaxWidth = 1600              });
Magic Number,GoogleApi.Test.Places.Photos,PhotosTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Photos\PhotosTests.cs,PlacesPhotosTest,The following statement contains a magic number: Assert.GreaterOrEqual(response3.Stream.Length' 1000);
Magic Number,GoogleApi.Test.Places.Photos,PhotosTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Photos\PhotosTests.cs,PlacesPhotosAsyncTest,The following statement contains a magic number: var response3 = GooglePlaces.Photos.QueryAsync(new PlacesPhotosRequest              {                  Key = this.ApiKey'                  PhotoReference = response2.Result.Photos.Select(x => x.PhotoReference).FirstOrDefault()'                  MaxWidth = 1600              }).Result;
Magic Number,GoogleApi.Test.Places.Photos,PhotosTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Photos\PhotosTests.cs,PlacesPhotosWhenAsyncAndCancelledTest,The following statement contains a magic number: var request = new PlacesPhotosRequest              {                  Key = this.ApiKey'                  PhotoReference = Guid.NewGuid().ToString("N")'                  MaxWidth = 1600              };
Magic Number,GoogleApi.Test.Places.Photos,PhotosTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Photos\PhotosTests.cs,PlacesPhotosWhenInvalidKeyTest,The following statement contains a magic number: var request = new PlacesPhotosRequest              {                  Key = "test"'                  PhotoReference = "abc"'                  MaxWidth = 1600              };
Magic Number,GoogleApi.Test.Places.Photos,PhotosTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Photos\PhotosTests.cs,PlacesPhotosWhenKeyIsNullTest,The following statement contains a magic number: var request = new PlacesPhotosRequest              {                  Key = null'                  PhotoReference = "test"'                  MaxHeight = 10              };
Magic Number,GoogleApi.Test.Places.Photos,PhotosTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Photos\PhotosTests.cs,PlacesPhotosWhenKeyIsStringEmptyTest,The following statement contains a magic number: var request = new PlacesPhotosRequest              {                  Key = string.Empty'                  PhotoReference = "test"'                  MaxHeight = 10              };
Magic Number,GoogleApi.Test.Places.Photos,PhotosTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Photos\PhotosTests.cs,PlacesPhotosWhenMaxHeightIsGreaterThanSexteenHundredthsTest,The following statement contains a magic number: var request = new PlacesPhotosRequest              {                  Key = this.ApiKey'                  PhotoReference = "abc"'                  MaxHeight = 1601              };
Magic Number,GoogleApi.Test.Places.Photos,PhotosTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Photos\PhotosTests.cs,PlacesPhotosWhenMaxWidthIsGreaterThanSexteenHundredthsTest,The following statement contains a magic number: var request = new PlacesPhotosRequest              {                  Key = this.ApiKey'                  PhotoReference = "abc"'                  MaxWidth = 1601              };
Magic Number,GoogleApi.Test.Places.QueryAutoComplete,QueryAutoCompleteTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\QueryAutoComplete\QueryAutoCompleteTests.cs,PlacesQueryAutoCompleteTest,The following statement contains a magic number: Assert.AreEqual(3' results.Length);
Magic Number,GoogleApi.Test.Places.QueryAutoComplete,QueryAutoCompleteTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\QueryAutoComplete\QueryAutoCompleteTests.cs,PlacesQueryAutoCompleteTest,The following statement contains a magic number: Assert.AreEqual(3' matchedSubstrings.Length);
Magic Number,GoogleApi.Test.Places.QueryAutoComplete,QueryAutoCompleteTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\QueryAutoComplete\QueryAutoCompleteTests.cs,PlacesQueryAutoCompleteWhenLanguageTest,The following statement contains a magic number: Assert.GreaterOrEqual(results.Length' 3);
Magic Number,GoogleApi.Test.Places.QueryAutoComplete,QueryAutoCompleteTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\QueryAutoComplete\QueryAutoCompleteTests.cs,PlacesQueryAutoCompleteWhenRadiusIsGereaterThanFiftyThousandTest,The following statement contains a magic number: var request = new PlacesQueryAutoCompleteRequest              {                  Key = this.ApiKey'                  Input = "abc"'                  Radius = 50001              };
Magic Number,GoogleApi.Test.Places.Search.Find,FindSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\Find\FindSearchTests.cs,PlacesFindSearchWhenLocationTest,The following statement contains a magic number: var request = new PlacesFindSearchRequest              {                  Key = this.ApiKey'                  Input = "picadelly circus"'                  Location = new Location(51.5100913' -0.1345676)              };
Magic Number,GoogleApi.Test.Places.Search.Find,FindSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\Find\FindSearchTests.cs,PlacesFindSearchWhenLocationTest,The following statement contains a magic number: var request = new PlacesFindSearchRequest              {                  Key = this.ApiKey'                  Input = "picadelly circus"'                  Location = new Location(51.5100913' -0.1345676)              };
Magic Number,GoogleApi.Test.Places.Search.Find,FindSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\Find\FindSearchTests.cs,PlacesFindSearchWhenLocationAndRadiusTest,The following statement contains a magic number: var request = new PlacesFindSearchRequest              {                  Key = this.ApiKey'                  Input = "picadelly circus"'                  Location = new Location(51.5100913' -0.1345676)'                  Radius = 5000              };
Magic Number,GoogleApi.Test.Places.Search.Find,FindSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\Find\FindSearchTests.cs,PlacesFindSearchWhenLocationAndRadiusTest,The following statement contains a magic number: var request = new PlacesFindSearchRequest              {                  Key = this.ApiKey'                  Input = "picadelly circus"'                  Location = new Location(51.5100913' -0.1345676)'                  Radius = 5000              };
Magic Number,GoogleApi.Test.Places.Search.Find,FindSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\Find\FindSearchTests.cs,PlacesFindSearchWhenLocationAndRadiusTest,The following statement contains a magic number: var request = new PlacesFindSearchRequest              {                  Key = this.ApiKey'                  Input = "picadelly circus"'                  Location = new Location(51.5100913' -0.1345676)'                  Radius = 5000              };
Magic Number,GoogleApi.Test.Places.Search.Find,FindSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\Find\FindSearchTests.cs,PlacesFindSearchWhenBoundsTest,The following statement contains a magic number: var request = new PlacesFindSearchRequest              {                  Key = this.ApiKey'                  Input = "new york"'                  Bounds = new ViewPort                  {                      NorthEast = new Location(51.5100913' -0.1345676)'                      SouthWest = new Location(50.5100913' -0.0345676)                  }              };
Magic Number,GoogleApi.Test.Places.Search.Find,FindSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\Find\FindSearchTests.cs,PlacesFindSearchWhenBoundsTest,The following statement contains a magic number: var request = new PlacesFindSearchRequest              {                  Key = this.ApiKey'                  Input = "new york"'                  Bounds = new ViewPort                  {                      NorthEast = new Location(51.5100913' -0.1345676)'                      SouthWest = new Location(50.5100913' -0.0345676)                  }              };
Magic Number,GoogleApi.Test.Places.Search.Find,FindSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\Find\FindSearchTests.cs,PlacesFindSearchWhenBoundsTest,The following statement contains a magic number: var request = new PlacesFindSearchRequest              {                  Key = this.ApiKey'                  Input = "new york"'                  Bounds = new ViewPort                  {                      NorthEast = new Location(51.5100913' -0.1345676)'                      SouthWest = new Location(50.5100913' -0.0345676)                  }              };
Magic Number,GoogleApi.Test.Places.Search.Find,FindSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\Find\FindSearchTests.cs,PlacesFindSearchWhenBoundsTest,The following statement contains a magic number: var request = new PlacesFindSearchRequest              {                  Key = this.ApiKey'                  Input = "new york"'                  Bounds = new ViewPort                  {                      NorthEast = new Location(51.5100913' -0.1345676)'                      SouthWest = new Location(50.5100913' -0.0345676)                  }              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = this.ApiKey'                  Location = new Location(51.491431' -3.16668)'                  Radius = 1000'                  Type = SearchPlaceType.School              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = this.ApiKey'                  Location = new Location(51.491431' -3.16668)'                  Radius = 1000'                  Type = SearchPlaceType.School              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = this.ApiKey'                  Location = new Location(51.491431' -3.16668)'                  Radius = 1000'                  Type = SearchPlaceType.School              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchTest,The following statement contains a magic number: Assert.GreaterOrEqual(response.Results.Count()' 5);
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenAsyncTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = this.ApiKey'                  Location = new Location(51.491431' -3.16668)'                  Radius = 500'                  Type = SearchPlaceType.School              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenAsyncTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = this.ApiKey'                  Location = new Location(51.491431' -3.16668)'                  Radius = 500'                  Type = SearchPlaceType.School              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenAsyncTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = this.ApiKey'                  Location = new Location(51.491431' -3.16668)'                  Radius = 500'                  Type = SearchPlaceType.School              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenAsyncAndCancelledTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = this.ApiKey'                  Location = new Location(51.491431' -3.16668)'                  Radius = 500'                  Type = SearchPlaceType.School              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenAsyncAndCancelledTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = this.ApiKey'                  Location = new Location(51.491431' -3.16668)'                  Radius = 500'                  Type = SearchPlaceType.School              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenAsyncAndCancelledTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = this.ApiKey'                  Location = new Location(51.491431' -3.16668)'                  Radius = 500'                  Type = SearchPlaceType.School              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenInvalidKeyTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = "test"'                  Location = new Location(51.491431' -3.16668)'                  Radius = 500'                  Type = SearchPlaceType.School              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenInvalidKeyTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = "test"'                  Location = new Location(51.491431' -3.16668)'                  Radius = 500'                  Type = SearchPlaceType.School              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenInvalidKeyTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = "test"'                  Location = new Location(51.491431' -3.16668)'                  Radius = 500'                  Type = SearchPlaceType.School              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenKeyIsNullTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = null'                  Location = new Location(0' 0)'                  Radius = 10              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenKeyIsStringEmptyTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = string.Empty'                  Location = new Location(0' 0)'                  Radius = 10              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenRadiusIsLessThanOneTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = this.ApiKey'                  Location = new Location(51.491431' -3.16668)'                  Radius = 0              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenRadiusIsLessThanOneTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = this.ApiKey'                  Location = new Location(51.491431' -3.16668)'                  Radius = 0              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenRadiusIsGereaterThanFiftyThousandTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = this.ApiKey'                  Location = new Location(51.491431' -3.16668)'                  Radius = 50001              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenRadiusIsGereaterThanFiftyThousandTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = this.ApiKey'                  Location = new Location(51.491431' -3.16668)'                  Radius = 50001              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenRadiusIsGereaterThanFiftyThousandTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = this.ApiKey'                  Location = new Location(51.491431' -3.16668)'                  Radius = 50001              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenRankByDistanceAndRadiusIsNotNullTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = this.ApiKey'                  Location = new Location(51.491431' -3.16668)'                  Radius = 5001'                  Rankby = Ranking.Distance              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenRankByDistanceAndRadiusIsNotNullTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = this.ApiKey'                  Location = new Location(51.491431' -3.16668)'                  Radius = 5001'                  Rankby = Ranking.Distance              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenRankByDistanceAndRadiusIsNotNullTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = this.ApiKey'                  Location = new Location(51.491431' -3.16668)'                  Radius = 5001'                  Rankby = Ranking.Distance              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenRankByDistanceAndNameIsNullAndKeywordIsNullAndTypeIsNullTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = this.ApiKey'                  Location = new Location(51.491431' -3.16668)'                  Rankby = Ranking.Distance              };
Magic Number,GoogleApi.Test.Places.Search.NearBy,NearBySearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\NearBy\NearBySearchTests.cs,PlacesNearBySearchWhenRankByDistanceAndNameIsNullAndKeywordIsNullAndTypeIsNullTest,The following statement contains a magic number: var request = new PlacesNearBySearchRequest              {                  Key = this.ApiKey'                  Location = new Location(51.491431' -3.16668)'                  Rankby = Ranking.Distance              };
Magic Number,GoogleApi.Test.Places.Search.Text,TextSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\Text\TextSearchTests.cs,PlacesTextSearchTest,The following statement contains a magic number: Assert.AreEqual(51.5100913' result.Geometry.Location.Latitude' 0.01);
Magic Number,GoogleApi.Test.Places.Search.Text,TextSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\Text\TextSearchTests.cs,PlacesTextSearchTest,The following statement contains a magic number: Assert.AreEqual(51.5100913' result.Geometry.Location.Latitude' 0.01);
Magic Number,GoogleApi.Test.Places.Search.Text,TextSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\Text\TextSearchTests.cs,PlacesTextSearchTest,The following statement contains a magic number: Assert.AreEqual(-0.1345676' result.Geometry.Location.Longitude' 0.01);
Magic Number,GoogleApi.Test.Places.Search.Text,TextSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\Text\TextSearchTests.cs,PlacesTextSearchTest,The following statement contains a magic number: Assert.AreEqual(-0.1345676' result.Geometry.Location.Longitude' 0.01);
Magic Number,GoogleApi.Test.Places.Search.Text,TextSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\Text\TextSearchTests.cs,PlacesTextSearchWhenLocationAndRadiusTest,The following statement contains a magic number: var request = new PlacesTextSearchRequest              {                  Key = this.ApiKey'                  Query = "picadelly circus"'                  Location = new Location(51.5100913' -0.1345676)'                  Radius = 5000              };
Magic Number,GoogleApi.Test.Places.Search.Text,TextSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\Text\TextSearchTests.cs,PlacesTextSearchWhenLocationAndRadiusTest,The following statement contains a magic number: var request = new PlacesTextSearchRequest              {                  Key = this.ApiKey'                  Query = "picadelly circus"'                  Location = new Location(51.5100913' -0.1345676)'                  Radius = 5000              };
Magic Number,GoogleApi.Test.Places.Search.Text,TextSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Places\Search\Text\TextSearchTests.cs,PlacesTextSearchWhenLocationAndRadiusTest,The following statement contains a magic number: var request = new PlacesTextSearchRequest              {                  Key = this.ApiKey'                  Query = "picadelly circus"'                  Location = new Location(51.5100913' -0.1345676)'                  Radius = 5000              };
Magic Number,GoogleApi.Test.Search.Video.Videos,VideoSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Video\Videos\VideoSearchTests.cs,VideoSearchTest,The following statement contains a magic number: Assert.AreEqual(response.PageInfo.TotalResults' 1000000);
Magic Number,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchTest,The following statement contains a magic number: Assert.LessOrEqual(response.Search.SearchTime' 3.00);
Magic Number,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchTest,The following statement contains a magic number: Assert.Greater(response.Search.TotalResults' 800000000);
Magic Number,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchTest,The following statement contains a magic number: Assert.Greater(query.TotalResults' 800000000);
Magic Number,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchTest,The following statement contains a magic number: Assert.AreEqual(10' query.Count);
Magic Number,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchTest,The following statement contains a magic number: Assert.Greater(nextPage.TotalResults' 800000000);
Magic Number,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchTest,The following statement contains a magic number: Assert.AreEqual(10' nextPage.Count);
Magic Number,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchTest,The following statement contains a magic number: Assert.AreEqual(11' nextPage.StartIndex);
Magic Number,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchWhenDateRestrictTest,The following statement contains a magic number: var request = new WebSearchRequest              {                  Key = this.ApiKey'                  SearchEngineId = this.SearchEngineId'                  Query = "google"'                  Options =                  {                      DateRestrict = new DateRestrict                      {                          Type = DateRestrictType.Days'                          Number = 3                      }                  }              };
Magic Number,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchWhenDateRestrictTest,The following statement contains a magic number: Assert.AreEqual(3' query.DateRestrict.Number);
Magic Number,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchWhenFileTypesTest,The following statement contains a magic number: Assert.AreEqual(2' fileTypes.Length);
Magic Number,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchWhenNumberTest,The following statement contains a magic number: var request = new WebSearchRequest              {                  Key = this.ApiKey'                  SearchEngineId = this.SearchEngineId'                  Query = "google"'                  Options =                  {                      Number = 6                  }              };
Magic Number,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchWhenNumberTest,The following statement contains a magic number: Assert.AreEqual(6' query.Count);
Magic Number,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchWhenSortExpressionTest,The following statement contains a magic number: var request = new WebSearchRequest              {                  Key = this.ApiKey'                  SearchEngineId = this.SearchEngineId'                  Query = "google"'                  Options =                  {                      SortExpression = new SortExpression                      {                          By = SortBy.Date'                          Order = SortOrder.Descending'                          DefaultValue = 2                      }                  }              };
Magic Number,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchWhenSortExpressionTest,The following statement contains a magic number: Assert.AreEqual(2' sort.DefaultValue);
Magic Number,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchWhenStartIndexTest,The following statement contains a magic number: var request = new WebSearchRequest              {                  Key = this.ApiKey'                  SearchEngineId = this.SearchEngineId'                  Query = "google"'                  Options =                  {                      StartIndex = 11                  }              };
Magic Number,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchWhenStartIndexTest,The following statement contains a magic number: Assert.AreEqual(11' query.StartIndex);
Magic Number,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchWhenStartIndexTest,The following statement contains a magic number: Assert.AreEqual(21' nextPage.StartIndex);
Magic Number,GoogleApi.Test.Search.Web,WebSearchTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Search\Web\WebSearchTests.cs,WebSearchWhenNumberIsGreaterThanTenTest,The following statement contains a magic number: var request = new WebSearchRequest              {                  Key = this.ApiKey'                  Query = "google"'                  SearchEngineId = this.SearchEngineId'                  Options =                  {                      Number = 11                  }              };
Magic Number,GoogleApi.Test.Translate.Detect,DetectTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Translate\Detect\DetectTests.cs,DetectWhenMultipleQsTest,The following statement contains a magic number: Assert.AreEqual(2' detections.Length);
Magic Number,GoogleApi.Test.Translate.Languages,LanguagesTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Translate\Languages\LanguagesTests.cs,LanguagesTest,The following statement contains a magic number: Assert.AreEqual(104' languages.Count());
Magic Number,GoogleApi.Test.Translate.Languages,LanguagesTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Translate\Languages\LanguagesTests.cs,LanguagesWhenAsyncTest,The following statement contains a magic number: Assert.AreEqual(104' languages.Count());
Magic Number,GoogleApi.Test.Translate.Translate,TranslateTests,D:\research\architectureSmells\repos\vivet_GoogleApi\.tests\GoogleApi.Test\Translate\Translate\TranslateTests.cs,TranslateWhenMultipleQsTest,The following statement contains a magic number: Assert.AreEqual(2' translations.Length);
