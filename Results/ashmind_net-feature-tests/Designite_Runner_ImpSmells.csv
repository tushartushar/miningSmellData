Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FeatureTests.Runner.Sources.FeatureTestSupport,ExceptionNormalizer,C:\repos\ashmind_net-feature-tests\#framework\Runner\Sources\FeatureTestSupport\ExceptionNormalizer.cs,Normalize,Cyclomatic complexity of the method is 8
Long Statement,FeatureTests.Runner.Outputs,HtmlOutput,C:\repos\ashmind_net-feature-tests\#framework\Runner\Outputs\HtmlOutput.cs,RenderTemplateWithLayout,The length of the statement  "            var templateBodyResult = (string)GenericHelper.RewriteAndInvoke(() => this.RenderTemplateToString(templateFileName' (X1)(object)model' null)' model.GetType()); " is 159.
Long Statement,FeatureTests.Runner.Outputs,HtmlOutput,C:\repos\ashmind_net-feature-tests\#framework\Runner\Outputs\HtmlOutput.cs,RenderTemplateWithLayout,The length of the statement  "            var templateLayoutResult = this.RenderTemplateToString(LayoutTemplateFileName' model' m => m.Body = templateBodyResult); " is 120.
Long Statement,FeatureTests.Runner.Outputs,HtmlOutput,C:\repos\ashmind_net-feature-tests\#framework\Runner\Outputs\HtmlOutput.cs,RenderTemplateToString,The length of the statement  "            var template = Template.WithBaseType<HtmlTemplateBase<TModel>>((Action<TemplateBase>)(t => initializer((HtmlTemplateBase<TModel>)t))) " is 133.
Long Statement,FeatureTests.Runner.Outputs,JsonOutput,C:\repos\ashmind_net-feature-tests\#framework\Runner\Outputs\JsonOutput.cs,GetAllFeatureData,The length of the statement  "            var featuresByName = tables.Where(t => t.Key != MetadataKeys.GeneralInfoTable && t.Key != MetadataKeys.NetFxSupportTable) " is 121.
Long Statement,FeatureTests.Runner.Sources.FeatureTestSupport,FeatureTestRunner,C:\repos\ashmind_net-feature-tests\#framework\Runner\Sources\FeatureTestSupport\FeatureTestRunner.cs,RunTestWithDependencyHandling,The length of the statement  "                var requiredTest = allTests.SingleOrDefault(t => t.Name == dependency.MethodName && t.DeclaringType == dependencyDeclaringType); " is 128.
Long Statement,FeatureTests.Runner.Sources.FeatureTestSupport,FeatureTestRunner,C:\repos\ashmind_net-feature-tests\#framework\Runner\Sources\FeatureTestSupport\FeatureTestRunner.cs,RunTestWithDependencyHandling,The length of the statement  "                    throw new InvalidOperationException(string.Format("Could not find test '{0}' in type '{1}' (referenced by [FeatureDependsOn])."' dependency.MethodName' dependencyDeclaringType.Name)); " is 183.
Long Statement,FeatureTests.Runner.Sources.FeatureTestSupport,FeatureTestRunner,C:\repos\ashmind_net-feature-tests\#framework\Runner\Sources\FeatureTestSupport\FeatureTestRunner.cs,RunTestAsync,The length of the statement  "                return new FeatureTestResult(FeatureTestResultKind.SkippedDueToSpecialCase' this.attributeCleaner.CleanWhitespace(specialCase.Comment)); " is 136.
Long Statement,FeatureTests.Runner.Sources,GeneralInfoTableSource,C:\repos\ashmind_net-feature-tests\#framework\Runner\Sources\1_GeneralInfoTableSource.cs,GetTable,The length of the statement  "                Description = "Total Score is based on total amount of feature tests passed." + Environment.NewLine + Environment.NewLine + " is 123.
Long Statement,FeatureTests.Runner.Sources,GeneralInfoTableSource,C:\repos\ashmind_net-feature-tests\#framework\Runner\Sources\1_GeneralInfoTableSource.cs,GetTable,The length of the statement  "                              "Most tables give one point per success' but some (such as List support) give one point per table.  " + Environment.NewLine + Environment.NewLine + " is 147.
Long Statement,FeatureTests.Runner.Sources,GeneralInfoTableSource,C:\repos\ashmind_net-feature-tests\#framework\Runner\Sources\1_GeneralInfoTableSource.cs,FillDataFromNuGetGallery,The length of the statement  "            var remoteQueryUrl = new Uri(string.Format("http://nuget.org/api/v2/Packages(Id='{0}''Version='{1}')"' localPackage.Id' localPackage.Version)); " is 143.
Long Statement,FeatureTests.Runner.Sources,FeatureTestTableSource,C:\repos\ashmind_net-feature-tests\#framework\Runner\Sources\3_FeatureTestTableSource.cs,GetTables,The length of the statement  "            var testRuns = this.runner.RunAllTests(featureTestAssembly).ToDictionary(r => new { Test = r.Method' LibraryType = r.AdapterType }); " is 132.
Long Statement,FeatureTests.Runner.Sources.MetadataSupport,LocalPackageCache,C:\repos\ashmind_net-feature-tests\#framework\Runner\Sources\MetadataSupport\LocalPackageCache.cs,GetPackage,The length of the statement  "                    throw new Exception(string.Format("Found more than one package '{0}' in '{1}': check if any of those are obsolete/unused."' packageId' this.packageRepository.Source)); " is 167.
Long Statement,FeatureTests.Runner.Sources.MetadataSupport,NetFxVersionHelper,C:\repos\ashmind_net-feature-tests\#framework\Runner\Sources\MetadataSupport\NetFxVersionHelper.cs,GetDisplayName,The length of the statement  "            result = Regex.Replace(result' @"\d{2'}(?!\.)"'        match => " " + string.Join("."' match.Value.ToCharArray())); // 45 => 4.5' etc " is 133.
Magic Number,FeatureTests.Runner,Program,C:\repos\ashmind_net-feature-tests\#framework\Runner\Program.cs,CalculateTotal,The following statement contains a magic number: foreach (var total in totals) {                  var cell = general[total.Key' MetadataKeys.TotalFeature];                  var percent = 100 * ((double)total.Value / max);                  cell.DisplayValue = string.Format("{0:F0}%"' percent);                  if (percent > 70) {                      cell.State = FeatureState.Success;                  }                  else if (percent > 40) {                      cell.State = FeatureState.Concern;                  }                  else {                      cell.State = FeatureState.Failure;                  }              }
Magic Number,FeatureTests.Runner,Program,C:\repos\ashmind_net-feature-tests\#framework\Runner\Program.cs,CalculateTotal,The following statement contains a magic number: foreach (var total in totals) {                  var cell = general[total.Key' MetadataKeys.TotalFeature];                  var percent = 100 * ((double)total.Value / max);                  cell.DisplayValue = string.Format("{0:F0}%"' percent);                  if (percent > 70) {                      cell.State = FeatureState.Success;                  }                  else if (percent > 40) {                      cell.State = FeatureState.Concern;                  }                  else {                      cell.State = FeatureState.Failure;                  }              }
Magic Number,FeatureTests.Runner,Program,C:\repos\ashmind_net-feature-tests\#framework\Runner\Program.cs,CalculateTotal,The following statement contains a magic number: foreach (var total in totals) {                  var cell = general[total.Key' MetadataKeys.TotalFeature];                  var percent = 100 * ((double)total.Value / max);                  cell.DisplayValue = string.Format("{0:F0}%"' percent);                  if (percent > 70) {                      cell.State = FeatureState.Success;                  }                  else if (percent > 40) {                      cell.State = FeatureState.Concern;                  }                  else {                      cell.State = FeatureState.Failure;                  }              }
Magic Number,FeatureTests.Runner.Sources.MetadataSupport,NetFxVersionHelper,C:\repos\ashmind_net-feature-tests\#framework\Runner\Sources\MetadataSupport\NetFxVersionHelper.cs,GetDisplayName,The following statement contains a magic number: if (version.Profile.Equals("WindowsPhone"' StringComparison.InvariantCultureIgnoreCase)               && version.Identifier.Equals("Silverlight"' StringComparison.InvariantCultureIgnoreCase)               && version.Version.Major == 3) {                  return "Windows Phone 7";              }
