Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Slapper.Tests,MapUniqueChildsIdTest,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MapUniqueChildsIdTest.cs,Can_Map_DifferentsRows_to_Same_object,The length of the statement  "            Assert.AreNotEqual(customer.Emails.FirstOrDefault(e => e.Id == 1).Name' customer.Phones.FirstOrDefault(p => p.Id == 1).Name);" is 125.
Long Statement,Slapper.Tests,IdentifierTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\IdentifierTests.cs,Can_Find_An_Identifier_When_A_Field_Or_Property_Has_An_Id_Attribute,The length of the statement  "            var identifiers = Slapper.AutoMapper.InternalHelpers.GetIdentifiers( typeof( IdentifierTestModels.CustomerWithIdAttribute ) );" is 126.
Long Statement,Slapper.Tests,IdentifierTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\IdentifierTests.cs,Can_Find_Identifiers_When_Multiple_Fields_Or_Properties_Have_An_Id_Attribute,The length of the statement  "            var identifiers = Slapper.AutoMapper.InternalHelpers.GetIdentifiers( typeof( IdentifierTestModels.CustomerWithMultipleIdAttributes ) );" is 135.
Magic Number,Slapper.Tests,ComplexMapsParentsAndChlidTest,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapsParentsAndChlidTest.cs,Can_Make_Cache_HashTypeEquals_With_Different_Parents,The following statement contains a magic number: var listOfDictionaries = new List<Dictionary<string' object>>             {                 new Dictionary<string' object>                 {                     { "Id"' 1 }'                     { "Services_Id"' 1 }'                     { "Services_Hotels_Id"' 1 }'                     { "Services_Hotels_Name"' "Hotel 1" }                 }'                 new Dictionary<string' object>                 {                     { "Id"' 1 }'                     { "Services_Id"' 2 }'                     { "Services_Hotels_Id"' 2 }'                     { "Services_Hotels_Name"' "Hotel 2" }                 }'                 new Dictionary<string' object>                 {                     { "Id"' 2 }'                     { "Services_Id"' 1 }'                     { "Services_Hotels_Id"' 3 }'                     { "Services_Hotels_Name"' "Hotel 3" }                 }             };
Magic Number,Slapper.Tests,ComplexMapsParentsAndChlidTest,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapsParentsAndChlidTest.cs,Can_Make_Cache_HashTypeEquals_With_Different_Parents,The following statement contains a magic number: var listOfDictionaries = new List<Dictionary<string' object>>             {                 new Dictionary<string' object>                 {                     { "Id"' 1 }'                     { "Services_Id"' 1 }'                     { "Services_Hotels_Id"' 1 }'                     { "Services_Hotels_Name"' "Hotel 1" }                 }'                 new Dictionary<string' object>                 {                     { "Id"' 1 }'                     { "Services_Id"' 2 }'                     { "Services_Hotels_Id"' 2 }'                     { "Services_Hotels_Name"' "Hotel 2" }                 }'                 new Dictionary<string' object>                 {                     { "Id"' 2 }'                     { "Services_Id"' 1 }'                     { "Services_Hotels_Id"' 3 }'                     { "Services_Hotels_Name"' "Hotel 3" }                 }             };
Magic Number,Slapper.Tests,ComplexMapsParentsAndChlidTest,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapsParentsAndChlidTest.cs,Can_Make_Cache_HashTypeEquals_With_Different_Parents,The following statement contains a magic number: var listOfDictionaries = new List<Dictionary<string' object>>             {                 new Dictionary<string' object>                 {                     { "Id"' 1 }'                     { "Services_Id"' 1 }'                     { "Services_Hotels_Id"' 1 }'                     { "Services_Hotels_Name"' "Hotel 1" }                 }'                 new Dictionary<string' object>                 {                     { "Id"' 1 }'                     { "Services_Id"' 2 }'                     { "Services_Hotels_Id"' 2 }'                     { "Services_Hotels_Name"' "Hotel 2" }                 }'                 new Dictionary<string' object>                 {                     { "Id"' 2 }'                     { "Services_Id"' 1 }'                     { "Services_Hotels_Id"' 3 }'                     { "Services_Hotels_Name"' "Hotel 3" }                 }             };
Magic Number,Slapper.Tests,ComplexMapsParentsAndChlidTest,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapsParentsAndChlidTest.cs,Can_Make_Cache_HashTypeEquals_With_Different_Parents,The following statement contains a magic number: var listOfDictionaries = new List<Dictionary<string' object>>             {                 new Dictionary<string' object>                 {                     { "Id"' 1 }'                     { "Services_Id"' 1 }'                     { "Services_Hotels_Id"' 1 }'                     { "Services_Hotels_Name"' "Hotel 1" }                 }'                 new Dictionary<string' object>                 {                     { "Id"' 1 }'                     { "Services_Id"' 2 }'                     { "Services_Hotels_Id"' 2 }'                     { "Services_Hotels_Name"' "Hotel 2" }                 }'                 new Dictionary<string' object>                 {                     { "Id"' 2 }'                     { "Services_Id"' 1 }'                     { "Services_Hotels_Id"' 3 }'                     { "Services_Hotels_Name"' "Hotel 3" }                 }             };
Magic Number,Slapper.Tests,ComplexMapsParentsAndChlidTest,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapsParentsAndChlidTest.cs,Can_Make_Cache_HashTypeEquals_With_Different_Parents,The following statement contains a magic number: Assert.That(bookings.Count == 2);
Magic Number,Slapper.Tests,ComplexMapsParentsAndChlidTest,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapsParentsAndChlidTest.cs,Can_Make_Cache_HashTypeEquals_With_Different_Parents,The following statement contains a magic number: Assert.That(bookings[0].Services.Count() == 2);
Magic Number,Slapper.Tests,ComplexMapsParentsAndChlidTest,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapsParentsAndChlidTest.cs,Can_Make_Cache_HashTypeEquals_With_Different_Parents,The following statement contains a magic number: Assert.That(bookings[0].Services.Single(s => s.Id == 2).Hotels.Count() == 1);
Magic Number,Slapper.Tests,MapCollectionsTypedTest,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MapCollectionsTypedTest.cs,I_Can_Map_Value_PrimitiveTyped_Collection,The following statement contains a magic number: var dictionary = new Dictionary<string' object>                          {                              { "CustomerId"' 1 }'                              { "OrdersIds_$"' 3 }'                          };
Magic Number,Slapper.Tests,MapCollectionsTypedTest,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MapCollectionsTypedTest.cs,I_Can_Map_Value_PrimitiveTyped_Collection,The following statement contains a magic number: var dictionary2 = new Dictionary<string' object>                          {                              { "CustomerId"' 1 }'                              { "OrdersIds_$"' 5 }                          };
Magic Number,Slapper.Tests,MapCollectionsTypedTest,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MapCollectionsTypedTest.cs,I_Can_Map_Value_PrimitiveTyped_Collection,The following statement contains a magic number: Assert.That(customers.Single().OrdersIds.Count == 2);
Magic Number,Slapper.Tests,MapCollectionsTypedTest,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MapCollectionsTypedTest.cs,I_Can_Map_Value_PrimitiveTyped_Collection,The following statement contains a magic number: Assert.That(customers.Single().OrdersIds[0] == 3);
Magic Number,Slapper.Tests,MapCollectionsTypedTest,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MapCollectionsTypedTest.cs,I_Can_Map_Value_PrimitiveTyped_Collection,The following statement contains a magic number: Assert.That(customers.Single().OrdersIds[1] == 5);
Magic Number,Slapper.Tests,MapCollectionsTypedTest,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MapCollectionsTypedTest.cs,I_Can_Map_Value_SpecialStringTyped_Collection,The following statement contains a magic number: Assert.That(customers.Single().Names.Count == 2);
Magic Number,Slapper.Tests,MapCollectionsTypedTest,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MapCollectionsTypedTest.cs,I_Can_Map_Any_Typed_ICollection,The following statement contains a magic number: List<Dictionary<string' object>> flat = new List<Dictionary<string' object>>()             {                 new Dictionary<string' object>()                 {                     { "Id"' 1 } '                     {"Name"' "Merchant name" } '                     { "Addresses_Id"' 1} '                     { "Addresses_AddressLine"' "Address line 1"} '                     { "Addresses_MerchantId"' 1}                 }'                 new Dictionary<string' object>()                 {                     { "Id"' 1 } '                     {"Name"' "Merchant name" } '                     { "Addresses_Id"' 2} '                     { "Addresses_AddressLine"' "Address line 2"} '                     { "Addresses_MerchantId"' 1}                 }'                 new Dictionary<string' object>()                 {                     { "Id"' 1 } '                     {"Name"' "Merchant name" } '                     { "Addresses_Id"' 3} '                     { "Addresses_AddressLine"' "Address line 3"} '                     { "Addresses_MerchantId"' 1}                 }'             };
Magic Number,Slapper.Tests,MapCollectionsTypedTest,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MapCollectionsTypedTest.cs,I_Can_Map_Any_Typed_ICollection,The following statement contains a magic number: List<Dictionary<string' object>> flat = new List<Dictionary<string' object>>()             {                 new Dictionary<string' object>()                 {                     { "Id"' 1 } '                     {"Name"' "Merchant name" } '                     { "Addresses_Id"' 1} '                     { "Addresses_AddressLine"' "Address line 1"} '                     { "Addresses_MerchantId"' 1}                 }'                 new Dictionary<string' object>()                 {                     { "Id"' 1 } '                     {"Name"' "Merchant name" } '                     { "Addresses_Id"' 2} '                     { "Addresses_AddressLine"' "Address line 2"} '                     { "Addresses_MerchantId"' 1}                 }'                 new Dictionary<string' object>()                 {                     { "Id"' 1 } '                     {"Name"' "Merchant name" } '                     { "Addresses_Id"' 3} '                     { "Addresses_AddressLine"' "Address line 3"} '                     { "Addresses_MerchantId"' 1}                 }'             };
Magic Number,Slapper.Tests,MapCollectionsTypedTest,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MapCollectionsTypedTest.cs,I_Can_Map_Any_Typed_ICollection,The following statement contains a magic number: Assert.That(merchant.Addresses.Count == 3);
Magic Number,Slapper.Tests,MapCollectionsTypedTest,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MapCollectionsTypedTest.cs,I_Can_Map_Any_Typed_ICollection,The following statement contains a magic number: Assert.AreEqual("Address line 3"' merchant.Addresses.Skip(2).First().AddressLine);
Magic Number,Slapper.Tests,MappingToDateTimeTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MappingToNullableTypesTests.cs,Can_Map_DateTime_Values_To_Nullable_DateTime_Fields,The following statement contains a magic number: DateTime startDate = DateTime.Now.AddDays( - 2 );
Magic Number,Slapper.Tests,MappingToDateTimeTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MappingToNullableTypesTests.cs,Can_Map_DateTime_Values_To_Nullable_DateTime_Properties,The following statement contains a magic number: DateTime startDate = DateTime.Now.AddDays( -2 );
Magic Number,Slapper.Tests,MappingToDateTimeTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MappingToNullableTypesTests.cs,Can_Map_Null_Values_To_Nullable_DateTime_Fields,The following statement contains a magic number: DateTime startDate = DateTime.Now.AddDays( -2 );
Magic Number,Slapper.Tests,MappingToDateTimeTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MappingToNullableTypesTests.cs,Can_Map_Null_Values_To_Nullable_DateTime_Properties,The following statement contains a magic number: DateTime startDate = DateTime.Now.AddDays( -2 );
Magic Number,Slapper.Tests,MappingToDateTimeTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MappingToNullableTypesTests.cs,Can_Map_DateTime_String_Values_To_Nullable_DateTime_Fields,The following statement contains a magic number: DateTime startDate = DateTime.Now.AddDays( -2 );
Magic Number,Slapper.Tests,MappingToDateTimeTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MappingToNullableTypesTests.cs,Can_Map_DateTime_String_Values_To_Nullable_DateTime_Properties,The following statement contains a magic number: DateTime startDate = DateTime.Now.AddDays( -2 );
Magic Number,Slapper.Tests,MappingToEnumTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MappingToEnumTests.cs,Can_Map_Integer_Values_To_Enum_Fields,The following statement contains a magic number: var dictionary = new Dictionary<string' object>                 {                     { "Id"' id }'                     { "FirstName"' firstName }'                     { "LastName"' lastName }'                     { "Gender"' 2 }                 };
Magic Number,Slapper.Tests,MappingToEnumTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MappingToEnumTests.cs,Can_Map_Integer_Values_To_Enum_Properties,The following statement contains a magic number: var dictionary = new Dictionary<string' object>                 {                     { "Id"' id }'                     { "FirstName"' firstName }'                     { "LastName"' lastName }'                     { "Gender"' 2 }                 };
Magic Number,Slapper.Tests,MappingToEnumTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MappingToEnumTests.cs,Can_Map_Int32_Values_To_NUllable_Enum_Properties,The following statement contains a magic number: person.MaritalStatus = 2;
Magic Number,Slapper.Tests,MapUniqueChildsIdTest,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MapUniqueChildsIdTest.cs,Can_Map_DifferentsRows_to_Same_object,The following statement contains a magic number: dynamicCustomer2.Phones_Id = 2;
Magic Number,Slapper.Tests,NoIdentifierTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\NoIdentifierTests.cs,Can_Map_To_Types_With_No_Identifiers,The following statement contains a magic number: Assert.That( persons.Count == 2 );
Magic Number,Slapper.Tests,CachingBehaviorTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\CachingBehaviorTests.cs,Test_Nested_Duplicate_Instances,The following statement contains a magic number: var item2 = new Dictionary<string' object>()                                                {                                                    { "Id"' 2 }'                                                    { "Name"' "Employee2" }'                                                    { "Department_Id"' 1 }'                                                    { "Department_Name"' "Department1" }                                                };
Magic Number,Slapper.Tests,CachingBehaviorTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\CachingBehaviorTests.cs,Test_Long_Ids_With_Colliding_HashValues,The following statement contains a magic number: const long longId1 = 95988224123597;
Magic Number,Slapper.Tests,CachingBehaviorTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\CachingBehaviorTests.cs,Test_Long_Ids_With_Colliding_HashValues,The following statement contains a magic number: const long longId2 = 95983929156300;
Magic Number,Slapper.Tests,CachingBehaviorTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\CachingBehaviorTests.cs,Test_Long_Ids_With_Colliding_HashValues,The following statement contains a magic number: var item2 = new Dictionary<string' object>()                                                {                                                    { "Id"' longId2 }'                                                    { "OrderDetail_Id"' 2 }                                                };
Magic Number,Slapper.Tests,CachingBehaviorTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\CachingBehaviorTests.cs,Cache_is_cleared_if_KeepCache_is_false,The following statement contains a magic number: var item2 = new Dictionary<string' object> {                 { "Id"' 1 }'                 { "OrderItems_Id"' 2 }             };
Magic Number,Slapper.Tests,CachingBehaviorTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\CachingBehaviorTests.cs,Cache_is_cleared_if_KeepCache_is_false,The following statement contains a magic number: Assert.AreEqual(2' secondResult.OrderItems[0].Id);
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Map_Complex_Nested_Members,The following statement contains a magic number: const decimal orderTotal = 50.50m;
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Detect_Duplicate_Parent_Members_And_Properly_Instantiate_The_Object_Only_Once,The following statement contains a magic number: const decimal orderTotal = 50.50m;
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Detect_Duplicate_Parent_Members_And_Properly_Instantiate_The_Object_Only_Once,The following statement contains a magic number: Assert.That( customer.Orders.Count == 2 );
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Handle_Nested_Members_That_Implements_ICollection,The following statement contains a magic number: const decimal orderTotal = 50.50m;
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Handle_Nested_Members_That_Implements_ICollection,The following statement contains a magic number: Assert.That( customer.Orders.Count() == 2 );
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Handle_Mapping_Objects_With_Multiple_Identifiers,The following statement contains a magic number: const decimal orderTotal = 50.50m;
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Handle_Mapping_Objects_With_Multiple_Identifiers,The following statement contains a magic number: Assert.That( customers.Count() == 2 );
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Handle_Mapping_Objects_With_Multiple_Identifiers,The following statement contains a magic number: Assert.That( customers.First().Orders.Count == 2 );
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Map_To_Multiple_Objects,The following statement contains a magic number: var dictionary = new Dictionary<string' object>                                  {                                      { "Id"' 1 }'                                      { "FirstName"' "Bob" }'                                      { "LastName"' "Smith" }'                                      { "Orders_Id"' 1 }'                                      { "Orders_OrderTotal"' 50.50m }                                  };
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Map_To_Multiple_Objects,The following statement contains a magic number: var dictionary2 = new Dictionary<string' object>                                  {                                      { "Id"' 2 }'                                      { "FirstName"' "Jane" }'                                      { "LastName"' "Doe" }'                                      { "Orders_Id"' 2 }'                                      { "Orders_OrderTotal"' 23.40m }                                  };
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Map_To_Multiple_Objects,The following statement contains a magic number: var dictionary2 = new Dictionary<string' object>                                  {                                      { "Id"' 2 }'                                      { "FirstName"' "Jane" }'                                      { "LastName"' "Doe" }'                                      { "Orders_Id"' 2 }'                                      { "Orders_OrderTotal"' 23.40m }                                  };
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Map_To_Multiple_Objects,The following statement contains a magic number: var dictionary2 = new Dictionary<string' object>                                  {                                      { "Id"' 2 }'                                      { "FirstName"' "Jane" }'                                      { "LastName"' "Doe" }'                                      { "Orders_Id"' 2 }'                                      { "Orders_OrderTotal"' 23.40m }                                  };
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Map_To_Multiple_Objects,The following statement contains a magic number: Assert.That( customers.Count() == 2 );
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Handle_Mapping_Deeply_Nested_Members,The following statement contains a magic number: var dictionary = new Dictionary<string' object>                                  {                                      { "Id"' 1 }'                                      { "FirstName"' "Bob" }'                                      { "LastName"' "Smith" }'                                      { "Orders_Id"' 1 }'                                      { "Orders_OrderTotal"' 50.50m }'                                      { "Orders_OrderDetails_Id"' 1 }'                                      { "Orders_OrderDetails_OrderDetailTotal"' 50.50m }'                                      { "Orders_OrderDetails_Product_Id"' 546 }'                                      { "Orders_OrderDetails_Product_ProductName"' "Black Bookshelf" }                                  };
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Handle_Mapping_Deeply_Nested_Members,The following statement contains a magic number: var dictionary = new Dictionary<string' object>                                  {                                      { "Id"' 1 }'                                      { "FirstName"' "Bob" }'                                      { "LastName"' "Smith" }'                                      { "Orders_Id"' 1 }'                                      { "Orders_OrderTotal"' 50.50m }'                                      { "Orders_OrderDetails_Id"' 1 }'                                      { "Orders_OrderDetails_OrderDetailTotal"' 50.50m }'                                      { "Orders_OrderDetails_Product_Id"' 546 }'                                      { "Orders_OrderDetails_Product_ProductName"' "Black Bookshelf" }                                  };
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Handle_Mapping_Deeply_Nested_Members,The following statement contains a magic number: var dictionary = new Dictionary<string' object>                                  {                                      { "Id"' 1 }'                                      { "FirstName"' "Bob" }'                                      { "LastName"' "Smith" }'                                      { "Orders_Id"' 1 }'                                      { "Orders_OrderTotal"' 50.50m }'                                      { "Orders_OrderDetails_Id"' 1 }'                                      { "Orders_OrderDetails_OrderDetailTotal"' 50.50m }'                                      { "Orders_OrderDetails_Product_Id"' 546 }'                                      { "Orders_OrderDetails_Product_ProductName"' "Black Bookshelf" }                                  };
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Handle_Resolving_Duplicate_Nested_Members,The following statement contains a magic number: var dictionary = new Dictionary<string' object>                                  {                                      { "CustomerId"' 1 }'                                      { "FirstName"' "Bob" }'                                      { "LastName"' "Smith" }'                                      { "Orders_OrderId"' 1 }'                                      { "Orders_OrderTotal"' 50.50m }'                                       { "Orders_OrderDetails_OrderDetailId"' 1 }'                                      { "Orders_OrderDetails_OrderDetailTotal"' 25.00m }                                  };
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Handle_Resolving_Duplicate_Nested_Members,The following statement contains a magic number: var dictionary = new Dictionary<string' object>                                  {                                      { "CustomerId"' 1 }'                                      { "FirstName"' "Bob" }'                                      { "LastName"' "Smith" }'                                      { "Orders_OrderId"' 1 }'                                      { "Orders_OrderTotal"' 50.50m }'                                       { "Orders_OrderDetails_OrderDetailId"' 1 }'                                      { "Orders_OrderDetails_OrderDetailTotal"' 25.00m }                                  };
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Handle_Resolving_Duplicate_Nested_Members,The following statement contains a magic number: var dictionary2 = new Dictionary<string' object>                                  {                                      { "CustomerId"' 1 }'                                      { "FirstName"' "Bob" }'                                      { "LastName"' "Smith" }'                                      { "Orders_OrderId"' 1 }'                                      { "Orders_OrderTotal"' 50.50m }'                                       { "Orders_OrderDetails_OrderDetailId"' 2 }'                                      { "Orders_OrderDetails_OrderDetailTotal"' 25.50m }                                  };
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Handle_Resolving_Duplicate_Nested_Members,The following statement contains a magic number: var dictionary2 = new Dictionary<string' object>                                  {                                      { "CustomerId"' 1 }'                                      { "FirstName"' "Bob" }'                                      { "LastName"' "Smith" }'                                      { "Orders_OrderId"' 1 }'                                      { "Orders_OrderTotal"' 50.50m }'                                       { "Orders_OrderDetails_OrderDetailId"' 2 }'                                      { "Orders_OrderDetails_OrderDetailTotal"' 25.50m }                                  };
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Handle_Resolving_Duplicate_Nested_Members,The following statement contains a magic number: var dictionary2 = new Dictionary<string' object>                                  {                                      { "CustomerId"' 1 }'                                      { "FirstName"' "Bob" }'                                      { "LastName"' "Smith" }'                                      { "Orders_OrderId"' 1 }'                                      { "Orders_OrderTotal"' 50.50m }'                                       { "Orders_OrderDetails_OrderDetailId"' 2 }'                                      { "Orders_OrderDetails_OrderDetailTotal"' 25.50m }                                  };
Magic Number,Slapper.Tests,ComplexMapTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ComplexMapTests.cs,Can_Handle_Resolving_Duplicate_Nested_Members,The following statement contains a magic number: Assert.That( customers.FirstOrDefault().Orders.FirstOrDefault().OrderDetails.Count == 2 );
Magic Number,Slapper.Tests,MapDynamicTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MapDynamicTests.cs,Can_Handle_Mapping_A_Single_Dynamic_Object,The following statement contains a magic number: dynamicCustomer.Orders_OrderTotal = 50.50m;
Magic Number,Slapper.Tests,MapDynamicTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MapDynamicTests.cs,Can_Handle_Mapping_Nested_Members_Using_Dynamic,The following statement contains a magic number: i < 5
Magic Number,Slapper.Tests,MapDynamicTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\MapDynamicTests.cs,Can_Handle_Mapping_Nested_Members_Using_Dynamic,The following statement contains a magic number: Assert.That( customers.Count() == 5 );
Magic Number,Slapper.Tests,ParentMappingTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ParentMappingTests.cs,Can_Populate_Parent_Objects_Referenced_In_Child_Objects,The following statement contains a magic number: dynamicCustomer2.Addresses_AddressId = 2;
Magic Number,Slapper.Tests,PerformanceTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\PerformanceTests.cs,Simple_Performance_Test,The following statement contains a magic number: const int iterations = 50000;
Magic Number,Slapper.Tests,PerformanceTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\PerformanceTests.cs,Complex_Performance_Test,The following statement contains a magic number: const int iterations = 50000;
Magic Number,Slapper.Tests,PerformanceTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\PerformanceTests.cs,Complex_Performance_Test,The following statement contains a magic number: var dictionary = new Dictionary<string' object>                 {                     { "CustomerId"' i }'                     { "FirstName"' "Bob" }'                     { "LastName"' "Smith" }'                     { "Orders_OrderId"' i }'                     { "Orders_OrderTotal"' 50.50m }'                     { "Orders_OrderDetails_OrderDetailId"' i }'                     { "Orders_OrderDetails_OrderDetailTotal"' 50.50m }'                     { "Orders_OrderDetails_Product_Id"' 546 }'                     { "Orders_OrderDetails_Product_ProductName"' "Black Bookshelf" }                 };
Magic Number,Slapper.Tests,PerformanceTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\PerformanceTests.cs,Complex_Performance_Test,The following statement contains a magic number: var dictionary = new Dictionary<string' object>                 {                     { "CustomerId"' i }'                     { "FirstName"' "Bob" }'                     { "LastName"' "Smith" }'                     { "Orders_OrderId"' i }'                     { "Orders_OrderTotal"' 50.50m }'                     { "Orders_OrderDetails_OrderDetailId"' i }'                     { "Orders_OrderDetails_OrderDetailTotal"' 50.50m }'                     { "Orders_OrderDetails_Product_Id"' 546 }'                     { "Orders_OrderDetails_Product_ProductName"' "Black Bookshelf" }                 };
Magic Number,Slapper.Tests,PerformanceTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\PerformanceTests.cs,Complex_Performance_Test,The following statement contains a magic number: var dictionary = new Dictionary<string' object>                 {                     { "CustomerId"' i }'                     { "FirstName"' "Bob" }'                     { "LastName"' "Smith" }'                     { "Orders_OrderId"' i }'                     { "Orders_OrderTotal"' 50.50m }'                     { "Orders_OrderDetails_OrderDetailId"' i }'                     { "Orders_OrderDetails_OrderDetailTotal"' 50.50m }'                     { "Orders_OrderDetails_Product_Id"' 546 }'                     { "Orders_OrderDetails_Product_ProductName"' "Black Bookshelf" }                 };
Magic Number,Slapper.Tests,ReadMeTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ReadMeTests.cs,I_Can_Map_Nested_Types_And_Resolve_Duplicate_Entries_Properly,The following statement contains a magic number: var dictionary = new Dictionary<string' object>                                  {                                      { "CustomerId"' 1 }'                                      { "FirstName"' "Bob" }'                                      { "LastName"' "Smith" }'                                      { "Orders_OrderId"' 1 }'                                      { "Orders_OrderTotal"' 50.50m }'                                      { "Orders_OrderDetails_OrderDetailId"' 1 }'                                      { "Orders_OrderDetails_OrderDetailTotal"' 25.00m }                                  };
Magic Number,Slapper.Tests,ReadMeTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ReadMeTests.cs,I_Can_Map_Nested_Types_And_Resolve_Duplicate_Entries_Properly,The following statement contains a magic number: var dictionary = new Dictionary<string' object>                                  {                                      { "CustomerId"' 1 }'                                      { "FirstName"' "Bob" }'                                      { "LastName"' "Smith" }'                                      { "Orders_OrderId"' 1 }'                                      { "Orders_OrderTotal"' 50.50m }'                                      { "Orders_OrderDetails_OrderDetailId"' 1 }'                                      { "Orders_OrderDetails_OrderDetailTotal"' 25.00m }                                  };
Magic Number,Slapper.Tests,ReadMeTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ReadMeTests.cs,I_Can_Map_Nested_Types_And_Resolve_Duplicate_Entries_Properly,The following statement contains a magic number: var dictionary2 = new Dictionary<string' object>                                  {                                      { "CustomerId"' 1 }'                                      { "FirstName"' "Bob" }'                                      { "LastName"' "Smith" }'                                      { "Orders_OrderId"' 1 }'                                      { "Orders_OrderTotal"' 50.50m }'                                      { "Orders_OrderDetails_OrderDetailId"' 2 }'                                      { "Orders_OrderDetails_OrderDetailTotal"' 25.50m }                                  };
Magic Number,Slapper.Tests,ReadMeTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ReadMeTests.cs,I_Can_Map_Nested_Types_And_Resolve_Duplicate_Entries_Properly,The following statement contains a magic number: var dictionary2 = new Dictionary<string' object>                                  {                                      { "CustomerId"' 1 }'                                      { "FirstName"' "Bob" }'                                      { "LastName"' "Smith" }'                                      { "Orders_OrderId"' 1 }'                                      { "Orders_OrderTotal"' 50.50m }'                                      { "Orders_OrderDetails_OrderDetailId"' 2 }'                                      { "Orders_OrderDetails_OrderDetailTotal"' 25.50m }                                  };
Magic Number,Slapper.Tests,ReadMeTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ReadMeTests.cs,I_Can_Map_Nested_Types_And_Resolve_Duplicate_Entries_Properly,The following statement contains a magic number: var dictionary2 = new Dictionary<string' object>                                  {                                      { "CustomerId"' 1 }'                                      { "FirstName"' "Bob" }'                                      { "LastName"' "Smith" }'                                      { "Orders_OrderId"' 1 }'                                      { "Orders_OrderTotal"' 50.50m }'                                      { "Orders_OrderDetails_OrderDetailId"' 2 }'                                      { "Orders_OrderDetails_OrderDetailTotal"' 25.50m }                                  };
Magic Number,Slapper.Tests,ReadMeTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ReadMeTests.cs,I_Can_Map_Nested_Types_And_Resolve_Duplicate_Entries_Properly,The following statement contains a magic number: Assert.That( customers.FirstOrDefault().Orders.FirstOrDefault().OrderDetails.Count == 2 );
Magic Number,Slapper.Tests,ReadMeTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ReadMeTests.cs,I_Can_Map_Nested_Types_And_Resolve_Duplicate_Entries_Properly_Using_Dynamics,The following statement contains a magic number: customer1.Orders_OrderTotal = 50.50m;
Magic Number,Slapper.Tests,ReadMeTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ReadMeTests.cs,I_Can_Map_Nested_Types_And_Resolve_Duplicate_Entries_Properly_Using_Dynamics,The following statement contains a magic number: customer1.Orders_OrderDetails_OrderDetailTotal = 25.00m;
Magic Number,Slapper.Tests,ReadMeTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ReadMeTests.cs,I_Can_Map_Nested_Types_And_Resolve_Duplicate_Entries_Properly_Using_Dynamics,The following statement contains a magic number: customer2.Orders_OrderTotal = 50.50m;
Magic Number,Slapper.Tests,ReadMeTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ReadMeTests.cs,I_Can_Map_Nested_Types_And_Resolve_Duplicate_Entries_Properly_Using_Dynamics,The following statement contains a magic number: customer2.Orders_OrderDetails_OrderDetailId = 2;
Magic Number,Slapper.Tests,ReadMeTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ReadMeTests.cs,I_Can_Map_Nested_Types_And_Resolve_Duplicate_Entries_Properly_Using_Dynamics,The following statement contains a magic number: customer2.Orders_OrderDetails_OrderDetailTotal = 25.50m;
Magic Number,Slapper.Tests,ReadMeTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\ReadMeTests.cs,I_Can_Map_Nested_Types_And_Resolve_Duplicate_Entries_Properly_Using_Dynamics,The following statement contains a magic number: Assert.That( customers.FirstOrDefault().Orders.FirstOrDefault().OrderDetails.Count == 2 );
Magic Number,Slapper.Tests,TypeActivatorTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\TypeActivatorTests.cs,Can_Use_Registered_TypeActivators_WithInterfaces,The following statement contains a magic number: const int count = 2;
Magic Number,Slapper.Tests,TypeActivatorTests,C:\research\architectureSmells\repos\randyburden_Slapper.AutoMapper\Slapper.AutoMapper.Tests\TypeActivatorTests.cs,TypeActivator_Order_Is_Adhered_To,The following statement contains a magic number: const int count = 2;
