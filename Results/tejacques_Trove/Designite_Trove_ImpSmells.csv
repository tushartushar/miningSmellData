Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Trove,CascadingDataStoreList,C:\repos\tejacques_Trove\src\Trove\DataStores\CascadingDataStoreList.cs,Get,Cyclomatic complexity of the method is 8
Long Parameter List,Trove,CascadingDataStoreHash,C:\repos\tejacques_Trove\src\Trove\DataStores\CascadingDataStoreHash.cs,CascadingDataStoreHash,The method has 6 parameters.
Long Parameter List,Trove,CascadingDataStoreList,C:\repos\tejacques_Trove\src\Trove\DataStores\CascadingDataStoreList.cs,CascadingDataStoreList,The method has 13 parameters.
Long Parameter List,Trove,DataStoreList,C:\repos\tejacques_Trove\src\Trove\DataStores\DataStoreList.cs,DataStoreList,The method has 11 parameters.
Long Parameter List,Trove,CascadingDataStore,C:\repos\tejacques_Trove\src\Trove\DataStores\CascadingDataStore.cs,CascadingDataStore,The method has 6 parameters.
Long Statement,Trove,CascadingDataStoreList,C:\repos\tejacques_Trove\src\Trove\DataStores\CascadingDataStoreList.cs,Set,The length of the statement  "		allTasks.Add (pubSubConnection.Publish (this.name' PubSubMessageType.Expire' new KeyValuePair<int' T> (0' default(T)))); " is 120.
Long Statement,Trove,RedisDataStoreHash,C:\repos\tejacques_Trove\src\Trove\DataStores\RedisDataStoreHash.cs,Set,The length of the statement  "		allTasks.Add (redisConnection.Strings.Set (0' GetRedisKey (key)' JsonSerializer.SerializeToString (value)' timeToLive)); " is 120.
Empty Catch Block,Trove,LocalDataStoreList,C:\repos\tejacques_Trove\src\Trove\DataStores\LocalDataStoreList.cs,RemoveFront,The method has an empty catch block.
Empty Catch Block,Trove,LocalDataStoreList,C:\repos\tejacques_Trove\src\Trove\DataStores\LocalDataStoreList.cs,RemoveBack,The method has an empty catch block.
Empty Catch Block,Trove,RedisDataStoreList,C:\repos\tejacques_Trove\src\Trove\DataStores\RedisDataStoreList.cs,Remove,The method has an empty catch block.
Empty Catch Block,Trove,RedisDataStoreList,C:\repos\tejacques_Trove\src\Trove\DataStores\RedisDataStoreList.cs,RemoveFront,The method has an empty catch block.
Empty Catch Block,Trove,RedisDataStoreList,C:\repos\tejacques_Trove\src\Trove\DataStores\RedisDataStoreList.cs,RemoveBack,The method has an empty catch block.
Empty Catch Block,Trove,RedisPubSubConnection,C:\repos\tejacques_Trove\src\Trove\PubSub\RedisPubSubConnection.cs,Subscribe,The method has an empty catch block.
Empty Catch Block,Trove,RedisPubSubConnection,C:\repos\tejacques_Trove\src\Trove\PubSub\RedisPubSubConnection.cs,Subscribe,The method has an empty catch block.
Magic Number,Trove,LRUCacheLockless,C:\repos\tejacques_Trove\src\Trove\Caches\LRUCacheLockless.cs,LRUCacheLockless,The following statement contains a magic number: if (this._ttl > TimeSpan.Zero) {  	this._timer = new Timer (Purge' null' (int)this._ttl.TotalMilliseconds' 5000);  	// 5 seconds  }  
Magic Number,Trove,LRUCacheLockless,C:\repos\tejacques_Trove\src\Trove\Caches\LRUCacheLockless.cs,LRUCacheLockless,The following statement contains a magic number: this._timer = new Timer (Purge' null' (int)this._ttl.TotalMilliseconds' 5000);  
Magic Number,Trove,LRUCacheLockless,C:\repos\tejacques_Trove\src\Trove\Caches\LRUCacheLockless.cs,MoveToHead,The following statement contains a magic number: if (Interlocked.CompareExchange (ref entry.Node' n' c) == c) {  	AddToHead (n);  	if (null != c) {  		c.Entry = null;  		this._cleanup.Enqueue (c);  		int count;  		if ((count = Interlocked.Increment (ref this._cleanupCount)) == 1000) {  			Interlocked.Add (ref this._cleanupCount' -1000);  			this._signal.Set ();  		}  	}  }  
Magic Number,Trove,LRUCacheLockless,C:\repos\tejacques_Trove\src\Trove\Caches\LRUCacheLockless.cs,MoveToHead,The following statement contains a magic number: if (Interlocked.CompareExchange (ref entry.Node' n' c) == c) {  	AddToHead (n);  	if (null != c) {  		c.Entry = null;  		this._cleanup.Enqueue (c);  		int count;  		if ((count = Interlocked.Increment (ref this._cleanupCount)) == 1000) {  			Interlocked.Add (ref this._cleanupCount' -1000);  			this._signal.Set ();  		}  	}  }  
Magic Number,Trove,LRUCacheLockless,C:\repos\tejacques_Trove\src\Trove\Caches\LRUCacheLockless.cs,MoveToHead,The following statement contains a magic number: if (null != c) {  	c.Entry = null;  	this._cleanup.Enqueue (c);  	int count;  	if ((count = Interlocked.Increment (ref this._cleanupCount)) == 1000) {  		Interlocked.Add (ref this._cleanupCount' -1000);  		this._signal.Set ();  	}  }  
Magic Number,Trove,LRUCacheLockless,C:\repos\tejacques_Trove\src\Trove\Caches\LRUCacheLockless.cs,MoveToHead,The following statement contains a magic number: if (null != c) {  	c.Entry = null;  	this._cleanup.Enqueue (c);  	int count;  	if ((count = Interlocked.Increment (ref this._cleanupCount)) == 1000) {  		Interlocked.Add (ref this._cleanupCount' -1000);  		this._signal.Set ();  	}  }  
Magic Number,Trove,LRUCacheLockless,C:\repos\tejacques_Trove\src\Trove\Caches\LRUCacheLockless.cs,MoveToHead,The following statement contains a magic number: if ((count = Interlocked.Increment (ref this._cleanupCount)) == 1000) {  	Interlocked.Add (ref this._cleanupCount' -1000);  	this._signal.Set ();  }  
Magic Number,Trove,LRUCacheLockless,C:\repos\tejacques_Trove\src\Trove\Caches\LRUCacheLockless.cs,MoveToHead,The following statement contains a magic number: if ((count = Interlocked.Increment (ref this._cleanupCount)) == 1000) {  	Interlocked.Add (ref this._cleanupCount' -1000);  	this._signal.Set ();  }  
Magic Number,Trove,LRUCacheLockless,C:\repos\tejacques_Trove\src\Trove\Caches\LRUCacheLockless.cs,MoveToHead,The following statement contains a magic number: Interlocked.Add (ref this._cleanupCount' -1000);  
Magic Number,Trove,LRUCache,C:\repos\tejacques_Trove\src\Trove\Caches\LRUCache.cs,LRUCache,The following statement contains a magic number: if (this._ttl > TimeSpan.Zero) {  	this._timer = new Timer (Purge' null' (int)this._ttl.TotalMilliseconds' 5000);  	// 5 seconds  }  
Magic Number,Trove,LRUCache,C:\repos\tejacques_Trove\src\Trove\Caches\LRUCache.cs,LRUCache,The following statement contains a magic number: this._timer = new Timer (Purge' null' (int)this._ttl.TotalMilliseconds' 5000);  
Magic Number,Trove,RedisDataStoreList,C:\repos\tejacques_Trove\src\Trove\DataStores\RedisDataStoreList.cs,RedisDataStoreList,The following statement contains a magic number: if (this.timeToLive < 300) {  	this.timeToLive = 300;  }  
Magic Number,Trove,RedisDataStoreList,C:\repos\tejacques_Trove\src\Trove\DataStores\RedisDataStoreList.cs,RedisDataStoreList,The following statement contains a magic number: if (this.timeToLive < 300) {  	this.timeToLive = 300;  }  
Magic Number,Trove,RedisDataStoreList,C:\repos\tejacques_Trove\src\Trove\DataStores\RedisDataStoreList.cs,RedisDataStoreList,The following statement contains a magic number: this.timeToLive = 300;  
Magic Number,Trove,RedisDataStoreHash,C:\repos\tejacques_Trove\src\Trove\DataStores\RedisDataStoreHash.cs,Set,The following statement contains a magic number: try {  	if (timeToLive <= 0) {  		timeToLive = 300;  	}  	var allTasks = new List<Task> ();  	allTasks.Add (redisConnection.Strings.Set (0' GetRedisKey (key)' JsonSerializer.SerializeToString (value)' timeToLive));  	if (null != pubSubConnection) {  		allTasks.Add (pubSubConnection.Publish (name' PubSubMessageType.Set' new Tuple<K' V> (key' value)));  	}  	await Task.WhenAll (allTasks);  	return true;  }  catch {  	return false;  }  
Magic Number,Trove,RedisDataStoreHash,C:\repos\tejacques_Trove\src\Trove\DataStores\RedisDataStoreHash.cs,Set,The following statement contains a magic number: if (timeToLive <= 0) {  	timeToLive = 300;  }  
Magic Number,Trove,RedisDataStoreHash,C:\repos\tejacques_Trove\src\Trove\DataStores\RedisDataStoreHash.cs,Set,The following statement contains a magic number: timeToLive = 300;  
Magic Number,Trove,RedisDataStore,C:\repos\tejacques_Trove\src\Trove\DataStores\RedisDataStore.cs,Set,The following statement contains a magic number: try {  	if (timeToLive <= 0) {  		timeToLive = 300;  	}  	var allTasks = new List<Task> ();  	allTasks.Add (redisConnection.Strings.Set (0' name' JsonSerializer.SerializeToString (data)' timeToLive));  	if (null != pubSubConnection) {  		allTasks.Add (pubSubConnection.Publish (name' PubSubMessageType.Set' data));  	}  	await Task.WhenAll (allTasks);  	return true;  }  catch {  	return false;  }  
Magic Number,Trove,RedisDataStore,C:\repos\tejacques_Trove\src\Trove\DataStores\RedisDataStore.cs,Set,The following statement contains a magic number: if (timeToLive <= 0) {  	timeToLive = 300;  }  
Magic Number,Trove,RedisDataStore,C:\repos\tejacques_Trove\src\Trove\DataStores\RedisDataStore.cs,Set,The following statement contains a magic number: timeToLive = 300;  
Missing Default,Trove,CascadingDataStoreHash,C:\repos\tejacques_Trove\src\Trove\DataStores\CascadingDataStoreHash.cs,CascadingDataStoreHash,The following switch statement is missing a default case: switch (message.MessageType) {  case PubSubMessageType.Add:  	await this.pubSubAdd (message.Data);  	break;  case PubSubMessageType.Set:  	await this.pubSubSet (message.Data);  	break;  case PubSubMessageType.Expire:  	await this.pubSubExpire (message.Data);  	break;  case PubSubMessageType.Remove:  	await this.pubSubRemove (message.Data);  	break;  }  
Missing Default,Trove,CascadingDataStoreList,C:\repos\tejacques_Trove\src\Trove\DataStores\CascadingDataStoreList.cs,CascadingDataStoreList,The following switch statement is missing a default case: switch (message.MessageType) {  case PubSubMessageType.Add:  	await this.pubSubAdd (message.Data);  	break;  case PubSubMessageType.Remove:  	await this.pubSubRemove (message.Data);  	break;  }  
Missing Default,Trove,CascadingDataStoreList,C:\repos\tejacques_Trove\src\Trove\DataStores\CascadingDataStoreList.cs,CascadingDataStoreList,The following switch statement is missing a default case: switch (message.MessageType) {  case PubSubMessageType.Set:  	await this.pubSubSet (message.Data.Key' message.Data.Value);  	break;  }  
Missing Default,Trove,CascadingDataStoreList,C:\repos\tejacques_Trove\src\Trove\DataStores\CascadingDataStoreList.cs,CascadingDataStoreList,The following switch statement is missing a default case: switch (message.MessageType) {  case PubSubMessageType.Expire:  	await this.pubSubExpire ();  	break;  case PubSubMessageType.Remove:  	switch (message.MessageSubType) {  	case PubSubMessageSubType.Front:  		await this.localDataStore.RemoveFront ();  		break;  	case PubSubMessageSubType.Back:  		await this.localDataStore.RemoveBack ();  		break;  	}  	break;  }  
Missing Default,Trove,CascadingDataStoreList,C:\repos\tejacques_Trove\src\Trove\DataStores\CascadingDataStoreList.cs,CascadingDataStoreList,The following switch statement is missing a default case: switch (message.MessageSubType) {  case PubSubMessageSubType.Front:  	await this.localDataStore.RemoveFront ();  	break;  case PubSubMessageSubType.Back:  	await this.localDataStore.RemoveBack ();  	break;  }  
Missing Default,Trove,CascadingDataStoreList,C:\repos\tejacques_Trove\src\Trove\DataStores\CascadingDataStoreList.cs,CascadingDataStoreList,The following switch statement is missing a default case: switch (message.MessageType) {  case PubSubMessageType.Set:  	await this.pubSubSet (message.Data);  	break;  }  
Missing Default,Trove,CascadingDataStore,C:\repos\tejacques_Trove\src\Trove\DataStores\CascadingDataStore.cs,CascadingDataStore,The following switch statement is missing a default case: switch (message.MessageType) {  case PubSubMessageType.Add:  	await this.pubSubAdd (message.Data);  	break;  case PubSubMessageType.Set:  	await this.pubSubSet (message.Data);  	break;  case PubSubMessageType.Expire:  	await this.pubSubExpire (message.Data);  	break;  case PubSubMessageType.Remove:  	await this.pubSubRemove (message.Data);  	break;  }  
