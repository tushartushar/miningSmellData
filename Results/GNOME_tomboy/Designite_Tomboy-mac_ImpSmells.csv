Implementation smell,Namespace,Class,File,Method,Description
Long Method,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AddNewline,The method has 100 lines of code.
Long Method,Tomboy,NoteBufferArchiver,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,Serialize,The method has 165 lines of code.
Long Method,Tomboy,NoteTagTable,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,InitCommonTags,The method has 109 lines of code.
Long Method,Tomboy,NoteTextMenu,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,NoteTextMenu,The method has 108 lines of code.
Long Method,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,NoteRecentChanges,The method has 107 lines of code.
Long Method,Tomboy,Tomboy,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,Main,The method has 121 lines of code.
Long Method,Tomboy,Tomboy,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,OnShowAboutAction,The method has 132 lines of code.
Long Method,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The method has 115 lines of code.
Long Method,Tomboy,NoteRenameDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteRenameDialog.cs,NoteRenameDialog,The method has 108 lines of code.
Long Method,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,SynchronizationThread,The method has 236 lines of code.
Long Method,Tomboy.Sync,FileSystemSyncServer,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\FileSystemSyncServer.cs,CommitSyncTransaction,The method has 105 lines of code.
Complex Method,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,lab_to_rgb,Cyclomatic complexity of the method is 10
Complex Method,Tomboy,Note,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,QueueSave,Cyclomatic complexity of the method is 9
Complex Method,Tomboy,Note,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,ProcessRenameLinkUpdate,Cyclomatic complexity of the method is 14
Complex Method,Tomboy,Note,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,LoadForeignNoteXml,Cyclomatic complexity of the method is 12
Complex Method,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AddNewline,Cyclomatic complexity of the method is 13
Complex Method,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,LineNeedsBullet,Cyclomatic complexity of the method is 9
Complex Method,Tomboy,NoteBufferArchiver,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,Serialize,Cyclomatic complexity of the method is 34
Complex Method,Tomboy,NoteBufferArchiver,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,Deserialize,Cyclomatic complexity of the method is 46
Complex Method,Tomboy,NoteManager,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteManager.cs,Initialize,Cyclomatic complexity of the method is 14
Complex Method,Tomboy,NoteManager,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteManager.cs,LoadNotes,Cyclomatic complexity of the method is 12
Complex Method,Tomboy,NoteTag,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,OnTextEvent,Cyclomatic complexity of the method is 19
Complex Method,Tomboy,NoteTagTable,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,GetChangeType,Cyclomatic complexity of the method is 13
Complex Method,Tomboy,NoteWindow,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,KeyPressed,Cyclomatic complexity of the method is 8
Complex Method,Tomboy,NoteFindBar,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,KeyPressed,Cyclomatic complexity of the method is 15
Complex Method,Tomboy,Preferences,F:\newReposMay17\GNOME_tomboy\Tomboy\Preferences.cs,GetDefault,Cyclomatic complexity of the method is 33
Complex Method,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnTreeViewButtonPressed,Cyclomatic complexity of the method is 19
Complex Method,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnTreeViewKeyPressed,Cyclomatic complexity of the method is 10
Complex Method,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnNotebooksTreeButtonPressed,Cyclomatic complexity of the method is 16
Complex Method,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnNotebooksKeyPressed,Cyclomatic complexity of the method is 9
Complex Method,Tomboy,TomboyCommandLine,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,Parse,Cyclomatic complexity of the method is 61
Complex Method,Tomboy,TomboyCommandLine,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,Execute,Cyclomatic complexity of the method is 24
Complex Method,Tomboy,TomboyTray,F:\newReposMay17\GNOME_tomboy\Tomboy\Tray.cs,AddRecentlyChangedNotes,Cyclomatic complexity of the method is 17
Complex Method,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,GetPrettyPrintDate,Cyclomatic complexity of the method is 8
Complex Method,Tomboy,HIGMessageDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,HIGMessageDialog,Cyclomatic complexity of the method is 37
Complex Method,Tomboy,MouseHandWatcher,F:\newReposMay17\GNOME_tomboy\Tomboy\Watchers.cs,OnEditorKeyPress,Cyclomatic complexity of the method is 17
Complex Method,Tomboy,MouseHandWatcher,F:\newReposMay17\GNOME_tomboy\Tomboy\Watchers.cs,OnEditorKeyRelease,Cyclomatic complexity of the method is 9
Complex Method,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,HandlePreferencesSettingChanged,Cyclomatic complexity of the method is 9
Complex Method,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,Cyclomatic complexity of the method is 9
Complex Method,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,OnAdvancedSyncConfigButton,Cyclomatic complexity of the method is 10
Complex Method,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,OnAppAddinListChanged,Cyclomatic complexity of the method is 10
Complex Method,Tomboy,NoteEditor,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteEditor.cs,OnFontSettingChanged,Cyclomatic complexity of the method is 10
Complex Method,Tomboy,NoteEditor,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteEditor.cs,OnDragDataReceived,Cyclomatic complexity of the method is 9
Complex Method,Tomboy,NoteEditor,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteEditor.cs,KeyPressed,Cyclomatic complexity of the method is 30
Complex Method,Tomboy,ExportAllApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\ExportAllApplicationAddin.cs,ParseArgs,Cyclomatic complexity of the method is 11
Complex Method,Tomboy,ExportAllApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\ExportAllApplicationAddin.cs,ExportNotebookButtonClicked,Cyclomatic complexity of the method is 8
Complex Method,Tomboy,ExportAllApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\ExportAllApplicationAddin.cs,ResolveRelativePath,Cyclomatic complexity of the method is 9
Complex Method,Tomboy,NoteAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteAddin.cs,Dispose,Cyclomatic complexity of the method is 11
Complex Method,Tomboy,NoteAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteAddin.cs,OnNoteOpenedEvent,Cyclomatic complexity of the method is 10
Complex Method,Tomboy,AddinManager,F:\newReposMay17\GNOME_tomboy\Tomboy\AddinManager.cs,InitializeMonoAddins,Cyclomatic complexity of the method is 8
Complex Method,Tomboy,AddinManager,F:\newReposMay17\GNOME_tomboy\Tomboy\AddinManager.cs,OnApplicationAddinExtensionChanged,Cyclomatic complexity of the method is 10
Complex Method,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,BackgroundSyncChecker,Cyclomatic complexity of the method is 9
Complex Method,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,SynchronizationThread,Cyclomatic complexity of the method is 34
Complex Method,Tomboy.Sync,TomboySyncClient,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\TomboySyncClient.cs,Parse,Cyclomatic complexity of the method is 16
Complex Method,Tomboy.Sync,FileSystemSyncServer,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\FileSystemSyncServer.cs,GetNoteUpdatesSince,Cyclomatic complexity of the method is 11
Complex Method,Tomboy.Sync,FileSystemSyncServer,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\FileSystemSyncServer.cs,CommitSyncTransaction,Cyclomatic complexity of the method is 19
Complex Method,Tomboy.Sync,SilentUI,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SilentUI.cs,SyncStateChanged,Cyclomatic complexity of the method is 10
Complex Method,Tomboy.Notebooks,NotebookApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\NotebookApplicationAddin.cs,Initialize,Cyclomatic complexity of the method is 8
Long Parameter List,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,rgb_to_lab,The method has 6 parameters.
Long Parameter List,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,lab_to_rgb,The method has 6 parameters.
Long Parameter List,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,lab_distance,The method has 6 parameters.
Long Parameter List,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,SerializeToHtml,The method has 5 parameters.
Long Parameter List,Tomboy,HIGMessageDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,HIGMessageDialog,The method has 6 parameters.
Long Parameter List,Tomboy,NoteEditor,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteEditor.cs,OnDragDataReceived,The method has 6 parameters.
Long Parameter List,Tomboy.Notebooks,NotebooksTreeView,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\NotebooksTreeView.cs,OnDragDataReceived,The method has 6 parameters.
Long Identifier,Tomboy,NoteManager,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteManager.cs,Initialize,The length of the parameter migration_note_content_template is 31.
Long Statement,Tomboy,ActionManager,F:\newReposMay17\GNOME_tomboy\Tomboy\ActionManager.cs,LoadInterface,The length of the statement  "	Gtk.ImageMenuItem imageitem = Tomboy.ActionManager.GetWidget ("/MainWindowMenubar/FileMenu/FileMenuNewNotePlaceholder/NewNote") as Gtk.ImageMenuItem; " is 149.
Long Statement,Tomboy,ActionManager,F:\newReposMay17\GNOME_tomboy\Tomboy\ActionManager.cs,PopulateActionGroups,The length of the statement  "		new Gtk.ActionEntry ("NewNoteAction"' Gtk.Stock.New' Catalog.GetString ("_New")' "<Control>N"' Catalog.GetString ("Create a new note")' null)' " is 142.
Long Statement,Tomboy,ActionManager,F:\newReposMay17\GNOME_tomboy\Tomboy\ActionManager.cs,PopulateActionGroups,The length of the statement  "		new Gtk.ActionEntry ("OpenNoteAction"' Gtk.Stock.Open' Catalog.GetString ("_Open...")' "<Control>O"' Catalog.GetString ("Open the selected note")' null)' " is 153.
Long Statement,Tomboy,ActionManager,F:\newReposMay17\GNOME_tomboy\Tomboy\ActionManager.cs,PopulateActionGroups,The length of the statement  "		new Gtk.ActionEntry ("DeleteNoteAction"' Gtk.Stock.Delete' Catalog.GetString ("_Delete")' "Delete"' Catalog.GetString ("Delete the selected note")' null)' " is 154.
Long Statement,Tomboy,ActionManager,F:\newReposMay17\GNOME_tomboy\Tomboy\ActionManager.cs,PopulateActionGroups,The length of the statement  "		new Gtk.ActionEntry ("CloseWindowAction"' Gtk.Stock.Close' Catalog.GetString ("_Close")' "<Control>W"' Catalog.GetString ("Close this window")' null)' " is 150.
Long Statement,Tomboy,ActionManager,F:\newReposMay17\GNOME_tomboy\Tomboy\ActionManager.cs,PopulateActionGroups,The length of the statement  "		new Gtk.ActionEntry ("QuitTomboyAction"' Gtk.Stock.Quit' Catalog.GetString ("_Quit")' "<Control>Q"' Catalog.GetString ("Quit Tomboy")' null)' " is 141.
Long Statement,Tomboy,ActionManager,F:\newReposMay17\GNOME_tomboy\Tomboy\ActionManager.cs,PopulateActionGroups,The length of the statement  "		new Gtk.ActionEntry ("ShowPreferencesAction"' Gtk.Stock.Preferences' Catalog.GetString ("_Preferences")' null' Catalog.GetString ("Tomboy Preferences")' null)' " is 159.
Long Statement,Tomboy,ActionManager,F:\newReposMay17\GNOME_tomboy\Tomboy\ActionManager.cs,PopulateActionGroups,The length of the statement  "		new Gtk.ActionEntry ("ShowHelpAction"' Gtk.Stock.Help' Catalog.GetString ("_Contents")' "F1"' Catalog.GetString ("Tomboy Help")' null)' " is 135.
Long Statement,Tomboy,ActionManager,F:\newReposMay17\GNOME_tomboy\Tomboy\ActionManager.cs,PopulateActionGroups,The length of the statement  "		new Gtk.ActionEntry ("ShowAboutAction"' Gtk.Stock.About' Catalog.GetString ("_About")' null' Catalog.GetString ("About Tomboy")' null)' " is 135.
Long Statement,Tomboy,ActionManager,F:\newReposMay17\GNOME_tomboy\Tomboy\ActionManager.cs,PopulateActionGroups,The length of the statement  "		new Gtk.ActionEntry ("TrayNewNoteAction"' Gtk.Stock.New' Catalog.GetString ("Create _New Note")' null' Catalog.GetString ("Create a new note")' null)' " is 150.
Long Statement,Tomboy,ActionManager,F:\newReposMay17\GNOME_tomboy\Tomboy\ActionManager.cs,PopulateActionGroups,The length of the statement  "		new Gtk.ActionEntry ("ShowSearchAllNotesAction"' Gtk.Stock.Find' Catalog.GetString ("_Search All Notes")' null' Catalog.GetString ("Open the Search All Notes window")' null)' " is 174.
Long Statement,Tomboy,ActionManager,F:\newReposMay17\GNOME_tomboy\Tomboy\ActionManager.cs,PopulateActionGroups,The length of the statement  "		new Gtk.ActionEntry ("NoteSynchronizationAction"' null' Catalog.GetString ("S_ynchronize Notes")' null' Catalog.GetString ("Start synchronizing notes")' null) " is 158.
Long Statement,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The length of the statement  "	cd = (float)Math.Sqrt (Math.Pow (Math.Abs (a - points [max_color' 1])' 2.0f) + Math.Pow (Math.Abs (b - points [max_color' 2])' 2.0f)); " is 134.
Long Statement,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The length of the statement  "	lab_to_rgb (points [max_color' 0]' points [max_color' 1]' points [max_color' 2]' out rcolor.Red' out rcolor.Green' out rcolor.Blue); " is 132.
Long Statement,Tomboy,ConsoleLogger,F:\newReposMay17\GNOME_tomboy\Tomboy\Logger.cs,Log,The length of the statement  "	Console.Write ("[{0} {1:00}:{2:00}:{3:00}.{4:000}]"' Enum.GetName (typeof(Level)' lvl)' DateTime.Now.Hour' DateTime.Now.Minute' DateTime.Now.Second' DateTime.Now.Millisecond); " is 175.
Long Statement,Tomboy,FileLogger,F:\newReposMay17\GNOME_tomboy\Tomboy\Logger.cs,Log,The length of the statement  "			console.Log (Level.ERROR' "Failed to write to the log file due to exception: {0}' stack trace: {1}"' ex.Message' ex.StackTrace); " is 128.
Long Statement,Tomboy,NoteUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,ShowDeletionDialog,The length of the statement  "			message = string.Format (Catalog.GetPluralString ("Really delete this {0} note?"' "Really delete these {0} notes?"' notes.Count)' notes.Count); " is 143.
Long Statement,Tomboy,NoteUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,ShowDeletionDialog,The length of the statement  "		HIGMessageDialog dialog = new HIGMessageDialog (parent' Gtk.DialogFlags.DestroyWithParent' Gtk.MessageType.Question' Gtk.ButtonsType.None' message' Catalog.GetString ("If you delete a note it is " + "permanently lost.")); " is 221.
Long Statement,Tomboy,NoteUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,ShowIOErrorDialog,The length of the statement  "	string errorMsg = Catalog.GetString ("An error occurred while saving your notes. " + "Please check that you have sufficient disk " + "space' and that you have appropriate rights " + "on {0}. Error details can be found in " + "{1}.\n\n" + "Note autosaving is disabled until you close this dialog' " + "to allow you to take an appropriate action."); " is 347.
Long Statement,Tomboy,NoteUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,ShowIOErrorDialog,The length of the statement  "	HIGMessageDialog dialog = new HIGMessageDialog (parent' Gtk.DialogFlags.DestroyWithParent' Gtk.MessageType.Error' Gtk.ButtonsType.Ok' Catalog.GetString ("Error saving note data.")' errorMsg); " is 191.
Long Statement,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,SerializeToHtml,The length of the statement  "	if (start.Equals (end) || start.Equals (Gtk.TextIter.Zero) || end.Equals (Gtk.TextIter.Zero) || HtmlTransform == null) { " is 120.
Long Statement,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,SerializeToHtml,The length of the statement  "	string xml = String.Format ("<note version=\"0.3\" xmlns:link=\"http://beatniksoftware.com/tomboy/link\" xmlns:size=\"http://beatniksoftware.com/tomboy/size\">{0}</note>"' NoteBufferArchiver.Serialize (register_buffer' start' end)); " is 232.
Long Statement,Tomboy,NoteManager,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteManager.cs,Initialize,The length of the statement  "		string migration_note_content_template = Catalog.GetString (// Translators: The contents (not including the title) of the data migration note. {0}' {1}' {2}' {3}' and {4} are replaced by directory paths and should not be changed " is 228.
Long Statement,Tomboy,NoteManager,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteManager.cs,Initialize,The length of the statement  "		@"In the latest version of Tomboy' your note files have moved.  You have probably never cared where your notes are stored' and if you still don't care' please go ahead and <bold>delete this note</bold>.  :-)" is 207.
Long Statement,Tomboy,NoteManager,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteManager.cs,Initialize,The length of the statement  "Your old note directory is still safe and sound at <link:url>{0}</link:url> . If you go back to an older version of Tomboy' it will look for notes there." is 153.
Long Statement,Tomboy,NoteManager,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteManager.cs,Initialize,The length of the statement  "		string migration_note_content = "<note-content version=\"1.0\">" + migration_note_title + "\n\n" + string.Format (migration_note_content_template' old_notes_dir + Path.DirectorySeparatorChar' notes_dir + Path.DirectorySeparatorChar' conf_dir + Path.DirectorySeparatorChar' Path.Combine (conf_dir' "addins") + Path.DirectorySeparatorChar' Services.NativeApplication.LogDirectory + Path.DirectorySeparatorChar) + "</note-content>"; " is 429.
Long Statement,Tomboy,NoteManager,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteManager.cs,CreateStartNotes,The length of the statement  "	string start_note_content = Catalog.GetString ("<note-content>" + "Start Here\n\n" + "<bold>Welcome to Tomboy!</bold>\n\n" + "Use this \"Start Here\" note to begin organizing " + "your ideas and thoughts.\n\n" + "You can create new notes to hold your ideas by " + "selecting the \"Create New Note\" item from the " + "Tomboy Notes menu. " + "Your note will be saved automatically.\n\n" + "Then organize the notes you create by linking " + "related notes and ideas together!\n\n" + "We've created a note called " + "<link:internal>Using Links in Tomboy</link:internal>.  " + "Notice how each time we type <link:internal>Using " + "Links in Tomboy</link:internal> it automatically " + "gets underlined?  Click on the link to open the note." + "</note-content>"); " is 760.
Long Statement,Tomboy,NoteManager,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteManager.cs,CreateStartNotes,The length of the statement  "	string links_note_content = Catalog.GetString ("<note-content>" + "Using Links in Tomboy\n\n" + "Notes in Tomboy can be linked together by " + "highlighting text in the current note and clicking" + " the <bold>Link</bold> button above in the toolbar.  " + "Doing so will create a new note and also underline " + "the note's title in the current note.\n\n" + "Changing the title of a note will update links " + "present in other notes.  This prevents broken links " + "from occurring when a note is renamed.\n\n" + "Also' if you type the name of another note in your " + "current note' it will automatically be linked for you." + "</note-content>"); " is 648.
Long Statement,Tomboy,NoteManager,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteManager.cs,LoadNotes,The length of the statement  "			Gtk.MessageDialog md = new Gtk.MessageDialog (null' Gtk.DialogFlags.DestroyWithParent' Gtk.MessageType.Error' Gtk.ButtonsType.Close' "Skipping a note.\n {0} can not be loaded - Error loading file!"' file_path); " is 210.
Long Statement,Tomboy,NoteManager,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteManager.cs,LoadNotes,The length of the statement  "			Gtk.MessageDialog md = new Gtk.MessageDialog (null' Gtk.DialogFlags.DestroyWithParent' Gtk.MessageType.Error' Gtk.ButtonsType.Close' "Skipping a note.\n {0} can not be loaded - Access denied!"' file_path); " is 205.
Long Statement,Tomboy,NoteManager,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteManager.cs,Create,The length of the statement  "		temp_title = String.Format (Catalog.GetString ("Note from {0}")' DateTime.Now.ToString (Catalog.GetString ("yyyy-MM-dd HH:mm:ss.fff"))); " is 136.
Long Statement,Tomboy,NoteManager,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteManager.cs,CreateNewNote,The length of the statement  "	string content = String.Format ("<note-content>{0}{1}</note-content>"' XmlEncoder.Encode (header)' XmlEncoder.Encode (body)); " is 125.
Long Statement,Tomboy,NoteManager,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteManager.cs,CreateNoteFromTemplate,The length of the statement  "	string xml_content = template_note.XmlContent.Replace (XmlEncoder.Encode (template_note.Title)' XmlEncoder.Encode (title)); " is 123.
Long Statement,Tomboy,NoteTag,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,OnTextEvent,The length of the statement  "		/* Don't activate if Shift or Control is pressed */if ((int)(button_ev.State & (Gdk.ModifierType.ShiftMask | Gdk.ModifierType.ControlMask)) != 0) " is 145.
Long Statement,Tomboy,NoteWindow,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,OnPopulatePopup,The length of the statement  "	search.AddAccelerator ("activate"' accel_group' (uint)Gdk.Key.f' (Gdk.ModifierType.ControlMask | Gdk.ModifierType.ShiftMask)' Gtk.AccelFlags.Visible); " is 150.
Long Statement,Tomboy,NoteWindow,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,OnPopulatePopup,The length of the statement  "	close_all.AddAccelerator ("activate"' accel_group' (uint)Gdk.Key.q' Gdk.ModifierType.ControlMask' Gtk.AccelFlags.Visible); " is 122.
Long Statement,Tomboy,NoteWindow,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,OnPopulatePopup,The length of the statement  "	close_window.AddAccelerator ("activate"' accel_group' (uint)Gdk.Key.w' Gdk.ModifierType.ControlMask' Gtk.AccelFlags.Visible); " is 125.
Long Statement,Tomboy,NoteWindow,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,MakeToolbar,The length of the statement  "	search.AddAccelerator ("clicked"' accel_group' (uint)Gdk.Key.f' (Gdk.ModifierType.ControlMask | Gdk.ModifierType.ShiftMask)' Gtk.AccelFlags.Visible); " is 149.
Long Statement,Tomboy,NoteWindow,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,MakeToolbar,The length of the statement  "	link_button.AddAccelerator ("clicked"' accel_group' (uint)Gdk.Key.l' Gdk.ModifierType.ControlMask' Gtk.AccelFlags.Visible); " is 123.
Long Statement,Tomboy,NoteWindow,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,MakeTemplateBar,The length of the statement  "	var infoLabel = new Gtk.Label (Catalog.GetString ("This note is a template note. It determines " + "the default content of regular notes' and will " + "not show up in the note menu or search window.")); " is 202.
Long Statement,Tomboy,NoteWindow,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,MakeFindMenu,The length of the statement  "	find_next.AddAccelerator ("activate"' accel_group' (uint)Gdk.Key.g' Gdk.ModifierType.ControlMask' Gtk.AccelFlags.Visible); " is 122.
Long Statement,Tomboy,NoteWindow,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,MakeFindMenu,The length of the statement  "	find_previous.AddAccelerator ("activate"' accel_group' (uint)Gdk.Key.g' (Gdk.ModifierType.ControlMask | Gdk.ModifierType.ShiftMask)' Gtk.AccelFlags.Visible); " is 157.
Long Statement,Tomboy,NoteWindow,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,LinkButtonClicked,The length of the statement  "			HIGMessageDialog dialog = new HIGMessageDialog (this' Gtk.DialogFlags.DestroyWithParent' Gtk.MessageType.Error' Gtk.ButtonsType.Ok' Catalog.GetString ("Cannot create note")' e.Message); " is 185.
Long Statement,Tomboy,NoteFindBar,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,FindMatchesInBuffer,The length of the statement  "			bool word_found = searchiter.ForwardSearch (word' TextSearchFlags.VisibleOnly' out startiter' out enditer' buffer.EndIter); " is 123.
Long Statement,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,NoMatchesFoundAction,The length of the statement  "	String message = Catalog.GetString ("No results found " + "in the selected notebook.\nClick here to " + "search across all notes."); " is 132.
Long Statement,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,NoMatchesFoundAction,The length of the statement  "	no_matches_found_table.Attach (link_button' 1' 2' 0' 1' Gtk.AttachOptions.Fill | Gtk.AttachOptions.Shrink' Gtk.AttachOptions.Shrink' 0' 0); " is 139.
Long Statement,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnTreeViewButtonPressed,The length of the statement  "		if (tree.Selection.PathIsSelected (path) && (args.Event.State & (Gdk.ModifierType.ControlMask | Gdk.ModifierType.ShiftMask)) == 0) { " is 132.
Long Statement,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnTreeViewButtonReleased,The length of the statement  "	if (!Gtk.Drag.CheckThreshold (tree' clickX' clickY' (int)args.Event.X' (int)args.Event.Y) && ((args.Event.State & (Gdk.ModifierType.ControlMask | Gdk.ModifierType.ShiftMask)) == 0) && tree.Selection.CountSelectedRows () > 1) { " is 226.
Long Statement,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnNewNotebookNote,The length of the statement  "		string xmlContent = templateNote.XmlContent.Replace (XmlEncoder.Encode (templateNote.Title)' XmlEncoder.Encode (note.Title)); " is 125.
Long Statement,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,RestorePosition,The length of the statement  "	if (x == null || !(x is int) || y == null || !(y is int) || width == null || !(width is int) || height == null || !(height is int) || splitter_pos == null || !(splitter_pos is int) || mon == null || !(mon is int)) " is 213.
Long Statement,Tomboy,Tomboy,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,OnNewNoteAction,The length of the statement  "		HIGMessageDialog dialog = new HIGMessageDialog (null' 0' Gtk.MessageType.Error' Gtk.ButtonsType.Ok' Catalog.GetString ("Cannot create new note")' e.Message); " is 157.
Long Statement,Tomboy,TomboyCommandLine,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,PrintAbout,The length of the statement  "	string about = Catalog.GetString ("Tomboy: A simple' easy to use desktop note-taking " + "application.\n" + "Copyright \xa9 2004-2007 Alex Graveley\n" + "<alex@beatniksoftware.com>\n\n" + "Copyright \xa9 2004-2017 Others\n"); " is 225.
Long Statement,Tomboy,TomboyCommandLine,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,PrintUsage,The length of the statement  "	string usage = Catalog.GetString ("Usage:\n" + "  --version\t\t\tPrint version information.\n" + "  --help\t\t\tPrint this usage message.\n" + "  --note-path [path]\t\tLoad/store note data in this " + "directory.\n" + "  --search [text]\t\tOpen the search all notes window with " + "the search text.\n"); " is 304.
Long Statement,Tomboy,TomboyCommandLine,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,PrintUsage,The length of the statement  "	usage += Catalog.GetString ("  --new-note\t\t\tCreate and display a new note.\n" + "  --new-note [title]\t\tCreate and display a new note' " + "with a title.\n" + "  --open-note [title/url]\tDisplay the existing note " + "matching title.\n" + "  --start-here\t\t\tDisplay the 'Start Here' note.\n" + "  --highlight-search [text]\tSearch and highlight text " + "in the opened note.\n"); " is 385.
Long Statement,Tomboy,TomboyCommandLine,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,PrintUsage,The length of the statement  "	usage += Catalog.GetString ("  --addin:html-export-all [path]\tExports all notes to " + "HTML in the given location.\n" + "  --addin:html-export-all-quit [path]\tExports all notes to " + "HTML in the given location and then quits.\n"); " is 235.
Long Statement,Tomboy,TomboyCommandLine,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,Parse,The length of the statement  "			if (idx + 1 >= args.Length || (args [idx + 1] != null && args [idx + 1] != String.Empty && args [idx + 1] [0] == '-')) { " is 120.
Long Statement,Tomboy,TomboyCommandLine,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,Parse,The length of the statement  "			if (idx + 1 >= args.Length || (args [idx + 1] != null && args [idx + 1] != String.Empty && args [idx + 1] [0] == '-')) { " is 120.
Long Statement,Tomboy,TomboyCommandLine,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,Parse,The length of the statement  "			if (idx + 1 >= args.Length || (args [idx + 1] != null && args [idx + 1] != String.Empty && args [idx + 1] [0] == '-')) { " is 120.
Long Statement,Tomboy,TomboyTray,F:\newReposMay17\GNOME_tomboy\Tomboy\Tray.cs,MakeTrayNotesMenu,The length of the statement  "		Gtk.MenuItem item = Tomboy.ActionManager.GetWidget ("/TrayIconMenu/TrayNewNotePlaceholder/TrayNewNote") as Gtk.MenuItem; " is 120.
Long Statement,Tomboy,TomboyTray,F:\newReposMay17\GNOME_tomboy\Tomboy\Tray.cs,AddRecentlyChangedNotes,The length of the statement  "	Gtk.MenuItem newNoteItem = Tomboy.ActionManager.GetWidget ("/TrayIconMenu/TrayNewNotePlaceholder/TrayNewNote") as Gtk.MenuItem; " is 127.
Long Statement,Tomboy,TomboyTray,F:\newReposMay17\GNOME_tomboy\Tomboy\Tray.cs,AddRecentlyChangedNotes,The length of the statement  "	IList<Gtk.Widget> allChildWidgets = Tomboy.ActionManager.GetPlaceholderChildren ("/TrayIconMenu/TrayNewNotePlaceholder"); " is 121.
Long Statement,Tomboy,TrieTree,F:\newReposMay17\GNOME_tomboy\Tomboy\Trie.cs,FindMatches,The length of the statement  "			matches.Add (new TrieHit (start_index' start_index + hit_length' haystack.Substring (start_index' hit_length)' current_state.Payload)); " is 135.
Long Statement,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,ShowHelp,The length of the statement  "		string message = Catalog.GetString ("The \"Tomboy Notes Manual\" could " + "not be found.  Please verify " + "that your installation has been " + "completed successfully."); " is 173.
Long Statement,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,ShowHelp,The length of the statement  "		HIGMessageDialog dialog = new HIGMessageDialog (parent' Gtk.DialogFlags.DestroyWithParent' Gtk.MessageType.Error' Gtk.ButtonsType.Ok' Catalog.GetString ("Help not found")' message); " is 181.
Long Statement,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,ShowOpeningLocationError,The length of the statement  "	HIGMessageDialog dialog = new HIGMessageDialog (parent' Gtk.DialogFlags.DestroyWithParent' Gtk.MessageType.Info' Gtk.ButtonsType.Ok' Catalog.GetString ("Cannot open location")' message); " is 186.
Long Statement,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,GetPrettyPrintDate,The length of the statement  "			pretty_str = show_time ? String.Format (Catalog.GetString ("Yesterday' {0}")' short_time) : Catalog.GetString ("Yesterday"); " is 124.
Long Statement,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,GetPrettyPrintDate,The length of the statement  "			pretty_str = show_time ? String.Format (Catalog.GetPluralString ("{0} day ago' {1}"' "{0} days ago' {1}"' now.DayOfYear - date.DayOfYear)' now.DayOfYear - date.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("{0} day ago"' "{0} days ago"' now.DayOfYear - date.DayOfYear)' now.DayOfYear - date.DayOfYear); " is 321.
Long Statement,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,GetPrettyPrintDate,The length of the statement  "			pretty_str = show_time ? String.Format (Catalog.GetString ("Tomorrow' {0}")' short_time) : Catalog.GetString ("Tomorrow"); " is 122.
Long Statement,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,GetPrettyPrintDate,The length of the statement  "			pretty_str = show_time ? String.Format (Catalog.GetPluralString ("In {0} day' {1}"' "In {0} days' {1}"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("In {0} day"' "In {0} days"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear); " is 317.
Long Statement,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,GetPrettyPrintDate,The length of the statement  "			pretty_str = show_time ? date.ToString (Catalog.GetString ("MMMM d' h:mm tt")) : date.ToString (Catalog.GetString ("MMMM d")); " is 126.
Long Statement,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,GetPrettyPrintDate,The length of the statement  "		pretty_str = show_time ? date.ToString (Catalog.GetString ("MMMM d yyyy' h:mm tt")) : date.ToString (Catalog.GetString ("MMMM d yyyy")); " is 136.
Long Statement,Tomboy,NoteRenameWatcher,F:\newReposMay17\GNOME_tomboy\Tomboy\Watchers.cs,ShowNameClashError,The length of the statement  "	string message = String.Format (Catalog.GetString ("A note with the title " + "<b>{0}</b> already exists. " + "Please choose another name " + "for this note before " + "continuing.")' title); " is 191.
Long Statement,Tomboy,NoteRenameWatcher,F:\newReposMay17\GNOME_tomboy\Tomboy\Watchers.cs,ShowNameClashError,The length of the statement  "		title_taken_dialog = new HIGMessageDialog (Window' Gtk.DialogFlags.DestroyWithParent' Gtk.MessageType.Warning' Gtk.ButtonsType.Ok' Catalog.GetString ("Note title taken")' message); " is 180.
Long Statement,Tomboy,NoteLinkWatcher,F:\newReposMay17\GNOME_tomboy\Tomboy\Watchers.cs,DoHighlight,The length of the statement  "	if ((!title_start.StartsWord () && !title_start.StartsSentence ()) || (!title_end.EndsWord () && !title_end.EndsSentence ())) " is 125.
Long Statement,Tomboy,MouseHandWatcher,F:\newReposMay17\GNOME_tomboy\Tomboy\Watchers.cs,OnEditorMotion,The length of the statement  "	Window.Editor.WindowToBufferCoords (Gtk.TextWindowType.Widget' (int)args.Event.X' (int)args.Event.Y' out buffer_x' out buffer_y); " is 129.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeEditingPane,The length of the statement  "	label = MakeTipLabel (Catalog.GetString ("Enable this option to highlight " + "words <b>ThatLookLikeThis</b>. " + "Clicking the word will create a " + "note with that name.")); " is 176.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeEditingPane,The length of the statement  "	search_match_color_peditor = Services.Factory.CreatePropertyEditorToggleButton (Preferences.ENABLE_CUSTOM_SEARCH_MATCH_COLOR' check); " is 133.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeEditingPane,The length of the statement  "	rename_behavior_combo.Changed += (o' e) => Preferences.Set (Preferences.NOTE_RENAME_BEHAVIOR' rename_behavior_combo.Active); " is 124.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeEditingPane,The length of the statement  "	label = MakeTipLabel (Catalog.GetString ("Use the new note template to specify the text " + "that should be used when creating a new note.")); " is 142.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeHotkeysPane,The length of the statement  "	label = MakeTipLabel (Catalog.GetString ("Hotkeys allow you to quickly access " + "your notes from anywhere with a keypress. " + "Example Hotkeys: " + "<b>&lt;ALT&gt;F11</b>' " + "<b>&lt;ALT&gt;N</b>")); " is 203.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The length of the statement  "	if (syncAddinPrefsWidget != null && addin_id != null && syncAddinIters.ContainsKey (addin_id) && selectedSyncAddin.IsConfigured) " is 128.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The length of the statement  "	resetSyncAddinButton.Sensitive = (selectedSyncAddin != null && addin_id == selectedSyncAddin.Id && selectedSyncAddin.IsConfigured); " is 131.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The length of the statement  "	saveSyncAddinButton.Sensitive = (selectedSyncAddin != null && (addin_id != selectedSyncAddin.Id || !selectedSyncAddin.IsConfigured)); " is 133.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The length of the statement  "	syncAddinCombo.Sensitive = (selectedSyncAddin == null || addin_id != selectedSyncAddin.Id || !selectedSyncAddin.IsConfigured); " is 126.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeAddinsPane,The length of the statement  "	Gtk.LinkButton get_more_link = new Gtk.LinkButton ("https://wiki.gnome.org/Apps/Tomboy/PluginList"' Catalog.GetString ("Get More Add-Ins...")); " is 143.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,OnAddinPrefsButton,The length of the statement  "		dialog = new Gtk.Dialog (string.Format (Catalog.GetString ("{0} Preferences")' addin.Name)' this' Gtk.DialogFlags.DestroyWithParent | Gtk.DialogFlags.NoSeparator' Gtk.Stock.Close' Gtk.ResponseType.Close); " is 204.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,OnAdvancedSyncConfigButton,The length of the statement  "	Gtk.Dialog advancedDlg = new Gtk.Dialog (Catalog.GetString ("Other Synchronization Options")' this' Gtk.DialogFlags.DestroyWithParent | Gtk.DialogFlags.Modal | Gtk.DialogFlags.NoSeparator' Gtk.Stock.Close' Gtk.ResponseType.Close); " is 230.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,OnAdvancedSyncConfigButton,The length of the statement  "	Gtk.Label label = new Gtk.Label (Catalog.GetString ("When a conflict is detected between " + "a local note and a note on the configured " + "synchronization server:")); " is 168.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,OnAdvancedSyncConfigButton,The length of the statement  "	overwriteOnConflictRadio = new Gtk.RadioButton (promptOnConflictRadio' Catalog.GetString ("Replace my local note with the server's update.")); " is 142.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,OnResetSyncAddinButton,The length of the statement  "		HIGMessageDialog dialog = new HIGMessageDialog (null' Gtk.DialogFlags.Modal' Gtk.MessageType.Question' Gtk.ButtonsType.YesNo' Catalog.GetString ("Are you sure?")' Catalog.GetString ("Clearing your synchronization settings is not recommended.  " + "You may be forced to synchronize all of your notes again " + "when you save new settings.")); " is 341.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,OnResetSyncAddinButton,The length of the statement  "		HIGMessageDialog dialog = new HIGMessageDialog (null' Gtk.DialogFlags.Modal' Gtk.MessageType.Info' Gtk.ButtonsType.Ok' Catalog.GetString ("Resetting Synchronization Settings")' Catalog.GetString ("You have disabled the configured synchronization service.  " + "Your synchronization settings will now be cleared.  " + "You may be forced to synchronize all of your notes again " + "when you save new settings.")); " is 411.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,OnResetSyncAddinButton,The length of the statement  "	Preferences.Set (Preferences.SYNC_CONFIGURED_CONFLICT_BEHAVIOR' Preferences.GetDefault (Preferences.SYNC_CONFIGURED_CONFLICT_BEHAVIOR)); " is 136.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,OnSaveSyncAddinButton,The length of the statement  "		Logger.Debug ("Unexpected error calling {0}.SaveConfiguration: {1}\n{2}"' selectedSyncAddin.Id' e.Message' e.StackTrace); " is 121.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,OnSaveSyncAddinButton,The length of the statement  "		dialog = new HIGMessageDialog (this' Gtk.DialogFlags.Modal' Gtk.MessageType.Info' Gtk.ButtonsType.YesNo' Catalog.GetString ("Connection successful")' Catalog.GetString ("Tomboy is ready to synchronize your notes. Would you like to synchronize them now?")); " is 256.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,OnSaveSyncAddinButton,The length of the statement  "			errorMsg = Catalog.GetString ("Please check your information and " + "try again.  The log file {0} may " + "contain more information about the error."); " is 152.
Long Statement,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,OnSaveSyncAddinButton,The length of the statement  "		dialog = new HIGMessageDialog (this' Gtk.DialogFlags.Modal' Gtk.MessageType.Warning' Gtk.ButtonsType.Close' Catalog.GetString ("Error connecting")' errorMsg); " is 158.
Long Statement,Tomboy,ExportAllApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\ExportAllApplicationAddin.cs,Initialize,The length of the statement  "	/*Adds "Export All Notes/Notebook To ***" to Tomboy's Main Menu */if (am.FindActionByName ("NoteExportAll" + export_file_suffix + "Action") == null) { " is 150.
Long Statement,Tomboy,ExportAllApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\ExportAllApplicationAddin.cs,Initialize,The length of the statement  "			new Gtk.ActionEntry ("NoteExportAll" + export_file_suffix + "Action"' null' String.Format (Catalog.GetString ("Export All Notes to {0}")' export_type_pretty_name)' null' String.Format (Catalog.GetString ("Start exporting notes to {0}")' export_type_pretty_name)' null) " is 268.
Long Statement,Tomboy,ExportAllApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\ExportAllApplicationAddin.cs,Initialize,The length of the statement  "			new Gtk.ActionEntry ("NoteExportNotebook" + export_file_suffix + "Action"' null' String.Format (Catalog.GetString ("Export selected notebook to {0}")' export_type_pretty_name)' null' String.Format (Catalog.GetString ("Start exporting notebook to {0}")' export_type_pretty_name)' null) " is 284.
Long Statement,Tomboy,ExportAllApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\ExportAllApplicationAddin.cs,Initialize,The length of the statement  "			new Gtk.ActionEntry ("ExportMenuAction"' Gtk.Stock.New' Catalog.GetString ("Export")' null' Catalog.GetString ("Export your notes.")' null)' " is 140.
Long Statement,Tomboy,ExportAllApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\ExportAllApplicationAddin.cs,Initialize,The length of the statement  "			new Gtk.ActionEntry ("ExportAllNotes" + export_file_suffix + "Action"' null' String.Format (Catalog.GetString ("Export All Notes To {0}")' export_type_pretty_name)' null' null' delegate { " is 187.
Long Statement,Tomboy,ExportAllApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\ExportAllApplicationAddin.cs,Initialize,The length of the statement  "			new Gtk.ActionEntry ("ExportNotebook" + export_file_suffix + "Action"' null' String.Format (Catalog.GetString ("Export Selected Notebook To {0}")' export_type_pretty_name)' null' null' delegate { " is 195.
Long Statement,Tomboy,ExportAllApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\ExportAllApplicationAddin.cs,Shutdown,The length of the statement  "		am.MainWindowActions.Remove (Tomboy.ActionManager.FindActionByName ("NoteExportNotebook" + export_file_suffix + "Action")); " is 123.
Long Statement,Tomboy,ExportAllApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\ExportAllApplicationAddin.cs,ParseArgs,The length of the statement  "		if (cmd_line.Addin_argslist [i] == "--addin:" + export_file_suffix + "-export-all" || cmd_line.Addin_argslist [i] == "--addin:" + export_file_suffix + "-export-all-quit") { " is 172.
Long Statement,Tomboy,ExportAllApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\ExportAllApplicationAddin.cs,ExportAllNotesViaGUI,The length of the statement  "	ExportMultipleDialog dialog = new ExportMultipleDialog (String.Format (Catalog.GetString ("All Notes {0} Export")' export_type_pretty_name)' export_type_pretty_name); " is 166.
Long Statement,Tomboy,ExportAllApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\ExportAllApplicationAddin.cs,ShowSuccessDialog,The length of the statement  "	HIGMessageDialog msg_dialog = new HIGMessageDialog (null' Gtk.DialogFlags.DestroyWithParent' Gtk.MessageType.Info' Gtk.ButtonsType.Ok' Catalog.GetString ("Notes exported successfully")' detail); " is 194.
Long Statement,Tomboy,ExportAllApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\ExportAllApplicationAddin.cs,ShowErrorDialog,The length of the statement  "	HIGMessageDialog msg_dialog = new HIGMessageDialog (dialog' Gtk.DialogFlags.DestroyWithParent' Gtk.MessageType.Error' Gtk.ButtonsType.Ok' msg' error_message); " is 158.
Long Statement,Tomboy,ExportAllApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\ExportAllApplicationAddin.cs,ResolveRelativePath,The length of the statement  "				return ".." + System.IO.Path.DirectorySeparatorChar + SanitizePath (notebook_to) + System.IO.Path.DirectorySeparatorChar + title_to + "." + export_file_suffix; " is 159.
Long Statement,Tomboy,AddinManager,F:\newReposMay17\GNOME_tomboy\Tomboy\AddinManager.cs,InitializeMonoAddins,The length of the statement  "		string addins_file_contents = String.Format ("<!--\n" + "     This file was automatically generated.  Editing this\n" + "     file by hand is strongly discouraged and such changes\n" + "     may be reverted at any time.\n" + "-->\n\n" + "<Addins>\n" + "\t<Directory>{0}</Directory>\n" + "</Addins>\n"' Tomboy.Uninstalled ? "./addins" : Defines.SYS_ADDINS_DIR); " is 360.
Long Statement,Tomboy,AddinManager,F:\newReposMay17\GNOME_tomboy\Tomboy\AddinManager.cs,GetApplicationAddins,The length of the statement  "		app_addins = (ApplicationAddin[])Mono.Addins.AddinManager.GetExtensionObjects ("/Tomboy/ApplicationAddins"' typeof(ApplicationAddin)' true); " is 140.
Long Statement,Tomboy,AddinManager,F:\newReposMay17\GNOME_tomboy\Tomboy\AddinManager.cs,GetPreferenceTabAddins,The length of the statement  "		addins = (PreferenceTabAddin[])Mono.Addins.AddinManager.GetExtensionObjects ("/Tomboy/PreferenceTabAddins"' typeof(PreferenceTabAddin)); " is 136.
Long Statement,Tomboy,AddinManager,F:\newReposMay17\GNOME_tomboy\Tomboy\AddinManager.cs,GetSyncServiceAddins,The length of the statement  "		addins = (SyncServiceAddin[])Mono.Addins.AddinManager.GetExtensionObjects ("/Tomboy/SyncServiceAddins"' typeof(SyncServiceAddin)); " is 130.
Long Statement,Tomboy,WindowMenuManager,F:\newReposMay17\GNOME_tomboy\Tomboy\MacApplication.cs,UpdateWindowMenu,The length of the statement  "	MenuItem searchItem = Tomboy.ActionManager.UI.GetWidget ("/MainWindowMenubar/MainWindowMenuPlaceholder/WindowMenu/ShowSearchAllNotesAction") as MenuItem; " is 153.
Long Statement,Tomboy,RemoteControlProxy,F:\newReposMay17\GNOME_tomboy\Tomboy\RemoteControlProxy.cs,Register,The length of the statement  "		RemotingConfiguration.RegisterWellKnownServiceType (typeof(RemoteControlWrapper)' WrapperName' WellKnownObjectMode.Singleton); " is 126.
Long Statement,Tomboy,RemoteControlProxy,F:\newReposMay17\GNOME_tomboy\Tomboy\RemoteControlProxy.cs,Register,The length of the statement  "		RemoteControlWrapper remoteWrapper = (RemoteControlWrapper)Activator.GetObject (typeof(RemoteControlWrapper)' ServiceUrl); " is 122.
Long Statement,ManagedWinapi,Hotkey,F:\newReposMay17\GNOME_tomboy\Tomboy\ManagedWinapi.Hotkey.cs,updateHotkey,The length of the statement  "		bool success = RegisterHotKey (hWnd' hotkeyIndex' (_shift ? MOD_SHIFT : 0) + (_ctrl ? MOD_CONTROL : 0) + (_alt ? MOD_ALT : 0) + (_windows ? MOD_WIN : 0)' (int)_keyCode); " is 169.
Long Statement,Tomboy.Sync,SyncDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncDialog.cs,SyncStateChanged,The length of the statement  "			MessageText = Catalog.GetString ("One of your other computers is currently synchronizing.  Please wait 2 minutes and try again."); " is 130.
Long Statement,Tomboy.Sync,SyncDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncDialog.cs,SyncStateChanged,The length of the statement  "			string numNotesUpdated = string.Format (Catalog.GetPluralString ("{0} note updated."' "{0} notes updated."' count)' count); " is 123.
Long Statement,Tomboy.Sync,SyncDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncDialog.cs,NoteConflictDetected,The length of the statement  "			bool noteSyncBitsMatch = SyncManager.SynchronizedNoteXmlMatches (localConflictNote.GetCompleteNoteXml ()' remoteNote.XmlContent); " is 129.
Long Statement,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,HandleNoteSavedOrDeleted,The length of the statement  "		autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000); " is 139.
Long Statement,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,UpdateSyncAction,The length of the statement  "			autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000); " is 139.
Long Statement,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,SynchronizationThread,The length of the statement  "			} else if (existingNote.MetadataChangeDate.CompareTo (client.LastSyncDate) <= 0 || noteUpdate.BasicallyEqualTo (existingNote)) { " is 128.
Long Statement,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,SynchronizationThread,The length of the statement  "			} else if (client.GetRevision (note) <= client.LastSynchronizedRevision && note.MetadataChangeDate > client.LastSyncDate) { " is 123.
Long Statement,Tomboy.Sync,NoteUpdate,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,BasicallyEqualTo,The length of the statement  "	return existingInnerContent == updateInnerContent && existingNote.Data.Title == updateData.Title && CompareTags (existingNote.Data.Tags' updateData.Tags); " is 154.
Long Statement,Tomboy.Sync,NoteUpdate,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,GetInnerContent,The length of the statement  "	const string noteContentRegex = @"^<note-content([^>]+version=""(?<contentVersion>[^""]*)"")?[^>]*((/>)|(>(?<innerContent>.*)</note-content>))$"; " is 145.
Long Statement,Tomboy.Sync,SyncUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncUtils.cs,EnableFuse,The length of the statement  "		HIGMessageDialog cannotEnableDlg = new HIGMessageDialog (null' Gtk.DialogFlags.Modal' Gtk.MessageType.Error' Gtk.ButtonsType.Ok' Catalog.GetString ("Could not enable FUSE")' Catalog.GetString ("The FUSE module could not be loaded. " + "Please check that it is installed properly " + "and try again.")); " is 302.
Long Statement,Tomboy.Sync,SyncUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncUtils.cs,EnableFuse,The length of the statement  "	HIGMessageDialog dialog = new HIGMessageDialog (null' Gtk.DialogFlags.Modal' Gtk.MessageType.Question' Gtk.ButtonsType.YesNo' Catalog.GetString ("Enable FUSE?")' Catalog.GetString ("The synchronization option you have chosen requires the FUSE module to be loaded.\n\n" + "To avoid getting this prompt in the future' you should load FUSE at startup.  " + "Add \"modprobe fuse\" to /etc/init.d/boot.local or \"fuse\" to /etc/modules.\n\n" + "Do you want to load the FUSE module now?")); " is 484.
Long Statement,Tomboy.Sync,SyncUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncUtils.cs,EnableFuse,The length of the statement  "			HIGMessageDialog failedDlg = new HIGMessageDialog (null' Gtk.DialogFlags.Modal' Gtk.MessageType.Error' Gtk.ButtonsType.Ok' Catalog.GetString ("Could not enable FUSE")' Catalog.GetString ("The FUSE module could not be loaded. " + "Please check that it is installed properly " + "and try again.")); " is 296.
Long Statement,Tomboy.Sync,SyncUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncUtils.cs,EnableFuse,The length of the statement  "				 Logger.Warn ("Could not enable FUSE persistently.  User will have to be prompted again during their next login session.");" is 122.
Long Statement,Tomboy.Sync,FileSystemSyncServer,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\FileSystemSyncServer.cs,BeginSyncTransaction,The length of the statement  "			Logger.Debug ("Sync: Updated sync lock file discovered' wait at least {0} before trying again."' currentSyncLock.Duration); " is 123.
Long Statement,Tomboy.Sync,FileSystemSyncServer,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\FileSystemSyncServer.cs,CommitSyncTransaction,The length of the statement  "			Logger.Error ("Exception during server cleanup while committing. " + "Server integrity is OK' but there may be some excess " + "files floating around.  Here's the error:\n" + e.Message); " is 186.
Long Statement,Tomboy.Notebooks,NotebookManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\NotebookManager.cs,PromptCreateNewNotebook,The length of the statement  "	Notebooks.CreateNotebookDialog dialog = new Notebooks.CreateNotebookDialog (parent' Gtk.DialogFlags.Modal | Gtk.DialogFlags.DestroyWithParent | Gtk.DialogFlags.NoSeparator); " is 173.
Long Statement,Tomboy.Notebooks,NotebookManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\NotebookManager.cs,PromptDeleteNotebook,The length of the statement  "	HIGMessageDialog dialog = new HIGMessageDialog (parent' Gtk.DialogFlags.Modal' Gtk.MessageType.Question' Gtk.ButtonsType.YesNo' Catalog.GetString ("Really delete this notebook?")' Catalog.GetString ("The notes that belong to this notebook will not be " + "deleted' but they will no longer be associated with " + "this notebook.  This action cannot be undone.")); " is 362.
Long Statement,Tomboy.Notebooks,NotebookApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\NotebookApplicationAddin.cs,Initialize,The length of the statement  "		new Gtk.ActionEntry ("NewNotebookMenuAction"' Gtk.Stock.New' Catalog.GetString ("Note_books")' null' Catalog.GetString ("Create a new note in a notebook")' null)' " is 162.
Long Statement,Tomboy.Notebooks,NotebookApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\NotebookApplicationAddin.cs,Initialize,The length of the statement  "		new Gtk.ActionEntry ("NewNotebookAction"' Gtk.Stock.New' Catalog.GetString ("New Note_book...")' null' Catalog.GetString ("Create a new notebook")' null)' " is 154.
Long Statement,Tomboy.Notebooks,NotebookApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\NotebookApplicationAddin.cs,Initialize,The length of the statement  "		new Gtk.ActionEntry ("NewNotebookNoteAction"' Gtk.Stock.New' Catalog.GetString ("_New Note")' null' Catalog.GetString ("Create a new note in this notebook")' null)' " is 164.
Long Statement,Tomboy.Notebooks,NotebookApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\NotebookApplicationAddin.cs,Initialize,The length of the statement  "		new Gtk.ActionEntry ("OpenNotebookTemplateNoteAction"' Gtk.Stock.Open' Catalog.GetString ("_Open Template Note")' null' Catalog.GetString ("Open this notebook's template note")' null)' " is 184.
Long Statement,Tomboy.Notebooks,NotebookApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\NotebookApplicationAddin.cs,Initialize,The length of the statement  "		new Gtk.ActionEntry ("DeleteNotebookAction"' Gtk.Stock.Delete' Catalog.GetString ("Delete Note_book")' null' Catalog.GetString ("Delete the selected notebook")' null)' " is 167.
Long Statement,Tomboy.Notebooks,NotebookApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\NotebookApplicationAddin.cs,Initialize,The length of the statement  "		new Gtk.ActionEntry ("TrayNewNotebookMenuAction"' Gtk.Stock.New' Catalog.GetString ("Notebooks")' null' Catalog.GetString ("Create a new note in a notebook")' null) " is 164.
Long Statement,Tomboy.Notebooks,NotebookApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\NotebookApplicationAddin.cs,Initialize,The length of the statement  "	Gtk.ImageMenuItem item = Tomboy.ActionManager.GetWidget ("/TrayIconMenu/TrayNewNotePlaceholder/TrayNewNotebookMenu") as Gtk.ImageMenuItem; " is 138.
Long Statement,Tomboy.Notebooks,NotebookApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\NotebookApplicationAddin.cs,Initialize,The length of the statement  "	Gtk.ImageMenuItem imageitem = Tomboy.ActionManager.GetWidget ("/MainWindowMenubar/FileMenu/FileMenuNewNotePlaceholder/NewNotebookMenu") as Gtk.ImageMenuItem; " is 157.
Long Statement,Tomboy.Notebooks,NotebookNewNoteMenuItem,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\NotebookNewNoteMenuItem.cs,OnActivated,The length of the statement  "		string xmlContent = templateNote.XmlContent.Replace (XmlEncoder.Encode (templateNote.Title)' XmlEncoder.Encode (note.Title)); " is 125.
Complex Conditional,Tomboy,Note,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,WindowConfigureEvent,The conditional expression  "data.Data.X == cur_x && data.Data.Y == cur_y && data.Data.Width == cur_width && data.Data.Height == cur_height"  is complex.
Complex Conditional,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,SerializeToHtml,The conditional expression  "start.Equals (end) || start.Equals (Gtk.TextIter.Zero) || end.Equals (Gtk.TextIter.Zero) || HtmlTransform == null"  is complex.
Complex Conditional,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,ChangeCursorDepthDirectional,The conditional expression  "(rtl_depth || first_char_rtl) && ((next.Line == start.Line) && !next.EndsLine ())"  is complex.
Complex Conditional,Tomboy,NoteBufferArchiver,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,Serialize,The conditional expression  "end_of_depth_line || (next_line_has_depth && (next_iter.EndsLine () || at_empty_line))"  is complex.
Complex Conditional,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,RestorePosition,The conditional expression  "x == null || !(x is int) || y == null || !(y is int) || width == null || !(width is int) || height == null || !(height is int) || splitter_pos == null || !(splitter_pos is int) || mon == null || !(mon is int)"  is complex.
Complex Conditional,Tomboy,TomboyCommandLine,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,Parse,The conditional expression  "idx + 1 < args.Length && args [idx + 1] != null && args [idx + 1] != String.Empty && args [idx + 1] [0] != '-'"  is complex.
Complex Conditional,Tomboy,TomboyCommandLine,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,Parse,The conditional expression  "idx + 1 >= args.Length || (args [idx + 1] != null && args [idx + 1] != String.Empty && args [idx + 1] [0] == '-')"  is complex.
Complex Conditional,Tomboy,TomboyCommandLine,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,Parse,The conditional expression  "idx + 1 >= args.Length || (args [idx + 1] != null && args [idx + 1] != String.Empty && args [idx + 1] [0] == '-')"  is complex.
Complex Conditional,Tomboy,TomboyCommandLine,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,Parse,The conditional expression  "idx + 1 >= args.Length || (args [idx + 1] != null && args [idx + 1] != String.Empty && args [idx + 1] [0] == '-')"  is complex.
Complex Conditional,Tomboy,TomboyCommandLine,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,Parse,The conditional expression  "idx + 1 < args.Length && args [idx + 1] != null && args [idx + 1] != String.Empty && args [idx + 1] [0] != '-'"  is complex.
Complex Conditional,Tomboy,TomboyTray,F:\newReposMay17\GNOME_tomboy\Tomboy\Tray.cs,AddRecentlyChangedNotes,The conditional expression  "(note.IsOpened && note.Window.IsMapped) || note.ChangeDate > days_ago || list_size < min_size"  is complex.
Complex Conditional,Tomboy,NoteLinkWatcher,F:\newReposMay17\GNOME_tomboy\Tomboy\Watchers.cs,DoHighlight,The conditional expression  "(!title_start.StartsWord () && !title_start.StartsSentence ()) || (!title_end.EndsWord () && !title_end.EndsSentence ())"  is complex.
Complex Conditional,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The conditional expression  "syncAddinPrefsWidget != null && addin_id != null && syncAddinIters.ContainsKey (addin_id) && selectedSyncAddin.IsConfigured"  is complex.
Virtual Method Call from Constructor,Tomboy,NoteTag,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,NoteTag,The constructor "NoteTag" calls a virtual method "Initialize".
Virtual Method Call from Constructor,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,PreferencesDialog,The constructor "PreferencesDialog" calls a virtual method "GetPreferenceTabWidget".
Empty Catch Block,Tomboy,NoteManager,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteManager.cs,Initialize,The method has an empty catch block.
Empty Catch Block,Tomboy,Tomboy,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,RegisterRemoteControl,The method has an empty catch block.
Empty Catch Block,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,GetIcon,The method has an empty catch block.
Empty Catch Block,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,GetIcon,The method has an empty catch block.
Empty Catch Block,Tomboy,UriList,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,UriList,The method has an empty catch block.
Empty Catch Block,Tomboy,UriList,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,LoadFromString,The method has an empty catch block.
Empty Catch Block,Tomboy,NoteLinkWatcher,F:\newReposMay17\GNOME_tomboy\Tomboy\Watchers.cs,OpenOrCreateLink,The method has an empty catch block.
Empty Catch Block,Tomboy,NoteEditor,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteEditor.cs,GetGnomeDocumentFontDescription,The method has an empty catch block.
Empty Catch Block,Tomboy,NoteEditor,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteEditor.cs,GetGnomeDocumentFontDescription,The method has an empty catch block.
Empty Catch Block,Tomboy,TomboyPrefsKeybinder,F:\newReposMay17\GNOME_tomboy\Tomboy\PrefsKeybinder.cs,KeyCreateNewNote,The method has an empty catch block.
Empty Catch Block,Tomboy,XmlPreferencesClient,F:\newReposMay17\GNOME_tomboy\Tomboy\XmlPreferencesClient.cs,Set,The method has an empty catch block.
Empty Catch Block,Tomboy,PropertyEditorBool,F:\newReposMay17\GNOME_tomboy\Tomboy\XmlPreferencesClient.cs,UpdateGuards,The method has an empty catch block.
Empty Catch Block,Tomboy,PropertyEditorToggleButton,F:\newReposMay17\GNOME_tomboy\Tomboy\XmlPreferencesClient.cs,Setup,The method has an empty catch block.
Empty Catch Block,Tomboy,PropertyEditorEntry,F:\newReposMay17\GNOME_tomboy\Tomboy\XmlPreferencesClient.cs,Setup,The method has an empty catch block.
Empty Catch Block,Tomboy.Sync,SyncDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncDialog.cs,RenameNote,The method has an empty catch block.
Empty Catch Block,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,SynchronizationThread,The method has an empty catch block.
Empty Catch Block,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,UpdateLocalNote,The method has an empty catch block.
Empty Catch Block,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,SetState,The method has an empty catch block.
Empty Catch Block,Tomboy.Sync,SyncUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncUtils.cs,IsFuseEnabled,The method has an empty catch block.
Empty Catch Block,Tomboy.Sync,TomboySyncClient,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\TomboySyncClient.cs,Parse,The method has an empty catch block.
Empty Catch Block,Tomboy.Sync,FileSystemSyncServer,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\FileSystemSyncServer.cs,GetNoteUpdatesSince,The method has an empty catch block.
Empty Catch Block,Tomboy.Notebooks,NotebookApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\NotebookApplicationAddin.cs,Shutdown,The method has an empty catch block.
Empty Catch Block,Tomboy.Notebooks,NotebookApplicationAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\NotebookApplicationAddin.cs,Shutdown,The method has an empty catch block.
Magic Number,Tomboy,ActionManager,F:\newReposMay17\GNOME_tomboy\Tomboy\ActionManager.cs,ActionManager,The following statement contains a magic number: newNote = GuiUtils.GetIcon ("note-new"' 16);  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,lab_to_rgb,The following statement contains a magic number: if (tmp < 0.0f)  	R = 0;  else if (tmp > 65535.0f)  	R = 65535;  else  	R = (ushort)tmp;  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,lab_to_rgb,The following statement contains a magic number: if (tmp > 65535.0f)  	R = 65535;  else  	R = (ushort)tmp;  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,lab_to_rgb,The following statement contains a magic number: R = 65535;  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,lab_to_rgb,The following statement contains a magic number: if (tmp < 0.0f)  	G = 0;  else if (tmp > 65535.0f)  	G = 65535;  else  	G = (ushort)tmp;  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,lab_to_rgb,The following statement contains a magic number: if (tmp > 65535.0f)  	G = 65535;  else  	G = (ushort)tmp;  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,lab_to_rgb,The following statement contains a magic number: G = 65535;  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,lab_to_rgb,The following statement contains a magic number: if (tmp < 0.0f)  	B = 0;  else if (tmp > 65535.0f)  	B = 65535;  else  	B = (ushort)tmp;  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,lab_to_rgb,The following statement contains a magic number: if (tmp > 65535.0f)  	B = 65535;  else  	B = (ushort)tmp;  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,lab_to_rgb,The following statement contains a magic number: B = 65535;  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [0' 1] = color_regions [(int)color' 2];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [0' 2] = color_regions [(int)color' 4];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [0' 2] = color_regions [(int)color' 4];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [1' 1] = color_regions [(int)color' 2];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [1' 2] = color_regions [(int)color' 5];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [1' 2] = color_regions [(int)color' 5];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [2' 0] = color_regions [(int)color' 0];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [2' 1] = color_regions [(int)color' 3];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [2' 1] = color_regions [(int)color' 3];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [2' 2] = color_regions [(int)color' 4];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [2' 2] = color_regions [(int)color' 4];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [2' 2] = color_regions [(int)color' 4];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [3' 0] = color_regions [(int)color' 0];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [3' 1] = color_regions [(int)color' 3];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [3' 1] = color_regions [(int)color' 3];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [3' 2] = color_regions [(int)color' 5];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [3' 2] = color_regions [(int)color' 5];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [3' 2] = color_regions [(int)color' 5];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [4' 0] = color_regions [(int)color' 1];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [4' 1] = color_regions [(int)color' 2];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [4' 1] = color_regions [(int)color' 2];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [4' 2] = color_regions [(int)color' 4];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [4' 2] = color_regions [(int)color' 4];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [4' 2] = color_regions [(int)color' 4];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [5' 0] = color_regions [(int)color' 1];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [5' 1] = color_regions [(int)color' 2];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [5' 1] = color_regions [(int)color' 2];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [5' 2] = color_regions [(int)color' 5];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [5' 2] = color_regions [(int)color' 5];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [5' 2] = color_regions [(int)color' 5];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [6' 0] = color_regions [(int)color' 1];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [6' 1] = color_regions [(int)color' 3];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [6' 1] = color_regions [(int)color' 3];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [6' 2] = color_regions [(int)color' 4];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [6' 2] = color_regions [(int)color' 4];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [6' 2] = color_regions [(int)color' 4];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [7' 0] = color_regions [(int)color' 1];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [7' 1] = color_regions [(int)color' 3];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [7' 1] = color_regions [(int)color' 3];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [7' 2] = color_regions [(int)color' 5];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [7' 2] = color_regions [(int)color' 5];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [7' 2] = color_regions [(int)color' 5];  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: for (i = 0; i < 8; i++) {  	float dist = lab_distance (L' a' b' points [i' 0]' points [i' 1]' points [i' 2]);  	if (dist > max_dist) {  		max_dist = dist;  		max_color = i;  	}  }  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: for (i = 0; i < 8; i++) {  	float dist = lab_distance (L' a' b' points [i' 0]' points [i' 1]' points [i' 2]);  	if (dist > max_dist) {  		max_dist = dist;  		max_color = i;  	}  }  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: cd = (float)Math.Sqrt (Math.Pow (Math.Abs (a - points [max_color' 1])' 2.0f) + Math.Pow (Math.Abs (b - points [max_color' 2])' 2.0f));  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: if ((ld < 10.0f) && (cd < 60.0f)) {  	float dL' da' db;  	dL = points [max_color' 0] - L;  	da = points [max_color' 1] - a;  	db = points [max_color' 2] - b;  	points [max_color' 0] = L + (dL * 4.0f);  	points [max_color' 1] = a + (da * 1.5f);  	points [max_color' 2] = b + (db * 1.5f);  }  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: if ((ld < 10.0f) && (cd < 60.0f)) {  	float dL' da' db;  	dL = points [max_color' 0] - L;  	da = points [max_color' 1] - a;  	db = points [max_color' 2] - b;  	points [max_color' 0] = L + (dL * 4.0f);  	points [max_color' 1] = a + (da * 1.5f);  	points [max_color' 2] = b + (db * 1.5f);  }  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: db = points [max_color' 2] - b;  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: points [max_color' 2] = b + (db * 1.5f);  
Magic Number,Tomboy,Contrast,F:\newReposMay17\GNOME_tomboy\Tomboy\Contrast.cs,RenderForegroundColor,The following statement contains a magic number: lab_to_rgb (points [max_color' 0]' points [max_color' 1]' points [max_color' 2]' out rcolor.Red' out rcolor.Green' out rcolor.Blue);  
Magic Number,Tomboy,NoteDataBufferSynchronizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,SynchronizeBuffer,The following statement contains a magic number: if (!TextInvalid () && buffer != null) {  	// Don't create Undo actions during load  	buffer.Undoer.FreezeUndo ();  	buffer.Clear ();  	// Load the stored xml text  	NoteBufferArchiver.Deserialize (buffer' buffer.StartIter' data.Text);  	buffer.Modified = false;  	Gtk.TextIter cursor;  	if (data.CursorPosition != 0) {  		// Move cursor to last-saved position  		cursor = buffer.GetIterAtOffset (data.CursorPosition);  	} else {  		// Avoid title line  		cursor = buffer.GetIterAtLine (2);  	}  	buffer.PlaceCursor (cursor);  	if (data.SelectionBoundPosition >= 0) {  		// Move selection bound to last-saved position  		Gtk.TextIter selection_bound;  		selection_bound = buffer.GetIterAtOffset (data.SelectionBoundPosition);  		buffer.MoveMark (buffer.SelectionBound.Name' selection_bound);  	}  	// New events should create Undo actions  	buffer.Undoer.ThawUndo ();  }  
Magic Number,Tomboy,NoteDataBufferSynchronizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,SynchronizeBuffer,The following statement contains a magic number: if (data.CursorPosition != 0) {  	// Move cursor to last-saved position  	cursor = buffer.GetIterAtOffset (data.CursorPosition);  } else {  	// Avoid title line  	cursor = buffer.GetIterAtLine (2);  }  
Magic Number,Tomboy,NoteDataBufferSynchronizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,SynchronizeBuffer,The following statement contains a magic number: cursor = buffer.GetIterAtLine (2);  
Magic Number,Tomboy,NoteUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,ShowDeletionDialog,The following statement contains a magic number: if ((bool)Preferences.Get (Preferences.ENABLE_DELETE_CONFIRM)) {  	// show confirmation dialog  	if (notes.Count == 1) {  		Note note = notes [0];  		message = string.Format (Catalog.GetString ("Really delete \"{0}\"?")' note.Title);  	} else  		message = string.Format (Catalog.GetPluralString ("Really delete this {0} note?"' "Really delete these {0} notes?"' notes.Count)' notes.Count);  	HIGMessageDialog dialog = new HIGMessageDialog (parent' Gtk.DialogFlags.DestroyWithParent' Gtk.MessageType.Question' Gtk.ButtonsType.None' message' Catalog.GetString ("If you delete a note it is " + "permanently lost."));  	Gtk.Button button;  	button = new Gtk.Button (Gtk.Stock.Cancel);  	button.CanDefault = true;  	button.Show ();  	dialog.AddActionWidget (button' Gtk.ResponseType.Cancel);  	dialog.DefaultResponse = Gtk.ResponseType.Cancel;  	button = new Gtk.Button (Gtk.Stock.Delete);  	button.CanDefault = true;  	button.Show ();  	dialog.AddActionWidget (button' 666);  	int result = dialog.Run ();  	if (result == 666) {  		foreach (Note note in notes) {  			note.Manager.Delete (note);  		}  	}  	dialog.Destroy ();  } else {  	// no confirmation dialog' just delete  	foreach (Note note in notes) {  		note.Manager.Delete (note);  	}  }  
Magic Number,Tomboy,NoteUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,ShowDeletionDialog,The following statement contains a magic number: if ((bool)Preferences.Get (Preferences.ENABLE_DELETE_CONFIRM)) {  	// show confirmation dialog  	if (notes.Count == 1) {  		Note note = notes [0];  		message = string.Format (Catalog.GetString ("Really delete \"{0}\"?")' note.Title);  	} else  		message = string.Format (Catalog.GetPluralString ("Really delete this {0} note?"' "Really delete these {0} notes?"' notes.Count)' notes.Count);  	HIGMessageDialog dialog = new HIGMessageDialog (parent' Gtk.DialogFlags.DestroyWithParent' Gtk.MessageType.Question' Gtk.ButtonsType.None' message' Catalog.GetString ("If you delete a note it is " + "permanently lost."));  	Gtk.Button button;  	button = new Gtk.Button (Gtk.Stock.Cancel);  	button.CanDefault = true;  	button.Show ();  	dialog.AddActionWidget (button' Gtk.ResponseType.Cancel);  	dialog.DefaultResponse = Gtk.ResponseType.Cancel;  	button = new Gtk.Button (Gtk.Stock.Delete);  	button.CanDefault = true;  	button.Show ();  	dialog.AddActionWidget (button' 666);  	int result = dialog.Run ();  	if (result == 666) {  		foreach (Note note in notes) {  			note.Manager.Delete (note);  		}  	}  	dialog.Destroy ();  } else {  	// no confirmation dialog' just delete  	foreach (Note note in notes) {  		note.Manager.Delete (note);  	}  }  
Magic Number,Tomboy,NoteUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,ShowDeletionDialog,The following statement contains a magic number: dialog.AddActionWidget (button' 666);  
Magic Number,Tomboy,NoteUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,ShowDeletionDialog,The following statement contains a magic number: if (result == 666) {  	foreach (Note note in notes) {  		note.Manager.Delete (note);  	}  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,ToggleActiveTag,The following statement contains a magic number: if (GetSelectionBounds (out select_start' out select_end)) {  	// Ignore the bullet character  	if (FindDepthTag (select_start) != null)  		select_start.LineOffset = 2;  	if (select_start.BeginsTag (tag) || select_start.HasTag (tag))  		RemoveTag (tag' select_start' select_end);  	else  		ApplyTag (tag' select_start' select_end);  } else {  	if (active_tags.Contains (tag))  		active_tags.Remove (tag);  	else  		active_tags.Add (tag);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,ToggleActiveTag,The following statement contains a magic number: if (FindDepthTag (select_start) != null)  	select_start.LineOffset = 2;  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,ToggleActiveTag,The following statement contains a magic number: select_start.LineOffset = 2;  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,OnTagApplied,The following statement contains a magic number: if (!(args.Tag is DepthNoteTag)) {  	// Remove the tag from any bullets in the selection  	Undoer.FreezeUndo ();  	Gtk.TextIter iter;  	for (int i = args.StartChar.Line; i <= args.EndChar.Line; i++) {  		iter = GetIterAtLine (i);  		if (FindDepthTag (iter) != null) {  			Gtk.TextIter next = iter;  			next.ForwardChars (2);  			RemoveTag (args.Tag' iter' next);  		}  	}  	Undoer.ThawUndo ();  } else {  	// Remove any existing tags when a depth tag is applied  	Undoer.FreezeUndo ();  	foreach (Gtk.TextTag tag in args.StartChar.Tags) {  		if (!(tag is DepthNoteTag)) {  			RemoveTag (tag' args.StartChar' args.EndChar);  		}  	}  	Undoer.ThawUndo ();  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,OnTagApplied,The following statement contains a magic number: for (int i = args.StartChar.Line; i <= args.EndChar.Line; i++) {  	iter = GetIterAtLine (i);  	if (FindDepthTag (iter) != null) {  		Gtk.TextIter next = iter;  		next.ForwardChars (2);  		RemoveTag (args.Tag' iter' next);  	}  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,OnTagApplied,The following statement contains a magic number: if (FindDepthTag (iter) != null) {  	Gtk.TextIter next = iter;  	next.ForwardChars (2);  	RemoveTag (args.Tag' iter' next);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,OnTagApplied,The following statement contains a magic number: next.ForwardChars (2);  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,IsActiveTag,The following statement contains a magic number: if (GetSelectionBounds (out iter' out select_end)) {  	// Ignore the bullet character and look at the  	// first character of the list item  	if (FindDepthTag (iter) != null)  		iter.ForwardChars (2);  	return iter.BeginsTag (tag) || iter.HasTag (tag);  } else {  	return active_tags.Contains (tag);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,IsActiveTag,The following statement contains a magic number: if (FindDepthTag (iter) != null)  	iter.ForwardChars (2);  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,IsActiveTag,The following statement contains a magic number: iter.ForwardChars (2);  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,TextInsertedEvent,The following statement contains a magic number: if (args.Pos.LineOffset - args.Text.Length == 2 && FindDepthTag (line_start) != null) {  	Pango.Direction direction = Pango.Direction.Ltr;  	if (args.Text.Length > 0)  		direction = Pango.Global.UnicharDirection (args.Text [0]);  	ChangeBulletDirection (args.Pos' direction);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,RangeDeletedEvent,The following statement contains a magic number: foreach (Gtk.TextIter iter in iters) {  	Gtk.TextIter line_start = iter;  	line_start.LineOffset = 0;  	if ((iter.LineOffset == 3 || iter.LineOffset == 2) && FindDepthTag (line_start) != null) {  		Gtk.TextIter first_char = iter;  		first_char.LineOffset = 2;  		Pango.Direction direction = Pango.Direction.Ltr;  		if (first_char.Char.Length > 0)  			direction = Pango.Global.UnicharDirection (first_char.Char [0]);  		ChangeBulletDirection (first_char' direction);  	}  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,RangeDeletedEvent,The following statement contains a magic number: foreach (Gtk.TextIter iter in iters) {  	Gtk.TextIter line_start = iter;  	line_start.LineOffset = 0;  	if ((iter.LineOffset == 3 || iter.LineOffset == 2) && FindDepthTag (line_start) != null) {  		Gtk.TextIter first_char = iter;  		first_char.LineOffset = 2;  		Pango.Direction direction = Pango.Direction.Ltr;  		if (first_char.Char.Length > 0)  			direction = Pango.Global.UnicharDirection (first_char.Char [0]);  		ChangeBulletDirection (first_char' direction);  	}  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,RangeDeletedEvent,The following statement contains a magic number: foreach (Gtk.TextIter iter in iters) {  	Gtk.TextIter line_start = iter;  	line_start.LineOffset = 0;  	if ((iter.LineOffset == 3 || iter.LineOffset == 2) && FindDepthTag (line_start) != null) {  		Gtk.TextIter first_char = iter;  		first_char.LineOffset = 2;  		Pango.Direction direction = Pango.Direction.Ltr;  		if (first_char.Char.Length > 0)  			direction = Pango.Global.UnicharDirection (first_char.Char [0]);  		ChangeBulletDirection (first_char' direction);  	}  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,RangeDeletedEvent,The following statement contains a magic number: if ((iter.LineOffset == 3 || iter.LineOffset == 2) && FindDepthTag (line_start) != null) {  	Gtk.TextIter first_char = iter;  	first_char.LineOffset = 2;  	Pango.Direction direction = Pango.Direction.Ltr;  	if (first_char.Char.Length > 0)  		direction = Pango.Global.UnicharDirection (first_char.Char [0]);  	ChangeBulletDirection (first_char' direction);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,RangeDeletedEvent,The following statement contains a magic number: if ((iter.LineOffset == 3 || iter.LineOffset == 2) && FindDepthTag (line_start) != null) {  	Gtk.TextIter first_char = iter;  	first_char.LineOffset = 2;  	Pango.Direction direction = Pango.Direction.Ltr;  	if (first_char.Char.Length > 0)  		direction = Pango.Global.UnicharDirection (first_char.Char [0]);  	ChangeBulletDirection (first_char' direction);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,RangeDeletedEvent,The following statement contains a magic number: if ((iter.LineOffset == 3 || iter.LineOffset == 2) && FindDepthTag (line_start) != null) {  	Gtk.TextIter first_char = iter;  	first_char.LineOffset = 2;  	Pango.Direction direction = Pango.Direction.Ltr;  	if (first_char.Char.Length > 0)  		direction = Pango.Global.UnicharDirection (first_char.Char [0]);  	ChangeBulletDirection (first_char' direction);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,RangeDeletedEvent,The following statement contains a magic number: first_char.LineOffset = 2;  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AddNewline,The following statement contains a magic number: if (prev_depth != null && soft_break) {  	bool at_end_of_line = insert.EndsLine ();  	Insert (ref insert' "\u2028");  	// Hack so that the user sees that what they type  	// next will appear on a new line' otherwise the  	// cursor stays at the end of the previous line.  	if (at_end_of_line) {  		Insert (ref insert' " ");  		Gtk.TextIter bound = insert;  		bound.BackwardChar ();  		MoveMark (SelectionBound' bound);  	}  	return true;  	// If the previous line has a bullet point on it we add a bullet  	// to the new line' unless the previous line was blank (apart from  	// the bullet)' in which case we clear the bullet/indent from the  	// previous line.  } else if (prev_depth != null) {  	iter.ForwardChar ();  	// See if the line was left contentless and remove the bullet  	// if so.  	if (iter.EndsLine () || insert.LineOffset < 3) {  		Gtk.TextIter start = GetIterAtLine (iter.Line);  		Gtk.TextIter end = start;  		end.ForwardToLineEnd ();  		if (end.LineOffset < 2) {  			end = start;  		} else {  			end = GetIterAtLineOffset (iter.Line' 2);  		}  		Delete (ref start' ref end);  		iter = GetIterAtMark (insert_mark);  		Insert (ref iter' "\n");  	} else {  		iter = GetIterAtMark (insert_mark);  		Gtk.TextIter prev = iter;  		prev.BackwardChar ();  		// Remove soft breaks  		if (prev.Char == "\u2028") {  			Delete (ref prev' ref iter);  		}  		Undoer.FreezeUndo ();  		int offset = iter.Offset;  		Insert (ref iter' "\n");  		iter = GetIterAtMark (insert_mark);  		Gtk.TextIter start = GetIterAtLine (iter.Line);  		// Set the direction of the bullet to be the same  		// as the first character on the new line  		Pango.Direction direction = prev_depth.Direction;  		if (iter.Char != "\n" && iter.Char.Length > 0)  			direction = Pango.Global.UnicharDirection (iter.Char [0]);  		InsertBullet (ref start' prev_depth.Depth' direction);  		Undoer.ThawUndo ();  		NewBulletInserted (this' new InsertBulletEventArgs (offset' prev_depth.Depth' direction));  	}  	return true;  } // Replace lines starting with any numbers of leading spaces   // followed by '*' or '-' and then by a space with bullets  else if (LineNeedsBullet (iter)) {  	Gtk.TextIter start = GetIterAtLineOffset (iter.Line' 0);  	Gtk.TextIter end = GetIterAtLineOffset (iter.Line' 0);  	// Remove any leading white space  	while (end.Char == " ")  		end.ForwardChar ();  	// Remove the '*' or '-' character and the space after  	end.ForwardChars (2);  	// Set the direction of the bullet to be the same as  	// the first character after the '*' or '-'  	Pango.Direction direction = Pango.Direction.Ltr;  	if (end.Char.Length > 0)  		direction = Pango.Global.UnicharDirection (end.Char [0]);  	Delete (ref start' ref end);  	if (end.EndsLine ()) {  		IncreaseDepth (ref start);  	} else {  		IncreaseDepth (ref start);  		iter = GetIterAtMark (insert_mark);  		int offset = iter.Offset;  		Insert (ref iter' "\n");  		iter = GetIterAtMark (insert_mark);  		iter.LineOffset = 0;  		Undoer.FreezeUndo ();  		InsertBullet (ref iter' 0' direction);  		Undoer.ThawUndo ();  		NewBulletInserted (this' new InsertBulletEventArgs (offset' 0' direction));  	}  	return true;  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AddNewline,The following statement contains a magic number: if (prev_depth != null && soft_break) {  	bool at_end_of_line = insert.EndsLine ();  	Insert (ref insert' "\u2028");  	// Hack so that the user sees that what they type  	// next will appear on a new line' otherwise the  	// cursor stays at the end of the previous line.  	if (at_end_of_line) {  		Insert (ref insert' " ");  		Gtk.TextIter bound = insert;  		bound.BackwardChar ();  		MoveMark (SelectionBound' bound);  	}  	return true;  	// If the previous line has a bullet point on it we add a bullet  	// to the new line' unless the previous line was blank (apart from  	// the bullet)' in which case we clear the bullet/indent from the  	// previous line.  } else if (prev_depth != null) {  	iter.ForwardChar ();  	// See if the line was left contentless and remove the bullet  	// if so.  	if (iter.EndsLine () || insert.LineOffset < 3) {  		Gtk.TextIter start = GetIterAtLine (iter.Line);  		Gtk.TextIter end = start;  		end.ForwardToLineEnd ();  		if (end.LineOffset < 2) {  			end = start;  		} else {  			end = GetIterAtLineOffset (iter.Line' 2);  		}  		Delete (ref start' ref end);  		iter = GetIterAtMark (insert_mark);  		Insert (ref iter' "\n");  	} else {  		iter = GetIterAtMark (insert_mark);  		Gtk.TextIter prev = iter;  		prev.BackwardChar ();  		// Remove soft breaks  		if (prev.Char == "\u2028") {  			Delete (ref prev' ref iter);  		}  		Undoer.FreezeUndo ();  		int offset = iter.Offset;  		Insert (ref iter' "\n");  		iter = GetIterAtMark (insert_mark);  		Gtk.TextIter start = GetIterAtLine (iter.Line);  		// Set the direction of the bullet to be the same  		// as the first character on the new line  		Pango.Direction direction = prev_depth.Direction;  		if (iter.Char != "\n" && iter.Char.Length > 0)  			direction = Pango.Global.UnicharDirection (iter.Char [0]);  		InsertBullet (ref start' prev_depth.Depth' direction);  		Undoer.ThawUndo ();  		NewBulletInserted (this' new InsertBulletEventArgs (offset' prev_depth.Depth' direction));  	}  	return true;  } // Replace lines starting with any numbers of leading spaces   // followed by '*' or '-' and then by a space with bullets  else if (LineNeedsBullet (iter)) {  	Gtk.TextIter start = GetIterAtLineOffset (iter.Line' 0);  	Gtk.TextIter end = GetIterAtLineOffset (iter.Line' 0);  	// Remove any leading white space  	while (end.Char == " ")  		end.ForwardChar ();  	// Remove the '*' or '-' character and the space after  	end.ForwardChars (2);  	// Set the direction of the bullet to be the same as  	// the first character after the '*' or '-'  	Pango.Direction direction = Pango.Direction.Ltr;  	if (end.Char.Length > 0)  		direction = Pango.Global.UnicharDirection (end.Char [0]);  	Delete (ref start' ref end);  	if (end.EndsLine ()) {  		IncreaseDepth (ref start);  	} else {  		IncreaseDepth (ref start);  		iter = GetIterAtMark (insert_mark);  		int offset = iter.Offset;  		Insert (ref iter' "\n");  		iter = GetIterAtMark (insert_mark);  		iter.LineOffset = 0;  		Undoer.FreezeUndo ();  		InsertBullet (ref iter' 0' direction);  		Undoer.ThawUndo ();  		NewBulletInserted (this' new InsertBulletEventArgs (offset' 0' direction));  	}  	return true;  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AddNewline,The following statement contains a magic number: if (prev_depth != null && soft_break) {  	bool at_end_of_line = insert.EndsLine ();  	Insert (ref insert' "\u2028");  	// Hack so that the user sees that what they type  	// next will appear on a new line' otherwise the  	// cursor stays at the end of the previous line.  	if (at_end_of_line) {  		Insert (ref insert' " ");  		Gtk.TextIter bound = insert;  		bound.BackwardChar ();  		MoveMark (SelectionBound' bound);  	}  	return true;  	// If the previous line has a bullet point on it we add a bullet  	// to the new line' unless the previous line was blank (apart from  	// the bullet)' in which case we clear the bullet/indent from the  	// previous line.  } else if (prev_depth != null) {  	iter.ForwardChar ();  	// See if the line was left contentless and remove the bullet  	// if so.  	if (iter.EndsLine () || insert.LineOffset < 3) {  		Gtk.TextIter start = GetIterAtLine (iter.Line);  		Gtk.TextIter end = start;  		end.ForwardToLineEnd ();  		if (end.LineOffset < 2) {  			end = start;  		} else {  			end = GetIterAtLineOffset (iter.Line' 2);  		}  		Delete (ref start' ref end);  		iter = GetIterAtMark (insert_mark);  		Insert (ref iter' "\n");  	} else {  		iter = GetIterAtMark (insert_mark);  		Gtk.TextIter prev = iter;  		prev.BackwardChar ();  		// Remove soft breaks  		if (prev.Char == "\u2028") {  			Delete (ref prev' ref iter);  		}  		Undoer.FreezeUndo ();  		int offset = iter.Offset;  		Insert (ref iter' "\n");  		iter = GetIterAtMark (insert_mark);  		Gtk.TextIter start = GetIterAtLine (iter.Line);  		// Set the direction of the bullet to be the same  		// as the first character on the new line  		Pango.Direction direction = prev_depth.Direction;  		if (iter.Char != "\n" && iter.Char.Length > 0)  			direction = Pango.Global.UnicharDirection (iter.Char [0]);  		InsertBullet (ref start' prev_depth.Depth' direction);  		Undoer.ThawUndo ();  		NewBulletInserted (this' new InsertBulletEventArgs (offset' prev_depth.Depth' direction));  	}  	return true;  } // Replace lines starting with any numbers of leading spaces   // followed by '*' or '-' and then by a space with bullets  else if (LineNeedsBullet (iter)) {  	Gtk.TextIter start = GetIterAtLineOffset (iter.Line' 0);  	Gtk.TextIter end = GetIterAtLineOffset (iter.Line' 0);  	// Remove any leading white space  	while (end.Char == " ")  		end.ForwardChar ();  	// Remove the '*' or '-' character and the space after  	end.ForwardChars (2);  	// Set the direction of the bullet to be the same as  	// the first character after the '*' or '-'  	Pango.Direction direction = Pango.Direction.Ltr;  	if (end.Char.Length > 0)  		direction = Pango.Global.UnicharDirection (end.Char [0]);  	Delete (ref start' ref end);  	if (end.EndsLine ()) {  		IncreaseDepth (ref start);  	} else {  		IncreaseDepth (ref start);  		iter = GetIterAtMark (insert_mark);  		int offset = iter.Offset;  		Insert (ref iter' "\n");  		iter = GetIterAtMark (insert_mark);  		iter.LineOffset = 0;  		Undoer.FreezeUndo ();  		InsertBullet (ref iter' 0' direction);  		Undoer.ThawUndo ();  		NewBulletInserted (this' new InsertBulletEventArgs (offset' 0' direction));  	}  	return true;  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AddNewline,The following statement contains a magic number: if (prev_depth != null && soft_break) {  	bool at_end_of_line = insert.EndsLine ();  	Insert (ref insert' "\u2028");  	// Hack so that the user sees that what they type  	// next will appear on a new line' otherwise the  	// cursor stays at the end of the previous line.  	if (at_end_of_line) {  		Insert (ref insert' " ");  		Gtk.TextIter bound = insert;  		bound.BackwardChar ();  		MoveMark (SelectionBound' bound);  	}  	return true;  	// If the previous line has a bullet point on it we add a bullet  	// to the new line' unless the previous line was blank (apart from  	// the bullet)' in which case we clear the bullet/indent from the  	// previous line.  } else if (prev_depth != null) {  	iter.ForwardChar ();  	// See if the line was left contentless and remove the bullet  	// if so.  	if (iter.EndsLine () || insert.LineOffset < 3) {  		Gtk.TextIter start = GetIterAtLine (iter.Line);  		Gtk.TextIter end = start;  		end.ForwardToLineEnd ();  		if (end.LineOffset < 2) {  			end = start;  		} else {  			end = GetIterAtLineOffset (iter.Line' 2);  		}  		Delete (ref start' ref end);  		iter = GetIterAtMark (insert_mark);  		Insert (ref iter' "\n");  	} else {  		iter = GetIterAtMark (insert_mark);  		Gtk.TextIter prev = iter;  		prev.BackwardChar ();  		// Remove soft breaks  		if (prev.Char == "\u2028") {  			Delete (ref prev' ref iter);  		}  		Undoer.FreezeUndo ();  		int offset = iter.Offset;  		Insert (ref iter' "\n");  		iter = GetIterAtMark (insert_mark);  		Gtk.TextIter start = GetIterAtLine (iter.Line);  		// Set the direction of the bullet to be the same  		// as the first character on the new line  		Pango.Direction direction = prev_depth.Direction;  		if (iter.Char != "\n" && iter.Char.Length > 0)  			direction = Pango.Global.UnicharDirection (iter.Char [0]);  		InsertBullet (ref start' prev_depth.Depth' direction);  		Undoer.ThawUndo ();  		NewBulletInserted (this' new InsertBulletEventArgs (offset' prev_depth.Depth' direction));  	}  	return true;  } // Replace lines starting with any numbers of leading spaces   // followed by '*' or '-' and then by a space with bullets  else if (LineNeedsBullet (iter)) {  	Gtk.TextIter start = GetIterAtLineOffset (iter.Line' 0);  	Gtk.TextIter end = GetIterAtLineOffset (iter.Line' 0);  	// Remove any leading white space  	while (end.Char == " ")  		end.ForwardChar ();  	// Remove the '*' or '-' character and the space after  	end.ForwardChars (2);  	// Set the direction of the bullet to be the same as  	// the first character after the '*' or '-'  	Pango.Direction direction = Pango.Direction.Ltr;  	if (end.Char.Length > 0)  		direction = Pango.Global.UnicharDirection (end.Char [0]);  	Delete (ref start' ref end);  	if (end.EndsLine ()) {  		IncreaseDepth (ref start);  	} else {  		IncreaseDepth (ref start);  		iter = GetIterAtMark (insert_mark);  		int offset = iter.Offset;  		Insert (ref iter' "\n");  		iter = GetIterAtMark (insert_mark);  		iter.LineOffset = 0;  		Undoer.FreezeUndo ();  		InsertBullet (ref iter' 0' direction);  		Undoer.ThawUndo ();  		NewBulletInserted (this' new InsertBulletEventArgs (offset' 0' direction));  	}  	return true;  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AddNewline,The following statement contains a magic number: if (prev_depth != null) {  	iter.ForwardChar ();  	// See if the line was left contentless and remove the bullet  	// if so.  	if (iter.EndsLine () || insert.LineOffset < 3) {  		Gtk.TextIter start = GetIterAtLine (iter.Line);  		Gtk.TextIter end = start;  		end.ForwardToLineEnd ();  		if (end.LineOffset < 2) {  			end = start;  		} else {  			end = GetIterAtLineOffset (iter.Line' 2);  		}  		Delete (ref start' ref end);  		iter = GetIterAtMark (insert_mark);  		Insert (ref iter' "\n");  	} else {  		iter = GetIterAtMark (insert_mark);  		Gtk.TextIter prev = iter;  		prev.BackwardChar ();  		// Remove soft breaks  		if (prev.Char == "\u2028") {  			Delete (ref prev' ref iter);  		}  		Undoer.FreezeUndo ();  		int offset = iter.Offset;  		Insert (ref iter' "\n");  		iter = GetIterAtMark (insert_mark);  		Gtk.TextIter start = GetIterAtLine (iter.Line);  		// Set the direction of the bullet to be the same  		// as the first character on the new line  		Pango.Direction direction = prev_depth.Direction;  		if (iter.Char != "\n" && iter.Char.Length > 0)  			direction = Pango.Global.UnicharDirection (iter.Char [0]);  		InsertBullet (ref start' prev_depth.Depth' direction);  		Undoer.ThawUndo ();  		NewBulletInserted (this' new InsertBulletEventArgs (offset' prev_depth.Depth' direction));  	}  	return true;  } // Replace lines starting with any numbers of leading spaces   // followed by '*' or '-' and then by a space with bullets  else if (LineNeedsBullet (iter)) {  	Gtk.TextIter start = GetIterAtLineOffset (iter.Line' 0);  	Gtk.TextIter end = GetIterAtLineOffset (iter.Line' 0);  	// Remove any leading white space  	while (end.Char == " ")  		end.ForwardChar ();  	// Remove the '*' or '-' character and the space after  	end.ForwardChars (2);  	// Set the direction of the bullet to be the same as  	// the first character after the '*' or '-'  	Pango.Direction direction = Pango.Direction.Ltr;  	if (end.Char.Length > 0)  		direction = Pango.Global.UnicharDirection (end.Char [0]);  	Delete (ref start' ref end);  	if (end.EndsLine ()) {  		IncreaseDepth (ref start);  	} else {  		IncreaseDepth (ref start);  		iter = GetIterAtMark (insert_mark);  		int offset = iter.Offset;  		Insert (ref iter' "\n");  		iter = GetIterAtMark (insert_mark);  		iter.LineOffset = 0;  		Undoer.FreezeUndo ();  		InsertBullet (ref iter' 0' direction);  		Undoer.ThawUndo ();  		NewBulletInserted (this' new InsertBulletEventArgs (offset' 0' direction));  	}  	return true;  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AddNewline,The following statement contains a magic number: if (prev_depth != null) {  	iter.ForwardChar ();  	// See if the line was left contentless and remove the bullet  	// if so.  	if (iter.EndsLine () || insert.LineOffset < 3) {  		Gtk.TextIter start = GetIterAtLine (iter.Line);  		Gtk.TextIter end = start;  		end.ForwardToLineEnd ();  		if (end.LineOffset < 2) {  			end = start;  		} else {  			end = GetIterAtLineOffset (iter.Line' 2);  		}  		Delete (ref start' ref end);  		iter = GetIterAtMark (insert_mark);  		Insert (ref iter' "\n");  	} else {  		iter = GetIterAtMark (insert_mark);  		Gtk.TextIter prev = iter;  		prev.BackwardChar ();  		// Remove soft breaks  		if (prev.Char == "\u2028") {  			Delete (ref prev' ref iter);  		}  		Undoer.FreezeUndo ();  		int offset = iter.Offset;  		Insert (ref iter' "\n");  		iter = GetIterAtMark (insert_mark);  		Gtk.TextIter start = GetIterAtLine (iter.Line);  		// Set the direction of the bullet to be the same  		// as the first character on the new line  		Pango.Direction direction = prev_depth.Direction;  		if (iter.Char != "\n" && iter.Char.Length > 0)  			direction = Pango.Global.UnicharDirection (iter.Char [0]);  		InsertBullet (ref start' prev_depth.Depth' direction);  		Undoer.ThawUndo ();  		NewBulletInserted (this' new InsertBulletEventArgs (offset' prev_depth.Depth' direction));  	}  	return true;  } // Replace lines starting with any numbers of leading spaces   // followed by '*' or '-' and then by a space with bullets  else if (LineNeedsBullet (iter)) {  	Gtk.TextIter start = GetIterAtLineOffset (iter.Line' 0);  	Gtk.TextIter end = GetIterAtLineOffset (iter.Line' 0);  	// Remove any leading white space  	while (end.Char == " ")  		end.ForwardChar ();  	// Remove the '*' or '-' character and the space after  	end.ForwardChars (2);  	// Set the direction of the bullet to be the same as  	// the first character after the '*' or '-'  	Pango.Direction direction = Pango.Direction.Ltr;  	if (end.Char.Length > 0)  		direction = Pango.Global.UnicharDirection (end.Char [0]);  	Delete (ref start' ref end);  	if (end.EndsLine ()) {  		IncreaseDepth (ref start);  	} else {  		IncreaseDepth (ref start);  		iter = GetIterAtMark (insert_mark);  		int offset = iter.Offset;  		Insert (ref iter' "\n");  		iter = GetIterAtMark (insert_mark);  		iter.LineOffset = 0;  		Undoer.FreezeUndo ();  		InsertBullet (ref iter' 0' direction);  		Undoer.ThawUndo ();  		NewBulletInserted (this' new InsertBulletEventArgs (offset' 0' direction));  	}  	return true;  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AddNewline,The following statement contains a magic number: if (prev_depth != null) {  	iter.ForwardChar ();  	// See if the line was left contentless and remove the bullet  	// if so.  	if (iter.EndsLine () || insert.LineOffset < 3) {  		Gtk.TextIter start = GetIterAtLine (iter.Line);  		Gtk.TextIter end = start;  		end.ForwardToLineEnd ();  		if (end.LineOffset < 2) {  			end = start;  		} else {  			end = GetIterAtLineOffset (iter.Line' 2);  		}  		Delete (ref start' ref end);  		iter = GetIterAtMark (insert_mark);  		Insert (ref iter' "\n");  	} else {  		iter = GetIterAtMark (insert_mark);  		Gtk.TextIter prev = iter;  		prev.BackwardChar ();  		// Remove soft breaks  		if (prev.Char == "\u2028") {  			Delete (ref prev' ref iter);  		}  		Undoer.FreezeUndo ();  		int offset = iter.Offset;  		Insert (ref iter' "\n");  		iter = GetIterAtMark (insert_mark);  		Gtk.TextIter start = GetIterAtLine (iter.Line);  		// Set the direction of the bullet to be the same  		// as the first character on the new line  		Pango.Direction direction = prev_depth.Direction;  		if (iter.Char != "\n" && iter.Char.Length > 0)  			direction = Pango.Global.UnicharDirection (iter.Char [0]);  		InsertBullet (ref start' prev_depth.Depth' direction);  		Undoer.ThawUndo ();  		NewBulletInserted (this' new InsertBulletEventArgs (offset' prev_depth.Depth' direction));  	}  	return true;  } // Replace lines starting with any numbers of leading spaces   // followed by '*' or '-' and then by a space with bullets  else if (LineNeedsBullet (iter)) {  	Gtk.TextIter start = GetIterAtLineOffset (iter.Line' 0);  	Gtk.TextIter end = GetIterAtLineOffset (iter.Line' 0);  	// Remove any leading white space  	while (end.Char == " ")  		end.ForwardChar ();  	// Remove the '*' or '-' character and the space after  	end.ForwardChars (2);  	// Set the direction of the bullet to be the same as  	// the first character after the '*' or '-'  	Pango.Direction direction = Pango.Direction.Ltr;  	if (end.Char.Length > 0)  		direction = Pango.Global.UnicharDirection (end.Char [0]);  	Delete (ref start' ref end);  	if (end.EndsLine ()) {  		IncreaseDepth (ref start);  	} else {  		IncreaseDepth (ref start);  		iter = GetIterAtMark (insert_mark);  		int offset = iter.Offset;  		Insert (ref iter' "\n");  		iter = GetIterAtMark (insert_mark);  		iter.LineOffset = 0;  		Undoer.FreezeUndo ();  		InsertBullet (ref iter' 0' direction);  		Undoer.ThawUndo ();  		NewBulletInserted (this' new InsertBulletEventArgs (offset' 0' direction));  	}  	return true;  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AddNewline,The following statement contains a magic number: if (prev_depth != null) {  	iter.ForwardChar ();  	// See if the line was left contentless and remove the bullet  	// if so.  	if (iter.EndsLine () || insert.LineOffset < 3) {  		Gtk.TextIter start = GetIterAtLine (iter.Line);  		Gtk.TextIter end = start;  		end.ForwardToLineEnd ();  		if (end.LineOffset < 2) {  			end = start;  		} else {  			end = GetIterAtLineOffset (iter.Line' 2);  		}  		Delete (ref start' ref end);  		iter = GetIterAtMark (insert_mark);  		Insert (ref iter' "\n");  	} else {  		iter = GetIterAtMark (insert_mark);  		Gtk.TextIter prev = iter;  		prev.BackwardChar ();  		// Remove soft breaks  		if (prev.Char == "\u2028") {  			Delete (ref prev' ref iter);  		}  		Undoer.FreezeUndo ();  		int offset = iter.Offset;  		Insert (ref iter' "\n");  		iter = GetIterAtMark (insert_mark);  		Gtk.TextIter start = GetIterAtLine (iter.Line);  		// Set the direction of the bullet to be the same  		// as the first character on the new line  		Pango.Direction direction = prev_depth.Direction;  		if (iter.Char != "\n" && iter.Char.Length > 0)  			direction = Pango.Global.UnicharDirection (iter.Char [0]);  		InsertBullet (ref start' prev_depth.Depth' direction);  		Undoer.ThawUndo ();  		NewBulletInserted (this' new InsertBulletEventArgs (offset' prev_depth.Depth' direction));  	}  	return true;  } // Replace lines starting with any numbers of leading spaces   // followed by '*' or '-' and then by a space with bullets  else if (LineNeedsBullet (iter)) {  	Gtk.TextIter start = GetIterAtLineOffset (iter.Line' 0);  	Gtk.TextIter end = GetIterAtLineOffset (iter.Line' 0);  	// Remove any leading white space  	while (end.Char == " ")  		end.ForwardChar ();  	// Remove the '*' or '-' character and the space after  	end.ForwardChars (2);  	// Set the direction of the bullet to be the same as  	// the first character after the '*' or '-'  	Pango.Direction direction = Pango.Direction.Ltr;  	if (end.Char.Length > 0)  		direction = Pango.Global.UnicharDirection (end.Char [0]);  	Delete (ref start' ref end);  	if (end.EndsLine ()) {  		IncreaseDepth (ref start);  	} else {  		IncreaseDepth (ref start);  		iter = GetIterAtMark (insert_mark);  		int offset = iter.Offset;  		Insert (ref iter' "\n");  		iter = GetIterAtMark (insert_mark);  		iter.LineOffset = 0;  		Undoer.FreezeUndo ();  		InsertBullet (ref iter' 0' direction);  		Undoer.ThawUndo ();  		NewBulletInserted (this' new InsertBulletEventArgs (offset' 0' direction));  	}  	return true;  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AddNewline,The following statement contains a magic number: if (iter.EndsLine () || insert.LineOffset < 3) {  	Gtk.TextIter start = GetIterAtLine (iter.Line);  	Gtk.TextIter end = start;  	end.ForwardToLineEnd ();  	if (end.LineOffset < 2) {  		end = start;  	} else {  		end = GetIterAtLineOffset (iter.Line' 2);  	}  	Delete (ref start' ref end);  	iter = GetIterAtMark (insert_mark);  	Insert (ref iter' "\n");  } else {  	iter = GetIterAtMark (insert_mark);  	Gtk.TextIter prev = iter;  	prev.BackwardChar ();  	// Remove soft breaks  	if (prev.Char == "\u2028") {  		Delete (ref prev' ref iter);  	}  	Undoer.FreezeUndo ();  	int offset = iter.Offset;  	Insert (ref iter' "\n");  	iter = GetIterAtMark (insert_mark);  	Gtk.TextIter start = GetIterAtLine (iter.Line);  	// Set the direction of the bullet to be the same  	// as the first character on the new line  	Pango.Direction direction = prev_depth.Direction;  	if (iter.Char != "\n" && iter.Char.Length > 0)  		direction = Pango.Global.UnicharDirection (iter.Char [0]);  	InsertBullet (ref start' prev_depth.Depth' direction);  	Undoer.ThawUndo ();  	NewBulletInserted (this' new InsertBulletEventArgs (offset' prev_depth.Depth' direction));  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AddNewline,The following statement contains a magic number: if (iter.EndsLine () || insert.LineOffset < 3) {  	Gtk.TextIter start = GetIterAtLine (iter.Line);  	Gtk.TextIter end = start;  	end.ForwardToLineEnd ();  	if (end.LineOffset < 2) {  		end = start;  	} else {  		end = GetIterAtLineOffset (iter.Line' 2);  	}  	Delete (ref start' ref end);  	iter = GetIterAtMark (insert_mark);  	Insert (ref iter' "\n");  } else {  	iter = GetIterAtMark (insert_mark);  	Gtk.TextIter prev = iter;  	prev.BackwardChar ();  	// Remove soft breaks  	if (prev.Char == "\u2028") {  		Delete (ref prev' ref iter);  	}  	Undoer.FreezeUndo ();  	int offset = iter.Offset;  	Insert (ref iter' "\n");  	iter = GetIterAtMark (insert_mark);  	Gtk.TextIter start = GetIterAtLine (iter.Line);  	// Set the direction of the bullet to be the same  	// as the first character on the new line  	Pango.Direction direction = prev_depth.Direction;  	if (iter.Char != "\n" && iter.Char.Length > 0)  		direction = Pango.Global.UnicharDirection (iter.Char [0]);  	InsertBullet (ref start' prev_depth.Depth' direction);  	Undoer.ThawUndo ();  	NewBulletInserted (this' new InsertBulletEventArgs (offset' prev_depth.Depth' direction));  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AddNewline,The following statement contains a magic number: if (iter.EndsLine () || insert.LineOffset < 3) {  	Gtk.TextIter start = GetIterAtLine (iter.Line);  	Gtk.TextIter end = start;  	end.ForwardToLineEnd ();  	if (end.LineOffset < 2) {  		end = start;  	} else {  		end = GetIterAtLineOffset (iter.Line' 2);  	}  	Delete (ref start' ref end);  	iter = GetIterAtMark (insert_mark);  	Insert (ref iter' "\n");  } else {  	iter = GetIterAtMark (insert_mark);  	Gtk.TextIter prev = iter;  	prev.BackwardChar ();  	// Remove soft breaks  	if (prev.Char == "\u2028") {  		Delete (ref prev' ref iter);  	}  	Undoer.FreezeUndo ();  	int offset = iter.Offset;  	Insert (ref iter' "\n");  	iter = GetIterAtMark (insert_mark);  	Gtk.TextIter start = GetIterAtLine (iter.Line);  	// Set the direction of the bullet to be the same  	// as the first character on the new line  	Pango.Direction direction = prev_depth.Direction;  	if (iter.Char != "\n" && iter.Char.Length > 0)  		direction = Pango.Global.UnicharDirection (iter.Char [0]);  	InsertBullet (ref start' prev_depth.Depth' direction);  	Undoer.ThawUndo ();  	NewBulletInserted (this' new InsertBulletEventArgs (offset' prev_depth.Depth' direction));  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AddNewline,The following statement contains a magic number: if (end.LineOffset < 2) {  	end = start;  } else {  	end = GetIterAtLineOffset (iter.Line' 2);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AddNewline,The following statement contains a magic number: if (end.LineOffset < 2) {  	end = start;  } else {  	end = GetIterAtLineOffset (iter.Line' 2);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AddNewline,The following statement contains a magic number: end = GetIterAtLineOffset (iter.Line' 2);  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AddNewline,The following statement contains a magic number: if (LineNeedsBullet (iter)) {  	Gtk.TextIter start = GetIterAtLineOffset (iter.Line' 0);  	Gtk.TextIter end = GetIterAtLineOffset (iter.Line' 0);  	// Remove any leading white space  	while (end.Char == " ")  		end.ForwardChar ();  	// Remove the '*' or '-' character and the space after  	end.ForwardChars (2);  	// Set the direction of the bullet to be the same as  	// the first character after the '*' or '-'  	Pango.Direction direction = Pango.Direction.Ltr;  	if (end.Char.Length > 0)  		direction = Pango.Global.UnicharDirection (end.Char [0]);  	Delete (ref start' ref end);  	if (end.EndsLine ()) {  		IncreaseDepth (ref start);  	} else {  		IncreaseDepth (ref start);  		iter = GetIterAtMark (insert_mark);  		int offset = iter.Offset;  		Insert (ref iter' "\n");  		iter = GetIterAtMark (insert_mark);  		iter.LineOffset = 0;  		Undoer.FreezeUndo ();  		InsertBullet (ref iter' 0' direction);  		Undoer.ThawUndo ();  		NewBulletInserted (this' new InsertBulletEventArgs (offset' 0' direction));  	}  	return true;  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AddNewline,The following statement contains a magic number: end.ForwardChars (2);  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,DeleteKeyHandler,The following statement contains a magic number: if (selection) {  	AugmentSelection (ref start' ref end);  	Delete (ref start' ref end);  	return true;  } else if (start.EndsLine () && start.Line < LineCount) {  	Gtk.TextIter next = GetIterAtLine (start.Line + 1);  	end = start;  	if (IsBulletedListActive ())  		end.ForwardChars (3);  	else  		end.ForwardChars (1);  	DepthNoteTag depth = FindDepthTag (next);  	if (depth != null) {  		Delete (ref start' ref end);  		return true;  	}  } else {  	Gtk.TextIter next = start;  	if (next.LineOffset != 0)  		next.ForwardChar ();  	DepthNoteTag depth = FindDepthTag (start);  	DepthNoteTag nextDepth = FindDepthTag (next);  	if (depth != null || nextDepth != null) {  		DecreaseDepth (ref start);  		return true;  	}  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,DeleteKeyHandler,The following statement contains a magic number: if (start.EndsLine () && start.Line < LineCount) {  	Gtk.TextIter next = GetIterAtLine (start.Line + 1);  	end = start;  	if (IsBulletedListActive ())  		end.ForwardChars (3);  	else  		end.ForwardChars (1);  	DepthNoteTag depth = FindDepthTag (next);  	if (depth != null) {  		Delete (ref start' ref end);  		return true;  	}  } else {  	Gtk.TextIter next = start;  	if (next.LineOffset != 0)  		next.ForwardChar ();  	DepthNoteTag depth = FindDepthTag (start);  	DepthNoteTag nextDepth = FindDepthTag (next);  	if (depth != null || nextDepth != null) {  		DecreaseDepth (ref start);  		return true;  	}  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,DeleteKeyHandler,The following statement contains a magic number: if (IsBulletedListActive ())  	end.ForwardChars (3);  else  	end.ForwardChars (1);  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,DeleteKeyHandler,The following statement contains a magic number: end.ForwardChars (3);  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,BackspaceKeyHandler,The following statement contains a magic number: if (selection) {  	AugmentSelection (ref start' ref end);  	Delete (ref start' ref end);  	return true;  } else {  	// See if the cursor is inside or just after a bullet region  	// ie.  	// |* lorum ipsum  	//  ^^^  	// and decrease the depth if it is.  	Gtk.TextIter prev = start;  	if (prev.LineOffset != 0)  		prev.BackwardChars (1);  	DepthNoteTag prev_depth = FindDepthTag (prev);  	if (depth != null || prev_depth != null) {  		DecreaseDepth (ref start);  		return true;  	} else {  		// See if the cursor is before a soft line break  		// and remove it if it is. Otherwise you have to  		// press backspace twice before  it will delete  		// the previous visible character.  		prev = start;  		prev.BackwardChars (2);  		if (prev.Char == "\u2028") {  			Gtk.TextIter end_break = prev;  			end_break.ForwardChar ();  			Delete (ref prev' ref end_break);  		}  	}  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,BackspaceKeyHandler,The following statement contains a magic number: if (depth != null || prev_depth != null) {  	DecreaseDepth (ref start);  	return true;  } else {  	// See if the cursor is before a soft line break  	// and remove it if it is. Otherwise you have to  	// press backspace twice before  it will delete  	// the previous visible character.  	prev = start;  	prev.BackwardChars (2);  	if (prev.Char == "\u2028") {  		Gtk.TextIter end_break = prev;  		end_break.ForwardChar ();  		Delete (ref prev' ref end_break);  	}  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,BackspaceKeyHandler,The following statement contains a magic number: prev.BackwardChars (2);  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,CheckSelection,The following statement contains a magic number: if (selection) {  	AugmentSelection (ref start' ref end);  } else {  	// If the cursor is at the start of a bulleted line  	// move it so it is after the bullet.  	if ((start.LineOffset == 0 || start.LineOffset == 1) && FindDepthTag (start) != null) {  		start.LineOffset = 2;  		SelectRange (start' start);  	}  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,CheckSelection,The following statement contains a magic number: if ((start.LineOffset == 0 || start.LineOffset == 1) && FindDepthTag (start) != null) {  	start.LineOffset = 2;  	SelectRange (start' start);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,CheckSelection,The following statement contains a magic number: start.LineOffset = 2;  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AugmentSelection,The following statement contains a magic number: if (start_depth != null) {  	start.LineOffset = 2;  	SelectRange (start' end);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AugmentSelection,The following statement contains a magic number: start.LineOffset = 2;  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AugmentSelection,The following statement contains a magic number: if (inside_end_depth != null) {  	end.LineOffset = 2;  	SelectRange (start' end);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AugmentSelection,The following statement contains a magic number: end.LineOffset = 2;  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AugmentSelection,The following statement contains a magic number: if (end_depth != null) {  	end.LineOffset = 2;  	SelectRange (start' end);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,AugmentSelection,The following statement contains a magic number: end.LineOffset = 2;  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,RunWidgetQueue,The following statement contains a magic number: foreach (WidgetInsertData data in widgetQueue) {  	// HACK: This is a quick fix for bug #486551  	if (data.position == null)  		continue;  	NoteBuffer buffer = data.buffer as NoteBuffer;  	Gtk.TextIter iter = buffer.GetIterAtMark (data.position);  	Gtk.TextMark location = data.position;  	// Prevent the widget from being inserted before a bullet  	if (FindDepthTag (iter) != null) {  		iter.LineOffset = 2;  		location = CreateMark (data.position.Name' iter' data.position.LeftGravity);  	}  	buffer.Undoer.FreezeUndo ();  	if (data.adding && data.tag.WidgetLocation == null) {  		Gtk.TextChildAnchor childAnchor = buffer.CreateChildAnchor (ref iter);  		data.tag.WidgetLocation = location;  		note.AddChildWidget (childAnchor' data.widget);  	} else if (!data.adding && data.tag.WidgetLocation != null) {  		Gtk.TextIter end = iter;  		end.ForwardChar ();  		buffer.Delete (ref iter' ref end);  		buffer.DeleteMark (location);  		data.tag.WidgetLocation = null;  	}  	buffer.Undoer.ThawUndo ();  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,RunWidgetQueue,The following statement contains a magic number: if (FindDepthTag (iter) != null) {  	iter.LineOffset = 2;  	location = CreateMark (data.position.Name' iter' data.position.LeftGravity);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,RunWidgetQueue,The following statement contains a magic number: iter.LineOffset = 2;  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,ToggleSelectionBullets,The following statement contains a magic number: for (int i = start_line; i <= end_line; i++) {  	Gtk.TextIter curr_line = GetIterAtLine (i);  	if (toggle_on && FindDepthTag (curr_line) == null) {  		IncreaseDepth (ref curr_line);  	} else if (!toggle_on && FindDepthTag (curr_line) != null) {  		Gtk.TextIter bullet_end = GetIterAtLineOffset (curr_line.Line' 2);  		Delete (ref curr_line' ref bullet_end);  	}  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,ToggleSelectionBullets,The following statement contains a magic number: if (toggle_on && FindDepthTag (curr_line) == null) {  	IncreaseDepth (ref curr_line);  } else if (!toggle_on && FindDepthTag (curr_line) != null) {  	Gtk.TextIter bullet_end = GetIterAtLineOffset (curr_line.Line' 2);  	Delete (ref curr_line' ref bullet_end);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,ToggleSelectionBullets,The following statement contains a magic number: if (!toggle_on && FindDepthTag (curr_line) != null) {  	Gtk.TextIter bullet_end = GetIterAtLineOffset (curr_line.Line' 2);  	Delete (ref curr_line' ref bullet_end);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,ChangeCursorDepthDirectional,The following statement contains a magic number: if (start_depth != null) {  	next.ForwardChars (2);  } else {  	// Look for the first non-space character on the line  	// and use that to determine what direction we should go  	next.ForwardSentenceEnd ();  	next.BackwardSentenceStart ();  	first_char_rtl = next.Char.Length > 0 && (Pango.Global.UnicharDirection (next.Char [0]) == Pango.Direction.Rtl);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,ChangeCursorDepthDirectional,The following statement contains a magic number: next.ForwardChars (2);  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,RemoveBullet,The following statement contains a magic number: if (line_end.LineOffset < 2) {  	end = GetIterAtLineOffset (iter.Line' 1);  } else {  	end = GetIterAtLineOffset (iter.Line' 2);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,RemoveBullet,The following statement contains a magic number: if (line_end.LineOffset < 2) {  	end = GetIterAtLineOffset (iter.Line' 1);  } else {  	end = GetIterAtLineOffset (iter.Line' 2);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,RemoveBullet,The following statement contains a magic number: end = GetIterAtLineOffset (iter.Line' 2);  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,IncreaseDepth,The following statement contains a magic number: end.ForwardChars (2);  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,DecreaseDepth,The following statement contains a magic number: if (line_end.LineOffset < 2 || start.EndsLine ()) {  	end = start;  } else {  	end = GetIterAtLineOffset (start.Line' 2);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,DecreaseDepth,The following statement contains a magic number: if (line_end.LineOffset < 2 || start.EndsLine ()) {  	end = start;  } else {  	end = GetIterAtLineOffset (start.Line' 2);  }  
Magic Number,Tomboy,NoteBuffer,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,DecreaseDepth,The following statement contains a magic number: end = GetIterAtLineOffset (start.Line' 2);  
Magic Number,Tomboy,NoteBufferArchiver,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,Serialize,The following statement contains a magic number: while (!iter.Equal (end) && iter.Char != null) {  	DepthNoteTag depth_tag = ((NoteBuffer)buffer).FindDepthTag (iter);  	// If we are at a character with a depth tag we are at the  	// start of a bulleted line  	if (depth_tag != null && iter.StartsLine ()) {  		line_has_depth = true;  		if (iter.Line == prev_depth_line + 1) {  			// Line part of existing list  			if (depth_tag.Depth == prev_depth) {  				// Line same depth as previous  				// Close previous <list-item>  				xml.WriteEndElement ();  			} else if (depth_tag.Depth > prev_depth) {  				// Line of greater depth  				xml.WriteStartElement (null' "list"' null);  				for (int i = prev_depth + 2; i <= depth_tag.Depth; i++) {  					// Start a new nested list  					xml.WriteStartElement (null' "list-item"' null);  					xml.WriteStartElement (null' "list"' null);  				}  			} else {  				// Line of lesser depth  				// Close previous <list-item>  				// and nested <list>s  				xml.WriteEndElement ();  				for (int i = prev_depth; i > depth_tag.Depth; i--) {  					// Close nested <list>  					xml.WriteEndElement ();  					// Close <list-item>  					xml.WriteEndElement ();  				}  			}  		} else {  			// Start of new list  			xml.WriteStartElement (null' "list"' null);  			for (int i = 1; i <= depth_tag.Depth; i++) {  				xml.WriteStartElement (null' "list-item"' null);  				xml.WriteStartElement (null' "list"' null);  			}  		}  		prev_depth = depth_tag.Depth;  		// Start a new <list-item>  		WriteTag (depth_tag' xml' true);  	}  	// Output any tags that begin at the current position  	foreach (Gtk.TextTag tag in iter.Tags) {  		if (iter.BeginsTag (tag)) {  			if (!(tag is DepthNoteTag) && NoteTagTable.TagIsSerializable (tag)) {  				WriteTag (tag' xml' true);  				tag_stack.Push (tag);  			}  		}  	}  	// Reopen tags that continued across indented lines  	// or into or out of lines with a depth  	while (continue_stack.Count > 0 && ((depth_tag == null && iter.StartsLine ()) || iter.LineOffset == 1)) {  		Gtk.TextTag continue_tag = continue_stack.Pop ();  		if (!TagEndsHere (continue_tag' iter' next_iter) && iter.HasTag (continue_tag)) {  			WriteTag (continue_tag' xml' true);  			tag_stack.Push (continue_tag);  		}  	}  	// Hidden character representing an anchor  	if (iter.Char [0] == (char)0xFFFC) {  		Logger.Info ("Got child anchor!");  		if (iter.ChildAnchor != null) {  			string serialize = (string)iter.ChildAnchor.Data ["serialize"];  			if (serialize != null)  				xml.WriteRaw (serialize);  		}  		// Line Separator character  	} else if (iter.Char == "\u2028") {  		xml.WriteCharEntity ('\u2028');  	} else if (depth_tag == null) {  		xml.WriteString (iter.Char);  	}  	bool end_of_depth_line = line_has_depth && next_iter.EndsLine ();  	bool next_line_has_depth = false;  	if (iter.Line < buffer.LineCount - 1) {  		Gtk.TextIter next_line = buffer.GetIterAtLine (iter.Line + 1);  		next_line_has_depth = ((NoteBuffer)buffer).FindDepthTag (next_line) != null;  	}  	bool at_empty_line = iter.EndsLine () && iter.StartsLine ();  	if (end_of_depth_line || (next_line_has_depth && (next_iter.EndsLine () || at_empty_line))) {  		// Close all tags in the tag_stack  		while (tag_stack.Count > 0) {  			Gtk.TextTag existing_tag = tag_stack.Pop ();  			// Any tags which continue across the indented  			// line are added to the continue_stack to be  			// reopened at the start of the next <list-item>  			if (!TagEndsHere (existing_tag' iter' next_iter)) {  				continue_stack.Push (existing_tag);  			}  			WriteTag (existing_tag' xml' false);  		}  	} else {  		foreach (Gtk.TextTag tag in iter.Tags) {  			if (TagEndsHere (tag' iter' next_iter) && NoteTagTable.TagIsSerializable (tag) && !(tag is DepthNoteTag)) {  				while (tag_stack.Count > 0) {  					Gtk.TextTag existing_tag = tag_stack.Pop ();  					if (!TagEndsHere (existing_tag' iter' next_iter)) {  						replay_stack.Push (existing_tag);  					}  					WriteTag (existing_tag' xml' false);  				}  				// Replay the replay queue.  				// Restart any tags that  				// overlapped with the ended  				// tag...  				while (replay_stack.Count > 0) {  					Gtk.TextTag replay_tag = replay_stack.Pop ();  					tag_stack.Push (replay_tag);  					WriteTag (replay_tag' xml' true);  				}  			}  		}  	}  	// At the end of the line record that it  	// was the last line encountered with a depth  	if (end_of_depth_line) {  		line_has_depth = false;  		prev_depth_line = iter.Line;  	}  	// If we are at the end of a line with a depth and the  	// next line does not have a depth line close all <list>  	// and <list-item> tags that remain open  	if (end_of_depth_line && !next_line_has_depth) {  		for (int i = prev_depth; i > -1; i--) {  			// Close <list>  			xml.WriteFullEndElement ();  			// Close <list-item>  			xml.WriteFullEndElement ();  		}  		prev_depth = -1;  	}  	iter.ForwardChar ();  	next_iter.ForwardChar ();  }  
Magic Number,Tomboy,NoteBufferArchiver,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,Serialize,The following statement contains a magic number: if (depth_tag != null && iter.StartsLine ()) {  	line_has_depth = true;  	if (iter.Line == prev_depth_line + 1) {  		// Line part of existing list  		if (depth_tag.Depth == prev_depth) {  			// Line same depth as previous  			// Close previous <list-item>  			xml.WriteEndElement ();  		} else if (depth_tag.Depth > prev_depth) {  			// Line of greater depth  			xml.WriteStartElement (null' "list"' null);  			for (int i = prev_depth + 2; i <= depth_tag.Depth; i++) {  				// Start a new nested list  				xml.WriteStartElement (null' "list-item"' null);  				xml.WriteStartElement (null' "list"' null);  			}  		} else {  			// Line of lesser depth  			// Close previous <list-item>  			// and nested <list>s  			xml.WriteEndElement ();  			for (int i = prev_depth; i > depth_tag.Depth; i--) {  				// Close nested <list>  				xml.WriteEndElement ();  				// Close <list-item>  				xml.WriteEndElement ();  			}  		}  	} else {  		// Start of new list  		xml.WriteStartElement (null' "list"' null);  		for (int i = 1; i <= depth_tag.Depth; i++) {  			xml.WriteStartElement (null' "list-item"' null);  			xml.WriteStartElement (null' "list"' null);  		}  	}  	prev_depth = depth_tag.Depth;  	// Start a new <list-item>  	WriteTag (depth_tag' xml' true);  }  
Magic Number,Tomboy,NoteBufferArchiver,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,Serialize,The following statement contains a magic number: if (iter.Line == prev_depth_line + 1) {  	// Line part of existing list  	if (depth_tag.Depth == prev_depth) {  		// Line same depth as previous  		// Close previous <list-item>  		xml.WriteEndElement ();  	} else if (depth_tag.Depth > prev_depth) {  		// Line of greater depth  		xml.WriteStartElement (null' "list"' null);  		for (int i = prev_depth + 2; i <= depth_tag.Depth; i++) {  			// Start a new nested list  			xml.WriteStartElement (null' "list-item"' null);  			xml.WriteStartElement (null' "list"' null);  		}  	} else {  		// Line of lesser depth  		// Close previous <list-item>  		// and nested <list>s  		xml.WriteEndElement ();  		for (int i = prev_depth; i > depth_tag.Depth; i--) {  			// Close nested <list>  			xml.WriteEndElement ();  			// Close <list-item>  			xml.WriteEndElement ();  		}  	}  } else {  	// Start of new list  	xml.WriteStartElement (null' "list"' null);  	for (int i = 1; i <= depth_tag.Depth; i++) {  		xml.WriteStartElement (null' "list-item"' null);  		xml.WriteStartElement (null' "list"' null);  	}  }  
Magic Number,Tomboy,NoteBufferArchiver,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,Serialize,The following statement contains a magic number: if (depth_tag.Depth == prev_depth) {  	// Line same depth as previous  	// Close previous <list-item>  	xml.WriteEndElement ();  } else if (depth_tag.Depth > prev_depth) {  	// Line of greater depth  	xml.WriteStartElement (null' "list"' null);  	for (int i = prev_depth + 2; i <= depth_tag.Depth; i++) {  		// Start a new nested list  		xml.WriteStartElement (null' "list-item"' null);  		xml.WriteStartElement (null' "list"' null);  	}  } else {  	// Line of lesser depth  	// Close previous <list-item>  	// and nested <list>s  	xml.WriteEndElement ();  	for (int i = prev_depth; i > depth_tag.Depth; i--) {  		// Close nested <list>  		xml.WriteEndElement ();  		// Close <list-item>  		xml.WriteEndElement ();  	}  }  
Magic Number,Tomboy,NoteBufferArchiver,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,Serialize,The following statement contains a magic number: if (depth_tag.Depth > prev_depth) {  	// Line of greater depth  	xml.WriteStartElement (null' "list"' null);  	for (int i = prev_depth + 2; i <= depth_tag.Depth; i++) {  		// Start a new nested list  		xml.WriteStartElement (null' "list-item"' null);  		xml.WriteStartElement (null' "list"' null);  	}  } else {  	// Line of lesser depth  	// Close previous <list-item>  	// and nested <list>s  	xml.WriteEndElement ();  	for (int i = prev_depth; i > depth_tag.Depth; i--) {  		// Close nested <list>  		xml.WriteEndElement ();  		// Close <list-item>  		xml.WriteEndElement ();  	}  }  
Magic Number,Tomboy,NoteBufferArchiver,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,Serialize,The following statement contains a magic number: for (int i = prev_depth + 2; i <= depth_tag.Depth; i++) {  	// Start a new nested list  	xml.WriteStartElement (null' "list-item"' null);  	xml.WriteStartElement (null' "list"' null);  }  
Magic Number,Tomboy,NoteBufferArchiver,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,Deserialize,The following statement contains a magic number: while (xml.Read ()) {  	switch (xml.NodeType) {  	case XmlNodeType.Element:  		if (xml.Name == "note-content")  			break;  		tag_start = new TagStart ();  		tag_start.Start = offset;  		if (note_table != null && note_table.IsDynamicTagRegistered (xml.Name)) {  			tag_start.Tag = note_table.CreateDynamicTag (xml.Name);  		} else if (xml.Name == "list") {  			curr_depth++;  			break;  		} else if (xml.Name == "list-item") {  			if (curr_depth >= 0) {  				if (xml.GetAttribute ("dir") == "rtl") {  					tag_start.Tag = note_table.GetDepthTag (curr_depth' Pango.Direction.Rtl);  				} else {  					tag_start.Tag = note_table.GetDepthTag (curr_depth' Pango.Direction.Ltr);  				}  				list_stack.Push (false);  			} else {  				Logger.Error ("</list> tag mismatch");  			}  		} else {  			tag_start.Tag = buffer.TagTable.Lookup (xml.Name);  		}  		if (tag_start.Tag is NoteTag) {  			((NoteTag)tag_start.Tag).Read (xml' true);  		}  		stack.Push (tag_start);  		break;  	case XmlNodeType.Text:  	case XmlNodeType.Whitespace:  	case XmlNodeType.SignificantWhitespace:  		Gtk.TextIter insert_at = buffer.GetIterAtOffset (offset);  		buffer.Insert (ref insert_at' xml.Value);  		offset += xml.Value.Length;  		// If we are inside a <list-item> mark off  		// that we have encountered some content  		if (list_stack.Count > 0) {  			list_stack.Pop ();  			list_stack.Push (true);  		}  		break;  	case XmlNodeType.EndElement:  		if (xml.Name == "note-content")  			break;  		if (xml.Name == "list") {  			curr_depth--;  			break;  		}  		tag_start = stack.Pop ();  		if (tag_start.Tag == null)  			break;  		Gtk.TextIter apply_start' apply_end;  		apply_start = buffer.GetIterAtOffset (tag_start.Start);  		apply_end = buffer.GetIterAtOffset (offset);  		if (tag_start.Tag is NoteTag) {  			((NoteTag)tag_start.Tag).Read (xml' false);  		}  		// Insert a bullet if we have reached a closing  		// <list-item> tag' but only if the <list-item>  		// had content.  		DepthNoteTag depth_tag = tag_start.Tag as DepthNoteTag;  		if (depth_tag != null && list_stack.Pop ()) {  			((NoteBuffer)buffer).InsertBullet (ref apply_start' depth_tag.Depth' depth_tag.Direction);  			buffer.RemoveAllTags (apply_start' apply_start);  			offset += 2;  		} else if (depth_tag == null) {  			buffer.ApplyTag (tag_start.Tag' apply_start' apply_end);  		}  		break;  	default:  		Logger.Warn ("Unhandled element {0}. Value: '{1}'"' xml.NodeType' xml.Value);  		break;  	}  }  
Magic Number,Tomboy,NoteBufferArchiver,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,Deserialize,The following statement contains a magic number: switch (xml.NodeType) {  case XmlNodeType.Element:  	if (xml.Name == "note-content")  		break;  	tag_start = new TagStart ();  	tag_start.Start = offset;  	if (note_table != null && note_table.IsDynamicTagRegistered (xml.Name)) {  		tag_start.Tag = note_table.CreateDynamicTag (xml.Name);  	} else if (xml.Name == "list") {  		curr_depth++;  		break;  	} else if (xml.Name == "list-item") {  		if (curr_depth >= 0) {  			if (xml.GetAttribute ("dir") == "rtl") {  				tag_start.Tag = note_table.GetDepthTag (curr_depth' Pango.Direction.Rtl);  			} else {  				tag_start.Tag = note_table.GetDepthTag (curr_depth' Pango.Direction.Ltr);  			}  			list_stack.Push (false);  		} else {  			Logger.Error ("</list> tag mismatch");  		}  	} else {  		tag_start.Tag = buffer.TagTable.Lookup (xml.Name);  	}  	if (tag_start.Tag is NoteTag) {  		((NoteTag)tag_start.Tag).Read (xml' true);  	}  	stack.Push (tag_start);  	break;  case XmlNodeType.Text:  case XmlNodeType.Whitespace:  case XmlNodeType.SignificantWhitespace:  	Gtk.TextIter insert_at = buffer.GetIterAtOffset (offset);  	buffer.Insert (ref insert_at' xml.Value);  	offset += xml.Value.Length;  	// If we are inside a <list-item> mark off  	// that we have encountered some content  	if (list_stack.Count > 0) {  		list_stack.Pop ();  		list_stack.Push (true);  	}  	break;  case XmlNodeType.EndElement:  	if (xml.Name == "note-content")  		break;  	if (xml.Name == "list") {  		curr_depth--;  		break;  	}  	tag_start = stack.Pop ();  	if (tag_start.Tag == null)  		break;  	Gtk.TextIter apply_start' apply_end;  	apply_start = buffer.GetIterAtOffset (tag_start.Start);  	apply_end = buffer.GetIterAtOffset (offset);  	if (tag_start.Tag is NoteTag) {  		((NoteTag)tag_start.Tag).Read (xml' false);  	}  	// Insert a bullet if we have reached a closing  	// <list-item> tag' but only if the <list-item>  	// had content.  	DepthNoteTag depth_tag = tag_start.Tag as DepthNoteTag;  	if (depth_tag != null && list_stack.Pop ()) {  		((NoteBuffer)buffer).InsertBullet (ref apply_start' depth_tag.Depth' depth_tag.Direction);  		buffer.RemoveAllTags (apply_start' apply_start);  		offset += 2;  	} else if (depth_tag == null) {  		buffer.ApplyTag (tag_start.Tag' apply_start' apply_end);  	}  	break;  default:  	Logger.Warn ("Unhandled element {0}. Value: '{1}'"' xml.NodeType' xml.Value);  	break;  }  
Magic Number,Tomboy,NoteBufferArchiver,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,Deserialize,The following statement contains a magic number: if (depth_tag != null && list_stack.Pop ()) {  	((NoteBuffer)buffer).InsertBullet (ref apply_start' depth_tag.Depth' depth_tag.Direction);  	buffer.RemoveAllTags (apply_start' apply_start);  	offset += 2;  } else if (depth_tag == null) {  	buffer.ApplyTag (tag_start.Tag' apply_start' apply_end);  }  
Magic Number,Tomboy,NoteBufferArchiver,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteBuffer.cs,Deserialize,The following statement contains a magic number: offset += 2;  
Magic Number,Tomboy,NoteManager,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteManager.cs,GetOrCreateTemplateNote,The following statement contains a magic number: if (template_note == null) {  	template_note = Create (NoteTemplateTitle' GetNoteTemplateContent (NoteTemplateTitle));  	// Select the initial text  	NoteBuffer buffer = template_note.Buffer;  	Gtk.TextIter iter = buffer.GetIterAtLineOffset (2' 0);  	buffer.MoveMark (buffer.SelectionBound' iter);  	buffer.MoveMark (buffer.InsertMark' buffer.EndIter);  	// Flag this as a template note  	template_note.AddTag (template_tag);  	template_note.QueueSave (ChangeType.ContentChanged);  }  
Magic Number,Tomboy,NoteTag,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,OnTextEvent,The following statement contains a magic number: switch (ev.Type) {  case Gdk.EventType.ButtonPress:  	Gdk.EventButton button_ev = new Gdk.EventButton (ev.Handle);  	// Do not insert selected text when activating links with  	// middle mouse button  	if (button_ev.Button == 2) {  		allow_middle_activate = true;  		return true;  	}  	return false;  case Gdk.EventType.ButtonRelease:  	button_ev = new Gdk.EventButton (ev.Handle);  	if (button_ev.Button != 1 && button_ev.Button != 2)  		return false;  	/* Don't activate if Shift or Control is pressed */if ((int)(button_ev.State & (Gdk.ModifierType.ShiftMask | Gdk.ModifierType.ControlMask)) != 0)  		return false;  	// Prevent activation when selecting links with the mouse  	if (editor.Buffer.HasSelection)  		return false;  	// Don't activate if the link has just been pasted with the  	// middle mouse button (no preceding ButtonPress event)  	if (button_ev.Button == 2 && !allow_middle_activate)  		return false;  	else  		allow_middle_activate = false;  	GetExtents (iter' out start' out end);  	bool success = OnActivate (editor' start' end);  	// Hide note if link is activated with middle mouse button  	if (success && button_ev.Button == 2) {  		Gtk.Widget widget = (Gtk.Widget)sender;  		widget.Toplevel.Hide ();  	}  	return false;  case Gdk.EventType.KeyPress:  	Gdk.EventKey key_ev = new Gdk.EventKey (ev.Handle);  	// Control-Enter activates the link at point...  	if ((int)(key_ev.State & Gdk.ModifierType.ControlMask) == 0)  		return false;  	if (key_ev.Key != Gdk.Key.Return && key_ev.Key != Gdk.Key.KP_Enter)  		return false;  	GetExtents (iter' out start' out end);  	return OnActivate (editor' start' end);  }  
Magic Number,Tomboy,NoteTag,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,OnTextEvent,The following statement contains a magic number: switch (ev.Type) {  case Gdk.EventType.ButtonPress:  	Gdk.EventButton button_ev = new Gdk.EventButton (ev.Handle);  	// Do not insert selected text when activating links with  	// middle mouse button  	if (button_ev.Button == 2) {  		allow_middle_activate = true;  		return true;  	}  	return false;  case Gdk.EventType.ButtonRelease:  	button_ev = new Gdk.EventButton (ev.Handle);  	if (button_ev.Button != 1 && button_ev.Button != 2)  		return false;  	/* Don't activate if Shift or Control is pressed */if ((int)(button_ev.State & (Gdk.ModifierType.ShiftMask | Gdk.ModifierType.ControlMask)) != 0)  		return false;  	// Prevent activation when selecting links with the mouse  	if (editor.Buffer.HasSelection)  		return false;  	// Don't activate if the link has just been pasted with the  	// middle mouse button (no preceding ButtonPress event)  	if (button_ev.Button == 2 && !allow_middle_activate)  		return false;  	else  		allow_middle_activate = false;  	GetExtents (iter' out start' out end);  	bool success = OnActivate (editor' start' end);  	// Hide note if link is activated with middle mouse button  	if (success && button_ev.Button == 2) {  		Gtk.Widget widget = (Gtk.Widget)sender;  		widget.Toplevel.Hide ();  	}  	return false;  case Gdk.EventType.KeyPress:  	Gdk.EventKey key_ev = new Gdk.EventKey (ev.Handle);  	// Control-Enter activates the link at point...  	if ((int)(key_ev.State & Gdk.ModifierType.ControlMask) == 0)  		return false;  	if (key_ev.Key != Gdk.Key.Return && key_ev.Key != Gdk.Key.KP_Enter)  		return false;  	GetExtents (iter' out start' out end);  	return OnActivate (editor' start' end);  }  
Magic Number,Tomboy,NoteTag,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,OnTextEvent,The following statement contains a magic number: switch (ev.Type) {  case Gdk.EventType.ButtonPress:  	Gdk.EventButton button_ev = new Gdk.EventButton (ev.Handle);  	// Do not insert selected text when activating links with  	// middle mouse button  	if (button_ev.Button == 2) {  		allow_middle_activate = true;  		return true;  	}  	return false;  case Gdk.EventType.ButtonRelease:  	button_ev = new Gdk.EventButton (ev.Handle);  	if (button_ev.Button != 1 && button_ev.Button != 2)  		return false;  	/* Don't activate if Shift or Control is pressed */if ((int)(button_ev.State & (Gdk.ModifierType.ShiftMask | Gdk.ModifierType.ControlMask)) != 0)  		return false;  	// Prevent activation when selecting links with the mouse  	if (editor.Buffer.HasSelection)  		return false;  	// Don't activate if the link has just been pasted with the  	// middle mouse button (no preceding ButtonPress event)  	if (button_ev.Button == 2 && !allow_middle_activate)  		return false;  	else  		allow_middle_activate = false;  	GetExtents (iter' out start' out end);  	bool success = OnActivate (editor' start' end);  	// Hide note if link is activated with middle mouse button  	if (success && button_ev.Button == 2) {  		Gtk.Widget widget = (Gtk.Widget)sender;  		widget.Toplevel.Hide ();  	}  	return false;  case Gdk.EventType.KeyPress:  	Gdk.EventKey key_ev = new Gdk.EventKey (ev.Handle);  	// Control-Enter activates the link at point...  	if ((int)(key_ev.State & Gdk.ModifierType.ControlMask) == 0)  		return false;  	if (key_ev.Key != Gdk.Key.Return && key_ev.Key != Gdk.Key.KP_Enter)  		return false;  	GetExtents (iter' out start' out end);  	return OnActivate (editor' start' end);  }  
Magic Number,Tomboy,NoteTag,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,OnTextEvent,The following statement contains a magic number: switch (ev.Type) {  case Gdk.EventType.ButtonPress:  	Gdk.EventButton button_ev = new Gdk.EventButton (ev.Handle);  	// Do not insert selected text when activating links with  	// middle mouse button  	if (button_ev.Button == 2) {  		allow_middle_activate = true;  		return true;  	}  	return false;  case Gdk.EventType.ButtonRelease:  	button_ev = new Gdk.EventButton (ev.Handle);  	if (button_ev.Button != 1 && button_ev.Button != 2)  		return false;  	/* Don't activate if Shift or Control is pressed */if ((int)(button_ev.State & (Gdk.ModifierType.ShiftMask | Gdk.ModifierType.ControlMask)) != 0)  		return false;  	// Prevent activation when selecting links with the mouse  	if (editor.Buffer.HasSelection)  		return false;  	// Don't activate if the link has just been pasted with the  	// middle mouse button (no preceding ButtonPress event)  	if (button_ev.Button == 2 && !allow_middle_activate)  		return false;  	else  		allow_middle_activate = false;  	GetExtents (iter' out start' out end);  	bool success = OnActivate (editor' start' end);  	// Hide note if link is activated with middle mouse button  	if (success && button_ev.Button == 2) {  		Gtk.Widget widget = (Gtk.Widget)sender;  		widget.Toplevel.Hide ();  	}  	return false;  case Gdk.EventType.KeyPress:  	Gdk.EventKey key_ev = new Gdk.EventKey (ev.Handle);  	// Control-Enter activates the link at point...  	if ((int)(key_ev.State & Gdk.ModifierType.ControlMask) == 0)  		return false;  	if (key_ev.Key != Gdk.Key.Return && key_ev.Key != Gdk.Key.KP_Enter)  		return false;  	GetExtents (iter' out start' out end);  	return OnActivate (editor' start' end);  }  
Magic Number,Tomboy,NoteTag,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,OnTextEvent,The following statement contains a magic number: if (button_ev.Button == 2) {  	allow_middle_activate = true;  	return true;  }  
Magic Number,Tomboy,NoteTag,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,OnTextEvent,The following statement contains a magic number: if (button_ev.Button != 1 && button_ev.Button != 2)  	return false;  
Magic Number,Tomboy,NoteTag,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,OnTextEvent,The following statement contains a magic number: if (button_ev.Button == 2 && !allow_middle_activate)  	return false;  else  	allow_middle_activate = false;  
Magic Number,Tomboy,NoteTag,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,OnTextEvent,The following statement contains a magic number: if (success && button_ev.Button == 2) {  	Gtk.Widget widget = (Gtk.Widget)sender;  	widget.Toplevel.Hide ();  }  
Magic Number,Tomboy,NoteTagTable,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,InitCommonTags,The following statement contains a magic number: tag.LeftMargin = 40;  
Magic Number,Tomboy,NoteTagTable,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,GetDepthTag,The following statement contains a magic number: if (tag == null) {  	tag = new DepthNoteTag (depth' direction);  	tag.Indent = -14;  	if (direction == Pango.Direction.Rtl)  		tag.RightMargin = (depth + 1) * 25;  	else  		tag.LeftMargin = (depth + 1) * 25;  	tag.PixelsBelowLines = 4;  	tag.Scale = Pango.Scale.Medium;  	Add (tag);  }  
Magic Number,Tomboy,NoteTagTable,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,GetDepthTag,The following statement contains a magic number: if (tag == null) {  	tag = new DepthNoteTag (depth' direction);  	tag.Indent = -14;  	if (direction == Pango.Direction.Rtl)  		tag.RightMargin = (depth + 1) * 25;  	else  		tag.LeftMargin = (depth + 1) * 25;  	tag.PixelsBelowLines = 4;  	tag.Scale = Pango.Scale.Medium;  	Add (tag);  }  
Magic Number,Tomboy,NoteTagTable,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,GetDepthTag,The following statement contains a magic number: if (tag == null) {  	tag = new DepthNoteTag (depth' direction);  	tag.Indent = -14;  	if (direction == Pango.Direction.Rtl)  		tag.RightMargin = (depth + 1) * 25;  	else  		tag.LeftMargin = (depth + 1) * 25;  	tag.PixelsBelowLines = 4;  	tag.Scale = Pango.Scale.Medium;  	Add (tag);  }  
Magic Number,Tomboy,NoteTagTable,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,GetDepthTag,The following statement contains a magic number: if (tag == null) {  	tag = new DepthNoteTag (depth' direction);  	tag.Indent = -14;  	if (direction == Pango.Direction.Rtl)  		tag.RightMargin = (depth + 1) * 25;  	else  		tag.LeftMargin = (depth + 1) * 25;  	tag.PixelsBelowLines = 4;  	tag.Scale = Pango.Scale.Medium;  	Add (tag);  }  
Magic Number,Tomboy,NoteTagTable,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,GetDepthTag,The following statement contains a magic number: tag.Indent = -14;  
Magic Number,Tomboy,NoteTagTable,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,GetDepthTag,The following statement contains a magic number: if (direction == Pango.Direction.Rtl)  	tag.RightMargin = (depth + 1) * 25;  else  	tag.LeftMargin = (depth + 1) * 25;  
Magic Number,Tomboy,NoteTagTable,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,GetDepthTag,The following statement contains a magic number: if (direction == Pango.Direction.Rtl)  	tag.RightMargin = (depth + 1) * 25;  else  	tag.LeftMargin = (depth + 1) * 25;  
Magic Number,Tomboy,NoteTagTable,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,GetDepthTag,The following statement contains a magic number: tag.RightMargin = (depth + 1) * 25;  
Magic Number,Tomboy,NoteTagTable,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,GetDepthTag,The following statement contains a magic number: tag.LeftMargin = (depth + 1) * 25;  
Magic Number,Tomboy,NoteTagTable,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,GetDepthTag,The following statement contains a magic number: tag.PixelsBelowLines = 4;  
Magic Number,Tomboy,NoteWindow,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,NoteWindow,The following statement contains a magic number: this.SetDefaultSize (450' 360);  
Magic Number,Tomboy,NoteWindow,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,NoteWindow,The following statement contains a magic number: this.SetDefaultSize (450' 360);  
Magic Number,Tomboy,NoteFindBar,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,NoteFindBar,The following statement contains a magic number: BorderWidth = 2;  
Magic Number,Tomboy,NoteFindBar,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,NoteFindBar,The following statement contains a magic number: PackStart (button' false' false' 4);  
Magic Number,Tomboy,NoteFindBar,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,OnFindEntryChanged,The following statement contains a magic number: if (SearchText == null) {  	PerformSearch (false);  } else {  	entry_changed_timeout.Reset (500);  }  
Magic Number,Tomboy,NoteFindBar,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,OnFindEntryChanged,The following statement contains a magic number: entry_changed_timeout.Reset (500);  
Magic Number,Tomboy,NoteFindBar,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,UpdateSearch,The following statement contains a magic number: if (SearchText == null) {  	PerformSearch (false);  } else {  	note_changed_timeout.Reset (500);  }  
Magic Number,Tomboy,NoteFindBar,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,UpdateSearch,The following statement contains a magic number: note_changed_timeout.Reset (500);  
Magic Number,Tomboy,Preferences,F:\newReposMay17\GNOME_tomboy\Tomboy\Preferences.cs,GetDefault,The following statement contains a magic number: switch (key) {  case ENABLE_SPELLCHECKING:  case ENABLE_KEYBINDINGS:  	return true;  case ENABLE_CUSTOM_FONT:  	return false;  case ENABLE_CUSTOM_SEARCH_MATCH_COLOR:  	return false;  case ENABLE_WIKIWORDS:  	return false;  case ENABLE_AUTO_BULLETED_LISTS:  	return true;  case ENABLE_ICON_PASTE:  	return false;  case ENABLE_CLOSE_NOTE_ON_ESCAPE:  	return true;  case ENABLE_TRAY_ICON:  	return true;  case ENABLE_DELETE_CONFIRM:  	return true;  case START_NOTE_URI:  	return String.Empty;  case CUSTOM_FONT_FACE:  	return "Serif 11";  case CUSTOM_SEARCH_MATCH_COLOR:  	return "#7cfc00";  // "lawngreen"' provides good contrast with default font color  case MENU_NOTE_COUNT:  	return 10;  case MENU_MAX_NOTE_COUNT:  	return 18;  case MENU_PINNED_NOTES:  	return string.Empty;  case MENU_ITEM_MAX_LENGTH:  	return 100;  case KEYBINDING_SHOW_NOTE_MENU:  	return "<Alt>F12";  case KEYBINDING_OPEN_START_HERE:  	return "<Alt>F11";  case KEYBINDING_CREATE_NEW_NOTE:  case KEYBINDING_OPEN_SEARCH:  case KEYBINDING_OPEN_RECENT_CHANGES:  	return "disabled";  case EXPORTHTML_EXPORT_LINKED:  	return false;  case EXPORTHTML_EXPORT_LINKED_ALL:  	return false;  case EXPORTHTML_LAST_DIRECTORY:  	return string.Empty;  case STICKYNOTEIMPORTER_FIRST_RUN:  	return true;  case ENABLE_STARTUP_NOTES:  	return true;  case SYNC_CLIENT_ID:  	return System.Guid.NewGuid ().ToString ();  case SYNC_LOCAL_PATH:  	return string.Empty;  case SYNC_CONFIGURED_CONFLICT_BEHAVIOR:  	return 0;  case SYNC_AUTOSYNC_TIMEOUT:  	return -1;  case NOTE_RENAME_BEHAVIOR:  	return 0;  case INSERT_TIMESTAMP_FORMAT:  	return Catalog.GetString ("dddd' MMMM d' h:mm tt");  }  
Magic Number,Tomboy,Preferences,F:\newReposMay17\GNOME_tomboy\Tomboy\Preferences.cs,GetDefault,The following statement contains a magic number: switch (key) {  case ENABLE_SPELLCHECKING:  case ENABLE_KEYBINDINGS:  	return true;  case ENABLE_CUSTOM_FONT:  	return false;  case ENABLE_CUSTOM_SEARCH_MATCH_COLOR:  	return false;  case ENABLE_WIKIWORDS:  	return false;  case ENABLE_AUTO_BULLETED_LISTS:  	return true;  case ENABLE_ICON_PASTE:  	return false;  case ENABLE_CLOSE_NOTE_ON_ESCAPE:  	return true;  case ENABLE_TRAY_ICON:  	return true;  case ENABLE_DELETE_CONFIRM:  	return true;  case START_NOTE_URI:  	return String.Empty;  case CUSTOM_FONT_FACE:  	return "Serif 11";  case CUSTOM_SEARCH_MATCH_COLOR:  	return "#7cfc00";  // "lawngreen"' provides good contrast with default font color  case MENU_NOTE_COUNT:  	return 10;  case MENU_MAX_NOTE_COUNT:  	return 18;  case MENU_PINNED_NOTES:  	return string.Empty;  case MENU_ITEM_MAX_LENGTH:  	return 100;  case KEYBINDING_SHOW_NOTE_MENU:  	return "<Alt>F12";  case KEYBINDING_OPEN_START_HERE:  	return "<Alt>F11";  case KEYBINDING_CREATE_NEW_NOTE:  case KEYBINDING_OPEN_SEARCH:  case KEYBINDING_OPEN_RECENT_CHANGES:  	return "disabled";  case EXPORTHTML_EXPORT_LINKED:  	return false;  case EXPORTHTML_EXPORT_LINKED_ALL:  	return false;  case EXPORTHTML_LAST_DIRECTORY:  	return string.Empty;  case STICKYNOTEIMPORTER_FIRST_RUN:  	return true;  case ENABLE_STARTUP_NOTES:  	return true;  case SYNC_CLIENT_ID:  	return System.Guid.NewGuid ().ToString ();  case SYNC_LOCAL_PATH:  	return string.Empty;  case SYNC_CONFIGURED_CONFLICT_BEHAVIOR:  	return 0;  case SYNC_AUTOSYNC_TIMEOUT:  	return -1;  case NOTE_RENAME_BEHAVIOR:  	return 0;  case INSERT_TIMESTAMP_FORMAT:  	return Catalog.GetString ("dddd' MMMM d' h:mm tt");  }  
Magic Number,Tomboy,Preferences,F:\newReposMay17\GNOME_tomboy\Tomboy\Preferences.cs,GetDefault,The following statement contains a magic number: switch (key) {  case ENABLE_SPELLCHECKING:  case ENABLE_KEYBINDINGS:  	return true;  case ENABLE_CUSTOM_FONT:  	return false;  case ENABLE_CUSTOM_SEARCH_MATCH_COLOR:  	return false;  case ENABLE_WIKIWORDS:  	return false;  case ENABLE_AUTO_BULLETED_LISTS:  	return true;  case ENABLE_ICON_PASTE:  	return false;  case ENABLE_CLOSE_NOTE_ON_ESCAPE:  	return true;  case ENABLE_TRAY_ICON:  	return true;  case ENABLE_DELETE_CONFIRM:  	return true;  case START_NOTE_URI:  	return String.Empty;  case CUSTOM_FONT_FACE:  	return "Serif 11";  case CUSTOM_SEARCH_MATCH_COLOR:  	return "#7cfc00";  // "lawngreen"' provides good contrast with default font color  case MENU_NOTE_COUNT:  	return 10;  case MENU_MAX_NOTE_COUNT:  	return 18;  case MENU_PINNED_NOTES:  	return string.Empty;  case MENU_ITEM_MAX_LENGTH:  	return 100;  case KEYBINDING_SHOW_NOTE_MENU:  	return "<Alt>F12";  case KEYBINDING_OPEN_START_HERE:  	return "<Alt>F11";  case KEYBINDING_CREATE_NEW_NOTE:  case KEYBINDING_OPEN_SEARCH:  case KEYBINDING_OPEN_RECENT_CHANGES:  	return "disabled";  case EXPORTHTML_EXPORT_LINKED:  	return false;  case EXPORTHTML_EXPORT_LINKED_ALL:  	return false;  case EXPORTHTML_LAST_DIRECTORY:  	return string.Empty;  case STICKYNOTEIMPORTER_FIRST_RUN:  	return true;  case ENABLE_STARTUP_NOTES:  	return true;  case SYNC_CLIENT_ID:  	return System.Guid.NewGuid ().ToString ();  case SYNC_LOCAL_PATH:  	return string.Empty;  case SYNC_CONFIGURED_CONFLICT_BEHAVIOR:  	return 0;  case SYNC_AUTOSYNC_TIMEOUT:  	return -1;  case NOTE_RENAME_BEHAVIOR:  	return 0;  case INSERT_TIMESTAMP_FORMAT:  	return Catalog.GetString ("dddd' MMMM d' h:mm tt");  }  
Magic Number,Tomboy,Preferences,F:\newReposMay17\GNOME_tomboy\Tomboy\Preferences.cs,GetDefault,The following statement contains a magic number: return 10;  
Magic Number,Tomboy,Preferences,F:\newReposMay17\GNOME_tomboy\Tomboy\Preferences.cs,GetDefault,The following statement contains a magic number: return 18;  
Magic Number,Tomboy,Preferences,F:\newReposMay17\GNOME_tomboy\Tomboy\Preferences.cs,GetDefault,The following statement contains a magic number: return 100;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,NoteRecentChanges,The following statement contains a magic number: note_icon = GuiUtils.GetIcon ("note"' 22);  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,NoteRecentChanges,The following statement contains a magic number: all_notes_icon = GuiUtils.GetIcon ("filter-note-all"' 22);  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,NoteRecentChanges,The following statement contains a magic number: unfiled_notes_icon = GuiUtils.GetIcon ("filter-note-unfiled"' 22);  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,NoteRecentChanges,The following statement contains a magic number: notebook_icon = GuiUtils.GetIcon ("notebook"' 22);  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,NoteRecentChanges,The following statement contains a magic number: this.DefaultWidth = 450;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,NoteRecentChanges,The following statement contains a magic number: this.DefaultHeight = 400;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,NoteRecentChanges,The following statement contains a magic number: table.Attach (find_combo' 1' 2' 0' 1' Gtk.AttachOptions.Expand | Gtk.AttachOptions.Fill' Gtk.AttachOptions.Expand | Gtk.AttachOptions.Fill' 0' 0);  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,NoteRecentChanges,The following statement contains a magic number: table.Attach (clear_search_button' 2' 3' 0' 1' Gtk.AttachOptions.Fill' Gtk.AttachOptions.Expand | Gtk.AttachOptions.Fill' 0' 0);  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,NoteRecentChanges,The following statement contains a magic number: table.Attach (clear_search_button' 2' 3' 0' 1' Gtk.AttachOptions.Fill' Gtk.AttachOptions.Expand | Gtk.AttachOptions.Fill' 0' 0);  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,NoteRecentChanges,The following statement contains a magic number: table.ColumnSpacing = 4;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,NoteRecentChanges,The following statement contains a magic number: hpaned.Position = 150;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,NoteRecentChanges,The following statement contains a magic number: vbox.BorderWidth = 6;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,NoteRecentChanges,The following statement contains a magic number: vbox.PackStart (hbox' false' false' 4);  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,MakeRecentTree,The following statement contains a magic number: title.MinWidth = 150;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,MakeRecentTree,The following statement contains a magic number: change.AddAttribute (renderer' "text"' 2/* change date */);  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,MakeRecentTree,The following statement contains a magic number: change.SortColumnId = 2;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,UpdateResults,The following statement contains a magic number: store_sort.SetSortFunc (2/* change date */' new Gtk.TreeIterCompareFunc (CompareDates));  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,SelectNotes,The following statement contains a magic number: do {  	Note iter_note = (Note)store_sort.GetValue (iter' 3/* note */);  	if (notes.IndexOf (iter_note) >= 0) {  		// Found one  		tree.Selection.SelectIter (iter);  		//ScrollToIter (tree' iter);  	}  } while (store_sort.IterNext (ref iter));  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,AddMatchesColumn,The following statement contains a magic number: if (matches_column == null) {  	Gtk.CellRenderer renderer;  	matches_column = new Gtk.TreeViewColumn ();  	matches_column.Title = Catalog.GetString ("Matches");  	matches_column.Sizing = Gtk.TreeViewColumnSizing.Autosize;  	matches_column.Resizable = false;  	renderer = new Gtk.CellRendererText ();  	renderer.Width = 75;  	matches_column.PackStart (renderer' false);  	matches_column.SetCellDataFunc (renderer' new Gtk.TreeCellDataFunc (MatchesColumnDataFunc));  	matches_column.SortColumnId = 4;  	matches_column.SortIndicator = true;  	matches_column.Reorderable = false;  	matches_column.SortOrder = Gtk.SortType.Descending;  	matches_column.Clickable = true;  	store_sort.SetSortFunc (4/* matches */' new Gtk.TreeIterCompareFunc (CompareSearchHits));  	tree.AppendColumn (matches_column);  	store_sort.SetSortColumnId (4' Gtk.SortType.Descending);  }  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,AddMatchesColumn,The following statement contains a magic number: if (matches_column == null) {  	Gtk.CellRenderer renderer;  	matches_column = new Gtk.TreeViewColumn ();  	matches_column.Title = Catalog.GetString ("Matches");  	matches_column.Sizing = Gtk.TreeViewColumnSizing.Autosize;  	matches_column.Resizable = false;  	renderer = new Gtk.CellRendererText ();  	renderer.Width = 75;  	matches_column.PackStart (renderer' false);  	matches_column.SetCellDataFunc (renderer' new Gtk.TreeCellDataFunc (MatchesColumnDataFunc));  	matches_column.SortColumnId = 4;  	matches_column.SortIndicator = true;  	matches_column.Reorderable = false;  	matches_column.SortOrder = Gtk.SortType.Descending;  	matches_column.Clickable = true;  	store_sort.SetSortFunc (4/* matches */' new Gtk.TreeIterCompareFunc (CompareSearchHits));  	tree.AppendColumn (matches_column);  	store_sort.SetSortColumnId (4' Gtk.SortType.Descending);  }  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,AddMatchesColumn,The following statement contains a magic number: if (matches_column == null) {  	Gtk.CellRenderer renderer;  	matches_column = new Gtk.TreeViewColumn ();  	matches_column.Title = Catalog.GetString ("Matches");  	matches_column.Sizing = Gtk.TreeViewColumnSizing.Autosize;  	matches_column.Resizable = false;  	renderer = new Gtk.CellRendererText ();  	renderer.Width = 75;  	matches_column.PackStart (renderer' false);  	matches_column.SetCellDataFunc (renderer' new Gtk.TreeCellDataFunc (MatchesColumnDataFunc));  	matches_column.SortColumnId = 4;  	matches_column.SortIndicator = true;  	matches_column.Reorderable = false;  	matches_column.SortOrder = Gtk.SortType.Descending;  	matches_column.Clickable = true;  	store_sort.SetSortFunc (4/* matches */' new Gtk.TreeIterCompareFunc (CompareSearchHits));  	tree.AppendColumn (matches_column);  	store_sort.SetSortColumnId (4' Gtk.SortType.Descending);  }  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,AddMatchesColumn,The following statement contains a magic number: if (matches_column == null) {  	Gtk.CellRenderer renderer;  	matches_column = new Gtk.TreeViewColumn ();  	matches_column.Title = Catalog.GetString ("Matches");  	matches_column.Sizing = Gtk.TreeViewColumnSizing.Autosize;  	matches_column.Resizable = false;  	renderer = new Gtk.CellRendererText ();  	renderer.Width = 75;  	matches_column.PackStart (renderer' false);  	matches_column.SetCellDataFunc (renderer' new Gtk.TreeCellDataFunc (MatchesColumnDataFunc));  	matches_column.SortColumnId = 4;  	matches_column.SortIndicator = true;  	matches_column.Reorderable = false;  	matches_column.SortOrder = Gtk.SortType.Descending;  	matches_column.Clickable = true;  	store_sort.SetSortFunc (4/* matches */' new Gtk.TreeIterCompareFunc (CompareSearchHits));  	tree.AppendColumn (matches_column);  	store_sort.SetSortColumnId (4' Gtk.SortType.Descending);  }  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,AddMatchesColumn,The following statement contains a magic number: renderer.Width = 75;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,AddMatchesColumn,The following statement contains a magic number: matches_column.SortColumnId = 4;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,AddMatchesColumn,The following statement contains a magic number: store_sort.SetSortFunc (4/* matches */' new Gtk.TreeIterCompareFunc (CompareSearchHits));  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,AddMatchesColumn,The following statement contains a magic number: store_sort.SetSortColumnId (4' Gtk.SortType.Descending);  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,RemoveMatchesColumn,The following statement contains a magic number: store_sort.SetSortColumnId (2' Gtk.SortType.Descending);  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,NoMatchesFoundAction,The following statement contains a magic number: no_matches_found_table.Attach (link_button' 1' 2' 0' 1' Gtk.AttachOptions.Fill | Gtk.AttachOptions.Shrink' Gtk.AttachOptions.Shrink' 0' 0);  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,NoMatchesFoundAction,The following statement contains a magic number: no_matches_found_table.ColumnSpacing = 4;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnTreeViewDragDataGet,The following statement contains a magic number: if (args.Info == (uint)Target.Path)  	args.SelectionData.Set (Gdk.Atom.Intern ("text/path-list"' false)' 8' Encoding.UTF8.GetBytes (paths));  else  	args.SelectionData.Set (Gdk.Atom.Intern ("text/uri-list"' false)' 8' Encoding.UTF8.GetBytes (uris));  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnTreeViewDragDataGet,The following statement contains a magic number: if (args.Info == (uint)Target.Path)  	args.SelectionData.Set (Gdk.Atom.Intern ("text/path-list"' false)' 8' Encoding.UTF8.GetBytes (paths));  else  	args.SelectionData.Set (Gdk.Atom.Intern ("text/uri-list"' false)' 8' Encoding.UTF8.GetBytes (uris));  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnTreeViewDragDataGet,The following statement contains a magic number: args.SelectionData.Set (Gdk.Atom.Intern ("text/path-list"' false)' 8' Encoding.UTF8.GetBytes (paths));  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnTreeViewDragDataGet,The following statement contains a magic number: args.SelectionData.Set (Gdk.Atom.Intern ("text/uri-list"' false)' 8' Encoding.UTF8.GetBytes (uris));  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnTreeViewButtonPressed,The following statement contains a magic number: switch (args.Event.Type) {  case Gdk.EventType.TwoButtonPress:  	if (args.Event.Button != 1 || (args.Event.State & (Gdk.ModifierType.ControlMask | Gdk.ModifierType.ShiftMask)) != 0) {  		break;  	}  	tree.Selection.UnselectAll ();  	tree.Selection.SelectPath (path);  	tree.ActivateRow (path' column);  	break;  case Gdk.EventType.ButtonPress:  	if (args.Event.Button == 3) {  		Gtk.Menu menu = Tomboy.ActionManager.GetWidget ("/MainWindowContextMenu") as Gtk.Menu;  		PopupContextMenuAtLocation (menu' (int)args.Event.X' (int)args.Event.Y);  		// Return true so that the base handler won't  		// run' which causes the selection to change to  		// the row that was right-clicked.  		args.RetVal = true;  		break;  	}  	if (tree.Selection.PathIsSelected (path) && (args.Event.State & (Gdk.ModifierType.ControlMask | Gdk.ModifierType.ShiftMask)) == 0) {  		if (column != null && args.Event.Button == 1) {  			Gtk.CellRenderer renderer = column.CellRenderers [0];  			Gdk.Rectangle background_area = tree.GetBackgroundArea (path' column);  			Gdk.Rectangle cell_area = tree.GetCellArea (path' column);  			renderer.Activate (args.Event' tree' path.ToString ()' background_area' cell_area' Gtk.CellRendererState.Selected);  			Gtk.TreeIter iter;  			if (tree.Model.GetIter (out iter' path)) {  				tree.Model.EmitRowChanged (path' iter);  			}  		}  		args.RetVal = true;  	}  	break;  default:  	args.RetVal = false;  	break;  }  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnTreeViewButtonPressed,The following statement contains a magic number: if (args.Event.Button == 3) {  	Gtk.Menu menu = Tomboy.ActionManager.GetWidget ("/MainWindowContextMenu") as Gtk.Menu;  	PopupContextMenuAtLocation (menu' (int)args.Event.X' (int)args.Event.Y);  	// Return true so that the base handler won't  	// run' which causes the selection to change to  	// the row that was right-clicked.  	args.RetVal = true;  	break;  }  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,PositionContextMenu,The following statement contains a magic number: if (selected_rows.Length > 0) {  	// Popup near the selection  	path = selected_rows [0];  	cell_rect = currentTree.GetCellArea (path' currentTree.Columns [0]);  	// Add 100 to x' so it isn't too close to the left border  	x = pos_x + cell_rect.X + 100;  	// Add 47 to y' so it's right at the bottom of the selected row  	y = pos_y + cell_rect.Y + 47;  }  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,PositionContextMenu,The following statement contains a magic number: if (selected_rows.Length > 0) {  	// Popup near the selection  	path = selected_rows [0];  	cell_rect = currentTree.GetCellArea (path' currentTree.Columns [0]);  	// Add 100 to x' so it isn't too close to the left border  	x = pos_x + cell_rect.X + 100;  	// Add 47 to y' so it's right at the bottom of the selected row  	y = pos_y + cell_rect.Y + 47;  }  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,PositionContextMenu,The following statement contains a magic number: x = pos_x + cell_rect.X + 100;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,PositionContextMenu,The following statement contains a magic number: y = pos_y + cell_rect.Y + 47;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,GetWidgetScreenPos,The following statement contains a magic number: if (widget is Gtk.Window) {  	((Gtk.Window)widget).GetPosition (out widget_x' out widget_y);  } else {  	GetWidgetScreenPos (widget.Parent' ref x' ref y);  	// Special case the TreeView because it adds  	// too much since it's in a scrolled window.  	if (widget == tree) {  		widget_x = 2;  		widget_y = 2;  	} else {  		Gdk.Rectangle widget_rect = widget.Allocation;  		widget_x = widget_rect.X;  		widget_y = widget_rect.Y;  	}  }  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,GetWidgetScreenPos,The following statement contains a magic number: if (widget is Gtk.Window) {  	((Gtk.Window)widget).GetPosition (out widget_x' out widget_y);  } else {  	GetWidgetScreenPos (widget.Parent' ref x' ref y);  	// Special case the TreeView because it adds  	// too much since it's in a scrolled window.  	if (widget == tree) {  		widget_x = 2;  		widget_y = 2;  	} else {  		Gdk.Rectangle widget_rect = widget.Allocation;  		widget_x = widget_rect.X;  		widget_y = widget_rect.Y;  	}  }  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,GetWidgetScreenPos,The following statement contains a magic number: if (widget == tree) {  	widget_x = 2;  	widget_y = 2;  } else {  	Gdk.Rectangle widget_rect = widget.Allocation;  	widget_x = widget_rect.X;  	widget_y = widget_rect.Y;  }  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,GetWidgetScreenPos,The following statement contains a magic number: if (widget == tree) {  	widget_x = 2;  	widget_y = 2;  } else {  	Gdk.Rectangle widget_rect = widget.Allocation;  	widget_x = widget_rect.X;  	widget_y = widget_rect.Y;  }  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,GetWidgetScreenPos,The following statement contains a magic number: widget_x = 2;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,GetWidgetScreenPos,The following statement contains a magic number: widget_y = 2;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,GetNote,The following statement contains a magic number: return tree.Model.GetValue (iter' 3/* note */) as Note;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnEntryChanged,The following statement contains a magic number: if (SearchText == null) {  	clear_search_button.Sensitive = false;  	PerformSearch ();  } else {  	entry_changed_timeout.Reset (500);  	clear_search_button.Sensitive = true;  }  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnEntryChanged,The following statement contains a magic number: entry_changed_timeout.Reset (500);  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnNotebooksTreeButtonPressed,The following statement contains a magic number: switch (args.Event.Button) {  case 3:  	// third mouse button (right-click)  	Notebooks.Notebook notebook = GetSelectedNotebook ();  	if (notebook == null)  		return;  	// Don't pop open a submenu  	Gtk.TreePath path = null;  	Gtk.TreeViewColumn column = null;  	bool rowClicked = true;  	if (notebooksTree.GetPathAtPos ((int)args.Event.X' (int)args.Event.Y' out path' out column) == false)  		rowClicked = false;  	Gtk.TreeSelection selection = notebooksTree.Selection;  	if (selection.CountSelectedRows () == 0)  		rowClicked = false;  	Gtk.Menu menu = null;  	if (rowClicked)  		menu = Tomboy.ActionManager.GetWidget ("/NotebooksTreeContextMenu") as Gtk.Menu;  	else  		menu = Tomboy.ActionManager.GetWidget ("/NotebooksTreeNoRowContextMenu") as Gtk.Menu;  	PopupContextMenuAtLocation (menu' (int)args.Event.X' (int)args.Event.Y);  	break;  }  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,RestorePosition,The following statement contains a magic number: if (restore_as_is) {  	new_x = (int)x;  	new_y = (int)y;  } else {  	//center of the screen  	new_x = new_mon_geom.Right / 2 - (int)width / 2;  	new_y = new_mon_geom.Bottom / 2 - (int)height / 2;  }  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,RestorePosition,The following statement contains a magic number: if (restore_as_is) {  	new_x = (int)x;  	new_y = (int)y;  } else {  	//center of the screen  	new_x = new_mon_geom.Right / 2 - (int)width / 2;  	new_y = new_mon_geom.Bottom / 2 - (int)height / 2;  }  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,RestorePosition,The following statement contains a magic number: if (restore_as_is) {  	new_x = (int)x;  	new_y = (int)y;  } else {  	//center of the screen  	new_x = new_mon_geom.Right / 2 - (int)width / 2;  	new_y = new_mon_geom.Bottom / 2 - (int)height / 2;  }  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,RestorePosition,The following statement contains a magic number: if (restore_as_is) {  	new_x = (int)x;  	new_y = (int)y;  } else {  	//center of the screen  	new_x = new_mon_geom.Right / 2 - (int)width / 2;  	new_y = new_mon_geom.Bottom / 2 - (int)height / 2;  }  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,RestorePosition,The following statement contains a magic number: new_x = new_mon_geom.Right / 2 - (int)width / 2;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,RestorePosition,The following statement contains a magic number: new_x = new_mon_geom.Right / 2 - (int)width / 2;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,RestorePosition,The following statement contains a magic number: new_y = new_mon_geom.Bottom / 2 - (int)height / 2;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,RestorePosition,The following statement contains a magic number: new_y = new_mon_geom.Bottom / 2 - (int)height / 2;  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,GetFilteredNotes,The following statement contains a magic number: do {  	filtered_notes.Add ((Note)store_sort.GetValue (iter' 3));  } while (store_sort.IterNext (ref iter));  
Magic Number,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,GetFilteredNotes,The following statement contains a magic number: filtered_notes.Add ((Note)store_sort.GetValue (iter' 3));  
Magic Number,Tomboy,Tomboy,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,Main,The following statement contains a magic number: GLib.Timeout.Add (500' () => {  	manager.Initialize ();  	SyncManager.Initialize ();  	ApplicationAddin[] addins = manager.AddinManager.GetApplicationAddins ();  	foreach (ApplicationAddin addin in addins) {  		addin.Initialize ();  	}  	// Register the manager to handle remote requests.  	RegisterRemoteControl (manager);  	if (cmd_line.NeedsExecute) {  		// Execute args on this instance  		cmd_line.Execute ();  	}  	#if WIN32  					if (Environment.OSVersion.Platform == PlatformID.Win32NT) { 					var os_version = Environment.OSVersion.Version; 					if (( os_version.Major == 6 && os_version.Minor > 0 ) || os_version.Major > 6) { 						JumpListManager.CreateJumpList (manager);  						manager.NoteAdded += delegate (object sender' Note changed) { 							JumpListManager.CreateJumpList (manager); 						};  						manager.NoteRenamed += delegate (Note sender' string old_title) { 							JumpListManager.CreateJumpList (manager); 						};  						manager.NoteDeleted += delegate (object sender' Note changed) { 							JumpListManager.CreateJumpList (manager); 						}; 					} 				} #endif  	return false;  });  
Magic Number,Tomboy,Tomboy,F:\newReposMay17\GNOME_tomboy\Tomboy\Tomboy.cs,OnShowAboutAction,The following statement contains a magic number: about.Logo = GuiUtils.GetIcon ("tomboy"' 48);  
Magic Number,Tomboy,NoteMenuItem,F:\newReposMay17\GNOME_tomboy\Tomboy\Tray.cs,NoteMenuItem,The following statement contains a magic number: note_icon = GuiUtils.GetIcon ("note"' 16);  
Magic Number,Tomboy,NoteMenuItem,F:\newReposMay17\GNOME_tomboy\Tomboy\Tray.cs,NoteMenuItem,The following statement contains a magic number: pinup = GuiUtils.GetIcon ("pin-up"' 16);  
Magic Number,Tomboy,NoteMenuItem,F:\newReposMay17\GNOME_tomboy\Tomboy\Tray.cs,NoteMenuItem,The following statement contains a magic number: pinup_active = GuiUtils.GetIcon ("pin-active"' 16);  
Magic Number,Tomboy,NoteMenuItem,F:\newReposMay17\GNOME_tomboy\Tomboy\Tray.cs,NoteMenuItem,The following statement contains a magic number: pindown = GuiUtils.GetIcon ("pin-down"' 16);  
Magic Number,Tomboy,TomboyTrayIcon,F:\newReposMay17\GNOME_tomboy\Tomboy\Tray.cs,OnPopupMenu,The following statement contains a magic number: if (button == 3)  	GuiUtils.PopupMenu (GetRightClickMenu ()' null' new Gtk.MenuPositionFunc (GetTrayMenuPosition));  
Magic Number,Tomboy,UndoManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Undo.cs,OnTagRemoved,The following statement contains a magic number: if (frozen_cnt == 0) {  	if (NoteTagTable.TagIsUndoable (args.Tag)) {  		// FIXME: Gtk# bug. StartChar and EndChar are not  		//        mapped' so grab them from the Args iter.  		Gtk.TextIter start' end;  		start = (Gtk.TextIter)args.Args [1];  		end = (Gtk.TextIter)args.Args [2];  		AddUndoAction (new TagRemoveAction (args.Tag' start' end));  	}  }  
Magic Number,Tomboy,UndoManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Undo.cs,OnTagRemoved,The following statement contains a magic number: if (NoteTagTable.TagIsUndoable (args.Tag)) {  	// FIXME: Gtk# bug. StartChar and EndChar are not  	//        mapped' so grab them from the Args iter.  	Gtk.TextIter start' end;  	start = (Gtk.TextIter)args.Args [1];  	end = (Gtk.TextIter)args.Args [2];  	AddUndoAction (new TagRemoveAction (args.Tag' start' end));  }  
Magic Number,Tomboy,UndoManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Undo.cs,OnTagRemoved,The following statement contains a magic number: end = (Gtk.TextIter)args.Args [2];  
Magic Number,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,GetPrettyPrintDate,The following statement contains a magic number: if (date.Year == now.Year) {  	if (date.DayOfYear == now.DayOfYear)  		pretty_str = show_time ? String.Format (Catalog.GetString ("Today' {0}")' short_time) : Catalog.GetString ("Today");  	else if (date.DayOfYear < now.DayOfYear && date.DayOfYear == now.DayOfYear - 1)  		pretty_str = show_time ? String.Format (Catalog.GetString ("Yesterday' {0}")' short_time) : Catalog.GetString ("Yesterday");  	else if (date.DayOfYear < now.DayOfYear && date.DayOfYear > now.DayOfYear - 6)  		pretty_str = show_time ? String.Format (Catalog.GetPluralString ("{0} day ago' {1}"' "{0} days ago' {1}"' now.DayOfYear - date.DayOfYear)' now.DayOfYear - date.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("{0} day ago"' "{0} days ago"' now.DayOfYear - date.DayOfYear)' now.DayOfYear - date.DayOfYear);  	else if (date.DayOfYear > now.DayOfYear && date.DayOfYear == now.DayOfYear + 1)  		pretty_str = show_time ? String.Format (Catalog.GetString ("Tomorrow' {0}")' short_time) : Catalog.GetString ("Tomorrow");  	else if (date.DayOfYear > now.DayOfYear && date.DayOfYear < now.DayOfYear + 6)  		pretty_str = show_time ? String.Format (Catalog.GetPluralString ("In {0} day' {1}"' "In {0} days' {1}"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("In {0} day"' "In {0} days"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear);  	else  		pretty_str = show_time ? date.ToString (Catalog.GetString ("MMMM d' h:mm tt")) : date.ToString (Catalog.GetString ("MMMM d"));  } else if (date == DateTime.MinValue)  	pretty_str = Catalog.GetString ("No Date");  else  	pretty_str = show_time ? date.ToString (Catalog.GetString ("MMMM d yyyy' h:mm tt")) : date.ToString (Catalog.GetString ("MMMM d yyyy"));  
Magic Number,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,GetPrettyPrintDate,The following statement contains a magic number: if (date.Year == now.Year) {  	if (date.DayOfYear == now.DayOfYear)  		pretty_str = show_time ? String.Format (Catalog.GetString ("Today' {0}")' short_time) : Catalog.GetString ("Today");  	else if (date.DayOfYear < now.DayOfYear && date.DayOfYear == now.DayOfYear - 1)  		pretty_str = show_time ? String.Format (Catalog.GetString ("Yesterday' {0}")' short_time) : Catalog.GetString ("Yesterday");  	else if (date.DayOfYear < now.DayOfYear && date.DayOfYear > now.DayOfYear - 6)  		pretty_str = show_time ? String.Format (Catalog.GetPluralString ("{0} day ago' {1}"' "{0} days ago' {1}"' now.DayOfYear - date.DayOfYear)' now.DayOfYear - date.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("{0} day ago"' "{0} days ago"' now.DayOfYear - date.DayOfYear)' now.DayOfYear - date.DayOfYear);  	else if (date.DayOfYear > now.DayOfYear && date.DayOfYear == now.DayOfYear + 1)  		pretty_str = show_time ? String.Format (Catalog.GetString ("Tomorrow' {0}")' short_time) : Catalog.GetString ("Tomorrow");  	else if (date.DayOfYear > now.DayOfYear && date.DayOfYear < now.DayOfYear + 6)  		pretty_str = show_time ? String.Format (Catalog.GetPluralString ("In {0} day' {1}"' "In {0} days' {1}"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("In {0} day"' "In {0} days"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear);  	else  		pretty_str = show_time ? date.ToString (Catalog.GetString ("MMMM d' h:mm tt")) : date.ToString (Catalog.GetString ("MMMM d"));  } else if (date == DateTime.MinValue)  	pretty_str = Catalog.GetString ("No Date");  else  	pretty_str = show_time ? date.ToString (Catalog.GetString ("MMMM d yyyy' h:mm tt")) : date.ToString (Catalog.GetString ("MMMM d yyyy"));  
Magic Number,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,GetPrettyPrintDate,The following statement contains a magic number: if (date.DayOfYear == now.DayOfYear)  	pretty_str = show_time ? String.Format (Catalog.GetString ("Today' {0}")' short_time) : Catalog.GetString ("Today");  else if (date.DayOfYear < now.DayOfYear && date.DayOfYear == now.DayOfYear - 1)  	pretty_str = show_time ? String.Format (Catalog.GetString ("Yesterday' {0}")' short_time) : Catalog.GetString ("Yesterday");  else if (date.DayOfYear < now.DayOfYear && date.DayOfYear > now.DayOfYear - 6)  	pretty_str = show_time ? String.Format (Catalog.GetPluralString ("{0} day ago' {1}"' "{0} days ago' {1}"' now.DayOfYear - date.DayOfYear)' now.DayOfYear - date.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("{0} day ago"' "{0} days ago"' now.DayOfYear - date.DayOfYear)' now.DayOfYear - date.DayOfYear);  else if (date.DayOfYear > now.DayOfYear && date.DayOfYear == now.DayOfYear + 1)  	pretty_str = show_time ? String.Format (Catalog.GetString ("Tomorrow' {0}")' short_time) : Catalog.GetString ("Tomorrow");  else if (date.DayOfYear > now.DayOfYear && date.DayOfYear < now.DayOfYear + 6)  	pretty_str = show_time ? String.Format (Catalog.GetPluralString ("In {0} day' {1}"' "In {0} days' {1}"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("In {0} day"' "In {0} days"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear);  else  	pretty_str = show_time ? date.ToString (Catalog.GetString ("MMMM d' h:mm tt")) : date.ToString (Catalog.GetString ("MMMM d"));  
Magic Number,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,GetPrettyPrintDate,The following statement contains a magic number: if (date.DayOfYear == now.DayOfYear)  	pretty_str = show_time ? String.Format (Catalog.GetString ("Today' {0}")' short_time) : Catalog.GetString ("Today");  else if (date.DayOfYear < now.DayOfYear && date.DayOfYear == now.DayOfYear - 1)  	pretty_str = show_time ? String.Format (Catalog.GetString ("Yesterday' {0}")' short_time) : Catalog.GetString ("Yesterday");  else if (date.DayOfYear < now.DayOfYear && date.DayOfYear > now.DayOfYear - 6)  	pretty_str = show_time ? String.Format (Catalog.GetPluralString ("{0} day ago' {1}"' "{0} days ago' {1}"' now.DayOfYear - date.DayOfYear)' now.DayOfYear - date.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("{0} day ago"' "{0} days ago"' now.DayOfYear - date.DayOfYear)' now.DayOfYear - date.DayOfYear);  else if (date.DayOfYear > now.DayOfYear && date.DayOfYear == now.DayOfYear + 1)  	pretty_str = show_time ? String.Format (Catalog.GetString ("Tomorrow' {0}")' short_time) : Catalog.GetString ("Tomorrow");  else if (date.DayOfYear > now.DayOfYear && date.DayOfYear < now.DayOfYear + 6)  	pretty_str = show_time ? String.Format (Catalog.GetPluralString ("In {0} day' {1}"' "In {0} days' {1}"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("In {0} day"' "In {0} days"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear);  else  	pretty_str = show_time ? date.ToString (Catalog.GetString ("MMMM d' h:mm tt")) : date.ToString (Catalog.GetString ("MMMM d"));  
Magic Number,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,GetPrettyPrintDate,The following statement contains a magic number: if (date.DayOfYear < now.DayOfYear && date.DayOfYear == now.DayOfYear - 1)  	pretty_str = show_time ? String.Format (Catalog.GetString ("Yesterday' {0}")' short_time) : Catalog.GetString ("Yesterday");  else if (date.DayOfYear < now.DayOfYear && date.DayOfYear > now.DayOfYear - 6)  	pretty_str = show_time ? String.Format (Catalog.GetPluralString ("{0} day ago' {1}"' "{0} days ago' {1}"' now.DayOfYear - date.DayOfYear)' now.DayOfYear - date.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("{0} day ago"' "{0} days ago"' now.DayOfYear - date.DayOfYear)' now.DayOfYear - date.DayOfYear);  else if (date.DayOfYear > now.DayOfYear && date.DayOfYear == now.DayOfYear + 1)  	pretty_str = show_time ? String.Format (Catalog.GetString ("Tomorrow' {0}")' short_time) : Catalog.GetString ("Tomorrow");  else if (date.DayOfYear > now.DayOfYear && date.DayOfYear < now.DayOfYear + 6)  	pretty_str = show_time ? String.Format (Catalog.GetPluralString ("In {0} day' {1}"' "In {0} days' {1}"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("In {0} day"' "In {0} days"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear);  else  	pretty_str = show_time ? date.ToString (Catalog.GetString ("MMMM d' h:mm tt")) : date.ToString (Catalog.GetString ("MMMM d"));  
Magic Number,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,GetPrettyPrintDate,The following statement contains a magic number: if (date.DayOfYear < now.DayOfYear && date.DayOfYear == now.DayOfYear - 1)  	pretty_str = show_time ? String.Format (Catalog.GetString ("Yesterday' {0}")' short_time) : Catalog.GetString ("Yesterday");  else if (date.DayOfYear < now.DayOfYear && date.DayOfYear > now.DayOfYear - 6)  	pretty_str = show_time ? String.Format (Catalog.GetPluralString ("{0} day ago' {1}"' "{0} days ago' {1}"' now.DayOfYear - date.DayOfYear)' now.DayOfYear - date.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("{0} day ago"' "{0} days ago"' now.DayOfYear - date.DayOfYear)' now.DayOfYear - date.DayOfYear);  else if (date.DayOfYear > now.DayOfYear && date.DayOfYear == now.DayOfYear + 1)  	pretty_str = show_time ? String.Format (Catalog.GetString ("Tomorrow' {0}")' short_time) : Catalog.GetString ("Tomorrow");  else if (date.DayOfYear > now.DayOfYear && date.DayOfYear < now.DayOfYear + 6)  	pretty_str = show_time ? String.Format (Catalog.GetPluralString ("In {0} day' {1}"' "In {0} days' {1}"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("In {0} day"' "In {0} days"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear);  else  	pretty_str = show_time ? date.ToString (Catalog.GetString ("MMMM d' h:mm tt")) : date.ToString (Catalog.GetString ("MMMM d"));  
Magic Number,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,GetPrettyPrintDate,The following statement contains a magic number: if (date.DayOfYear < now.DayOfYear && date.DayOfYear > now.DayOfYear - 6)  	pretty_str = show_time ? String.Format (Catalog.GetPluralString ("{0} day ago' {1}"' "{0} days ago' {1}"' now.DayOfYear - date.DayOfYear)' now.DayOfYear - date.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("{0} day ago"' "{0} days ago"' now.DayOfYear - date.DayOfYear)' now.DayOfYear - date.DayOfYear);  else if (date.DayOfYear > now.DayOfYear && date.DayOfYear == now.DayOfYear + 1)  	pretty_str = show_time ? String.Format (Catalog.GetString ("Tomorrow' {0}")' short_time) : Catalog.GetString ("Tomorrow");  else if (date.DayOfYear > now.DayOfYear && date.DayOfYear < now.DayOfYear + 6)  	pretty_str = show_time ? String.Format (Catalog.GetPluralString ("In {0} day' {1}"' "In {0} days' {1}"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("In {0} day"' "In {0} days"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear);  else  	pretty_str = show_time ? date.ToString (Catalog.GetString ("MMMM d' h:mm tt")) : date.ToString (Catalog.GetString ("MMMM d"));  
Magic Number,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,GetPrettyPrintDate,The following statement contains a magic number: if (date.DayOfYear < now.DayOfYear && date.DayOfYear > now.DayOfYear - 6)  	pretty_str = show_time ? String.Format (Catalog.GetPluralString ("{0} day ago' {1}"' "{0} days ago' {1}"' now.DayOfYear - date.DayOfYear)' now.DayOfYear - date.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("{0} day ago"' "{0} days ago"' now.DayOfYear - date.DayOfYear)' now.DayOfYear - date.DayOfYear);  else if (date.DayOfYear > now.DayOfYear && date.DayOfYear == now.DayOfYear + 1)  	pretty_str = show_time ? String.Format (Catalog.GetString ("Tomorrow' {0}")' short_time) : Catalog.GetString ("Tomorrow");  else if (date.DayOfYear > now.DayOfYear && date.DayOfYear < now.DayOfYear + 6)  	pretty_str = show_time ? String.Format (Catalog.GetPluralString ("In {0} day' {1}"' "In {0} days' {1}"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("In {0} day"' "In {0} days"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear);  else  	pretty_str = show_time ? date.ToString (Catalog.GetString ("MMMM d' h:mm tt")) : date.ToString (Catalog.GetString ("MMMM d"));  
Magic Number,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,GetPrettyPrintDate,The following statement contains a magic number: if (date.DayOfYear > now.DayOfYear && date.DayOfYear == now.DayOfYear + 1)  	pretty_str = show_time ? String.Format (Catalog.GetString ("Tomorrow' {0}")' short_time) : Catalog.GetString ("Tomorrow");  else if (date.DayOfYear > now.DayOfYear && date.DayOfYear < now.DayOfYear + 6)  	pretty_str = show_time ? String.Format (Catalog.GetPluralString ("In {0} day' {1}"' "In {0} days' {1}"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("In {0} day"' "In {0} days"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear);  else  	pretty_str = show_time ? date.ToString (Catalog.GetString ("MMMM d' h:mm tt")) : date.ToString (Catalog.GetString ("MMMM d"));  
Magic Number,Tomboy,GuiUtils,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,GetPrettyPrintDate,The following statement contains a magic number: if (date.DayOfYear > now.DayOfYear && date.DayOfYear < now.DayOfYear + 6)  	pretty_str = show_time ? String.Format (Catalog.GetPluralString ("In {0} day' {1}"' "In {0} days' {1}"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear' short_time) : String.Format (Catalog.GetPluralString ("In {0} day"' "In {0} days"' date.DayOfYear - now.DayOfYear)' date.DayOfYear - now.DayOfYear);  else  	pretty_str = show_time ? date.ToString (Catalog.GetString ("MMMM d' h:mm tt")) : date.ToString (Catalog.GetString ("MMMM d"));  
Magic Number,Tomboy,HIGMessageDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,HIGMessageDialog,The following statement contains a magic number: BorderWidth = 5;  
Magic Number,Tomboy,HIGMessageDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,HIGMessageDialog,The following statement contains a magic number: VBox.Spacing = 12;  
Magic Number,Tomboy,HIGMessageDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,HIGMessageDialog,The following statement contains a magic number: hbox.BorderWidth = 5;  
Magic Number,Tomboy,HIGMessageDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,HIGMessageDialog,The following statement contains a magic number: label_vbox.PackStart (extra_widget_vbox' true' true' 12);  
Magic Number,Tomboy,NoteUrlWatcher,F:\newReposMay17\GNOME_tomboy\Tomboy\Watchers.cs,GetUrl,The following statement contains a magic number: if (url.StartsWith ("www."))  	url = "http://" + url;  else if (url.StartsWith ("/") && url.LastIndexOf ("/") > 1)  	url = "file://" + url;  else if (url.StartsWith ("~/"))  	url = "file://" + Path.Combine (Environment.GetEnvironmentVariable ("HOME")' url.Substring (2));  else if (Regex.IsMatch (url' @"^(?!(news|mailto|http|https|ftp|file|irc|ircs):).+@.{2'}$"' RegexOptions.IgnoreCase))  	url = "mailto:" + url;  else if (Regex.IsMatch (url' @"^\p{L}{1}:%5C\S+?"))  	url = "file:///" + url;  
Magic Number,Tomboy,NoteUrlWatcher,F:\newReposMay17\GNOME_tomboy\Tomboy\Watchers.cs,GetUrl,The following statement contains a magic number: if (url.StartsWith ("/") && url.LastIndexOf ("/") > 1)  	url = "file://" + url;  else if (url.StartsWith ("~/"))  	url = "file://" + Path.Combine (Environment.GetEnvironmentVariable ("HOME")' url.Substring (2));  else if (Regex.IsMatch (url' @"^(?!(news|mailto|http|https|ftp|file|irc|ircs):).+@.{2'}$"' RegexOptions.IgnoreCase))  	url = "mailto:" + url;  else if (Regex.IsMatch (url' @"^\p{L}{1}:%5C\S+?"))  	url = "file:///" + url;  
Magic Number,Tomboy,NoteUrlWatcher,F:\newReposMay17\GNOME_tomboy\Tomboy\Watchers.cs,GetUrl,The following statement contains a magic number: if (url.StartsWith ("~/"))  	url = "file://" + Path.Combine (Environment.GetEnvironmentVariable ("HOME")' url.Substring (2));  else if (Regex.IsMatch (url' @"^(?!(news|mailto|http|https|ftp|file|irc|ircs):).+@.{2'}$"' RegexOptions.IgnoreCase))  	url = "mailto:" + url;  else if (Regex.IsMatch (url' @"^\p{L}{1}:%5C\S+?"))  	url = "file:///" + url;  
Magic Number,Tomboy,NoteUrlWatcher,F:\newReposMay17\GNOME_tomboy\Tomboy\Watchers.cs,GetUrl,The following statement contains a magic number: url = "file://" + Path.Combine (Environment.GetEnvironmentVariable ("HOME")' url.Substring (2));  
Magic Number,Tomboy,NoteUrlWatcher,F:\newReposMay17\GNOME_tomboy\Tomboy\Watchers.cs,ApplyUrlToBlock,The following statement contains a magic number: NoteBuffer.GetBlockExtents (ref start' ref end' 256/* max url length */' Note.TagTable.UrlTag);  
Magic Number,Tomboy,NoteWikiWatcher,F:\newReposMay17\GNOME_tomboy\Tomboy\Watchers.cs,ApplyWikiwordToBlock,The following statement contains a magic number: NoteBuffer.GetBlockExtents (ref start' ref end' 80/* max wiki name */' broken_link_tag);  
Magic Number,Tomboy,TagManager,F:\newReposMay17\GNOME_tomboy\Tomboy\TagManager.cs,GetTag,The following statement contains a magic number: if (normalized_tag_name.StartsWith (Tag.SYSTEM_TAG_PREFIX) || normalized_tag_name.Split (':').Length > 2) {  	lock (locker) {  		if (internal_tags.ContainsKey (normalized_tag_name))  			return internal_tags [normalized_tag_name];  		return null;  	}  }  
Magic Number,Tomboy,TagManager,F:\newReposMay17\GNOME_tomboy\Tomboy\TagManager.cs,GetOrCreateTag,The following statement contains a magic number: if (normalized_tag_name.StartsWith (Tag.SYSTEM_TAG_PREFIX) || normalized_tag_name.Split (':').Length > 2) {  	lock (locker) {  		if (internal_tags.ContainsKey (normalized_tag_name))  			return internal_tags [normalized_tag_name];  		else {  			Tag t = new Tag (tag_name);  			internal_tags [t.NormalizedName] = t;  			return t;  		}  	}  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,PreferencesDialog,The following statement contains a magic number: BorderWidth = 5;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,HandlePreferencesSettingChanged,The following statement contains a magic number: if (args.Key == Preferences.NOTE_RENAME_BEHAVIOR) {  	int rename_behavior = (int)args.Value;  	if (rename_behavior < 0 || rename_behavior > 2) {  		rename_behavior = 0;  		Preferences.Set (Preferences.NOTE_RENAME_BEHAVIOR' rename_behavior);  	}  	if (rename_behavior_combo.Active != rename_behavior)  		rename_behavior_combo.Active = rename_behavior;  } else if (args.Key == Preferences.SYNC_AUTOSYNC_TIMEOUT) {  	int timeout = (int)args.Value;  	if (timeout <= 0 && autosyncCheck.Active)  		autosyncCheck.Active = false;  	else if (timeout > 0) {  		timeout = (timeout >= 5 && timeout < 1000) ? timeout : 5;  		if (!autosyncCheck.Active)  			autosyncCheck.Active = true;  		if ((int)autosyncSpinner.Value != timeout)  			autosyncSpinner.Value = timeout;  	}  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,HandlePreferencesSettingChanged,The following statement contains a magic number: if (args.Key == Preferences.NOTE_RENAME_BEHAVIOR) {  	int rename_behavior = (int)args.Value;  	if (rename_behavior < 0 || rename_behavior > 2) {  		rename_behavior = 0;  		Preferences.Set (Preferences.NOTE_RENAME_BEHAVIOR' rename_behavior);  	}  	if (rename_behavior_combo.Active != rename_behavior)  		rename_behavior_combo.Active = rename_behavior;  } else if (args.Key == Preferences.SYNC_AUTOSYNC_TIMEOUT) {  	int timeout = (int)args.Value;  	if (timeout <= 0 && autosyncCheck.Active)  		autosyncCheck.Active = false;  	else if (timeout > 0) {  		timeout = (timeout >= 5 && timeout < 1000) ? timeout : 5;  		if (!autosyncCheck.Active)  			autosyncCheck.Active = true;  		if ((int)autosyncSpinner.Value != timeout)  			autosyncSpinner.Value = timeout;  	}  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,HandlePreferencesSettingChanged,The following statement contains a magic number: if (args.Key == Preferences.NOTE_RENAME_BEHAVIOR) {  	int rename_behavior = (int)args.Value;  	if (rename_behavior < 0 || rename_behavior > 2) {  		rename_behavior = 0;  		Preferences.Set (Preferences.NOTE_RENAME_BEHAVIOR' rename_behavior);  	}  	if (rename_behavior_combo.Active != rename_behavior)  		rename_behavior_combo.Active = rename_behavior;  } else if (args.Key == Preferences.SYNC_AUTOSYNC_TIMEOUT) {  	int timeout = (int)args.Value;  	if (timeout <= 0 && autosyncCheck.Active)  		autosyncCheck.Active = false;  	else if (timeout > 0) {  		timeout = (timeout >= 5 && timeout < 1000) ? timeout : 5;  		if (!autosyncCheck.Active)  			autosyncCheck.Active = true;  		if ((int)autosyncSpinner.Value != timeout)  			autosyncSpinner.Value = timeout;  	}  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,HandlePreferencesSettingChanged,The following statement contains a magic number: if (args.Key == Preferences.NOTE_RENAME_BEHAVIOR) {  	int rename_behavior = (int)args.Value;  	if (rename_behavior < 0 || rename_behavior > 2) {  		rename_behavior = 0;  		Preferences.Set (Preferences.NOTE_RENAME_BEHAVIOR' rename_behavior);  	}  	if (rename_behavior_combo.Active != rename_behavior)  		rename_behavior_combo.Active = rename_behavior;  } else if (args.Key == Preferences.SYNC_AUTOSYNC_TIMEOUT) {  	int timeout = (int)args.Value;  	if (timeout <= 0 && autosyncCheck.Active)  		autosyncCheck.Active = false;  	else if (timeout > 0) {  		timeout = (timeout >= 5 && timeout < 1000) ? timeout : 5;  		if (!autosyncCheck.Active)  			autosyncCheck.Active = true;  		if ((int)autosyncSpinner.Value != timeout)  			autosyncSpinner.Value = timeout;  	}  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,HandlePreferencesSettingChanged,The following statement contains a magic number: if (rename_behavior < 0 || rename_behavior > 2) {  	rename_behavior = 0;  	Preferences.Set (Preferences.NOTE_RENAME_BEHAVIOR' rename_behavior);  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,HandlePreferencesSettingChanged,The following statement contains a magic number: if (args.Key == Preferences.SYNC_AUTOSYNC_TIMEOUT) {  	int timeout = (int)args.Value;  	if (timeout <= 0 && autosyncCheck.Active)  		autosyncCheck.Active = false;  	else if (timeout > 0) {  		timeout = (timeout >= 5 && timeout < 1000) ? timeout : 5;  		if (!autosyncCheck.Active)  			autosyncCheck.Active = true;  		if ((int)autosyncSpinner.Value != timeout)  			autosyncSpinner.Value = timeout;  	}  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,HandlePreferencesSettingChanged,The following statement contains a magic number: if (args.Key == Preferences.SYNC_AUTOSYNC_TIMEOUT) {  	int timeout = (int)args.Value;  	if (timeout <= 0 && autosyncCheck.Active)  		autosyncCheck.Active = false;  	else if (timeout > 0) {  		timeout = (timeout >= 5 && timeout < 1000) ? timeout : 5;  		if (!autosyncCheck.Active)  			autosyncCheck.Active = true;  		if ((int)autosyncSpinner.Value != timeout)  			autosyncSpinner.Value = timeout;  	}  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,HandlePreferencesSettingChanged,The following statement contains a magic number: if (args.Key == Preferences.SYNC_AUTOSYNC_TIMEOUT) {  	int timeout = (int)args.Value;  	if (timeout <= 0 && autosyncCheck.Active)  		autosyncCheck.Active = false;  	else if (timeout > 0) {  		timeout = (timeout >= 5 && timeout < 1000) ? timeout : 5;  		if (!autosyncCheck.Active)  			autosyncCheck.Active = true;  		if ((int)autosyncSpinner.Value != timeout)  			autosyncSpinner.Value = timeout;  	}  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,HandlePreferencesSettingChanged,The following statement contains a magic number: if (timeout <= 0 && autosyncCheck.Active)  	autosyncCheck.Active = false;  else if (timeout > 0) {  	timeout = (timeout >= 5 && timeout < 1000) ? timeout : 5;  	if (!autosyncCheck.Active)  		autosyncCheck.Active = true;  	if ((int)autosyncSpinner.Value != timeout)  		autosyncSpinner.Value = timeout;  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,HandlePreferencesSettingChanged,The following statement contains a magic number: if (timeout <= 0 && autosyncCheck.Active)  	autosyncCheck.Active = false;  else if (timeout > 0) {  	timeout = (timeout >= 5 && timeout < 1000) ? timeout : 5;  	if (!autosyncCheck.Active)  		autosyncCheck.Active = true;  	if ((int)autosyncSpinner.Value != timeout)  		autosyncSpinner.Value = timeout;  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,HandlePreferencesSettingChanged,The following statement contains a magic number: if (timeout <= 0 && autosyncCheck.Active)  	autosyncCheck.Active = false;  else if (timeout > 0) {  	timeout = (timeout >= 5 && timeout < 1000) ? timeout : 5;  	if (!autosyncCheck.Active)  		autosyncCheck.Active = true;  	if ((int)autosyncSpinner.Value != timeout)  		autosyncSpinner.Value = timeout;  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,HandlePreferencesSettingChanged,The following statement contains a magic number: if (timeout > 0) {  	timeout = (timeout >= 5 && timeout < 1000) ? timeout : 5;  	if (!autosyncCheck.Active)  		autosyncCheck.Active = true;  	if ((int)autosyncSpinner.Value != timeout)  		autosyncSpinner.Value = timeout;  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,HandlePreferencesSettingChanged,The following statement contains a magic number: if (timeout > 0) {  	timeout = (timeout >= 5 && timeout < 1000) ? timeout : 5;  	if (!autosyncCheck.Active)  		autosyncCheck.Active = true;  	if ((int)autosyncSpinner.Value != timeout)  		autosyncSpinner.Value = timeout;  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,HandlePreferencesSettingChanged,The following statement contains a magic number: if (timeout > 0) {  	timeout = (timeout >= 5 && timeout < 1000) ? timeout : 5;  	if (!autosyncCheck.Active)  		autosyncCheck.Active = true;  	if ((int)autosyncSpinner.Value != timeout)  		autosyncSpinner.Value = timeout;  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,HandlePreferencesSettingChanged,The following statement contains a magic number: timeout = (timeout >= 5 && timeout < 1000) ? timeout : 5;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,HandlePreferencesSettingChanged,The following statement contains a magic number: timeout = (timeout >= 5 && timeout < 1000) ? timeout : 5;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,HandlePreferencesSettingChanged,The following statement contains a magic number: timeout = (timeout >= 5 && timeout < 1000) ? timeout : 5;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeEditingPane,The following statement contains a magic number: options_list.BorderWidth = 12;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeEditingPane,The following statement contains a magic number: if (rename_behavior < 0 || rename_behavior > 2) {  	rename_behavior = 0;  	Preferences.Set (Preferences.NOTE_RENAME_BEHAVIOR' rename_behavior);  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeFontButton,The following statement contains a magic number: font_size.Xpad = 4;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeHotkeysPane,The following statement contains a magic number: hotkeys_list.BorderWidth = 12;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeHotkeysPane,The following statement contains a magic number: table.ColumnSpacing = 6;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeHotkeysPane,The following statement contains a magic number: table.RowSpacing = 6;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeHotkeysPane,The following statement contains a magic number: table.Attach (entry' 1' 2' 0' 1);  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeHotkeysPane,The following statement contains a magic number: table.Attach (label' 0' 1' 1' 2);  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeHotkeysPane,The following statement contains a magic number: table.Attach (entry' 1' 2' 1' 2);  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeHotkeysPane,The following statement contains a magic number: table.Attach (entry' 1' 2' 1' 2);  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeHotkeysPane,The following statement contains a magic number: table.Attach (label' 0' 1' 2' 3);  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeHotkeysPane,The following statement contains a magic number: table.Attach (label' 0' 1' 2' 3);  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeHotkeysPane,The following statement contains a magic number: table.Attach (entry' 1' 2' 2' 3);  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeHotkeysPane,The following statement contains a magic number: table.Attach (entry' 1' 2' 2' 3);  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeHotkeysPane,The following statement contains a magic number: table.Attach (entry' 1' 2' 2' 3);  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeHotkeysPane,The following statement contains a magic number: table.Attach (label' 0' 1' 3' 4);  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeHotkeysPane,The following statement contains a magic number: table.Attach (label' 0' 1' 3' 4);  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeHotkeysPane,The following statement contains a magic number: table.Attach (entry' 1' 2' 3' 4);  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeHotkeysPane,The following statement contains a magic number: table.Attach (entry' 1' 2' 3' 4);  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeHotkeysPane,The following statement contains a magic number: table.Attach (entry' 1' 2' 3' 4);  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The following statement contains a magic number: vbox.Spacing = 4;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The following statement contains a magic number: vbox.BorderWidth = 8;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The following statement contains a magic number: vbox.PackStart (syncAddinPrefsContainer' true' true' 10);  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The following statement contains a magic number: if (timeout > 0 && timeout < 5) {  	timeout = 5;  	Preferences.Set (Preferences.SYNC_AUTOSYNC_TIMEOUT' 5);  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The following statement contains a magic number: if (timeout > 0 && timeout < 5) {  	timeout = 5;  	Preferences.Set (Preferences.SYNC_AUTOSYNC_TIMEOUT' 5);  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The following statement contains a magic number: if (timeout > 0 && timeout < 5) {  	timeout = 5;  	Preferences.Set (Preferences.SYNC_AUTOSYNC_TIMEOUT' 5);  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The following statement contains a magic number: timeout = 5;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The following statement contains a magic number: Preferences.Set (Preferences.SYNC_AUTOSYNC_TIMEOUT' 5);  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The following statement contains a magic number: autosyncSpinner = new Gtk.SpinButton (5' 1000' 1);  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The following statement contains a magic number: autosyncSpinner = new Gtk.SpinButton (5' 1000' 1);  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The following statement contains a magic number: autosyncSpinner.Value = timeout >= 5 ? timeout : 10;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The following statement contains a magic number: autosyncSpinner.Value = timeout >= 5 ? timeout : 10;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The following statement contains a magic number: autosyncCheck.Active = autosyncSpinner.Sensitive = timeout >= 5;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeSyncPane,The following statement contains a magic number: bbox.Spacing = 4;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeAddinsPane,The following statement contains a magic number: vbox.BorderWidth = 6;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeAddinsPane,The following statement contains a magic number: tree_box.PackEnd (get_more_link' false' false' 5);  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeAddinsPane,The following statement contains a magic number: button_box.Spacing = 4;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,OnAddinPrefsButton,The following statement contains a magic number: if (addin_prefs_dialogs.ContainsKey (addin.Id) == false) {  	// A preference dialog isn't open already so create a new one  	Gtk.Image icon = new Gtk.Image (Gtk.Stock.Preferences' Gtk.IconSize.Dialog);  	Gtk.Label caption = new Gtk.Label ();  	caption.Markup = string.Format ("<span size='large' weight='bold'>{0} {1}</span>"' addin.Name' addin.Version);  	caption.Xalign = 0;  	caption.UseMarkup = true;  	caption.UseUnderline = false;  	Gtk.Widget pref_widget = addin_manager.CreateAddinPreferenceWidget (addin);  	if (pref_widget == null)  		pref_widget = new Gtk.Label (Catalog.GetString ("Not Implemented"));  	Gtk.HBox hbox = new Gtk.HBox (false' 6);  	Gtk.VBox vbox = new Gtk.VBox (false' 6);  	vbox.BorderWidth = 6;  	hbox.PackStart (icon' false' false' 0);  	hbox.PackStart (caption' true' true' 0);  	vbox.PackStart (hbox' false' false' 0);  	vbox.PackStart (pref_widget' true' true' 0);  	vbox.ShowAll ();  	dialog = new Gtk.Dialog (string.Format (Catalog.GetString ("{0} Preferences")' addin.Name)' this' Gtk.DialogFlags.DestroyWithParent | Gtk.DialogFlags.NoSeparator' Gtk.Stock.Close' Gtk.ResponseType.Close);  	dialog.VBox.PackStart (vbox' true' true' 0);  	dialog.DeleteEvent += AddinPrefDialogDeleted;  	dialog.Response += AddinPrefDialogResponse;  	// Store this dialog off in the dictionary so it can be  	// presented again if the user clicks on the preferences button  	// again before closing the preferences dialog.  	dialog.Data ["AddinId"] = addin.Id;  	addin_prefs_dialogs [addin.Id] = dialog;  } else {  	// It's already opened so just present it again  	dialog = addin_prefs_dialogs [addin.Id];  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,OnAddinPrefsButton,The following statement contains a magic number: if (addin_prefs_dialogs.ContainsKey (addin.Id) == false) {  	// A preference dialog isn't open already so create a new one  	Gtk.Image icon = new Gtk.Image (Gtk.Stock.Preferences' Gtk.IconSize.Dialog);  	Gtk.Label caption = new Gtk.Label ();  	caption.Markup = string.Format ("<span size='large' weight='bold'>{0} {1}</span>"' addin.Name' addin.Version);  	caption.Xalign = 0;  	caption.UseMarkup = true;  	caption.UseUnderline = false;  	Gtk.Widget pref_widget = addin_manager.CreateAddinPreferenceWidget (addin);  	if (pref_widget == null)  		pref_widget = new Gtk.Label (Catalog.GetString ("Not Implemented"));  	Gtk.HBox hbox = new Gtk.HBox (false' 6);  	Gtk.VBox vbox = new Gtk.VBox (false' 6);  	vbox.BorderWidth = 6;  	hbox.PackStart (icon' false' false' 0);  	hbox.PackStart (caption' true' true' 0);  	vbox.PackStart (hbox' false' false' 0);  	vbox.PackStart (pref_widget' true' true' 0);  	vbox.ShowAll ();  	dialog = new Gtk.Dialog (string.Format (Catalog.GetString ("{0} Preferences")' addin.Name)' this' Gtk.DialogFlags.DestroyWithParent | Gtk.DialogFlags.NoSeparator' Gtk.Stock.Close' Gtk.ResponseType.Close);  	dialog.VBox.PackStart (vbox' true' true' 0);  	dialog.DeleteEvent += AddinPrefDialogDeleted;  	dialog.Response += AddinPrefDialogResponse;  	// Store this dialog off in the dictionary so it can be  	// presented again if the user clicks on the preferences button  	// again before closing the preferences dialog.  	dialog.Data ["AddinId"] = addin.Id;  	addin_prefs_dialogs [addin.Id] = dialog;  } else {  	// It's already opened so just present it again  	dialog = addin_prefs_dialogs [addin.Id];  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,OnAddinPrefsButton,The following statement contains a magic number: if (addin_prefs_dialogs.ContainsKey (addin.Id) == false) {  	// A preference dialog isn't open already so create a new one  	Gtk.Image icon = new Gtk.Image (Gtk.Stock.Preferences' Gtk.IconSize.Dialog);  	Gtk.Label caption = new Gtk.Label ();  	caption.Markup = string.Format ("<span size='large' weight='bold'>{0} {1}</span>"' addin.Name' addin.Version);  	caption.Xalign = 0;  	caption.UseMarkup = true;  	caption.UseUnderline = false;  	Gtk.Widget pref_widget = addin_manager.CreateAddinPreferenceWidget (addin);  	if (pref_widget == null)  		pref_widget = new Gtk.Label (Catalog.GetString ("Not Implemented"));  	Gtk.HBox hbox = new Gtk.HBox (false' 6);  	Gtk.VBox vbox = new Gtk.VBox (false' 6);  	vbox.BorderWidth = 6;  	hbox.PackStart (icon' false' false' 0);  	hbox.PackStart (caption' true' true' 0);  	vbox.PackStart (hbox' false' false' 0);  	vbox.PackStart (pref_widget' true' true' 0);  	vbox.ShowAll ();  	dialog = new Gtk.Dialog (string.Format (Catalog.GetString ("{0} Preferences")' addin.Name)' this' Gtk.DialogFlags.DestroyWithParent | Gtk.DialogFlags.NoSeparator' Gtk.Stock.Close' Gtk.ResponseType.Close);  	dialog.VBox.PackStart (vbox' true' true' 0);  	dialog.DeleteEvent += AddinPrefDialogDeleted;  	dialog.Response += AddinPrefDialogResponse;  	// Store this dialog off in the dictionary so it can be  	// presented again if the user clicks on the preferences button  	// again before closing the preferences dialog.  	dialog.Data ["AddinId"] = addin.Id;  	addin_prefs_dialogs [addin.Id] = dialog;  } else {  	// It's already opened so just present it again  	dialog = addin_prefs_dialogs [addin.Id];  }  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,OnAddinPrefsButton,The following statement contains a magic number: vbox.BorderWidth = 6;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,MakeTipLabel,The following statement contains a magic number: label.Xpad = 20;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,OnAdvancedSyncConfigButton,The following statement contains a magic number: vbox.BorderWidth = 18;  
Magic Number,Tomboy,PreferencesDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,OnAdvancedSyncConfigButton,The following statement contains a magic number: advancedDlg.VBox.PackStart (label' false' false' 6);  
Magic Number,Tomboy,AddinInfoDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,AddinInfoDialog,The following statement contains a magic number: hbox.BorderWidth = 12;  
Magic Number,Tomboy,AddinInfoDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\PreferencesDialog.cs,AddinInfoDialog,The following statement contains a magic number: vbox.BorderWidth = 6;  
Magic Number,Tomboy,NoteAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteAddin.cs,OnNoteOpenedEvent,The following statement contains a magic number: if (text_menu_items != null) {  	foreach (Gtk.Widget item in text_menu_items) {  		if (item.Parent == null || item.Parent != Window.TextMenu) {  			Window.TextMenu.Add (item);  			Window.TextMenu.ReorderChild (item' 7);  		}  	}  }  
Magic Number,Tomboy,NoteAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteAddin.cs,OnNoteOpenedEvent,The following statement contains a magic number: foreach (Gtk.Widget item in text_menu_items) {  	if (item.Parent == null || item.Parent != Window.TextMenu) {  		Window.TextMenu.Add (item);  		Window.TextMenu.ReorderChild (item' 7);  	}  }  
Magic Number,Tomboy,NoteAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteAddin.cs,OnNoteOpenedEvent,The following statement contains a magic number: if (item.Parent == null || item.Parent != Window.TextMenu) {  	Window.TextMenu.Add (item);  	Window.TextMenu.ReorderChild (item' 7);  }  
Magic Number,Tomboy,NoteAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteAddin.cs,OnNoteOpenedEvent,The following statement contains a magic number: Window.TextMenu.ReorderChild (item' 7);  
Magic Number,Tomboy,NoteAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteAddin.cs,AddTextMenuItem,The following statement contains a magic number: if (note.IsOpened) {  	Window.TextMenu.Add (item);  	Window.TextMenu.ReorderChild (item' 7);  }  
Magic Number,Tomboy,NoteAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteAddin.cs,AddTextMenuItem,The following statement contains a magic number: Window.TextMenu.ReorderChild (item' 7);  
Magic Number,Tomboy,AddinManager,F:\newReposMay17\GNOME_tomboy\Tomboy\AddinManager.cs,UpgradeOldAddinConfig,The following statement contains a magic number: if (dirs == null || dirs.Length < 2) {  	// If there are less than two' this is not an upgrade case  	return;  }  
Magic Number,Tomboy,RemoteControl,F:\newReposMay17\GNOME_tomboy\Tomboy\RemoteControl.cs,UnixDateTime,The following statement contains a magic number: return (d.ToUniversalTime ().Ticks - epoch_ticks) / 10000000;  
Magic Number,Tomboy,NoteRenameDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteRenameDialog.cs,NoteRenameDialog,The following statement contains a magic number: this.BorderWidth = 10;  
Magic Number,Tomboy,NoteRenameDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteRenameDialog.cs,NoteRenameDialog,The following statement contains a magic number: VBox.PackStart (label' false' true' 5);  
Magic Number,Tomboy,NoteRenameDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteRenameDialog.cs,NoteRenameDialog,The following statement contains a magic number: notesView.SetSizeRequest (-1' 200);  
Magic Number,Tomboy,NoteRenameDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteRenameDialog.cs,NoteRenameDialog,The following statement contains a magic number: notesView.RowActivated += (o' args) => {  	TreeIter iter;  	if (!notesModel.GetIter (out iter' args.Path))  		return;  	Note note = (Note)notesModel.GetValue (iter' 2);  	if (note != null) {  		note.Window.Present ();  		NoteFindBar find = note.Window.Find;  		find.ShowAll ();  		find.Visible = true;  		find.SearchText = "\"" + oldTitle + "\"";  	}  };  
Magic Number,Tomboy,NoteRenameDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteRenameDialog.cs,NoteRenameDialog,The following statement contains a magic number: notesButtonBox.Spacing = 5;  
Magic Number,Tomboy,NoteRenameDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteRenameDialog.cs,NoteRenameDialog,The following statement contains a magic number: VBox.PackStart (advancedExpander' true' true' 5);  
Magic Number,Tomboy.Sync,SyncDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncDialog.cs,SyncDialog,The following statement contains a magic number: SetSizeRequest (400' -1);  
Magic Number,Tomboy.Sync,SyncDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncDialog.cs,SyncDialog,The following statement contains a magic number: outerVBox.BorderWidth = 6;  
Magic Number,Tomboy.Sync,SyncDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncDialog.cs,SyncDialog,The following statement contains a magic number: image = new Image (GuiUtils.GetIcon ("tomboy"' 48));  
Magic Number,Tomboy.Sync,SyncDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncDialog.cs,SyncDialog,The following statement contains a magic number: messageLabel.SetSizeRequest (250' -1);  
Magic Number,Tomboy.Sync,SyncDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncDialog.cs,SyncDialog,The following statement contains a magic number: progressBar.ActivityBlocks = 30;  
Magic Number,Tomboy.Sync,SyncDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncDialog.cs,SyncDialog,The following statement contains a magic number: expander.Spacing = 6;  
Magic Number,Tomboy.Sync,SyncDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncDialog.cs,SyncDialog,The following statement contains a magic number: scrolledWindow.SetSizeRequest (-1' 200);  
Magic Number,Tomboy.Sync,SyncDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncDialog.cs,OnRealized,The following statement contains a magic number: if (state == SyncState.Idle) {  	// Kick off a timer to keep the progress bar going  	progressBarTimeoutId = GLib.Timeout.Add (500' OnPulseProgressBar);  	// Kick off a new synchronization  	SyncManager.PerformSynchronization (this);  } else {  	// Adjust the GUI accordingly  	SyncStateChanged (state);  }  
Magic Number,Tomboy.Sync,SyncDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncDialog.cs,OnRealized,The following statement contains a magic number: progressBarTimeoutId = GLib.Timeout.Add (500' OnPulseProgressBar);  
Magic Number,Tomboy.Sync,SyncTitleConflictDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncDialog.cs,SyncTitleConflictDialog,The following statement contains a magic number: outerVBox.BorderWidth = 12;  
Magic Number,Tomboy.Sync,SyncTitleConflictDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncDialog.cs,SyncTitleConflictDialog,The following statement contains a magic number: outerVBox.Spacing = 8;  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,HandleNoteSavedOrDeleted,The following statement contains a magic number: if (syncThread == null && autosyncTimer != null && autosyncTimeoutPrefMinutes > 0) {  	TimeSpan timeSinceLastCheck = DateTime.Now - lastBackgroundCheck;  	TimeSpan timeUntilNextCheck = new TimeSpan (0' currentAutosyncTimeoutMinutes' 0) - timeSinceLastCheck;  	if (timeUntilNextCheck.TotalMinutes < 1) {  		Logger.Debug ("Note saved or deleted within a minute of next autosync...resetting sync timer");  		currentAutosyncTimeoutMinutes = 1;  		autosyncTimer.Change (currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  		NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  		NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  	}  } else if (syncThread == null && autosyncTimer == null && autosyncTimeoutPrefMinutes > 0) {  	Logger.Debug ("Note saved or deleted...restarting sync timer");  	lastBackgroundCheck = DateTime.Now;  	// Perform a sync one minute after setting change  	currentAutosyncTimeoutMinutes = 1;  	autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  	NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  	NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  }  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,HandleNoteSavedOrDeleted,The following statement contains a magic number: if (syncThread == null && autosyncTimer != null && autosyncTimeoutPrefMinutes > 0) {  	TimeSpan timeSinceLastCheck = DateTime.Now - lastBackgroundCheck;  	TimeSpan timeUntilNextCheck = new TimeSpan (0' currentAutosyncTimeoutMinutes' 0) - timeSinceLastCheck;  	if (timeUntilNextCheck.TotalMinutes < 1) {  		Logger.Debug ("Note saved or deleted within a minute of next autosync...resetting sync timer");  		currentAutosyncTimeoutMinutes = 1;  		autosyncTimer.Change (currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  		NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  		NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  	}  } else if (syncThread == null && autosyncTimer == null && autosyncTimeoutPrefMinutes > 0) {  	Logger.Debug ("Note saved or deleted...restarting sync timer");  	lastBackgroundCheck = DateTime.Now;  	// Perform a sync one minute after setting change  	currentAutosyncTimeoutMinutes = 1;  	autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  	NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  	NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  }  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,HandleNoteSavedOrDeleted,The following statement contains a magic number: if (syncThread == null && autosyncTimer != null && autosyncTimeoutPrefMinutes > 0) {  	TimeSpan timeSinceLastCheck = DateTime.Now - lastBackgroundCheck;  	TimeSpan timeUntilNextCheck = new TimeSpan (0' currentAutosyncTimeoutMinutes' 0) - timeSinceLastCheck;  	if (timeUntilNextCheck.TotalMinutes < 1) {  		Logger.Debug ("Note saved or deleted within a minute of next autosync...resetting sync timer");  		currentAutosyncTimeoutMinutes = 1;  		autosyncTimer.Change (currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  		NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  		NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  	}  } else if (syncThread == null && autosyncTimer == null && autosyncTimeoutPrefMinutes > 0) {  	Logger.Debug ("Note saved or deleted...restarting sync timer");  	lastBackgroundCheck = DateTime.Now;  	// Perform a sync one minute after setting change  	currentAutosyncTimeoutMinutes = 1;  	autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  	NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  	NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  }  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,HandleNoteSavedOrDeleted,The following statement contains a magic number: if (syncThread == null && autosyncTimer != null && autosyncTimeoutPrefMinutes > 0) {  	TimeSpan timeSinceLastCheck = DateTime.Now - lastBackgroundCheck;  	TimeSpan timeUntilNextCheck = new TimeSpan (0' currentAutosyncTimeoutMinutes' 0) - timeSinceLastCheck;  	if (timeUntilNextCheck.TotalMinutes < 1) {  		Logger.Debug ("Note saved or deleted within a minute of next autosync...resetting sync timer");  		currentAutosyncTimeoutMinutes = 1;  		autosyncTimer.Change (currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  		NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  		NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  	}  } else if (syncThread == null && autosyncTimer == null && autosyncTimeoutPrefMinutes > 0) {  	Logger.Debug ("Note saved or deleted...restarting sync timer");  	lastBackgroundCheck = DateTime.Now;  	// Perform a sync one minute after setting change  	currentAutosyncTimeoutMinutes = 1;  	autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  	NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  	NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  }  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,HandleNoteSavedOrDeleted,The following statement contains a magic number: if (timeUntilNextCheck.TotalMinutes < 1) {  	Logger.Debug ("Note saved or deleted within a minute of next autosync...resetting sync timer");  	currentAutosyncTimeoutMinutes = 1;  	autosyncTimer.Change (currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  	NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  	NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  }  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,HandleNoteSavedOrDeleted,The following statement contains a magic number: if (timeUntilNextCheck.TotalMinutes < 1) {  	Logger.Debug ("Note saved or deleted within a minute of next autosync...resetting sync timer");  	currentAutosyncTimeoutMinutes = 1;  	autosyncTimer.Change (currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  	NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  	NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  }  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,HandleNoteSavedOrDeleted,The following statement contains a magic number: autosyncTimer.Change (currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,HandleNoteSavedOrDeleted,The following statement contains a magic number: autosyncTimer.Change (currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,HandleNoteSavedOrDeleted,The following statement contains a magic number: if (syncThread == null && autosyncTimer == null && autosyncTimeoutPrefMinutes > 0) {  	Logger.Debug ("Note saved or deleted...restarting sync timer");  	lastBackgroundCheck = DateTime.Now;  	// Perform a sync one minute after setting change  	currentAutosyncTimeoutMinutes = 1;  	autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  	NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  	NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  }  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,HandleNoteSavedOrDeleted,The following statement contains a magic number: if (syncThread == null && autosyncTimer == null && autosyncTimeoutPrefMinutes > 0) {  	Logger.Debug ("Note saved or deleted...restarting sync timer");  	lastBackgroundCheck = DateTime.Now;  	// Perform a sync one minute after setting change  	currentAutosyncTimeoutMinutes = 1;  	autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  	NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  	NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  }  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,HandleNoteSavedOrDeleted,The following statement contains a magic number: autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,HandleNoteSavedOrDeleted,The following statement contains a magic number: autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,UpdateSyncAction,The following statement contains a magic number: if (timeoutPref != autosyncTimeoutPrefMinutes) {  	autosyncTimeoutPrefMinutes = timeoutPref;  	if (autosyncTimer != null) {  		autosyncTimer.Dispose ();  		autosyncTimer = null;  	}  	if (autosyncTimeoutPrefMinutes > 0) {  		Logger.Debug ("Autosync pref changed...restarting sync timer");  		autosyncTimeoutPrefMinutes = autosyncTimeoutPrefMinutes >= 5 ? autosyncTimeoutPrefMinutes : 5;  		lastBackgroundCheck = DateTime.Now;  		// Perform a sync no sooner than user specified  		currentAutosyncTimeoutMinutes = autosyncTimeoutPrefMinutes;  		autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  		NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  		NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  	}  }  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,UpdateSyncAction,The following statement contains a magic number: if (timeoutPref != autosyncTimeoutPrefMinutes) {  	autosyncTimeoutPrefMinutes = timeoutPref;  	if (autosyncTimer != null) {  		autosyncTimer.Dispose ();  		autosyncTimer = null;  	}  	if (autosyncTimeoutPrefMinutes > 0) {  		Logger.Debug ("Autosync pref changed...restarting sync timer");  		autosyncTimeoutPrefMinutes = autosyncTimeoutPrefMinutes >= 5 ? autosyncTimeoutPrefMinutes : 5;  		lastBackgroundCheck = DateTime.Now;  		// Perform a sync no sooner than user specified  		currentAutosyncTimeoutMinutes = autosyncTimeoutPrefMinutes;  		autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  		NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  		NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  	}  }  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,UpdateSyncAction,The following statement contains a magic number: if (timeoutPref != autosyncTimeoutPrefMinutes) {  	autosyncTimeoutPrefMinutes = timeoutPref;  	if (autosyncTimer != null) {  		autosyncTimer.Dispose ();  		autosyncTimer = null;  	}  	if (autosyncTimeoutPrefMinutes > 0) {  		Logger.Debug ("Autosync pref changed...restarting sync timer");  		autosyncTimeoutPrefMinutes = autosyncTimeoutPrefMinutes >= 5 ? autosyncTimeoutPrefMinutes : 5;  		lastBackgroundCheck = DateTime.Now;  		// Perform a sync no sooner than user specified  		currentAutosyncTimeoutMinutes = autosyncTimeoutPrefMinutes;  		autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  		NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  		NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  	}  }  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,UpdateSyncAction,The following statement contains a magic number: if (timeoutPref != autosyncTimeoutPrefMinutes) {  	autosyncTimeoutPrefMinutes = timeoutPref;  	if (autosyncTimer != null) {  		autosyncTimer.Dispose ();  		autosyncTimer = null;  	}  	if (autosyncTimeoutPrefMinutes > 0) {  		Logger.Debug ("Autosync pref changed...restarting sync timer");  		autosyncTimeoutPrefMinutes = autosyncTimeoutPrefMinutes >= 5 ? autosyncTimeoutPrefMinutes : 5;  		lastBackgroundCheck = DateTime.Now;  		// Perform a sync no sooner than user specified  		currentAutosyncTimeoutMinutes = autosyncTimeoutPrefMinutes;  		autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  		NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  		NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  	}  }  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,UpdateSyncAction,The following statement contains a magic number: if (autosyncTimeoutPrefMinutes > 0) {  	Logger.Debug ("Autosync pref changed...restarting sync timer");  	autosyncTimeoutPrefMinutes = autosyncTimeoutPrefMinutes >= 5 ? autosyncTimeoutPrefMinutes : 5;  	lastBackgroundCheck = DateTime.Now;  	// Perform a sync no sooner than user specified  	currentAutosyncTimeoutMinutes = autosyncTimeoutPrefMinutes;  	autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  	NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  	NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  }  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,UpdateSyncAction,The following statement contains a magic number: if (autosyncTimeoutPrefMinutes > 0) {  	Logger.Debug ("Autosync pref changed...restarting sync timer");  	autosyncTimeoutPrefMinutes = autosyncTimeoutPrefMinutes >= 5 ? autosyncTimeoutPrefMinutes : 5;  	lastBackgroundCheck = DateTime.Now;  	// Perform a sync no sooner than user specified  	currentAutosyncTimeoutMinutes = autosyncTimeoutPrefMinutes;  	autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  	NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  	NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  }  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,UpdateSyncAction,The following statement contains a magic number: if (autosyncTimeoutPrefMinutes > 0) {  	Logger.Debug ("Autosync pref changed...restarting sync timer");  	autosyncTimeoutPrefMinutes = autosyncTimeoutPrefMinutes >= 5 ? autosyncTimeoutPrefMinutes : 5;  	lastBackgroundCheck = DateTime.Now;  	// Perform a sync no sooner than user specified  	currentAutosyncTimeoutMinutes = autosyncTimeoutPrefMinutes;  	autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  	NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  	NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  }  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,UpdateSyncAction,The following statement contains a magic number: if (autosyncTimeoutPrefMinutes > 0) {  	Logger.Debug ("Autosync pref changed...restarting sync timer");  	autosyncTimeoutPrefMinutes = autosyncTimeoutPrefMinutes >= 5 ? autosyncTimeoutPrefMinutes : 5;  	lastBackgroundCheck = DateTime.Now;  	// Perform a sync no sooner than user specified  	currentAutosyncTimeoutMinutes = autosyncTimeoutPrefMinutes;  	autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  	NoteMgr.NoteBufferChanged -= HandleNoteBufferChanged;  	NoteMgr.NoteBufferChanged += HandleNoteBufferChanged;  }  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,UpdateSyncAction,The following statement contains a magic number: autosyncTimeoutPrefMinutes = autosyncTimeoutPrefMinutes >= 5 ? autosyncTimeoutPrefMinutes : 5;  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,UpdateSyncAction,The following statement contains a magic number: autosyncTimeoutPrefMinutes = autosyncTimeoutPrefMinutes >= 5 ? autosyncTimeoutPrefMinutes : 5;  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,UpdateSyncAction,The following statement contains a magic number: autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  
Magic Number,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,UpdateSyncAction,The following statement contains a magic number: autosyncTimer = new Timer (o => BackgroundSyncChecker ()' null' currentAutosyncTimeoutMinutes * 60000' autosyncTimeoutPrefMinutes * 60000);  
Magic Number,Tomboy.Sync,SyncLockInfo,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,SyncLockInfo,The following statement contains a magic number: Duration = new TimeSpan (0' 2' 0);  
Magic Number,Tomboy.Sync,FileSystemSyncServer,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\FileSystemSyncServer.cs,BeginSyncTransaction,The following statement contains a magic number: lockTimeout.Reset ((uint)syncLock.Duration.TotalMilliseconds - 20000);  
Magic Number,Tomboy.Sync,FileSystemSyncServer,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\FileSystemSyncServer.cs,GetRevisionDirPath,The following statement contains a magic number: return Path.Combine (Path.Combine (serverPath' (rev / 100).ToString ())' rev.ToString ());  
Magic Number,Tomboy.Sync,FileSystemSyncServer,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\FileSystemSyncServer.cs,LockTimeout,The following statement contains a magic number: lockTimeout.Reset ((uint)syncLock.Duration.TotalMilliseconds - 20000);  
Magic Number,Tomboy.Notebooks,Notebook,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\Notebook.cs,GetTemplateNote,The following statement contains a magic number: if (template_note == null) {  	// Check name does not exist  	String template_name = templateNoteTitle;  	if (noteManager.Find (template_name) != null) {  		template_name = noteManager.GetUniqueName (template_name' 1);  	}  	template_note = noteManager.Create (template_name' NoteManager.GetNoteTemplateContent (template_name));  	// Select the initial text  	NoteBuffer buffer = template_note.Buffer;  	Gtk.TextIter iter = buffer.GetIterAtLineOffset (2' 0);  	buffer.MoveMark (buffer.SelectionBound' iter);  	buffer.MoveMark (buffer.InsertMark' buffer.EndIter);  	// Flag this as a template note  	template_note.AddTag (template_tag);  	// Add on the notebook system tag so Tomboy  	// will persist the tag/notebook across sessions  	// if no other notes are added to the notebook.  	template_note.AddTag (notebook_tag);  	template_note.QueueSave (ChangeType.ContentChanged);  }  
Magic Number,Tomboy.Notebooks,CreateNotebookDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\CreateNotebookDialog.cs,CreateNotebookDialog,The following statement contains a magic number: newNotebookIcon = GuiUtils.GetIcon ("notebook-new"' 16);  
Magic Number,Tomboy.Notebooks,CreateNotebookDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\CreateNotebookDialog.cs,CreateNotebookDialog,The following statement contains a magic number: newNotebookIconDialog = GuiUtils.GetIcon ("notebook-new"' 48);  
Magic Number,Tomboy.Notebooks,CreateNotebookDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\CreateNotebookDialog.cs,CreateNotebookDialog,The following statement contains a magic number: table.Attach (nameEntry' 1' 2' 0' 1);  
Magic Number,Tomboy.Notebooks,CreateNotebookDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\CreateNotebookDialog.cs,CreateNotebookDialog,The following statement contains a magic number: table.Attach (errorLabel' 1' 2' 1' 2);  
Magic Number,Tomboy.Notebooks,CreateNotebookDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\CreateNotebookDialog.cs,CreateNotebookDialog,The following statement contains a magic number: table.Attach (errorLabel' 1' 2' 1' 2);  
Magic Number,Tomboy.Notebooks,NotebookNoteAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\NotebookNoteAddin.cs,UpdateNotebookButtonLabel,The following statement contains a magic number: if (l != null) {  	l.Text = labelText;  	l.MaxWidthChars = 12;  	l.Ellipsize = Pango.EllipsizeMode.End;  	l.ShowAll ();  }  
Magic Number,Tomboy.Notebooks,NotebookNoteAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\NotebookNoteAddin.cs,UpdateNotebookButtonLabel,The following statement contains a magic number: l.MaxWidthChars = 12;  
Magic Number,Tomboy.Notebooks,NotebookNewNoteMenuItem,F:\newReposMay17\GNOME_tomboy\Tomboy\Notebooks\NotebookNewNoteMenuItem.cs,NotebookNewNoteMenuItem,The following statement contains a magic number: this.Image = new Gtk.Image (GuiUtils.GetIcon ("note-new"' 16));  
Missing Default,Tomboy,Note,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,LoadForeignNoteXml,The following switch statement is missing a default case: switch (xml.NodeType) {  case XmlNodeType.Element:  	switch (xml.Name) {  	case "title":  		Title = xml.ReadString ();  		break;  	case "text":  		XmlContent = xml.ReadInnerXml ();  		break;  	case "last-change-date":  		if (DateTime.TryParse (xml.ReadString ()' out date))  			data.Data.ChangeDate = date;  		else  			data.Data.ChangeDate = DateTime.Now;  		break;  	case "last-metadata-change-date":  		if (DateTime.TryParse (xml.ReadString ()' out date))  			data.Data.MetadataChangeDate = date;  		else  			data.Data.MetadataChangeDate = DateTime.Now;  		break;  	case "create-date":  		if (DateTime.TryParse (xml.ReadString ()' out date))  			data.Data.CreateDate = date;  		else  			data.Data.CreateDate = DateTime.Now;  		break;  	case "tags":  		XmlDocument doc = new XmlDocument ();  		List<string> tag_strings = ParseTags (doc.ReadNode (xml.ReadSubtree ()));  		foreach (string tag_str in tag_strings) {  			Tag tag = TagManager.GetOrCreateTag (tag_str);  			newTags.Add (tag);  		}  		break;  	case "open-on-startup":  		bool isStartup;  		if (bool.TryParse (xml.ReadString ()' out isStartup))  			IsOpenOnStartup = isStartup;  		break;  	}  	break;  }  
Missing Default,Tomboy,Note,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,LoadForeignNoteXml,The following switch statement is missing a default case: switch (xml.Name) {  case "title":  	Title = xml.ReadString ();  	break;  case "text":  	XmlContent = xml.ReadInnerXml ();  	break;  case "last-change-date":  	if (DateTime.TryParse (xml.ReadString ()' out date))  		data.Data.ChangeDate = date;  	else  		data.Data.ChangeDate = DateTime.Now;  	break;  case "last-metadata-change-date":  	if (DateTime.TryParse (xml.ReadString ()' out date))  		data.Data.MetadataChangeDate = date;  	else  		data.Data.MetadataChangeDate = DateTime.Now;  	break;  case "create-date":  	if (DateTime.TryParse (xml.ReadString ()' out date))  		data.Data.CreateDate = date;  	else  		data.Data.CreateDate = DateTime.Now;  	break;  case "tags":  	XmlDocument doc = new XmlDocument ();  	List<string> tag_strings = ParseTags (doc.ReadNode (xml.ReadSubtree ()));  	foreach (string tag_str in tag_strings) {  		Tag tag = TagManager.GetOrCreateTag (tag_str);  		newTags.Add (tag);  	}  	break;  case "open-on-startup":  	bool isStartup;  	if (bool.TryParse (xml.ReadString ()' out isStartup))  		IsOpenOnStartup = isStartup;  	break;  }  
Missing Default,Tomboy,NoteArchiver,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,Read,The following switch statement is missing a default case: switch (xml.NodeType) {  case XmlNodeType.Element:  	switch (xml.Name) {  	case "note":  		version = xml.GetAttribute ("version");  		break;  	case "title":  		note.Title = xml.ReadString ();  		break;  	case "text":  		// <text> is just a wrapper around <note-content>  		// NOTE: Use .text here to avoid triggering a save.  		note.Text = xml.ReadInnerXml ();  		break;  	case "last-change-date":  		if (DateTime.TryParse (xml.ReadString ()' out date))  			note.ChangeDate = date;  		else  			note.ChangeDate = DateTime.Now;  		break;  	case "last-metadata-change-date":  		if (DateTime.TryParse (xml.ReadString ()' out date))  			note.MetadataChangeDate = date;  		else  			note.MetadataChangeDate = DateTime.Now;  		break;  	case "create-date":  		if (DateTime.TryParse (xml.ReadString ()' out date))  			note.CreateDate = date;  		else  			note.CreateDate = DateTime.Now;  		break;  	case "cursor-position":  		if (int.TryParse (xml.ReadString ()' out num))  			note.CursorPosition = num;  		break;  	case "selection-bound-position":  		if (int.TryParse (xml.ReadString ()' out num))  			note.SelectionBoundPosition = num;  		break;  	case "width":  		if (int.TryParse (xml.ReadString ()' out num))  			note.Width = num;  		break;  	case "height":  		if (int.TryParse (xml.ReadString ()' out num))  			note.Height = num;  		break;  	case "x":  		if (int.TryParse (xml.ReadString ()' out num))  			note.X = num;  		break;  	case "y":  		if (int.TryParse (xml.ReadString ()' out num))  			note.Y = num;  		break;  	case "tags":  		XmlDocument doc = new XmlDocument ();  		List<string> tag_strings = ParseTags (doc.ReadNode (xml.ReadSubtree ()));  		foreach (string tag_str in tag_strings) {  			Tag tag = TagManager.GetOrCreateTag (tag_str);  			note.Tags [tag.NormalizedName] = tag;  		}  		break;  	case "open-on-startup":  		bool isStartup;  		if (bool.TryParse (xml.ReadString ()' out isStartup))  			note.IsOpenOnStartup = isStartup;  		break;  	}  	break;  }  
Missing Default,Tomboy,NoteArchiver,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,Read,The following switch statement is missing a default case: switch (xml.Name) {  case "note":  	version = xml.GetAttribute ("version");  	break;  case "title":  	note.Title = xml.ReadString ();  	break;  case "text":  	// <text> is just a wrapper around <note-content>  	// NOTE: Use .text here to avoid triggering a save.  	note.Text = xml.ReadInnerXml ();  	break;  case "last-change-date":  	if (DateTime.TryParse (xml.ReadString ()' out date))  		note.ChangeDate = date;  	else  		note.ChangeDate = DateTime.Now;  	break;  case "last-metadata-change-date":  	if (DateTime.TryParse (xml.ReadString ()' out date))  		note.MetadataChangeDate = date;  	else  		note.MetadataChangeDate = DateTime.Now;  	break;  case "create-date":  	if (DateTime.TryParse (xml.ReadString ()' out date))  		note.CreateDate = date;  	else  		note.CreateDate = DateTime.Now;  	break;  case "cursor-position":  	if (int.TryParse (xml.ReadString ()' out num))  		note.CursorPosition = num;  	break;  case "selection-bound-position":  	if (int.TryParse (xml.ReadString ()' out num))  		note.SelectionBoundPosition = num;  	break;  case "width":  	if (int.TryParse (xml.ReadString ()' out num))  		note.Width = num;  	break;  case "height":  	if (int.TryParse (xml.ReadString ()' out num))  		note.Height = num;  	break;  case "x":  	if (int.TryParse (xml.ReadString ()' out num))  		note.X = num;  	break;  case "y":  	if (int.TryParse (xml.ReadString ()' out num))  		note.Y = num;  	break;  case "tags":  	XmlDocument doc = new XmlDocument ();  	List<string> tag_strings = ParseTags (doc.ReadNode (xml.ReadSubtree ()));  	foreach (string tag_str in tag_strings) {  		Tag tag = TagManager.GetOrCreateTag (tag_str);  		note.Tags [tag.NormalizedName] = tag;  	}  	break;  case "open-on-startup":  	bool isStartup;  	if (bool.TryParse (xml.ReadString ()' out isStartup))  		note.IsOpenOnStartup = isStartup;  	break;  }  
Missing Default,Tomboy,NoteArchiver,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,GetTitleFromNoteXml,The following switch statement is missing a default case: switch (xml.NodeType) {  case XmlNodeType.Element:  	switch (xml.Name) {  	case "title":  		return xml.ReadString ();  	}  	break;  }  
Missing Default,Tomboy,NoteArchiver,F:\newReposMay17\GNOME_tomboy\Tomboy\Note.cs,GetTitleFromNoteXml,The following switch statement is missing a default case: switch (xml.Name) {  case "title":  	return xml.ReadString ();  }  
Missing Default,Tomboy,NoteManager,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteManager.cs,OnSettingChanged,The following switch statement is missing a default case: switch (args.Key) {  case Preferences.START_NOTE_URI:  	start_note_uri = args.Value as string;  	break;  }  
Missing Default,Tomboy,NoteTag,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteTag.cs,OnTextEvent,The following switch statement is missing a default case: switch (ev.Type) {  case Gdk.EventType.ButtonPress:  	Gdk.EventButton button_ev = new Gdk.EventButton (ev.Handle);  	// Do not insert selected text when activating links with  	// middle mouse button  	if (button_ev.Button == 2) {  		allow_middle_activate = true;  		return true;  	}  	return false;  case Gdk.EventType.ButtonRelease:  	button_ev = new Gdk.EventButton (ev.Handle);  	if (button_ev.Button != 1 && button_ev.Button != 2)  		return false;  	/* Don't activate if Shift or Control is pressed */if ((int)(button_ev.State & (Gdk.ModifierType.ShiftMask | Gdk.ModifierType.ControlMask)) != 0)  		return false;  	// Prevent activation when selecting links with the mouse  	if (editor.Buffer.HasSelection)  		return false;  	// Don't activate if the link has just been pasted with the  	// middle mouse button (no preceding ButtonPress event)  	if (button_ev.Button == 2 && !allow_middle_activate)  		return false;  	else  		allow_middle_activate = false;  	GetExtents (iter' out start' out end);  	bool success = OnActivate (editor' start' end);  	// Hide note if link is activated with middle mouse button  	if (success && button_ev.Button == 2) {  		Gtk.Widget widget = (Gtk.Widget)sender;  		widget.Toplevel.Hide ();  	}  	return false;  case Gdk.EventType.KeyPress:  	Gdk.EventKey key_ev = new Gdk.EventKey (ev.Handle);  	// Control-Enter activates the link at point...  	if ((int)(key_ev.State & Gdk.ModifierType.ControlMask) == 0)  		return false;  	if (key_ev.Key != Gdk.Key.Return && key_ev.Key != Gdk.Key.KP_Enter)  		return false;  	GetExtents (iter' out start' out end);  	return OnActivate (editor' start' end);  }  
Missing Default,Tomboy,NoteFindBar,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteWindow.cs,KeyReleased,The following switch statement is missing a default case: switch (args.Event.Key) {  case Gdk.Key.Shift_L:  case Gdk.Key.Shift_R:  	shift_key_pressed = false;  	break;  }  
Missing Default,Tomboy,Preferences,F:\newReposMay17\GNOME_tomboy\Tomboy\Preferences.cs,GetDefault,The following switch statement is missing a default case: switch (key) {  case ENABLE_SPELLCHECKING:  case ENABLE_KEYBINDINGS:  	return true;  case ENABLE_CUSTOM_FONT:  	return false;  case ENABLE_CUSTOM_SEARCH_MATCH_COLOR:  	return false;  case ENABLE_WIKIWORDS:  	return false;  case ENABLE_AUTO_BULLETED_LISTS:  	return true;  case ENABLE_ICON_PASTE:  	return false;  case ENABLE_CLOSE_NOTE_ON_ESCAPE:  	return true;  case ENABLE_TRAY_ICON:  	return true;  case ENABLE_DELETE_CONFIRM:  	return true;  case START_NOTE_URI:  	return String.Empty;  case CUSTOM_FONT_FACE:  	return "Serif 11";  case CUSTOM_SEARCH_MATCH_COLOR:  	return "#7cfc00";  // "lawngreen"' provides good contrast with default font color  case MENU_NOTE_COUNT:  	return 10;  case MENU_MAX_NOTE_COUNT:  	return 18;  case MENU_PINNED_NOTES:  	return string.Empty;  case MENU_ITEM_MAX_LENGTH:  	return 100;  case KEYBINDING_SHOW_NOTE_MENU:  	return "<Alt>F12";  case KEYBINDING_OPEN_START_HERE:  	return "<Alt>F11";  case KEYBINDING_CREATE_NEW_NOTE:  case KEYBINDING_OPEN_SEARCH:  case KEYBINDING_OPEN_RECENT_CHANGES:  	return "disabled";  case EXPORTHTML_EXPORT_LINKED:  	return false;  case EXPORTHTML_EXPORT_LINKED_ALL:  	return false;  case EXPORTHTML_LAST_DIRECTORY:  	return string.Empty;  case STICKYNOTEIMPORTER_FIRST_RUN:  	return true;  case ENABLE_STARTUP_NOTES:  	return true;  case SYNC_CLIENT_ID:  	return System.Guid.NewGuid ().ToString ();  case SYNC_LOCAL_PATH:  	return string.Empty;  case SYNC_CONFIGURED_CONFLICT_BEHAVIOR:  	return 0;  case SYNC_AUTOSYNC_TIMEOUT:  	return -1;  case NOTE_RENAME_BEHAVIOR:  	return 0;  case INSERT_TIMESTAMP_FORMAT:  	return Catalog.GetString ("dddd' MMMM d' h:mm tt");  }  
Missing Default,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnTreeViewKeyPressed,The following switch statement is missing a default case: switch (args.Event.Key) {  case Gdk.Key.Menu:  	// Pop up the context menu if a note is selected  	List<Note> selected_notes = GetSelectedNotes ();  	if (selected_notes != null && selected_notes.Count > 0) {  		Gtk.Menu menu = Tomboy.ActionManager.GetWidget ("/MainWindowContextMenu") as Gtk.Menu;  		PopupContextMenuAtLocation (menu' 0' 0);  		args.RetVal = true;  	}  	break;  case Gdk.Key.Return:  case Gdk.Key.KP_Enter:  	// Open all selected notes  	OnOpenNote (this' args);  	args.RetVal = true;  	break;  }  
Missing Default,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnKeyPressed,The following switch statement is missing a default case: switch (args.Event.Key) {  case Gdk.Key.Escape:  	// Allow Escape to close the window  	OnCloseWindow (this' EventArgs.Empty);  	break;  }  
Missing Default,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnNotebooksTreeButtonPressed,The following switch statement is missing a default case: switch (args.Event.Button) {  case 3:  	// third mouse button (right-click)  	Notebooks.Notebook notebook = GetSelectedNotebook ();  	if (notebook == null)  		return;  	// Don't pop open a submenu  	Gtk.TreePath path = null;  	Gtk.TreeViewColumn column = null;  	bool rowClicked = true;  	if (notebooksTree.GetPathAtPos ((int)args.Event.X' (int)args.Event.Y' out path' out column) == false)  		rowClicked = false;  	Gtk.TreeSelection selection = notebooksTree.Selection;  	if (selection.CountSelectedRows () == 0)  		rowClicked = false;  	Gtk.Menu menu = null;  	if (rowClicked)  		menu = Tomboy.ActionManager.GetWidget ("/NotebooksTreeContextMenu") as Gtk.Menu;  	else  		menu = Tomboy.ActionManager.GetWidget ("/NotebooksTreeNoRowContextMenu") as Gtk.Menu;  	PopupContextMenuAtLocation (menu' (int)args.Event.X' (int)args.Event.Y);  	break;  }  
Missing Default,Tomboy,NoteRecentChanges,F:\newReposMay17\GNOME_tomboy\Tomboy\RecentChanges.cs,OnNotebooksKeyPressed,The following switch statement is missing a default case: switch (args.Event.Key) {  case Gdk.Key.Escape:  	// Allow Escape to close the window  	OnCloseWindow (this' EventArgs.Empty);  	break;  case Gdk.Key.Menu:  	// Pop up the context menu if a notebook is selected  	Notebooks.Notebook notebook = GetSelectedNotebook ();  	if (notebook == null || notebook is Notebooks.SpecialNotebook)  		return;  	// Don't pop open a submenu  	Gtk.Menu menu = Tomboy.ActionManager.GetWidget ("/NotebooksTreeContextMenu") as Gtk.Menu;  	PopupContextMenuAtLocation (menu' 0' 0);  	break;  }  
Missing Default,Tomboy,HIGMessageDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,HIGMessageDialog,The following switch statement is missing a default case: switch (buttons) {  case Gtk.ButtonsType.None:  	break;  case Gtk.ButtonsType.Ok:  	AddButton (Gtk.Stock.Ok' Gtk.ResponseType.Ok' true);  	break;  case Gtk.ButtonsType.Close:  	AddButton (Gtk.Stock.Close' Gtk.ResponseType.Close' true);  	break;  case Gtk.ButtonsType.Cancel:  	AddButton (Gtk.Stock.Cancel' Gtk.ResponseType.Cancel' true);  	break;  case Gtk.ButtonsType.YesNo:  	AddButton (Gtk.Stock.No' Gtk.ResponseType.No' false);  	AddButton (Gtk.Stock.Yes' Gtk.ResponseType.Yes' true);  	break;  case Gtk.ButtonsType.OkCancel:  	AddButton (Gtk.Stock.Cancel' Gtk.ResponseType.Cancel' false);  	AddButton (Gtk.Stock.Ok' Gtk.ResponseType.Ok' true);  	break;  }  
Missing Default,Tomboy,XmlDecoder,F:\newReposMay17\GNOME_tomboy\Tomboy\Utils.cs,Decode,The following switch statement is missing a default case: switch (xml.NodeType) {  case XmlNodeType.Text:  case XmlNodeType.Whitespace:  	builder.Append (xml.Value);  	break;  }  
Missing Default,Tomboy,MouseHandWatcher,F:\newReposMay17\GNOME_tomboy\Tomboy\Watchers.cs,OnEditorKeyPress,The following switch statement is missing a default case: switch (args.Event.Key) {  case Gdk.Key.Shift_L:  case Gdk.Key.Shift_R:  case Gdk.Key.Control_L:  case Gdk.Key.Control_R:  	// Control or Shift when hovering over a link  	// swiches to a bar cursor...  	if (!hovering_on_link)  		break;  	Gdk.Window win = Window.Editor.GetWindow (Gtk.TextWindowType.Text);  	win.Cursor = normal_cursor;  	break;  case Gdk.Key.Return:  case Gdk.Key.KP_Enter:  	Gtk.TextIter iter = Buffer.GetIterAtMark (Buffer.InsertMark);  	foreach (Gtk.TextTag tag in iter.Tags) {  		if (NoteTagTable.TagIsActivatable (tag)) {  			args.RetVal = tag.ProcessEvent (Window.Editor' args.Event' iter);  			if ((bool)args.RetVal)  				break;  		}  	}  	break;  }  
Missing Default,Tomboy,MouseHandWatcher,F:\newReposMay17\GNOME_tomboy\Tomboy\Watchers.cs,OnEditorKeyRelease,The following switch statement is missing a default case: switch (args.Event.Key) {  case Gdk.Key.Shift_L:  case Gdk.Key.Shift_R:  case Gdk.Key.Control_L:  case Gdk.Key.Control_R:  	if (!hovering_on_link)  		break;  	Gdk.Window win = Window.Editor.GetWindow (Gtk.TextWindowType.Text);  	win.Cursor = hand_cursor;  	break;  }  
Missing Default,Tomboy,NoteEditor,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteEditor.cs,OnFontSettingChanged,The following switch statement is missing a default case: switch (args.Key) {  case Preferences.ENABLE_CUSTOM_FONT:  	UpdateCustomFontSetting ();  	break;  case Preferences.CUSTOM_FONT_FACE:  	UpdateCustomFontSetting ();  	break;  case GNOME_DOCUMENT_FONT_KEY:  	if (!(bool)Preferences.Get (Preferences.ENABLE_CUSTOM_FONT))  		ModifyFontFromString ((string)args.Value);  	break;  }  
Missing Default,Tomboy,NoteEditor,F:\newReposMay17\GNOME_tomboy\Tomboy\NoteEditor.cs,OnSearchMatchColorSettingChanged,The following switch statement is missing a default case: switch (args.Key) {  case Preferences.ENABLE_CUSTOM_SEARCH_MATCH_COLOR:  case Preferences.CUSTOM_SEARCH_MATCH_COLOR:  	UpdateSearchMatchColor ();  	break;  }  
Missing Default,Tomboy.Sync,SyncDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncDialog.cs,SyncStateChanged,The following switch statement is missing a default case: switch (state) {  case SyncState.AcquiringLock:  	ProgressText = Catalog.GetString ("Acquiring sync lock...");  	break;  case SyncState.CommittingChanges:  	ProgressText = Catalog.GetString ("Committing changes...");  	break;  case SyncState.Connecting:  	Title = Catalog.GetString ("Synchronizing Notes");  	HeaderText = Catalog.GetString ("Synchronizing your notes...");  	MessageText = Catalog.GetString ("This may take a while' kick back and enjoy!");  	model.Clear ();  	ProgressText = Catalog.GetString ("Connecting to the server...");  	progressBar.Fraction = 0;  	progressBar.Show ();  	progressLabel.Show ();  	break;  case SyncState.DeleteServerNotes:  	ProgressText = Catalog.GetString ("Deleting notes off of the server...");  	progressBar.Pulse ();  	break;  case SyncState.Downloading:  	ProgressText = Catalog.GetString ("Downloading new/updated notes...");  	progressBar.Pulse ();  	break;  case SyncState.Idle:  	GLib.Source.Remove (progressBarTimeoutId);  	progressBarTimeoutId = 0;  	progressBar.Fraction = 0;  	progressBar.Hide ();  	progressLabel.Hide ();  	closeButton.Sensitive = true;  	break;  case SyncState.Locked:  	Title = Catalog.GetString ("Server Locked");  	HeaderText = Catalog.GetString ("Server is locked");  	MessageText = Catalog.GetString ("One of your other computers is currently synchronizing.  Please wait 2 minutes and try again.");  	ProgressText = string.Empty;  	break;  case SyncState.PrepareDownload:  	ProgressText = Catalog.GetString ("Preparing to download updates from server...");  	break;  case SyncState.PrepareUpload:  	ProgressText = Catalog.GetString ("Preparing to upload updates to server...");  	break;  case SyncState.Uploading:  	ProgressText = Catalog.GetString ("Uploading notes to server...");  	break;  case SyncState.Failed:  	Title = Catalog.GetString ("Synchronization Failed");  	HeaderText = Catalog.GetString ("Failed to synchronize");  	MessageText = Catalog.GetString ("Could not synchronize notes.  Check the details below and try again.");  	ProgressText = string.Empty;  	break;  case SyncState.Succeeded:  	int count = 0;  	count += model.IterNChildren ();  	Title = Catalog.GetString ("Synchronization Complete");  	HeaderText = Catalog.GetString ("Synchronization is complete");  	string numNotesUpdated = string.Format (Catalog.GetPluralString ("{0} note updated."' "{0} notes updated."' count)' count);  	MessageText = numNotesUpdated + "  " + Catalog.GetString ("Your notes are now up to date.");  	ProgressText = string.Empty;  	break;  case SyncState.UserCancelled:  	Title = Catalog.GetString ("Synchronization Canceled");  	HeaderText = Catalog.GetString ("Synchronization was canceled");  	MessageText = Catalog.GetString ("You canceled the synchronization.  You may close the window now.");  	ProgressText = string.Empty;  	break;  case SyncState.NoConfiguredSyncService:  	Title = Catalog.GetString ("Synchronization Not Configured");  	HeaderText = Catalog.GetString ("Synchronization is not configured");  	MessageText = Catalog.GetString ("Please configure synchronization in the preferences dialog.");  	ProgressText = string.Empty;  	break;  case SyncState.SyncServerCreationFailed:  	Title = Catalog.GetString ("Synchronization Service Error");  	HeaderText = Catalog.GetString ("Service error");  	MessageText = Catalog.GetString ("Error connecting to the synchronization service.  Please try again.");  	ProgressText = string.Empty;  	break;  }  
Missing Default,Tomboy.Sync,SyncDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncDialog.cs,NoteSynchronized,The following switch statement is missing a default case: switch (type) {  case NoteSyncType.DeleteFromClient:  	statusText = Catalog.GetString ("Deleted locally");  	break;  case NoteSyncType.DeleteFromServer:  	statusText = Catalog.GetString ("Deleted from server");  	break;  case NoteSyncType.DownloadModified:  	statusText = Catalog.GetString ("Updated");  	break;  case NoteSyncType.DownloadNew:  	statusText = Catalog.GetString ("Added");  	break;  case NoteSyncType.UploadModified:  	statusText = Catalog.GetString ("Uploaded changes to server");  	break;  case NoteSyncType.UploadNew:  	statusText = Catalog.GetString ("Uploaded new note to server");  	break;  }  
Missing Default,Tomboy.Sync,SyncDialog,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncDialog.cs,NoteConflictDetected,The following switch statement is missing a default case: switch (resolution) {  case SyncTitleConflictResolution.OverwriteExisting:  	if (conflictDlg.AlwaysPerformThisAction)  		savedBehavior = resolution;  	// No need to delete if sync will overwrite  	if (localConflictNote.Id != remoteNote.UUID)  		manager.Delete (localConflictNote);  	break;  case SyncTitleConflictResolution.RenameExistingAndUpdate:  	if (conflictDlg.AlwaysPerformThisAction)  		savedBehavior = resolution;  	RenameNote (localConflictNote' conflictDlg.RenamedTitle' true);  	break;  case SyncTitleConflictResolution.RenameExistingNoUpdate:  	if (conflictDlg.AlwaysPerformThisAction)  		savedBehavior = resolution;  	RenameNote (localConflictNote' conflictDlg.RenamedTitle' false);  	break;  }  
Missing Default,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,GetSynchronizedXmlBits,The following switch statement is missing a default case: switch (xml.NodeType) {  case XmlNodeType.Element:  	switch (xml.Name) {  	case "title":  		title = xml.ReadString ();  		break;  	case "tags":  		tags = xml.ReadInnerXml ();  		Logger.Debug ("In the bits: tags = " + tags);  		// TODO: Delete  		break;  	case "text":  		content = xml.ReadInnerXml ();  		break;  	}  	break;  }  
Missing Default,Tomboy.Sync,SyncManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,GetSynchronizedXmlBits,The following switch statement is missing a default case: switch (xml.Name) {  case "title":  	title = xml.ReadString ();  	break;  case "tags":  	tags = xml.ReadInnerXml ();  	Logger.Debug ("In the bits: tags = " + tags);  	// TODO: Delete  	break;  case "text":  	content = xml.ReadInnerXml ();  	break;  }  
Missing Default,Tomboy.Sync,NoteUpdate,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,NoteUpdate,The following switch statement is missing a default case: switch (xml.NodeType) {  case XmlNodeType.Element:  	switch (xml.Name) {  	case "title":  		Title = xml.ReadString ();  		break;  	}  	break;  }  
Missing Default,Tomboy.Sync,NoteUpdate,F:\newReposMay17\GNOME_tomboy\Tomboy\Synchronization\SyncManager.cs,NoteUpdate,The following switch statement is missing a default case: switch (xml.Name) {  case "title":  	Title = xml.ReadString ();  	break;  }  
