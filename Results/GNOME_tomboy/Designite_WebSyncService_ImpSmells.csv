Implementation smell,Namespace,Class,File,Method,Description
Long Method,Tomboy.WebSync,WebSyncPreferencesWidget,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\WebSyncPreferencesWidget.cs,OnAuthButtonClicked,The method has 125 lines of code.
Complex Method,Tomboy.WebSync.Api,NoteInfo,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Api\NoteInfo.cs,ParseJson,Cyclomatic complexity of the method is 16
Complex Method,Tomboy.WebSync.Api,NoteInfo,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Api\NoteInfo.cs,ToUpdateObject,Cyclomatic complexity of the method is 14
Complex Method,Tomboy.WebSync.Api,OAuth,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Api\OAuth.cs,MakeWebRequest,Cyclomatic complexity of the method is 9
Complex Method,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexString,Cyclomatic complexity of the method is 34
Complex Method,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexNumber,Cyclomatic complexity of the method is 8
Complex Method,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,InnerScan,Cyclomatic complexity of the method is 27
Complex Method,MonoHttp,ChunkedInputStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkedInputStream.cs,BeginRead,Cyclomatic complexity of the method is 8
Complex Method,MonoHttp,ChunkStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkStream.cs,GetChunkSize,Cyclomatic complexity of the method is 14
Complex Method,MonoHttp,ChunkStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkStream.cs,ReadTrailer,Cyclomatic complexity of the method is 11
Complex Method,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,FinishInitialization,Cyclomatic complexity of the method is 18
Complex Method,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,AddHeader,Cyclomatic complexity of the method is 37
Complex Method,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,Cyclomatic complexity of the method is 46
Complex Method,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,SendHeaders,Cyclomatic complexity of the method is 20
Complex Method,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,Cyclomatic complexity of the method is 9
Complex Method,MonoHttp,ListenerPrefix,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ListenerPrefix.cs,CheckUri,Cyclomatic complexity of the method is 12
Complex Method,MonoHttp,RequestStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\RequestStream.cs,FillFromBuffer,Cyclomatic complexity of the method is 9
Complex Method,MonoHttp,Utility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\Utility.cs,IsPredefinedScheme,Cyclomatic complexity of the method is 9
Complex Method,MonoHttp,WebHeaderCollection,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\WebHeaderCollection.cs,RequestHeaderToString,Cyclomatic complexity of the method is 43
Complex Method,MonoHttp,WebHeaderCollection,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\WebHeaderCollection.cs,ResponseHeaderToString,Cyclomatic complexity of the method is 32
Complex Method,OAuth,Base,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\Base.cs,GenerateSignatureBase,Cyclomatic complexity of the method is 14
Complex Method,OAuth,Base,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\Base.cs,GenerateSignature,Cyclomatic complexity of the method is 13
Complex Method,Tomboy.WebSync,NoteConvert,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\NoteConvert.cs,ToNoteInfo,Cyclomatic complexity of the method is 12
Complex Method,Tomboy.WebSync,WebSyncPreferencesWidget,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\WebSyncPreferencesWidget.cs,OnAuthButtonClicked,Cyclomatic complexity of the method is 11
Long Parameter List,MonoHttp,ChunkedInputStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkedInputStream.cs,ChunkedInputStream,The method has 5 parameters.
Long Parameter List,MonoHttp,ChunkedInputStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkedInputStream.cs,BeginRead,The method has 5 parameters.
Long Parameter List,MonoHttp,RequestStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\RequestStream.cs,RequestStream,The method has 5 parameters.
Long Parameter List,MonoHttp,RequestStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\RequestStream.cs,BeginRead,The method has 5 parameters.
Long Parameter List,MonoHttp,RequestStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\RequestStream.cs,BeginWrite,The method has 5 parameters.
Long Parameter List,MonoHttp,ResponseStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ResponseStream.cs,BeginWrite,The method has 5 parameters.
Long Parameter List,MonoHttp,ResponseStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ResponseStream.cs,BeginRead,The method has 5 parameters.
Long Parameter List,OAuth,Base,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\Base.cs,GenerateSignatureBase,The method has 12 parameters.
Long Parameter List,OAuth,Base,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\Base.cs,GenerateSignature,The method has 12 parameters.
Long Parameter List,OAuth,Base,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\Base.cs,GenerateSignature,The method has 13 parameters.
Long Statement,Tomboy.WebSync.Api,NoteInfo,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Api\NoteInfo.cs,ToUpdateObject,The length of the statement  "		noteUpdateObj [LastMetadataChangeDateElementName] = LastMetadataChangeDate.Value.ToString (NoteArchiver.DATE_TIME_FORMAT); " is 122.
Long Statement,Tomboy.WebSync.Api,OAuth,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Api\OAuth.cs,GetAuthorizationUrl,The length of the statement  "			var link = string.Format ("{0}?oauth_token={1}&oauth_callback={2}"' AuthorizeLocation' qs ["oauth_token"]' HttpUtility.UrlEncode (CallbackUrl)); " is 144.
Long Statement,Tomboy.WebSync.Api,OAuth,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Api\OAuth.cs,WebRequest,The length of the statement  "	var sig = GenerateSignature (uri' ConsumerKey' ConsumerSecret' Token' TokenSecret' Verifier' method' timeStamp' nonce' callbackUrl' out outUrl' out parameters); " is 160.
Long Statement,Tomboy.WebSync.Api,OAuth,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Api\OAuth.cs,WebRequest,The length of the statement  "	parameters.Add (new QueryParameter<string> ("oauth_signature"' HttpUtility.UrlEncode (sig)' s => string.IsNullOrEmpty (s))); " is 124.
Long Statement,Tomboy.WebSync.Api,UserInfo,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Api\UserInfo.cs,UpdateNotes,The length of the statement  "	string jsonResponseString = Connection.Put (Notes.ApiRef' null' CreateNoteChangesJsonString (noteUpdates' expectedNewRevision)); " is 128.
Long Statement,Hyena.Json,Deserializer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Deserializer.cs,UnexpectedToken,The length of the statement  "	throw new ApplicationException (String.Format ("Unexpected token {0} at [{1}:{2}]; expected {3}"' got.Type' got.SourceLine' got.SourceColumn' expected)); " is 153.
Long Statement,Hyena.Json,Serializer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Serializer.cs,SerializeString,The length of the statement  "	return "\"" + val.Replace ("\\"' "\\\\").Replace ("\""' "\\\"").Replace ("\b"' "\\b").Replace ("\f"' "\\f").Replace ("\n"' "\\n").Replace ("\r"' "\\r").Replace ("\t"' "\\t") + "\""; " is 181.
Long Statement,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,UnexpectedCharacter,The length of the statement  "	throw new ApplicationException (String.Format ("Unexpected character '{0}' at [{1}:{2}]"' ch' current_line' current_column - 1)); " is 129.
Long Statement,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,InvalidSyntax,The length of the statement  "	throw new ApplicationException (String.Format ("Invalid syntax: {0} at [{1}:{2}]"' message' current_line' current_column)); " is 123.
Long Statement,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexInt,The length of the statement  "		value = (hex ? 16 : 10) * value + (hex ? peek >= 'A' && peek <= 'F' ? 10 + peek - 'A' : (peek >= 'a' && peek <= 'f' ? 10 + peek - 'a' : peek - '0') : peek - '0'); " is 162.
Long Statement,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexNumber,The length of the statement  "		InvalidSyntax ("Numbers starting with 0 must be followed by a . or not " + "followed by a digit (octal syntax not legal)"); " is 123.
Long Statement,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,SetRequestLine,The length of the statement  "		if ((ic >= 'A' && ic <= 'Z') || (ic > 32 && c < 127 && c != '(' && c != ')' && c != '<' && c != '<' && c != '>' && c != '@' && c != ''' && c != ';' && c != ':' && c != '\\' && c != '"' && c != '/' && c != '[' && c != ']' && c != '?' && c != '=' && c != '{' && c != '}')) " is 270.
Long Statement,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,SendHeaders,The length of the statement  "			 */bool conn_close = (status_code == 400 || status_code == 408 || status_code == 411 || status_code == 413 || status_code == 414 || status_code == 500 || status_code == 503); " is 173.
Long Statement,MonoHttp,ListenerAsyncResult,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ListenerAsyncResult.cs,Complete,The length of the statement  "		if ((context.Listener.AuthenticationSchemes == AuthenticationSchemes.Basic || context.Listener.AuthenticationSchemes == AuthenticationSchemes.Negotiate) && context.Request.Headers ["Authorization"] == null) { " is 208.
Long Statement,OAuth,Base,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\Base.cs,GenerateSignatureBase,The length of the statement  "		new QueryParameter<string> (OAuthTimestampKey' ((long)timeStamp.TotalSeconds).ToString ()' s => string.IsNullOrEmpty (s))' " is 122.
Long Statement,OAuth,Base,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\Base.cs,GenerateSignature,The length of the statement  "	return GenerateSignature (url' consumerKey' consumerSecret' token' tokenSecret' verifier' method' timeStamp' nonce' SignatureType.HMACSHA1' callbackUrl' out normalizedUrl' out parameters); " is 188.
Long Statement,OAuth,Base,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\Base.cs,GenerateSignature,The length of the statement  "		string signatureBase = GenerateSignatureBase (url' consumerKey' token' tokenSecret' verifier' method' timeStamp' nonce' SignatureType.HMACSHA1' callbackUrl' out normalizedUrl' out parameters); " is 192.
Long Statement,OAuth,Base,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\Base.cs,GenerateSignature,The length of the statement  "		hmacsha1.Key = Encoding.ASCII.GetBytes (string.Format ("{0}&{1}"' UrlEncode (consumerSecret)' string.IsNullOrEmpty (tokenSecret) ? "" : UrlEncode (tokenSecret))); " is 162.
Long Statement,OAuth,QueryParameter,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\QueryParameter.cs,Equals,The length of the statement  "	return string.Equals (other.Name' Name' StringComparison.OrdinalIgnoreCase) ? EqualityComparer<T>.Default.Equals (other.Value' _value) : false; " is 143.
Long Statement,Tomboy.WebSync,NoteConvert,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\NoteConvert.cs,ToNoteInfo,The length of the statement  "	noteInfo.Title = note.Title.Replace ("&"' "&amp;").Replace ("<"' "&lt;").Replace (">"' "&gt;").Replace ("\""' "&quot;").Replace ("\'"' "&apos;"); " is 145.
Long Statement,Tomboy.WebSync,NoteConvert,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\NoteConvert.cs,ToNoteInfo,The length of the statement  "	const string noteContentRegex = @"^<note-content([^>]+version=""(?<contentVersion>[^""]*)"")?[^>]*((/>)|(>(?<innerContent>.*)</note-content>))$"; " is 145.
Long Statement,Tomboy.WebSync,NoteConvert,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\NoteConvert.cs,ToNoteData,The length of the statement  "	noteData.Title = noteInfo.Title.Replace ("&amp;"' "&").Replace ("&lt;"' "<").Replace ("&gt;"' ">").Replace ("&quot;"' "\"").Replace ("&apos;"' "\'"); " is 149.
Long Statement,Tomboy.WebSync,NoteConvert,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\NoteConvert.cs,ToNoteData,The length of the statement  "	noteData.Text = string.Format ("<note-content version=\"{0}\">{1}\n\n{2}</note-content>"' noteInfo.NoteContentVersion' noteInfo.Title' noteInfo.NoteContent); " is 157.
Long Statement,Tomboy.WebSync,WebSyncPreferencesWidget,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\WebSyncPreferencesWidget.cs,OnAuthButtonClicked,The length of the statement  "				Logger.Error ("Error processing OAuth callback. Could be a sign that you pressed the button to reset the connection. Exception details:"); " is 138.
Long Statement,Tomboy.WebSync,WebSyncPreferencesWidget,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\WebSyncPreferencesWidget.cs,OnAuthButtonClicked,The length of the statement  "			string htmlResponse = String.Format (callbackHtmlTemplate' // Translators: Title of web page presented to user after they authorized Tomboy for sync " is 148.
Long Statement,Tomboy.WebSync,WebSyncPreferencesWidget,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\WebSyncPreferencesWidget.cs,OnAuthButtonClicked,The length of the statement  "			Catalog.GetString ("Tomboy Web Authorization Successful")' // Translators: Body of web page presented to user after they authorized Tomboy for sync " is 147.
Long Statement,Tomboy.WebSync,WebSyncPreferencesWidget,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\WebSyncPreferencesWidget.cs,AddRow,The length of the statement  "	table.Attach (widget' 1' 2' row' row + 1' Gtk.AttachOptions.Expand | Gtk.AttachOptions.Fill' Gtk.AttachOptions.Expand | Gtk.AttachOptions.Fill' 0' 0); " is 150.
Long Statement,Tomboy.WebSync,WebSyncServiceAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\WebSyncServiceAddin.cs,SaveConfigSettings,The length of the statement  "	Preferences.Set (accessTokenBaseUrlPrefPath' oauthConfig != null ? GetConfigString (oauthConfig.AccessTokenBaseUrl) : String.Empty); " is 132.
Long Statement,Tomboy.WebSync,WebSyncServiceAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\WebSyncServiceAddin.cs,SaveConfigSettings,The length of the statement  "	Preferences.Set (authorizeLocationPrefPath' oauthConfig != null ? GetConfigString (oauthConfig.AuthorizeLocation) : String.Empty); " is 130.
Long Statement,Tomboy.WebSync,WebSyncServiceAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\WebSyncServiceAddin.cs,SaveConfigSettings,The length of the statement  "	Preferences.Set (consumerSecretPrefPath' oauthConfig != null ? GetConfigString (oauthConfig.ConsumerSecret) : String.Empty); " is 124.
Long Statement,Tomboy.WebSync,WebSyncServiceAddin,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\WebSyncServiceAddin.cs,SaveConfigSettings,The length of the statement  "	Preferences.Set (requestTokenBaseUrlPrefPath' oauthConfig != null ? GetConfigString (oauthConfig.RequestTokenBaseUrl) : String.Empty); " is 134.
Complex Conditional,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexInt,The conditional expression  "Char.IsDigit (peek) || (hex && ((peek >= 'a' && peek <= 'f') || (peek >= 'A' && peek <= 'F')))"  is complex.
Complex Conditional,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,SetRequestLine,The conditional expression  "(ic >= 'A' && ic <= 'Z') || (ic > 32 && c < 127 && c != '(' && c != ')' && c != '<' && c != '<' && c != '>' && c != '@' && c != ''' && c != ';' && c != ':' && c != '\\' && c != '"' && c != '/' && c != '[' && c != ']' && c != '?' && c != '=' && c != '{' && c != '}')"  is complex.
Complex Conditional,MonoHttp,WebHeaderCollection,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\WebHeaderCollection.cs,IsHeaderValue,The conditional expression  "c < 0x20 && (c != '\r' && c != '\n' && c != '\t')"  is complex.
Complex Conditional,OAuth,Base,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\Base.cs,GenerateSignatureBase,The conditional expression  "!((url.Scheme == "http" && url.Port == 80) || (url.Scheme == "https" && url.Port == 443))"  is complex.
Empty Catch Block,MonoHttp,EndPointListener,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\EndPointListener.cs,OnAccept,The method has an empty catch block.
Empty Catch Block,MonoHttp,EndPointListener,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\EndPointListener.cs,OnAccept,The method has an empty catch block.
Empty Catch Block,MonoHttp,HttpConnection,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpConnection.cs,Close,The method has an empty catch block.
Empty Catch Block,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,FinishInitialization,The method has an empty catch block.
Empty Catch Block,MonoHttp,ResponseStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ResponseStream.cs,InternalWrite,The method has an empty catch block.
Empty Catch Block,MonoHttp,ResponseStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ResponseStream.cs,EndWrite,The method has an empty catch block.
Magic Number,Hyena.Json,JsonArray,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\JsonArray.cs,Dump,The following statement contains a magic number: foreach (object item in this) {  	Console.Write (String.Empty.PadLeft (levels * 2' ' '));  	if (item is IJsonCollection) {  		((IJsonCollection)item).Dump (levels + 1);  	} else {  		Console.WriteLine (item);  	}  }  
Magic Number,Hyena.Json,JsonArray,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\JsonArray.cs,Dump,The following statement contains a magic number: Console.Write (String.Empty.PadLeft (levels * 2' ' '));  
Magic Number,Hyena.Json,JsonArray,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\JsonArray.cs,Dump,The following statement contains a magic number: Console.WriteLine ("{0}]"' String.Empty.PadLeft ((levels - 1) * 2' ' '));  
Magic Number,Hyena.Json,JsonObject,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\JsonObject.cs,Dump,The following statement contains a magic number: foreach (KeyValuePair<string' object> item in this) {  	Console.Write ("{0}\"{1}\" : "' String.Empty.PadLeft (levels * 2' ' ')' item.Key);  	if (item.Value is IJsonCollection) {  		((IJsonCollection)item.Value).Dump (levels + 1);  	} else {  		Console.WriteLine (item.Value);  	}  }  
Magic Number,Hyena.Json,JsonObject,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\JsonObject.cs,Dump,The following statement contains a magic number: Console.Write ("{0}\"{1}\" : "' String.Empty.PadLeft (levels * 2' ' ')' item.Key);  
Magic Number,Hyena.Json,JsonObject,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\JsonObject.cs,Dump,The following statement contains a magic number: Console.WriteLine ("{0}}}"' String.Empty.PadLeft ((levels - 1) * 2' ' '));  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,GetStringBuilder,The following statement contains a magic number: if (string_buffer == null) {  	string_buffer = new StringBuilder (64);  	return string_buffer;  }  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,GetStringBuilder,The following statement contains a magic number: string_buffer = new StringBuilder (64);  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexString,The following statement contains a magic number: while (!reader.EndOfStream) {  	if (read) {  		ReadChar ();  	}  	read = true;  	if (peek == '\\') {  		ReadChar ();  		switch (peek) {  		case 'u':  			ReadChar ();  			buffer.Append ((char)LexInt (true' 4));  			read = false;  			break;  		case '"':  		case '\\':  		case '/':  			buffer.Append (peek);  			break;  		case 'b':  			buffer.Append ('\b');  			break;  		case 'f':  			buffer.Append ('\f');  			break;  		case 'n':  			buffer.Append ('\n');  			break;  		case 'r':  			buffer.Append ('\r');  			break;  		case 't':  			buffer.Append ('\t');  			break;  		default:  			UnexpectedCharacter (peek);  			break;  		}  	} else if (peek == '"') {  		ReadChar ();  		return buffer.ToString ();  	} else {  		buffer.Append (peek);  	}  }  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexString,The following statement contains a magic number: if (peek == '\\') {  	ReadChar ();  	switch (peek) {  	case 'u':  		ReadChar ();  		buffer.Append ((char)LexInt (true' 4));  		read = false;  		break;  	case '"':  	case '\\':  	case '/':  		buffer.Append (peek);  		break;  	case 'b':  		buffer.Append ('\b');  		break;  	case 'f':  		buffer.Append ('\f');  		break;  	case 'n':  		buffer.Append ('\n');  		break;  	case 'r':  		buffer.Append ('\r');  		break;  	case 't':  		buffer.Append ('\t');  		break;  	default:  		UnexpectedCharacter (peek);  		break;  	}  } else if (peek == '"') {  	ReadChar ();  	return buffer.ToString ();  } else {  	buffer.Append (peek);  }  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexString,The following statement contains a magic number: switch (peek) {  case 'u':  	ReadChar ();  	buffer.Append ((char)LexInt (true' 4));  	read = false;  	break;  case '"':  case '\\':  case '/':  	buffer.Append (peek);  	break;  case 'b':  	buffer.Append ('\b');  	break;  case 'f':  	buffer.Append ('\f');  	break;  case 'n':  	buffer.Append ('\n');  	break;  case 'r':  	buffer.Append ('\r');  	break;  case 't':  	buffer.Append ('\t');  	break;  default:  	UnexpectedCharacter (peek);  	break;  }  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexString,The following statement contains a magic number: buffer.Append ((char)LexInt (true' 4));  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexInt,The following statement contains a magic number: do {  	value = (hex ? 16 : 10) * value + (hex ? peek >= 'A' && peek <= 'F' ? 10 + peek - 'A' : (peek >= 'a' && peek <= 'f' ? 10 + peek - 'a' : peek - '0') : peek - '0');  	if (maxDigits > 0 && ++count >= maxDigits) {  		ReadChar ();  		return value;  	}  	ReadChar ();  } while (Char.IsDigit (peek) || (hex && ((peek >= 'a' && peek <= 'f') || (peek >= 'A' && peek <= 'F'))));  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexInt,The following statement contains a magic number: do {  	value = (hex ? 16 : 10) * value + (hex ? peek >= 'A' && peek <= 'F' ? 10 + peek - 'A' : (peek >= 'a' && peek <= 'f' ? 10 + peek - 'a' : peek - '0') : peek - '0');  	if (maxDigits > 0 && ++count >= maxDigits) {  		ReadChar ();  		return value;  	}  	ReadChar ();  } while (Char.IsDigit (peek) || (hex && ((peek >= 'a' && peek <= 'f') || (peek >= 'A' && peek <= 'F'))));  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexInt,The following statement contains a magic number: do {  	value = (hex ? 16 : 10) * value + (hex ? peek >= 'A' && peek <= 'F' ? 10 + peek - 'A' : (peek >= 'a' && peek <= 'f' ? 10 + peek - 'a' : peek - '0') : peek - '0');  	if (maxDigits > 0 && ++count >= maxDigits) {  		ReadChar ();  		return value;  	}  	ReadChar ();  } while (Char.IsDigit (peek) || (hex && ((peek >= 'a' && peek <= 'f') || (peek >= 'A' && peek <= 'F'))));  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexInt,The following statement contains a magic number: do {  	value = (hex ? 16 : 10) * value + (hex ? peek >= 'A' && peek <= 'F' ? 10 + peek - 'A' : (peek >= 'a' && peek <= 'f' ? 10 + peek - 'a' : peek - '0') : peek - '0');  	if (maxDigits > 0 && ++count >= maxDigits) {  		ReadChar ();  		return value;  	}  	ReadChar ();  } while (Char.IsDigit (peek) || (hex && ((peek >= 'a' && peek <= 'f') || (peek >= 'A' && peek <= 'F'))));  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexInt,The following statement contains a magic number: value = (hex ? 16 : 10) * value + (hex ? peek >= 'A' && peek <= 'F' ? 10 + peek - 'A' : (peek >= 'a' && peek <= 'f' ? 10 + peek - 'a' : peek - '0') : peek - '0');  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexInt,The following statement contains a magic number: value = (hex ? 16 : 10) * value + (hex ? peek >= 'A' && peek <= 'F' ? 10 + peek - 'A' : (peek >= 'a' && peek <= 'f' ? 10 + peek - 'a' : peek - '0') : peek - '0');  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexInt,The following statement contains a magic number: value = (hex ? 16 : 10) * value + (hex ? peek >= 'A' && peek <= 'F' ? 10 + peek - 'A' : (peek >= 'a' && peek <= 'f' ? 10 + peek - 'a' : peek - '0') : peek - '0');  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexInt,The following statement contains a magic number: value = (hex ? 16 : 10) * value + (hex ? peek >= 'A' && peek <= 'F' ? 10 + peek - 'A' : (peek >= 'a' && peek <= 'f' ? 10 + peek - 'a' : peek - '0') : peek - '0');  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexFraction,The following statement contains a magic number: while (true) {  	ReadChar ();  	if (!Char.IsDigit (peek)) {  		break;  	}  	fraction += (peek - '0') / d;  	d *= 10;  }  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexFraction,The following statement contains a magic number: d *= 10;  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexNumber,The following statement contains a magic number: if (peek == 'e' || peek == 'E') {  	isDouble = true;  	ReadChar ();  	if (peek == '-') {  		ReadChar ();  		doubleVal /= Math.Pow (10' LexInt ());  	} else if (peek == '+') {  		ReadChar ();  		doubleVal *= Math.Pow (10' LexInt ());  	} else if (Char.IsDigit (peek)) {  		doubleVal *= Math.Pow (10' LexInt ());  	} else {  		InvalidSyntax ("Malformed exponent");  	}  }  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexNumber,The following statement contains a magic number: if (peek == 'e' || peek == 'E') {  	isDouble = true;  	ReadChar ();  	if (peek == '-') {  		ReadChar ();  		doubleVal /= Math.Pow (10' LexInt ());  	} else if (peek == '+') {  		ReadChar ();  		doubleVal *= Math.Pow (10' LexInt ());  	} else if (Char.IsDigit (peek)) {  		doubleVal *= Math.Pow (10' LexInt ());  	} else {  		InvalidSyntax ("Malformed exponent");  	}  }  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexNumber,The following statement contains a magic number: if (peek == 'e' || peek == 'E') {  	isDouble = true;  	ReadChar ();  	if (peek == '-') {  		ReadChar ();  		doubleVal /= Math.Pow (10' LexInt ());  	} else if (peek == '+') {  		ReadChar ();  		doubleVal *= Math.Pow (10' LexInt ());  	} else if (Char.IsDigit (peek)) {  		doubleVal *= Math.Pow (10' LexInt ());  	} else {  		InvalidSyntax ("Malformed exponent");  	}  }  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexNumber,The following statement contains a magic number: if (peek == '-') {  	ReadChar ();  	doubleVal /= Math.Pow (10' LexInt ());  } else if (peek == '+') {  	ReadChar ();  	doubleVal *= Math.Pow (10' LexInt ());  } else if (Char.IsDigit (peek)) {  	doubleVal *= Math.Pow (10' LexInt ());  } else {  	InvalidSyntax ("Malformed exponent");  }  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexNumber,The following statement contains a magic number: if (peek == '-') {  	ReadChar ();  	doubleVal /= Math.Pow (10' LexInt ());  } else if (peek == '+') {  	ReadChar ();  	doubleVal *= Math.Pow (10' LexInt ());  } else if (Char.IsDigit (peek)) {  	doubleVal *= Math.Pow (10' LexInt ());  } else {  	InvalidSyntax ("Malformed exponent");  }  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexNumber,The following statement contains a magic number: if (peek == '-') {  	ReadChar ();  	doubleVal /= Math.Pow (10' LexInt ());  } else if (peek == '+') {  	ReadChar ();  	doubleVal *= Math.Pow (10' LexInt ());  } else if (Char.IsDigit (peek)) {  	doubleVal *= Math.Pow (10' LexInt ());  } else {  	InvalidSyntax ("Malformed exponent");  }  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexNumber,The following statement contains a magic number: doubleVal /= Math.Pow (10' LexInt ());  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexNumber,The following statement contains a magic number: if (peek == '+') {  	ReadChar ();  	doubleVal *= Math.Pow (10' LexInt ());  } else if (Char.IsDigit (peek)) {  	doubleVal *= Math.Pow (10' LexInt ());  } else {  	InvalidSyntax ("Malformed exponent");  }  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexNumber,The following statement contains a magic number: if (peek == '+') {  	ReadChar ();  	doubleVal *= Math.Pow (10' LexInt ());  } else if (Char.IsDigit (peek)) {  	doubleVal *= Math.Pow (10' LexInt ());  } else {  	InvalidSyntax ("Malformed exponent");  }  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexNumber,The following statement contains a magic number: doubleVal *= Math.Pow (10' LexInt ());  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexNumber,The following statement contains a magic number: if (Char.IsDigit (peek)) {  	doubleVal *= Math.Pow (10' LexInt ());  } else {  	InvalidSyntax ("Malformed exponent");  }  
Magic Number,Hyena.Json,Tokenizer,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\Hyena.Json\Tokenizer.cs,LexNumber,The following statement contains a magic number: doubleVal *= Math.Pow (10' LexInt ());  
Magic Number,MonoHttp,ChunkedInputStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkedInputStream.cs,BeginRead,The following statement contains a magic number: ares.Buffer = new byte[8192];  
Magic Number,MonoHttp,ChunkedInputStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkedInputStream.cs,BeginRead,The following statement contains a magic number: ares.Count = 8192;  
Magic Number,MonoHttp,ChunkedInputStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkedInputStream.cs,OnRead,The following statement contains a magic number: try {  	int nread = base.EndRead (base_ares);  	decoder.Write (ares.Buffer' ares.Offset' nread);  	nread = decoder.Read (rb.Buffer' rb.Offset' rb.Count);  	rb.Offset += nread;  	rb.Count -= nread;  	if (rb.Count == 0 || !decoder.WantMore || nread == 0) {  		no_more_data = !decoder.WantMore && nread == 0;  		ares.Count = rb.InitialCount - rb.Count;  		ares.Complete ();  		return;  	}  	ares.Offset = 0;  	ares.Count = Math.Min (8192' decoder.ChunkLeft + 6);  	base.BeginRead (ares.Buffer' ares.Offset' ares.Count' OnRead' rb);  } catch (Exception e) {  	context.Connection.SendError (e.Message' 400);  	ares.Complete (e);  }  
Magic Number,MonoHttp,ChunkedInputStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkedInputStream.cs,OnRead,The following statement contains a magic number: try {  	int nread = base.EndRead (base_ares);  	decoder.Write (ares.Buffer' ares.Offset' nread);  	nread = decoder.Read (rb.Buffer' rb.Offset' rb.Count);  	rb.Offset += nread;  	rb.Count -= nread;  	if (rb.Count == 0 || !decoder.WantMore || nread == 0) {  		no_more_data = !decoder.WantMore && nread == 0;  		ares.Count = rb.InitialCount - rb.Count;  		ares.Complete ();  		return;  	}  	ares.Offset = 0;  	ares.Count = Math.Min (8192' decoder.ChunkLeft + 6);  	base.BeginRead (ares.Buffer' ares.Offset' ares.Count' OnRead' rb);  } catch (Exception e) {  	context.Connection.SendError (e.Message' 400);  	ares.Complete (e);  }  
Magic Number,MonoHttp,ChunkedInputStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkedInputStream.cs,OnRead,The following statement contains a magic number: try {  	int nread = base.EndRead (base_ares);  	decoder.Write (ares.Buffer' ares.Offset' nread);  	nread = decoder.Read (rb.Buffer' rb.Offset' rb.Count);  	rb.Offset += nread;  	rb.Count -= nread;  	if (rb.Count == 0 || !decoder.WantMore || nread == 0) {  		no_more_data = !decoder.WantMore && nread == 0;  		ares.Count = rb.InitialCount - rb.Count;  		ares.Complete ();  		return;  	}  	ares.Offset = 0;  	ares.Count = Math.Min (8192' decoder.ChunkLeft + 6);  	base.BeginRead (ares.Buffer' ares.Offset' ares.Count' OnRead' rb);  } catch (Exception e) {  	context.Connection.SendError (e.Message' 400);  	ares.Complete (e);  }  
Magic Number,MonoHttp,ChunkedInputStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkedInputStream.cs,OnRead,The following statement contains a magic number: ares.Count = Math.Min (8192' decoder.ChunkLeft + 6);  
Magic Number,MonoHttp,ChunkedInputStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkedInputStream.cs,OnRead,The following statement contains a magic number: ares.Count = Math.Min (8192' decoder.ChunkLeft + 6);  
Magic Number,MonoHttp,ChunkedInputStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkedInputStream.cs,OnRead,The following statement contains a magic number: context.Connection.SendError (e.Message' 400);  
Magic Number,MonoHttp,ChunkedInputStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkedInputStream.cs,EndRead,The following statement contains a magic number: if (my_ares.Error != null)  	throw new HttpListenerException (400' "I/O operation aborted.");  
Magic Number,MonoHttp,ChunkedInputStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkedInputStream.cs,EndRead,The following statement contains a magic number: throw new HttpListenerException (400' "I/O operation aborted.");  
Magic Number,MonoHttp,ChunkStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkStream.cs,GetChunkSize,The following statement contains a magic number: while (offset < size) {  	c = (char)buffer [offset++];  	if (c == '\r') {  		if (sawCR)  			ThrowProtocolViolation ("2 CR found");  		sawCR = true;  		continue;  	}  	if (sawCR && c == '\n')  		break;  	if (c == ' ')  		gotit = true;  	if (!gotit)  		saved.Append (c);  	if (saved.Length > 20)  		ThrowProtocolViolation ("chunk size too long.");  }  
Magic Number,MonoHttp,ChunkStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkStream.cs,GetChunkSize,The following statement contains a magic number: if (saved.Length > 20)  	ThrowProtocolViolation ("chunk size too long.");  
Magic Number,MonoHttp,ChunkStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkStream.cs,GetChunkSize,The following statement contains a magic number: if (chunkSize == 0) {  	trailerState = 2;  	return State.Trailer;  }  
Magic Number,MonoHttp,ChunkStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkStream.cs,GetChunkSize,The following statement contains a magic number: trailerState = 2;  
Magic Number,MonoHttp,ChunkStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkStream.cs,ReadTrailer,The following statement contains a magic number: if (trailerState == 2 && (char)buffer [offset] == '\r' && saved.Length == 0) {  	offset++;  	if (offset < size && (char)buffer [offset] == '\n') {  		offset++;  		return State.None;  	}  	offset--;  }  
Magic Number,MonoHttp,ChunkStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkStream.cs,ReadTrailer,The following statement contains a magic number: while (offset < size && st < 4) {  	c = (char)buffer [offset++];  	if ((st == 0 || st == 2) && c == '\r') {  		st++;  		continue;  	}  	if ((st == 1 || st == 3) && c == '\n') {  		st++;  		continue;  	}  	if (st > 0) {  		saved.Append (stString.Substring (0' saved.Length == 0 ? st - 2 : st));  		st = 0;  	}  }  
Magic Number,MonoHttp,ChunkStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkStream.cs,ReadTrailer,The following statement contains a magic number: while (offset < size && st < 4) {  	c = (char)buffer [offset++];  	if ((st == 0 || st == 2) && c == '\r') {  		st++;  		continue;  	}  	if ((st == 1 || st == 3) && c == '\n') {  		st++;  		continue;  	}  	if (st > 0) {  		saved.Append (stString.Substring (0' saved.Length == 0 ? st - 2 : st));  		st = 0;  	}  }  
Magic Number,MonoHttp,ChunkStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkStream.cs,ReadTrailer,The following statement contains a magic number: while (offset < size && st < 4) {  	c = (char)buffer [offset++];  	if ((st == 0 || st == 2) && c == '\r') {  		st++;  		continue;  	}  	if ((st == 1 || st == 3) && c == '\n') {  		st++;  		continue;  	}  	if (st > 0) {  		saved.Append (stString.Substring (0' saved.Length == 0 ? st - 2 : st));  		st = 0;  	}  }  
Magic Number,MonoHttp,ChunkStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkStream.cs,ReadTrailer,The following statement contains a magic number: while (offset < size && st < 4) {  	c = (char)buffer [offset++];  	if ((st == 0 || st == 2) && c == '\r') {  		st++;  		continue;  	}  	if ((st == 1 || st == 3) && c == '\n') {  		st++;  		continue;  	}  	if (st > 0) {  		saved.Append (stString.Substring (0' saved.Length == 0 ? st - 2 : st));  		st = 0;  	}  }  
Magic Number,MonoHttp,ChunkStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkStream.cs,ReadTrailer,The following statement contains a magic number: if ((st == 0 || st == 2) && c == '\r') {  	st++;  	continue;  }  
Magic Number,MonoHttp,ChunkStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkStream.cs,ReadTrailer,The following statement contains a magic number: if ((st == 1 || st == 3) && c == '\n') {  	st++;  	continue;  }  
Magic Number,MonoHttp,ChunkStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkStream.cs,ReadTrailer,The following statement contains a magic number: if (st > 0) {  	saved.Append (stString.Substring (0' saved.Length == 0 ? st - 2 : st));  	st = 0;  }  
Magic Number,MonoHttp,ChunkStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkStream.cs,ReadTrailer,The following statement contains a magic number: saved.Append (stString.Substring (0' saved.Length == 0 ? st - 2 : st));  
Magic Number,MonoHttp,ChunkStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ChunkStream.cs,ReadTrailer,The following statement contains a magic number: if (st < 4) {  	trailerState = st;  	if (offset < size)  		ThrowProtocolViolation ("Error reading trailer.");  	return State.Trailer;  }  
Magic Number,MonoHttp,EndPointListener,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\EndPointListener.cs,EndPointListener,The following statement contains a magic number: sock.Listen (500);  
Magic Number,MonoHttp,EndPointListener,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\EndPointListener.cs,AddSpecial,The following statement contains a magic number: foreach (ListenerPrefix p in coll) {  	if (p.Path == prefix.Path)  		//TODO: code  		throw new HttpListenerException (400' "Prefix already in use.");  }  
Magic Number,MonoHttp,EndPointListener,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\EndPointListener.cs,AddSpecial,The following statement contains a magic number: if (p.Path == prefix.Path)  	//TODO: code  	throw new HttpListenerException (400' "Prefix already in use.");  
Magic Number,MonoHttp,EndPointListener,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\EndPointListener.cs,AddSpecial,The following statement contains a magic number: throw new HttpListenerException (400' "Prefix already in use.");  
Magic Number,MonoHttp,EndPointListener,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\EndPointListener.cs,AddPrefix,The following statement contains a magic number: lock (prefixes) {  	if (prefix.Host == "*") {  		if (unhandled == null)  			unhandled = new ArrayList ();  		prefix.Listener = listener;  		AddSpecial (unhandled' prefix);  		return;  	}  	if (prefix.Host == "+") {  		if (all == null)  			all = new ArrayList ();  		prefix.Listener = listener;  		AddSpecial (all' prefix);  		return;  	}  	if (prefixes.ContainsKey (prefix)) {  		HttpListener other = (HttpListener)prefixes [prefix];  		if (other != listener)  			// TODO: code.  			throw new HttpListenerException (400' "There's another listener for " + prefix);  		return;  	}  	prefixes [prefix] = listener;  }  
Magic Number,MonoHttp,EndPointListener,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\EndPointListener.cs,AddPrefix,The following statement contains a magic number: if (prefixes.ContainsKey (prefix)) {  	HttpListener other = (HttpListener)prefixes [prefix];  	if (other != listener)  		// TODO: code.  		throw new HttpListenerException (400' "There's another listener for " + prefix);  	return;  }  
Magic Number,MonoHttp,EndPointListener,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\EndPointListener.cs,AddPrefix,The following statement contains a magic number: if (other != listener)  	// TODO: code.  	throw new HttpListenerException (400' "There's another listener for " + prefix);  
Magic Number,MonoHttp,EndPointListener,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\EndPointListener.cs,AddPrefix,The following statement contains a magic number: throw new HttpListenerException (400' "There's another listener for " + prefix);  
Magic Number,MonoHttp,EndPointManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\EndPointManager.cs,AddPrefixInternal,The following statement contains a magic number: if (lp.Path.IndexOf ('%') != -1)  	throw new HttpListenerException (400' "Invalid path.");  
Magic Number,MonoHttp,EndPointManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\EndPointManager.cs,AddPrefixInternal,The following statement contains a magic number: throw new HttpListenerException (400' "Invalid path.");  
Magic Number,MonoHttp,EndPointManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\EndPointManager.cs,AddPrefixInternal,The following statement contains a magic number: if (lp.Path.IndexOf ("//") != -1)  	// TODO: Code?  	throw new HttpListenerException (400' "Invalid path.");  
Magic Number,MonoHttp,EndPointManager,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\EndPointManager.cs,AddPrefixInternal,The following statement contains a magic number: throw new HttpListenerException (400' "Invalid path.");  
Magic Number,MonoHttp,HttpConnection,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpConnection.cs,OnRead,The following statement contains a magic number: if (ProcessInput (ms)) {  	if (!context.HaveError)  		context.Request.FinishInitialization ();  	if (context.HaveError) {  		SendError ();  		Close ();  		return;  	}  	if (!epl.BindContext (context)) {  		SendError ("Invalid host"' 400);  		Close ();  	}  	context_bound = true;  	return;  }  
Magic Number,MonoHttp,HttpConnection,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpConnection.cs,OnRead,The following statement contains a magic number: if (!epl.BindContext (context)) {  	SendError ("Invalid host"' 400);  	Close ();  }  
Magic Number,MonoHttp,HttpConnection,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpConnection.cs,OnRead,The following statement contains a magic number: SendError ("Invalid host"' 400);  
Magic Number,MonoHttp,HttpConnection,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpConnection.cs,ReadLine,The following statement contains a magic number: for (int i = offset; i < last && line_state != LineState.LF; i++) {  	used++;  	byte b = buffer [i];  	if (b == 13) {  		line_state = LineState.CR;  	} else if (b == 10) {  		line_state = LineState.LF;  	} else {  		current_line.Append ((char)b);  	}  }  
Magic Number,MonoHttp,HttpConnection,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpConnection.cs,ReadLine,The following statement contains a magic number: for (int i = offset; i < last && line_state != LineState.LF; i++) {  	used++;  	byte b = buffer [i];  	if (b == 13) {  		line_state = LineState.CR;  	} else if (b == 10) {  		line_state = LineState.LF;  	} else {  		current_line.Append ((char)b);  	}  }  
Magic Number,MonoHttp,HttpConnection,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpConnection.cs,ReadLine,The following statement contains a magic number: if (b == 13) {  	line_state = LineState.CR;  } else if (b == 10) {  	line_state = LineState.LF;  } else {  	current_line.Append ((char)b);  }  
Magic Number,MonoHttp,HttpConnection,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpConnection.cs,ReadLine,The following statement contains a magic number: if (b == 13) {  	line_state = LineState.CR;  } else if (b == 10) {  	line_state = LineState.LF;  } else {  	current_line.Append ((char)b);  }  
Magic Number,MonoHttp,HttpConnection,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpConnection.cs,ReadLine,The following statement contains a magic number: if (b == 10) {  	line_state = LineState.LF;  } else {  	current_line.Append ((char)b);  }  
Magic Number,MonoHttp,HttpListenerContext,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerContext.cs,ParseAuthentication,The following statement contains a magic number: if (header == null || header.Length < 2)  	return;  
Magic Number,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,SetRequestLine,The following statement contains a magic number: if (parts.Length != 3) {  	context.ErrorMessage = "Invalid request line (parts).";  	return;  }  
Magic Number,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,SetRequestLine,The following statement contains a magic number: foreach (char c in method) {  	int ic = (int)c;  	if ((ic >= 'A' && ic <= 'Z') || (ic > 32 && c < 127 && c != '(' && c != ')' && c != '<' && c != '<' && c != '>' && c != '@' && c != ''' && c != ';' && c != ':' && c != '\\' && c != '"' && c != '/' && c != '[' && c != ']' && c != '?' && c != '=' && c != '{' && c != '}'))  		continue;  	context.ErrorMessage = "(Invalid verb)";  	return;  }  
Magic Number,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,SetRequestLine,The following statement contains a magic number: foreach (char c in method) {  	int ic = (int)c;  	if ((ic >= 'A' && ic <= 'Z') || (ic > 32 && c < 127 && c != '(' && c != ')' && c != '<' && c != '<' && c != '>' && c != '@' && c != ''' && c != ';' && c != ':' && c != '\\' && c != '"' && c != '/' && c != '[' && c != ']' && c != '?' && c != '=' && c != '{' && c != '}'))  		continue;  	context.ErrorMessage = "(Invalid verb)";  	return;  }  
Magic Number,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,SetRequestLine,The following statement contains a magic number: if ((ic >= 'A' && ic <= 'Z') || (ic > 32 && c < 127 && c != '(' && c != ')' && c != '<' && c != '<' && c != '>' && c != '@' && c != ''' && c != ';' && c != ':' && c != '\\' && c != '"' && c != '/' && c != '[' && c != ']' && c != '?' && c != '=' && c != '{' && c != '}'))  	continue;  
Magic Number,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,SetRequestLine,The following statement contains a magic number: if ((ic >= 'A' && ic <= 'Z') || (ic > 32 && c < 127 && c != '(' && c != ')' && c != '<' && c != '<' && c != '>' && c != '@' && c != ''' && c != ';' && c != ':' && c != '\\' && c != '"' && c != '/' && c != '[' && c != ']' && c != '?' && c != '=' && c != '{' && c != '}'))  	continue;  
Magic Number,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,SetRequestLine,The following statement contains a magic number: if (parts [2].Length != 8 || !parts [2].StartsWith ("HTTP/")) {  	context.ErrorMessage = "Invalid request line (version).";  	return;  }  
Magic Number,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,SetRequestLine,The following statement contains a magic number: if (parts [2].Length != 8 || !parts [2].StartsWith ("HTTP/")) {  	context.ErrorMessage = "Invalid request line (version).";  	return;  }  
Magic Number,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,SetRequestLine,The following statement contains a magic number: if (parts [2].Length != 8 || !parts [2].StartsWith ("HTTP/")) {  	context.ErrorMessage = "Invalid request line (version).";  	return;  }  
Magic Number,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,SetRequestLine,The following statement contains a magic number: try {  	version = new Version (parts [2].Substring (5));  	if (version.Major < 1)  		throw new Exception ();  } catch {  	context.ErrorMessage = "Invalid request line (version).";  	return;  }  
Magic Number,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,SetRequestLine,The following statement contains a magic number: try {  	version = new Version (parts [2].Substring (5));  	if (version.Major < 1)  		throw new Exception ();  } catch {  	context.ErrorMessage = "Invalid request line (version).";  	return;  }  
Magic Number,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,SetRequestLine,The following statement contains a magic number: version = new Version (parts [2].Substring (5));  
Magic Number,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,SetRequestLine,The following statement contains a magic number: version = new Version (parts [2].Substring (5));  
Magic Number,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,FinishInitialization,The following statement contains a magic number: if (version >= HttpVersion.Version11) {  	t_encoding = Headers ["Transfer-Encoding"];  	// 'identity' is not valid!  	if (t_encoding != null && t_encoding != "chunked") {  		context.Connection.SendError (null' 501);  		return;  	}  }  
Magic Number,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,FinishInitialization,The following statement contains a magic number: if (t_encoding != null && t_encoding != "chunked") {  	context.Connection.SendError (null' 501);  	return;  }  
Magic Number,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,FinishInitialization,The following statement contains a magic number: context.Connection.SendError (null' 501);  
Magic Number,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,FinishInitialization,The following statement contains a magic number: if (!is_chunked && !cl_set) {  	context.Connection.SendError (null' 411);  	return;  }  
Magic Number,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,FinishInitialization,The following statement contains a magic number: context.Connection.SendError (null' 411);  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following statement contains a magic number: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,AddHeader,The following statement contains a magic number: if (value.Length > 65535)  	throw new ArgumentOutOfRangeException ("value");  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,AppendHeader,The following statement contains a magic number: if (value.Length > 65535)  	throw new ArgumentOutOfRangeException ("value");  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,Redirect,The following statement contains a magic number: StatusCode = 302;  
Magic Number,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,SendHeaders,The following statement contains a magic number: if (chunked_uses >= 100) {  	force_close_chunked = true;  	if (!conn_close)  		headers.SetInternal ("Connection"' "close");  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: if (e == null)  	e = Encoding.GetEncoding (28591);  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: e = Encoding.GetEncoding (28591);  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len) {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (GetChars (bytes' e));  				bytes.SetLength (0);  			}  			output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  			i += 5;  		} else {  			bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  			i += 2;  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	if (s [i] == '+') {  		output.Append (' ');  	} else {  		output.Append (s [i]);  	}  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len) {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (GetChars (bytes' e));  				bytes.SetLength (0);  			}  			output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  			i += 5;  		} else {  			bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  			i += 2;  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	if (s [i] == '+') {  		output.Append (' ');  	} else {  		output.Append (s [i]);  	}  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len) {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (GetChars (bytes' e));  				bytes.SetLength (0);  			}  			output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  			i += 5;  		} else {  			bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  			i += 2;  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	if (s [i] == '+') {  		output.Append (' ');  	} else {  		output.Append (s [i]);  	}  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len) {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (GetChars (bytes' e));  				bytes.SetLength (0);  			}  			output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  			i += 5;  		} else {  			bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  			i += 2;  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	if (s [i] == '+') {  		output.Append (' ');  	} else {  		output.Append (s [i]);  	}  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len) {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (GetChars (bytes' e));  				bytes.SetLength (0);  			}  			output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  			i += 5;  		} else {  			bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  			i += 2;  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	if (s [i] == '+') {  		output.Append (' ');  	} else {  		output.Append (s [i]);  	}  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len) {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (GetChars (bytes' e));  				bytes.SetLength (0);  			}  			output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  			i += 5;  		} else {  			bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  			i += 2;  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	if (s [i] == '+') {  		output.Append (' ');  	} else {  		output.Append (s [i]);  	}  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len) {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (GetChars (bytes' e));  				bytes.SetLength (0);  			}  			output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  			i += 5;  		} else {  			bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  			i += 2;  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	if (s [i] == '+') {  		output.Append (' ');  	} else {  		output.Append (s [i]);  	}  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len) {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (GetChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  		i += 5;  	} else {  		bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  		i += 2;  	}  	continue;  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len) {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (GetChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  		i += 5;  	} else {  		bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  		i += 2;  	}  	continue;  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len) {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (GetChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  		i += 5;  	} else {  		bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  		i += 2;  	}  	continue;  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len) {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (GetChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  		i += 5;  	} else {  		bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  		i += 2;  	}  	continue;  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len) {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (GetChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  		i += 5;  	} else {  		bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  		i += 2;  	}  	continue;  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len) {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (GetChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  		i += 5;  	} else {  		bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  		i += 2;  	}  	continue;  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len) {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (GetChars (bytes' e));  			bytes.SetLength (0);  		}  		output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  		i += 5;  	} else {  		bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  		i += 2;  	}  	continue;  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  	i += 5;  } else {  	bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  	i += 2;  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  	i += 5;  } else {  	bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  	i += 2;  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  	i += 5;  } else {  	bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  	i += 2;  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  	i += 5;  } else {  	bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  	i += 2;  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  	i += 5;  } else {  	bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  	i += 2;  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  	i += 5;  } else {  	bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  	i += 2;  }  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: output.Append ((char)Int32.Parse (s.Substring (i + 2' 4)' hexa));  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: i += 5;  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: bytes.WriteByte ((byte)Int32.Parse (s.Substring (i + 1' 2)' hexa));  
Magic Number,MonoHttp,HttpUtility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpUtility.cs,UrlDecode,The following statement contains a magic number: i += 2;  
Magic Number,MonoHttp,ListenerAsyncResult,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ListenerAsyncResult.cs,Complete,The following statement contains a magic number: lock (locker) {  	completed = true;  	if (handle != null)  		handle.Set ();  	if ((context.Listener.AuthenticationSchemes == AuthenticationSchemes.Basic || context.Listener.AuthenticationSchemes == AuthenticationSchemes.Negotiate) && context.Request.Headers ["Authorization"] == null) {  		context.Listener.EndGetContext (this);  		context.Response.StatusCode = 401;  		context.Response.Headers ["WWW-Authenticate"] = AuthenticationSchemes.Basic + " realm=\"\"";  		context.Response.OutputStream.Close ();  		context.Listener.BeginGetContext (cb' state);  	} else if (cb != null)  		ThreadPool.QueueUserWorkItem (InvokeCallback' this);  }  
Magic Number,MonoHttp,ListenerAsyncResult,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ListenerAsyncResult.cs,Complete,The following statement contains a magic number: if ((context.Listener.AuthenticationSchemes == AuthenticationSchemes.Basic || context.Listener.AuthenticationSchemes == AuthenticationSchemes.Negotiate) && context.Request.Headers ["Authorization"] == null) {  	context.Listener.EndGetContext (this);  	context.Response.StatusCode = 401;  	context.Response.Headers ["WWW-Authenticate"] = AuthenticationSchemes.Basic + " realm=\"\"";  	context.Response.OutputStream.Close ();  	context.Listener.BeginGetContext (cb' state);  } else if (cb != null)  	ThreadPool.QueueUserWorkItem (InvokeCallback' this);  
Magic Number,MonoHttp,ListenerAsyncResult,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ListenerAsyncResult.cs,Complete,The following statement contains a magic number: context.Response.StatusCode = 401;  
Magic Number,MonoHttp,ListenerPrefix,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ListenerPrefix.cs,Parse,The following statement contains a magic number: if (default_port == -1) {  	default_port = (uri.StartsWith ("https://")) ? 443 : -1;  	secure = true;  }  
Magic Number,MonoHttp,ListenerPrefix,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ListenerPrefix.cs,Parse,The following statement contains a magic number: default_port = (uri.StartsWith ("https://")) ? 443 : -1;  
Magic Number,MonoHttp,ListenerPrefix,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ListenerPrefix.cs,CheckUri,The following statement contains a magic number: if (default_port == -1)  	default_port = (uri.StartsWith ("https://")) ? 443 : -1;  
Magic Number,MonoHttp,ListenerPrefix,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ListenerPrefix.cs,CheckUri,The following statement contains a magic number: default_port = (uri.StartsWith ("https://")) ? 443 : -1;  
Magic Number,MonoHttp,ListenerPrefix,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ListenerPrefix.cs,CheckUri,The following statement contains a magic number: if (colon > 0) {  	root = uri.IndexOf ('/'' colon' length - colon);  	if (root == -1)  		throw new ArgumentException ("No path specified.");  	try {  		int p = Int32.Parse (uri.Substring (colon + 1' root - colon - 1));  		if (p <= 0 || p >= 65536)  			throw new Exception ();  	} catch {  		throw new ArgumentException ("Invalid port.");  	}  } else {  	root = uri.IndexOf ('/'' start_host' length - start_host);  	if (root == -1)  		throw new ArgumentException ("No path specified.");  }  
Magic Number,MonoHttp,ListenerPrefix,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ListenerPrefix.cs,CheckUri,The following statement contains a magic number: try {  	int p = Int32.Parse (uri.Substring (colon + 1' root - colon - 1));  	if (p <= 0 || p >= 65536)  		throw new Exception ();  } catch {  	throw new ArgumentException ("Invalid port.");  }  
Magic Number,MonoHttp,ListenerPrefix,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ListenerPrefix.cs,CheckUri,The following statement contains a magic number: if (p <= 0 || p >= 65536)  	throw new Exception ();  
Magic Number,MonoHttp,ResponseStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ResponseStream.cs,Write,The following statement contains a magic number: if (ms != null) {  	long start = ms.Position;  	// After the possible preamble for the encoding  	ms.Position = ms.Length;  	if (chunked) {  		bytes = GetChunkSizeBytes (count' false);  		ms.Write (bytes' 0' bytes.Length);  	}  	int new_count = Math.Min (count' 16384 - (int)ms.Position + (int)start);  	ms.Write (buffer' offset' new_count);  	count -= new_count;  	offset += new_count;  	InternalWrite (ms.GetBuffer ()' (int)start' (int)(ms.Length - start));  	ms.SetLength (0);  	ms.Capacity = 0;  	// 'dispose' the buffer in ms.  } else if (chunked) {  	bytes = GetChunkSizeBytes (count' false);  	InternalWrite (bytes' 0' bytes.Length);  }  
Magic Number,MonoHttp,ResponseStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ResponseStream.cs,Write,The following statement contains a magic number: if (chunked)  	InternalWrite (crlf' 0' 2);  
Magic Number,MonoHttp,ResponseStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ResponseStream.cs,Write,The following statement contains a magic number: InternalWrite (crlf' 0' 2);  
Magic Number,MonoHttp,ResponseStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ResponseStream.cs,EndWrite,The following statement contains a magic number: if (ignore_errors) {  	try {  		stream.EndWrite (ares);  		if (response.SendChunked)  			stream.Write (crlf' 0' 2);  	} catch {  	}  } else {  	stream.EndWrite (ares);  	if (response.SendChunked)  		stream.Write (crlf' 0' 2);  }  
Magic Number,MonoHttp,ResponseStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ResponseStream.cs,EndWrite,The following statement contains a magic number: if (ignore_errors) {  	try {  		stream.EndWrite (ares);  		if (response.SendChunked)  			stream.Write (crlf' 0' 2);  	} catch {  	}  } else {  	stream.EndWrite (ares);  	if (response.SendChunked)  		stream.Write (crlf' 0' 2);  }  
Magic Number,MonoHttp,ResponseStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ResponseStream.cs,EndWrite,The following statement contains a magic number: try {  	stream.EndWrite (ares);  	if (response.SendChunked)  		stream.Write (crlf' 0' 2);  } catch {  }  
Magic Number,MonoHttp,ResponseStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ResponseStream.cs,EndWrite,The following statement contains a magic number: if (response.SendChunked)  	stream.Write (crlf' 0' 2);  
Magic Number,MonoHttp,ResponseStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ResponseStream.cs,EndWrite,The following statement contains a magic number: stream.Write (crlf' 0' 2);  
Magic Number,MonoHttp,ResponseStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ResponseStream.cs,EndWrite,The following statement contains a magic number: if (response.SendChunked)  	stream.Write (crlf' 0' 2);  
Magic Number,MonoHttp,ResponseStream,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\ResponseStream.cs,EndWrite,The following statement contains a magic number: stream.Write (crlf' 0' 2);  
Magic Number,MonoHttp,Utility,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\Utility.cs,MaybeUri,The following statement contains a magic number: if (p >= 10)  	return false;  
Magic Number,MonoHttp,WebHeaderCollection,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\WebHeaderCollection.cs,IsHeaderValue,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = value [i];  	if (c == 127)  		return false;  	if (c < 0x20 && (c != '\r' && c != '\n' && c != '\t'))  		return false;  	if (c == '\n' && ++i < len) {  		c = value [i];  		if (c != ' ' && c != '\t')  			return false;  	}  }  
Magic Number,MonoHttp,WebHeaderCollection,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\WebHeaderCollection.cs,IsHeaderValue,The following statement contains a magic number: if (c == 127)  	return false;  
Magic Number,OAuth,Base,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\Base.cs,GenerateSignatureBase,The following statement contains a magic number: if (!((url.Scheme == "http" && url.Port == 80) || (url.Scheme == "https" && url.Port == 443)))  	normalizedUrl += ":" + url.Port;  
Magic Number,OAuth,Base,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\Base.cs,GenerateSignatureBase,The following statement contains a magic number: if (!((url.Scheme == "http" && url.Port == 80) || (url.Scheme == "https" && url.Port == 443)))  	normalizedUrl += ":" + url.Port;  
Magic Number,OAuth,Base,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\Base.cs,GenerateTimeStamp,The following statement contains a magic number: return DateTime.UtcNow - new DateTime (1970' 1' 1' 0' 0' 0' 0);  
Magic Number,OAuth,Base,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\Base.cs,GenerateNonce,The following statement contains a magic number: return random.Next (123400' 9999999).ToString ();  
Magic Number,OAuth,Base,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\Base.cs,GenerateNonce,The following statement contains a magic number: return random.Next (123400' 9999999).ToString ();  
Magic Number,Mono.Rocks,IEnumerableRocks,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\Mono.Rocks\IEnumerable.cs,Implode,The following statement contains a magic number: foreach (var e in self) {  	if (values.Length == i)  		Array.Resize (ref values' i * 2);  	values [i++] = selector (e);  }  
Magic Number,Mono.Rocks,IEnumerableRocks,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\Mono.Rocks\IEnumerable.cs,Implode,The following statement contains a magic number: if (values.Length == i)  	Array.Resize (ref values' i * 2);  
Magic Number,Mono.Rocks,IEnumerableRocks,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\Mono.Rocks\IEnumerable.cs,Implode,The following statement contains a magic number: Array.Resize (ref values' i * 2);  
Magic Number,Tomboy.WebSync,NoteConvert,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\NoteConvert.cs,ToNoteInfo,The following statement contains a magic number: if (versionGroup.Success && double.TryParse (versionGroup.Value' out contentVersion)) {  	noteInfo.NoteContentVersion = contentVersion;  } else  	noteInfo.NoteContentVersion = 0.1;  
Magic Number,Tomboy.WebSync,NoteConvert,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\NoteConvert.cs,ToNoteInfo,The following statement contains a magic number: noteInfo.NoteContentVersion = 0.1;  
Magic Number,Tomboy.WebSync,NoteConvert,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\NoteConvert.cs,ToNoteInfo,The following statement contains a magic number: if (contentGroup.Success) {  	string[] splits = contentGroup.Value.Split (new char[] {  		'\n'  	}' 2);  	if (splits.Length > 1 && splits [1].Length > 0) {  		StringBuilder builder = new StringBuilder (contentGroup.Value.Length);  		bool inTag = false;  		// Strip everything out of first line' except for XML tags  		// TODO: Handle 'note-title' element differently?  		//       Ideally we would want to get rid of it completely.  		foreach (char c in splits [0]) {  			if (!inTag && c == '<')  				inTag = true;  			if (inTag) {  				builder.Append (c);  				if (c == '>')  					inTag = false;  			}  		}  		// Trim leading newline' if there is one  		if (splits [1] [0] == '\n')  			builder.Append (splits [1]' 1' splits [1].Length - 1);  		else  			builder.Append (splits [1]);  		noteInfo.NoteContent = builder.ToString ();  	}  }  
Magic Number,Tomboy.WebSync,WebSyncPreferencesWidget,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\WebSyncPreferencesWidget.cs,WebSyncPreferencesWidget,The following statement contains a magic number: prefsTable.RowSpacing = 5;  
Magic Number,Tomboy.WebSync,WebSyncPreferencesWidget,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\WebSyncPreferencesWidget.cs,WebSyncPreferencesWidget,The following statement contains a magic number: prefsTable.ColumnSpacing = 10;  
Magic Number,Tomboy.WebSync,WebSyncPreferencesWidget,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\WebSyncPreferencesWidget.cs,OnAuthButtonClicked,The following statement contains a magic number: if (!Auth.IsAccessToken) {  	listener = new HL.HttpListener ();  	int portToTry = 8000;  	string callbackUrl = string.Empty;  	while (!listener.IsListening && portToTry < 9000) {  		callbackUrl = String.Format ("http://localhost:{0}/tomboy-web-sync/"' portToTry);  		try {  			listener.Prefixes.Add (callbackUrl);  		} catch (Exception e) {  			Logger.Error ("Exception while trying to add {0} as an HttpListener Prefix"' callbackUrl);  			Logger.Error (e.ToString ());  			break;  		}  		try {  			listener.Start ();  			Auth.CallbackUrl = callbackUrl;  		} catch {  			listener.Prefixes.Clear ();  			portToTry++;  		}  	}  	if (!listener.IsListening) {  		Logger.Error ("Unable to start HttpListener on any port between 8000-8999");  		authButton.Label = Catalog.GetString ("Server not responding. Try again later.");  		oauth = null;  		return;  	}  	Logger.Debug ("Listening on {0} for OAuth callback"' callbackUrl);  	string authUrl = string.Empty;  	try {  		authUrl = Auth.GetAuthorizationUrl ();  	} catch (Exception e) {  		listener.Stop ();  		listener.Close ();  		Logger.Error ("Failed to get auth URL from " + Server + ". Exception was: " + e.ToString ());  		// Translators: The web service supporting Tomboy WebSync is not responding as expected  		authButton.Label = Catalog.GetString ("Server not responding. Try again later.");  		oauth = null;  		return;  	}  	IAsyncResult result = listener.BeginGetContext (delegate (IAsyncResult localResult) {  		HL.HttpListenerContext context;  		try {  			context = listener.EndGetContext (localResult);  		} catch (Exception e) {  			// TODO: Figure out why this error occurs  			Logger.Error ("Error processing OAuth callback. Could be a sign that you pressed the button to reset the connection. Exception details:");  			Logger.Error (e.ToString ());  			return;  		}  		// Assuming if we got here user clicked Allow  		Logger.Debug ("Context request uri query section: " + context.Request.Url.Query);  		// oauth_verifier is required in OAuth 1.0a' not 1.0  		var qs = HttpUtility.ParseQueryString (context.Request.Url.Query);  		if (!String.IsNullOrEmpty (qs ["oauth_verifier"]))  			Auth.Verifier = qs ["oauth_verifier"];  		try {  			if (!Auth.GetAccessAfterAuthorization ())  				throw new ApplicationException ("Unknown error getting access token");  			Logger.Debug ("Successfully authorized web sync");  		} catch (Exception e) {  			listener.Stop ();  			listener.Close ();  			Logger.Error ("Failed to authorize web sync' with exception:");  			Logger.Error (e.ToString ());  			Gtk.Application.Invoke (delegate {  				authButton.Label = Catalog.GetString ("Authorization Failed' Try Again");  				authButton.Sensitive = true;  			});  			oauth = null;  			return;  		}  		string htmlResponse = String.Format (callbackHtmlTemplate' // Translators: Title of web page presented to user after they authorized Tomboy for sync  		Catalog.GetString ("Tomboy Web Authorization Successful")' // Translators: Body of web page presented to user after they authorized Tomboy for sync  		Catalog.GetString ("Please return to the Tomboy Preferences window and press Save to start synchronizing."));  		using (var writer = new System.IO.StreamWriter (context.Response.OutputStream))  			writer.Write (htmlResponse);  		listener.Stop ();  		listener.Close ();  		if (Auth.IsAccessToken) {  			Gtk.Application.Invoke (delegate {  				authButton.Sensitive = false;  				authButton.Label = Catalog.GetString ("Connected. Press Save to start synchronizing");  			});  		}  	}' null);  	Logger.Debug ("Launching browser to authorize web sync: " + authUrl);  	authButton.Label = Catalog.GetString ("Authorizing in browser (Press to reset connection)");  	try {  		Services.NativeApplication.OpenUrl (authUrl' Screen);  	} catch (Exception e) {  		listener.Stop ();  		listener.Close ();  		Logger.Error ("Exception opening URL: " + e.Message);  		// Translators: Sometimes a user's default browser is not set' so we recommend setting it and trying again  		authButton.Label = Catalog.GetString ("Set the default browser and try again");  		return;  	}  	// Translators: The user must take action in their web browser to continue the authorization process  	authButton.Label = Catalog.GetString ("Authorizing in browser (Press to reset connection)");  }  
Magic Number,Tomboy.WebSync,WebSyncPreferencesWidget,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\WebSyncPreferencesWidget.cs,OnAuthButtonClicked,The following statement contains a magic number: if (!Auth.IsAccessToken) {  	listener = new HL.HttpListener ();  	int portToTry = 8000;  	string callbackUrl = string.Empty;  	while (!listener.IsListening && portToTry < 9000) {  		callbackUrl = String.Format ("http://localhost:{0}/tomboy-web-sync/"' portToTry);  		try {  			listener.Prefixes.Add (callbackUrl);  		} catch (Exception e) {  			Logger.Error ("Exception while trying to add {0} as an HttpListener Prefix"' callbackUrl);  			Logger.Error (e.ToString ());  			break;  		}  		try {  			listener.Start ();  			Auth.CallbackUrl = callbackUrl;  		} catch {  			listener.Prefixes.Clear ();  			portToTry++;  		}  	}  	if (!listener.IsListening) {  		Logger.Error ("Unable to start HttpListener on any port between 8000-8999");  		authButton.Label = Catalog.GetString ("Server not responding. Try again later.");  		oauth = null;  		return;  	}  	Logger.Debug ("Listening on {0} for OAuth callback"' callbackUrl);  	string authUrl = string.Empty;  	try {  		authUrl = Auth.GetAuthorizationUrl ();  	} catch (Exception e) {  		listener.Stop ();  		listener.Close ();  		Logger.Error ("Failed to get auth URL from " + Server + ". Exception was: " + e.ToString ());  		// Translators: The web service supporting Tomboy WebSync is not responding as expected  		authButton.Label = Catalog.GetString ("Server not responding. Try again later.");  		oauth = null;  		return;  	}  	IAsyncResult result = listener.BeginGetContext (delegate (IAsyncResult localResult) {  		HL.HttpListenerContext context;  		try {  			context = listener.EndGetContext (localResult);  		} catch (Exception e) {  			// TODO: Figure out why this error occurs  			Logger.Error ("Error processing OAuth callback. Could be a sign that you pressed the button to reset the connection. Exception details:");  			Logger.Error (e.ToString ());  			return;  		}  		// Assuming if we got here user clicked Allow  		Logger.Debug ("Context request uri query section: " + context.Request.Url.Query);  		// oauth_verifier is required in OAuth 1.0a' not 1.0  		var qs = HttpUtility.ParseQueryString (context.Request.Url.Query);  		if (!String.IsNullOrEmpty (qs ["oauth_verifier"]))  			Auth.Verifier = qs ["oauth_verifier"];  		try {  			if (!Auth.GetAccessAfterAuthorization ())  				throw new ApplicationException ("Unknown error getting access token");  			Logger.Debug ("Successfully authorized web sync");  		} catch (Exception e) {  			listener.Stop ();  			listener.Close ();  			Logger.Error ("Failed to authorize web sync' with exception:");  			Logger.Error (e.ToString ());  			Gtk.Application.Invoke (delegate {  				authButton.Label = Catalog.GetString ("Authorization Failed' Try Again");  				authButton.Sensitive = true;  			});  			oauth = null;  			return;  		}  		string htmlResponse = String.Format (callbackHtmlTemplate' // Translators: Title of web page presented to user after they authorized Tomboy for sync  		Catalog.GetString ("Tomboy Web Authorization Successful")' // Translators: Body of web page presented to user after they authorized Tomboy for sync  		Catalog.GetString ("Please return to the Tomboy Preferences window and press Save to start synchronizing."));  		using (var writer = new System.IO.StreamWriter (context.Response.OutputStream))  			writer.Write (htmlResponse);  		listener.Stop ();  		listener.Close ();  		if (Auth.IsAccessToken) {  			Gtk.Application.Invoke (delegate {  				authButton.Sensitive = false;  				authButton.Label = Catalog.GetString ("Connected. Press Save to start synchronizing");  			});  		}  	}' null);  	Logger.Debug ("Launching browser to authorize web sync: " + authUrl);  	authButton.Label = Catalog.GetString ("Authorizing in browser (Press to reset connection)");  	try {  		Services.NativeApplication.OpenUrl (authUrl' Screen);  	} catch (Exception e) {  		listener.Stop ();  		listener.Close ();  		Logger.Error ("Exception opening URL: " + e.Message);  		// Translators: Sometimes a user's default browser is not set' so we recommend setting it and trying again  		authButton.Label = Catalog.GetString ("Set the default browser and try again");  		return;  	}  	// Translators: The user must take action in their web browser to continue the authorization process  	authButton.Label = Catalog.GetString ("Authorizing in browser (Press to reset connection)");  }  
Magic Number,Tomboy.WebSync,WebSyncPreferencesWidget,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\WebSyncPreferencesWidget.cs,OnAuthButtonClicked,The following statement contains a magic number: while (!listener.IsListening && portToTry < 9000) {  	callbackUrl = String.Format ("http://localhost:{0}/tomboy-web-sync/"' portToTry);  	try {  		listener.Prefixes.Add (callbackUrl);  	} catch (Exception e) {  		Logger.Error ("Exception while trying to add {0} as an HttpListener Prefix"' callbackUrl);  		Logger.Error (e.ToString ());  		break;  	}  	try {  		listener.Start ();  		Auth.CallbackUrl = callbackUrl;  	} catch {  		listener.Prefixes.Clear ();  		portToTry++;  	}  }  
Magic Number,Tomboy.WebSync,WebSyncPreferencesWidget,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\WebSyncPreferencesWidget.cs,AddRow,The following statement contains a magic number: table.Attach (widget' 1' 2' row' row + 1' Gtk.AttachOptions.Expand | Gtk.AttachOptions.Fill' Gtk.AttachOptions.Expand | Gtk.AttachOptions.Fill' 0' 0);  
Missing Default,MonoHttp,HttpListenerRequest,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerRequest.cs,AddHeader,The following switch statement is missing a default case: switch (lower) {  case "accept-language":  	user_languages = val.Split (''');  	// yes' only split with a '''  	break;  case "accept":  	accept_types = val.Split (''');  	// yes' only split with a '''  	break;  case "content-length":  	try {  		//TODO: max. content_length?  		content_length = Int64.Parse (val.Trim ());  		if (content_length < 0)  			context.ErrorMessage = "Invalid Content-Length.";  		cl_set = true;  	} catch {  		context.ErrorMessage = "Invalid Content-Length.";  	}  	break;  case "referer":  	try {  		referrer = new Uri (val);  	} catch {  		referrer = new Uri ("http://someone.is.screwing.with.the.headers.com/");  	}  	break;  case "cookie":  	if (cookies == null)  		cookies = new CookieCollection ();  	string[] cookieStrings = val.Split (new char[] {  		''''  		';'  	});  	Cookie current = null;  	int version = 0;  	foreach (string cookieString in cookieStrings) {  		string str = cookieString.Trim ();  		if (str.Length == 0)  			continue;  		if (str.StartsWith ("$Version")) {  			version = Int32.Parse (Unquote (str.Substring (str.IndexOf ("=") + 1)));  		} else if (str.StartsWith ("$Path")) {  			if (current != null)  				current.Path = str.Substring (str.IndexOf ("=") + 1).Trim ();  		} else if (str.StartsWith ("$Domain")) {  			if (current != null)  				current.Domain = str.Substring (str.IndexOf ("=") + 1).Trim ();  		} else if (str.StartsWith ("$Port")) {  			if (current != null)  				current.Port = str.Substring (str.IndexOf ("=") + 1).Trim ();  		} else {  			if (current != null) {  				cookies.Add (current);  			}  			current = new Cookie ();  			int idx = str.IndexOf ("=");  			if (idx > 0) {  				current.Name = str.Substring (0' idx).Trim ();  				current.Value = str.Substring (idx + 1).Trim ();  			} else {  				current.Name = str.Trim ();  				current.Value = String.Empty;  			}  			current.Version = version;  		}  	}  	if (current != null) {  		cookies.Add (current);  	}  	break;  }  
Missing Default,MonoHttp,HttpListenerResponse,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\MonoHttp\HttpListenerResponse.cs,GetStatusDescription,The following switch statement is missing a default case: switch (code) {  case 100:  	return "Continue";  case 101:  	return "Switching Protocols";  case 102:  	return "Processing";  case 200:  	return "OK";  case 201:  	return "Created";  case 202:  	return "Accepted";  case 203:  	return "Non-Authoritative Information";  case 204:  	return "No Content";  case 205:  	return "Reset Content";  case 206:  	return "Partial Content";  case 207:  	return "Multi-Status";  case 300:  	return "Multiple Choices";  case 301:  	return "Moved Permanently";  case 302:  	return "Found";  case 303:  	return "See Other";  case 304:  	return "Not Modified";  case 305:  	return "Use Proxy";  case 307:  	return "Temporary Redirect";  case 400:  	return "Bad Request";  case 401:  	return "Unauthorized";  case 402:  	return "Payment Required";  case 403:  	return "Forbidden";  case 404:  	return "Not Found";  case 405:  	return "Method Not Allowed";  case 406:  	return "Not Acceptable";  case 407:  	return "Proxy Authentication Required";  case 408:  	return "Request Timeout";  case 409:  	return "Conflict";  case 410:  	return "Gone";  case 411:  	return "Length Required";  case 412:  	return "Precondition Failed";  case 413:  	return "Request Entity Too Large";  case 414:  	return "Request-Uri Too Long";  case 415:  	return "Unsupported Media Type";  case 416:  	return "Requested Range Not Satisfiable";  case 417:  	return "Expectation Failed";  case 422:  	return "Unprocessable Entity";  case 423:  	return "Locked";  case 424:  	return "Failed Dependency";  case 500:  	return "Internal Server Error";  case 501:  	return "Not Implemented";  case 502:  	return "Bad Gateway";  case 503:  	return "Service Unavailable";  case 504:  	return "Gateway Timeout";  case 505:  	return "Http Version Not Supported";  case 507:  	return "Insufficient Storage";  }  
Missing Default,OAuth,Base,F:\newReposMay17\GNOME_tomboy\Tomboy\Addins\WebSyncService\OAuth\Base.cs,GenerateSignatureBase,The following switch statement is missing a default case: switch (signatureType) {  case SignatureType.HMACSHA1:  	signatureString = "HMAC-SHA1";  	break;  case SignatureType.RSASHA1:  	signatureString = "RSA-SHA1";  	break;  case SignatureType.PLAINTEXT:  	signatureString = SignatureType.PLAINTEXT.ToString ();  	break;  }  
