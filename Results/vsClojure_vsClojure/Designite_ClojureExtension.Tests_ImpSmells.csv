Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,ClojureExtension.Tests.Editor.Parsing,BufferTextChangeHandlerTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Editor\InputHandling\BufferTextChangeHandlerTests.cs,ValidateTokenization,The method has 5 parameters. Parameters: beforeText' afterText' changePosition' delta' changeLength
Long Statement,ClojureExtension.Tests.Editor.AutoFormat,AutoFormatterTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Editor\AutoFormat\AutoFormatterTests.cs,CreateTokensAndTextBuffer,The length of the statement  "			_textBuffer.Stub(b => b.SetText(null)).IgnoreArguments().WhenCalled((callData) => _textBufferState = (string) callData.Arguments[0]); " is 133.
Long Statement,ClojureExtension.Tests.Editor.AutoIndent,ClojureSmartIndentTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Editor\AutoIndent\ClojureSmartIndentTests.cs,ShouldIndentByIndentAmountWhenListContainsMultipleAndHasIndentElements,The length of the statement  "			Assert.AreEqual(input.LastIndexOf("(") + 4' _clojureSmartIndent.GetDesiredIndentation(input.IndexOf("\n") + 1' _defaultOptions)); " is 129.
Long Statement,ClojureExtension.Tests.Editor.AutoIndent,ClojureSmartIndentTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Editor\AutoIndent\ClojureSmartIndentTests.cs,ShouldIndentByOneAfterTheOpeningBraceForVectors,The length of the statement  "			Assert.AreEqual(input.LastIndexOf("[") + 1' _clojureSmartIndent.GetDesiredIndentation(input.IndexOf("\n") + 1' _defaultOptions)); " is 129.
Long Statement,ClojureExtension.Tests.Editor.Parsing,BufferTextChangeHandlerTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Editor\InputHandling\BufferTextChangeHandlerTests.cs,ValidateTokenization,The length of the statement  "			while (changePosition < beforeText.Length && changePosition < afterText.Length && beforeText[changePosition] == afterText[changePosition]) changePosition++; " is 156.
Long Statement,ClojureExtension.Tests.Editor.Parsing,BufferTextChangeHandlerTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Editor\InputHandling\BufferTextChangeHandlerTests.cs,ValidateTokenization,The length of the statement  "			_textBuffer.Stub(t => t.GetText(0)).IgnoreArguments().WhenCalled(t => t.ReturnValue = afterText.Substring((int)t.Arguments[0])).Return(""); " is 139.
Long Statement,ClojureExtension.Tests.Editor.Parsing,BufferTextChangeHandlerTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Editor\InputHandling\BufferTextChangeHandlerTests.cs,ValidateTokenization,The length of the statement  "			_bufferTextChangeHandler.OnTextChanged(new List<TextChangeData> { new TextChangeData(changePosition' delta' changeLength) }); " is 125.
Magic Number,ClojureExtension.Tests.Editor.AutoFormat,AutoFormatterTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Editor\AutoFormat\AutoFormatterTests.cs,ValidateFormatting,The following statement contains a magic number: _formatter.Format(new EditorOptions(4));
Magic Number,ClojureExtension.Tests.Editor.AutoIndent,ClojureSmartIndentTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Editor\AutoIndent\ClojureSmartIndentTests.cs,Initialize,The following statement contains a magic number: _defaultOptions = new EditorOptions(4);
Magic Number,ClojureExtension.Tests.Editor.AutoIndent,ClojureSmartIndentTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Editor\AutoIndent\ClojureSmartIndentTests.cs,ShouldIndentOpenListWithNoFollowingTokensByIndentAmount,The following statement contains a magic number: Assert.AreEqual(4' _clojureSmartIndent.GetDesiredIndentation(3' _defaultOptions));
Magic Number,ClojureExtension.Tests.Editor.AutoIndent,ClojureSmartIndentTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Editor\AutoIndent\ClojureSmartIndentTests.cs,ShouldIndentOpenListWithNoFollowingTokensByIndentAmount,The following statement contains a magic number: Assert.AreEqual(4' _clojureSmartIndent.GetDesiredIndentation(3' _defaultOptions));
Magic Number,ClojureExtension.Tests.Editor.AutoIndent,ClojureSmartIndentTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Editor\AutoIndent\ClojureSmartIndentTests.cs,ShouldIndentOpenListWithFollowingTokensByIndentAmount,The following statement contains a magic number: Assert.AreEqual(4' _clojureSmartIndent.GetDesiredIndentation(input.IndexOf("\n") + 1' _defaultOptions));
Magic Number,ClojureExtension.Tests.Editor.AutoIndent,ClojureSmartIndentTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Editor\AutoIndent\ClojureSmartIndentTests.cs,ShouldIndentOpenListInsideAnotherListByTheIndentAmountPlusOne,The following statement contains a magic number: Assert.AreEqual(5' _clojureSmartIndent.GetDesiredIndentation(input.IndexOf("\n") + 1' _defaultOptions));
Magic Number,ClojureExtension.Tests.Editor.AutoIndent,ClojureSmartIndentTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Editor\AutoIndent\ClojureSmartIndentTests.cs,ShouldIndentByIndentAmountWhenListContainsMultipleElements,The following statement contains a magic number: Assert.AreEqual(4' _clojureSmartIndent.GetDesiredIndentation(input.IndexOf("\n") + 1' _defaultOptions));
Magic Number,ClojureExtension.Tests.Editor.AutoIndent,ClojureSmartIndentTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Editor\AutoIndent\ClojureSmartIndentTests.cs,ShouldIndentByIndentAmountWhenListContainsMultipleAndHasIndentElements,The following statement contains a magic number: Assert.AreEqual(input.LastIndexOf("(") + 4' _clojureSmartIndent.GetDesiredIndentation(input.IndexOf("\n") + 1' _defaultOptions));
Magic Number,ClojureExtension.Tests.Editor.AutoIndent,ClojureSmartIndentTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Editor\AutoIndent\ClojureSmartIndentTests.cs,DropsExistingLineDownWhileMaintainingIndentAndIndentsTheCorrectAmountForNewLine,The following statement contains a magic number: Assert.AreEqual(4' _clojureSmartIndent.GetDesiredIndentation(input.IndexOf("(println") - 1' _defaultOptions));
Magic Number,ClojureExtension.Tests.Editor.BraceMatching,MatchingBraceFinderTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Editor\BraceMatching\MatchingBraceFinderTests.cs,ShouldNotFindAnyMatchingBracesWhenCursorIsNotTouchingAny,The following statement contains a magic number: MatchingBracePair pair = _finder.FindMatchingBraces(10);
Magic Number,ClojureExtension.Tests.Parsing,LexerTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\LexerTests.cs,ShouldReturnNumberFollowByWhitespaceAndAString,The following statement contains a magic number: Assert.AreEqual(3' token.StartIndex);
Magic Number,ClojureExtension.Tests.Parsing,LexerTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\LexerTests.cs,ShouldReturnNumberFollowByWhitespaceAndAString,The following statement contains a magic number: Assert.AreEqual(4' token.StartIndex);
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectThroughTheCenterOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym1"' 0' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectThroughTheCenterOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym2"' 4' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectThroughTheCenterOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym2"' 4' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectThroughTheCenterOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym3"' 8' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectThroughTheCenterOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym3"' 8' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectThroughTheCenterOfTargetRange,The following statement contains a magic number: LinkedList<IndexToken> intersectingTokens = tokenizedBuffer.CurrentState.Intersection(5' 7);
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectThroughTheCenterOfTargetRange,The following statement contains a magic number: LinkedList<IndexToken> intersectingTokens = tokenizedBuffer.CurrentState.Intersection(5' 7);
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectThroughTheCenterOfTargetRange,The following statement contains a magic number: Assert.AreEqual(2' intersectingTokens.Count);
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtEndOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym1"' 0' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtEndOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym2"' 4' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtEndOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym2"' 4' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtEndOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym3"' 8' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtEndOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym3"' 8' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtEndOfTargetRange,The following statement contains a magic number: LinkedList<IndexToken> intersectingTokens = tokenizedBuffer.CurrentState.Intersection(3' 1);
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtStartOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym1"' 0' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtStartOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym2"' 4' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtStartOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym2"' 4' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtStartOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym3"' 8' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtStartOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym3"' 8' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtStartOfTargetRange,The following statement contains a magic number: LinkedList<IndexToken> intersectingTokens = tokenizedBuffer.CurrentState.Intersection(4' 1);
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtMiddleOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym1"' 0' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtMiddleOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym2"' 4' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtMiddleOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym2"' 4' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtMiddleOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym3"' 8' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtMiddleOfTargetRange,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym3"' 8' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtMiddleOfTargetRange,The following statement contains a magic number: LinkedList<IndexToken> intersectingTokens = tokenizedBuffer.CurrentState.Intersection(10' 1);
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtStartAtOneTokenAndEndInMiddleOfAnother,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym1"' 0' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtStartAtOneTokenAndEndInMiddleOfAnother,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym2"' 4' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtStartAtOneTokenAndEndInMiddleOfAnother,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym2"' 4' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtStartAtOneTokenAndEndInMiddleOfAnother,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym3"' 8' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtStartAtOneTokenAndEndInMiddleOfAnother,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym3"' 8' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtStartAtOneTokenAndEndInMiddleOfAnother,The following statement contains a magic number: LinkedList<IndexToken> intersectingTokens = tokenizedBuffer.CurrentState.Intersection(4' 8);
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtStartAtOneTokenAndEndInMiddleOfAnother,The following statement contains a magic number: LinkedList<IndexToken> intersectingTokens = tokenizedBuffer.CurrentState.Intersection(4' 8);
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectAtStartAtOneTokenAndEndInMiddleOfAnother,The following statement contains a magic number: Assert.AreEqual(2' intersectingTokens.Count);
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectWhenIntersectingLengthExtendsBeyondTokenList,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym1"' 0' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectWhenIntersectingLengthExtendsBeyondTokenList,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym2"' 4' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectWhenIntersectingLengthExtendsBeyondTokenList,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym2"' 4' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectWhenIntersectingLengthExtendsBeyondTokenList,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym3"' 8' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectWhenIntersectingLengthExtendsBeyondTokenList,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym3"' 8' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectWhenIntersectingLengthExtendsBeyondTokenList,The following statement contains a magic number: LinkedList<IndexToken> intersectingTokens = tokenizedBuffer.CurrentState.Intersection(4' 100);
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectWhenIntersectingLengthExtendsBeyondTokenList,The following statement contains a magic number: LinkedList<IndexToken> intersectingTokens = tokenizedBuffer.CurrentState.Intersection(4' 100);
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnTokensThatIntersectWhenIntersectingLengthExtendsBeyondTokenList,The following statement contains a magic number: Assert.AreEqual(2' intersectingTokens.Count);
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnNoTokensWhenIntersectingLengthIsZero,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym1"' 0' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnNoTokensWhenIntersectingLengthIsZero,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym2"' 4' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnNoTokensWhenIntersectingLengthIsZero,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym2"' 4' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnNoTokensWhenIntersectingLengthIsZero,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym3"' 8' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnNoTokensWhenIntersectingLengthIsZero,The following statement contains a magic number: tokenizedBuffer.CurrentState.AddLast(new Token(TokenType.Symbol' "sym3"' 8' 4));
Magic Number,ClojureExtension.Tests.Parsing,TokenListTests,D:\research\architectureSmells\repos\vsClojure_vsClojure\ClojureExtension.Tests\Parsing\TokenListTests.cs,ShouldReturnNoTokensWhenIntersectingLengthIsZero,The following statement contains a magic number: LinkedList<IndexToken> intersectingTokens = tokenizedBuffer.CurrentState.Intersection(4' 0);
