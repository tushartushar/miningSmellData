Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,ClojureExtension.Deployment,ProvideIntellisenseProviderAttribute,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ProvideIntellisenseProviderAttribute.cs,ProvideIntellisenseProviderAttribute,The method has 6 parameters. Parameters: provider' providerName' addItemLanguageName' defaultExtension' shortLanguageName' templateFolderName
Long Parameter List,ClojureExtension.Deployment,RegisterSnippetsAttribute,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\RegisterSnippetsAttribute.cs,RegisterSnippetsAttribute,The method has 7 parameters. Parameters: languageGuid' showRoots' displayName' languageStringId' indexPath' forceCreateDirectories' paths
Long Statement,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,Initialize,The length of the statement  "		        MessageBox.Show(string.Format("Unhandled Exception loading vsClojure : {0}{1}Stack Trace: {2}"' e.Message' System.Environment.NewLine' e.StackTrace)); " is 150.
Long Statement,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,Initialize,The length of the statement  "		    MessageBox.Show(string.Format("Unhandled Exception loading vsClojure : {0}{1}Stack Trace: {2}"' e.Message' System.Environment.NewLine' e.StackTrace)); " is 150.
Long Statement,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,UnzipRuntimes,The length of the statement  "				Directory.GetFiles(runtimeBasePath' "*.zip").ToList().ForEach(CompressionExtensions.ExtractZipToFreshSubDirectoryAndDelete); " is 124.
Long Statement,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,RegisterCommandMenuService,The length of the statement  "			IVsRegisterPriorityCommandTarget commandRegistry = GetService(typeof(SVsRegisterPriorityCommandTarget)) as IVsRegisterPriorityCommandTarget; " is 140.
Long Statement,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,EnableSettingOfRuntimePathForNewClojureProjectsOnFirstInstall,The length of the statement  "      var firstInstall = string.Compare(EnvironmentVariables.VsClojureRuntimesDir' runtimePath' true' CultureInfo.CurrentCulture) != 0; " is 129.
Long Statement,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,HideAllClojureEditorMenuCommands,The length of the statement  "			List<CommandID> allCommandIds = new List<CommandID>() { CommandIDs.LoadProjectIntoActiveRepl' CommandIDs.LoadFileIntoActiveRepl' CommandIDs.LoadActiveDocumentIntoRepl' CommandIDs.SwitchReplNamespaceToActiveDocument' CommandIDs.LoadSelectedTextIntoRepl }; " is 254.
Long Statement,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,EnableMenuCommandsOnNewClojureBuffers,The length of the statement  "					var editorOptionsBuilder = new EditorOptionsBuilder(componentModel.GetService<IEditorOptionsFactoryService>().GetOptions(e.TextView)); " is 134.
Long Statement,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,EnableMenuCommandsOnNewClojureBuffers,The length of the statement  "					_thirdPartyEditorCommands.AddCommand(new MenuCommand((commandSender' commandArgs) => formatter.Format(editorOptionsBuilder.Get())' CommandIDs.FormatDocument)); " is 159.
Long Statement,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,EnableMenuCommandsOnNewClojureBuffers,The length of the statement  "					_thirdPartyEditorCommands.AddCommand(new MenuCommand((commandSender' commandArgs) => blockComment.Execute()' CommandIDs.BlockComment)); " is 135.
Long Statement,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,EnableMenuCommandsOnNewClojureBuffers,The length of the statement  "					_thirdPartyEditorCommands.AddCommand(new MenuCommand((commandSender' commandArgs) => blockUncomment.Execute()' CommandIDs.BlockUncomment)); " is 139.
Long Statement,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,CompileClojureScript,The length of the statement  "				string runtimeDir = string.Format("{0}\\{1}-{2}"' EnvironmentVariables.VsClojureRuntimesDir' Constants.CLOJURESCRIPT' Constants.VERSION); " is 137.
Long Statement,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,CompileClojureScript,The length of the statement  "				List<string> paths = Directory.GetFiles(string.Format("{0}\\lib\\"' runtimeDir)' "*.jar"' SearchOption.AllDirectories).ToList(); " is 128.
Long Statement,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,CompileClojureScript,The length of the statement  "				string arguments = string.Format("-server -cp \"{0}\" clojure.main \"{1}\" \"{2}\" {3}"' classPath' compilerPath' inputFileName' optimizations); " is 144.
Long Statement,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,CompileClojureScript,The length of the statement  "						standardError = e.Message + Environment.NewLine + "Ensure you have the latest version of Java and the JDK installed from Oracle.com" + Environment.NewLine + "Ensure the directory containing java is on the path environment variable (usually C:\\Program Files (x86)\\Java\\jre7\\bin)"; " is 283.
Long Statement,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,CompileClojureScript,The length of the statement  "					List<string> compilerErrors = new Regex("^Exception in thread \"main\" [^:]*:(.*)compiling:\\(.:[^:]*:([0-9]*):([0-9]*)\\)"' RegexOptions.Multiline).Matches(standardError' 0).Cast<Match>().Select(x => string.Format("({0}' {1}' {0}' {1}): {2}"' x.Groups[2].Value' x.Groups[3].Value' x.Groups[1].Value)).ToList(); " is 311.
Long Statement,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,CompileClojureScript,The length of the statement  "					compilerErrors.AddRange(new Regex("^Caused by:[^:]*:(.*)"' RegexOptions.Multiline).Matches(standardError' 0).Cast<Match>().Select(x => x.Groups[1].Value).ToList()); " is 164.
Long Statement,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,ShowClojureProjectMenuCommands,The length of the statement  "          IProvider<EnvDTE.Project> projectProvider = new SelectedProjectProvider(dte.Solution' dte.ToolWindows.SolutionExplorer); " is 120.
Long Statement,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,ShowClojureProjectMenuCommands,The length of the statement  "          SelectedProjectProvider selectedProjectProvider = new SelectedProjectProvider(dte.Solution' dte.ToolWindows.SolutionExplorer); " is 126.
Empty Catch Block,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,CompileClojureScript,The method has an empty catch block.
Empty Catch Block,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,ShowClojureProjectMenuCommands,The method has an empty catch block.
Magic Number,ClojureExtension.Deployment,ClojureLanguage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojureLanguage.cs,GetLanguagePreferences,The following statement contains a magic number: if (preferences == null)        {          preferences = new LanguagePreferences(this.Site' typeof(ClojureLanguage).GUID' this.Name);            if (preferences != null)          {            preferences.Init();              preferences.EnableCodeSense = true;            preferences.EnableMatchBraces = true;            preferences.EnableCommenting = true;            preferences.EnableShowMatchingBrace = true;            preferences.EnableMatchBracesAtCaret = true;            preferences.HighlightMatchingBraceFlags = _HighlightMatchingBraceFlags.HMB_USERECTANGLEBRACES;            preferences.LineNumbers = true;            preferences.MaxErrorMessages = 100;            preferences.AutoOutlining = false;            preferences.MaxRegionTime = 2000;            preferences.ShowNavigationBar = true;              preferences.AutoListMembers = true;            preferences.EnableQuickInfo = true;            preferences.ParameterInformation = true;          }        }
Magic Number,ClojureExtension.Deployment,ClojureLanguage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojureLanguage.cs,GetLanguagePreferences,The following statement contains a magic number: if (preferences == null)        {          preferences = new LanguagePreferences(this.Site' typeof(ClojureLanguage).GUID' this.Name);            if (preferences != null)          {            preferences.Init();              preferences.EnableCodeSense = true;            preferences.EnableMatchBraces = true;            preferences.EnableCommenting = true;            preferences.EnableShowMatchingBrace = true;            preferences.EnableMatchBracesAtCaret = true;            preferences.HighlightMatchingBraceFlags = _HighlightMatchingBraceFlags.HMB_USERECTANGLEBRACES;            preferences.LineNumbers = true;            preferences.MaxErrorMessages = 100;            preferences.AutoOutlining = false;            preferences.MaxRegionTime = 2000;            preferences.ShowNavigationBar = true;              preferences.AutoListMembers = true;            preferences.EnableQuickInfo = true;            preferences.ParameterInformation = true;          }        }
Magic Number,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,SetupNewClojureBuffersWithSpacingOptions,The following statement contains a magic number: editorFactoryService.TextViewCreated +=  					(o' e) =>  					{  						if (e.TextView.TextSnapshot.ContentType.TypeName.ToLower() != "clojure") return;  						IEditorOptions editorOptions = componentModel.GetService<IEditorOptionsFactoryService>().GetOptions(e.TextView);  						editorOptions.SetOptionValue(new ConvertTabsToSpaces().Key' true);  						editorOptions.SetOptionValue(new IndentSize().Key' 2);  					};
Magic Number,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,CompileClojureScript,The following statement contains a magic number: new System.Threading.Thread(() =>  			{  				outputResult("/* compiling ... */");    				string runtimeDir = string.Format("{0}\\{1}-{2}"' EnvironmentVariables.VsClojureRuntimesDir' Constants.CLOJURESCRIPT' Constants.VERSION);  				List<string> paths = Directory.GetFiles(string.Format("{0}\\lib\\"' runtimeDir)' "*.jar"' SearchOption.AllDirectories).ToList();  				paths.Add(string.Format("{0}\\src\\clj"' runtimeDir));  				paths.Add(string.Format("{0}\\src\\cljs"' runtimeDir));  				paths.Add(string.Format("{0}\\lib"' runtimeDir));    				string classPath = paths.Aggregate((x' y) => x + ";" + y);  				string compilerPath = String.Format("{0}\\bin\\cljsc.clj"' runtimeDir);    				string inputFileName = Path.GetTempFileName();  				using (StreamWriter outfile = new StreamWriter(inputFileName))  				{  					outfile.Write(inputFileContents);  				}    				string workingDirectory = GetTempDirectory();    				Process newProcess = new Process();  				newProcess.StartInfo.UseShellExecute = false;  				newProcess.StartInfo.RedirectStandardOutput = true;  				newProcess.StartInfo.RedirectStandardError = true;  				newProcess.StartInfo.CreateNoWindow = true;  				newProcess.StartInfo.FileName = "java";  				const string optimizations = OPTIMIZE_COMPILED_JAVASCRIPT ? "{:optimizations :advanced}" : "";  				string arguments = string.Format("-server -cp \"{0}\" clojure.main \"{1}\" \"{2}\" {3}"' classPath' compilerPath' inputFileName' optimizations);  				newProcess.StartInfo.Arguments = arguments;  				newProcess.StartInfo.WorkingDirectory = workingDirectory;    				string standardOutput = "";  				string standardError = "";  				lock (filesBeingCompiledLock)  				{  					if (filesBeingCompiled.ContainsKey(filePath))  					{  						Process oldProcess = filesBeingCompiled[filePath];  						try  						{  							oldProcess.Kill();  						}  						catch { }  					}    					filesBeingCompiled[filePath] = newProcess;    					IntPtr oldWow64Redirection = new IntPtr();  					Win32Api.Wow64DisableWow64FsRedirection(ref oldWow64Redirection);    					try  					{  						newProcess.Start();  					}  					catch (Exception e)  					{  						standardError = e.Message + Environment.NewLine + "Ensure you have the latest version of Java and the JDK installed from Oracle.com" + Environment.NewLine + "Ensure the directory containing java is on the path environment variable (usually C:\\Program Files (x86)\\Java\\jre7\\bin)";  					}    					Win32Api.Wow64RevertWow64FsRedirection(oldWow64Redirection);  				}    				if (string.IsNullOrWhiteSpace(standardError))  				{  					standardOutput = newProcess.StandardOutput.ReadToEnd();  					standardError = newProcess.StandardError.ReadToEnd();    					newProcess.WaitForExit();  				}    				_errorListHelper.ClearErrors(filePath);    				if (!string.IsNullOrWhiteSpace(standardError))  				{  					standardError = string.Format("/*{0}{1}{0}*/{0}"' Environment.NewLine' standardError);    					List<string> compilerErrors = new Regex("^Exception in thread \"main\" [^:]*:(.*)compiling:\\(.:[^:]*:([0-9]*):([0-9]*)\\)"' RegexOptions.Multiline).Matches(standardError' 0).Cast<Match>().Select(x => string.Format("({0}' {1}' {0}' {1}): {2}"' x.Groups[2].Value' x.Groups[3].Value' x.Groups[1].Value)).ToList();  					compilerErrors.AddRange(new Regex("^Caused by:[^:]*:(.*)"' RegexOptions.Multiline).Matches(standardError' 0).Cast<Match>().Select(x => x.Groups[1].Value).ToList());    					foreach (string compilerError in compilerErrors)  					{  						_errorListHelper.Write(TaskCategory.BuildCompile' TaskErrorCategory.Error' compilerError' filePath);  					}  				}    				if (!OPTIMIZE_COMPILED_JAVASCRIPT && !string.IsNullOrWhiteSpace(standardOutput))  				{  					string outDirectory = workingDirectory + "\\out";  					if (Directory.Exists(outDirectory))  					{  						string outputFile = Directory.GetFiles(outDirectory' "*.js"' SearchOption.TopDirectoryOnly).FirstOrDefault();  						string outputFileContent = !string.IsNullOrWhiteSpace(outputFile) ? File.ReadAllText(outputFile) : "";  						standardOutput = string.Format("/*{0}{1}{0}*/{0}{2}"' Environment.NewLine' standardOutput' outputFileContent);  					}  					else  					{  						standardOutput = string.Format("/*{0}{1}{0}*/{0}"' Environment.NewLine' standardOutput);  					}  				}    				if (!string.IsNullOrWhiteSpace(standardError) || !string.IsNullOrWhiteSpace(standardOutput))  				{  					outputResult(string.Format("{0}{1}"' standardError' standardOutput));  				}  			}).Start();
Magic Number,ClojureExtension.Deployment,ClojurePackage,C:\repos\vsClojure_vsClojure\ClojureExtension.Deployment\ClojurePackage.cs,CompileClojureScript,The following statement contains a magic number: new System.Threading.Thread(() =>  			{  				outputResult("/* compiling ... */");    				string runtimeDir = string.Format("{0}\\{1}-{2}"' EnvironmentVariables.VsClojureRuntimesDir' Constants.CLOJURESCRIPT' Constants.VERSION);  				List<string> paths = Directory.GetFiles(string.Format("{0}\\lib\\"' runtimeDir)' "*.jar"' SearchOption.AllDirectories).ToList();  				paths.Add(string.Format("{0}\\src\\clj"' runtimeDir));  				paths.Add(string.Format("{0}\\src\\cljs"' runtimeDir));  				paths.Add(string.Format("{0}\\lib"' runtimeDir));    				string classPath = paths.Aggregate((x' y) => x + ";" + y);  				string compilerPath = String.Format("{0}\\bin\\cljsc.clj"' runtimeDir);    				string inputFileName = Path.GetTempFileName();  				using (StreamWriter outfile = new StreamWriter(inputFileName))  				{  					outfile.Write(inputFileContents);  				}    				string workingDirectory = GetTempDirectory();    				Process newProcess = new Process();  				newProcess.StartInfo.UseShellExecute = false;  				newProcess.StartInfo.RedirectStandardOutput = true;  				newProcess.StartInfo.RedirectStandardError = true;  				newProcess.StartInfo.CreateNoWindow = true;  				newProcess.StartInfo.FileName = "java";  				const string optimizations = OPTIMIZE_COMPILED_JAVASCRIPT ? "{:optimizations :advanced}" : "";  				string arguments = string.Format("-server -cp \"{0}\" clojure.main \"{1}\" \"{2}\" {3}"' classPath' compilerPath' inputFileName' optimizations);  				newProcess.StartInfo.Arguments = arguments;  				newProcess.StartInfo.WorkingDirectory = workingDirectory;    				string standardOutput = "";  				string standardError = "";  				lock (filesBeingCompiledLock)  				{  					if (filesBeingCompiled.ContainsKey(filePath))  					{  						Process oldProcess = filesBeingCompiled[filePath];  						try  						{  							oldProcess.Kill();  						}  						catch { }  					}    					filesBeingCompiled[filePath] = newProcess;    					IntPtr oldWow64Redirection = new IntPtr();  					Win32Api.Wow64DisableWow64FsRedirection(ref oldWow64Redirection);    					try  					{  						newProcess.Start();  					}  					catch (Exception e)  					{  						standardError = e.Message + Environment.NewLine + "Ensure you have the latest version of Java and the JDK installed from Oracle.com" + Environment.NewLine + "Ensure the directory containing java is on the path environment variable (usually C:\\Program Files (x86)\\Java\\jre7\\bin)";  					}    					Win32Api.Wow64RevertWow64FsRedirection(oldWow64Redirection);  				}    				if (string.IsNullOrWhiteSpace(standardError))  				{  					standardOutput = newProcess.StandardOutput.ReadToEnd();  					standardError = newProcess.StandardError.ReadToEnd();    					newProcess.WaitForExit();  				}    				_errorListHelper.ClearErrors(filePath);    				if (!string.IsNullOrWhiteSpace(standardError))  				{  					standardError = string.Format("/*{0}{1}{0}*/{0}"' Environment.NewLine' standardError);    					List<string> compilerErrors = new Regex("^Exception in thread \"main\" [^:]*:(.*)compiling:\\(.:[^:]*:([0-9]*):([0-9]*)\\)"' RegexOptions.Multiline).Matches(standardError' 0).Cast<Match>().Select(x => string.Format("({0}' {1}' {0}' {1}): {2}"' x.Groups[2].Value' x.Groups[3].Value' x.Groups[1].Value)).ToList();  					compilerErrors.AddRange(new Regex("^Caused by:[^:]*:(.*)"' RegexOptions.Multiline).Matches(standardError' 0).Cast<Match>().Select(x => x.Groups[1].Value).ToList());    					foreach (string compilerError in compilerErrors)  					{  						_errorListHelper.Write(TaskCategory.BuildCompile' TaskErrorCategory.Error' compilerError' filePath);  					}  				}    				if (!OPTIMIZE_COMPILED_JAVASCRIPT && !string.IsNullOrWhiteSpace(standardOutput))  				{  					string outDirectory = workingDirectory + "\\out";  					if (Directory.Exists(outDirectory))  					{  						string outputFile = Directory.GetFiles(outDirectory' "*.js"' SearchOption.TopDirectoryOnly).FirstOrDefault();  						string outputFileContent = !string.IsNullOrWhiteSpace(outputFile) ? File.ReadAllText(outputFile) : "";  						standardOutput = string.Format("/*{0}{1}{0}*/{0}{2}"' Environment.NewLine' standardOutput' outputFileContent);  					}  					else  					{  						standardOutput = string.Format("/*{0}{1}{0}*/{0}"' Environment.NewLine' standardOutput);  					}  				}    				if (!string.IsNullOrWhiteSpace(standardError) || !string.IsNullOrWhiteSpace(standardOutput))  				{  					outputResult(string.Format("{0}{1}"' standardError' standardOutput));  				}  			}).Start();
