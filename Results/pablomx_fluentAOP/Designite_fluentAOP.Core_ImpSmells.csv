Implementation smell,Namespace,Class,File,Method,Description
Long Statement,FluentAop.Interceptors,InterceptorContext,C:\repos\pablomx_fluentAOP\fluentAOP.Core\Interceptors\InterceptorContext.cs,Run,The length of the statement  "            // executes target: method wasn't registered but target exists' method will be inferred from context and executed on target directly... " is 135.
Long Statement,FluentAop.Interceptors,InterceptorContext,C:\repos\pablomx_fluentAOP\fluentAOP.Core\Interceptors\InterceptorContext.cs,Run,The length of the statement  "            else throw new InvalidOperationException("Unable to execute method: " + mi.Method.Name + ". Speficy a target object or a target method utilizing Target() or OnInvoke() method."); " is 178.
Long Statement,FluentAop,Proxy<T>,C:\repos\pablomx_fluentAOP\fluentAOP.Core\Proxy.cs,Save,The length of the statement  "					Confirm.Assertion(register.Keys.Count > 0' "Proxy definition must specify what members have to be intercepted. Specify one or more members utilizing Intercept*() methods."); " is 173.
Long Statement,FluentAop,Proxy<T>,C:\repos\pablomx_fluentAOP\fluentAOP.Core\Proxy.cs,Save,The length of the statement  "					Confirm.Assertion(register.All(vp => vp.Value.Count > 0)' "One or more intercepted members do not specify how to handle interception. Specify interception behavior utilizing On*() methods."); " is 191.
Long Statement,FluentAop,MethodSignature,C:\repos\pablomx_fluentAOP\fluentAOP.Core\MethodSignature.cs,Equals,The length of the statement  "                if (this.Parameters[i].IsGenericParameter) continue; // open type was registered(ex: InterceptAll()) and should match any closed type " is 133.
Long Statement,FluentAop.Utility,Confirm,C:\repos\pablomx_fluentAOP\fluentAOP.Core\Utility\Confirm.cs,Assertion,The length of the statement  "			Assertion(condition' "Unable to assert statement. This usually happens when an invalid state is detected in the application."); " is 127.
Long Statement,FluentAop.Utility,ExpressionExtension,C:\repos\pablomx_fluentAOP\fluentAOP.Core\Utility\ExpressionExtension.cs,GetMethodExpression,The length of the statement  "			if (method.Body.NodeType != ExpressionType.Call) throw new ArgumentException("Method call expected"' method.Body.ToString()); " is 125.
Long Statement,FluentAop.Utility,Require,C:\repos\pablomx_fluentAOP\fluentAOP.Core\Utility\Require.cs,OverridableProperty,The length of the statement  "				throw new InvalidOperationException(string.Concat("Property must be virtual and not final: "' type.FullName' "."' property' ".")); " is 130.
