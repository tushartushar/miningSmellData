Implementation smell,Namespace,Class,File,Method,Description
Magic Number,FluentAop.Tests.Examples,Walkthrough,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\Examples\Walkthrough.cs,Example_of_how_to_intercept_overloaded_methods,The following statement contains a magic number: foo.Overloaded( 123 );
Magic Number,FluentAop.Tests,SpringInterceptor,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\Helpers\Proxies.cs,Invoke,The following statement contains a magic number: return -3;
Magic Number,FluentAop.Tests,LinfuInterceptor,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\Helpers\Proxies.cs,Intercept,The following statement contains a magic number: return -3;
Magic Number,FluentAop.Tests,CastleInterceptor,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\Helpers\Proxies.cs,Intercept,The following statement contains a magic number: invocation.ReturnValue = -3;
Magic Number,FluentAop.Tests,Tester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\Helpers\Proxies.cs,FluentAOP,The following statement contains a magic number: var proxy = new CastleProxy<ItExtendsAnAbstractClass>()                 //.Target(ObjectMother.Create<ItExtendsAnAbstractClass>())                 .Intercept(c => c.Return(It.Any<string>()))                 //.OnBefore(()=> Console.Write("Intercepted"))                 .OnInvoke(mi => -3)                 .Save();
Magic Number,FluentAop.Tests,Tester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\Helpers\Proxies.cs,FluentAOP,The following statement contains a magic number: Assert.Equal(-3' proxy.Return(string.Empty));
Magic Number,FluentAop.Tests,Tester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\Helpers\Proxies.cs,Castle,The following statement contains a magic number: Assert.Equal(-3' proxy.Return(string.Empty));
Magic Number,FluentAop.Tests,Tester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\Helpers\Proxies.cs,Linfu,The following statement contains a magic number: Assert.Equal(-3' proxy.Return(string.Empty));
Magic Number,FluentAop.Tests,Tester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\Helpers\Proxies.cs,Spring,The following statement contains a magic number: Assert.Equal(-3' proxy.Return(string.Empty));
Magic Number,FluentAop.Tests,ItExtendsAnAbstractClass,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\Helpers\Helper.cs,Return,The following statement contains a magic number: return -2;
Magic Number,FluentAop.Tests,PropertyInterceptionTester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\PropertyInterceptionTester.cs,Can_Intercept_All_Setters,The following statement contains a magic number: Assert.Equal(2' ack);
Magic Number,FluentAop.Tests,PropertyInterceptionTester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\PropertyInterceptionTester.cs,Can_Intercept_All_Getters,The following statement contains a magic number: Assert.Equal(2' ack);
Magic Number,FluentAop.Tests,MethodInterceptionTester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\MethodInterceptionTester.cs,Can_Callback_OnBefore_OnFinally_And_OnAfter,The following statement contains a magic number: Assert.Equal(3' ack);
Magic Number,FluentAop.Tests,MethodInterceptionTester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\MethodInterceptionTester.cs,Can_Callback_OnReturn_And_Replace_Return_Value,The following statement contains a magic number: var proxy = new Proxy<IFoo>()                 .Intercept(f => f.Return())                 .OnInvoke(mi => foo.Return())                 .OnReturn((mi' r) => r.Equals(1) ? -1 : -2)                 .Save();
Magic Number,FluentAop.Tests,MethodInterceptionTester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\MethodInterceptionTester.cs,Can_Skip_Target,The following statement contains a magic number: var proxy = new Proxy<IFoo>()                 .Target(foo)                 .Intercept(f => f.Return())                 .OnInvoke(mi => -2) // returns back' target won't be called                 .Save();
Magic Number,FluentAop.Tests,MethodInterceptionTester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\MethodInterceptionTester.cs,Can_Skip_Target,The following statement contains a magic number: Assert.Equal(-2' proxy.Return());
Magic Number,FluentAop.Tests,MethodInterceptionTester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\MethodInterceptionTester.cs,Can_Intercept_All_Methods_Getters_And_Setters,The following statement contains a magic number: Assert.Equal(5' ack);
Magic Number,FluentAop.Tests,MethodInterceptionTester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\MethodInterceptionTester.cs,Can_Intercept_Generic_Methods,The following statement contains a magic number: proxy.GenericGo<double>(2d);
Magic Number,FluentAop.Tests,MethodInterceptionTester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\MethodInterceptionTester.cs,Can_Intercept_Generic_Methods,The following statement contains a magic number: Assert.Equal(2' ack);
Magic Number,FluentAop.Tests,MethodInterceptionTester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\MethodInterceptionTester.cs,Can_Intercept_Multiple_Members_Using_A_Single_Fluent_Instruction,The following statement contains a magic number: var proxy = new Proxy<IFoo>()                 .Target(foo)                 .InterceptMethod(f => f.Go())                     .OnBefore(() => Assert.Equal(0' ack))                     .OnAfter(() => ack++)                 .InterceptGetter(f => f.Name)                     .OnBefore(() => Assert.Equal(1' ack))                     .OnAfter(() => ack++)                 .InterceptSetter(f => f.Description)                     .OnBefore(() => Assert.Equal(2' ack))                     .OnAfter(() => ack++)                 .Save();
Magic Number,FluentAop.Tests,MethodInterceptionTester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\MethodInterceptionTester.cs,Can_Intercept_Multiple_Members_Using_A_Single_Fluent_Instruction,The following statement contains a magic number: Assert.Equal(3' ack);
Magic Number,FluentAop.Tests,MethodInterceptionTester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\MethodInterceptionTester.cs,Can_Intercept_Multiple_Members_Using_Many_Fluent_Instructions,The following statement contains a magic number: proxy                 .InterceptSetter(f => f.Description)                 .OnBefore(() => Assert.Equal(2' ack))                 .OnAfter(() => ack++);
Magic Number,FluentAop.Tests,MethodInterceptionTester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\MethodInterceptionTester.cs,Can_Intercept_Multiple_Members_Using_Many_Fluent_Instructions,The following statement contains a magic number: Assert.Equal(3' ack);
Magic Number,FluentAop.Tests,MethodInterceptionTester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\MethodInterceptionTester.cs,Can_Intercept_Multiple_Methods_Using_A_Filter,The following statement contains a magic number: Assert.Equal(4' ack);
Magic Number,FluentAop.Tests,MethodInterceptionTester,C:\research\architectureSmells\repos\pablomx_fluentAOP\fluentAOP.Tests\MethodInterceptionTester.cs,Can_Intercept_Many_Methods_With_One_Advice,The following statement contains a magic number: Assert.Equal(3' ack);
