Implementation smell,Namespace,Class,File,Method,Description
Long Method,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The method has 125 lines of code.
Long Method,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The method has 125 lines of code.
Long Method,RestSharp.Deserializers,XmlDeserializer,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Xml\XmlDeserializer.cs,Map,The method has 187 lines of code.
Long Method,RestSharp.Serialization.Json,JsonSerializer,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\JsonSerializer.cs,ConvertValue,The method has 111 lines of code.
Complex Method,RestSharp.Authenticators,OAuth1Authenticator,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Authenticators\OAuth1Authenticator.cs,AddOAuthData,Cyclomatic complexity of the method is 11
Complex Method,RestSharp,Http,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Http.Async.cs,PreparePostBody,Cyclomatic complexity of the method is 8
Complex Method,RestSharp,Http,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Http.Async.cs,ConfigureWebRequest,Cyclomatic complexity of the method is 11
Complex Method,RestSharp,RestClient,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\RestClient.Async.cs,GetHandler,Cyclomatic complexity of the method is 8
Complex Method,RestSharp,RestClient,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\RestClient.Async.cs,ConfigureHttp,Cyclomatic complexity of the method is 10
Complex Method,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,EscapeToJavascriptString,Cyclomatic complexity of the method is 11
Complex Method,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ParseObject,Cyclomatic complexity of the method is 8
Complex Method,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ParseValue,Cyclomatic complexity of the method is 8
Complex Method,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ParseString,Cyclomatic complexity of the method is 22
Complex Method,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,Cyclomatic complexity of the method is 15
Complex Method,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,SerializeValue,Cyclomatic complexity of the method is 9
Complex Method,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,IsNumeric,Cyclomatic complexity of the method is 12
Complex Method,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,EscapeToJavascriptString,Cyclomatic complexity of the method is 11
Complex Method,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ParseObject,Cyclomatic complexity of the method is 8
Complex Method,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ParseValue,Cyclomatic complexity of the method is 8
Complex Method,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ParseString,Cyclomatic complexity of the method is 22
Complex Method,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,Cyclomatic complexity of the method is 15
Complex Method,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,SerializeValue,Cyclomatic complexity of the method is 9
Complex Method,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,IsNumeric,Cyclomatic complexity of the method is 12
Complex Method,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,Cyclomatic complexity of the method is 30
Complex Method,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,Cyclomatic complexity of the method is 30
Complex Method,RestSharp.Extensions,RSACryptoServiceProviderExtensions,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Extensions\RSACryptoServiceProviderExtensions.cs,FromXmlStringImpl,Cyclomatic complexity of the method is 11
Complex Method,RestSharp.Deserializers,XmlDeserializer,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Xml\XmlDeserializer.cs,Map,Cyclomatic complexity of the method is 31
Complex Method,RestSharp.Serializers,XmlSerializer,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Xml\XmlSerializer.cs,Map,Cyclomatic complexity of the method is 12
Complex Method,RestSharp.Serializers,XmlSerializer,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Xml\XmlSerializer.cs,IsNumeric,Cyclomatic complexity of the method is 11
Complex Method,RestSharp.Serialization.Json,JsonSerializer,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\JsonSerializer.cs,Map,Cyclomatic complexity of the method is 8
Complex Method,RestSharp.Serialization.Json,JsonSerializer,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\JsonSerializer.cs,ConvertValue,Cyclomatic complexity of the method is 23
Long Parameter List,RestSharp.Authenticators,OAuth1Authenticator,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Authenticators\OAuth1Authenticator.cs,ForAccessToken,The method has 5 parameters. Parameters: consumerKey' consumerSecret' token' tokenSecret' signatureMethod
Long Parameter List,RestSharp.Authenticators,OAuth1Authenticator,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Authenticators\OAuth1Authenticator.cs,ForAccessToken,The method has 5 parameters. Parameters: consumerKey' consumerSecret' token' tokenSecret' verifier
Long Parameter List,RestSharp.Authenticators,OAuth1Authenticator,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Authenticators\OAuth1Authenticator.cs,ForAccessTokenRefresh,The method has 5 parameters. Parameters: consumerKey' consumerSecret' token' tokenSecret' sessionHandle
Long Parameter List,RestSharp.Authenticators,OAuth1Authenticator,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Authenticators\OAuth1Authenticator.cs,ForAccessTokenRefresh,The method has 6 parameters. Parameters: consumerKey' consumerSecret' token' tokenSecret' verifier' sessionHandle
Long Parameter List,RestSharp.Authenticators,OAuth1Authenticator,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Authenticators\OAuth1Authenticator.cs,ForClientAuthentication,The method has 5 parameters. Parameters: consumerKey' consumerSecret' username' password' signatureMethod
Long Parameter List,RestSharp.Authenticators,OAuth1Authenticator,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Authenticators\OAuth1Authenticator.cs,ForProtectedResource,The method has 5 parameters. Parameters: consumerKey' consumerSecret' accessToken' accessTokenSecret' signatureMethod
Long Parameter List,RestSharp.Authenticators.OAuth,OAuthTools,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Authenticators\OAuth\OAuthTools.cs,GetSignature,The method has 5 parameters. Parameters: signatureMethod' signatureTreatment' signatureBase' consumerSecret' tokenSecret
Long Parameter List,RestSharp,FileParameter,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\FileParameter.cs,Create,The method has 5 parameters. Parameters: name' writer' contentLength' fileName' contentType
Long Parameter List,RestSharp,IRestRequest,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\IRestRequest.cs,AddFile,The method has 5 parameters. Parameters: name' writer' fileName' contentLength' contentType
Long Parameter List,RestSharp,RestRequest,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\RestRequest.cs,AddFile,The method has 5 parameters. Parameters: name' writer' fileName' contentLength' contentType
Long Identifier,RestSharp,RestClient,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\RestClient.Async.cs,GetHandler,The length of the parameter structuredSyntaxSuffixWildcard is 30.
Long Identifier,RestSharp,RestClient,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\RestClient.Async.cs,,The length of the parameter StructuredSyntaxSuffixWildcardRegex is 35.
Long Identifier,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,,The length of the parameter _currentJsonSerializerStrategy is 30.
Long Identifier,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,,The length of the parameter _currentJsonSerializerStrategy is 30.
Long Identifier,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,,The length of the parameter ArrayConstructorParameterTypes is 30.
Long Identifier,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,,The length of the parameter ArrayConstructorParameterTypes is 30.
Long Identifier,RestSharp.Deserializers,XmlDeserializer,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Xml\XmlDeserializer.cs,Map,The length of the parameter deserializeFromContentAttributeAlreadyUsed is 42.
Long Identifier,RestSharp.Serializers,XmlSerializer,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Xml\XmlSerializer.cs,Map,The length of the parameter textContentAttributeAlreadyUsed is 31.
Long Statement,RestSharp.Authenticators,OAuth1Authenticator,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Authenticators\OAuth1Authenticator.cs,AddOAuthData,The length of the statement  "                    "Using query parameters in the base URL is not supported for OAuth calls. Consider using AddDefaultQueryParameter instead."); " is 125.
Long Statement,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ParseString,The length of the statement  "                            if (!(success = UInt32.TryParse(new string(json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) " is 130.
Long Statement,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ParseString,The length of the statement  "                                    if (new string(json' index' 2) == "\\u" && UInt32.TryParse(new string(json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) " is 163.
Long Statement,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ParseNumber,The length of the statement  "            if (str.IndexOf("."' StringComparison.OrdinalIgnoreCase) != -1 || str.IndexOf("e"' StringComparison.OrdinalIgnoreCase) != -1) " is 125.
Long Statement,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ParseNumber,The length of the statement  "                success = double.TryParse(new string(json' index' charLength)' NumberStyles.Any' CultureInfo.InvariantCulture' out number); " is 123.
Long Statement,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ParseNumber,The length of the statement  "                success = long.TryParse(new string(json' index' charLength)' NumberStyles.Any' CultureInfo.InvariantCulture' out number); " is 121.
Long Statement,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The length of the statement  "                if (json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e') " is 127.
Long Statement,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ParseString,The length of the statement  "                            if (!(success = UInt32.TryParse(new string(json' index' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out codePoint))) " is 130.
Long Statement,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ParseString,The length of the statement  "                                    if (new string(json' index' 2) == "\\u" && UInt32.TryParse(new string(json' index + 2' 4)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out lowCodePoint)) " is 163.
Long Statement,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ParseNumber,The length of the statement  "            if (str.IndexOf("."' StringComparison.OrdinalIgnoreCase) != -1 || str.IndexOf("e"' StringComparison.OrdinalIgnoreCase) != -1) " is 125.
Long Statement,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ParseNumber,The length of the statement  "                success = double.TryParse(new string(json' index' charLength)' NumberStyles.Any' CultureInfo.InvariantCulture' out number); " is 123.
Long Statement,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ParseNumber,The length of the statement  "                success = long.TryParse(new string(json' index' charLength)' NumberStyles.Any' CultureInfo.InvariantCulture' out number); " is 121.
Long Statement,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The length of the statement  "                if (json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e') " is 127.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,SetterValueFactory,The length of the statement  "            IDictionary<string' KeyValuePair<Type' ReflectionUtils.SetDelegate>> result = new Dictionary<string' KeyValuePair<Type' ReflectionUtils.SetDelegate>>(); " is 152.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,SetterValueFactory,The length of the statement  "                    result[MapClrMemberNameToJsonFieldName(propertyInfo.Name)] = new KeyValuePair<Type' ReflectionUtils.SetDelegate>(propertyInfo.PropertyType' ReflectionUtils.GetSetMethod(propertyInfo)); " is 184.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,SetterValueFactory,The length of the statement  "                result[MapClrMemberNameToJsonFieldName(fieldInfo.Name)] = new KeyValuePair<Type' ReflectionUtils.SetDelegate>(fieldInfo.FieldType' ReflectionUtils.GetSetMethod(fieldInfo)); " is 172.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The length of the statement  "                    if (type == typeof(DateTime) || (ReflectionUtils.IsNullableType(type) && Nullable.GetUnderlyingType(type) == typeof(DateTime))) " is 127.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The length of the statement  "                        return DateTime.ParseExact(str' Iso8601Format' CultureInfo.InvariantCulture' DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal); " is 144.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The length of the statement  "                    if (type == typeof(DateTimeOffset) || (ReflectionUtils.IsNullableType(type) && Nullable.GetUnderlyingType(type) == typeof(DateTimeOffset))) " is 139.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The length of the statement  "                        return DateTimeOffset.ParseExact(str' Iso8601Format' CultureInfo.InvariantCulture' DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal); " is 150.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The length of the statement  "                obj = type == typeof(int) || type == typeof(long) || type == typeof(double) || type == typeof(float) || type == typeof(bool) || type == typeof(decimal) || type == typeof(byte) || type == typeof(short) " is 200.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The length of the statement  "                        else if (ReflectionUtils.IsTypeGenericeCollectionInterface(type) || ReflectionUtils.IsAssignableFrom(typeof(IList)' type)) " is 122.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The length of the statement  "                            list = (IList)(ConstructorCache[type] ?? ConstructorCache[typeof(List<>).MakeGenericType(innerType)])(jsonObject.Count); " is 120.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,SetterValueFactory,The length of the statement  "            IDictionary<string' KeyValuePair<Type' ReflectionUtils.SetDelegate>> result = new Dictionary<string' KeyValuePair<Type' ReflectionUtils.SetDelegate>>(); " is 152.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,SetterValueFactory,The length of the statement  "                    result[MapClrMemberNameToJsonFieldName(propertyInfo.Name)] = new KeyValuePair<Type' ReflectionUtils.SetDelegate>(propertyInfo.PropertyType' ReflectionUtils.GetSetMethod(propertyInfo)); " is 184.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,SetterValueFactory,The length of the statement  "                result[MapClrMemberNameToJsonFieldName(fieldInfo.Name)] = new KeyValuePair<Type' ReflectionUtils.SetDelegate>(fieldInfo.FieldType' ReflectionUtils.GetSetMethod(fieldInfo)); " is 172.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The length of the statement  "                    if (type == typeof(DateTime) || (ReflectionUtils.IsNullableType(type) && Nullable.GetUnderlyingType(type) == typeof(DateTime))) " is 127.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The length of the statement  "                        return DateTime.ParseExact(str' Iso8601Format' CultureInfo.InvariantCulture' DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal); " is 144.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The length of the statement  "                    if (type == typeof(DateTimeOffset) || (ReflectionUtils.IsNullableType(type) && Nullable.GetUnderlyingType(type) == typeof(DateTimeOffset))) " is 139.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The length of the statement  "                        return DateTimeOffset.ParseExact(str' Iso8601Format' CultureInfo.InvariantCulture' DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal); " is 150.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The length of the statement  "                obj = type == typeof(int) || type == typeof(long) || type == typeof(double) || type == typeof(float) || type == typeof(bool) || type == typeof(decimal) || type == typeof(byte) || type == typeof(short) " is 200.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The length of the statement  "                        else if (ReflectionUtils.IsTypeGenericeCollectionInterface(type) || ReflectionUtils.IsAssignableFrom(typeof(IList)' type)) " is 122.
Long Statement,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The length of the statement  "                            list = (IList)(ConstructorCache[type] ?? ConstructorCache[typeof(List<>).MakeGenericType(innerType)])(jsonObject.Count); " is 120.
Long Statement,Reflection,ReflectionUtils,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ToNullableType,The length of the statement  "                return obj == null ? null : Convert.ChangeType(obj' Nullable.GetUnderlyingType(nullableType)' CultureInfo.InvariantCulture); " is 124.
Long Statement,Reflection,ReflectionUtils,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,GetGetMethodByExpression,The length of the statement  "                UnaryExpression instanceCast = (!IsValueType(propertyInfo.DeclaringType)) ? Expression.TypeAs(instance' propertyInfo.DeclaringType) : Expression.Convert(instance' propertyInfo.DeclaringType); " is 191.
Long Statement,Reflection,ReflectionUtils,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,GetGetMethodByExpression,The length of the statement  "                Func<object' object> compiled = Expression.Lambda<Func<object' object>>(Expression.TypeAs(Expression.Call(instanceCast' getMethodInfo)' typeof(object))' instance).Compile(); " is 173.
Long Statement,Reflection,ReflectionUtils,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,GetSetMethodByExpression,The length of the statement  "                UnaryExpression instanceCast = (!IsValueType(propertyInfo.DeclaringType)) ? Expression.TypeAs(instance' propertyInfo.DeclaringType) : Expression.Convert(instance' propertyInfo.DeclaringType); " is 191.
Long Statement,Reflection,ReflectionUtils,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,GetSetMethodByExpression,The length of the statement  "                UnaryExpression valueCast = (!IsValueType(propertyInfo.PropertyType)) ? Expression.TypeAs(value' propertyInfo.PropertyType) : Expression.Convert(value' propertyInfo.PropertyType); " is 179.
Long Statement,Reflection,ReflectionUtils,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,GetSetMethodByExpression,The length of the statement  "                Action<object' object> compiled = Expression.Lambda<Action<object' object>>(Expression.Call(instanceCast' setMethodInfo' valueCast)' new ParameterExpression[] { instance' value }).Compile(); " is 190.
Long Statement,Reflection,ReflectionUtils,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,GetSetMethodByExpression,The length of the statement  "                    Assign(Expression.Field(Expression.Convert(instance' fieldInfo.DeclaringType)' fieldInfo)' Expression.Convert(value' fieldInfo.FieldType))' instance' value).Compile(); " is 167.
Complex Conditional,RestSharp,RestRequest,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\RestRequest.cs,AddObject,The conditional expression  "((Array) val).Length > 0     &&                          elementType          != null &&                          (elementType.IsPrimitive || elementType.IsValueType || elementType == typeof(string))"  is complex.
Complex Conditional,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The conditional expression  "json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'"  is complex.
Complex Conditional,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The conditional expression  "json[index] == 't' && json[index + 1] == 'r' && json[index + 2] == 'u' && json[index + 3] == 'e'"  is complex.
Complex Conditional,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The conditional expression  "json[index] == 'n' && json[index + 1] == 'u' && json[index + 2] == 'l' && json[index + 3] == 'l'"  is complex.
Complex Conditional,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The conditional expression  "json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'"  is complex.
Complex Conditional,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The conditional expression  "json[index] == 't' && json[index + 1] == 'r' && json[index + 2] == 'u' && json[index + 3] == 'e'"  is complex.
Complex Conditional,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The conditional expression  "json[index] == 'n' && json[index + 1] == 'u' && json[index + 2] == 'l' && json[index + 3] == 'l'"  is complex.
Complex Conditional,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The conditional expression  "(valueIsLong && type == typeof(long)) || (valueIsDouble && type == typeof(double))"  is complex.
Complex Conditional,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The conditional expression  "(valueIsDouble && type != typeof(double)) || (valueIsLong && type != typeof(long))"  is complex.
Complex Conditional,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The conditional expression  "(valueIsLong && type == typeof(long)) || (valueIsDouble && type == typeof(double))"  is complex.
Complex Conditional,RestSharp,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,DeserializeObject,The conditional expression  "(valueIsDouble && type != typeof(double)) || (valueIsLong && type != typeof(long))"  is complex.
Complex Conditional,RestSharp.Serialization.Json,JsonSerializer,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\JsonSerializer.cs,IsSerializedString,The conditional expression  "trimmed.StartsWith("{") && trimmed.EndsWith("}")                      || trimmed.StartsWith("[{") && trimmed.EndsWith("}]")"  is complex.
Empty Catch Block,RestSharp,Http,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Http.Async.cs,ConfigureWebRequest,The method has an empty catch block.
Empty Catch Block,RestSharp,RestClient,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\RestClient.Async.cs,ConfigureHttp,The method has an empty catch block.
Magic Number,RestSharp.Authenticators.OAuth.Extensions,TimeExtensions,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Authenticators\OAuth\Extensions\TimeExtensions.cs,FromUnixTime,The following statement contains a magic number: DateTime time = new DateTime(1970' 1' 1);
Magic Number,RestSharp.Authenticators.OAuth.Extensions,TimeExtensions,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Authenticators\OAuth\Extensions\TimeExtensions.cs,ToUnixTime,The following statement contains a magic number: TimeSpan timeSpan = (dateTime - new DateTime(1970' 1' 1));
Magic Number,RestSharp.Authenticators.OAuth,OAuthTools,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Authenticators\OAuth\OAuthTools.cs,OAuthTools,The following statement contains a magic number: var bytes = new byte[4];
Magic Number,RestSharp.Authenticators.OAuth,OAuthTools,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Authenticators\OAuth\OAuthTools.cs,GetNonce,The following statement contains a magic number: var nonce = new char[16];
Magic Number,RestSharp.Authenticators.OAuth,OAuthTools,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Authenticators\OAuth\OAuthTools.cs,ConstructRequestUrl,The following statement contains a magic number: var basic = url.Scheme == "http" && url.Port == 80;
Magic Number,RestSharp.Authenticators.OAuth,OAuthTools,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Authenticators\OAuth\OAuthTools.cs,ConstructRequestUrl,The following statement contains a magic number: var secure = url.Scheme == "https" && url.Port == 443;
Magic Number,RestSharp,Http,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Http.Async.cs,AddRange,The following statement contains a magic number: long from = Convert.ToInt64(m.Groups[2].Value);
Magic Number,RestSharp,Http,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Http.Async.cs,AddRange,The following statement contains a magic number: long to = Convert.ToInt64(m.Groups[3].Value);
Magic Number,RestSharp,RestRequest,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\RestRequest.cs,RestRequest,The following statement contains a magic number: IEnumerable<NameValuePair> ParseQuery(string query) =>                  query.Split('&').Select(x =>                  {                      var pair = x.Split('=');                      return pair.Length == 2 ? new NameValuePair(pair[0]' pair[1]) : NameValuePair.Empty;                  }).Where(x => !x.IsEmpty);
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,SimpleJson,The following statement contains a magic number: EscapeTable = new char[93];
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,EscapeToJavascriptString,The following statement contains a magic number: remainingLength >= 2
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ConvertFromUtf32,The following statement contains a magic number: return new string(new char[] { (char)((utf32 >> 10) + 0xD800)' (char)(utf32 % 0x0400 + 0xDC00) });
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 5;
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: remainingLength >= 5
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 4;
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 't' && json[index + 1] == 'r' && json[index + 2] == 'u' && json[index + 3] == 'e'
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 't' && json[index + 1] == 'r' && json[index + 2] == 'u' && json[index + 3] == 'e'
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: remainingLength >= 4
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 4;
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'n' && json[index + 1] == 'u' && json[index + 2] == 'l' && json[index + 3] == 'l'
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'n' && json[index + 1] == 'u' && json[index + 2] == 'l' && json[index + 3] == 'l'
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: remainingLength >= 4
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,SimpleJson,The following statement contains a magic number: EscapeTable = new char[93];
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,EscapeToJavascriptString,The following statement contains a magic number: remainingLength >= 2
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ConvertFromUtf32,The following statement contains a magic number: return new string(new char[] { (char)((utf32 >> 10) + 0xD800)' (char)(utf32 % 0x0400 + 0xDC00) });
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 5;
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'f' && json[index + 1] == 'a' && json[index + 2] == 'l' && json[index + 3] == 's' && json[index + 4] == 'e'
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: remainingLength >= 5
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 4;
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 't' && json[index + 1] == 'r' && json[index + 2] == 'u' && json[index + 3] == 'e'
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 't' && json[index + 1] == 'r' && json[index + 2] == 'u' && json[index + 3] == 'e'
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: remainingLength >= 4
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 4;
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'n' && json[index + 1] == 'u' && json[index + 2] == 'l' && json[index + 3] == 'l'
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'n' && json[index + 1] == 'u' && json[index + 2] == 'l' && json[index + 3] == 'l'
Magic Number,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following statement contains a magic number: remainingLength >= 4
Magic Number,RestSharp.Extensions,MiscExtensions,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Extensions\MiscExtensions.cs,ReadAsBytes,The following statement contains a magic number: var buffer = new byte[16 * 1024];
Magic Number,RestSharp.Extensions,MiscExtensions,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Extensions\MiscExtensions.cs,ReadAsBytes,The following statement contains a magic number: var buffer = new byte[16 * 1024];
Magic Number,RestSharp.Extensions,MiscExtensions,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Extensions\MiscExtensions.cs,CopyTo,The following statement contains a magic number: var buffer = new byte[32768];
Magic Number,RestSharp.Extensions,StringExtensions,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Extensions\StringExtensions.cs,UrlEncode,The following statement contains a magic number: const int maxLength = 32766;
Magic Number,RestSharp.Extensions,StringExtensions,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Extensions\StringExtensions.cs,UrlEncode,The following statement contains a magic number: var sb = new StringBuilder(input.Length * 2);
Magic Number,RestSharp.Extensions,StringExtensions,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Extensions\StringExtensions.cs,ParseJsonDate,The following statement contains a magic number: const long maxAllowedTimestamp = 253402300799;
Magic Number,RestSharp.Extensions,StringExtensions,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Extensions\StringExtensions.cs,ParseJsonDate,The following statement contains a magic number: var epoch = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);
Magic Number,RestSharp.Extensions,StringExtensions,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Extensions\StringExtensions.cs,RemoveSurroundingQuotes,The following statement contains a magic number: input = input.Substring(1' input.Length - 2);
Magic Number,RestSharp.Extensions,StringExtensions,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Extensions\StringExtensions.cs,ExtractDate,The following statement contains a magic number: var epoch = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);
Magic Number,RestSharp.Extensions,StringExtensions,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Extensions\StringExtensions.cs,ExtractDate,The following statement contains a magic number: match.Groups.Count <= 2 || string.IsNullOrEmpty(match.Groups[3].Value)
Magic Number,RestSharp.Extensions,StringExtensions,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Extensions\StringExtensions.cs,ExtractDate,The following statement contains a magic number: match.Groups.Count <= 2 || string.IsNullOrEmpty(match.Groups[3].Value)
Magic Number,RestSharp.Extensions,StringExtensions,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Extensions\StringExtensions.cs,ExtractDate,The following statement contains a magic number: var mod = DateTime.ParseExact(match.Groups[3].Value' "HHmm"' culture);
Magic Number,RestSharp.Extensions,StringExtensions,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Extensions\StringExtensions.cs,ExtractDate,The following statement contains a magic number: dt = match.Groups[2].Value == "+"                  ? dt.Add(mod.TimeOfDay)                  : dt.Subtract(mod.TimeOfDay);
Missing Default,RestSharp,RestRequest,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\RestRequest.cs,AddBody,The following switch statement is missing a default case: switch (RequestFormat)              {                  case DataFormat.Json:                      AddJsonBody(obj);                      break;                    case DataFormat.Xml:                      AddXmlBody(obj' xmlNamespace);                      break;              }
Missing Default,RestSharp,RestRequest,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\RestRequest.cs,AddBody,The following switch statement is missing a default case: switch (RequestFormat)              {                  case DataFormat.Json:                      AddJsonBody(obj);                      break;                    case DataFormat.Xml:                      AddXmlBody(obj);                      break;              }
Missing Default,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ParseValue,The following switch statement is missing a default case: switch (LookAhead(json' index))              {                  case TOKEN_STRING:                      return ParseString(json' ref index' ref success);                  case TOKEN_NUMBER:                      return ParseNumber(json' ref index' ref success);                  case TOKEN_CURLY_OPEN:                      return ParseObject(json' ref index' ref success);                  case TOKEN_SQUARED_OPEN:                      return ParseArray(json' ref index' ref success);                  case TOKEN_TRUE:                      NextToken(json' ref index);                      return true;                  case TOKEN_FALSE:                      NextToken(json' ref index);                      return false;                  case TOKEN_NULL:                      NextToken(json' ref index);                      return null;                  case TOKEN_NONE:                      break;              }
Missing Default,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following switch statement is missing a default case: switch (c)              {                  case '{':                      return TOKEN_CURLY_OPEN;                  case '}':                      return TOKEN_CURLY_CLOSE;                  case '[':                      return TOKEN_SQUARED_OPEN;                  case ']':                      return TOKEN_SQUARED_CLOSE;                  case ''':                      return TOKEN_COMMA;                  case '"':                      return TOKEN_STRING;                  case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                      return TOKEN_NUMBER;                  case ':':                      return TOKEN_COLON;              }
Missing Default,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,ParseValue,The following switch statement is missing a default case: switch (LookAhead(json' index))              {                  case TOKEN_STRING:                      return ParseString(json' ref index' ref success);                  case TOKEN_NUMBER:                      return ParseNumber(json' ref index' ref success);                  case TOKEN_CURLY_OPEN:                      return ParseObject(json' ref index' ref success);                  case TOKEN_SQUARED_OPEN:                      return ParseArray(json' ref index' ref success);                  case TOKEN_TRUE:                      NextToken(json' ref index);                      return true;                  case TOKEN_FALSE:                      NextToken(json' ref index);                      return false;                  case TOKEN_NULL:                      NextToken(json' ref index);                      return null;                  case TOKEN_NONE:                      break;              }
Missing Default,RestSharp,SimpleJson,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Json\SimpleJson.cs,NextToken,The following switch statement is missing a default case: switch (c)              {                  case '{':                      return TOKEN_CURLY_OPEN;                  case '}':                      return TOKEN_CURLY_CLOSE;                  case '[':                      return TOKEN_SQUARED_OPEN;                  case ']':                      return TOKEN_SQUARED_CLOSE;                  case ''':                      return TOKEN_COMMA;                  case '"':                      return TOKEN_STRING;                  case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                      return TOKEN_NUMBER;                  case ':':                      return TOKEN_COLON;              }
Missing Default,RestSharp.Serializers,XmlSerializer,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Xml\XmlSerializer.cs,GetSerializedValue,The following switch statement is missing a default case: switch (obj)              {                  case DateTime time when DateFormat.HasValue():                      output = time.ToString(DateFormat' CultureInfo.InvariantCulture);                      break;                  case bool _:                      output = ((bool) obj).ToString().ToLowerInvariant();                      break;              }
Missing Default,RestSharp.Serializers,XmlSerializer,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Xml\XmlSerializer.cs,SerializeNumber,The following switch statement is missing a default case: switch (number)              {                  case long l:                      return l.ToString(CultureInfo.InvariantCulture);                  case ulong @ulong:                      return @ulong.ToString(CultureInfo.InvariantCulture);                  case int i:                      return i.ToString(CultureInfo.InvariantCulture);                  case uint u:                      return u.ToString(CultureInfo.InvariantCulture);                  case decimal @decimal:                      return @decimal.ToString(CultureInfo.InvariantCulture);                  case float f:                      return f.ToString(CultureInfo.InvariantCulture);              }
Missing Default,RestSharp.Serializers,XmlSerializer,C:\research\architectureSmells\repos\restsharp_RestSharp\RestSharp\Serialization\Xml\XmlSerializer.cs,IsNumeric,The following switch statement is missing a default case: switch (value)              {                  case sbyte _:                      return true;                  case byte _:                      return true;                  case short _:                      return true;                  case ushort _:                      return true;                  case int _:                      return true;                  case uint _:                      return true;                  case long _:                      return true;                  case ulong _:                      return true;                  case float _:                      return true;                  case double _:                      return true;                  case decimal _:                      return true;              }
