Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Geometry.Interpolation,CubicSpline,C:\repos\duk3luk3_ArtyCalc.Sharp\GeometryLib\Interpolation\CubicSpline.cs,Fit,Cyclomatic complexity of the method is 8
Complex Method,GeometryLib.Math,Matrix,C:\repos\duk3luk3_ArtyCalc.Sharp\GeometryLib\Math\Matrix.cs,Gauss,Cyclomatic complexity of the method is 15
Magic Number,Geometry.Interpolation,CubicSpline,C:\repos\duk3luk3_ArtyCalc.Sharp\GeometryLib\Interpolation\CubicSpline.cs,Fit,The following statement contains a magic number: r [0] = 3 * (y [1] - y [0]) / (dx1 * dx1);  
Magic Number,Geometry.Interpolation,CubicSpline,C:\repos\duk3luk3_ArtyCalc.Sharp\GeometryLib\Interpolation\CubicSpline.cs,Fit,The following statement contains a magic number: for (int i = 1; i < n - 1; i++) {  	dx1 = x [i] - x [i - 1];  	dx2 = x [i + 1] - x [i];  	m.A [i] = 1.0f / dx1;  	m.C [i] = 1.0f / dx2;  	m.B [i] = 2.0f * (m.A [i] + m.C [i]);  	dy1 = y [i] - y [i - 1];  	dy2 = y [i + 1] - y [i];  	r [i] = 3 * (dy1 / (dx1 * dx1) + dy2 / (dx2 * dx2));  }  
Magic Number,Geometry.Interpolation,CubicSpline,C:\repos\duk3luk3_ArtyCalc.Sharp\GeometryLib\Interpolation\CubicSpline.cs,Fit,The following statement contains a magic number: r [i] = 3 * (dy1 / (dx1 * dx1) + dy2 / (dx2 * dx2));  
Magic Number,Geometry.Interpolation,CubicSpline,C:\repos\duk3luk3_ArtyCalc.Sharp\GeometryLib\Interpolation\CubicSpline.cs,Fit,The following statement contains a magic number: dx1 = x [n - 1] - x [n - 2];  
Magic Number,Geometry.Interpolation,CubicSpline,C:\repos\duk3luk3_ArtyCalc.Sharp\GeometryLib\Interpolation\CubicSpline.cs,Fit,The following statement contains a magic number: dy1 = y [n - 1] - y [n - 2];  
Magic Number,Geometry.Interpolation,CubicSpline,C:\repos\duk3luk3_ArtyCalc.Sharp\GeometryLib\Interpolation\CubicSpline.cs,Fit,The following statement contains a magic number: r [n - 1] = 3 * (dy1 / (dx1 * dx1));  
Magic Number,Geometry.Interpolation,CubicSpline,C:\repos\duk3luk3_ArtyCalc.Sharp\GeometryLib\Interpolation\CubicSpline.cs,GetNextXIndex,The following statement contains a magic number: while ((_lastIndex < xOrig.Length - 2) && (x > xOrig [_lastIndex + 1])) {  	_lastIndex++;  }  
Magic Number,GeometryLib.Math.Fitting,LinearFitting,C:\repos\duk3luk3_ArtyCalc.Sharp\GeometryLib\Math\Fitting\LinearFitting.cs,FitPlane,The following statement contains a magic number: foreach (var p in points) {  	m00 += p.X * p.X;  	m01 += p.X * p.Y;  	m02 += p.X;  	m11 += p.Y * p.Y;  	m12 += p.Y;  	m22++;  	b [0] += p.X * p.Z;  	b [1] += p.Y * p.Z;  	b [2] += p.Z;  }  
Magic Number,GeometryLib.Math.Fitting,LinearFitting,C:\repos\duk3luk3_ArtyCalc.Sharp\GeometryLib\Math\Fitting\LinearFitting.cs,FitPlane,The following statement contains a magic number: b [2] += p.Z;  
Magic Number,GeometryLib.Math.Fitting,LinearFitting,C:\repos\duk3luk3_ArtyCalc.Sharp\GeometryLib\Math\Fitting\LinearFitting.cs,FitPlane,The following statement contains a magic number: m.M [0] [2] = m02;  
Magic Number,GeometryLib.Math.Fitting,LinearFitting,C:\repos\duk3luk3_ArtyCalc.Sharp\GeometryLib\Math\Fitting\LinearFitting.cs,FitPlane,The following statement contains a magic number: m.M [1] [2] = m12;  
Magic Number,GeometryLib.Math.Fitting,LinearFitting,C:\repos\duk3luk3_ArtyCalc.Sharp\GeometryLib\Math\Fitting\LinearFitting.cs,FitPlane,The following statement contains a magic number: m.M [1] [2] = m22;  
Magic Number,GeometryLib.Math,Matrix,C:\repos\duk3luk3_ArtyCalc.Sharp\GeometryLib\Math\Matrix.cs,Matrix,The following statement contains a magic number: if (dimension.Length != 2)  	throw new InvalidOperationException ("Matrix dimension must be 2");  
Magic Number,Geometry.Math.Linear,TriDiagonalMatrixF,C:\repos\duk3luk3_ArtyCalc.Sharp\GeometryLib\Math\TriDiagonalMatrix.cs,Solve,The following statement contains a magic number: for (int i = n - 2; i >= 0; i--) {  	x [i] = dPrime [i] - cPrime [i] * x [i + 1];  }  
