Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Akka.Persistence.Sql.Common.Journal,BatchingSqlJournalSetup,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,BatchingSqlJournalSetup,Cyclomatic complexity of the method is 11
Complex Method,Akka.Persistence.Sql.Common.Journal,BatchingSqlJournal<TConnection;TCommand>,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,Receive,Cyclomatic complexity of the method is 13
Complex Method,Akka.Persistence.Sql.Common.Journal,BatchingSqlJournal<TConnection;TCommand>,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,ExecuteChunk,Cyclomatic complexity of the method is 8
Complex Method,Akka.Persistence.Sql.Common.Journal,BatchingSqlJournal<TConnection;TCommand>,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,HandleWriteMessages,Cyclomatic complexity of the method is 12
Long Parameter List,Akka.Persistence.Sql.Common.Journal,BatchingSqlJournalSetup,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,BatchingSqlJournalSetup,The method has 11 parameters. Parameters: connectionString' maxConcurrentOperations' maxBatchSize' maxBufferSize' autoInitialize' connectionTimeout' isolationLevel' circuitBreakerSettings' replayFilterSettings' namingConventions' defaultSerializer
Long Parameter List,Akka.Persistence.Sql.Common.Journal,JournalEntry,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\Messages.cs,JournalEntry,The method has 6 parameters. Parameters: persistenceId' sequenceNr' isDeleted' manifest' timestamp' payload
Long Parameter List,Akka.Persistence.Sql.Common.Journal,ReplayTaggedMessages,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\QueryApi.cs,ReplayTaggedMessages,The method has 5 parameters. Parameters: fromOffset' toOffset' max' tag' replyTo
Long Parameter List,Akka.Persistence.Sql.Common.Journal,IJournalQueryExecutor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\QueryExecutor.cs,SelectByPersistenceIdAsync,The method has 7 parameters. Parameters: connection' cancellationToken' persistenceId' fromSequenceNr' toSequenceNr' max' callback
Long Parameter List,Akka.Persistence.Sql.Common.Journal,IJournalQueryExecutor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\QueryExecutor.cs,SelectByTagAsync,The method has 7 parameters. Parameters: connection' cancellationToken' tag' fromOffset' toOffset' max' callback
Long Parameter List,Akka.Persistence.Sql.Common.Journal,QueryConfiguration,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\QueryExecutor.cs,QueryConfiguration,The method has 15 parameters. Parameters: schemaName' journalEventsTableName' metaTableName' persistenceIdColumnName' sequenceNrColumnName' payloadColumnName' manifestColumnName' timestampColumnName' isDeletedColumnName' tagsColumnName' orderingColumnName' serializerIdColumnName' timeout' defaultSerializer' useSequentialAccess
Long Parameter List,Akka.Persistence.Sql.Common.Journal,AbstractQueryExecutor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\QueryExecutor.cs,SelectByPersistenceIdAsync,The method has 7 parameters. Parameters: connection' cancellationToken' persistenceId' fromSequenceNr' toSequenceNr' max' callback
Long Parameter List,Akka.Persistence.Sql.Common.Journal,AbstractQueryExecutor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\QueryExecutor.cs,SelectByTagAsync,The method has 7 parameters. Parameters: connection' cancellationToken' tag' fromOffset' toOffset' max' callback
Long Parameter List,Akka.Persistence.Sql.Common.Journal,SqlJournal,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\SqlJournal.cs,ReplayMessagesAsync,The method has 6 parameters. Parameters: context' persistenceId' fromSequenceNr' toSequenceNr' max' recoveryCallback
Long Parameter List,Akka.Persistence.Sql.Common.Snapshot,SnapshotEntry,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\QueryExecutor.cs,SnapshotEntry,The method has 5 parameters. Parameters: persistenceId' sequenceNr' timestamp' manifest' payload
Long Parameter List,Akka.Persistence.Sql.Common.Snapshot,QueryConfiguration,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\QueryExecutor.cs,QueryConfiguration,The method has 11 parameters. Parameters: schemaName' snapshotTableName' persistenceIdColumnName' sequenceNrColumnName' payloadColumnName' manifestColumnName' timestampColumnName' serializerIdColumnName' timeout' defaultSerializer' useSequentialAccess
Long Parameter List,Akka.Persistence.Sql.Common.Snapshot,ISnapshotQueryExecutor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\QueryExecutor.cs,DeleteAsync,The method has 5 parameters. Parameters: connection' cancellationToken' persistenceId' sequenceNr' timestamp
Long Parameter List,Akka.Persistence.Sql.Common.Snapshot,ISnapshotQueryExecutor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\QueryExecutor.cs,DeleteBatchAsync,The method has 5 parameters. Parameters: connection' cancellationToken' persistenceId' maxSequenceNr' maxTimestamp
Long Parameter List,Akka.Persistence.Sql.Common.Snapshot,ISnapshotQueryExecutor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\QueryExecutor.cs,SelectSnapshotAsync,The method has 5 parameters. Parameters: connection' cancellationToken' persistenceId' maxSequenceNr' maxTimestamp
Long Parameter List,Akka.Persistence.Sql.Common.Snapshot,AbstractQueryExecutor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\QueryExecutor.cs,DeleteAsync,The method has 5 parameters. Parameters: connection' cancellationToken' persistenceId' sequenceNr' timestamp
Long Parameter List,Akka.Persistence.Sql.Common.Snapshot,AbstractQueryExecutor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\QueryExecutor.cs,DeleteBatchAsync,The method has 5 parameters. Parameters: connection' cancellationToken' persistenceId' maxSequenceNr' maxTimestamp
Long Parameter List,Akka.Persistence.Sql.Common.Snapshot,AbstractQueryExecutor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\QueryExecutor.cs,SelectSnapshotAsync,The method has 5 parameters. Parameters: connection' cancellationToken' persistenceId' maxSequenceNr' maxTimestamp
Long Statement,Akka.Persistence.Sql.Common.Journal,BatchingSqlJournal<TConnection;TCommand>,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,InitializePersistenceIds,The length of the statement  "                        var cause = (Exception)task.Exception ?? new OperationCanceledException("Cancellation occurred while trying to retrieve current persistence ids"); " is 146.
Long Statement,Akka.Persistence.Sql.Common.Journal,BatchingSqlJournal<TConnection;TCommand>,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,OnBufferOverflow,The length of the statement  "                r.PersistentActor.Tell(new DeleteMessagesFailure(JournalBufferOverflowException.Instance' r.ToSequenceNr)' ActorRefs.NoSender); " is 127.
Long Statement,Akka.Persistence.Sql.Common.Journal,BatchingSqlJournal<TConnection;TCommand>,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,CompleteBatch,The length of the statement  "            else Log.Debug("Completed batch (chunkId: {0}) of {1} operations in {2} milliseconds"' msg.ChunkId' msg.OperationCount' msg.TimeSpent.TotalMilliseconds); " is 153.
Long Statement,Akka.Persistence.Sql.Common.Journal,AbstractQueryExecutor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\QueryExecutor.cs,ReadEvent,The length of the statement  "                deserialized = Akka.Serialization.Serialization.WithTransport(Serialization.System' () => deserializer.FromBinary((byte[])payload' type) ); " is 139.
Long Statement,Akka.Persistence.Sql.Common.Journal,SqlJournal,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\SqlJournal.cs,WriteMessagesAsync,The length of the statement  "                            throw new InvalidOperationException($"Persistence Id {p.PersistenceId} must not start with {QueryExecutor.Configuration.TagsColumnName}"); " is 138.
Long Statement,Akka.Persistence.Sql.Common.Journal,SqlJournal,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\SqlJournal.cs,ReplayTaggedMessagesAsync,The length of the statement  "                        .SelectByTagAsync(connection' cancellationToken.Token' replay.Tag' replay.FromOffset' replay.ToOffset' replay.Max' replayedTagged => { " is 134.
Long Statement,Akka.Persistence.Sql.Common.Journal,SqlJournal,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\SqlJournal.cs,ReplayMessagesAsync,The length of the statement  "                    await QueryExecutor.SelectByPersistenceIdAsync(connection' cancellationToken.Token' persistenceId' fromSequenceNr' toSequenceNr' max' recoveryCallback); " is 152.
Long Statement,Akka.Persistence.Sql.Common.Journal,SqlJournal,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\SqlJournal.cs,GetConnectionString,The length of the statement  "                connectionString = System.Configuration.ConfigurationManager.ConnectionStrings[_settings.ConnectionStringName].ConnectionString; " is 128.
Long Statement,Akka.Persistence.Sql.Common.Snapshot,SqlSnapshotStore,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\SqlSnapshotStore.cs,Initialize,The length of the statement  "                using (var nestedCancellationTokenSource = CancellationTokenSource.CreateLinkedTokenSource(_pendingRequestsCancellation.Token)) " is 127.
Long Statement,Akka.Persistence.Sql.Common.Snapshot,SqlSnapshotStore,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\SqlSnapshotStore.cs,GetConnectionString,The length of the statement  "                connectionString = System.Configuration.ConfigurationManager.ConnectionStrings[_settings.ConnectionStringName].ConnectionString; " is 128.
Long Statement,Akka.Persistence.Sql.Common.Snapshot,SqlSnapshotStore,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\SqlSnapshotStore.cs,LoadAsync,The length of the statement  "            using (var nestedCancellationTokenSource = CancellationTokenSource.CreateLinkedTokenSource(_pendingRequestsCancellation.Token)) " is 127.
Long Statement,Akka.Persistence.Sql.Common.Snapshot,SqlSnapshotStore,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\SqlSnapshotStore.cs,LoadAsync,The length of the statement  "                return await QueryExecutor.SelectSnapshotAsync(connection' nestedCancellationTokenSource.Token' persistenceId' criteria.MaxSequenceNr' criteria.MaxTimeStamp); " is 158.
Long Statement,Akka.Persistence.Sql.Common.Snapshot,SqlSnapshotStore,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\SqlSnapshotStore.cs,SaveAsync,The length of the statement  "            using (var nestedCancellationTokenSource = CancellationTokenSource.CreateLinkedTokenSource(_pendingRequestsCancellation.Token)) " is 127.
Long Statement,Akka.Persistence.Sql.Common.Snapshot,SqlSnapshotStore,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\SqlSnapshotStore.cs,DeleteAsync,The length of the statement  "            using (var nestedCancellationTokenSource = CancellationTokenSource.CreateLinkedTokenSource(_pendingRequestsCancellation.Token))     " is 127.
Long Statement,Akka.Persistence.Sql.Common.Snapshot,SqlSnapshotStore,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\SqlSnapshotStore.cs,DeleteAsync,The length of the statement  "                await QueryExecutor.DeleteAsync(connection' nestedCancellationTokenSource.Token' metadata.PersistenceId' metadata.SequenceNr' timestamp); " is 137.
Long Statement,Akka.Persistence.Sql.Common.Snapshot,SqlSnapshotStore,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\SqlSnapshotStore.cs,DeleteAsync,The length of the statement  "            using (var nestedCancellationTokenSource = CancellationTokenSource.CreateLinkedTokenSource(_pendingRequestsCancellation.Token)) " is 127.
Long Statement,Akka.Persistence.Sql.Common.Snapshot,SqlSnapshotStore,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\SqlSnapshotStore.cs,DeleteAsync,The length of the statement  "                await QueryExecutor.DeleteBatchAsync(connection' nestedCancellationTokenSource.Token' persistenceId' criteria.MaxSequenceNr' criteria.MaxTimeStamp); " is 148.
Magic Number,Akka.Persistence.Sql.Common.Journal,ReplayFilterSettings,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,ReplayFilterSettings,The following statement contains a magic number: WindowSize = config.GetInt("window-size"' 100);
Magic Number,Akka.Persistence.Sql.Common.Journal,ReplayFilterSettings,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,ReplayFilterSettings,The following statement contains a magic number: MaxOldWriters = config.GetInt("max-old-writers"' 10);
Magic Number,Akka.Persistence.Sql.Common.Journal,CircuitBreakerSettings,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,CircuitBreakerSettings,The following statement contains a magic number: MaxFailures = config.GetInt("max-failures"' 5);
Magic Number,Akka.Persistence.Sql.Common.Journal,CircuitBreakerSettings,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,CircuitBreakerSettings,The following statement contains a magic number: CallTimeout = config.GetTimeSpan("call-timeout"' TimeSpan.FromSeconds(20));
Magic Number,Akka.Persistence.Sql.Common.Journal,CircuitBreakerSettings,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,CircuitBreakerSettings,The following statement contains a magic number: ResetTimeout = config.GetTimeSpan("reset-timeout"' TimeSpan.FromSeconds(60));
Magic Number,Akka.Persistence.Sql.Common.Journal,BatchingSqlJournalSetup,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,BatchingSqlJournalSetup,The following statement contains a magic number: MaxConcurrentOperations = config.GetInt("max-concurrent-operations"' 64);
Magic Number,Akka.Persistence.Sql.Common.Journal,BatchingSqlJournalSetup,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,BatchingSqlJournalSetup,The following statement contains a magic number: MaxBatchSize = config.GetInt("max-batch-size"' 100);
Magic Number,Akka.Persistence.Sql.Common.Journal,BatchingSqlJournalSetup,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,BatchingSqlJournalSetup,The following statement contains a magic number: MaxBufferSize = config.GetInt("max-buffer-size"' 500000);
Magic Number,Akka.Persistence.Sql.Common.Journal,BatchingSqlJournalSetup,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,BatchingSqlJournalSetup,The following statement contains a magic number: ConnectionTimeout = config.GetTimeSpan("connection-timeout"' TimeSpan.FromSeconds(30));
Magic Number,Akka.Persistence.Sql.Common.Journal,BatchingSqlJournal<TConnection;TCommand>,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,GetAllPersistenceIdsAsync,The following statement contains a magic number: var result = new List<string>(256);
Magic Number,Akka.Persistence.Sql.Common.Journal,BatchingSqlJournal<TConnection;TCommand>,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,HandleWriteMessages,The following statement contains a magic number: var tagBuilder = new StringBuilder(16);
Magic Number,Akka.Persistence.Sql.Common.Snapshot,AbstractQueryExecutor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\QueryExecutor.cs,ReadSnapshot,The following statement contains a magic number: var timestamp = reader.GetDateTime(2);
Magic Number,Akka.Persistence.Sql.Common.Snapshot,AbstractQueryExecutor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\QueryExecutor.cs,GetSnapshot,The following statement contains a magic number: var manifest = reader.GetString(3);
Magic Number,Akka.Persistence.Sql.Common.Snapshot,AbstractQueryExecutor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\QueryExecutor.cs,GetSnapshot,The following statement contains a magic number: var binary = (byte[])reader[4];
Magic Number,Akka.Persistence.Sql.Common.Snapshot,AbstractQueryExecutor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Snapshot\QueryExecutor.cs,GetSnapshot,The following statement contains a magic number: reader.IsDBNull(5)
Missing Default,Akka.Persistence.Sql.Common.Journal,BatchingSqlJournal<TConnection;TCommand>,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\persistence\Akka.Persistence.Sql.Common\Journal\BatchingSqlJournal.cs,FailChunkExecution,The following switch statement is missing a default case: switch (req)                  {                      case WriteMessages write:                          write.PersistentActor.Tell(new WriteMessagesFailed(cause));                          break;                      case ReplayMessages replay:                          replay.PersistentActor.Tell(new ReplayMessagesFailure(cause));                          break;                      case DeleteMessagesTo delete:                          delete.PersistentActor.Tell(new DeleteMessagesFailure(cause' delete.ToSequenceNr));                          break;                      case ReplayTaggedMessages replayTagged:                          replayTagged.ReplyTo.Tell(new ReplayMessagesFailure(cause));                          break;                  }
