Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Akka.TestKit,AkkaSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Tests.Shared.Internals\AkkaSpec.cs,ExpectMsgPf,The length of the statement  "                Assertions.Fail(string.Format("expected message of type {0} but timed out after {1}"' typeof(T)' GetTimeoutOrDefault(timeout))); " is 128.
Long Statement,Akka.TestKit,AkkaSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Tests.Shared.Internals\AkkaSpec.cs,ExpectMsgPf,The length of the statement  "            Assertions.AssertTrue(function.GetMethodInfo().GetParameters().Any(x => x.ParameterType.IsInstanceOfType(message))' string.Format("expected {0} but got {1} instead"' hint' message)); " is 182.
Long Statement,Akka.TestKit,AkkaSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Tests.Shared.Internals\AkkaSpec.cs,ExpectMsgPf,The length of the statement  "            Assertions.AssertTrue(pf.GetMethodInfo().GetParameters().Any(x => x.ParameterType.IsInstanceOfType(t))' string.Format("expected {0} but got {1} instead"' hint' t)); " is 164.
Long Statement,Akka.TestKit,AkkaSpecExtensions,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Tests.Shared.Internals\AkkaSpecExtensions.cs,ShouldBe,The length of the statement  "            Assert.True(self.SequenceEqual(other)' "Expected " + other.Select(i => string.Format("'{0}'"' i)).Join("'") + " got " + self.Select(i => string.Format("'{0}'"' i)).Join("'")); " is 175.
Long Statement,Nito.AsyncEx,AsyncContext,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Tests.Shared.Internals\AsyncContext\AsyncContext.cs,Enqueue,The length of the statement  "            task.ContinueWith(_ => OperationCompleted()' CancellationToken.None' TaskContinuationOptions.ExecuteSynchronously' _taskScheduler); " is 131.
Long Statement,Nito.AsyncEx,AsyncContext,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Tests.Shared.Internals\AsyncContext\AsyncContext.cs,Enqueue,The length of the statement  "            // If we fail to add to the queue' just drop the Task. This is the same behavior as the TaskScheduler.FromCurrentSynchronizationContext(WinFormsSynchronizationContext). " is 168.
Empty Catch Block,Nito.AsyncEx.Synchronous,TaskExtensions,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Tests.Shared.Internals\AsyncContext\SynchronousTaskExtensions.cs.cs,WaitWithoutException,The method has an empty catch block.
