Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Akka.Cluster.Sharding.Tests,ClusterShardingInternalsSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingInternalsSpec.cs,ClusterSharding_must_stop_entities_from_HandOffStopper_even_if_the_entity_doesnt_handle_handOffStopMessage,The length of the statement  "                Props.Create(() => new ShardRegion.HandOffStopper(shardName' probe.Ref' new IActorRef[] { emptyHandlerActor }' HandOffStopMessage.Instance' TimeSpan.FromMilliseconds(10))) " is 171.
Long Statement,Akka.Cluster.Sharding.Tests,ClusterShardingMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingMessageSerializerSpec.cs,ClusterShardingMessageSerializer_must_serialize_ClusterShardingStats,The length of the statement  "            CheckSerialization(new ClusterShardingStats(ImmutableDictionary<Address' ShardRegionStats>.Empty.Add(new Address("akka.tcp"' "foo"' "localhost"' 9110)'  " is 151.
Long Statement,Akka.Cluster.Sharding.Tests,ConstantRateEntityRecoveryStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ConstantRateEntityRecoveryStrategySpec.cs,ConstantRateEntityRecoveryStrategy_must_recover_entities,The length of the statement  "                .Select(scheduledRecovery => scheduledRecovery.ContinueWith(t => new KeyValuePair<IImmutableSet<string>' TimeSpan>(t.Result' DateTime.UtcNow - startTime))) " is 155.
Long Statement,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,CreateAllocations,The length of the statement  "            IImmutableDictionary<IActorRef' IImmutableList<string>> allocations = ImmutableDictionaryKeepOrder<IActorRef' IImmutableList<string>>.Empty; " is 140.
Long Statement,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_3_0_0_rebalanceThreshold_1,The length of the statement  "            allocationStrategy.Rebalance(allocations' ImmutableHashSet<string>.Empty.Add("001")).Result.Should().BeEquivalentTo("002"); " is 123.
Long Statement,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_4_4_0_rebalanceThreshold_1,The length of the statement  "            allocationStrategy.Rebalance(allocations' ImmutableHashSet<string>.Empty.Add("001")).Result.Should().BeEquivalentTo("005"); " is 123.
Long Statement,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_4_4_2_rebalanceThreshold_1,The length of the statement  "            allocationStrategy.Rebalance(allocations' ImmutableHashSet<string>.Empty.Add("001")).Result.Should().BeEquivalentTo("005"); " is 123.
Long Statement,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_3_3_0_rebalanceThreshold_2,The length of the statement  "            allocationStrategy.Rebalance(allocations' ImmutableHashSet<string>.Empty.Add("001")).Result.Should().BeEquivalentTo("004"); " is 123.
Long Statement,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_3_3_0_rebalanceThreshold_2,The length of the statement  "            allocationStrategy.Rebalance(allocations' ImmutableHashSet<string>.Empty.Add("001").Add("004")).Result.Should().BeEmpty(); " is 122.
Long Statement,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_4_4_0_rebalanceThreshold_2,The length of the statement  "            allocationStrategy.Rebalance(allocations' ImmutableHashSet<string>.Empty.Add("001").Add("002")).Result.Should().BeEquivalentTo("005"' "006"); " is 141.
Long Statement,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_4_4_0_rebalanceThreshold_2,The length of the statement  "            allocationStrategy.Rebalance(allocations' ImmutableHashSet<string>.Empty.Add("001").Add("002").Add("005").Add("006")).Result.Should().BeEmpty(); " is 144.
Long Statement,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_5_5_0_rebalanceThreshold_2,The length of the statement  "            allocationStrategy.Rebalance(allocations' ImmutableHashSet<string>.Empty.Add("001").Add("002")).Result.Should().BeEquivalentTo("006"' "007"); " is 141.
Long Statement,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_5_5_0_rebalanceThreshold_2,The length of the statement  "            allocationStrategy.Rebalance(allocations' ImmutableHashSet<string>.Empty.Add("001").Add("002").Add("006").Add("007")).Result.Should().BeEquivalentTo("003"); " is 156.
Long Statement,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_50_50_0_rebalanceThreshold_2,The length of the statement  "            allocationStrategy.Rebalance(allocations' ImmutableHashSet<string>.Empty.Add("001").Add("002")).Result.Should().BeEquivalentTo("051"' "052"); " is 141.
Long Statement,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_50_50_0_rebalanceThreshold_2,The length of the statement  "            allocationStrategy.Rebalance(allocations' ImmutableHashSet<string>.Empty.Add("001").Add("002").Add("051").Add("052")).Result.Should().BeEquivalentTo("003"' "004"); " is 163.
Long Statement,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_limit_number_of_simultaneous_rebalance,The length of the statement  "            allocationStrategy.Rebalance(allocations' ImmutableHashSet<string>.Empty.Add("002").Add("003")).Result.Should().BeEmpty(); " is 122.
Long Statement,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_not_pick_shards_that_are_in_progress,The length of the statement  "            allocationStrategy.Rebalance(allocations' ImmutableHashSet<string>.Empty.Add("002").Add("003")).Result.Should().BeEquivalentTo("001"' "004"); " is 141.
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingConfigSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingConfigSpec.cs,Should_cluster_sharding_settings_have_default_config,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(5)' config.GetTimeSpan("coordinator-failure-backoff"));
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingConfigSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingConfigSpec.cs,Should_cluster_sharding_settings_have_default_config,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(2)' config.GetTimeSpan("retry-interval"));
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingConfigSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingConfigSpec.cs,Should_cluster_sharding_settings_have_default_config,The following statement contains a magic number: Assert.Equal(100000' config.GetInt("buffer-size"));
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingConfigSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingConfigSpec.cs,Should_cluster_sharding_settings_have_default_config,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(60)' config.GetTimeSpan("handoff-timeout"));
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingConfigSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingConfigSpec.cs,Should_cluster_sharding_settings_have_default_config,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(10)' config.GetTimeSpan("shard-start-timeout"));
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingConfigSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingConfigSpec.cs,Should_cluster_sharding_settings_have_default_config,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(10)' config.GetTimeSpan("entity-restart-backoff"));
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingConfigSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingConfigSpec.cs,Should_cluster_sharding_settings_have_default_config,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(10)' config.GetTimeSpan("rebalance-interval"));
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingConfigSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingConfigSpec.cs,Should_cluster_sharding_settings_have_default_config,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(5)' config.GetTimeSpan("waiting-for-state-timeout"));
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingConfigSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingConfigSpec.cs,Should_cluster_sharding_settings_have_default_config,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(5)' config.GetTimeSpan("updating-state-timeout"));
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingConfigSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingConfigSpec.cs,Should_cluster_sharding_settings_have_default_config,The following statement contains a magic number: Assert.Equal(3' config.GetInt("least-shard-allocation-strategy.max-simultaneous-rebalance"));
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingConfigSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingConfigSpec.cs,Should_cluster_sharding_settings_have_default_config,The following statement contains a magic number: Assert.Equal(TimeSpan.FromMilliseconds(100)' config.GetTimeSpan("entity-recovery-constant-rate-strategy.frequency"));
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingConfigSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingConfigSpec.cs,Should_cluster_sharding_settings_have_default_config,The following statement contains a magic number: Assert.Equal(5' config.GetInt("entity-recovery-constant-rate-strategy.number-of-entities"));
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingConfigSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingConfigSpec.cs,Should_cluster_sharding_settings_have_default_config,The following statement contains a magic number: Assert.Equal(15' singletonConfig.GetInt("min-number-of-hand-over-retries"));
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingInternalsSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingInternalsSpec.cs,ExtractShardId,The following statement contains a magic number: switch (message)              {                  case int i:                      return (i % 10).ToString();              }
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingInternalsSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingInternalsSpec.cs,ClusterSharding_must_stop_entities_from_HandOffStopper_even_if_the_entity_doesnt_handle_handOffStopMessage,The following statement contains a magic number: var handOffStopper = Sys.ActorOf(                  Props.Create(() => new ShardRegion.HandOffStopper(shardName' probe.Ref' new IActorRef[] { emptyHandlerActor }' HandOffStopMessage.Instance' TimeSpan.FromMilliseconds(10)))                );
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingMessageSerializerSpec.cs,ClusterShardingMessageSerializer_must_be_able_to_serializable_ShardStats,The following statement contains a magic number: CheckSerialization(new Shard.ShardStats("a"' 23));
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingMessageSerializerSpec.cs,ClusterShardingMessageSerializer_must_be_able_to_serializable_ShardStats,The following statement contains a magic number: CheckSerialization(new ShardRegionStats(ImmutableDictionary<string' int>.Empty.Add("f"' 12)));
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingMessageSerializerSpec.cs,ClusterShardingMessageSerializer_must_serialize_ClusterShardingStats,The following statement contains a magic number: CheckSerialization(new GetClusterShardingStats(TimeSpan.FromMilliseconds(500)));
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingMessageSerializerSpec.cs,ClusterShardingMessageSerializer_must_serialize_ClusterShardingStats,The following statement contains a magic number: CheckSerialization(new ClusterShardingStats(ImmutableDictionary<Address' ShardRegionStats>.Empty.Add(new Address("akka.tcp"' "foo"' "localhost"' 9110)'                   new ShardRegionStats(ImmutableDictionary<string' int>.Empty.Add("f"' 12)))));
Magic Number,Akka.Cluster.Sharding.Tests,ClusterShardingMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingMessageSerializerSpec.cs,ClusterShardingMessageSerializer_must_serialize_ClusterShardingStats,The following statement contains a magic number: CheckSerialization(new ClusterShardingStats(ImmutableDictionary<Address' ShardRegionStats>.Empty.Add(new Address("akka.tcp"' "foo"' "localhost"' 9110)'                   new ShardRegionStats(ImmutableDictionary<string' int>.Empty.Add("f"' 12)))));
Magic Number,Akka.Cluster.Sharding.Tests,ConstantRateEntityRecoveryStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ConstantRateEntityRecoveryStrategySpec.cs,ConstantRateEntityRecoveryStrategySpec,The following statement contains a magic number: strategy = EntityRecoveryStrategy.ConstantStrategy(Sys' TimeSpan.FromSeconds(1)' 2);
Magic Number,Akka.Cluster.Sharding.Tests,ConstantRateEntityRecoveryStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ConstantRateEntityRecoveryStrategySpec.cs,ConstantRateEntityRecoveryStrategy_must_recover_entities,The following statement contains a magic number: result.Length.Should().Be(3);
Magic Number,Akka.Cluster.Sharding.Tests,ConstantRateEntityRecoveryStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ConstantRateEntityRecoveryStrategySpec.cs,ConstantRateEntityRecoveryStrategy_must_recover_entities,The following statement contains a magic number: scheduledEntities[0].Count.Should().Be(2);
Magic Number,Akka.Cluster.Sharding.Tests,ConstantRateEntityRecoveryStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ConstantRateEntityRecoveryStrategySpec.cs,ConstantRateEntityRecoveryStrategy_must_recover_entities,The following statement contains a magic number: scheduledEntities[1].Count.Should().Be(2);
Magic Number,Akka.Cluster.Sharding.Tests,ConstantRateEntityRecoveryStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ConstantRateEntityRecoveryStrategySpec.cs,ConstantRateEntityRecoveryStrategy_must_recover_entities,The following statement contains a magic number: scheduledEntities[2].Count.Should().Be(1);
Magic Number,Akka.Cluster.Sharding.Tests,ConstantRateEntityRecoveryStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ConstantRateEntityRecoveryStrategySpec.cs,ConstantRateEntityRecoveryStrategy_must_recover_entities,The following statement contains a magic number: timesMillis[0].Should().BeApproximately(1400' 500);
Magic Number,Akka.Cluster.Sharding.Tests,ConstantRateEntityRecoveryStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ConstantRateEntityRecoveryStrategySpec.cs,ConstantRateEntityRecoveryStrategy_must_recover_entities,The following statement contains a magic number: timesMillis[0].Should().BeApproximately(1400' 500);
Magic Number,Akka.Cluster.Sharding.Tests,ConstantRateEntityRecoveryStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ConstantRateEntityRecoveryStrategySpec.cs,ConstantRateEntityRecoveryStrategy_must_recover_entities,The following statement contains a magic number: timesMillis[1].Should().BeApproximately(2400' 500);
Magic Number,Akka.Cluster.Sharding.Tests,ConstantRateEntityRecoveryStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ConstantRateEntityRecoveryStrategySpec.cs,ConstantRateEntityRecoveryStrategy_must_recover_entities,The following statement contains a magic number: timesMillis[1].Should().BeApproximately(2400' 500);
Magic Number,Akka.Cluster.Sharding.Tests,ConstantRateEntityRecoveryStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ConstantRateEntityRecoveryStrategySpec.cs,ConstantRateEntityRecoveryStrategy_must_recover_entities,The following statement contains a magic number: timesMillis[2].Should().BeApproximately(3400' 500);
Magic Number,Akka.Cluster.Sharding.Tests,ConstantRateEntityRecoveryStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ConstantRateEntityRecoveryStrategySpec.cs,ConstantRateEntityRecoveryStrategy_must_recover_entities,The following statement contains a magic number: timesMillis[2].Should().BeApproximately(3400' 500);
Magic Number,Akka.Cluster.Sharding.Tests,ConstantRateEntityRecoveryStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ConstantRateEntityRecoveryStrategySpec.cs,ConstantRateEntityRecoveryStrategy_must_recover_entities,The following statement contains a magic number: timesMillis[2].Should().BeApproximately(3400' 500);
Magic Number,Akka.Cluster.Sharding.Tests,CoordinatedShutdownShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\CoordinatedShutdownShardingSpec.cs,PingEntities,The following statement contains a magic number: AwaitAssert(() =>              {                  _region2.Tell(1' _probe2.Ref);                  _probe2.ExpectMsg<int>(1.Seconds()).Should().Be(1);                  _region2.Tell(2' _probe2.Ref);                  _probe2.ExpectMsg<int>(1.Seconds()).Should().Be(2);                  _region2.Tell(3' _probe2.Ref);                  _probe2.ExpectMsg<int>(1.Seconds()).Should().Be(3);              }' TimeSpan.FromSeconds(10));
Magic Number,Akka.Cluster.Sharding.Tests,CoordinatedShutdownShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\CoordinatedShutdownShardingSpec.cs,PingEntities,The following statement contains a magic number: AwaitAssert(() =>              {                  _region2.Tell(1' _probe2.Ref);                  _probe2.ExpectMsg<int>(1.Seconds()).Should().Be(1);                  _region2.Tell(2' _probe2.Ref);                  _probe2.ExpectMsg<int>(1.Seconds()).Should().Be(2);                  _region2.Tell(3' _probe2.Ref);                  _probe2.ExpectMsg<int>(1.Seconds()).Should().Be(3);              }' TimeSpan.FromSeconds(10));
Magic Number,Akka.Cluster.Sharding.Tests,CoordinatedShutdownShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\CoordinatedShutdownShardingSpec.cs,PingEntities,The following statement contains a magic number: AwaitAssert(() =>              {                  _region2.Tell(1' _probe2.Ref);                  _probe2.ExpectMsg<int>(1.Seconds()).Should().Be(1);                  _region2.Tell(2' _probe2.Ref);                  _probe2.ExpectMsg<int>(1.Seconds()).Should().Be(2);                  _region2.Tell(3' _probe2.Ref);                  _probe2.ExpectMsg<int>(1.Seconds()).Should().Be(3);              }' TimeSpan.FromSeconds(10));
Magic Number,Akka.Cluster.Sharding.Tests,CoordinatedShutdownShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\CoordinatedShutdownShardingSpec.cs,PingEntities,The following statement contains a magic number: AwaitAssert(() =>              {                  _region2.Tell(1' _probe2.Ref);                  _probe2.ExpectMsg<int>(1.Seconds()).Should().Be(1);                  _region2.Tell(2' _probe2.Ref);                  _probe2.ExpectMsg<int>(1.Seconds()).Should().Be(2);                  _region2.Tell(3' _probe2.Ref);                  _probe2.ExpectMsg<int>(1.Seconds()).Should().Be(3);              }' TimeSpan.FromSeconds(10));
Magic Number,Akka.Cluster.Sharding.Tests,CoordinatedShutdownShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\CoordinatedShutdownShardingSpec.cs,PingEntities,The following statement contains a magic number: AwaitAssert(() =>              {                  _region2.Tell(1' _probe2.Ref);                  _probe2.ExpectMsg<int>(1.Seconds()).Should().Be(1);                  _region2.Tell(2' _probe2.Ref);                  _probe2.ExpectMsg<int>(1.Seconds()).Should().Be(2);                  _region2.Tell(3' _probe2.Ref);                  _probe2.ExpectMsg<int>(1.Seconds()).Should().Be(3);              }' TimeSpan.FromSeconds(10));
Magic Number,Akka.Cluster.Sharding.Tests,CoordinatedShutdownShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\CoordinatedShutdownShardingSpec.cs,InitCluster,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  AwaitAssert(() =>                  {                      Cluster.Get(_sys1).State.Members.Count.Should().Be(2);                      Cluster.Get(_sys1).State.Members.All(x => x.Status == MemberStatus.Up).Should().BeTrue();                      Cluster.Get(_sys2).State.Members.Count.Should().Be(2);                      Cluster.Get(_sys2).State.Members.All(x => x.Status == MemberStatus.Up).Should().BeTrue();                  });              });
Magic Number,Akka.Cluster.Sharding.Tests,CoordinatedShutdownShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\CoordinatedShutdownShardingSpec.cs,InitCluster,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  AwaitAssert(() =>                  {                      Cluster.Get(_sys1).State.Members.Count.Should().Be(2);                      Cluster.Get(_sys1).State.Members.All(x => x.Status == MemberStatus.Up).Should().BeTrue();                      Cluster.Get(_sys2).State.Members.Count.Should().Be(2);                      Cluster.Get(_sys2).State.Members.All(x => x.Status == MemberStatus.Up).Should().BeTrue();                  });              });
Magic Number,Akka.Cluster.Sharding.Tests,CoordinatedShutdownShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\CoordinatedShutdownShardingSpec.cs,InitCluster,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  AwaitAssert(() =>                  {                      Cluster.Get(_sys1).State.Members.Count.Should().Be(2);                      Cluster.Get(_sys1).State.Members.All(x => x.Status == MemberStatus.Up).Should().BeTrue();                      Cluster.Get(_sys2).State.Members.Count.Should().Be(2);                      Cluster.Get(_sys2).State.Members.All(x => x.Status == MemberStatus.Up).Should().BeTrue();                  });              });
Magic Number,Akka.Cluster.Sharding.Tests,CoordinatedShutdownShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\CoordinatedShutdownShardingSpec.cs,InitCluster,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  AwaitAssert(() =>                  {                      Cluster.Get(_sys1).State.Members.Count.Should().Be(3);                      Cluster.Get(_sys1).State.Members.All(x => x.Status == MemberStatus.Up).Should().BeTrue();                      Cluster.Get(_sys2).State.Members.Count.Should().Be(3);                      Cluster.Get(_sys2).State.Members.All(x => x.Status == MemberStatus.Up).Should().BeTrue();                      Cluster.Get(_sys3).State.Members.Count.Should().Be(3);                      Cluster.Get(_sys3).State.Members.All(x => x.Status == MemberStatus.Up).Should().BeTrue();                  });              });
Magic Number,Akka.Cluster.Sharding.Tests,CoordinatedShutdownShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\CoordinatedShutdownShardingSpec.cs,InitCluster,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  AwaitAssert(() =>                  {                      Cluster.Get(_sys1).State.Members.Count.Should().Be(3);                      Cluster.Get(_sys1).State.Members.All(x => x.Status == MemberStatus.Up).Should().BeTrue();                      Cluster.Get(_sys2).State.Members.Count.Should().Be(3);                      Cluster.Get(_sys2).State.Members.All(x => x.Status == MemberStatus.Up).Should().BeTrue();                      Cluster.Get(_sys3).State.Members.Count.Should().Be(3);                      Cluster.Get(_sys3).State.Members.All(x => x.Status == MemberStatus.Up).Should().BeTrue();                  });              });
Magic Number,Akka.Cluster.Sharding.Tests,CoordinatedShutdownShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\CoordinatedShutdownShardingSpec.cs,InitCluster,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  AwaitAssert(() =>                  {                      Cluster.Get(_sys1).State.Members.Count.Should().Be(3);                      Cluster.Get(_sys1).State.Members.All(x => x.Status == MemberStatus.Up).Should().BeTrue();                      Cluster.Get(_sys2).State.Members.Count.Should().Be(3);                      Cluster.Get(_sys2).State.Members.All(x => x.Status == MemberStatus.Up).Should().BeTrue();                      Cluster.Get(_sys3).State.Members.Count.Should().Be(3);                      Cluster.Get(_sys3).State.Members.All(x => x.Status == MemberStatus.Up).Should().BeTrue();                  });              });
Magic Number,Akka.Cluster.Sharding.Tests,CoordinatedShutdownShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\CoordinatedShutdownShardingSpec.cs,InitCluster,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  AwaitAssert(() =>                  {                      Cluster.Get(_sys1).State.Members.Count.Should().Be(3);                      Cluster.Get(_sys1).State.Members.All(x => x.Status == MemberStatus.Up).Should().BeTrue();                      Cluster.Get(_sys2).State.Members.Count.Should().Be(3);                      Cluster.Get(_sys2).State.Members.All(x => x.Status == MemberStatus.Up).Should().BeTrue();                      Cluster.Get(_sys3).State.Members.Count.Should().Be(3);                      Cluster.Get(_sys3).State.Members.All(x => x.Status == MemberStatus.Up).Should().BeTrue();                  });              });
Magic Number,Akka.Cluster.Sharding.Tests,CoordinatedShutdownShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\CoordinatedShutdownShardingSpec.cs,RunCoordinatedShutdownWhenLeaving,The following statement contains a magic number: Within(20.Seconds()' () =>              {                  AwaitAssert(() =>                  {                      Cluster.Get(_sys2).State.Members.Count.Should().Be(2);                      Cluster.Get(_sys3).State.Members.Count.Should().Be(2);                  });              });
Magic Number,Akka.Cluster.Sharding.Tests,CoordinatedShutdownShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\CoordinatedShutdownShardingSpec.cs,RunCoordinatedShutdownWhenLeaving,The following statement contains a magic number: Within(20.Seconds()' () =>              {                  AwaitAssert(() =>                  {                      Cluster.Get(_sys2).State.Members.Count.Should().Be(2);                      Cluster.Get(_sys3).State.Members.Count.Should().Be(2);                  });              });
Magic Number,Akka.Cluster.Sharding.Tests,CoordinatedShutdownShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\CoordinatedShutdownShardingSpec.cs,RunCoordinatedShutdownWhenLeaving,The following statement contains a magic number: Within(20.Seconds()' () =>              {                  AwaitAssert(() =>                  {                      Cluster.Get(_sys2).State.Members.Count.Should().Be(2);                      Cluster.Get(_sys3).State.Members.Count.Should().Be(2);                  });              });
Magic Number,Akka.Cluster.Sharding.Tests,CoordinatedShutdownShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\CoordinatedShutdownShardingSpec.cs,RunCoordinatedShutdownWhenLeaving,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  AwaitAssert(() =>                  {                      Cluster.Get(_sys1).IsTerminated.Should().BeTrue();                      _sys1.WhenTerminated.IsCompleted.Should().BeTrue();                  });              });
Magic Number,Akka.Cluster.Sharding.Tests,CoordinatedShutdownShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\CoordinatedShutdownShardingSpec.cs,RunCoordinatedShutdownWhenDowning,The following statement contains a magic number: Within(20.Seconds()' () =>              {                  AwaitAssert(() =>                  {                      Cluster.Get(_sys2).State.Members.Count.Should().Be(1);                  });              });
Magic Number,Akka.Cluster.Sharding.Tests,CoordinatedShutdownShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\CoordinatedShutdownShardingSpec.cs,RunCoordinatedShutdownWhenDowning,The following statement contains a magic number: Within(10.Seconds()' () =>              {                  AwaitAssert(() =>                  {                      Cluster.Get(_sys3).IsTerminated.Should().BeTrue();                      _sys3.WhenTerminated.IsCompleted.Should().BeTrue();                  });              });
Magic Number,Akka.Cluster.Sharding.Tests,GetShardTypeNamesSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\GetShardTypeNamesSpec.cs,ExtractShardId,The following statement contains a magic number: switch (message)              {                  case int i:                      return (i % 10).ToString();              }
Magic Number,Akka.Cluster.Sharding.Tests,AbstractInactiveEntityPassivationSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\InactiveEntityPassivationSpec.cs,TimeUntilPassivate,The following statement contains a magic number: region.Tell(2);
Magic Number,Akka.Cluster.Sharding.Tests,AbstractInactiveEntityPassivationSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\InactiveEntityPassivationSpec.cs,TimeUntilPassivate,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Akka.Cluster.Sharding.Tests,AbstractInactiveEntityPassivationSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\InactiveEntityPassivationSpec.cs,TimeUntilPassivate,The following statement contains a magic number: region.Tell(2);
Magic Number,Akka.Cluster.Sharding.Tests,AbstractInactiveEntityPassivationSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\InactiveEntityPassivationSpec.cs,TimeUntilPassivate,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Akka.Cluster.Sharding.Tests,AbstractInactiveEntityPassivationSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\InactiveEntityPassivationSpec.cs,TimeUntilPassivate,The following statement contains a magic number: region.Tell(2);
Magic Number,Akka.Cluster.Sharding.Tests,InactiveEntityPassivationSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\InactiveEntityPassivationSpec.cs,Passivation_of_inactive_entities_must_passivate_entities_when_they_have_not_seen_messages_for_the_configured_duration,The following statement contains a magic number: region.Tell(2);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategySpec,The following statement contains a magic number: _allocationStrategy = new LeastShardAllocationStrategy(3' 2);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategySpec,The following statement contains a magic number: _allocationStrategy = new LeastShardAllocationStrategy(3' 2);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_allocate_to_region_with_least_number_of_shards,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 3' maxSimultaneousRebalance: 10);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_allocate_to_region_with_least_number_of_shards,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 3' maxSimultaneousRebalance: 10);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_2_0_0_rebalanceThreshold_1,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 1' maxSimultaneousRebalance: 10);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_2_0_0_rebalanceThreshold_1,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 2);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_not_rebalance_when_diff_equal_to_threshold_1_1_0_rebalanceThreshold_1,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 1' maxSimultaneousRebalance: 10);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_1_2_0_rebalanceThreshold_1,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 1' maxSimultaneousRebalance: 10);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_1_2_0_rebalanceThreshold_1,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 1' bCount: 2);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_3_0_0_rebalanceThreshold_1,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 1' maxSimultaneousRebalance: 10);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_3_0_0_rebalanceThreshold_1,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 3);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_4_4_0_rebalanceThreshold_1,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 1' maxSimultaneousRebalance: 10);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_4_4_0_rebalanceThreshold_1,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 4' bCount: 4);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_4_4_0_rebalanceThreshold_1,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 4' bCount: 4);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_4_4_2_rebalanceThreshold_1,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 1' maxSimultaneousRebalance: 10);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_4_4_2_rebalanceThreshold_1,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 4' bCount: 4' cCount: 2);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_4_4_2_rebalanceThreshold_1,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 4' bCount: 4' cCount: 2);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_4_4_2_rebalanceThreshold_1,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 4' bCount: 4' cCount: 2);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_rebalance_from_region_with_most_number_of_shards_1_3_0_rebalanceThreshold_2,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 2' maxSimultaneousRebalance: 10);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_rebalance_from_region_with_most_number_of_shards_1_3_0_rebalanceThreshold_2,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 2' maxSimultaneousRebalance: 10);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_rebalance_from_region_with_most_number_of_shards_1_3_0_rebalanceThreshold_2,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 1' bCount: 2);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_rebalance_from_region_with_most_number_of_shards_1_3_0_rebalanceThreshold_2,The following statement contains a magic number: var allocations2 = CreateAllocations(aCount: 1' bCount: 3);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_not_rebalance_when_diff_equal_to_threshold_2_2_0_rebalanceThreshold_2,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 2' maxSimultaneousRebalance: 10);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_not_rebalance_when_diff_equal_to_threshold_2_2_0_rebalanceThreshold_2,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 2' maxSimultaneousRebalance: 10);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_not_rebalance_when_diff_equal_to_threshold_2_2_0_rebalanceThreshold_2,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 2' bCount: 2);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_not_rebalance_when_diff_equal_to_threshold_2_2_0_rebalanceThreshold_2,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 2' bCount: 2);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_3_3_0_rebalanceThreshold_2,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 2' maxSimultaneousRebalance: 10);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_3_3_0_rebalanceThreshold_2,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 2' maxSimultaneousRebalance: 10);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_3_3_0_rebalanceThreshold_2,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 3' bCount: 3);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_3_3_0_rebalanceThreshold_2,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 3' bCount: 3);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_4_4_0_rebalanceThreshold_2,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 2' maxSimultaneousRebalance: 10);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_4_4_0_rebalanceThreshold_2,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 2' maxSimultaneousRebalance: 10);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_4_4_0_rebalanceThreshold_2,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 4' bCount: 4);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_4_4_0_rebalanceThreshold_2,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 4' bCount: 4);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_5_5_0_rebalanceThreshold_2,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 2' maxSimultaneousRebalance: 10);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_5_5_0_rebalanceThreshold_2,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 2' maxSimultaneousRebalance: 10);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_5_5_0_rebalanceThreshold_2,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 5' bCount: 5);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_5_5_0_rebalanceThreshold_2,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 5' bCount: 5);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_50_50_0_rebalanceThreshold_2,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 2' maxSimultaneousRebalance: 100);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_50_50_0_rebalanceThreshold_2,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 2' maxSimultaneousRebalance: 100);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_50_50_0_rebalanceThreshold_2,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 50' bCount: 50);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_rebalance_from_region_with_most_number_of_shards_50_50_0_rebalanceThreshold_2,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 50' bCount: 50);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_limit_number_of_simultaneous_rebalance,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 3' maxSimultaneousRebalance: 2);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_limit_number_of_simultaneous_rebalance,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 3' maxSimultaneousRebalance: 2);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_limit_number_of_simultaneous_rebalance,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 1' bCount: 10);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_not_pick_shards_that_are_in_progress,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 3' maxSimultaneousRebalance: 4);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_not_pick_shards_that_are_in_progress,The following statement contains a magic number: var allocationStrategy = new LeastShardAllocationStrategy(rebalanceThreshold: 3' maxSimultaneousRebalance: 4);
Magic Number,Akka.Cluster.Sharding.Tests,LeastShardAllocationStrategySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\LeastShardAllocationStrategySpec.cs,LeastShardAllocationStrategy_must_not_pick_shards_that_are_in_progress,The following statement contains a magic number: var allocations = CreateAllocations(aCount: 10);
Magic Number,Akka.Cluster.Sharding.Tests,ProxyShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ProxyShardingSpec.cs,ShardResolver,The following statement contains a magic number: switch (message)              {                  case int i:                      return (i % 10).ToString();              }
Magic Number,Akka.Cluster.Sharding.Tests,ProxyShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ProxyShardingSpec.cs,ProxyShardingSpec_Proxy_should_be_found,The following statement contains a magic number: IActorRef proxyActor = Sys.ActorSelection("akka://test/system/sharding/myTypeProxy")                      .ResolveOne(TimeSpan.FromSeconds(5)).Result;
Magic Number,Akka.Cluster.Sharding.Tests,ProxyShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ProxyShardingSpec.cs,ProxyShardingSpec_Shard_coordinator_should_be_found,The following statement contains a magic number: IActorRef shardCoordinator = Sys.ActorSelection("akka://test/system/sharding/myTypeCoordinator")                      .ResolveOne(TimeSpan.FromSeconds(5)).Result;
Magic Number,Akka.Cluster.Sharding.Tests,SupervisionSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\SupervisionSpec.cs,SupervisionSpec_for_a_sharded_actor_must_allow_passivation,The following statement contains a magic number: var supervisedProps = BackoffSupervisor.Props(Backoff.OnStop(                  Props.Create<PassivatingActor>()'                  "child"'                  TimeSpan.FromSeconds(1)'                  TimeSpan.FromSeconds(30)'                  0.2'                  -1).WithFinalStopMessage(message => message is StopMessage));
Magic Number,Akka.Cluster.Sharding.Tests,SupervisionSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\SupervisionSpec.cs,SupervisionSpec_for_a_sharded_actor_must_allow_passivation,The following statement contains a magic number: var supervisedProps = BackoffSupervisor.Props(Backoff.OnStop(                  Props.Create<PassivatingActor>()'                  "child"'                  TimeSpan.FromSeconds(1)'                  TimeSpan.FromSeconds(30)'                  0.2'                  -1).WithFinalStopMessage(message => message is StopMessage));
Magic Number,Akka.Cluster.Sharding.Tests,SupervisionSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\SupervisionSpec.cs,SupervisionSpec_for_a_sharded_actor_must_allow_passivation,The following statement contains a magic number: region.Tell(new Msg(10' "hello"));
Magic Number,Akka.Cluster.Sharding.Tests,SupervisionSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\SupervisionSpec.cs,SupervisionSpec_for_a_sharded_actor_must_allow_passivation,The following statement contains a magic number: var response = ExpectMsg<Response>(TimeSpan.FromSeconds(5));
Magic Number,Akka.Cluster.Sharding.Tests,SupervisionSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\SupervisionSpec.cs,SupervisionSpec_for_a_sharded_actor_must_allow_passivation,The following statement contains a magic number: region.Tell(new Msg(10' "passivate"));
Magic Number,Akka.Cluster.Sharding.Tests,SupervisionSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\SupervisionSpec.cs,SupervisionSpec_for_a_sharded_actor_must_allow_passivation,The following statement contains a magic number: region.Tell(new Msg(10' "hello"));
Magic Number,Akka.Cluster.Sharding.Tests,SupervisionSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\SupervisionSpec.cs,SupervisionSpec_for_a_sharded_actor_must_allow_passivation,The following statement contains a magic number: ExpectMsg<Response>(TimeSpan.FromSeconds(20));
Missing Default,Akka.Cluster.Sharding.Tests,ClusterShardingInternalsSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingInternalsSpec.cs,ExtractEntityId,The following switch statement is missing a default case: switch (message)              {                  case int i:                      return (i.ToString()' message);              }
Missing Default,Akka.Cluster.Sharding.Tests,ClusterShardingInternalsSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ClusterShardingInternalsSpec.cs,ExtractShardId,The following switch statement is missing a default case: switch (message)              {                  case int i:                      return (i % 10).ToString();              }
Missing Default,Akka.Cluster.Sharding.Tests,GetShardTypeNamesSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\GetShardTypeNamesSpec.cs,ExtractEntityId,The following switch statement is missing a default case: switch (message)              {                  case int i:                      return (i.ToString()' message);              }
Missing Default,Akka.Cluster.Sharding.Tests,GetShardTypeNamesSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\GetShardTypeNamesSpec.cs,ExtractShardId,The following switch statement is missing a default case: switch (message)              {                  case int i:                      return (i % 10).ToString();              }
Missing Default,Akka.Cluster.Sharding.Tests,ProxyShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ProxyShardingSpec.cs,IdExtractor,The following switch statement is missing a default case: switch (message)              {                  case int i:                      return (i.ToString()' message);              }
Missing Default,Akka.Cluster.Sharding.Tests,ProxyShardingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\ProxyShardingSpec.cs,ShardResolver,The following switch statement is missing a default case: switch (message)              {                  case int i:                      return (i % 10).ToString();              }
Missing Default,Akka.Cluster.Sharding.Tests,PassivatingActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\contrib\cluster\Akka.Cluster.Sharding.Tests\SupervisionSpec.cs,OnReceive,The following switch statement is missing a default case: switch (message)                  {                      case "passivate":                          Log.Info("Passivating");                          Context.Parent.Tell(new Passivate(StopMessage.Instance));                          // simulate another message causing a stop before the region sends the stop message                          // e.g. a persistent actor having a persist failure while processing the next message                          Context.Stop(Self);                          break;                      case "hello":                          Sender.Tell(new Response(Self));                          break;                      case StopMessage _:                          Log.Info("Received stop from region");                          Context.Parent.Tell(PoisonPill.Instance);                          break;                  }
