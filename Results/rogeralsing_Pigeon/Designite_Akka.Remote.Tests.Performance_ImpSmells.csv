Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Akka.Remote.Tests.Performance,InboundMessageDispatcherSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Remote.Tests.Performance\InboundMessageDispatcherSpec.cs,,The length of the parameter MessageDispatcherThroughputCounterName is 38.
Long Identifier,Akka.Remote.Tests.Performance,InboundMessageDispatcherSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Remote.Tests.Performance\InboundMessageDispatcherSpec.cs,,The length of the parameter _inboundMessageDispatcherCounter is 32.
Long Statement,Akka.Remote.Tests.Performance,InboundMessageDispatcherSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Remote.Tests.Performance\InboundMessageDispatcherSpec.cs,Setup,The length of the statement  "            _dispatcher = new DefaultMessageDispatcher(_actorSystem.AsInstanceOf<ExtendedActorSystem>()' RARP.For(_actorSystem).Provider' _actorSystem.Log); " is 144.
Long Statement,Akka.Remote.Tests.Performance.Transports,RemoteMessagingThroughputSpecBase,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Remote.Tests.Performance\Transports\RemoteMessagingThroughputSpecBase.cs,Setup,The length of the statement  "            System1 = ActorSystem.Create("SystemA" + ActorSystemNameCounter.Next()' CreateActorSystemConfig("SystemA" + ActorSystemNameCounter.Current' "127.0.0.1"' 0)); " is 157.
Long Statement,Akka.Remote.Tests.Performance.Transports,RemoteMessagingThroughputSpecBase,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Remote.Tests.Performance\Transports\RemoteMessagingThroughputSpecBase.cs,Setup,The length of the statement  "            System2 = ActorSystem.Create("SystemB" + ActorSystemNameCounter.Next()' CreateActorSystemConfig("SystemB" + ActorSystemNameCounter.Current' "127.0.0.1"' 0)); " is 157.
Long Statement,Akka.Remote.Tests.Performance.Transports,RemoteMessagingThroughputSpecBase,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Remote.Tests.Performance\Transports\RemoteMessagingThroughputSpecBase.cs,PingPong,The length of the statement  "            SpinWait.SpinUntil(() => waiting.IsCompleted); // TODO: would get more accurate results if we could AWAIT and not block here. " is 125.
Magic Number,Akka.Remote.Tests.Performance.Transports,AssociationStressSpecBase,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Remote.Tests.Performance\Transports\AssociationStressSpecBase.cs,AssociationStress,The following statement contains a magic number: var remoteActor = system2.ActorSelection(system1EchoActorPath)                     .Ask<ActorIdentity>(new Identify(null)' TimeSpan.FromSeconds(2)).Result.Subject;
Magic Number,Akka.Remote.Tests.Performance.Transports,RemoteMessagingThroughputSpecBase,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Remote.Tests.Performance\Transports\RemoteMessagingThroughputSpecBase.cs,Setup,The following statement contains a magic number: var testReady = canStart.Ask<bool>(new AllStartedActor.AllStarted()' TimeSpan.FromSeconds(10)).Result;
Magic Number,Akka.Remote.Tests.Performance.Transports,AllStartedActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Remote.Tests.Performance\Transports\RemoteMessagingThroughputSpecBase.cs,OnReceive,The following statement contains a magic number: switch (message)                  {                      case IActorRef a:                          _actors.Add(a);                          break;                      case AllStarted a:                          var cts = new CancellationTokenSource(TimeSpan.FromSeconds(10));                          var s = Sender;                          var count = _actors.Count;                          var c = _correlationId++;                          var t = Task.WhenAll(_actors.Select(                              x => x.Ask<ActorIdentity>(new Identify(c)' cts.Token)));                          t.ContinueWith(tr =>                          {                              return tr.Result.Length == count && tr.Result.All(x => x.MessageId.Equals(c));                          }' TaskContinuationOptions.OnlyOnRanToCompletion).PipeTo(s);                          break;                  }
Magic Number,Akka.Remote.Tests.Performance.Transports,TestTransportAssociationStressSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Remote.Tests.Performance\Transports\TestTransportAssociationStressSpec.cs,CreateActorSystemConfig,The following statement contains a magic number: port = 10;
Magic Number,Akka.Remote.Tests.Performance.Transports,TestTransportRemoteMessagingThroughputSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Remote.Tests.Performance\Transports\TestTransportRemoteMessagingThroughputSpec.cs,CreateActorSystemConfig,The following statement contains a magic number: port = 10;
Missing Default,Akka.Remote.Tests.Performance.Transports,AllStartedActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Remote.Tests.Performance\Transports\RemoteMessagingThroughputSpecBase.cs,OnReceive,The following switch statement is missing a default case: switch (message)                  {                      case IActorRef a:                          _actors.Add(a);                          break;                      case AllStarted a:                          var cts = new CancellationTokenSource(TimeSpan.FromSeconds(10));                          var s = Sender;                          var count = _actors.Count;                          var c = _correlationId++;                          var t = Task.WhenAll(_actors.Select(                              x => x.Ask<ActorIdentity>(new Identify(c)' cts.Token)));                          t.ContinueWith(tr =>                          {                              return tr.Result.Length == count && tr.Result.All(x => x.MessageId.Equals(c));                          }' TaskContinuationOptions.OnlyOnRanToCompletion).PipeTo(s);                          break;                  }
