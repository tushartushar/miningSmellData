Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Akka.Persistence.Tests,Receiver,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,Receiver,The method has 7 parameters. Parameters: testActor' name' redeliverInterval' warn' redeliveryBurstLimit' isAsync' destinations
Long Parameter List,Akka.Persistence.Tests,Sender,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,Sender,The method has 7 parameters. Parameters: testActor' name' redeliverInterval' warn' redeliveryBurstLimit' isAsync' destinations
Long Parameter List,Akka.Persistence.Tests,FailingMemoryJournal,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorFailureSpec.cs,ReplayMessagesAsync,The method has 6 parameters. Parameters: context' persistenceId' fromSequenceNr' toSequenceNr' max' recoveryCallback
Long Parameter List,Akka.Persistence.Tests.Journal,ChaosJournal,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ChaosJournal.cs,ReplayMessagesAsync,The method has 6 parameters. Parameters: context' persistenceId' fromSequenceNr' toSequenceNr' max' recoveryCallback
Long Parameter List,Akka.Persistence.Tests.Journal,SteppingMemoryJournal,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\SteppingMemoryJournal.cs,ReplayMessagesAsync,The method has 6 parameters. Parameters: context' persistenceId' fromSequenceNr' toSequenceNr' max' recoveryCallback
Long Statement,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_many_lost_messages,The length of the statement  "            var sender = Sys.ActorOf(Props.Create(() => new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(1000)' 5' 1000' true' destinations))' Name); " is 144.
Long Statement,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_deliver_messages_in_order_when_nothing_is_lost,The length of the statement  "            var destinations = new Dictionary<string' ActorPath> { { "A"' Sys.ActorOf(Props.Create(() => new Destination(probe.Ref))).Path } }; " is 131.
Long Statement,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_deliver_messages_in_order_when_nothing_is_lost,The length of the statement  "            var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name); " is 142.
Long Statement,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_allow_using_ActorSelection_without_wildcards,The length of the statement  "            var destinations = new Dictionary<string' ActorPath> { { "A"' Sys.ActorOf(Props.Create(() => new Destination(probe.Ref))).Path } }; " is 131.
Long Statement,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_allow_using_ActorSelection_without_wildcards,The length of the statement  "            var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name); " is 142.
Long Statement,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_lost_messages,The length of the statement  "            var destinations = new Dictionary<string' ActorPath> { { "A"' Sys.ActorOf(Props.Create(() => new Unreliable(3' dest))).Path } }; " is 128.
Long Statement,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_lost_messages,The length of the statement  "            var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name); " is 142.
Long Statement,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_lost_messages_after_restart,The length of the statement  "            var destinations = new Dictionary<string' ActorPath> { { "A"' Sys.ActorOf(Props.Create(() => new Unreliable(3' dest))).Path } }; " is 128.
Long Statement,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_lost_messages_after_restart,The length of the statement  "            var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name); " is 142.
Long Statement,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The length of the statement  "            var destinations = new Dictionary<string' ActorPath> { { "A"' Sys.ActorOf(Props.Create(() => new Unreliable(2' dest))).Path } }; " is 128.
Long Statement,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The length of the statement  "            var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name); " is 142.
Long Statement,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The length of the statement  "            probe.ExpectMsg<Action>(a => a.Id == 4 && a.Payload == "a-4"' timeout: TimeSpan.FromSeconds(20));      // redelivered' 3th time " is 127.
Long Statement,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_restore_state_from_snapshot,The length of the statement  "            var destinations = new Dictionary<string' ActorPath> { { "A"' Sys.ActorOf(Props.Create(() => new Unreliable(3' dest))).Path } }; " is 128.
Long Statement,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_restore_state_from_snapshot,The length of the statement  "            var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name); " is 142.
Long Statement,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_warn_about_unconfirmed_messages,The length of the statement  "            var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 3' 1000' false' destinations))' Name); " is 142.
Long Statement,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_many_lost_messages,The length of the statement  "            var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(1000)' 5' 1000' true' destinations))' Name); " is 142.
Long Statement,Akka.Persistence.Tests,EndToEndEventAdapterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\EndToEndEventAdapterSpec.cs,Persister,The length of the statement  "            return (system ?? Sys).ActorOf(Props.Create(() => new EndToEndAdapterActor(name' "akka.persistence.journal." + _journalName' probe))); " is 134.
Long Statement,Akka.Persistence.Tests,TestPersistentActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ManyRecoveriesSpec.cs,ReceiveCommand,The length of the statement  "                    SaveSnapshot(new SnapshotTypeWithAFullyQualifiedNameLongerThan255BytesXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx( " is 269.
Long Statement,Akka.Persistence.Tests,MemoryEventAdapterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\MemoryEventAdapterSpec.cs,Persister,The length of the statement  "            return Sys.ActorOf(Props.Create(() => new PersistAllIncomingActor(name' "akka.persistence.journal." + (journalName ?? _journalName)))); " is 135.
Long Statement,Akka.Persistence.Tests,MemoryEventAdapterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\MemoryEventAdapterSpec.cs,ToJournal,The length of the statement  "            return Persistence.Instance.Apply(Sys).AdaptersFor("akka.persistence.journal." + journalName).Get(message.GetType()).ToJournal(message); " is 136.
Long Statement,Akka.Persistence.Tests,MemoryEventAdapterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\MemoryEventAdapterSpec.cs,FromJournal,The length of the statement  "            return Persistence.Instance.Apply(Sys).AdaptersFor("akka.persistence.journal." + journalName).Get(message.GetType()).FromJournal(message' string.Empty); " is 152.
Long Statement,Akka.Persistence.Tests,PersistenceSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistenceSpec.cs,ExpectAnyMsgInOrder,The length of the statement  "                    $"[{string.Join("'"' msg)}] should match any expected value {string.Join("'"' expected.Select(x => "[" + string.Join("'"' x) + "]"))}"); " is 136.
Long Statement,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_fail_fast_if_persistenceId_is_null,The length of the statement  "            EventFilter.Exception<ActorInitializationException>().And.Error(contains: "PersistenceId is [null] for PersistentActor").ExpectOne(() => " is 136.
Long Statement,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_allow_deeply_nested_Persist_calls,The length of the statement  "            ReceiveN(nestedPersists).Select(m => m.ToString()).ShouldOnlyContainInOrder(Enumerable.Range(1' nestedPersists).Select(i => "a-" + i).ToArray()); " is 145.
Long Statement,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_allow_deeply_nested_Persist_calls,The length of the statement  "            ReceiveN(nestedPersists).Select(m => m.ToString()).ShouldOnlyContainInOrder(Enumerable.Range(1' nestedPersists).Select(i => "b-" + i).ToArray()); " is 145.
Long Statement,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_allow_mixed_nesting_of_PersistAsync_in_Persist_calls,The length of the statement  "            ReceiveN(4).Select(m => m.ToString()).ToArray().ShouldOnlyContainInOrder("a-outer-1"' "a-outer-2"' "a-inner-async-1"' "a-inner-async-2"); " is 137.
Long Statement,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_allow_mixed_nesting_of_Persist_in_PersistAsync_calls,The length of the statement  "            ReceiveN(4).Select(m => m.ToString()).ToArray().ShouldOnlyContainInOrder("a-outer-async-1"' "a-outer-async-2"' "a-inner-1"' "a-inner-2"); " is 137.
Long Statement,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_fail_fast_if_persistenceId_is_null,The length of the statement  "            EventFilter.Exception<ActorInitializationException>().And.Error(contains: "PersistenceId is [null] for PersistentActor").ExpectOne(() => " is 136.
Long Statement,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_allow_deeply_nested_Persist_calls,The length of the statement  "            ReceiveN(nestedPersists).Select(m => m.ToString()).ShouldOnlyContainInOrder(Enumerable.Range(1' nestedPersists).Select(i => "a-" + i).ToArray()); " is 145.
Long Statement,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_allow_deeply_nested_Persist_calls,The length of the statement  "            ReceiveN(nestedPersists).Select(m => m.ToString()).ShouldOnlyContainInOrder(Enumerable.Range(1' nestedPersists).Select(i => "b-" + i).ToArray()); " is 145.
Long Statement,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_allow_mixed_nesting_of_PersistAsync_in_Persist_calls,The length of the statement  "            ReceiveN(4).Select(m => m.ToString()).ToArray().ShouldOnlyContainInOrder("a-outer-1"' "a-outer-2"' "a-inner-async-1"' "a-inner-async-2"); " is 137.
Long Statement,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_allow_mixed_nesting_of_Persist_in_PersistAsync_calls,The length of the statement  "            ReceiveN(4).Select(m => m.ToString()).ToArray().ShouldOnlyContainInOrder("a-outer-async-1"' "a-outer-async-2"' "a-inner-1"' "a-inner-2"); " is 137.
Long Statement,Akka.Persistence.Tests,PersistentActorStashingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorStashingSpec.cs,PersistentActor_should_support_user_stash_operations_with_several_stashed_messages,The length of the statement  "            var commands = Enumerable.Range(1' n).SelectMany(_ => new[] { new Cmd("a")' new Cmd("b-1")' new Cmd("b-2")' new Cmd("c")' }); " is 125.
Long Statement,Akka.Persistence.Tests,PersistentActorStashingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorStashingSpec.cs,PersistentActor_should_support_user_stash_operations_within_handler_with_several_stashed_messages,The length of the statement  "            var commands = Enumerable.Range(1' n).SelectMany(_ => new[] { new Cmd("a")' new Cmd("b-1")' new Cmd("b-2")' new Cmd("c")' }); " is 125.
Long Statement,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actors_should_be_able_to_block_ask_message_loop,The length of the statement  "            var actor = Sys.ActorOf(Props.Create(() => new AsyncAwaitActor("pid")).WithDispatcher("akka.actor.task-dispatcher")' "Worker"); " is 127.
Long Statement,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actors_should_be_able_to_block_ask_message_loop,The length of the statement  "            var asker = Sys.ActorOf(Props.Create(() => new BlockingAsker("pid"' actor)).WithDispatcher("akka.actor.task-dispatcher")' "Asker"); " is 131.
Long Statement,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Test_that_persistent_actor_cannot_call_receive_command_or_receive_event_out_of_construction_and_become,The length of the statement  "            var actor = Sys.ActorOf(Props.Create(() => new CallReceiveWhenHandlingMessageActor(pid))'"receive-on-handling-message"); " is 120.
Long Statement,Akka.Persistence.Tests,SnapshotFailureRobustnessSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotFailureRobustnessSpec.cs,PersistentActor_with_a_failing_snapshot_should_recover_state_starting_from_the_most_recent_complete_snapshot,The length of the statement  "            // var filter = EventFilter.Error(start: "Error loading snapshot").Mute(); // TODO for some reason filtering doesn't work " is 121.
Long Statement,Akka.Persistence.Tests,SnapshotFailureRobustnessSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotFailureRobustnessSpec.cs,PersistentActor_with_a_failing_snapshot_should_fail_recovery_and_stop_actor_when_no_snapshot_could_be_loaded,The length of the statement  "            // var filter = EventFilter.Error(start: "Error loading snapshot").Mute(); // TODO for some reason filtering doesn't work " is 121.
Long Statement,Akka.Persistence.Tests,SnapshotSerializationSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSerializationSpec.cs,PersistentActor_with_custom_Serializer_should_be_able_to_handle_serialization_header_of_more_than_255_bytes,The length of the statement  "            m.Snapshot.Equals(new SnapshotTypeWithAFullyQualifiedNameLongerThan255BytesXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx( " is 274.
Long Statement,Akka.Persistence.Tests,SnapshotTypeWithAFullyQualifiedNameLongerThan255BytesXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSerializationSpec.cs,Equals,The length of the statement  "                            SnapshotTypeWithAFullyQualifiedNameLongerThan255BytesXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx " is 251.
Long Statement,Akka.Persistence.Tests,MySerializer,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSerializationSpec.cs,ToBinary,The length of the statement  "                                SnapshotTypeWithAFullyQualifiedNameLongerThan255BytesXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx " is 251.
Long Statement,Akka.Persistence.Tests,MySerializer,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSerializationSpec.cs,ToBinary,The length of the statement  "                                    SnapshotTypeWithAFullyQualifiedNameLongerThan255BytesXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx " is 251.
Long Statement,Akka.Persistence.Tests,MySerializer,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSerializationSpec.cs,FromBinary,The length of the statement  "                        return new SnapshotTypeWithAFullyQualifiedNameLongerThan255BytesXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx(reader.ReadLine()); " is 282.
Long Statement,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_recover_state_starting_from_the_most_recent_snapshot_matching_an_upper_sequence_number_bound_without_further_replay,The length of the statement  "            var pref = ActorOf(() => new LoadSnapshotTestActor(Name' new Recovery(SnapshotSelectionCriteria.Latest' 4)' TestActor)); " is 120.
Long Statement,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_support_single_snapshot_deletions,The length of the statement  "            var pref = ActorOf(() => new DeleteSnapshotTestActor(Name' new Recovery(SnapshotSelectionCriteria.Latest' 4)' TestActor)); " is 122.
Long Statement,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_support_bulk_snapshot_deletions,The length of the statement  "            var pref = ActorOf(() => new DeleteSnapshotTestActor(Name' new Recovery(SnapshotSelectionCriteria.Latest' 4)' TestActor)); " is 122.
Long Statement,Akka.Persistence.Tests.Journal,MemoryEventAdaptersSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\MemoryEventAdaptersSpec.cs,EventAdapters_should_allow_implementing_only_the_write_side_IWriteEventAdapter,The length of the statement  "            writeAdapter.FromJournal(writeAdapter.ToJournal(new WriteMeEvent())' "").Events.First().Should().Be("to-WriteMeEvent()"); " is 121.
Long Statement,Akka.Persistence.Tests.Journal,SteppingMemoryJournal,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\SteppingMemoryJournal.cs,Config,The length of the statement  "akka.persistence.journal.stepping-inmem.class="""+ typeof(SteppingMemoryJournal).FullName + @"' Akka.Persistence.Tests"" " is 120.
Long Statement,Akka.Persistence.Tests.Serialization,PersistenceMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Serialization\PersistenceMessageSerializerSpec.cs,MessageSerializer_ToBinary_should_throw_an_exception_on_wrong_type,The length of the statement  "                .WithMessage($"Unimplemented deserialization of message with type [{typeof(string)}] in [{typeof(PersistenceMessageSerializer)}]"); " is 131.
Empty Catch Block,Akka.Persistence.Tests,Cleanup,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistenceSpec.cs,DeleteStorageLocations,The method has an empty catch block.
Empty Catch Block,Akka.Persistence.Tests,AsyncExceptionCatcherActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,AsyncExceptionCatcherActor,The method has an empty catch block.
Empty Catch Block,Akka.Persistence.Tests,SnapshotDirectoryFailureSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotDirectoryFailureSpec.cs,AtStartup,The method has an empty catch block.
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryCrashSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryCrashSpec.cs,AtLeastOnceDelivery_should_not_send_when_actor_crashes,The following statement contains a magic number: testProbe.ExpectNoMsg(TimeSpan.FromMilliseconds(250));
Magic Number,Akka.Persistence.Tests,StoppingStrategySupervisor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryCrashSpec.cs,SupervisorStrategy,The following statement contains a magic number: return new OneForOneStrategy(10' TimeSpan.FromSeconds(10)' reason =>                  {                      if (reason is IllegalActorStateException) return Directive.Stop;                      return Actor.SupervisorStrategy.DefaultDecider.Decide(reason);                  });
Magic Number,Akka.Persistence.Tests,StoppingStrategySupervisor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryCrashSpec.cs,SupervisorStrategy,The following statement contains a magic number: return new OneForOneStrategy(10' TimeSpan.FromSeconds(10)' reason =>                  {                      if (reason is IllegalActorStateException) return Directive.Stop;                      return Actor.SupervisorStrategy.DefaultDecider.Decide(reason);                  });
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_deliver_messages_in_order_when_nothing_is_lost,The following statement contains a magic number: IActorRef sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_deliver_messages_in_order_when_nothing_is_lost,The following statement contains a magic number: IActorRef sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_deliver_messages_in_order_when_nothing_is_lost,The following statement contains a magic number: IActorRef sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_lost_messages,The following statement contains a magic number: var destinations = new Dictionary<string' ActorPath>              {                  {"A"' Sys.ActorOf(Props.Create(() => new Unreliable(3' dest))).Path}              };
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_lost_messages,The following statement contains a magic number: IActorRef sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_lost_messages,The following statement contains a magic number: IActorRef sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_lost_messages,The following statement contains a magic number: IActorRef sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_lost_messages,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 2 && a.Payload == "a-2");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_lost_messages,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 4 && a.Payload == "a-4");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_lost_messages,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 3 && a.Payload == "a-3");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_lost_messages_after_restart,The following statement contains a magic number: var destinations = new Dictionary<string' ActorPath>              {                  {"A"' Sys.ActorOf(Props.Create(() => new Unreliable(3' dest))).Path}              };
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_lost_messages_after_restart,The following statement contains a magic number: IActorRef sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_lost_messages_after_restart,The following statement contains a magic number: IActorRef sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_lost_messages_after_restart,The following statement contains a magic number: IActorRef sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_lost_messages_after_restart,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 2 && a.Payload == "a-2");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_lost_messages_after_restart,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 4 && a.Payload == "a-4");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_lost_messages_after_restart,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 3 && a.Payload == "a-3");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_lost_messages_after_restart,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 5 && a.Payload == "a-5");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The following statement contains a magic number: var destinations = new Dictionary<string' ActorPath>              {                  {"A"' Sys.ActorOf(Props.Create(() => new Unreliable(2' dest))).Path}              };
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The following statement contains a magic number: IActorRef sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The following statement contains a magic number: IActorRef sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The following statement contains a magic number: IActorRef sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 3 && a.Payload == "a-3");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 2 && a.Payload == "a-2");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 5 && a.Payload == "a-5");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 4 && a.Payload == "a-4"' TimeSpan.FromSeconds(20));
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 4 && a.Payload == "a-4"' TimeSpan.FromSeconds(20));
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_restore_state_from_snapshot,The following statement contains a magic number: var destinations = new Dictionary<string' ActorPath>              {                  {"A"' Sys.ActorOf(Props.Create(() => new Unreliable(3' dest))).Path}              };
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_restore_state_from_snapshot,The following statement contains a magic number: IActorRef sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_restore_state_from_snapshot,The following statement contains a magic number: IActorRef sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_restore_state_from_snapshot,The following statement contains a magic number: IActorRef sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_restore_state_from_snapshot,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 2 && a.Payload == "a-2");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_restore_state_from_snapshot,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 4 && a.Payload == "a-4");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_restore_state_from_snapshot,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 3 && a.Payload == "a-3");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_restore_state_from_snapshot,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 5 && a.Payload == "a-5");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_warn_about_unconfirmed_messages,The following statement contains a magic number: IActorRef sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(500)' 3' 1000' false' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_warn_about_unconfirmed_messages,The following statement contains a magic number: IActorRef sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(500)' 3' 1000' false' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_warn_about_unconfirmed_messages,The following statement contains a magic number: IActorRef sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(500)' 3' 1000' false' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_warn_about_unconfirmed_messages,The following statement contains a magic number: UnconfirmedDelivery[] unconfirmed = ReceiveWhile(TimeSpan.FromSeconds(3)' x =>                  x is UnconfirmedWarning                      ? ((UnconfirmedWarning) x).UnconfirmedDeliveries                      : Enumerable.Empty<UnconfirmedDelivery>())                  .SelectMany(e => e).ToArray();
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_warn_about_unconfirmed_messages,The following statement contains a magic number: resultMessages.ShouldOnlyContainInOrder(new Action(1' "a-1")' new Action(2' "b-1")' new Action(3' "b-2"));
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_warn_about_unconfirmed_messages,The following statement contains a magic number: resultMessages.ShouldOnlyContainInOrder(new Action(1' "a-1")' new Action(2' "b-1")' new Action(3' "b-2"));
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_many_lost_messages,The following statement contains a magic number: var destinations = new Dictionary<string' ActorPath>              {                  { "A"' Sys.ActorOf(Props.Create(() => new Unreliable(2' destA))' "unreliable-a").Path }'                  { "B"' Sys.ActorOf(Props.Create(() => new Unreliable(5' destB))' "unreliable-b").Path }'                  { "C"' Sys.ActorOf(Props.Create(() => new Unreliable(3' destC))' "unreliable-c").Path }              };
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_many_lost_messages,The following statement contains a magic number: var destinations = new Dictionary<string' ActorPath>              {                  { "A"' Sys.ActorOf(Props.Create(() => new Unreliable(2' destA))' "unreliable-a").Path }'                  { "B"' Sys.ActorOf(Props.Create(() => new Unreliable(5' destB))' "unreliable-b").Path }'                  { "C"' Sys.ActorOf(Props.Create(() => new Unreliable(3' destC))' "unreliable-c").Path }              };
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_many_lost_messages,The following statement contains a magic number: var destinations = new Dictionary<string' ActorPath>              {                  { "A"' Sys.ActorOf(Props.Create(() => new Unreliable(2' destA))' "unreliable-a").Path }'                  { "B"' Sys.ActorOf(Props.Create(() => new Unreliable(5' destB))' "unreliable-b").Path }'                  { "C"' Sys.ActorOf(Props.Create(() => new Unreliable(3' destC))' "unreliable-c").Path }              };
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_many_lost_messages,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(1000)' 5' 1000' true' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_many_lost_messages,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(1000)' 5' 1000' true' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_many_lost_messages,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Receiver(TestActor' Name' TimeSpan.FromMilliseconds(1000)' 5' 1000' true' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_many_lost_messages,The following statement contains a magic number: const int n = 100;
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_redeliver_many_lost_messages,The following statement contains a magic number: var deliverWithin = TimeSpan.FromSeconds(20);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_limit_the_number_of_messages_redelivered_at_once,The following statement contains a magic number: var destinations = new Dictionary<string' ActorPath>              {                  {"A"' Sys.ActorOf(Props.Create(() => new Unreliable(2' dst))).Path}              };
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_limit_the_number_of_messages_redelivered_at_once,The following statement contains a magic number: var sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(probe.Ref' Name' TimeSpan.FromMilliseconds(1000)' 5' 2' true' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_limit_the_number_of_messages_redelivered_at_once,The following statement contains a magic number: var sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(probe.Ref' Name' TimeSpan.FromMilliseconds(1000)' 5' 2' true' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_limit_the_number_of_messages_redelivered_at_once,The following statement contains a magic number: var sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Receiver(probe.Ref' Name' TimeSpan.FromMilliseconds(1000)' 5' 2' true' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_limit_the_number_of_messages_redelivered_at_once,The following statement contains a magic number: const int N = 10;
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_limit_the_number_of_messages_redelivered_at_once,The following statement contains a magic number: probeA.ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_limit_the_number_of_messages_redelivered_at_once,The following statement contains a magic number: var toDeliver = Enumerable.Range(1' N).Where(i => i%2 == 0).Select(i => (long)i).ToList();
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliveryReceiveActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,PersistentReceive_must_limit_the_number_of_messages_redelivered_at_once,The following statement contains a magic number: probeA.ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,Action,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,GetHashCode,The following statement contains a magic number: return (Id.GetHashCode()*397) ^ (Payload != null ? Payload.GetHashCode() : 0);
Magic Number,Akka.Persistence.Tests,Action,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliveryReceiveActorSpec.cs,GetHashCode,The following statement contains a magic number: return (Id.GetHashCode() * 397) ^ (Payload != null ? Payload.GetHashCode() : 0);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_deliver_messages_in_order_when_nothing_is_lost,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_deliver_messages_in_order_when_nothing_is_lost,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_deliver_messages_in_order_when_nothing_is_lost,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_allow_using_ActorSelection_without_wildcards,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_allow_using_ActorSelection_without_wildcards,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_allow_using_ActorSelection_without_wildcards,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_lost_messages,The following statement contains a magic number: var destinations = new Dictionary<string' ActorPath> { { "A"' Sys.ActorOf(Props.Create(() => new Unreliable(3' dest))).Path } };
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_lost_messages,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_lost_messages,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_lost_messages,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_lost_messages,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 2 && a.Payload == "a-2");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_lost_messages,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 4 && a.Payload == "a-4");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_lost_messages,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 3 && a.Payload == "a-3");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_lost_messages_after_restart,The following statement contains a magic number: var destinations = new Dictionary<string' ActorPath> { { "A"' Sys.ActorOf(Props.Create(() => new Unreliable(3' dest))).Path } };
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_lost_messages_after_restart,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_lost_messages_after_restart,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_lost_messages_after_restart,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_lost_messages_after_restart,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 2 && a.Payload == "a-2");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_lost_messages_after_restart,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 4 && a.Payload == "a-4");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_lost_messages_after_restart,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 3 && a.Payload == "a-3");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_lost_messages_after_restart,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 5 && a.Payload == "a-5");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The following statement contains a magic number: var destinations = new Dictionary<string' ActorPath> { { "A"' Sys.ActorOf(Props.Create(() => new Unreliable(2' dest))).Path } };
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 3 && a.Payload == "a-3");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 2 && a.Payload == "a-2");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 5 && a.Payload == "a-5");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 4 && a.Payload == "a-4"' timeout: TimeSpan.FromSeconds(20));
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_resend_replayed_deliveries_with_an_initially_in_order_strategy_before_delivering_fresh_messages,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 4 && a.Payload == "a-4"' timeout: TimeSpan.FromSeconds(20));
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_restore_state_from_snapshot,The following statement contains a magic number: var destinations = new Dictionary<string' ActorPath> { { "A"' Sys.ActorOf(Props.Create(() => new Unreliable(3' dest))).Path } };
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_restore_state_from_snapshot,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_restore_state_from_snapshot,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_restore_state_from_snapshot,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 5' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_restore_state_from_snapshot,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 2 && a.Payload == "a-2");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_restore_state_from_snapshot,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 4 && a.Payload == "a-4");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_restore_state_from_snapshot,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 3 && a.Payload == "a-3");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_restore_state_from_snapshot,The following statement contains a magic number: probe.ExpectMsg<Action>(a => a.Id == 5 && a.Payload == "a-5");
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_warn_about_unconfirmed_messages,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 3' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_warn_about_unconfirmed_messages,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 3' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_warn_about_unconfirmed_messages,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(500)' 3' 1000' false' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_warn_about_unconfirmed_messages,The following statement contains a magic number: var unconfirmed = ReceiveWhile(TimeSpan.FromSeconds(3)' x =>                  x is UnconfirmedWarning ? ((UnconfirmedWarning)x).UnconfirmedDeliveries : Enumerable.Empty<UnconfirmedDelivery>())                  .SelectMany(e => e).ToArray();
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_warn_about_unconfirmed_messages,The following statement contains a magic number: resultMessages.ShouldOnlyContainInOrder(new Action(1' "a-1")' new Action(2' "b-1")' new Action(3' "b-2"));
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_warn_about_unconfirmed_messages,The following statement contains a magic number: resultMessages.ShouldOnlyContainInOrder(new Action(1' "a-1")' new Action(2' "b-1")' new Action(3' "b-2"));
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_many_lost_messages,The following statement contains a magic number: var destinations = new Dictionary<string' ActorPath>              {                  { "A"' Sys.ActorOf(Props.Create(() => new Unreliable(2' destA))' "unreliable-a").Path }'                  { "B"' Sys.ActorOf(Props.Create(() => new Unreliable(5' destB))' "unreliable-b").Path }'                  { "C"' Sys.ActorOf(Props.Create(() => new Unreliable(3' destC))' "unreliable-c").Path }              };
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_many_lost_messages,The following statement contains a magic number: var destinations = new Dictionary<string' ActorPath>              {                  { "A"' Sys.ActorOf(Props.Create(() => new Unreliable(2' destA))' "unreliable-a").Path }'                  { "B"' Sys.ActorOf(Props.Create(() => new Unreliable(5' destB))' "unreliable-b").Path }'                  { "C"' Sys.ActorOf(Props.Create(() => new Unreliable(3' destC))' "unreliable-c").Path }              };
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_many_lost_messages,The following statement contains a magic number: var destinations = new Dictionary<string' ActorPath>              {                  { "A"' Sys.ActorOf(Props.Create(() => new Unreliable(2' destA))' "unreliable-a").Path }'                  { "B"' Sys.ActorOf(Props.Create(() => new Unreliable(5' destB))' "unreliable-b").Path }'                  { "C"' Sys.ActorOf(Props.Create(() => new Unreliable(3' destC))' "unreliable-c").Path }              };
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_many_lost_messages,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(1000)' 5' 1000' true' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_many_lost_messages,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(1000)' 5' 1000' true' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_many_lost_messages,The following statement contains a magic number: var sender = Sys.ActorOf(Props.Create(() => new Sender(TestActor' Name' TimeSpan.FromMilliseconds(1000)' 5' 1000' true' destinations))' Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_many_lost_messages,The following statement contains a magic number: const int n = 100;
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_redeliver_many_lost_messages,The following statement contains a magic number: var deliverWithin = TimeSpan.FromSeconds(20);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_limit_the_number_of_messages_redelivered_at_once,The following statement contains a magic number: var destinations = new Dictionary<string' ActorPath>              {                  {"A"' Sys.ActorOf(Props.Create(() => new Unreliable(2' dst))).Path}              };
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_limit_the_number_of_messages_redelivered_at_once,The following statement contains a magic number: var sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Sender(probe.Ref' Name' TimeSpan.FromMilliseconds(1000)' 5' 2' true' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_limit_the_number_of_messages_redelivered_at_once,The following statement contains a magic number: var sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Sender(probe.Ref' Name' TimeSpan.FromMilliseconds(1000)' 5' 2' true' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_limit_the_number_of_messages_redelivered_at_once,The following statement contains a magic number: var sender =                  Sys.ActorOf(                      Props.Create(                          () =>                              new Sender(probe.Ref' Name' TimeSpan.FromMilliseconds(1000)' 5' 2' true' destinations))'                      Name);
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_limit_the_number_of_messages_redelivered_at_once,The following statement contains a magic number: const int N = 10;
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_limit_the_number_of_messages_redelivered_at_once,The following statement contains a magic number: probeA.ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_limit_the_number_of_messages_redelivered_at_once,The following statement contains a magic number: var toDeliver = Enumerable.Range(1' N).Where(i => i%2 == 0).Select(i => (long)i).ToList();
Magic Number,Akka.Persistence.Tests,AtLeastOnceDeliverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtLeastOnceDeliverySpec.cs,AtLeastOnceDelivery_must_limit_the_number_of_messages_redelivered_at_once,The following statement contains a magic number: probeA.ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,AtomicWriteSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtomicWriteSpec.cs,AtomicWrite_must_only_contain_messages_for_the_same_persistence_id,The following statement contains a magic number: new AtomicWrite(ImmutableList.Create<IPersistentRepresentation>(                      new Persistent(""' 1' "p1")'                      new Persistent(""' 2' "p1")                      )).PersistenceId.ShouldBe("p1");
Magic Number,Akka.Persistence.Tests,AtomicWriteSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtomicWriteSpec.cs,AtomicWrite_must_only_contain_messages_for_the_same_persistence_id,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>                  new AtomicWrite(ImmutableList.Create<IPersistentRepresentation>(                      new Persistent(""' 1' "p1")'                      new Persistent(""' 2' "p1")'                      new Persistent(""' 3' "p2")))                  );
Magic Number,Akka.Persistence.Tests,AtomicWriteSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtomicWriteSpec.cs,AtomicWrite_must_only_contain_messages_for_the_same_persistence_id,The following statement contains a magic number: Assert.Throws<ArgumentException>(() =>                  new AtomicWrite(ImmutableList.Create<IPersistentRepresentation>(                      new Persistent(""' 1' "p1")'                      new Persistent(""' 2' "p1")'                      new Persistent(""' 3' "p2")))                  );
Magic Number,Akka.Persistence.Tests,AtomicWriteSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtomicWriteSpec.cs,AtomicWrite_must_have_correct_HighestSequenceNr,The following statement contains a magic number: new AtomicWrite(ImmutableList.Create<IPersistentRepresentation>(                      new Persistent(""' 1' "p1")'                      new Persistent(""' 2' "p1")'                      new Persistent(""' 3' "p1")                      )).HighestSequenceNr.ShouldBe(3);
Magic Number,Akka.Persistence.Tests,AtomicWriteSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtomicWriteSpec.cs,AtomicWrite_must_have_correct_HighestSequenceNr,The following statement contains a magic number: new AtomicWrite(ImmutableList.Create<IPersistentRepresentation>(                      new Persistent(""' 1' "p1")'                      new Persistent(""' 2' "p1")'                      new Persistent(""' 3' "p1")                      )).HighestSequenceNr.ShouldBe(3);
Magic Number,Akka.Persistence.Tests,AtomicWriteSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtomicWriteSpec.cs,AtomicWrite_must_have_correct_HighestSequenceNr,The following statement contains a magic number: new AtomicWrite(ImmutableList.Create<IPersistentRepresentation>(                      new Persistent(""' 1' "p1")'                      new Persistent(""' 2' "p1")'                      new Persistent(""' 3' "p1")                      )).HighestSequenceNr.ShouldBe(3);
Magic Number,Akka.Persistence.Tests,AtomicWriteSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtomicWriteSpec.cs,AtomicWrite_must_have_correct_LowestSequenceNr,The following statement contains a magic number: new AtomicWrite(ImmutableList.Create<IPersistentRepresentation>(                      new Persistent(""' 2' "p1")'                      new Persistent(""' 3' "p1")'                      new Persistent(""' 4' "p1")                      )).LowestSequenceNr.ShouldBe(2);
Magic Number,Akka.Persistence.Tests,AtomicWriteSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtomicWriteSpec.cs,AtomicWrite_must_have_correct_LowestSequenceNr,The following statement contains a magic number: new AtomicWrite(ImmutableList.Create<IPersistentRepresentation>(                      new Persistent(""' 2' "p1")'                      new Persistent(""' 3' "p1")'                      new Persistent(""' 4' "p1")                      )).LowestSequenceNr.ShouldBe(2);
Magic Number,Akka.Persistence.Tests,AtomicWriteSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtomicWriteSpec.cs,AtomicWrite_must_have_correct_LowestSequenceNr,The following statement contains a magic number: new AtomicWrite(ImmutableList.Create<IPersistentRepresentation>(                      new Persistent(""' 2' "p1")'                      new Persistent(""' 3' "p1")'                      new Persistent(""' 4' "p1")                      )).LowestSequenceNr.ShouldBe(2);
Magic Number,Akka.Persistence.Tests,AtomicWriteSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\AtomicWriteSpec.cs,AtomicWrite_must_have_correct_LowestSequenceNr,The following statement contains a magic number: new AtomicWrite(ImmutableList.Create<IPersistentRepresentation>(                      new Persistent(""' 2' "p1")'                      new Persistent(""' 3' "p1")'                      new Persistent(""' 4' "p1")                      )).LowestSequenceNr.ShouldBe(2);
Magic Number,Akka.Persistence.Tests,LoadPluginSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\LoadPluginSpec.cs,Plugin_with_config_parameter_should_be_created_with_plugin_config,The following statement contains a magic number: ExpectMsg<Config>(c => c.GetInt("extra-property") == 17);
Magic Number,Akka.Persistence.Tests,ManyRecoveriesSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ManyRecoveriesSpec.cs,Many_persistent_actors_must_be_able_to_recover_without_overloading,The following statement contains a magic number: Enumerable.Range(1' 100).ForEach(n =>              {                  Sys.ActorOf(TestPersistentActor.Props($"a{n}"' null)).Tell(new Cmd("A"));                  ExpectMsg($"a{n}-A-1");              });
Magic Number,Akka.Persistence.Tests,ManyRecoveriesSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ManyRecoveriesSpec.cs,Many_persistent_actors_must_be_able_to_recover_without_overloading,The following statement contains a magic number: Enumerable.Range(1' 100).ForEach(n =>              {                  Sys.ActorOf(TestPersistentActor.Props($"a{n}"' latch)).Tell(new Cmd("B"));              });
Magic Number,Akka.Persistence.Tests,ManyRecoveriesSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ManyRecoveriesSpec.cs,Many_persistent_actors_must_be_able_to_recover_without_overloading,The following statement contains a magic number: Enumerable.Range(1' 10).ForEach(n =>              {                  Sys.ActorOf(EchoActor.Props(this)).Tell(n);                  ExpectMsg(n);              });
Magic Number,Akka.Persistence.Tests,ManyRecoveriesSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ManyRecoveriesSpec.cs,Many_persistent_actors_must_be_able_to_recover_without_overloading,The following statement contains a magic number: ReceiveN(100).ShouldAllBeEquivalentTo(Enumerable.Range(1' 100).Select(n => $"a{n}-B-2"));
Magic Number,Akka.Persistence.Tests,ManyRecoveriesSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ManyRecoveriesSpec.cs,Many_persistent_actors_must_be_able_to_recover_without_overloading,The following statement contains a magic number: ReceiveN(100).ShouldAllBeEquivalentTo(Enumerable.Range(1' 100).Select(n => $"a{n}-B-2"));
Magic Number,Akka.Persistence.Tests,TestPersistentActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ManyRecoveriesSpec.cs,OnRecover,The following statement contains a magic number: Latch?.Ready(TimeSpan.FromSeconds(10));
Magic Number,Akka.Persistence.Tests,MemoryEventAdapterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\MemoryEventAdapterSpec.cs,EventAdapter_should_wrap_with_tags,The following statement contains a magic number: var e = new UserDataChanged("name"' 42);
Magic Number,Akka.Persistence.Tests,MemoryEventAdapterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\MemoryEventAdapterSpec.cs,EventAdapter_should_unwrap_when_reading,The following statement contains a magic number: var e = new UserDataChanged("name"' 42);
Magic Number,Akka.Persistence.Tests,MemoryEventAdapterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\MemoryEventAdapterSpec.cs,EventAdapter_should_create_adapter_requiring_actor_system,The following statement contains a magic number: var e = new UserDataChanged("name"' 42);
Magic Number,Akka.Persistence.Tests,MemoryEventAdapterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\MemoryEventAdapterSpec.cs,EventAdapter_should_store_events_after_applying_adapter,The following statement contains a magic number: var m1 = new UserDataChanged("name"' 64);
Magic Number,Akka.Persistence.Tests,MemoryEventAdapterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\MemoryEventAdapterSpec.cs,EventAdapter_should_work_when_plugin_defines_no_adapter,The following statement contains a magic number: var m1 = new UserDataChanged("name"' 64);
Magic Number,Akka.Persistence.Tests,UserAgeTaggingAdapter,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\MemoryEventAdapterSpec.cs,ToJournal,The following statement contains a magic number: return new Tagged(e' e.Age > 18 ? Adult : Minor);
Magic Number,Akka.Persistence.Tests,OptimizedRecoverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\OptimizedRecoverySpec.cs,OptimizedRecoverySpec,The following statement contains a magic number: ExpectMsg(new Saved("a"' 2));
Magic Number,Akka.Persistence.Tests,OptimizedRecoverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\OptimizedRecoverySpec.cs,OptimizedRecoverySpec,The following statement contains a magic number: ExpectMsg(new Saved("b"' 3));
Magic Number,Akka.Persistence.Tests,OptimizedRecoverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\OptimizedRecoverySpec.cs,OptimizedRecoverySpec,The following statement contains a magic number: ExpectMsg(new Saved("c"' 4));
Magic Number,Akka.Persistence.Tests,OptimizedRecoverySpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\OptimizedRecoverySpec.cs,Persistence_must_get_RecoveryCompleted_but_no_SnapshotOffer_and_events_when_Recovery_none,The following statement contains a magic number: ExpectMsg(new Saved("d"' 6));
Magic Number,Akka.Persistence.Tests,PersistenceConfigAutoStartSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistenceConfigAutoStartSpec.cs,Persistence_should_auto_start_journal_and_snapshotstore_when_specified,The following statement contains a magic number: EventFilter.Info(message: "Auto-starting journal plugin `akka.persistence.journal.test`")                  .And.Info(message: "Auto-starting snapshot store `akka.persistence.snapshot-store.test`").Expect(2' () =>              {                  var persistence = Persistence.Instance.Apply(Sys);              });
Magic Number,Akka.Persistence.Tests,PersistentActorDeleteFailureSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorDeleteFailureSpec.cs,PersistentActor_should_have_default_warn_logging_be_triggered_when_deletion_failed,The following statement contains a magic number: pref.Tell(new DeleteTo(100));
Magic Number,Akka.Persistence.Tests,PersistentActorDeleteFailureSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorDeleteFailureSpec.cs,PersistentActor_should_receive_a_DeleteMessagesFailure_when_deletion_failed_and_the_default_logging_should_not_be_triggered,The following statement contains a magic number: pref.Tell(new DeleteTo(100));
Magic Number,Akka.Persistence.Tests,PersistentActorDeleteFailureSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorDeleteFailureSpec.cs,PersistentActor_should_receive_a_DeleteMessagesFailure_when_deletion_failed_and_the_default_logging_should_not_be_triggered,The following statement contains a magic number: ExpectMsg<DeleteMessagesFailure>(m => m.ToSequenceNr == 100);
Magic Number,Akka.Persistence.Tests,PersistentActorDeleteFailureSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorDeleteFailureSpec.cs,PersistentActor_should_receive_a_DeleteMessagesFailure_when_deletion_failed_and_the_default_logging_should_not_be_triggered,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_simple_Persist,The following statement contains a magic number: subject.Tell(new Persist(2' "a-2"));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_simple_Persist,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(300));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_simple_Persist,The following statement contains a magic number: ExpectMsg<Done>(m => m.Id == 2 && m.Sub == 1);
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_nested_Persist,The following statement contains a magic number: subject.Tell(new Persist(1' new Persist(2' "a-1")));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_nested_Persist,The following statement contains a magic number: var w1 = ExpectWrite(subject' new Msgs(new Persist(2' "a-1")));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_nested_Persist,The following statement contains a magic number: subject.Tell(new Persist(3' "a-2"));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_nested_Persist,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(300));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_nested_Persist,The following statement contains a magic number: ExpectMsg<Done>(m => m.Id == 2 && m.Sub == 1);
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_nested_Persist,The following statement contains a magic number: ExpectMsg<Done>(m => m.Id == 3 && m.Sub == 1);
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_nested_multiple_Persist,The following statement contains a magic number: subject.Tell(new Multi(new Persist(1' new Persist(2' "a-1"))' new Persist(3' "a-2")));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_nested_multiple_Persist,The following statement contains a magic number: subject.Tell(new Multi(new Persist(1' new Persist(2' "a-1"))' new Persist(3' "a-2")));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_nested_multiple_Persist,The following statement contains a magic number: var w1 = ExpectWrite(subject' new Msgs(new Persist(2' "a-1"))' new Msgs("a-2"));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_nested_multiple_Persist,The following statement contains a magic number: ExpectMsg<Done>(m => m.Id == 3 && m.Sub == 1);
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_nested_multiple_Persist,The following statement contains a magic number: ExpectMsg<Done>(m => m.Id == 2 && m.Sub == 1);
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_Persist_calls,The following statement contains a magic number: subject.Tell(new Multi(Enumerable.Range(0' 30).Select(i => new Persist(i' "a-" + i)).Cast<ICommand>().ToArray()));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_Persist_calls,The following statement contains a magic number: var w1 = ExpectWrite(subject' Enumerable.Range(0' 30).Select(i => new Msgs("a-" + i)).ToArray());
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_Persist_calls,The following statement contains a magic number: i < 30
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_PersistAsync_calls,The following statement contains a magic number: Action<int' int> expectDone = (start' end) =>              {                  for (int i = start; i < end; i++)                  {                      for (int j = 1; j <= 2; j++)                      {                          ExpectMsg<Done>(m => m.Id == i && m.Sub == j);                      }                  }              };
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_PersistAsync_calls,The following statement contains a magic number: subject.Tell(new PersistAsync(-1' new List<object> { "a" }.Union(commands(20' 30)).ToArray()));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_PersistAsync_calls,The following statement contains a magic number: subject.Tell(new PersistAsync(-1' new List<object> { "a" }.Union(commands(20' 30)).ToArray()));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_PersistAsync_calls,The following statement contains a magic number: subject.Tell(new Multi(commands(0' 10)));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_PersistAsync_calls,The following statement contains a magic number: subject.Tell(new Multi(commands(10' 20)));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_PersistAsync_calls,The following statement contains a magic number: subject.Tell(new Multi(commands(10' 20)));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_PersistAsync_calls,The following statement contains a magic number: var w0 = ExpectWrite(subject' new Msgs(new List<object> { "a" }.Union(commands(20' 30)).ToArray()));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_PersistAsync_calls,The following statement contains a magic number: var w0 = ExpectWrite(subject' new Msgs(new List<object> { "a" }.Union(commands(20' 30)).ToArray()));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_PersistAsync_calls,The following statement contains a magic number: _journal.ExpectNoMsg(TimeSpan.FromMilliseconds(300));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_PersistAsync_calls,The following statement contains a magic number: i <= 11
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_PersistAsync_calls,The following statement contains a magic number: var w1 = ExpectWrite(subject' msgs(0' 20));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_PersistAsync_calls,The following statement contains a magic number: _journal.ExpectNoMsg(TimeSpan.FromMilliseconds(300));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_PersistAsync_calls,The following statement contains a magic number: expectDone(0' 20);
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_PersistAsync_calls,The following statement contains a magic number: var w2 = ExpectWrite(subject' msgs(20' 30));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_PersistAsync_calls,The following statement contains a magic number: var w2 = ExpectWrite(subject' msgs(20' 30));
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_PersistAsync_calls,The following statement contains a magic number: expectDone(20' 30);
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_using_large_number_of_PersistAsync_calls,The following statement contains a magic number: expectDone(20' 30);
Magic Number,Akka.Persistence.Tests,PersistentActorJournalProtocolSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,PersistentActor_journal_protocol_should_not_send_WriteMessages_while_a_write_is_still_outstanding_when_the_actor_fails_with_queued_events,The following statement contains a magic number: subject.Tell(new PersistAsync(2' "a-2"));
Magic Number,Akka.Persistence.Tests,Persist,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,GetHashCode,The following statement contains a magic number: return (Id*397) ^ (Messages != null ? Messages.GetHashCode() : 0);
Magic Number,Akka.Persistence.Tests,PersistAsync,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorJournalProtocolSpec.cs,GetHashCode,The following statement contains a magic number: return (Id*397) ^ (Messages != null ? Messages.GetHashCode() : 0);
Magic Number,Akka.Persistence.Tests,PersistentActorRecoveryTimeoutSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorRecoveryTimeoutSpec.cs,PersistentActorRecoveryTimeoutSpec,The following statement contains a magic number: AwaitAssert(() => SteppingMemoryJournal.GetRef(JournalId)' TimeSpan.FromSeconds(3));
Magic Number,Akka.Persistence.Tests,PersistentActorRecoveryTimeoutSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorRecoveryTimeoutSpec.cs,The_recovery_timeout_should_not_interfere_with_receive_timeout,The following statement contains a magic number: var timeout = TimeSpan.FromDays(42);
Magic Number,Akka.Persistence.Tests,BehaviorOneActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,Receiver,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                          PersistAll(new[] { new Evt(cmd.Data + "-1")' new Evt(cmd.Data + "-2") }' UpdateStateHandler);                      });
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_be_able_to_persist_value_types_as_events,The following statement contains a magic number: ExpectMsg(5L);
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_support_multiple_PersistAsync_calls_for_one_command_and_execute_them_when_possible_not_hindering_command_processing,The following statement contains a magic number: var commands = Enumerable.Range(1' 10).Select(i => new Cmd("c-" + i)).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_support_multiple_PersistAsync_calls_for_one_command_and_execute_them_when_possible_not_hindering_command_processing,The following statement contains a magic number: Thread.Sleep(_random.Next(10));
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_support_multiple_PersistAsync_calls_for_one_command_and_execute_them_when_possible_not_hindering_command_processing,The following statement contains a magic number: var all = ReceiveN(40).Select(x => x.ToString()).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_support_multiple_PersistAsync_calls_for_one_command_and_execute_them_when_possible_not_hindering_command_processing,The following statement contains a magic number: var expectedAcks = Enumerable.Range(3' 30).Select(i => "a-" + (i / 3) + "-" + (i - 2)).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_support_multiple_PersistAsync_calls_for_one_command_and_execute_them_when_possible_not_hindering_command_processing,The following statement contains a magic number: var expectedAcks = Enumerable.Range(3' 30).Select(i => "a-" + (i / 3) + "-" + (i - 2)).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_support_multiple_PersistAsync_calls_for_one_command_and_execute_them_when_possible_not_hindering_command_processing,The following statement contains a magic number: var expectedAcks = Enumerable.Range(3' 30).Select(i => "a-" + (i / 3) + "-" + (i - 2)).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_support_multiple_PersistAsync_calls_for_one_command_and_execute_them_when_possible_not_hindering_command_processing,The following statement contains a magic number: var expectedAcks = Enumerable.Range(3' 30).Select(i => "a-" + (i / 3) + "-" + (i - 2)).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_support_multiple_PersistAsync_calls_for_one_command_and_execute_them_when_possible_not_hindering_command_processing,The following statement contains a magic number: var acks = all.Where(r => r.Count(c => c == '-') == 2);
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_reply_to_the_original_sender_of_a_command_even_on_PersistAsync,The following statement contains a magic number: var commands = Enumerable.Range(1' 10).Select(i => new Cmd("c-" + i)).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_reply_to_the_original_sender_of_a_command_even_on_PersistAsync,The following statement contains a magic number: var probes = Enumerable.Range(1' 10).Select(_ => CreateTestProbe()).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_reply_to_the_original_sender_of_a_command_even_on_PersistAsync,The following statement contains a magic number: i < 10
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_reply_to_the_original_sender_of_a_command_even_on_PersistAsync,The following statement contains a magic number: Within(TimeSpan.FromSeconds(3)' () =>              {                  foreach (var probe in probes)                  {                      probe.ExpectMsgAllOf<string>();                  }              });
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_support_the_same_event_being_PersistAsynced_multiple_times,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_support_a_mix_of_persist_calls_sync_async_sync_and_persist_calls_in_expected_order,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_support_a_mix_of_persist_calls_sync_async_and_persist_calls,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_correlate_PersistAsync_handlers_after_restart,The following statement contains a magic number: i < 100
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_correlate_PersistAsync_handlers_after_restart,The following statement contains a magic number: i < 20
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_correlate_PersistAsync_handlers_after_restart,The following statement contains a magic number: ExpectMsg("done"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_allow_deferring_handlers_in_order_to_provide_ordered_processing_in_respect_to_Persist_handlers,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_allow_deferring_handlers_in_order_to_provide_ordered_processing_in_respect_to_PersistAsync_handlers,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_invoke_deferred_handlers_in_presence_of_mixed_a_long_series_Persist_and_PersistAsync_calls,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_invoke_deferred_handlers_right_away_if_there_are_no_persist_handlers_registered,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_invoke_deferred_handlers_preserving_the_original_sender_reference,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_allow_multiple_PersistAsyncs_with_nested_PersistAsync_calls,The following statement contains a magic number: var msgs = ReceiveN(10).Select(m => m.ToString()).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_allow_deeply_nested_Persist_calls,The following statement contains a magic number: const int nestedPersists = 6;
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_allow_deeply_nested_PersistAsync_calls,The following statement contains a magic number: const int nestedPersistAsyncs = 6;
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_allow_deeply_nested_PersistAsync_calls,The following statement contains a magic number: got = ReceiveN(nestedPersistAsyncs*2 + 2).Select(m => m.ToString()).OrderBy(m => m).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_allow_deeply_nested_PersistAsync_calls,The following statement contains a magic number: got = ReceiveN(nestedPersistAsyncs*2 + 2).Select(m => m.ToString()).OrderBy(m => m).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_allow_mixed_nesting_of_PersistAsync_in_Persist_calls,The following statement contains a magic number: ReceiveN(4).Select(m => m.ToString()).ToArray().ShouldOnlyContainInOrder("a-outer-1"' "a-outer-2"' "a-inner-async-1"' "a-inner-async-2");
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_allow_mixed_nesting_of_Persist_in_PersistAsync_calls,The following statement contains a magic number: ReceiveN(4).Select(m => m.ToString()).ToArray().ShouldOnlyContainInOrder("a-outer-async-1"' "a-outer-async-2"' "a-inner-1"' "a-inner-2");
Magic Number,Akka.Persistence.Tests,PersistentActorSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,PersistentActor_should_be_able_to_delete_events,The following statement contains a magic number: pref.Tell(new Delete(2));
Magic Number,Akka.Persistence.Tests,BehaviorTwoActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,Receiver,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                          PersistAll(new[] { new Evt(cmd.Data + "-1")' new Evt(cmd.Data + "-2") }' UpdateStateHandler);                          PersistAll(new[] { new Evt(cmd.Data + "-3")' new Evt(cmd.Data + "-4") }' UpdateStateHandler);                      });
Magic Number,Akka.Persistence.Tests,BehaviorThreeActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,Receiver,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                          PersistAll(new[] { new Evt(cmd.Data + "-11")' new Evt(cmd.Data + "-12") }' UpdateStateHandler);                          UpdateState(new Evt(cmd.Data + "-10"));                      });
Magic Number,Akka.Persistence.Tests,ChangeBehaviorInLastEventHandlerActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                          Persist(new Evt(cmd.Data + "-0")' evt =>                          {                              UpdateState(evt);                              Context.Become(NewBehavior);                          });                      });
Magic Number,Akka.Persistence.Tests,ChangeBehaviorInLastEventHandlerActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,NewBehavior,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                          Persist(new Evt(cmd.Data + "-21")' UpdateStateHandler);                          Persist(new Evt(cmd.Data + "-22")' evt =>                          {                              UpdateState(evt);                              Context.UnbecomeStacked();                          });                      });
Magic Number,Akka.Persistence.Tests,ChangeBehaviorInFirstEventHandlerActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                          Persist(new Evt(cmd.Data + "-0")' evt =>                          {                              UpdateState(evt);                              Context.Become(NewBehavior);                          });                      });
Magic Number,Akka.Persistence.Tests,ChangeBehaviorInFirstEventHandlerActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,NewBehavior,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                          Persist(new Evt(cmd.Data + "-21")' evt =>                          {                              UpdateState(evt);                              Context.UnbecomeStacked();                          });                          Persist(new Evt(cmd.Data + "-22")' UpdateStateHandler);                      });
Magic Number,Akka.Persistence.Tests,ChangeBehaviorInCommandHandlerFirstActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                          Context.Become(NewBehavior);                          Persist(new Evt(cmd.Data + "-0")' UpdateStateHandler);                      });
Magic Number,Akka.Persistence.Tests,ChangeBehaviorInCommandHandlerFirstActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,NewBehavior,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                          Context.UnbecomeStacked();                          PersistAll(new[] { new Evt(cmd.Data + "-31")' new Evt(cmd.Data + "-32") }' UpdateStateHandler);                          UpdateState(new Evt(cmd.Data + "-30"));                      });
Magic Number,Akka.Persistence.Tests,ChangeBehaviorInCommandHandlerLastActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                          Persist(new Evt(cmd.Data + "-0")' UpdateStateHandler);                          Context.Become(NewBehavior);                      });
Magic Number,Akka.Persistence.Tests,ChangeBehaviorInCommandHandlerLastActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,NewBehavior,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                          PersistAll(new[] { new Evt(cmd.Data + "-31")' new Evt(cmd.Data + "-32") }' UpdateStateHandler);                          UpdateState(new Evt(cmd.Data + "-30"));                          Context.UnbecomeStacked();                      });
Magic Number,Akka.Persistence.Tests,SnapshottingPersistentActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,HandleCmd,The following statement contains a magic number: RunTask(async () =>                  {                      await Task.Yield();                      await Task.Delay(100);                      PersistAll(new[] { new Evt(cmd.Data + "-41")' new Evt(cmd.Data + "-42") }' UpdateStateHandler);                  });
Magic Number,Akka.Persistence.Tests,ReplyInEventHandlerActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                          Persist(new Evt("a")' evt => Sender.Tell(evt.Data));                      });
Magic Number,Akka.Persistence.Tests,AsyncPersistActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                          {                              await Task.Yield();                              await Task.Delay(100);                                Sender.Tell(cmd.Data);                              PersistAsync(new Evt(cmd.Data.ToString() + "-" + (++_counter))' evt =>                              {                                  Sender.Tell(evt.Data);                              });                          });
Magic Number,Akka.Persistence.Tests,AsyncPersistThreeTimesActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: i <= 3
Magic Number,Akka.Persistence.Tests,AsyncPersistThreeTimesActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                          {                              await Task.Yield();                              await Task.Delay(100);                                Sender.Tell(cmd.Data);                              for (int i = 1; i <= 3; i++)                              {                                  PersistAsync(new Evt(cmd.Data.ToString() + "-" + (++_counter))' evt =>                                  {                                      Sender.Tell("a" + evt.Data.ToString().Substring(1));                                  });                              }                          });
Magic Number,Akka.Persistence.Tests,AsyncPersistThreeTimesActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                          {                              await Task.Yield();                              await Task.Delay(100);                                Sender.Tell(cmd.Data);                              for (int i = 1; i <= 3; i++)                              {                                  PersistAsync(new Evt(cmd.Data.ToString() + "-" + (++_counter))' evt =>                                  {                                      Sender.Tell("a" + evt.Data.ToString().Substring(1));                                  });                              }                          });
Magic Number,Akka.Persistence.Tests,AsyncPersistSameEventTwiceActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: PersistAsync(@event' evt =>                          {                              Thread.Sleep(300);                              Sender.Tell(evt.Data.ToString() + "-a-" + _sendMessageCounter.IncrementAndGet());                          });
Magic Number,Akka.Persistence.Tests,AsyncPersistSameEventTwiceActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                          {                              await Task.Yield();                              await Task.Delay(100);                                Sender.Tell(cmd.Data);                              var @event = new Evt(cmd.Data);                                PersistAsync(@event' evt =>                              {                                  Thread.Sleep(300);                                  Sender.Tell(evt.Data.ToString() + "-a-" + _sendMessageCounter.IncrementAndGet());                              });                                PersistAsync(@event' evt => Sender.Tell(evt.Data.ToString() + "-b-" + _sendMessageCounter.IncrementAndGet()));                          });
Magic Number,Akka.Persistence.Tests,AsyncPersistSameEventTwiceActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                          {                              await Task.Yield();                              await Task.Delay(100);                                Sender.Tell(cmd.Data);                              var @event = new Evt(cmd.Data);                                PersistAsync(@event' evt =>                              {                                  Thread.Sleep(300);                                  Sender.Tell(evt.Data.ToString() + "-a-" + _sendMessageCounter.IncrementAndGet());                              });                                PersistAsync(@event' evt => Sender.Tell(evt.Data.ToString() + "-b-" + _sendMessageCounter.IncrementAndGet()));                          });
Magic Number,Akka.Persistence.Tests,PersistAllNullActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                          {                              await Task.Yield();                              await Task.Delay(100);                                var data = (string)cmd.Data;                              if (data.Contains("defer"))                              {                                  DeferAsync("before-nil"' evt => Sender.Tell(evt));                                  PersistAll<object>(null' evt => Sender.Tell("Null"));                                  DeferAsync("after-nil"' evt => Sender.Tell(evt));                                  Sender.Tell(data);                              }                              else if (data.Contains("persist"))                              {                                  Persist("before-nil"' evt => Sender.Tell(evt));                                  PersistAll<object>(null' evt => Sender.Tell("Null"));                                  DeferAsync("after-nil"' evt => Sender.Tell(evt));                                  Sender.Tell(data);                                  //return true;                              }                          });
Magic Number,Akka.Persistence.Tests,AsyncPersistAndPersistMixedSyncAsyncSyncActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                          {                              await Task.Yield();                              await Task.Delay(100);                                Sender.Tell(cmd.Data);                                Persist(new Evt(cmd.Data + "-e1")' evt => Sender.Tell(evt.Data + "-" + (++_counter)));                              PersistAsync(new Evt(cmd.Data + "-ea2")' evt => Sender.Tell(evt.Data + "-" + (++_counter)));                              Persist(new Evt(cmd.Data + "-e3")' evt => Sender.Tell(evt.Data + "-" + (++_counter)));                          });
Magic Number,Akka.Persistence.Tests,AsyncPersistAndPersistMixedSyncAsyncActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                          {                              await Task.Yield();                              await Task.Delay(100);                              Sender.Tell(cmd.Data);                                Persist(new Evt(cmd.Data + "-e1")' evt => Sender.Tell(evt.Data + "-" + (++_counter)));                              PersistAsync(new Evt(cmd.Data + "-ea2")' evt => Sender.Tell(evt.Data + "-" + (++_counter)));                          });
Magic Number,Akka.Persistence.Tests,AsyncPersistHandlerCorrelationCheck,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                          {                              await Task.Yield();                              await Task.Delay(10);                              PersistAsync(new Evt(cmd.Data)' evt =>                              {                                  if (!cmd.Data.Equals(evt.Data)) Sender.Tell("Expected " + cmd.Data + " but got " + evt.Data);                                  if ("done" != evt.Data.ToString()) Sender.Tell("done");                              });                          });
Magic Number,Akka.Persistence.Tests,ValueTypeEventPersistentActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: Persist(5L' i =>                      {                          Sender.Tell(i);                      });
Magic Number,Akka.Persistence.Tests,ValueTypeEventPersistentActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                          Persist(5L' i =>                          {                              Sender.Tell(i);                          });                      });
Magic Number,Akka.Persistence.Tests,ValueTypeEventPersistentActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                          Persist(5L' i =>                          {                              Sender.Tell(i);                          });                      });
Magic Number,Akka.Persistence.Tests,DeferringWithPersistActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                          DeferAsync("d-1"' Sender.Tell);                          Persist(cmd.Data + "-2"' Sender.Tell);                          DeferAsync("d-3"' Sender.Tell);                          DeferAsync("d-4"' Sender.Tell);                      });
Magic Number,Akka.Persistence.Tests,DeferringWithAsyncPersistActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                          DeferAsync("d-" + cmd.Data + "-1"' Sender.Tell);                          PersistAsync("pa-" + cmd.Data + "-2"' Sender.Tell);                          DeferAsync("d-" + cmd.Data + "-3"' Sender.Tell);                          DeferAsync("d-" + cmd.Data + "-4"' Sender.Tell);                      });
Magic Number,Akka.Persistence.Tests,DeferringMixedCallsPPADDPADPersistActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                          Persist("p-" + cmd.Data + "-1"' Sender.Tell);                          PersistAsync("pa-" + cmd.Data + "-2"' Sender.Tell);                          DeferAsync("d-" + cmd.Data + "-3"' Sender.Tell);                          DeferAsync("d-" + cmd.Data + "-4"' Sender.Tell);                          PersistAsync("pa-" + cmd.Data + "-5"' Sender.Tell);                          DeferAsync("d-" + cmd.Data + "-6"' Sender.Tell);                      });
Magic Number,Akka.Persistence.Tests,DeferringWithNoPersistCallsPersistActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                            DeferAsync("d-1"' Sender.Tell);                          DeferAsync("d-2"' Sender.Tell);                          DeferAsync("d-3"' Sender.Tell);                      });
Magic Number,Akka.Persistence.Tests,StressOrdering,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: latchCmd.Latch.Ready(TimeSpan.FromSeconds(5));
Magic Number,Akka.Persistence.Tests,StressOrdering,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                          var latchCmd = message as LatchCmd;                          Sender.Tell(latchCmd.Data);                          latchCmd.Latch.Ready(TimeSpan.FromSeconds(5));                          PersistAsync(latchCmd.Data' _ => { });                      });
Magic Number,Akka.Persistence.Tests,StressOrdering,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                          var latchCmd = message as LatchCmd;                          Sender.Tell(latchCmd.Data);                          latchCmd.Latch.Ready(TimeSpan.FromSeconds(5));                          PersistAsync(latchCmd.Data' _ => { });                      });
Magic Number,Akka.Persistence.Tests,MultipleAndNestedPersists,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                            _probe.Tell(s);                          Persist(s + "-outer-1"' outer =>                          {                              _probe.Tell(outer);                              Persist(s + "-inner-1"' inner => _probe.Tell(inner));                          });                          Persist(s + "-outer-2"' outer =>                          {                              _probe.Tell(outer);                              Persist(s + "-inner-2"' inner => _probe.Tell(inner));                          });                      });
Magic Number,Akka.Persistence.Tests,MultipleAndNestedPersistAsyncs,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                            _probe.Tell(s);                          PersistAsync(s + "-outer-1"' outer =>                          {                              _probe.Tell(outer);                              PersistAsync(s + "-inner-1"' inner => _probe.Tell(inner));                          });                          PersistAsync(s + "-outer-2"' outer =>                          {                              _probe.Tell(outer);                              PersistAsync(s + "-inner-2"' inner => _probe.Tell(inner));                          });                      });
Magic Number,Akka.Persistence.Tests,NestedPersistNormalAndAsyncs,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                            _probe.Tell(s);                          Persist(s + "-outer-1"' outer =>                          {                              _probe.Tell(outer);                              PersistAsync(s + "-inner-async-1"' inner => _probe.Tell(inner));                          });                          Persist(s + "-outer-2"' outer =>                          {                              _probe.Tell(outer);                              PersistAsync(s + "-inner-async-2"' inner => _probe.Tell(inner));                          });                      });
Magic Number,Akka.Persistence.Tests,NestedPersistAsyncsAndNormal,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                            _probe.Tell(s);                          PersistAsync(s + "-outer-async-1"' outer =>                          {                              _probe.Tell(outer);                              Persist(s + "-inner-1"' inner => _probe.Tell(inner));                          });                          PersistAsync(s + "-outer-async-2"' outer =>                          {                              _probe.Tell(outer);                              Persist(s + "-inner-2"' inner => _probe.Tell(inner));                          });                      });
Magic Number,Akka.Persistence.Tests,NestedPersistInAsyncEnforcesStashing,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: PersistAsync(s + "-outer-async"' outer =>                      {                          _probe.Tell(outer);                          Persist(s + "-inner"' inner =>                          {                              _probe.Tell(inner);                              Thread.Sleep(1000); // really long wait here                              // the next incoming command must be handled by the following function                              Context.Become(_ =>                              {                                  Sender.Tell("done");                                  return true;                              });                          });                      });
Magic Number,Akka.Persistence.Tests,NestedPersistInAsyncEnforcesStashing,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                            _probe.Tell(s);                          PersistAsync(s + "-outer-async"' outer =>                          {                              _probe.Tell(outer);                              Persist(s + "-inner"' inner =>                              {                                  _probe.Tell(inner);                                  Thread.Sleep(1000); // really long wait here                                                      // the next incoming command must be handled by the following function                                  Context.Become(_ =>                                  {                                      Sender.Tell("done");                                      return true;                                  });                              });                          });                      });
Magic Number,Akka.Persistence.Tests,NestedPersistInAsyncEnforcesStashing,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                            _probe.Tell(s);                          PersistAsync(s + "-outer-async"' outer =>                          {                              _probe.Tell(outer);                              Persist(s + "-inner"' inner =>                              {                                  _probe.Tell(inner);                                  Thread.Sleep(1000); // really long wait here                                                      // the next incoming command must be handled by the following function                                  Context.Become(_ =>                                  {                                      Sender.Tell("done");                                      return true;                                  });                              });                          });                      });
Magic Number,Akka.Persistence.Tests,DeeplyNestedPersists,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                            _probe.Tell(s);                          Persist(s + "-1"' WeMustGoDeeper);                      });
Magic Number,Akka.Persistence.Tests,DeeplyNestedPersistAsyncs,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveCommand,The following statement contains a magic number: RunTask(async () =>                      {                          await Task.Yield();                          await Task.Delay(100);                            _probe.Tell(s);                          PersistAsync(s + "-1"' WeMustGoDeeper);                      });
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_be_able_to_persist_value_types_as_events,The following statement contains a magic number: ExpectMsg(5L);
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_support_multiple_PersistAsync_calls_for_one_command_and_execute_them_when_possible_not_hindering_command_processing,The following statement contains a magic number: var commands = Enumerable.Range(1' 10).Select(i => new Cmd("c-" + i)).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_support_multiple_PersistAsync_calls_for_one_command_and_execute_them_when_possible_not_hindering_command_processing,The following statement contains a magic number: Thread.Sleep(_random.Next(10));
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_support_multiple_PersistAsync_calls_for_one_command_and_execute_them_when_possible_not_hindering_command_processing,The following statement contains a magic number: var all = ReceiveN(40).Select(x => x.ToString()).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_support_multiple_PersistAsync_calls_for_one_command_and_execute_them_when_possible_not_hindering_command_processing,The following statement contains a magic number: var expectedAcks = Enumerable.Range(3' 30).Select(i => "a-" + (i / 3) + "-" + (i - 2)).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_support_multiple_PersistAsync_calls_for_one_command_and_execute_them_when_possible_not_hindering_command_processing,The following statement contains a magic number: var expectedAcks = Enumerable.Range(3' 30).Select(i => "a-" + (i / 3) + "-" + (i - 2)).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_support_multiple_PersistAsync_calls_for_one_command_and_execute_them_when_possible_not_hindering_command_processing,The following statement contains a magic number: var expectedAcks = Enumerable.Range(3' 30).Select(i => "a-" + (i / 3) + "-" + (i - 2)).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_support_multiple_PersistAsync_calls_for_one_command_and_execute_them_when_possible_not_hindering_command_processing,The following statement contains a magic number: var expectedAcks = Enumerable.Range(3' 30).Select(i => "a-" + (i / 3) + "-" + (i - 2)).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_support_multiple_PersistAsync_calls_for_one_command_and_execute_them_when_possible_not_hindering_command_processing,The following statement contains a magic number: var acks = all.Where(r => r.Count(c => c == '-') == 2);
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_reply_to_the_original_sender_of_a_command_even_on_PersistAsync,The following statement contains a magic number: var commands = Enumerable.Range(1' 10).Select(i => new Cmd("c-" + i)).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_reply_to_the_original_sender_of_a_command_even_on_PersistAsync,The following statement contains a magic number: var probes = Enumerable.Range(1' 10).Select(_ => CreateTestProbe()).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_reply_to_the_original_sender_of_a_command_even_on_PersistAsync,The following statement contains a magic number: i < 10
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_reply_to_the_original_sender_of_a_command_even_on_PersistAsync,The following statement contains a magic number: Within(TimeSpan.FromSeconds(3)' () =>              {                  foreach (var probe in probes)                  {                      probe.ExpectMsgAllOf<string>();                  }              });
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_support_the_same_event_being_PersistAsynced_multiple_times,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_support_a_mix_of_persist_calls_sync_async_sync_and_persist_calls_in_expected_order,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_support_a_mix_of_persist_calls_sync_async_and_persist_calls,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_correlate_PersistAsync_handlers_after_restart,The following statement contains a magic number: i < 100
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_correlate_PersistAsync_handlers_after_restart,The following statement contains a magic number: i < 20
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_correlate_PersistAsync_handlers_after_restart,The following statement contains a magic number: ExpectMsg("done"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_allow_deferring_handlers_in_order_to_provide_ordered_processing_in_respect_to_Persist_handlers,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_allow_deferring_handlers_in_order_to_provide_ordered_processing_in_respect_to_PersistAsync_handlers,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_invoke_deferred_handlers_in_presence_of_mixed_a_long_series_Persist_and_PersistAsync_calls,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_invoke_deferred_handlers_right_away_if_there_are_no_persist_handlers_registered,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_invoke_deferred_handlers_preserving_the_original_sender_reference,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_allow_multiple_PersistAsyncs_with_nested_PersistAsync_calls,The following statement contains a magic number: var msgs = ReceiveN(10).Select(m => m.ToString()).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_allow_deeply_nested_Persist_calls,The following statement contains a magic number: const int nestedPersists = 6;
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_allow_deeply_nested_PersistAsync_calls,The following statement contains a magic number: const int nestedPersistAsyncs = 6;
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_allow_deeply_nested_PersistAsync_calls,The following statement contains a magic number: got = ReceiveN(nestedPersistAsyncs*2 + 2).Select(m => m.ToString()).OrderBy(m => m).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_allow_deeply_nested_PersistAsync_calls,The following statement contains a magic number: got = ReceiveN(nestedPersistAsyncs*2 + 2).Select(m => m.ToString()).OrderBy(m => m).ToArray();
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_allow_mixed_nesting_of_PersistAsync_in_Persist_calls,The following statement contains a magic number: ReceiveN(4).Select(m => m.ToString()).ToArray().ShouldOnlyContainInOrder("a-outer-1"' "a-outer-2"' "a-inner-async-1"' "a-inner-async-2");
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_allow_mixed_nesting_of_Persist_in_PersistAsync_calls,The following statement contains a magic number: ReceiveN(4).Select(m => m.ToString()).ToArray().ShouldOnlyContainInOrder("a-outer-async-1"' "a-outer-async-2"' "a-inner-1"' "a-inner-2");
Magic Number,Akka.Persistence.Tests,PersistentActorSpecAsyncAwait,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpecAsyncAwait.Actors.cs,PersistentActor_should_be_able_to_delete_events,The following statement contains a magic number: pref.Tell(new Delete(2));
Magic Number,Akka.Persistence.Tests,PersistentActorStashingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorStashingSpec.cs,PersistentActor_should_support_user_stash_operations_with_several_stashed_messages,The following statement contains a magic number: var n = 10;
Magic Number,Akka.Persistence.Tests,PersistentActorStashingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorStashingSpec.cs,PersistentActor_should_support_user_stash_operations_within_handler_with_several_stashed_messages,The following statement contains a magic number: var n = 10;
Magic Number,Akka.Persistence.Tests,PersistentActorStashingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorStashingSpec.cs,PersistentActor_should_support_user_stash_operations_under_failures,The following statement contains a magic number: i <= 10
Magic Number,Akka.Persistence.Tests,PersistentActorStashingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorStashingSpec.cs,PersistentActor_should_support_user_stash_operations_within_handler_under_failures,The following statement contains a magic number: i <= 10
Magic Number,Akka.Persistence.Tests,SteppingMemoryPersistentActorStashingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorStashingSpec.cs,Stashing_in_a_PersistentActor_mixed_with_PersistAsync_should_handle_async_callback_not_happening_until_next_message_has_been_stashed,The following statement contains a magic number: AwaitAssert(() => SteppingMemoryJournal.GetRef("persistence-stash")' TimeSpan.FromSeconds(3));
Magic Number,Akka.Persistence.Tests,SteppingMemoryPersistentActorStashingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorStashingSpec.cs,Stashing_in_a_PersistentActor_mixed_with_PersistAsync_should_handle_async_callback_not_happening_until_next_message_has_been_stashed,The following statement contains a magic number: Within(TimeSpan.FromSeconds(3)' () =>              {                  AwaitAssert(() =>                  {                      pref.Tell(GetState.Instance);                      ExpectMsgInOrder("a"' "c"' "b");                  });              });
Magic Number,Akka.Persistence.Tests,SteppingMemoryPersistentActorStashingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorStashingSpec.cs,Stashing_in_a_PersistentActor_mixed_with_PersistAsync_should_handle_async_callback_not_happening_until_next_message_has_been_stashed_within_handler,The following statement contains a magic number: AwaitAssert(() => SteppingMemoryJournal.GetRef("persistence-stash")' TimeSpan.FromSeconds(3));
Magic Number,Akka.Persistence.Tests,SteppingMemoryPersistentActorStashingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorStashingSpec.cs,Stashing_in_a_PersistentActor_mixed_with_PersistAsync_should_handle_async_callback_not_happening_until_next_message_has_been_stashed_within_handler,The following statement contains a magic number: Within(TimeSpan.FromSeconds(3)' () =>              {                  AwaitAssert(() =>                  {                      pref.Tell(GetState.Instance);                      ExpectMsgInOrder("a"' "c"' "b");                  });              });
Magic Number,Akka.Persistence.Tests,PersistentViewSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentViewSpec.Actors.cs,PersistentView_should_run_updates_at_specified_interval,The following statement contains a magic number: _view = ActorOf(() => new TestPersistentView(Name' _viewProbe.Ref' TimeSpan.FromSeconds(2)' null));
Magic Number,Akka.Persistence.Tests,PersistentViewSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentViewSpec.Actors.cs,PersistentView_should_run_updates_on_user_request,The following statement contains a magic number: _view = ActorOf(() => new TestPersistentView(Name' _viewProbe.Ref' TimeSpan.FromSeconds(5)' null));
Magic Number,Akka.Persistence.Tests,PersistentViewSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentViewSpec.Actors.cs,PersistentView_should_run_updates_on_user_request_and_wait_for_update,The following statement contains a magic number: _view = ActorOf(() => new TestPersistentView(Name' _viewProbe.Ref' TimeSpan.FromSeconds(5)' null));
Magic Number,Akka.Persistence.Tests,PersistentViewSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentViewSpec.Actors.cs,PersistentView_should_run_updates_again_on_failure_outside_an_update_cycle,The following statement contains a magic number: _view = ActorOf(() => new TestPersistentView(Name' _viewProbe.Ref' TimeSpan.FromSeconds(5)' null));
Magic Number,Akka.Persistence.Tests,PersistentViewSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentViewSpec.Actors.cs,PersistentView_should_run_updates_again_on_failure_during_an_update_cycle,The following statement contains a magic number: _view = ActorOf(() => new TestPersistentView(Name' _viewProbe.Ref' TimeSpan.FromSeconds(5)' "b"));
Magic Number,Akka.Persistence.Tests,PersistentViewSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentViewSpec.Actors.cs,PersistentView_should_run_size_limited_updates_on_user_request,The following statement contains a magic number: _view.Tell(new Update(isAwait: true' replayMax: 2));
Magic Number,Akka.Persistence.Tests,PersistentViewSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentViewSpec.Actors.cs,PersistentView_should_run_size_limited_updates_on_user_request,The following statement contains a magic number: _view.Tell(new Update(isAwait: true' replayMax: 4));
Magic Number,Akka.Persistence.Tests,PersistentViewSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentViewSpec.Actors.cs,PersistentView_should_run_size_limited_updates_automatically,The following statement contains a magic number: replayProbe.ExpectMsg<ReplayMessages>(m => m.FromSequenceNr == 1L && m.Max == 2L);
Magic Number,Akka.Persistence.Tests,PersistentViewSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentViewSpec.Actors.cs,PersistentView_should_run_size_limited_updates_automatically,The following statement contains a magic number: replayProbe.ExpectMsg<ReplayMessages>(m => m.FromSequenceNr == 3L && m.Max == 2L);
Magic Number,Akka.Persistence.Tests,PersistentViewSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentViewSpec.Actors.cs,PersistentView_should_run_size_limited_updates_automatically,The following statement contains a magic number: replayProbe.ExpectMsg<ReplayMessages>(m => m.FromSequenceNr == 3L && m.Max == 2L);
Magic Number,Akka.Persistence.Tests,PersistentViewSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentViewSpec.Actors.cs,PersistentView_should_run_size_limited_updates_automatically,The following statement contains a magic number: replayProbe.ExpectMsg<ReplayMessages>(m => m.FromSequenceNr == 5L && m.Max == 2L);
Magic Number,Akka.Persistence.Tests,PersistentViewSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentViewSpec.Actors.cs,PersistentView_should_run_size_limited_updates_automatically,The following statement contains a magic number: replayProbe.ExpectMsg<ReplayMessages>(m => m.FromSequenceNr == 5L && m.Max == 2L);
Magic Number,Akka.Persistence.Tests,ReceiveTimeoutAsyncActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,ReceiveTimeoutAsyncActor,The following statement contains a magic number: CommandAsync<string>(async s =>              {                  _replyTo = Sender;                    await Task.Delay(TimeSpan.FromMilliseconds(100));                  SetReceiveTimeout(TimeSpan.FromMilliseconds(100));              });
Magic Number,Akka.Persistence.Tests,ReceiveTimeoutAsyncActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,ReceiveTimeoutAsyncActor,The following statement contains a magic number: CommandAsync<string>(async s =>              {                  _replyTo = Sender;                    await Task.Delay(TimeSpan.FromMilliseconds(100));                  SetReceiveTimeout(TimeSpan.FromMilliseconds(100));              });
Magic Number,Akka.Persistence.Tests,AsyncActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,AsyncActor,The following statement contains a magic number: CommandAsync<string>(async s =>              {                  await Task.Yield();                  await Task.Delay(TimeSpan.FromMilliseconds(100));                  if (s == "stop")                  {                      Sender.Tell("done");                  }              });
Magic Number,Akka.Persistence.Tests,AsyncAwaitActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,AsyncAwaitActor,The following statement contains a magic number: CommandAsync<int>(async msg =>              {                  await Task.Yield();                  Sender.Tell("handled");              }' i => i > 10);
Magic Number,Akka.Persistence.Tests,BlockingAskSelf,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,BlockingAskSelf,The following statement contains a magic number: Command<string>(_ =>              {                  //ask and block                  var res = Self.Ask(123).Result;                  Sender.Tell(res);              });
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,PersistentActors_should_be_able_to_async_await_ask_message_loop,The following statement contains a magic number: var task = asker.Ask("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,PersistentActors_should_be_able_to_async_await_ask_message_loop,The following statement contains a magic number: actor.Tell(123' ActorRefs.NoSender);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actors_should_be_able_to_async_await_in_message_loop,The following statement contains a magic number: var task = actor.Ask<string>("start"' TimeSpan.FromSeconds(50));
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actors_should_be_able_to_async_await_in_message_loop,The following statement contains a magic number: actor.Tell(123' ActorRefs.NoSender);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actors_should_be_able_to_async_await_ask_message_loop,The following statement contains a magic number: var task = asker.Ask("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actors_should_be_able_to_async_await_ask_message_loop,The following statement contains a magic number: actor.Tell(123' ActorRefs.NoSender);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actors_should_be_able_to_block_ask_message_loop,The following statement contains a magic number: var task = asker.Ask("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actors_should_be_able_to_block_ask_message_loop,The following statement contains a magic number: actor.Tell(123' ActorRefs.NoSender);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actors_should_be_able_to_block_ask_self_message_loop,The following statement contains a magic number: var task = asker.Ask("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actors_should_be_able_to_supervise_async_exceptions,The following statement contains a magic number: ExpectMsg("done"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actors_should_be_able_to_use_ContinueWith,The following statement contains a magic number: var res = await asker.Ask("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actors_should_be_able_to_supervise_exception_ContinueWith,The following statement contains a magic number: ExpectMsg("done"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actors_should_be_able_to_suspend_reentrancy,The following statement contains a magic number: var res = await asker.Ask<int>("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actor_should_be_able_to_resume_suspend,The following statement contains a magic number: i < 10
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actor_should_be_able_to_resume_suspend,The following statement contains a magic number: var res = await asker.Ask<string>("stop"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actor_should_not_restart_if_exception_is_catched,The following statement contains a magic number: var lastMessage = await actor.Ask(123);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,ActorTaskScheduler_reentrancy_should_not_be_possible,The following statement contains a magic number: ExpectNoMsg(1000);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actor_PipeTo_should_not_be_delayed_by_async_receive,The following statement contains a magic number: ExpectMsg<string>(m => "hello".Equals(m)' TimeSpan.FromMilliseconds(1000));
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actor_receiveasync_overloads_should_work,The following statement contains a magic number: actor.Tell(11);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actor_receiveasync_overloads_should_work,The following statement contains a magic number: ExpectMsg<string>(m => "handled".Equals(m)' TimeSpan.FromMilliseconds(1000));
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actor_receiveasync_overloads_should_work,The following statement contains a magic number: actor.Tell(9);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actor_receiveasync_overloads_should_work,The following statement contains a magic number: ExpectMsg<string>(m => "receiveany".Equals(m)' TimeSpan.FromMilliseconds(1000));
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,Actor_receiveasync_overloads_should_work,The following statement contains a magic number: ExpectMsg<string>(m => "handled".Equals(m)' TimeSpan.FromMilliseconds(1000));
Magic Number,Akka.Persistence.Tests,AsyncPipeToDelayActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,AsyncPipeToDelayActor,The following statement contains a magic number: CommandAsync<string>(async msg =>                  {                      var sender = Sender;                      var self = Self;                      Task.Run(() =>                      {                          Thread.Sleep(10);                          return msg;                      }).PipeTo(sender' self);                         await Task.Delay(3000);                  });
Magic Number,Akka.Persistence.Tests,AsyncPipeToDelayActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,AsyncPipeToDelayActor,The following statement contains a magic number: CommandAsync<string>(async msg =>                  {                      var sender = Sender;                      var self = Self;                      Task.Run(() =>                      {                          Thread.Sleep(10);                          return msg;                      }).PipeTo(sender' self);                         await Task.Delay(3000);                  });
Magic Number,Akka.Persistence.Tests,AsyncReentrantActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,AsyncReentrantActor,The following statement contains a magic number: CommandAsync<string>(async msg =>                  {                      var sender = Sender;                      Task.Run(() =>                      {                          //Sleep to make sure the task is not completed when ContinueWith is called                          Thread.Sleep(100);                          return msg;                      }).ContinueWith(_ => sender.Tell(msg)); // ContinueWith will schedule with the implicit ActorTaskScheduler                        Thread.Sleep(3000);                  });
Magic Number,Akka.Persistence.Tests,AsyncReentrantActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorAsyncAwaitSpec.cs,AsyncReentrantActor,The following statement contains a magic number: CommandAsync<string>(async msg =>                  {                      var sender = Sender;                      Task.Run(() =>                      {                          //Sleep to make sure the task is not completed when ContinueWith is called                          Thread.Sleep(100);                          return msg;                      }).ContinueWith(_ => sender.Tell(msg)); // ContinueWith will schedule with the implicit ActorTaskScheduler                        Thread.Sleep(3000);                  });
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_persistent_actor_with_no_receive_command_specified_When_receiving_message_Then_it_should_be_unhandled,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_persistent_actor_with_no_receive_command_specified_When_receiving_message_Then_it_should_be_unhandled,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Test_that_persistent_actor_cannot_call_receive_command_or_receive_event_out_of_construction_and_become,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Test_that_persistent_actor_cannot_call_receive_command_or_receive_event_out_of_construction_and_become,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_a_persistent_actor_which_uses_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_a_persistent_actor_which_uses_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_a_persistent_actor_which_uses_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(5' TestActor);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_a_persistent_actor_which_uses_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(10' TestActor);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_a_persistent_actor_which_uses_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(15' TestActor);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_a_persistent_actor_that_uses_non_generic_and_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_a_persistent_actor_that_uses_non_generic_and_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_a_persistent_actor_that_uses_non_generic_and_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(5' TestActor);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_a_persistent_actor_that_uses_non_generic_and_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(10' TestActor);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_a_persistent_actor_that_uses_non_generic_and_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(15' TestActor);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_a_persistent_actor_with_ReceiveAnyCommand_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_a_persistent_actor_with_ReceiveAnyCommand_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_a_persistent_actor_with_ReceiveAnyCommand_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(4711' TestActor);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_persistent_actor_When_it_calls_Become_Then_it_switches_command_handler,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_persistent_actor_When_it_calls_Become_Then_it_switches_command_handler,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_persistent_actor_When_it_calls_Become_Then_it_switches_command_handler,The following statement contains a magic number: actor.Tell(4711' TestActor);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_persistent_actor_When_it_calls_Become_Then_it_switches_command_handler,The following statement contains a magic number: ExpectMsg<UnhandledMessage>( m => ((int)m.Message) == 4711 && m.Recipient == actor);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_persistent_actor_When_it_calls_Become_Then_it_switches_command_handler,The following statement contains a magic number: actor.Tell(4711' TestActor);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_persistent_actor_When_it_calls_Become_Then_it_switches_command_handler,The following statement contains a magic number: ExpectMsg<UnhandledMessage>(m => ((int)m.Message) == 4711 && m.Recipient == actor);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_persistent_actor_that_has_called_Become_When_it_calls_Unbecome_Then_it_switches_back_command_handler,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_persistent_actor_that_has_called_Become_When_it_calls_Unbecome_Then_it_switches_back_command_handler,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_persistent_actor_that_has_called_Become_at_construction_time_When_it_calls_Unbecome_Then_it_switches_back_command_handler,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_persistent_actor_that_has_called_Become_at_construction_time_When_it_calls_Unbecome_Then_it_switches_back_command_handler,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_persistent_actor_When_it_restarts_Then_uses_the_handler,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_persistent_actor_When_it_restarts_Then_uses_the_handler,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_persistent_actor_that_has_replaced_its_initial_handler_When_it_restarts_Then_uses_the_initial_handler,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_persistent_actor_that_has_replaced_its_initial_handler_When_it_restarts_Then_uses_the_initial_handler,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_persistent_actor_that_has_pushed_a_new_handler_When_it_restarts_Then_uses_the_initial_handler,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,ReceivePersistentActorTests,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,Given_persistent_actor_that_has_pushed_a_new_handler_When_it_restarts_Then_uses_the_initial_handler,The following statement contains a magic number: WriteEvents(pid' 1' 2' 3);
Magic Number,Akka.Persistence.Tests,IntPredicatesActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,IntPredicatesActor,The following statement contains a magic number: Command<int>(i => i < 5' i => Sender.Tell("int<5:" + i' Self));
Magic Number,Akka.Persistence.Tests,IntPredicatesActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,IntPredicatesActor,The following statement contains a magic number: Command<int>(i => Sender.Tell("int<10:" + i' Self)' i => i < 10);
Magic Number,Akka.Persistence.Tests,IntPredicatesActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,IntPredicatesActor,The following statement contains a magic number: Command<int>(i =>                  {                      if(i < 15)                      {                          Sender.Tell("int<15:" + i' Self);                          return true;                      }                      return false;                  });
Magic Number,Akka.Persistence.Tests,TypePredicatesActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,TypePredicatesActor,The following statement contains a magic number: Command(typeof(int)' i => (int)i < 5' i => Sender.Tell("int<5:" + i' Self));
Magic Number,Akka.Persistence.Tests,TypePredicatesActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,TypePredicatesActor,The following statement contains a magic number: Command(typeof(int)' i => Sender.Tell("int<10:" + i' Self)' i => (int)i < 10);
Magic Number,Akka.Persistence.Tests,TypePredicatesActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ReceivePersistentActorTests.cs,TypePredicatesActor,The following statement contains a magic number: Command(typeof(int)' o =>                  {                      var i = (int) o;                      if(i < 15)                      {                          Sender.Tell("int<15:" + i' Self);                          return true;                      }                      return false;                  });
Magic Number,Akka.Persistence.Tests,RecoveryPermitterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\RecoveryPermitterSpec.cs,RecoveryPermitter_must_grant_permits_up_to_the_limit,The following statement contains a magic number: p4.ExpectNoMsg(100);
Magic Number,Akka.Persistence.Tests,RecoveryPermitterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\RecoveryPermitterSpec.cs,RecoveryPermitter_must_grant_permits_up_to_the_limit,The following statement contains a magic number: p5.ExpectNoMsg(10);
Magic Number,Akka.Persistence.Tests,RecoveryPermitterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\RecoveryPermitterSpec.cs,RecoveryPermitter_must_grant_permits_up_to_the_limit,The following statement contains a magic number: p5.ExpectNoMsg(100);
Magic Number,Akka.Persistence.Tests,RecoveryPermitterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\RecoveryPermitterSpec.cs,RecoveryPermitter_must_delay_recovery_when_all_permits_used,The following statement contains a magic number: p4.ExpectNoMsg(200);
Magic Number,Akka.Persistence.Tests,RecoveryPermitterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\RecoveryPermitterSpec.cs,RecoveryPermitter_must_return_permit_when_actor_is_prematurely_terminated_before_holding_permit,The following statement contains a magic number: p4.ExpectNoMsg(100);
Magic Number,Akka.Persistence.Tests,RecoveryPermitterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\RecoveryPermitterSpec.cs,RecoveryPermitter_must_return_permit_when_actor_is_prematurely_terminated_before_holding_permit,The following statement contains a magic number: p5.ExpectNoMsg(100);
Magic Number,Akka.Persistence.Tests,RecoveryPermitterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\RecoveryPermitterSpec.cs,RecoveryPermitter_must_return_permit_when_actor_is_prematurely_terminated_before_holding_permit,The following statement contains a magic number: p5.ExpectNoMsg(100);
Magic Number,Akka.Persistence.Tests,RecoveryPermitterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\RecoveryPermitterSpec.cs,RecoveryPermitter_must_return_permit_when_actor_is_prematurely_terminated_when_holding_permit,The following statement contains a magic number: p4.ExpectNoMsg(100);
Magic Number,Akka.Persistence.Tests,RecoveryPermitterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\RecoveryPermitterSpec.cs,RecoveryPermitter_must_return_permit_when_actor_throws_from_RecoveryCompleted,The following statement contains a magic number: i < 5
Magic Number,Akka.Persistence.Tests,SnapshotFailureRobustnessSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotFailureRobustnessSpec.cs,PersistentActor_with_a_failing_snapshot_should_recover_state_starting_from_the_most_recent_complete_snapshot,The following statement contains a magic number: ExpectMsg(2L);
Magic Number,Akka.Persistence.Tests,SnapshotFailureRobustnessSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotFailureRobustnessSpec.cs,PersistentActor_with_a_failing_snapshot_should_fail_recovery_and_stop_actor_when_no_snapshot_could_be_loaded,The following statement contains a magic number: ExpectMsg(2L);
Magic Number,Akka.Persistence.Tests,SnapshotFailureRobustnessSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotFailureRobustnessSpec.cs,PersistentActor_with_a_failing_snapshot_should_fail_recovery_and_stop_actor_when_no_snapshot_could_be_loaded,The following statement contains a magic number: ExpectMsg(3L);
Magic Number,Akka.Persistence.Tests,SnapshotFailureRobustnessSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotFailureRobustnessSpec.cs,PersistentActor_with_a_failing_snapshot_should_fail_recovery_and_stop_actor_when_no_snapshot_could_be_loaded,The following statement contains a magic number: ExpectMsg(4L);
Magic Number,Akka.Persistence.Tests,SnapshotFailureRobustnessSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotFailureRobustnessSpec.cs,PersistentActor_with_a_failing_snapshot_should_fail_recovery_and_stop_actor_when_no_snapshot_could_be_loaded,The following statement contains a magic number: Enumerable.Range(1' 3).ForEach(_ =>                  {                      ExpectMsg<Error>(m => m.Message.ToString().StartsWith("Error loading snapshot"));                  });
Magic Number,Akka.Persistence.Tests,SnapshotFailureRobustnessSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotFailureRobustnessSpec.cs,PersistentActor_with_a_failing_snapshot_should_receive_failure_message_when_bulk_deleting_snapshots_fails,The following statement contains a magic number: ExpectMsg(2L);
Magic Number,Akka.Persistence.Tests,SnapshotFailureRobustnessSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotFailureRobustnessSpec.cs,PersistentActor_with_a_failing_snapshot_should_receive_failure_message_when_bulk_deleting_snapshots_fails,The following statement contains a magic number: var criteria = new SnapshotSelectionCriteria(maxSequenceNr: 10);
Magic Number,Akka.Persistence.Tests,FailingLocalSnapshotStore,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotFailureRobustnessSpec.cs,Save,The following statement contains a magic number: metadata.SequenceNr == 2 || payload.Equals("boom")
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,SnapshotSpec,The following statement contains a magic number: ExpectMsgAllOf(1L' 2L' 4L);
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,SnapshotSpec,The following statement contains a magic number: ExpectMsgAllOf(1L' 2L' 4L);
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_recover_state_starting_from_the_most_recent_snapshot,The following statement contains a magic number: var offer = ExpectMsg<SnapshotOffer>(o => o.Metadata.PersistenceId == persistenceId && o.Metadata.SequenceNr == 4);
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_recover_state_starting_from_the_most_recent_snapshot_matching_an_upper_sequence_number_bound,The following statement contains a magic number: ActorOf(() => new LoadSnapshotTestActor(Name' new Recovery(SnapshotSelectionCriteria.Latest' 3)' TestActor));
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_recover_state_starting_from_the_most_recent_snapshot_matching_an_upper_sequence_number_bound,The following statement contains a magic number: var offer = ExpectMsg<SnapshotOffer>(o => o.Metadata.PersistenceId == persistenceId && o.Metadata.SequenceNr == 2);
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_recover_state_starting_from_the_most_recent_snapshot_matching_an_upper_sequence_number_bound_without_further_replay,The following statement contains a magic number: var pref = ActorOf(() => new LoadSnapshotTestActor(Name' new Recovery(SnapshotSelectionCriteria.Latest' 4)' TestActor));
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_recover_state_starting_from_the_most_recent_snapshot_matching_an_upper_sequence_number_bound_without_further_replay,The following statement contains a magic number: var offer = ExpectMsg<SnapshotOffer>(o => o.Metadata.PersistenceId == persistenceId && o.Metadata.SequenceNr == 4);
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_recover_state_starting_from_the_most_recent_snapshot_matching_criteria,The following statement contains a magic number: ActorOf(() => new LoadSnapshotTestActor(Name' new Recovery(new SnapshotSelectionCriteria(2))' TestActor));
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_recover_state_starting_from_the_most_recent_snapshot_matching_criteria,The following statement contains a magic number: var offer = ExpectMsg<SnapshotOffer>(o => o.Metadata.PersistenceId == persistenceId && o.Metadata.SequenceNr == 2);
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_recover_state_starting_from_the_most_recent_snapshot_matching_criteria_and_an_upper_sequence_number_bound,The following statement contains a magic number: ActorOf(() => new LoadSnapshotTestActor(Name' new Recovery(new SnapshotSelectionCriteria(2)' 3)' TestActor));
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_recover_state_starting_from_the_most_recent_snapshot_matching_criteria_and_an_upper_sequence_number_bound,The following statement contains a magic number: ActorOf(() => new LoadSnapshotTestActor(Name' new Recovery(new SnapshotSelectionCriteria(2)' 3)' TestActor));
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_recover_state_starting_from_the_most_recent_snapshot_matching_criteria_and_an_upper_sequence_number_bound,The following statement contains a magic number: var offer = ExpectMsg<SnapshotOffer>(o => o.Metadata.PersistenceId == persistenceId && o.Metadata.SequenceNr == 2);
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_recover_state_from_scratch_if_snapshot_based_recovery_was_disabled,The following statement contains a magic number: ActorOf(() => new LoadSnapshotTestActor(Name' new Recovery(SnapshotSelectionCriteria.None' 3)' TestActor));
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_support_single_snapshot_deletions,The following statement contains a magic number: var pref = ActorOf(() => new DeleteSnapshotTestActor(Name' new Recovery(SnapshotSelectionCriteria.Latest' 4)' TestActor));
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_support_single_snapshot_deletions,The following statement contains a magic number: var offer = ExpectMsg<SnapshotOffer>(o => o.Metadata.PersistenceId == persistenceId && o.Metadata.SequenceNr == 4);
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_support_single_snapshot_deletions,The following statement contains a magic number: ExpectMsg<DeleteSnapshotSuccess>(m => m.Metadata.PersistenceId == persistenceId && m.Metadata.SequenceNr == 4);
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_support_single_snapshot_deletions,The following statement contains a magic number: ActorOf(() => new DeleteSnapshotTestActor(Name' new Recovery(SnapshotSelectionCriteria.Latest' 4)' TestActor));
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_support_single_snapshot_deletions,The following statement contains a magic number: var offer2 = ExpectMsg<SnapshotOffer>(o => o.Metadata.PersistenceId == persistenceId && o.Metadata.SequenceNr == 2);
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_support_bulk_snapshot_deletions,The following statement contains a magic number: var pref = ActorOf(() => new DeleteSnapshotTestActor(Name' new Recovery(SnapshotSelectionCriteria.Latest' 4)' TestActor));
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_support_bulk_snapshot_deletions,The following statement contains a magic number: pref.Tell(new DeleteMany(new SnapshotSelectionCriteria(4' DateTime.MaxValue)));
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_support_bulk_snapshot_deletions,The following statement contains a magic number: ExpectMsgPf("offer"' o =>              {                  var offer = o as SnapshotOffer;                  if (offer != null)                  {                      var snapshot = offer.Snapshot as IEnumerable<string>;                      snapshot.Reverse().ShouldOnlyContainInOrder("a-1"' "b-2"' "c-3"' "d-4");                        Assert.Equal(persistenceId' offer.Metadata.PersistenceId);                      Assert.Equal(4' offer.Metadata.SequenceNr);                        return offer;                  }                  else return null;              });
Magic Number,Akka.Persistence.Tests,SnapshotSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,PersistentActor_should_support_bulk_snapshot_deletions,The following statement contains a magic number: ActorOf(() => new DeleteSnapshotTestActor(Name' new Recovery(SnapshotSelectionCriteria.None' 4)' TestActor));
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_has_function_as_regular_fsm,The following statement contains a magic number: var shirt = new Item("1"' "Shirt"' 59.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_has_function_as_regular_fsm,The following statement contains a magic number: var shoes = new Item("2"' "Shoes"' 89.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_has_function_as_regular_fsm,The following statement contains a magic number: var coat = new Item("3"' "Coat"' 119.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_has_function_as_regular_fsm_on_state_timeout,The following statement contains a magic number: var shirt = new Item("1"' "Shirt"' 59.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_has_function_as_regular_fsm_on_state_timeout,The following statement contains a magic number: Within(TimeSpan.FromSeconds(0.9)' RemainingOrDefault' () =>              {                  var transition2 = ExpectMsg<Transition<IUserState>>();                  transition2.FsmRef.Should().Be(fsmRef);                  transition2.From.Should().Be(Shopping.Instance);                  transition2.To.Should().Be(Inactive.Instance);              });
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_recover_successfully_with_correct_state_data,The following statement contains a magic number: var shirt = new Item("1"' "Shirt"' 59.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_recover_successfully_with_correct_state_data,The following statement contains a magic number: var shoes = new Item("2"' "Shoes"' 89.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_recover_successfully_with_correct_state_data,The following statement contains a magic number: var coat = new Item("3"' "Coat"' 119.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_execute_the_defined_actions_following_successful_persistence_of_state_change,The following statement contains a magic number: var shirt = new Item("1"' "Shirt"' 59.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_execute_the_defined_actions_following_successful_persistence_of_state_change,The following statement contains a magic number: var shoes = new Item("2"' "Shoes"' 89.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_execute_the_defined_actions_following_successful_persistence_of_state_change,The following statement contains a magic number: var coat = new Item("3"' "Coat"' 119.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_execute_the_defined_actions_following_successful_persistence_of_FSM_stop,The following statement contains a magic number: var shirt = new Item("1"' "Shirt"' 59.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_execute_the_defined_actions_following_successful_persistence_of_FSM_stop,The following statement contains a magic number: var shoes = new Item("2"' "Shoes"' 89.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_execute_the_defined_actions_following_successful_persistence_of_FSM_stop,The following statement contains a magic number: var coat = new Item("3"' "Coat"' 119.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_recover_successfully_with_correct_state_timeout,The following statement contains a magic number: var shirt = new Item("1"' "Shirt"' 59.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_recover_successfully_with_correct_state_timeout,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromSeconds(0.6));
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_recover_successfully_with_correct_state_timeout,The following statement contains a magic number: Within(TimeSpan.FromSeconds(0.9)' RemainingOrDefault' () =>              {                  var transition2 = ExpectMsg<Transition<IUserState>>();                  transition2.FsmRef.Should().Be(recoveredFsmRef);                  transition2.From.Should().Be(Shopping.Instance);                  transition2.To.Should().Be(Inactive.Instance);              });
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_recover_successfully_with_correct_state_timeout,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromSeconds(0.6));
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_not_trigger_onTransition_for_stay,The following statement contains a magic number: probe.ExpectMsg("LookingAround -> LookingAround"' 3.Seconds());
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_not_trigger_onTransition_for_stay,The following statement contains a magic number: probe.ExpectMsg("LookingAround -> LookingAround"' 3.Seconds());
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_not_trigger_onTransition_for_stay,The following statement contains a magic number: probe.ExpectNoMsg(3.Seconds());
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_not_persist_state_change_event_when_staying_in_the_same_state,The following statement contains a magic number: var shirt = new Item("1"' "Shirt"' 59.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_not_persist_state_change_event_when_staying_in_the_same_state,The following statement contains a magic number: var shoes = new Item("2"' "Shoes"' 89.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_not_persist_state_change_event_when_staying_in_the_same_state,The following statement contains a magic number: var coat = new Item("3"' "Coat"' 119.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_persist_snapshot,The following statement contains a magic number: var shirt = new Item("1"' "Shirt"' 59.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_persist_snapshot,The following statement contains a magic number: var shoes = new Item("2"' "Shoes"' 89.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_persist_snapshot,The following statement contains a magic number: var coat = new Item("3"' "Coat"' 119.99F);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_save_periodical_snapshots_if_enablesnapshotafter,The following statement contains a magic number: fsmRef.Tell(2);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_save_periodical_snapshots_if_enablesnapshotafter,The following statement contains a magic number: fsmRef.Tell(3);
Magic Number,Akka.Persistence.Tests.Fsm,PersistentFSMSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,PersistentFSM_must_save_periodical_snapshots_if_enablesnapshotafter,The following statement contains a magic number: fsmRef.Tell(10);
Magic Number,Akka.Persistence.Tests.Fsm,WebStoreCustomerFSM,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,WebStoreCustomerFSM,The following statement contains a magic number: When(Shopping.Instance' (evt' state) =>                  {                      if (evt.FsmEvent is AddItem addItem)                      {                          return Stay().Applying(new ItemAdded(addItem.Item)).ForMax(TimeSpan.FromSeconds(1));                      }                        if (evt.FsmEvent is Buy)                      {                          return GoTo(Paid.Instance)                              .Applying(new OrderExecuted())                              .AndThen(cart =>                              {                                  if (cart is NonEmptyShoppingCart nonShoppingCart)                                  {                                      reportActor.Tell(new PurchaseWasMade(nonShoppingCart.Items));                                      SaveStateSnapshot();                                  }                                  else if (cart is EmptyShoppingCart)                                  {                                      SaveStateSnapshot();                                  }                              });                      }                        if (evt.FsmEvent is Leave)                      {                          return Stop()                              .Applying(new OrderDiscarded())                              .AndThen(cart =>                              {                                  reportActor.Tell(new ShoppingCardDiscarded());                                  SaveStateSnapshot();                              });                      }                        if (evt.FsmEvent is GetCurrentCart)                      {                          return Stay().Replying(evt.StateData);                      }                        if (evt.FsmEvent is StateTimeout)                      {                          return GoTo(Inactive.Instance).ForMax(TimeSpan.FromSeconds(2));                      }                        return state;                  });
Magic Number,Akka.Persistence.Tests.Fsm,TimeoutFsm,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,TimeoutFsm,The following statement contains a magic number: When(Init.Instance' (evt' state) =>              {                  if (evt.FsmEvent is StateTimeout)                  {                      probe.Tell(StateTimeout.Instance);                      return Stay();                  }                  else if (evt.FsmEvent is OverrideTimeoutToInf)                  {                      probe.Tell(OverrideTimeoutToInf.Instance);                      return Stay().ForMax(TimeSpan.MaxValue);                  }                    return null;              }' TimeSpan.FromMilliseconds(300));
Magic Number,Akka.Persistence.Tests.Fsm,Item,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Name != null ? Name.GetHashCode() : 0);
Magic Number,Akka.Persistence.Tests.Fsm,Item,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Fsm\PersistentFSMSpec.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Price.GetHashCode();
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_RepairByDiscardOld_mode_should_pass_on_all_replayed_messages_and_then_stop,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.RepairByDiscardOld' 2' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_RepairByDiscardOld_mode_should_pass_on_all_replayed_messages_and_then_stop,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.RepairByDiscardOld' 2' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_RepairByDiscardOld_mode_should_pass_on_all_replayed_messages_when_previously_no_writer_id_was_given_but_now_is_and_then_stop,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.RepairByDiscardOld' 2' 10' true));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_RepairByDiscardOld_mode_should_pass_on_all_replayed_messages_when_previously_no_writer_id_was_given_but_now_is_and_then_stop,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.RepairByDiscardOld' 2' 10' true));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_RepairByDiscardOld_mode_should_pass_on_all_replayed_messages_when_switching_writer,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.RepairByDiscardOld' 100' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_RepairByDiscardOld_mode_should_pass_on_all_replayed_messages_when_switching_writer,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.RepairByDiscardOld' 100' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_RepairByDiscardOld_mode_should_discard_message_with_same_SequenceNo_from_old_overlapping_writer,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.RepairByDiscardOld' 100' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_RepairByDiscardOld_mode_should_discard_message_with_same_SequenceNo_from_old_overlapping_writer,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.RepairByDiscardOld' 100' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_RepairByDiscardOld_mode_should_discard_messages_from_old_writer_after_switching_writer,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.RepairByDiscardOld' 100' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_RepairByDiscardOld_mode_should_discard_messages_from_old_writer_after_switching_writer,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.RepairByDiscardOld' 100' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_RepairByDiscardOld_mode_should_discard_messages_from_old_writer_after_switching_writer,The following statement contains a magic number: EventFilter.Warning(start: "Invalid replayed event").Expect(2' () =>              {                  filter.Tell(_m1);                  filter.Tell(_m2);                  var m3B = new ReplayedMessage(WithWriter(_m3.Persistent' WriterB));                  filter.Tell(m3B);                  filter.Tell(_m3);                  filter.Tell(_m4);                  filter.Tell(_successMsg);                    ExpectMsg(_m1);                  ExpectMsg(_m2);                  ExpectMsg(m3B);                  // discard m3' m4                  ExpectMsg(_successMsg);              });
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_RepairByDiscardOld_mode_should_discard_messages_from_several_old_writers,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.RepairByDiscardOld' 100' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_RepairByDiscardOld_mode_should_discard_messages_from_several_old_writers,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.RepairByDiscardOld' 100' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_RepairByDiscardOld_mode_should_discard_messages_from_several_old_writers,The following statement contains a magic number: EventFilter.Warning(start: "Invalid replayed event").Expect(3' () =>              {                  filter.Tell(_m1);                  var m2B = new ReplayedMessage(WithWriter(_m2.Persistent' WriterB));                  filter.Tell(m2B);                  var m3C = new ReplayedMessage(WithWriter(_m3.Persistent' WriterC));                  filter.Tell(m3C);                  filter.Tell(_m2);                  filter.Tell(_m3);                  var m3B = new ReplayedMessage(WithWriter(_m3.Persistent' WriterB));                  filter.Tell(m3B);                  var m4C = new ReplayedMessage(WithWriter(_m3.Persistent' WriterC));                  filter.Tell(m4C);                  filter.Tell(_successMsg);                    ExpectMsg(_m1);                  ExpectMsg(m2B);                  ExpectMsg(m3C);                  // discard m2' m3' m3B                  ExpectMsg(m4C);                  ExpectMsg(_successMsg);              });
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_Fail_mode_should_fail_when_message_with_same_SequenceNo_from_old_overlapping_writer,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.Fail' 100' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_Fail_mode_should_fail_when_message_with_same_SequenceNo_from_old_overlapping_writer,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.Fail' 100' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_Fail_mode_should_fail_when_messages_from_old_writer_after_switching_writer,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.Fail' 100' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_Fail_mode_should_fail_when_messages_from_old_writer_after_switching_writer,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.Fail' 100' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_Warn_mode_should_warn_about_message_with_same_SequenceNo_from_old_overlapping_writer,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.Warn' 100' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_Warn_mode_should_warn_about_message_with_same_SequenceNo_from_old_overlapping_writer,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.Warn' 100' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_Warn_mode_should_warn_about_message_from_old_writer_after_switching_writer,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.Warn' 100' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_Warn_mode_should_warn_about_message_from_old_writer_after_switching_writer,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.Warn' 100' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_Warn_mode_should_warn_about_message_from_old_writer_after_switching_writer,The following statement contains a magic number: EventFilter.Warning(start: "Invalid replayed event").Expect(2' () =>              {                  filter.Tell(_m1);                  filter.Tell(_m2);                  var m3B = new ReplayedMessage(WithWriter(_m3.Persistent' WriterB));                  filter.Tell(m3B);                  filter.Tell(_m3);                  filter.Tell(_m4);                  filter.Tell(_successMsg);                    ExpectMsg(_m1);                  ExpectMsg(_m2);                  ExpectMsg(m3B);                  ExpectMsg(_m3);                  ExpectMsg(_m4);                  ExpectMsg(_successMsg);              });
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_Warn_mode_should_warn_about_messages_from_several_old_writers,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.Warn' 100' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_Warn_mode_should_warn_about_messages_from_several_old_writers,The following statement contains a magic number: var filter = Sys.ActorOf(ReplayFilter.Props(TestActor' ReplayFilterMode.Warn' 100' 10' false));
Magic Number,Akka.Persistence.Tests.Journal,ReplayFilterSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\ReplayFilterSpec.cs,ReplayFilter_in_Warn_mode_should_warn_about_messages_from_several_old_writers,The following statement contains a magic number: EventFilter.Warning(start: "Invalid replayed event").Expect(3' () =>              {                  filter.Tell(_m1);                  var m2B = new ReplayedMessage(WithWriter(_m2.Persistent' WriterB));                  filter.Tell(m2B);                  var m3C = new ReplayedMessage(WithWriter(_m3.Persistent' WriterC));                  filter.Tell(m3C);                  filter.Tell(_m2);                  filter.Tell(_m3);                  var m3B = new ReplayedMessage(WithWriter(_m3.Persistent' WriterB));                  filter.Tell(m3B);                  var m4C = new ReplayedMessage(WithWriter(_m3.Persistent' WriterC));                  filter.Tell(m4C);                  filter.Tell(_successMsg);                    ExpectMsg(_m1);                  ExpectMsg(m2B);                  ExpectMsg(m3C);                  ExpectMsg(_m2);                  ExpectMsg(_m3);                  ExpectMsg(m3B);                  ExpectMsg(m4C);                  ExpectMsg(_successMsg);              });
Magic Number,Akka.Persistence.Tests.Journal,SteppingMemoryJournal,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Journal\SteppingMemoryJournal.cs,Step,The following statement contains a magic number: journal.Ask(Token.Instance' TimeSpan.FromSeconds(3)).Wait();
Magic Number,Akka.Persistence.Tests.Serialization,MessageSerializerRemotingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Serialization\MessageSerializerRemotingSpec.cs,AfterTermination,The following statement contains a magic number: _remoteSystem.Terminate().Wait(TimeSpan.FromSeconds(2));
Magic Number,Akka.Persistence.Tests.Serialization,MessageSerializerRemotingSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Serialization\MessageSerializerRemotingSpec.cs,MessageSerializer_should_custom_serialize_AtomicWrite_messages_during_remoting,The following statement contains a magic number: Within(5.Seconds()' () => {                   ExpectMsg("p.a.");                  ExpectMsg("p.b.");              });
Magic Number,Akka.Persistence.Tests.Serialization,PersistenceMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Serialization\PersistenceMessageSerializerSpec.cs,MessageSerializer_should_serialize_state_change_event,The following statement contains a magic number: var p1 = new Persistent(new PersistentFSM.StateChangeEvent("a"' TimeSpan.FromSeconds(10))' sender: TestActor);
Magic Number,Akka.Persistence.Tests.Serialization,PersistenceMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Serialization\PersistenceMessageSerializerSpec.cs,MessageSerializer_should_serialize_state_change_event,The following statement contains a magic number: payload.Timeout.Should().Be(TimeSpan.FromSeconds(10));
Magic Number,Akka.Persistence.Tests.Serialization,PersistenceMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Serialization\PersistenceMessageSerializerSpec.cs,MessageSerializer_should_serialize_AtLeastOnceDeliverySnapshot,The following statement contains a magic number: var unconfirmed = new[]              {                  new UnconfirmedDelivery(1' TestActor.Path' "a")'                  new UnconfirmedDelivery(2' TestActor.Path' "b")'                  new UnconfirmedDelivery(3' TestActor.Path' "big string")              };
Magic Number,Akka.Persistence.Tests.Serialization,PersistenceMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Serialization\PersistenceMessageSerializerSpec.cs,MessageSerializer_should_serialize_AtLeastOnceDeliverySnapshot,The following statement contains a magic number: var unconfirmed = new[]              {                  new UnconfirmedDelivery(1' TestActor.Path' "a")'                  new UnconfirmedDelivery(2' TestActor.Path' "b")'                  new UnconfirmedDelivery(3' TestActor.Path' "big string")              };
Magic Number,Akka.Persistence.Tests.Serialization,PersistenceMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Serialization\PersistenceMessageSerializerSpec.cs,MessageSerializer_should_serialize_AtLeastOnceDeliverySnapshot,The following statement contains a magic number: var atLeastOnceDeliverySnapshot = new AtLeastOnceDeliverySnapshot(17' unconfirmed);
Magic Number,Akka.Persistence.Tests.Serialization,PersistenceMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Serialization\PersistenceMessageSerializerSpec.cs,MessageSerializer_should_serialize_fsm_snapshot,The following statement contains a magic number: var snapshot = new PersistentFSM.PersistentFSMSnapshot<MyPayload>("a"' new MyPayload("b")' TimeSpan.FromSeconds(10));
Magic Number,Akka.Persistence.Tests.Serialization,PersistenceMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Serialization\PersistenceMessageSerializerSpec.cs,MessageSerializer_should_serialize_fsm_snapshot,The following statement contains a magic number: backSnapshot.Timeout.Should().Be(TimeSpan.FromSeconds(10));
Magic Number,Akka.Persistence.Tests.Serialization,PersistenceMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Serialization\PersistenceMessageSerializerSpec.cs,MessageSerializer_ToBinary_should_throw_an_exception_on_wrong_type,The following statement contains a magic number: Action deserializeAction = () =>              {                  _serializer.FromBinary<string>(new byte[] { 4' 5' 6 });              };
Magic Number,Akka.Persistence.Tests.Serialization,PersistenceMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Serialization\PersistenceMessageSerializerSpec.cs,MessageSerializer_ToBinary_should_throw_an_exception_on_wrong_type,The following statement contains a magic number: Action deserializeAction = () =>              {                  _serializer.FromBinary<string>(new byte[] { 4' 5' 6 });              };
Magic Number,Akka.Persistence.Tests.Serialization,PersistenceMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Serialization\PersistenceMessageSerializerSpec.cs,MessageSerializer_ToBinary_should_throw_an_exception_on_wrong_type,The following statement contains a magic number: Action deserializeAction = () =>              {                  _serializer.FromBinary<string>(new byte[] { 4' 5' 6 });              };
Magic Number,Akka.Persistence.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\Serialization\SerializationSpec.cs,Serialization_falls_back_to_system_default_if_unknown_serializer_parameter,The following statement contains a magic number: Assert.Equal(-5' serializer.Identifier);
Missing Default,Akka.Persistence.Tests,TestPersistentActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ManyRecoveriesSpec.cs,ReceiveCommand,The following switch statement is missing a default case: switch (message)                  {                      case TakeSnapshot _:                          SaveSnapshot(state);                          return true;                      case SaveSnapshotSuccess s:                          _probe.Tell(s);                          return true;                      case GetState _:                          _probe.Tell(state);                          return true;                      case Save s:                          Persist(new Saved(s.Data' LastSequenceNr + 1)' evt =>                          {                              state = state + evt.Data;                              _probe.Tell(evt);                          });                          return true;                  }
Missing Default,Akka.Persistence.Tests,TestPersistentActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\ManyRecoveriesSpec.cs,ReceiveRecover,The following switch statement is missing a default case: switch (message)                  {                      case SnapshotOffer s:                          _probe.Tell(s);                          state = s.Snapshot.ToString();                          return true;                      case Saved evt:                          state = state + evt.Data;                          _probe.Tell(evt);                          return true;                      case RecoveryCompleted _:                          if (IsRecovering) throw new InvalidOperationException($"Expected !IsRecovering in RecoveryCompleted");                          _probe.Tell(RecoveryCompleted.Instance);                          // Verify that persist can be used here                          Persist(PersistFromRecoveryCompleted.Instance' _ => _probe.Tell(PersistFromRecoveryCompleted.Instance));                          return true;                  }
Missing Default,Akka.Persistence.Tests,PersistInRecovery,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\PersistentActorSpec.Actors.cs,ReceiveRecover,The following switch statement is missing a default case: switch (message)                  {                      case Evt evt when evt.Data?.ToString() == "invalid":                          Persist(new Evt("invalid-recovery")' UpdateStateHandler);                          return true;                      case Evt evt:                          return UpdateState(evt);                      case RecoveryCompleted _:                          PersistAsync(new Evt("rc-1")' UpdateStateHandler);                          Persist(new Evt("rc-2")' UpdateStateHandler);                          PersistAsync(new Evt("rc-3")' UpdateStateHandler);                          return true;                  }
Missing Default,Akka.Persistence.Tests,IgnoringSnapshotTestPersistentActor,C:\research\architectureSmells\repos\rogeralsing_Pigeon\src\core\Akka.Persistence.Tests\SnapshotSpec.cs,ReceiveRecover,The following switch statement is missing a default case: switch(message)                  {                     case string payload:                          _probe.Tell($"{payload}-{LastSequenceNr}");                          return true;                      case object other when !(other is SnapshotOffer):                          _probe.Tell(other);                          return true;                  }
