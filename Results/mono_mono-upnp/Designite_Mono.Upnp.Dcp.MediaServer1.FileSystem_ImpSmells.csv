Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Mono.Upnp.Dcp.MediaServer1.FileSystem,FileSystemContentDirectory,C:\research\architectureSmells\repos\mono_mono-upnp\src\Mono.Upnp.Dcp\Mono.Upnp.Dcp.MediaServer1\Mono.Upnp.Dcp.MediaServer1.FileSystem\Mono.Upnp.Dcp.MediaServer1.FileSystem\FileSystemContentDirectory.cs,VisitChildren,The method has 6 parameters. Parameters: consumer' objectId' startIndex' requestCount' sortCriteria' totalMatches
Long Parameter List,Mono.Upnp.Dcp.MediaServer1.FileSystem,ContainerBuilder,C:\research\architectureSmells\repos\mono_mono-upnp\src\Mono.Upnp.Dcp\Mono.Upnp.Dcp.MediaServer1\Mono.Upnp.Dcp.MediaServer1.FileSystem\Mono.Upnp.Dcp.MediaServer1.FileSystem\ContainerBuilder.cs,Build,The method has 5 parameters. Parameters: consumer' title' id' parentId' children
Long Parameter List,Mono.Upnp.Dcp.MediaServer1.FileSystem.Wmp11,Wmp11ContentDirectory,C:\research\architectureSmells\repos\mono_mono-upnp\src\Mono.Upnp.Dcp\Mono.Upnp.Dcp.MediaServer1\Mono.Upnp.Dcp.MediaServer1.FileSystem\Mono.Upnp.Dcp.MediaServer1.FileSystem.Wmp11\Wmp11ContentDirectory.cs,Search,The method has 8 parameters. Parameters: consumer' containerId' query' startingIndex' requestCount' sortCriteria' numberReturned' totalMatches
Magic Number,Mono.Upnp.Dcp.MediaServer1.FileSystem,FileSystemContentDirectory,C:\research\architectureSmells\repos\mono_mono-upnp\src\Mono.Upnp.Dcp\Mono.Upnp.Dcp.MediaServer1\Mono.Upnp.Dcp.MediaServer1.FileSystem\Mono.Upnp.Dcp.MediaServer1.FileSystem\FileSystemContentDirectory.cs,GetFile,The following statement contains a magic number: response.StatusCode = 404;
Magic Number,Mono.Upnp.Dcp.MediaServer1.FileSystem.Wmp11,Wmp11ContentDirectoryBuilder,C:\research\architectureSmells\repos\mono_mono-upnp\src\Mono.Upnp.Dcp\Mono.Upnp.Dcp.MediaServer1\Mono.Upnp.Dcp.MediaServer1.FileSystem\Mono.Upnp.Dcp.MediaServer1.FileSystem.Wmp11\Wmp11ContentDirectoryBuilder.cs,Build,The following statement contains a magic number: var containers = new List<Object> (4);
Magic Number,Mono.Upnp.Dcp.MediaServer1.FileSystem.Wmp11,Wmp11ContentDirectoryBuilder,C:\research\architectureSmells\repos\mono_mono-upnp\src\Mono.Upnp.Dcp\Mono.Upnp.Dcp.MediaServer1\Mono.Upnp.Dcp.MediaServer1.FileSystem\Mono.Upnp.Dcp.MediaServer1.FileSystem.Wmp11\Wmp11ContentDirectoryBuilder.cs,Build,The following statement contains a magic number: ContainerInfoConsumer (new ContainerInfo (new Container (Wmp11Ids.Root' "-1"'                 new ContainerOptions { Title = "Root"' ChildCount = 4 })' containers));
Missing Default,Mono.Upnp.Dcp.MediaServer1.FileSystem.Wmp11,Wmp11QueryVisitor,C:\research\architectureSmells\repos\mono_mono-upnp\src\Mono.Upnp.Dcp\Mono.Upnp.Dcp.MediaServer1\Mono.Upnp.Dcp.MediaServer1.FileSystem\Mono.Upnp.Dcp.MediaServer1.FileSystem.Wmp11\Wmp11ContentDirectory.cs,VisitClassCheck,The following switch statement is missing a default case: switch (value) {                 case "object.item.audioItem":                     if (container_id == Wmp11Ids.AllMusic) {                         Results = content_directory.GetChildren (Wmp11Ids.AllMusic);                     }                     break;                 case "object.container.album.musicAlbum":                     if (container_id == Wmp11Ids.MusicAlbum) {                         Results = content_directory.GetChildren (Wmp11Ids.MusicAlbum);                     }                     break;                 }
Missing Default,Mono.Upnp.Dcp.MediaServer1.FileSystem.Wmp11,Wmp11ContentDirectoryBuilder,C:\research\architectureSmells\repos\mono_mono-upnp\src\Mono.Upnp.Dcp\Mono.Upnp.Dcp.MediaServer1\Mono.Upnp.Dcp.MediaServer1.FileSystem\Mono.Upnp.Dcp.MediaServer1.FileSystem.Wmp11\Wmp11ContentDirectoryBuilder.cs,OnFile,The following switch statement is missing a default case: switch (Path.GetExtension (path)) {             case ".wma":             case ".wav":             case ".mp3":                 var id = GetId ();                 var resources = new[] {                     new Resource (new Uri (url' id)' new ResourceOptions {                         ProtocolInfo = new ProtocolInfo ("http-get"' "audio/mpeg")                     })                 };                 music_builder.OnTag (id' resources' TagLib.File.Create (path).Tag'                     @object => objects.Add (@object.Id' new ObjectInfo (@object' path)));                 break;             }
