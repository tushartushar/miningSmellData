Implementation smell,Namespace,Class,File,Method,Description
Long Method,Mono.Upnp.Tests,ServiceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServiceDescriptionTests.cs,FullScpdDeserializationTest,The method has 130 lines of code.
Long Parameter List,Mono.Upnp.Tests,DummyRoot,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DummyRoot.cs,DummyRoot,The method has 5 parameters. Parameters: type' udn' friendlyName' manufacturer' modelName
Long Parameter List,Mono.Upnp.Tests,DummyRoot,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DummyRoot.cs,DummyRoot,The method has 6 parameters. Parameters: type' udn' friendlyName' manufacturer' modelName' options
Long Parameter List,Mono.Upnp.Tests,ArgumentsTestClass,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServiceTests.cs,Foo,The method has 15 parameters. Parameters: stringArg' intArg' byteArg' ushortArg' uintArg' sbyteArg' shortArg' longArg' floatArg' doubleArg' charArg' dateTimeArg' boolArg' byteArrayArg' uriArg
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,ElementNamespaceTest,The length of the statement  "                @"<?xml version=""1.0""?><ElementNamespaceTestClass><foo xmlns=""urn:mono-upnp:tests"">bar</foo></ElementNamespaceTestClass>"'" is 126.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,ElementPrefixTest,The length of the statement  "                @"<?xml version=""1.0""?><ElementPrefixTestClass><test:foo xmlns:test=""urn:mono-upnp:tests"">bar</test:foo></ElementPrefixTestClass>"'" is 135.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,ArrayNameTest,The length of the statement  "                @"<?xml version=""1.0""?><ArrayNameTestClass><items><Item Name=""Foo"" /><Item Name=""Bar"" /></items></ArrayNameTestClass>"'" is 125.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,ArrayNameFallbackTest,The length of the statement  "                @"<?xml version=""1.0""?><ArrayNameFallbackTestClass><Items><Item Name=""Foo"" /><Item Name=""Bar"" /></Items></ArrayNameFallbackTestClass>"'" is 141.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,ArrayNameFallbackTest,The length of the statement  "                serializer.GetString (new ArrayNameFallbackTestClass { Items = new[] { new Item { Name = "Foo" }' new Item { Name = "Bar"} } })" is 127.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,ArrayNamespaceTest,The length of the statement  "                @"<?xml version=""1.0""?><ArrayNamespaceTestClass><items xmlns=""udn:mono-upnp:tests""><Item Name=""Foo"" /><Item Name=""Bar"" /></items></ArrayNamespaceTestClass>"'" is 165.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,ArrayNamespaceTest,The length of the statement  "                serializer.GetString (new ArrayNamespaceTestClass { Items = new[] { new Item { Name = "Foo" }' new Item { Name = "Bar"} } })" is 124.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,ArrayPrefixTest,The length of the statement  "                @"<?xml version=""1.0""?><ArrayPrefixTestClass><test:items xmlns:test=""udn:mono-upnp:tests""><Item Name=""Foo"" /><Item Name=""Bar"" /></test:items></ArrayPrefixTestClass>"'" is 174.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,ArrayPrefixTest,The length of the statement  "                serializer.GetString (new ArrayPrefixTestClass { Items = new[] { new Item { Name = "Foo" }' new Item { Name = "Bar"} } })" is 121.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,NamedArrayItemTest,The length of the statement  "                @"<?xml version=""1.0""?><NamedArrayItemTestClass><Items><item Value=""Foo"" /><item Value=""Bar"" /></Items></NamedArrayItemTestClass>"'" is 137.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,NamedArrayItemTest,The length of the statement  "                serializer.GetString (new NamedArrayItemTestClass { Items = new[] { new NamedItem { Value = "Foo" }' new NamedItem { Value = "Bar"} } })" is 136.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,NamelessArrayItemTest,The length of the statement  "                @"<?xml version=""1.0""?><NamelessArrayItemTestClass><Items><Item Name=""Foo"" /><Item Name=""Bar"" /></Items></NamelessArrayItemTestClass>"'" is 141.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,NamelessArrayItemTest,The length of the statement  "                serializer.GetString (new NamelessArrayItemTestClass { Items = new[] { new Item { Name = "Foo" }' new Item { Name = "Bar"} } })" is 127.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,ArrayItemNameTest,The length of the statement  "                @"<?xml version=""1.0""?><ArrayItemNameTestClass><Items><item Name=""Foo"" /><item Name=""Bar"" /></Items></ArrayItemNameTestClass>"'" is 133.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,ArrayItemNameTest,The length of the statement  "                serializer.GetString (new ArrayItemNameTestClass { Items = new[] { new Item { Name = "Foo" }' new Item { Name = "Bar"} } })" is 123.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,ArrayItemNameFallbackTest,The length of the statement  "                @"<?xml version=""1.0""?><ArrayItemNameFallbackTestClass><Items><Item Name=""Foo"" /><Item Name=""Bar"" /></Items></ArrayItemNameFallbackTestClass>"'" is 149.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,ArrayItemNameFallbackTest,The length of the statement  "                serializer.GetString (new ArrayItemNameFallbackTestClass { Items = new[] { new Item { Name = "Foo" }' new Item { Name = "Bar"} } })" is 131.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,ArrayItemNamespaceTest,The length of the statement  "                @"<?xml version=""1.0""?><ArrayItemNamespaceTestClass><Items><item Name=""Foo"" xmlns=""udn:mono-upnp:tests"" /><item Name=""Bar"" xmlns=""udn:mono-upnp:tests"" /></Items></ArrayItemNamespaceTestClass>"'" is 203.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,ArrayItemNamespaceTest,The length of the statement  "                serializer.GetString (new ArrayItemNamespaceTestClass { Items = new[] { new Item { Name = "Foo" }' new Item { Name = "Bar"} } })" is 128.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,ArrayItemPrefixTest,The length of the statement  "                @"<?xml version=""1.0""?><ArrayItemPrefixTestClass><Items><test:item Name=""Foo"" xmlns:test=""udn:mono-upnp:tests"" /><test:item Name=""Bar"" xmlns:test=""udn:mono-upnp:tests"" /></Items></ArrayItemPrefixTestClass>"'" is 217.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,ArrayItemPrefixTest,The length of the statement  "                serializer.GetString (new ArrayItemPrefixTestClass { Items = new[] { new Item { Name = "Foo" }' new Item { Name = "Bar"} } })" is 125.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,ArrayIEnumerableTest,The length of the statement  "                @"<?xml version=""1.0""?><ArrayIEnumerableTestClass><Items><Item Name=""Foo"" /><Item Name=""Bar"" /></Items></ArrayIEnumerableTestClass>"'" is 139.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,ArrayIEnumerableTest,The length of the statement  "                serializer.GetString (new ArrayIEnumerableTestClass { Items = new[] { new Item { Name = "Foo" }' new Item { Name = "Bar"} } })" is 126.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,IXmlSerializationMembersTest,The length of the statement  "                serializer.GetString (new IXmlSerializableMembersTestClass { Info = new IXmlSerializableTypeTestClass { Foo = "bar" } })" is 120.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,NamespaceTest,The length of the statement  "                @"<?xml version=""1.0""?><NamespaceTestClass xmlns:f=""udn:mono-upnp:foo"" xmlns:b=""udn:mono-upnp:bar""><f:Foo>foo</f:Foo><b:Bar>bar</b:Bar></NamespaceTestClass>"'" is 164.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,FreeNamelessArrayItemTest,The length of the statement  "                @"<?xml version=""1.0""?><FreeNamelessArrayItemTestClass><test>Blarg!</test><test>Blarg!</test></FreeNamelessArrayItemTestClass>"'" is 130.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,FreeNamelessArrayItemTest,The length of the statement  "                serializer.GetString (new FreeNamelessArrayItemTestClass { Foos = new[] { new TypeTestClass ()' new TypeTestClass () } }));" is 123.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,SerializationContextTest,The length of the statement  "                @"<?xml version=""1.0""?><SerializationContextTestClass depth=""0""><Child depth=""1""><Child depth=""2"" /></Child></SerializationContextTestClass>"'" is 150.
Long Statement,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,SerializationContextTest,The length of the statement  "                serializer.GetString (new SerializationContextTestClass { Child = new SerializationContextTestClass { Child = new SerializationContextTestClass () } }'" is 151.
Long Statement,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,ElementNamespaceTest,The length of the statement  "            var deserialized_object = Deserialize<ElementNamespaceTestClass> (@"<Test><foo xmlns=""urn:mono-upnp:tests"">Bar</foo></Test>");" is 128.
Long Statement,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,AttributeNamespaceTest,The length of the statement  "            var deserialized_object = Deserialize<AttributeNamespaceTestClass> (@"<Test test:foo=""Bar"" xmlns:test=""urn:mono-upnp:tests"" />");" is 133.
Long Statement,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,ArrayStringTest,The length of the statement  "            var deserialized_object = Deserialize<ArrayStringTestClass> (@"<Test><Items><Item>Foo</Item><Item>Bar</Item></Items></Test>");" is 126.
Long Statement,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,ArrayItemTest,The length of the statement  "            var deserialized_object = Deserialize<ArrayItemTestClass> (@"<Test><Items><Item Foo=""bat""/><Item Foo=""baz""/></Items></Test>");" is 130.
Long Statement,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,ArrayNameTest,The length of the statement  "            var deserialized_object = Deserialize<ArrayNameTestClass> (@"<Test><items><Item>Foo</Item><Item>Bar</Item></items></Test>");" is 124.
Long Statement,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,ArrayNamespaceTest,The length of the statement  "            var deserialized_object = Deserialize<ArrayNamespaceTestClass> (@"<Test><items xmlns=""urn:mono-upnp:tests""><Item>Foo</Item><Item>Bar</Item></items></Test>");" is 159.
Long Statement,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,ArrayNamespaceTest,The length of the statement  "            deserialized_object = Deserialize<ArrayNamespaceTestClass> (@"<Test><items><Item>Foo</Item><Item>Bar</Item></items></Test>");" is 125.
Long Statement,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,ArrayICollectionTest,The length of the statement  "            var deserialized_object = Deserialize<ArrayICollectionTestClass> (@"<Test><Items><Item>Foo</Item><Item>Bar</Item></Items></Test>");" is 131.
Long Statement,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,RecursiveTest,The length of the statement  "            var deserialized_object = Deserialize<RecursiveTestClass> (@"<Test><Foo>bar</Foo><Child><Foo>bat</Foo></Child></Test>");" is 120.
Long Statement,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,IXmlDeserializableDeserializeAttributeTest,The length of the statement  "            var deserialized_object = Deserialize<IXmlDeserializableDeserializeAttributeTestClass> (@"<Test Bar=""hello world"" />");" is 121.
Long Statement,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,IXmlDeserializableDeserializeElementTest,The length of the statement  "            var deserialized_object = Deserialize<IXmlDeserializableDeserializeElementTestClass> (@"<Test><Foo>bar</Foo><Bar>bat</Bar></Test>");" is 132.
Long Statement,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,FreeNamedArrayItemTest,The length of the statement  "            var deserialized_object = Deserialize<FreeNamedArrayItemTestClass> (@"<Test><Foo>foo</Foo><Foo>bar</Foo><foo>bat</foo></Test>");" is 128.
Long Statement,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,FreeEmptyNameArrayItemTest,The length of the statement  "            var deserialized_object = Deserialize<FreeEmptyNameArrayItemTestClass> (@"<Test><String>foo</String><String>bar</String><string>bat</string></Test>");" is 150.
Long Statement,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,FreeUnnamedArrayItemTest,The length of the statement  "            var deserialized_object = Deserialize<FreeUnnamedArrayItemTestClass> (@"<Test><String>foo</String><String>bar</String><string>bat</string></Test>");" is 148.
Long Statement,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,FreeNamedTypeArrayItemTest,The length of the statement  "            var deserialized_object = Deserialize<FreeNamedTypeArrayItemTestClass> (@"<Test><test>foo</test><test>bar</test><NamedItem>bat</NamedItem></Test>");" is 148.
Long Statement,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,FreeEmptyNameTypeArrayItemTest,The length of the statement  "            var deserialized_object = Deserialize<FreeEmptyNameTypeArrayItemTestClass> (@"<Test><EmptyNameItem>foo</EmptyNameItem><EmptyNameItem>bar</EmptyNameItem><item>bat</item></Test>");" is 178.
Long Statement,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,WhiteSpaceAndCommentsTest,The length of the statement  "            var deserialized_object = Deserialize<ElementTestClass> ("<Test>\n\t   <!-- this is a comment --><Foo>bar</Foo></Test>");" is 121.
Long Statement,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,DeserializablePrivateConstructorTest,The length of the statement  "            var deserialized_object = Deserialize<ElementTestClass<DeserializablePrivateConstructorClass>> (@"<Test><Foo Bar=""bar"" /></Test>");" is 133.
Long Statement,Mono.Upnp.Tests,DummyDeserializer,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DummyDeserializer.cs,DeserializeServiceController,The length of the statement  "                new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "testService1")' context));" is 129.
Long Statement,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,CreateRoot,The length of the statement  "                        new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'" is 141.
Long Statement,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,CreateRoot,The length of the statement  "                        new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'" is 141.
Long Statement,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,CreateRoot,The length of the statement  "                                    new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'" is 141.
Long Statement,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,CreateRoot,The length of the statement  "                                    new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'" is 141.
Long Statement,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The length of the statement  "            Assert.AreEqual (new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-device"' new Version (1' 0))' root.RootDevice.Type);" is 127.
Long Statement,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The length of the statement  "            Assert.AreEqual (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' services.Current.Type);" is 124.
Long Statement,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The length of the statement  "            Assert.AreEqual (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' services.Current.Type);" is 124.
Long Statement,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The length of the statement  "            Assert.AreEqual (new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-embedded-device"' new Version (1' 0))' devices.Current.Type);" is 136.
Long Statement,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The length of the statement  "            Assert.AreEqual (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' services.Current.Type);" is 124.
Long Statement,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The length of the statement  "            Assert.AreEqual (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' services.Current.Type);" is 124.
Long Statement,Mono.Upnp.Tests,ServiceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServiceDescriptionTests.cs,CreateServiceController,The length of the statement  "                    new StateVariable ("A_ARG_TYPE_RequestCount"' "ui4"' new AllowedValueRange ("1"' "100")' new StateVariableOptions { DefaultValue = "50" })'" is 139.
Long Statement,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,InitialUnicastEventTest,The length of the statement  "            var root = CreateRoot (CreateServiceController (new StateVariable ("Foo"' "string"' new StateVariableOptions { Eventer = eventer })));" is 134.
Long Statement,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,UnsubscribeUnicastEventTest,The length of the statement  "            var root = CreateRoot (CreateServiceController (new StateVariable ("Foo"' "string"' new StateVariableOptions { Eventer = eventer })));" is 134.
Long Statement,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,CreateRoot,The length of the statement  "                        new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'" is 141.
Long Statement,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,CreateRoot,The length of the statement  "                        new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'" is 141.
Long Statement,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,CreateRoot,The length of the statement  "                                    new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'" is 141.
Long Statement,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,CreateRoot,The length of the statement  "                                    new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'" is 141.
Long Statement,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,AnnouncementTest,The length of the statement  "                    announcements.Add ("urn:schemas-upnp-org:device:mono-upnp-tests-device:1/uuid:d1::urn:schemas-upnp-org:device:mono-upnp-tests-device:1"' null);" is 143.
Long Statement,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,AnnouncementTest,The length of the statement  "                    announcements.Add ("urn:schemas-upnp-org:device:mono-upnp-tests-embedded-device:1/uuid:ed1::urn:schemas-upnp-org:device:mono-upnp-tests-embedded-device:1"' null);" is 162.
Long Statement,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,AnnouncementTest,The length of the statement  "                    announcements.Add ("urn:schemas-upnp-org:service:mono-upnp-test-service:1/uuid:d1::urn:schemas-upnp-org:service:mono-upnp-test-service:1"' null);" is 145.
Long Statement,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,AnnouncementTest,The length of the statement  "                    announcements.Add ("urn:schemas-upnp-org:service:mono-upnp-test-service:2/uuid:d1::urn:schemas-upnp-org:service:mono-upnp-test-service:2"' null);" is 145.
Long Statement,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,AnnouncementTest,The length of the statement  "                    announcements.Add ("urn:schemas-upnp-org:service:mono-upnp-test-service:1/uuid:ed1::urn:schemas-upnp-org:service:mono-upnp-test-service:1"' null);" is 146.
Long Statement,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,AnnouncementTest,The length of the statement  "                    announcements.Add ("urn:schemas-upnp-org:service:mono-upnp-test-service:2/uuid:ed1::urn:schemas-upnp-org:service:mono-upnp-test-service:2"' null);" is 146.
Magic Number,Mono.Upnp.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlSerializationTests.cs,NullableNotNullTest,The following statement contains a magic number: Assert.AreEqual (                 @"<?xml version=""1.0""?><NullableOmitIfNullClass><Foo>42</Foo></NullableOmitIfNullClass>"'                 serializer.GetString (new NullableOmitIfNullClass { Foo = 42 }));
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,IntElementTest,The following statement contains a magic number: Assert.AreEqual (42' deserialized_object.Foo);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,DoubleElementTest,The following statement contains a magic number: Assert.AreEqual (3.14' deserialized_object.Foo);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,LongElementTest,The following statement contains a magic number: Assert.AreEqual (300000000000L' deserialized_object.Foo);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,FloatElementTest,The following statement contains a magic number: Assert.AreEqual (1.5' deserialized_object.Foo);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,DecimalElementTest,The following statement contains a magic number: Assert.AreEqual (0.00005' deserialized_object.Foo);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,IntAttributeTest,The following statement contains a magic number: Assert.AreEqual (42' deserialized_object.Foo);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,DoubleAttributeTest,The following statement contains a magic number: Assert.AreEqual (3.14' deserialized_object.Foo);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,LongAttributeTest,The following statement contains a magic number: Assert.AreEqual (300000000000L' deserialized_object.Foo);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,FloatAttributeTest,The following statement contains a magic number: Assert.AreEqual (1.5' deserialized_object.Foo);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,DecimalAttributeTest,The following statement contains a magic number: Assert.AreEqual (0.00005' deserialized_object.Foo);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,ArrayStringTest,The following statement contains a magic number: Assert.AreEqual (2' deserialized_object.Items.Count);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,ArrayItemTest,The following statement contains a magic number: Assert.AreEqual (2' deserialized_object.Items.Count);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,ArrayNameTest,The following statement contains a magic number: Assert.AreEqual (2' deserialized_object.Items.Count);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,ArrayNamespaceTest,The following statement contains a magic number: Assert.AreEqual (2' deserialized_object.Items.Count);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,ArrayICollectionTest,The following statement contains a magic number: Assert.AreEqual (2' deserialized_object.Items.Count);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,DeserializerArrayTest,The following statement contains a magic number: Assert.AreEqual (3' deserialized_object.Children.Count);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,DeserializerArrayTest,The following statement contains a magic number: Assert.AreEqual ("five"' deserialized_object.Children[2].Bar);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,FreeNamedArrayItemTest,The following statement contains a magic number: Assert.AreEqual (2' deserialized_object.Values.Count);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,FreeEmptyNameArrayItemTest,The following statement contains a magic number: Assert.AreEqual (2' deserialized_object.Values.Count);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,FreeUnnamedArrayItemTest,The following statement contains a magic number: Assert.AreEqual (2' deserialized_object.Values.Count);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,FreeNamedTypeArrayItemTest,The following statement contains a magic number: Assert.AreEqual (2' deserialized_object.Values.Count);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,FreeEmptyNameTypeArrayItemTest,The following statement contains a magic number: Assert.AreEqual (2' deserialized_object.Values.Count);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,NullableElementTest,The following statement contains a magic number: Assert.AreEqual (42' deserialized_object.Foo);
Magic Number,Mono.Upnp.Tests,XmlDeserializationTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\XmlDeserializationTests.cs,NullableAttributeTest,The following statement contains a magic number: Assert.AreEqual (42' deserialized_object.Foo);
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,CreateRoot,The following statement contains a magic number: return new DummyRoot (                 new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-device"' new Version (1' 0))'                 "uuid:fd1"'                 "Mono.Upnp.Tests Full Device"'                 "Mono Project"'                 "Full Device"'                 new DeviceOptions {                     ManufacturerUrl = new Uri ("http://www.mono-project.org")'                     ModelDescription = "A device description with all optional information."'                     ModelNumber = "1"'                     ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                     SerialNumber = "12345"'                     Upc = "67890"'                     Icons = new[] {                         new DummyIcon (100' 100' 32' "image/png")'                         new DummyIcon (100' 100' 32' "image/jpeg")                     }'                     Services = new[] {                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                     }'                     EmbeddedDevices = new[] {                         new Device (                             new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-embedded-device"' new Version (1' 0))'                             "uuid:fed1"'                             "Mono.Upnp.Tests Full Embedded Device"'                             "Mono Project"'                             "Full Embedded Device"'                             new DeviceOptions {                                 ManufacturerUrl = new Uri ("http://www.mono-project.org")'                                 ModelDescription = "An embedded device description with all optional information."'                                 ModelNumber = "1"'                                 ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                                 SerialNumber = "12345"'                                 Upc = "67890"'                                 Icons = new[] {                                     new DummyIcon (100' 100' 32' "image/png")'                                     new DummyIcon (100' 100' 32' "image/jpeg")                                 }'                                 Services = new[] {                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                                 }                             }                         )                     }                 }             );
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,CreateRoot,The following statement contains a magic number: return new DummyRoot (                 new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-device"' new Version (1' 0))'                 "uuid:fd1"'                 "Mono.Upnp.Tests Full Device"'                 "Mono Project"'                 "Full Device"'                 new DeviceOptions {                     ManufacturerUrl = new Uri ("http://www.mono-project.org")'                     ModelDescription = "A device description with all optional information."'                     ModelNumber = "1"'                     ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                     SerialNumber = "12345"'                     Upc = "67890"'                     Icons = new[] {                         new DummyIcon (100' 100' 32' "image/png")'                         new DummyIcon (100' 100' 32' "image/jpeg")                     }'                     Services = new[] {                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                     }'                     EmbeddedDevices = new[] {                         new Device (                             new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-embedded-device"' new Version (1' 0))'                             "uuid:fed1"'                             "Mono.Upnp.Tests Full Embedded Device"'                             "Mono Project"'                             "Full Embedded Device"'                             new DeviceOptions {                                 ManufacturerUrl = new Uri ("http://www.mono-project.org")'                                 ModelDescription = "An embedded device description with all optional information."'                                 ModelNumber = "1"'                                 ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                                 SerialNumber = "12345"'                                 Upc = "67890"'                                 Icons = new[] {                                     new DummyIcon (100' 100' 32' "image/png")'                                     new DummyIcon (100' 100' 32' "image/jpeg")                                 }'                                 Services = new[] {                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                                 }                             }                         )                     }                 }             );
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,CreateRoot,The following statement contains a magic number: return new DummyRoot (                 new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-device"' new Version (1' 0))'                 "uuid:fd1"'                 "Mono.Upnp.Tests Full Device"'                 "Mono Project"'                 "Full Device"'                 new DeviceOptions {                     ManufacturerUrl = new Uri ("http://www.mono-project.org")'                     ModelDescription = "A device description with all optional information."'                     ModelNumber = "1"'                     ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                     SerialNumber = "12345"'                     Upc = "67890"'                     Icons = new[] {                         new DummyIcon (100' 100' 32' "image/png")'                         new DummyIcon (100' 100' 32' "image/jpeg")                     }'                     Services = new[] {                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                     }'                     EmbeddedDevices = new[] {                         new Device (                             new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-embedded-device"' new Version (1' 0))'                             "uuid:fed1"'                             "Mono.Upnp.Tests Full Embedded Device"'                             "Mono Project"'                             "Full Embedded Device"'                             new DeviceOptions {                                 ManufacturerUrl = new Uri ("http://www.mono-project.org")'                                 ModelDescription = "An embedded device description with all optional information."'                                 ModelNumber = "1"'                                 ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                                 SerialNumber = "12345"'                                 Upc = "67890"'                                 Icons = new[] {                                     new DummyIcon (100' 100' 32' "image/png")'                                     new DummyIcon (100' 100' 32' "image/jpeg")                                 }'                                 Services = new[] {                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                                 }                             }                         )                     }                 }             );
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,CreateRoot,The following statement contains a magic number: return new DummyRoot (                 new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-device"' new Version (1' 0))'                 "uuid:fd1"'                 "Mono.Upnp.Tests Full Device"'                 "Mono Project"'                 "Full Device"'                 new DeviceOptions {                     ManufacturerUrl = new Uri ("http://www.mono-project.org")'                     ModelDescription = "A device description with all optional information."'                     ModelNumber = "1"'                     ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                     SerialNumber = "12345"'                     Upc = "67890"'                     Icons = new[] {                         new DummyIcon (100' 100' 32' "image/png")'                         new DummyIcon (100' 100' 32' "image/jpeg")                     }'                     Services = new[] {                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                     }'                     EmbeddedDevices = new[] {                         new Device (                             new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-embedded-device"' new Version (1' 0))'                             "uuid:fed1"'                             "Mono.Upnp.Tests Full Embedded Device"'                             "Mono Project"'                             "Full Embedded Device"'                             new DeviceOptions {                                 ManufacturerUrl = new Uri ("http://www.mono-project.org")'                                 ModelDescription = "An embedded device description with all optional information."'                                 ModelNumber = "1"'                                 ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                                 SerialNumber = "12345"'                                 Upc = "67890"'                                 Icons = new[] {                                     new DummyIcon (100' 100' 32' "image/png")'                                     new DummyIcon (100' 100' 32' "image/jpeg")                                 }'                                 Services = new[] {                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                                 }                             }                         )                     }                 }             );
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,CreateRoot,The following statement contains a magic number: return new DummyRoot (                 new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-device"' new Version (1' 0))'                 "uuid:fd1"'                 "Mono.Upnp.Tests Full Device"'                 "Mono Project"'                 "Full Device"'                 new DeviceOptions {                     ManufacturerUrl = new Uri ("http://www.mono-project.org")'                     ModelDescription = "A device description with all optional information."'                     ModelNumber = "1"'                     ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                     SerialNumber = "12345"'                     Upc = "67890"'                     Icons = new[] {                         new DummyIcon (100' 100' 32' "image/png")'                         new DummyIcon (100' 100' 32' "image/jpeg")                     }'                     Services = new[] {                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                     }'                     EmbeddedDevices = new[] {                         new Device (                             new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-embedded-device"' new Version (1' 0))'                             "uuid:fed1"'                             "Mono.Upnp.Tests Full Embedded Device"'                             "Mono Project"'                             "Full Embedded Device"'                             new DeviceOptions {                                 ManufacturerUrl = new Uri ("http://www.mono-project.org")'                                 ModelDescription = "An embedded device description with all optional information."'                                 ModelNumber = "1"'                                 ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                                 SerialNumber = "12345"'                                 Upc = "67890"'                                 Icons = new[] {                                     new DummyIcon (100' 100' 32' "image/png")'                                     new DummyIcon (100' 100' 32' "image/jpeg")                                 }'                                 Services = new[] {                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                                 }                             }                         )                     }                 }             );
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,CreateRoot,The following statement contains a magic number: return new DummyRoot (                 new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-device"' new Version (1' 0))'                 "uuid:fd1"'                 "Mono.Upnp.Tests Full Device"'                 "Mono Project"'                 "Full Device"'                 new DeviceOptions {                     ManufacturerUrl = new Uri ("http://www.mono-project.org")'                     ModelDescription = "A device description with all optional information."'                     ModelNumber = "1"'                     ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                     SerialNumber = "12345"'                     Upc = "67890"'                     Icons = new[] {                         new DummyIcon (100' 100' 32' "image/png")'                         new DummyIcon (100' 100' 32' "image/jpeg")                     }'                     Services = new[] {                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                     }'                     EmbeddedDevices = new[] {                         new Device (                             new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-embedded-device"' new Version (1' 0))'                             "uuid:fed1"'                             "Mono.Upnp.Tests Full Embedded Device"'                             "Mono Project"'                             "Full Embedded Device"'                             new DeviceOptions {                                 ManufacturerUrl = new Uri ("http://www.mono-project.org")'                                 ModelDescription = "An embedded device description with all optional information."'                                 ModelNumber = "1"'                                 ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                                 SerialNumber = "12345"'                                 Upc = "67890"'                                 Icons = new[] {                                     new DummyIcon (100' 100' 32' "image/png")'                                     new DummyIcon (100' 100' 32' "image/jpeg")                                 }'                                 Services = new[] {                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                                 }                             }                         )                     }                 }             );
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,CreateRoot,The following statement contains a magic number: return new DummyRoot (                 new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-device"' new Version (1' 0))'                 "uuid:fd1"'                 "Mono.Upnp.Tests Full Device"'                 "Mono Project"'                 "Full Device"'                 new DeviceOptions {                     ManufacturerUrl = new Uri ("http://www.mono-project.org")'                     ModelDescription = "A device description with all optional information."'                     ModelNumber = "1"'                     ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                     SerialNumber = "12345"'                     Upc = "67890"'                     Icons = new[] {                         new DummyIcon (100' 100' 32' "image/png")'                         new DummyIcon (100' 100' 32' "image/jpeg")                     }'                     Services = new[] {                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                     }'                     EmbeddedDevices = new[] {                         new Device (                             new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-embedded-device"' new Version (1' 0))'                             "uuid:fed1"'                             "Mono.Upnp.Tests Full Embedded Device"'                             "Mono Project"'                             "Full Embedded Device"'                             new DeviceOptions {                                 ManufacturerUrl = new Uri ("http://www.mono-project.org")'                                 ModelDescription = "An embedded device description with all optional information."'                                 ModelNumber = "1"'                                 ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                                 SerialNumber = "12345"'                                 Upc = "67890"'                                 Icons = new[] {                                     new DummyIcon (100' 100' 32' "image/png")'                                     new DummyIcon (100' 100' 32' "image/jpeg")                                 }'                                 Services = new[] {                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                                 }                             }                         )                     }                 }             );
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,CreateRoot,The following statement contains a magic number: return new DummyRoot (                 new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-device"' new Version (1' 0))'                 "uuid:fd1"'                 "Mono.Upnp.Tests Full Device"'                 "Mono Project"'                 "Full Device"'                 new DeviceOptions {                     ManufacturerUrl = new Uri ("http://www.mono-project.org")'                     ModelDescription = "A device description with all optional information."'                     ModelNumber = "1"'                     ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                     SerialNumber = "12345"'                     Upc = "67890"'                     Icons = new[] {                         new DummyIcon (100' 100' 32' "image/png")'                         new DummyIcon (100' 100' 32' "image/jpeg")                     }'                     Services = new[] {                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                     }'                     EmbeddedDevices = new[] {                         new Device (                             new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-embedded-device"' new Version (1' 0))'                             "uuid:fed1"'                             "Mono.Upnp.Tests Full Embedded Device"'                             "Mono Project"'                             "Full Embedded Device"'                             new DeviceOptions {                                 ManufacturerUrl = new Uri ("http://www.mono-project.org")'                                 ModelDescription = "An embedded device description with all optional information."'                                 ModelNumber = "1"'                                 ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                                 SerialNumber = "12345"'                                 Upc = "67890"'                                 Icons = new[] {                                     new DummyIcon (100' 100' 32' "image/png")'                                     new DummyIcon (100' 100' 32' "image/jpeg")                                 }'                                 Services = new[] {                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                                 }                             }                         )                     }                 }             );
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,CreateRoot,The following statement contains a magic number: return new DummyRoot (                 new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-device"' new Version (1' 0))'                 "uuid:fd1"'                 "Mono.Upnp.Tests Full Device"'                 "Mono Project"'                 "Full Device"'                 new DeviceOptions {                     ManufacturerUrl = new Uri ("http://www.mono-project.org")'                     ModelDescription = "A device description with all optional information."'                     ModelNumber = "1"'                     ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                     SerialNumber = "12345"'                     Upc = "67890"'                     Icons = new[] {                         new DummyIcon (100' 100' 32' "image/png")'                         new DummyIcon (100' 100' 32' "image/jpeg")                     }'                     Services = new[] {                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                     }'                     EmbeddedDevices = new[] {                         new Device (                             new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-embedded-device"' new Version (1' 0))'                             "uuid:fed1"'                             "Mono.Upnp.Tests Full Embedded Device"'                             "Mono Project"'                             "Full Embedded Device"'                             new DeviceOptions {                                 ManufacturerUrl = new Uri ("http://www.mono-project.org")'                                 ModelDescription = "An embedded device description with all optional information."'                                 ModelNumber = "1"'                                 ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                                 SerialNumber = "12345"'                                 Upc = "67890"'                                 Icons = new[] {                                     new DummyIcon (100' 100' 32' "image/png")'                                     new DummyIcon (100' 100' 32' "image/jpeg")                                 }'                                 Services = new[] {                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                                 }                             }                         )                     }                 }             );
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,CreateRoot,The following statement contains a magic number: return new DummyRoot (                 new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-device"' new Version (1' 0))'                 "uuid:fd1"'                 "Mono.Upnp.Tests Full Device"'                 "Mono Project"'                 "Full Device"'                 new DeviceOptions {                     ManufacturerUrl = new Uri ("http://www.mono-project.org")'                     ModelDescription = "A device description with all optional information."'                     ModelNumber = "1"'                     ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                     SerialNumber = "12345"'                     Upc = "67890"'                     Icons = new[] {                         new DummyIcon (100' 100' 32' "image/png")'                         new DummyIcon (100' 100' 32' "image/jpeg")                     }'                     Services = new[] {                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                     }'                     EmbeddedDevices = new[] {                         new Device (                             new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-embedded-device"' new Version (1' 0))'                             "uuid:fed1"'                             "Mono.Upnp.Tests Full Embedded Device"'                             "Mono Project"'                             "Full Embedded Device"'                             new DeviceOptions {                                 ManufacturerUrl = new Uri ("http://www.mono-project.org")'                                 ModelDescription = "An embedded device description with all optional information."'                                 ModelNumber = "1"'                                 ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                                 SerialNumber = "12345"'                                 Upc = "67890"'                                 Icons = new[] {                                     new DummyIcon (100' 100' 32' "image/png")'                                     new DummyIcon (100' 100' 32' "image/jpeg")                                 }'                                 Services = new[] {                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                                 }                             }                         )                     }                 }             );
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,CreateRoot,The following statement contains a magic number: return new DummyRoot (                 new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-device"' new Version (1' 0))'                 "uuid:fd1"'                 "Mono.Upnp.Tests Full Device"'                 "Mono Project"'                 "Full Device"'                 new DeviceOptions {                     ManufacturerUrl = new Uri ("http://www.mono-project.org")'                     ModelDescription = "A device description with all optional information."'                     ModelNumber = "1"'                     ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                     SerialNumber = "12345"'                     Upc = "67890"'                     Icons = new[] {                         new DummyIcon (100' 100' 32' "image/png")'                         new DummyIcon (100' 100' 32' "image/jpeg")                     }'                     Services = new[] {                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                     }'                     EmbeddedDevices = new[] {                         new Device (                             new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-embedded-device"' new Version (1' 0))'                             "uuid:fed1"'                             "Mono.Upnp.Tests Full Embedded Device"'                             "Mono Project"'                             "Full Embedded Device"'                             new DeviceOptions {                                 ManufacturerUrl = new Uri ("http://www.mono-project.org")'                                 ModelDescription = "An embedded device description with all optional information."'                                 ModelNumber = "1"'                                 ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                                 SerialNumber = "12345"'                                 Upc = "67890"'                                 Icons = new[] {                                     new DummyIcon (100' 100' 32' "image/png")'                                     new DummyIcon (100' 100' 32' "image/jpeg")                                 }'                                 Services = new[] {                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                                 }                             }                         )                     }                 }             );
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,CreateRoot,The following statement contains a magic number: return new DummyRoot (                 new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-device"' new Version (1' 0))'                 "uuid:fd1"'                 "Mono.Upnp.Tests Full Device"'                 "Mono Project"'                 "Full Device"'                 new DeviceOptions {                     ManufacturerUrl = new Uri ("http://www.mono-project.org")'                     ModelDescription = "A device description with all optional information."'                     ModelNumber = "1"'                     ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                     SerialNumber = "12345"'                     Upc = "67890"'                     Icons = new[] {                         new DummyIcon (100' 100' 32' "image/png")'                         new DummyIcon (100' 100' 32' "image/jpeg")                     }'                     Services = new[] {                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                     }'                     EmbeddedDevices = new[] {                         new Device (                             new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-embedded-device"' new Version (1' 0))'                             "uuid:fed1"'                             "Mono.Upnp.Tests Full Embedded Device"'                             "Mono Project"'                             "Full Embedded Device"'                             new DeviceOptions {                                 ManufacturerUrl = new Uri ("http://www.mono-project.org")'                                 ModelDescription = "An embedded device description with all optional information."'                                 ModelNumber = "1"'                                 ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                                 SerialNumber = "12345"'                                 Upc = "67890"'                                 Icons = new[] {                                     new DummyIcon (100' 100' 32' "image/png")'                                     new DummyIcon (100' 100' 32' "image/jpeg")                                 }'                                 Services = new[] {                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                                 }                             }                         )                     }                 }             );
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,CreateRoot,The following statement contains a magic number: return new DummyRoot (                 new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-device"' new Version (1' 0))'                 "uuid:fd1"'                 "Mono.Upnp.Tests Full Device"'                 "Mono Project"'                 "Full Device"'                 new DeviceOptions {                     ManufacturerUrl = new Uri ("http://www.mono-project.org")'                     ModelDescription = "A device description with all optional information."'                     ModelNumber = "1"'                     ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                     SerialNumber = "12345"'                     Upc = "67890"'                     Icons = new[] {                         new DummyIcon (100' 100' 32' "image/png")'                         new DummyIcon (100' 100' 32' "image/jpeg")                     }'                     Services = new[] {                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                     }'                     EmbeddedDevices = new[] {                         new Device (                             new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-embedded-device"' new Version (1' 0))'                             "uuid:fed1"'                             "Mono.Upnp.Tests Full Embedded Device"'                             "Mono Project"'                             "Full Embedded Device"'                             new DeviceOptions {                                 ManufacturerUrl = new Uri ("http://www.mono-project.org")'                                 ModelDescription = "An embedded device description with all optional information."'                                 ModelNumber = "1"'                                 ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                                 SerialNumber = "12345"'                                 Upc = "67890"'                                 Icons = new[] {                                     new DummyIcon (100' 100' 32' "image/png")'                                     new DummyIcon (100' 100' 32' "image/jpeg")                                 }'                                 Services = new[] {                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                                 }                             }                         )                     }                 }             );
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,CreateRoot,The following statement contains a magic number: return new DummyRoot (                 new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-device"' new Version (1' 0))'                 "uuid:fd1"'                 "Mono.Upnp.Tests Full Device"'                 "Mono Project"'                 "Full Device"'                 new DeviceOptions {                     ManufacturerUrl = new Uri ("http://www.mono-project.org")'                     ModelDescription = "A device description with all optional information."'                     ModelNumber = "1"'                     ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                     SerialNumber = "12345"'                     Upc = "67890"'                     Icons = new[] {                         new DummyIcon (100' 100' 32' "image/png")'                         new DummyIcon (100' 100' 32' "image/jpeg")                     }'                     Services = new[] {                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                     }'                     EmbeddedDevices = new[] {                         new Device (                             new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-full-embedded-device"' new Version (1' 0))'                             "uuid:fed1"'                             "Mono.Upnp.Tests Full Embedded Device"'                             "Mono Project"'                             "Full Embedded Device"'                             new DeviceOptions {                                 ManufacturerUrl = new Uri ("http://www.mono-project.org")'                                 ModelDescription = "An embedded device description with all optional information."'                                 ModelNumber = "1"'                                 ModelUrl = new Uri ("http://www.mono-project.org/Mono.Upnp")'                                 SerialNumber = "12345"'                                 Upc = "67890"'                                 Icons = new[] {                                     new DummyIcon (100' 100' 32' "image/png")'                                     new DummyIcon (100' 100' 32' "image/jpeg")                                 }'                                 Services = new[] {                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                                 }                             }                         )                     }                 }             );
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The following statement contains a magic number: Assert.AreEqual (100' icons.Current.Width);
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The following statement contains a magic number: Assert.AreEqual (100' icons.Current.Height);
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The following statement contains a magic number: Assert.AreEqual (32' icons.Current.Depth);
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The following statement contains a magic number: Assert.AreEqual (100' icons.Current.Width);
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The following statement contains a magic number: Assert.AreEqual (100' icons.Current.Height);
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The following statement contains a magic number: Assert.AreEqual (32' icons.Current.Depth);
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The following statement contains a magic number: Assert.AreEqual (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' services.Current.Type);
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The following statement contains a magic number: Assert.AreEqual (100' icons.Current.Width);
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The following statement contains a magic number: Assert.AreEqual (100' icons.Current.Height);
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The following statement contains a magic number: Assert.AreEqual (32' icons.Current.Depth);
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The following statement contains a magic number: Assert.AreEqual (100' icons.Current.Width);
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The following statement contains a magic number: Assert.AreEqual (100' icons.Current.Height);
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The following statement contains a magic number: Assert.AreEqual (32' icons.Current.Depth);
Magic Number,Mono.Upnp.Tests,DeviceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\DeviceDescriptionTests.cs,FullDeviceDescriptionDeserializationTest,The following statement contains a magic number: Assert.AreEqual (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' services.Current.Type);
Magic Number,Mono.Upnp.Tests,ServiceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServiceDescriptionTests.cs,FullScpdDeserializationTest,The following statement contains a magic number: Assert.AreEqual (2' controller.Actions.Count);
Magic Number,Mono.Upnp.Tests,ServiceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServiceDescriptionTests.cs,FullScpdDeserializationTest,The following statement contains a magic number: Assert.AreEqual (5' action.Arguments.Count);
Magic Number,Mono.Upnp.Tests,ServiceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServiceDescriptionTests.cs,FullScpdDeserializationTest,The following statement contains a magic number: Assert.AreEqual (5' action.Arguments.Count);
Magic Number,Mono.Upnp.Tests,ServiceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServiceDescriptionTests.cs,FullScpdDeserializationTest,The following statement contains a magic number: Assert.AreEqual (7' controller.StateVariables.Count);
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,Subscribe,The following statement contains a magic number: !Monitor.Wait (mutex' TimeSpan.FromSeconds (30))
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,UnsubscribeUnicastEventTest,The following statement contains a magic number: Monitor.Wait (mutex' TimeSpan.FromSeconds (10))
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,CreateRoot,The following statement contains a magic number: return new DummyRoot (                 new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-device"' new Version (1' 0))'                 "uuid:d1"'                 "Mono.Upnp.Tests Device"'                 "Mono Project"'                 "Device"'                 new DeviceOptions {                     Icons = icons1'                     Services = new[] {                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                     }'                     EmbeddedDevices = new[] {                         new Device (                             new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-embedded-device"' new Version (1' 0))'                             "uuid:ed1"'                             "Mono.Upnp.Tests Embedded Device"'                             "Mono Project"'                             "Embedded Device"'                             new DeviceOptions {                                 Icons = icons2'                                 Services = new[] {                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                                 }                             }                         )                     }                 }             );
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,CreateRoot,The following statement contains a magic number: return new DummyRoot (                 new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-device"' new Version (1' 0))'                 "uuid:d1"'                 "Mono.Upnp.Tests Device"'                 "Mono Project"'                 "Device"'                 new DeviceOptions {                     Icons = icons1'                     Services = new[] {                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                         new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                     }'                     EmbeddedDevices = new[] {                         new Device (                             new DeviceType ("schemas-upnp-org"' "mono-upnp-tests-embedded-device"' new Version (1' 0))'                             "uuid:ed1"'                             "Mono.Upnp.Tests Embedded Device"'                             "Mono Project"'                             "Embedded Device"'                             new DeviceOptions {                                 Icons = icons2'                                 Services = new[] {                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))' "urn:upnp-org:serviceId:testService1")'                                     new DummyService (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))' "urn:upnp-org:serviceId:testService2")'                                 }                             }                         )                     }                 }             );
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,IconTest,The following statement contains a magic number: var root = CreateRoot (                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 0 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 1 })                 }'                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 2 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 3 })                 }             );
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,IconTest,The following statement contains a magic number: var root = CreateRoot (                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 0 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 1 })                 }'                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 2 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 3 })                 }             );
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,IconTest,The following statement contains a magic number: var root = CreateRoot (                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 0 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 1 })                 }'                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 2 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 3 })                 }             );
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,IconTest,The following statement contains a magic number: var root = CreateRoot (                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 0 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 1 })                 }'                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 2 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 3 })                 }             );
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,IconTest,The following statement contains a magic number: var root = CreateRoot (                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 0 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 1 })                 }'                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 2 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 3 })                 }             );
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,IconTest,The following statement contains a magic number: var root = CreateRoot (                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 0 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 1 })                 }'                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 2 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 3 })                 }             );
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,IconTest,The following statement contains a magic number: var root = CreateRoot (                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 0 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 1 })                 }'                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 2 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 3 })                 }             );
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,IconTest,The following statement contains a magic number: var root = CreateRoot (                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 0 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 1 })                 }'                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 2 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 3 })                 }             );
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,IconTest,The following statement contains a magic number: var root = CreateRoot (                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 0 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 1 })                 }'                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 2 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 3 })                 }             );
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,IconTest,The following statement contains a magic number: var root = CreateRoot (                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 0 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 1 })                 }'                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 2 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 3 })                 }             );
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,IconTest,The following statement contains a magic number: var root = CreateRoot (                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 0 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 1 })                 }'                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 2 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 3 })                 }             );
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,IconTest,The following statement contains a magic number: var root = CreateRoot (                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 0 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 1 })                 }'                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 2 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 3 })                 }             );
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,IconTest,The following statement contains a magic number: var root = CreateRoot (                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 0 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 1 })                 }'                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 2 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 3 })                 }             );
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,IconTest,The following statement contains a magic number: var root = CreateRoot (                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 0 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 1 })                 }'                 new[] {                     new Icon (100' 100' 32' "image/jpeg"' new byte[] { 2 })'                     new Icon (100' 100' 32' "image/png"' new byte[] { 3 })                 }             );
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,IconTest,The following statement contains a magic number: AssertEquality (url' 0' 2);
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,IconTest,The following statement contains a magic number: AssertEquality (url' 1' 3);
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,AnnouncementTest,The following statement contains a magic number: !Monitor.Wait (mutex' TimeSpan.FromSeconds (30))
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,GeneratePrefix,The following statement contains a magic number: return string.Format (                         "http://{0}:{1}/mono-upnp-tests/event-subscriber/"' address' random.Next (1024' 5000));
Magic Number,Mono.Upnp.Tests,ServerTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServerTests.cs,GeneratePrefix,The following statement contains a magic number: return string.Format (                         "http://{0}:{1}/mono-upnp-tests/event-subscriber/"' address' random.Next (1024' 5000));
Magic Number,Mono.Upnp.Tests,ClientTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ClientTests.cs,DescriptionCacheTest,The following statement contains a magic number: client.Browse (new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0)));
Magic Number,Mono.Upnp.Tests,ClientTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ClientTests.cs,DescriptionCacheTest,The following statement contains a magic number: !Monitor.Wait (mutex' TimeSpan.FromSeconds (30))
Magic Number,Mono.Upnp.Tests,ClientTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ClientTests.cs,AnnouncementTest,The following statement contains a magic number: !Monitor.Wait (mutex' TimeSpan.FromSeconds (30))
Magic Number,Mono.Upnp.Tests,ClientTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ClientTests.cs,GetDeviceTest,The following statement contains a magic number: !Monitor.Wait (mutex' TimeSpan.FromSeconds (30))
Magic Number,Mono.Upnp.Tests,ClientTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ClientTests.cs,GetServiceTest,The following statement contains a magic number: !Monitor.Wait (mutex' TimeSpan.FromSeconds (30))
Magic Number,Mono.Upnp.Tests,ClientTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ClientTests.cs,GetServiceControllerTest,The following statement contains a magic number: !Monitor.Wait (mutex' TimeSpan.FromSeconds (30))
Magic Number,Mono.Upnp.Tests,ClientTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ClientTests.cs,ControlTest,The following statement contains a magic number: !Monitor.Wait (mutex' TimeSpan.FromSeconds (30))
Magic Number,Mono.Upnp.Tests,ClientTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ClientTests.cs,EventTest,The following statement contains a magic number: !Monitor.Wait (mutex' TimeSpan.FromSeconds (30))
Magic Number,Mono.Upnp.Tests,ClientTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ClientTests.cs,CreateRoot,The following statement contains a magic number: return new DummyRoot (                 new DeviceType ("schemas-upnp-org"' "mono-upnp-test-device"' new Version (1' 0))'                 "uuid:d1"'                 "Mono.Upnp.Tests Device"'                 "Mono Project"'                 "Device"'                 new DeviceOptions {                     Services = new[] {                         new DummyService (                             new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (1' 0))'                             "urn:upnp-org:serviceId:testService1"                         )'                         new DummyService (                             new ServiceType ("schemas-upnp-org"' "mono-upnp-test-service"' new Version (2' 0))'                             "urn:upnp-org:serviceId:testService2"                         )                     }                 }             );
Magic Number,Mono.Upnp.Tests,TypeInfoTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\TypeInfoTests.cs,ParseType,The following statement contains a magic number: Assert.AreEqual (                 constructor ("mydomain.com"' "mytype"' new Version (2' 0))'                 parser ("urn:mydomain.com:" + kind + ":mytype:2"));
Duplicate Code,Mono.Upnp.Tests,ServiceDescriptionTests,C:\research\architectureSmells\repos\mono_mono-upnp\tests\Mono.Upnp.Tests\ServiceDescriptionTests.cs,FullScpdDeserializationTest,The method contains a code clone-set at the following line numbers (starting from the method definition): ((14' 33)' (42' 61))
