Implementation smell,Namespace,Class,File,Method,Description
Magic Number,SampleCode,Program,C:\repos\mperdeck_LINQtoCSV\SampleCode\Program.cs,ReadFileWithExceptionHandling,The following statement contains a magic number: try              {                  CsvContext cc = new CsvContext();                    CsvFileDescription inputFileDescription = new CsvFileDescription                  {                      MaximumNbrExceptions = 50 // limit number of aggregated exceptions to 50                  };                    IEnumerable<Product> products =                      cc.Read<Product>("../../TestFiles/products.csv"' inputFileDescription);                    // NOT SHOWN IN EXAMPLE IN ARTICLE                  foreach (var item in products) { Console.WriteLine(item); }                    // Do data processing                  // ...........                }              catch(AggregatedException ae)              {                  // Process all exceptions generated while processing the file                    List<Exception> innerExceptionsList =                      (List<Exception>)ae.Data["InnerExceptionsList"];                    foreach (Exception e in innerExceptionsList)                  {                      ShowErrorMessage(e.Message);                  }              }              catch(DuplicateFieldIndexException dfie)              {                  // name of the class used with the Read method - in this case "Product"                  string typeName = Convert.ToString(dfie.Data["TypeName"]);                    // Names of the two fields or properties that have the same FieldIndex                  string fieldName = Convert.ToString(dfie.Data["FieldName"]);                  string fieldName2 = Convert.ToString(dfie.Data["FieldName2"]);                    // Actual FieldIndex that the two fields have in common                  int commonFieldIndex = Convert.ToInt32(dfie.Data["Index"]);                    // Do some processing with this information                  // .........                      // Inform user of error situation                  ShowErrorMessage(dfie.Message);              }              catch(Exception e)              {                  ShowErrorMessage(e.Message);              }
