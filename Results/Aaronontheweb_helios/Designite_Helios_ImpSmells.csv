Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Helios.Channels,AbstractChannelHandlerContext,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\AbstractChannelHandlerContext.cs,CalculateSkipPropagationFlags,Cyclomatic complexity of the method is 20
Complex Method,Helios.Channels,ChannelOutboundBuffer,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\ChannelOutboundBuffer.cs,GetNioBuffers,Cyclomatic complexity of the method is 10
Complex Method,Helios.Channels,DefaultChannelConfiguration,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\DefaultChannelConfiguration.cs,GetOption,Cyclomatic complexity of the method is 10
Complex Method,Helios.Channels,DefaultChannelConfiguration,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\DefaultChannelConfiguration.cs,SetOption,Cyclomatic complexity of the method is 10
Complex Method,Helios.Channels.Local,LocalChannel,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Local\LocalChannel.cs,DoClose,Cyclomatic complexity of the method is 9
Complex Method,Helios.Channels.Local,LocalChannel,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Local\LocalChannel.cs,DoWrite,Cyclomatic complexity of the method is 11
Complex Method,Helios.Channels.Sockets,AbstractSocketByteChannel,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Sockets\AbstractSocketByteChannel.cs,DoWrite,Cyclomatic complexity of the method is 10
Complex Method,Helios.Channels.Sockets,AbstractSocketChannel,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Sockets\AbstractSocketChannel.cs,OnIoCompleted,Cyclomatic complexity of the method is 18
Complex Method,Helios.Channels.Sockets,DefaultSocketChannelConfiguration,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Sockets\DefaultSocketChannelConfiguration.cs,GetOption,Cyclomatic complexity of the method is 8
Complex Method,Helios.Channels.Sockets,DefaultSocketChannelConfiguration,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Sockets\DefaultSocketChannelConfiguration.cs,SetOption,Cyclomatic complexity of the method is 9
Complex Method,Helios.Channels.Sockets,TcpSocketChannel,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Sockets\TcpSocketChannel.cs,DoReadBytes,Cyclomatic complexity of the method is 13
Complex Method,Helios.Channels.Sockets,TcpSocketChannel,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Sockets\TcpSocketChannel.cs,DoWrite,Cyclomatic complexity of the method is 20
Complex Method,Helios.Codecs,ByteToMessageDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\ByteToMessageDecoder.cs,CallDecode,Cyclomatic complexity of the method is 11
Complex Method,Helios.Codecs,LengthFieldBasedFrameDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldFrameBasedDecoder.cs,Decode,Cyclomatic complexity of the method is 9
Complex Method,Helios.Codecs,LengthFieldBasedFrameDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldFrameBasedDecoder.cs,GetUnadjustedFrameLength,Cyclomatic complexity of the method is 14
Complex Method,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,Cyclomatic complexity of the method is 20
Complex Method,Helios.Concurrency,SingleThreadEventExecutor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\SingleThreadEventExecutor.cs,GracefulShutdownAsync,Cyclomatic complexity of the method is 12
Complex Method,Helios.Logging,LoggingAdapter,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Logging\LoggingAdapter.cs,Log,Cyclomatic complexity of the method is 12
Complex Method,Helios.Util.Concurrency,TaskEx,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Util\Concurrency\TaskEx.cs,LinkOutcome,Cyclomatic complexity of the method is 12
Complex Method,Helios.Util.Concurrency,TaskEx,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Util\Concurrency\TaskEx.cs,LinkOutcome,Cyclomatic complexity of the method is 12
Complex Method,Helios.Serialization,LengthFieldFrameBasedDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldFrameBasedDecoder.cs,Decode,Cyclomatic complexity of the method is 8
Complex Method,Helios.Serialization,LengthFieldFrameBasedDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldFrameBasedDecoder.cs,GetUnadjustedFrameLength,Cyclomatic complexity of the method is 14
Complex Method,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,Cyclomatic complexity of the method is 22
Complex Method,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,Cyclomatic complexity of the method is 20
Complex Method,Helios.Net.Connections,UnstreamedConnectionBase,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\UnstreamedConnectionBase.cs,ReceiveCallback,Cyclomatic complexity of the method is 8
Complex Method,Helios.Net.Connections,TcpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\TcpConnection.cs,Configure,Cyclomatic complexity of the method is 8
Complex Method,Helios.Reactor.Tcp,TcpProxyReactor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Tcp\TcpProxyReactor.cs,Configure,Cyclomatic complexity of the method is 9
Complex Method,Helios.Reactor.Udp,UdpProxyReactor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Udp\UdpProxyReactor.cs,ReceiveCallback,Cyclomatic complexity of the method is 10
Long Parameter List,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,UnpooledDirectByteBuf,The method has 5 parameters.
Long Parameter List,Helios.Channels,PausableChannelEventExecutor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\PausableChannelEventExecutor.cs,ScheduleAsync,The method has 5 parameters.
Long Parameter List,Helios.Codecs,LengthFieldBasedFrameDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldFrameBasedDecoder.cs,LengthFieldBasedFrameDecoder,The method has 5 parameters.
Long Parameter List,Helios.Codecs,LengthFieldBasedFrameDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldFrameBasedDecoder.cs,LengthFieldBasedFrameDecoder,The method has 6 parameters.
Long Parameter List,Helios.Codecs,LengthFieldBasedFrameDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldFrameBasedDecoder.cs,LengthFieldBasedFrameDecoder,The method has 7 parameters.
Long Parameter List,Helios.Concurrency,AbstractEventExecutor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\AbstractEventExecutor.cs,ScheduleAsync,The method has 5 parameters.
Long Parameter List,Helios.Concurrency,AbstractScheduledEventExecutor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\AbstractScheduledEventExecutor.cs,ScheduleAsync,The method has 5 parameters.
Long Parameter List,Helios.Concurrency,ActionWithStateAndContextScheduledAsyncTask,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\ActionWithStateAndContextScheduledAsyncTask.cs,ActionWithStateAndContextScheduledAsyncTask,The method has 6 parameters.
Long Parameter List,Helios.Concurrency,ActionWithStateAndContextScheduledTask,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\ActionWithStateAndContextScheduledTask.cs,ActionWithStateAndContextScheduledTask,The method has 5 parameters.
Long Parameter List,Helios.Concurrency,ActionWithStateScheduledAsyncTask,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\ActionWithStateScheduledAsyncTask.cs,ActionWithStateScheduledAsyncTask,The method has 5 parameters.
Long Parameter List,Helios.Concurrency,IEventExecutor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\IEventExecutor.cs,ScheduleAsync,The method has 5 parameters.
Long Parameter List,Helios.Util,ByteArrayExtensions,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Util\ByteArrayExtensions.cs,SetRange,The method has 5 parameters.
Long Parameter List,Helios.Serialization,LengthFieldFrameBasedDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldFrameBasedDecoder.cs,LengthFieldFrameBasedDecoder,The method has 5 parameters.
Long Parameter List,Helios.Serialization,LengthFieldFrameBasedDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldFrameBasedDecoder.cs,LengthFieldFrameBasedDecoder,The method has 6 parameters.
Long Parameter List,Helios.Net.Connections,MulticastUdpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\MulticastUdpConnection.cs,MulticastUdpConnection,The method has 7 parameters.
Long Parameter List,Helios.Net.Connections,MulticastUdpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\MulticastUdpConnection.cs,MulticastUdpConnection,The method has 6 parameters.
Long Parameter List,Helios.Net.Connections,UdpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\UdpConnection.cs,UdpConnection,The method has 6 parameters.
Long Parameter List,Helios.Net.Connections,UdpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\UdpConnection.cs,UdpConnection,The method has 5 parameters.
Long Parameter List,Helios.Net.Connections,UnstreamedConnectionBase,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\UnstreamedConnectionBase.cs,UnstreamedConnectionBase,The method has 7 parameters.
Long Parameter List,Helios.Net.Connections,UnstreamedConnectionBase,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\UnstreamedConnectionBase.cs,UnstreamedConnectionBase,The method has 6 parameters.
Long Parameter List,Helios.Net.Connections,TcpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\TcpConnection.cs,TcpConnection,The method has 7 parameters.
Long Parameter List,Helios.Net.Connections,TcpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\TcpConnection.cs,TcpConnection,The method has 6 parameters.
Long Parameter List,Helios.Net.Connections,TcpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\TcpConnection.cs,TcpConnection,The method has 5 parameters.
Long Parameter List,Helios.Reactor,ProxyReactorBase,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\ProxyReactorBase.cs,ProxyReactorBase,The method has 9 parameters.
Long Parameter List,Helios.Reactor,ReactorBase,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\ReactorBase.cs,ReactorBase,The method has 9 parameters.
Long Parameter List,Helios.Reactor,SingleReceiveLoopProxyReactor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\SingleReceiveLoopProxyReactor.cs,SingleReceiveLoopProxyReactor,The method has 9 parameters.
Long Parameter List,Helios.Reactor.Response,TcpReactorResponseChannel,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Response\TcpReactorResponseChannel.cs,TcpReactorResponseChannel,The method has 5 parameters.
Long Parameter List,Helios.Reactor.Tcp,TcpProxyReactor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Tcp\TcpProxyReactor.cs,TcpProxyReactor,The method has 7 parameters.
Long Parameter List,Helios.Reactor.Tcp,TcpSingleEventLoopProxyReactor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Tcp\TcpProxyReactor.cs,TcpSingleEventLoopProxyReactor,The method has 7 parameters.
Long Parameter List,Helios.Reactor.Udp,UdpProxyReactor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Udp\UdpProxyReactor.cs,UdpProxyReactor,The method has 7 parameters.
Long Identifier,Helios.Codecs,HeliosBackwardsCompatabilityLengthFramePrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\HeliosBackwardsCompatabilityLengthFramePrepender.cs,HeliosBackwardsCompatabilityLengthFramePrepender,The length of the parameter lengthFieldIncludesLengthFieldLength is 36.
Long Identifier,Helios.Codecs,HeliosBackwardsCompatabilityLengthFramePrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\HeliosBackwardsCompatabilityLengthFramePrepender.cs,HeliosBackwardsCompatabilityLengthFramePrepender,The length of the parameter lengthFieldIncludesLengthFieldLength is 36.
Long Identifier,Helios.Codecs,HeliosBackwardsCompatabilityLengthFramePrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\HeliosBackwardsCompatabilityLengthFramePrepender.cs,HeliosBackwardsCompatabilityLengthFramePrepender,The length of the parameter lengthFieldIncludesLengthFieldLength is 36.
Long Identifier,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,LengthFieldPrepender,The length of the parameter lengthFieldIncludesLengthFieldLength is 36.
Long Identifier,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,LengthFieldPrepender,The length of the parameter lengthFieldIncludesLengthFieldLength is 36.
Long Identifier,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,LengthFieldPrepender,The length of the parameter lengthFieldIncludesLengthFieldLength is 36.
Long Identifier,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,LengthFieldPrepender,The length of the parameter lengthIncludesLenghtFieldLength is 31.
Long Identifier,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,LengthFieldPrepender,The length of the parameter lengthIncludesLenghtFieldLength is 31.
Long Statement,Helios.Buffers,AbstractByteBufAllocator,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBufAllocator.cs,Validate,The length of the statement  "		throw new ArgumentOutOfRangeException ("initialCapacity"' string.Format ("initialCapacity ({0}) must be greater than maxCapacity ({1})"' initialCapacity' maxCapacity)); " is 168.
Long Statement,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,SetWriterIndex,The length of the statement  "		throw new IndexOutOfRangeException (string.Format ("WriterIndex: {0} (expected: 0 <= readerIndex({1}) <= writerIndex <= capacity ({2})"' writerIndex' ReaderIndex' Capacity)); " is 174.
Long Statement,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,SetReaderIndex,The length of the statement  "		throw new IndexOutOfRangeException (string.Format ("ReaderIndex: {0} (expected: 0 <= readerIndex <= writerIndex({1})"' readerIndex' WriterIndex)); " is 146.
Long Statement,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,SetIndex,The length of the statement  "		throw new IndexOutOfRangeException (string.Format ("ReaderIndex: {0}' WriterIndex: {1} (expected: 0 <= readerIndex <= writerIndex <= capacity ({2})"' readerIndex' writerIndex' Capacity)); " is 187.
Long Statement,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,EnsureWritable,The length of the statement  "		throw new IndexOutOfRangeException (string.Format ("writerIndex({0}) + minWritableBytes({1}) exceeds maxCapacity({2}): {3}"' WriterIndex' minWritableBytes' MaxCapacity' this)); " is 176.
Long Statement,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,SetBytes,The length of the statement  "		throw new IndexOutOfRangeException (string.Format ("length({0}) exceeds src.readableBytes({1}) where src is: {2}"' length' src.ReadableBytes' src)); " is 148.
Long Statement,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,ReadBytes,The length of the statement  "		throw new IndexOutOfRangeException (string.Format ("length({0}) exceeds destination.WritableBytes({1}) where destination is: {2}"' length' destination.WritableBytes' destination)); " is 180.
Long Statement,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,SkipBytes,The length of the statement  "		throw new IndexOutOfRangeException (string.Format ("length: {0} (expected: readerIndex({1}) + length <= writerIndex({2}))"' length' ReaderIndex' WriterIndex)); " is 159.
Long Statement,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteBytes,The length of the statement  "		throw new IndexOutOfRangeException (string.Format ("length({0}) exceeds src.readableBytes({1}) where src is: {2}"' length' src.ReadableBytes' src)); " is 148.
Long Statement,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,CheckIndex,The length of the statement  "		throw new IndexOutOfRangeException (string.Format ("index: {0}' length: {1} (expected: range(0' {2})"' index' fieldLength' Capacity)); " is 134.
Long Statement,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,CheckSrcIndex,The length of the statement  "		throw new IndexOutOfRangeException (string.Format ("srcIndex: {0}' length: {1} (expected: range(0' {2}))"' srcIndex' length' srcCapacity)); " is 139.
Long Statement,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,CheckDstIndex,The length of the statement  "		throw new IndexOutOfRangeException (string.Format ("dstIndex: {0}' length: {1} (expected: range(0' {2}))"' dstIndex' length' dstCapacity)); " is 139.
Long Statement,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,CheckReadableBytes,The length of the statement  "		throw new ArgumentOutOfRangeException ("minimumReadableBytes"' string.Format ("minimumReadableBytes: {0} (expected: >= 0)"' minimumReadableBytes)); " is 147.
Long Statement,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,CheckReadableBytes,The length of the statement  "		throw new IndexOutOfRangeException (string.Format ("readerIndex({0}) + length({1}) exceeds writerIndex({2}): {3}"' ReaderIndex' minimumReadableBytes' WriterIndex' this)); " is 170.
Long Statement,Helios.Channels,AbstractChannelHandlerContext,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\AbstractChannelHandlerContext.cs,GetSkipPropagationFlags,The length of the statement  "	var skipDirection = SkipTable.GetValue (handler.GetType ()' handlerType => Tuple.Create (CalculateSkipPropagationFlags (handlerType))); " is 135.
Long Statement,Helios.Channels,ChannelHandlerInvokerUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\ChannelHandlerInvokerUtil.cs,InvokeExceptionCaughtNow,The length of the statement  "			DefaultChannelPipeline.Logger.Warning ("An exception was thrown by a user handler's exceptionCaught() method: {0}"' ex); " is 120.
Long Statement,Helios.Channels,ChannelHandlerInvokerUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\ChannelHandlerInvokerUtil.cs,NotifyHandlerException,The length of the statement  "			DefaultChannelPipeline.Logger.Warning ("An exception was thrown by a user handler " + "while handling an exceptionCaught event {0}"' cause); " is 140.
Long Statement,Helios.Channels,ChannelInitializer,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\ChannelInitializer.cs,ChannelRegistered,The length of the statement  "		Logger.Warning ("Failed to initialize a channel. Closing: " + context.Channel + Environment.NewLine + "Cause: {0}"' ex); " is 120.
Long Statement,Helios.Channels,DefaultChannelHandlerInvoker,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\DefaultChannelHandlerInvoker.cs,InvokeExceptionCaught,The length of the statement  "			Executor.Execute ((c' e) => ChannelHandlerInvokerUtil.InvokeExceptionCaughtNow ((IChannelHandlerContext)c' (Exception)e)' ctx' cause); " is 134.
Long Statement,Helios.Channels,DefaultChannelHandlerInvoker,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\DefaultChannelHandlerInvoker.cs,InvokeConnectAsync,The length of the statement  "	return SafeExecuteOutboundAsync (() => ChannelHandlerInvokerUtil.InvokeConnectAsyncNow (ctx' remoteAddress' localAddress)); " is 123.
Long Statement,Helios.Channels,DefaultChannelPipeline,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\DefaultChannelPipeline.cs,DestroyUp,The length of the statement  "			executor.Unwrap ().Execute ((self' c) => ((DefaultChannelPipeline)self).DestroyUp ((AbstractChannelHandlerContext)c)' this' ctx); " is 129.
Long Statement,Helios.Channels,DefaultChannelPipeline,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\DefaultChannelPipeline.cs,DestroyDown,The length of the statement  "			executor.Unwrap ().Execute ((self' c) => ((DefaultChannelPipeline)self).DestroyDown (Thread.CurrentThread' (AbstractChannelHandlerContext)c)' this' ctx); " is 153.
Long Statement,Helios.Channels,DefaultChannelPipeline,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\DefaultChannelPipeline.cs,CallHandlerRemoved,The length of the statement  "		ctx.Executor.Execute ((self' c) => ((DefaultChannelPipeline)self).CallHandlerRemovedUnsafe ((AbstractChannelHandlerContext)c)' this' ctx); " is 138.
Long Statement,Helios.Channels,DefaultChannelPipeline,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\DefaultChannelPipeline.cs,CallHandlerRemovedUnsafe,The length of the statement  "		FireExceptionCaught (new ChannelPipelineException (ctx.Handler.GetType ().Name + ".handlerRemoved() has thrown an exception."' ex)); " is 132.
Long Statement,Helios.Channels,DefaultChannelPipeline,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\DefaultChannelPipeline.cs,CallHandlerAdded,The length of the statement  "		ctx.Executor.Execute ((self' c) => ((DefaultChannelPipeline)self).CallHandlerAddedUnsafe ((AbstractChannelHandlerContext)c)' this' ctx); " is 136.
Long Statement,Helios.Channels,DefaultChannelPipeline,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\DefaultChannelPipeline.cs,CallHandlerAddedUnsafe,The length of the statement  "			FireExceptionCaught (new ChannelPipelineException (ctx.Handler.GetType ().Name + ".HandlerAdded() has thrown an exception; removed."' ex)); " is 139.
Long Statement,Helios.Channels,DefaultChannelPipeline,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\DefaultChannelPipeline.cs,CallHandlerAddedUnsafe,The length of the statement  "			FireExceptionCaught (new ChannelPipelineException (ctx.Handler.GetType ().Name + ".HandlerAdded() has thrown an exception; also failed to remove."' ex)); " is 153.
Long Statement,Helios.Channels.Bootstrap,ServerBootstrap,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Bootstrap\ServerBootstrap.cs,Init,The length of the statement  "		ch.Pipeline.AddLast (new ServerBootstrapAcceptor (currentChildGroup' currentChildHandler' childConfigSetupFunc/*' currentChildAttrs*/)); " is 136.
Long Statement,Helios.Channels.Bootstrap,ServerBootstrap,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Bootstrap\ServerBootstrap.cs,CompileOptionsSetupFunc,The length of the statement  "	var setOptionMethodDefinition = typeof(IChannelConfiguration).FindMembers (MemberTypes.Method' BindingFlags.Instance | BindingFlags.Public' Type.FilterName' "SetOption").Cast<MethodInfo> ().First (x => x.IsGenericMethodDefinition); " is 231.
Long Statement,Helios.Channels.Bootstrap,ServerBootstrap,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Bootstrap\ServerBootstrap.cs,CompileOptionsSetupFunc,The length of the statement  "			throw new NotSupportedException (string.Format ("Channel option is of an unsupported type `{0}`. Only ChannelOption and ChannelOption<T> are supported."' optionType)); " is 167.
Long Statement,Helios.Channels.Bootstrap,ServerBootstrap,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Bootstrap\ServerBootstrap.cs,CompileOptionsSetupFunc,The length of the statement  "		assignments.Add (Expression.Assign (resultVariable' Expression.AndAlso (resultVariable' Expression.Call (configParam' setOptionMethod' Expression.Constant (p.Key)' Expression.Constant (p.Value' valueType))))); " is 209.
Long Statement,Helios.Channels.Embedded,EmbeddedChannel,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Embedded\EmbeddedChannel.cs,RecordException,The length of the statement  "		logger.Warning ("More than one exception was raised. " + "Will report only the first one and log others. Cause: {0}"' cause); " is 125.
Long Statement,Helios.Channels.Sockets,AbstractSocketByteChannel,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Sockets\AbstractSocketByteChannel.cs,DoWrite,The length of the statement  "				if (localFlushedAmount == 0)// todo: check for "sent less than attempted bytes" to avoid unnecessary extra doWriteBytes call? " is 125.
Long Statement,Helios.Channels.Sockets,TcpSocketChannel,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Sockets\TcpSocketChannel.cs,DoReadBytes,The length of the statement  "		received = Socket.Receive (buf.Array' buf.ArrayOffset + buf.WriterIndex' buf.WritableBytes' SocketFlags.None' out errorCode); " is 125.
Long Statement,Helios.Channels.Sockets,TcpSocketChannel,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Sockets\TcpSocketChannel.cs,DoWriteBytes,The length of the statement  "	var sent = Socket.Send (buf.Array' buf.ArrayOffset + buf.ReaderIndex' buf.ReadableBytes' SocketFlags.None' out errorCode); " is 122.
Long Statement,Helios.Channels.Sockets,TcpSocketChannel,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Sockets\TcpSocketChannel.cs,DoWrite,The length of the statement  "				int localWrittenBytes = socket.Send (nioBuffer.Array' nioBuffer.Offset' nioBuffer.Count' SocketFlags.None' out errorCode); " is 122.
Long Statement,Helios.Codecs,LengthFieldBasedFrameDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldFrameBasedDecoder.cs,Decode,The length of the statement  "		throw new CorruptedFrameException ("Adjusted frame length (" + frameLength + ") is less " + "than lengthFieldEndOffset: " + lengthFieldEndOffset); " is 146.
Long Statement,Helios.Codecs,LengthFieldBasedFrameDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldFrameBasedDecoder.cs,Decode,The length of the statement  "		throw new CorruptedFrameException ("Adjusted frame length (" + frameLength + ") is less " + "than initialBytesToStrip: " + initialBytesToStrip); " is 144.
Long Statement,Helios.Codecs,LengthFieldBasedFrameDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldFrameBasedDecoder.cs,Fail,The length of the statement  "		throw new TooLongFrameException ("Adjusted frame length exceeds " + maxFrameLength + ": " + frameLength + " - discarded"); " is 122.
Long Statement,Helios.Concurrency,AbstractScheduledEventExecutor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\AbstractScheduledEventExecutor.cs,Schedule,The length of the statement  "	return Schedule (new ActionWithStateAndContextScheduledTask (this' action' context' state' new PreciseDeadline (delay))); " is 121.
Long Statement,Helios.Concurrency,AbstractScheduledEventExecutor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\AbstractScheduledEventExecutor.cs,ScheduleAsync,The length of the statement  "	return Schedule (new ActionScheduledAsyncTask (this' action' new PreciseDeadline (delay)' cancellationToken)).Completion; " is 121.
Long Statement,Helios.Concurrency,AbstractScheduledEventExecutor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\AbstractScheduledEventExecutor.cs,ScheduleAsync,The length of the statement  "	return Schedule (new ActionWithStateAndContextScheduledAsyncTask (this' action' context' state' new PreciseDeadline (delay)' cancellationToken)).Completion; " is 156.
Long Statement,Helios.Concurrency,AbstractScheduledEventExecutor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\AbstractScheduledEventExecutor.cs,ScheduleAsync,The length of the statement  "	return Schedule (new ActionWithStateScheduledAsyncTask (this' action' state' new PreciseDeadline (delay)' cancellationToken)).Completion; " is 137.
Long Statement,Helios.Concurrency,PromiseUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\PromiseUtil.cs,SafeSetFailure,The length of the statement  "		logger.Warning ("Failed to set exception on task successfully because it is done already: {0}; Cause: {1}"' promise' cause); " is 124.
Long Statement,Helios.Concurrency,ScheduledTask,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\ScheduledTask.cs,AtomicCancellationStateUpdate,The length of the statement  "		cancellationState = Interlocked.CompareExchange (ref _volatileCancellationState' cancellationState | newBits' cancellationState); " is 129.
Long Statement,Helios.Concurrency,SingleThreadEventExecutor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\SingleThreadEventExecutor.cs,CleanupAndShutdown,The length of the statement  "		if (oldState >= ST_SHUTTING_DOWN || Interlocked.CompareExchange (ref _runningState' ST_SHUTTING_DOWN' oldState) == oldState) { " is 126.
Long Statement,Helios.Concurrency,SingleThreadEventExecutor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\SingleThreadEventExecutor.cs,CleanupAndShutdown,The length of the statement  "		Logger.Error ("Buggy {0} implementation; {1}.ConfirmShutdown() must be called " + "before run() implementation terminates."' typeof(IEventExecutor).Name' typeof(SingleThreadEventExecutor).Name); " is 194.
Long Statement,Helios.Util,ByteArrayExtensions,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Util\ByteArrayExtensions.cs,Slice,The length of the statement  "		throw new ArgumentOutOfRangeException ("length"' string.Format ("length({0}) cannot be longer than Array.length({1})"' length' array.Length)); " is 142.
Long Statement,Helios.Util,ByteArrayExtensions,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Util\ByteArrayExtensions.cs,Slice,The length of the statement  "		throw new ArgumentOutOfRangeException ("length"' string.Format ("index: ({0})' length({1}) index + length cannot be longer than Array.length({2})"' index' length' array.Length)); " is 178.
Long Statement,Helios.Util,ByteArrayExtensions,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Util\ByteArrayExtensions.cs,SetRange,The length of the statement  "		throw new ArgumentOutOfRangeException ("srcLength"' string.Format ("index: ({0})' srcLength({1}) index + length cannot be longer than Array.length({2})"' index' srcLength' array.Length)); " is 187.
Long Statement,Helios.Util,ByteArrayExtensions,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Util\ByteArrayExtensions.cs,SetRange,The length of the statement  "		throw new ArgumentOutOfRangeException ("srcLength"' string.Format ("index: ({0})' srcLength({1}) index + length cannot be longer than src.length({2})"' srcIndex' srcLength' src.Length)); " is 186.
Long Statement,Helios.Util,Guard,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Util\Guard.cs,NotLessThan,The length of the statement  "		throw new ArgumentOutOfRangeException ("value"' string.Format ("Value was {0} - cannot be less than {1}!"' value' minimumValue)); " is 129.
Long Statement,Helios.Util,Guard,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Util\Guard.cs,NotGreaterThan,The length of the statement  "		throw new ArgumentOutOfRangeException ("value"' string.Format ("Value was {0} - cannot be greater than {1}!"' value' maximumValue)); " is 132.
Long Statement,Helios.Util.Concurrency,TaskEx,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Util\Concurrency\TaskEx.cs,LinkOutcome,The length of the statement  "		task.ContinueWith (LinkOutcomeActionHost<T>.Action' taskCompletionSource' TaskContinuationOptions.ExecuteSynchronously); " is 120.
Long Statement,Helios.Net,SystemAddressHelper,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\SystemAddressHelper.cs,GetConnectedNetworkInterface,The length of the statement  "		if ((ni.OperationalStatus != OperationalStatus.Up) || (ni.NetworkInterfaceType == NetworkInterfaceType.Loopback) || (ni.NetworkInterfaceType == NetworkInterfaceType.Tunnel)) " is 173.
Long Statement,Helios.Net,SystemAddressHelper,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\SystemAddressHelper.cs,GetConnectedNetworkInterface,The length of the statement  "		if ((ni.Description.IndexOf ("virtual"' StringComparison.OrdinalIgnoreCase) >= 0) || (ni.Name.IndexOf ("virtual"' StringComparison.OrdinalIgnoreCase) >= 0)) " is 156.
Long Statement,Helios.Topology,NodeUri,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Topology\NodeUri.cs,GetUriStringForNode,The length of the statement  "	return string.Format ("{0}://{1}:{2}"' GetProtocolStringForTransportType (node.TransportType)' GetHostStringForAddress (node.Host)' node.Port); " is 143.
Long Statement,Helios.Serialization,LengthFieldFrameBasedDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldFrameBasedDecoder.cs,Clone,The length of the statement  "	return new LengthFieldFrameBasedDecoder (_maxFrameLength' _lengthFieldOffset' _lengthFieldLength' _lengthAdjustment' _initialBytesToStrip' _failFast); " is 150.
Long Statement,Helios.Serialization,LengthFieldFrameBasedDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldFrameBasedDecoder.cs,Decode,The length of the statement  "		throw new CorruptedFrameException (string.Format ("Adjusted frame length ({0}) is less than lengthFieldEndOffset: {1}"' frameLength' _lengthFieldEndOffset)); " is 157.
Long Statement,Helios.Serialization,LengthFieldFrameBasedDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldFrameBasedDecoder.cs,Decode,The length of the statement  "		throw new CorruptedFrameException (string.Format ("Adjusted frame lenght ({0}) is less than initialBytesToStrip: {1}"' frameLength' _initialBytesToStrip)); " is 155.
Long Statement,Helios.Serialization,LengthFieldFrameBasedDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldFrameBasedDecoder.cs,Fail,The length of the statement  "			throw new TooLongFrameException (string.Format ("Adjusted frame length exceeds {0}: {1} - discarded"' _maxFrameLength' frameLength)); " is 133.
Long Statement,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The length of the statement  "	var networkData = NetworkData.Create (data.RemoteHost' newData' _lengthIncludesLenghtFieldLength ? length : length + _lengthFieldLength); " is 137.
Long Statement,Helios.Eventing.Brokers,SimpleEventBroker,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Eventing\Brokers\SimpleEventBroker.cs,Unsubscribe,The length of the statement  "	InvokeSubscriptionRemoved (new EventSubscriptionEventArgs<TTopic' TSubscriber> (id' subscriber' Subscribers [id].Count)); " is 121.
Long Statement,Helios.Reactor.Bootstrap,TcpServerFactory,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Bootstrap\TcpServerFactory.cs,NewReactorInternal,The length of the statement  "		return new TcpProxyReactor (listenAddress.Host' listenAddress.Port' EventLoop' Encoder' Decoder' Allocator' BufferBytes); " is 121.
Long Statement,Helios.Reactor.Bootstrap,UdpServerFactory,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Bootstrap\UdpServerFactory.cs,NewReactorInternal,The length of the statement  "	return new UdpProxyReactor (listenAddress.Host' listenAddress.Port' EventLoop' Encoder' Decoder' Allocator' BufferBytes); " is 121.
Long Statement,Helios.Net.Connections,MulticastUdpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\MulticastUdpConnection.cs,InitMulticastClient,The length of the statement  "		Client.SetSocketOption (SocketOptionLevel.IP' SocketOptionName.AddMembership' new MulticastOption (MulticastAddress.Host)); " is 123.
Long Statement,Helios.Net.Connections,MulticastUdpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\MulticastUdpConnection.cs,InitMulticastClient,The length of the statement  "		Client.SetSocketOption (SocketOptionLevel.IPv6' SocketOptionName.AddMembership' new IPv6MulticastOption (MulticastAddress.Host)); " is 129.
Long Statement,Helios.Net.Connections,UdpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\UdpConnection.cs,Configure,The length of the statement  "		Client.SetSocketOption (SocketOptionLevel.Socket' SocketOptionName.ReuseAddress' config.GetOption<bool> ("reuseAddress")); " is 122.
Long Statement,Helios.Net.Connections,UdpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\UdpConnection.cs,Open,The length of the statement  "		throw new HeliosConnectionException (ExceptionType.NotOpen' "Cannot open a connection to a null Node or null Node.Host"); " is 121.
Long Statement,Helios.Net.Connections,UdpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\UdpConnection.cs,BeginReceiveInternal,The length of the statement  "	Client.BeginReceiveFrom (receiveState.RawBuffer' 0' receiveState.RawBuffer.Length' SocketFlags.None' ref RemoteEndpoint' ReceiveCallback' receiveState); " is 152.
Long Statement,Helios.Net.Connections,UdpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\UdpConnection.cs,ReceiveCallback,The length of the statement  "			receiveState.Socket.BeginReceiveFrom (receiveState.RawBuffer' 0' receiveState.RawBuffer.Length' SocketFlags.None' ref RemoteEndpoint' ReceiveCallback' receiveState); " is 165.
Long Statement,Helios.Net.Connections,UdpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\UdpConnection.cs,ReceiveCallback,The length of the statement  "		InvokeDisconnectIfNotNull (NodeBuilder.FromEndpoint ((IPEndPoint)RemoteEndpoint)' new HeliosConnectionException (ExceptionType.Closed' ex)); " is 140.
Long Statement,Helios.Net.Connections,UdpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\UdpConnection.cs,ReceiveCallback,The length of the statement  "		InvokeDisconnectIfNotNull (NodeBuilder.FromEndpoint ((IPEndPoint)RemoteEndpoint)' new HeliosConnectionException (ExceptionType.Closed' ex)); " is 140.
Long Statement,Helios.Net.Connections,UdpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\UdpConnection.cs,SendInternal,The length of the statement  "				bytesSent += Client.SendTo (bytesToSend' bytesSent' bytesToSend.Length - bytesSent' SocketFlags.None' destination.ToEndPoint ()); " is 129.
Long Statement,Helios.Net.Connections,UnstreamedConnectionBase,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\UnstreamedConnectionBase.cs,ReceiveCallback,The length of the statement  "			receiveState.Socket.BeginReceive (receiveState.RawBuffer' 0' receiveState.RawBuffer.Length' SocketFlags.None' ReceiveCallback' receiveState); " is 141.
Long Statement,Helios.Net.Connections,TcpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\TcpConnection.cs,OpenAsync,The length of the statement  "		throw new HeliosConnectionException (ExceptionType.NotOpen' "Cannot open a connection to a null Node or null Node.Host"); " is 121.
Long Statement,Helios.Net.Connections,TcpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\TcpConnection.cs,OpenAsync,The length of the statement  "	var connectTask = Task.Factory.FromAsync ((callback' state) => _client.BeginConnect (RemoteHost.Host' RemoteHost.Port' callback' state)' result => _client.EndConnect (result)' TaskCreationOptions.None); " is 202.
Long Statement,Helios.Net.Connections,TcpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\TcpConnection.cs,Open,The length of the statement  "		throw new HeliosConnectionException (ExceptionType.NotOpen' "Cannot open a connection to a null Node or null Node.Host"); " is 121.
Long Statement,Helios.Net.Connections,TcpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\TcpConnection.cs,Open,The length of the statement  "			// JKH = because I want to know if my BeginConnect has failed and because when I use BeginConnect I cannot catch this throw and it litters my Debug window " is 154.
Long Statement,Helios.Net.Connections,TcpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\TcpConnection.cs,BeginReceiveInternal,The length of the statement  "	_client.BeginReceive (receiveState.RawBuffer' 0' receiveState.RawBuffer.Length' SocketFlags.None' ReceiveCallback' receiveState); " is 129.
Long Statement,Helios.Net.Builders,NormalConnectionBuilder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Bootstrap\NormalConnectionBuilder.cs,BuildConnection,The length of the statement  "		return new TcpConnection (EventLoopFactory.CreateNetworkEventLoop ()' node' Timeout' Encoders.DefaultEncoder' Encoders.DefaultDecoder' UnpooledByteBufAllocator.Default); " is 169.
Long Statement,Helios.Net.Builders,NormalConnectionBuilder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Bootstrap\NormalConnectionBuilder.cs,BuildConnection,The length of the statement  "		return new UdpConnection (EventLoopFactory.CreateNetworkEventLoop ()' node' Timeout' Encoders.DefaultEncoder' Encoders.DefaultDecoder' UnpooledByteBufAllocator.Default); " is 169.
Long Statement,Helios.Net.Builders,NormalConnectionBuilder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Bootstrap\NormalConnectionBuilder.cs,BuildConnection,The length of the statement  "		throw new HeliosConnectionException (ExceptionType.NotSupported' "No support for non-UDP / TCP connections at this time."); " is 123.
Long Statement,Helios.Net.Builders,NormalConnectionBuilder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Bootstrap\NormalConnectionBuilder.cs,BuildMulticastConnection,The length of the statement  "		return new MulticastUdpConnection (EventLoopFactory.CreateNetworkEventLoop ()' bindNode' multicastNode' Encoders.DefaultEncoder' Encoders.DefaultDecoder' UnpooledByteBufAllocator.Default); " is 188.
Long Statement,Helios.Net.Builders,NormalConnectionBuilder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Bootstrap\NormalConnectionBuilder.cs,BuildMulticastConnection,The length of the statement  "	throw new HeliosConnectionException (ExceptionType.NotSupported' string.Format ("{0} is an invalid multicast IP address"' multicastNode.Host)); " is 143.
Long Statement,Helios.Reactor.Tcp,TcpProxyReactor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Tcp\TcpProxyReactor.cs,Configure,The length of the statement  "		Listener.SetSocketOption (SocketOptionLevel.Socket' SocketOptionName.ReuseAddress' config.GetOption<bool> ("reuseAddress")); " is 124.
Long Statement,Helios.Reactor.Tcp,TcpProxyReactor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Tcp\TcpProxyReactor.cs,AcceptCallback,The length of the statement  "		newSocket.BeginReceive (receiveState.RawBuffer' 0' receiveState.RawBuffer.Length' SocketFlags.None' ReceiveCallback' receiveState); " is 131.
Long Statement,Helios.Reactor.Tcp,TcpProxyReactor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Tcp\TcpProxyReactor.cs,ReceiveCallback,The length of the statement  "		receiveState.Socket.BeginReceive (receiveState.RawBuffer' 0' receiveState.RawBuffer.Length' SocketFlags.None' ReceiveCallback' receiveState); " is 141.
Long Statement,Helios.Reactor.Udp,UdpProxyReactor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Udp\UdpProxyReactor.cs,Configure,The length of the statement  "		Listener.SetSocketOption (SocketOptionLevel.Socket' SocketOptionName.ReuseAddress' config.GetOption<bool> ("reuseAddress")); " is 124.
Long Statement,Helios.Reactor.Udp,UdpProxyReactor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Udp\UdpProxyReactor.cs,StartInternal,The length of the statement  "	Listener.BeginReceiveFrom (receiveState.RawBuffer' 0' receiveState.RawBuffer.Length' SocketFlags.None' ref RemoteEndPoint' ReceiveCallback' receiveState); " is 154.
Long Statement,Helios.Reactor.Udp,UdpProxyReactor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Udp\UdpProxyReactor.cs,ReceiveCallback,The length of the statement  "			adapter = new ReactorProxyResponseChannel (this' receiveState.Socket' remoteAddress' EventLoop.Clone (ProxiesShareFiber)); " is 122.
Long Statement,Helios.Reactor.Udp,UdpProxyReactor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Udp\UdpProxyReactor.cs,ReceiveCallback,The length of the statement  "		receiveState.Socket.BeginReceiveFrom (receiveState.RawBuffer' 0' receiveState.RawBuffer.Length' SocketFlags.None' ref RemoteEndPoint' ReceiveCallback' receiveState); " is 165.
Long Statement,Helios.Reactor.Udp,UdpProxyReactor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Udp\UdpProxyReactor.cs,Send,The length of the statement  "			clientSocket.Socket.BeginSendTo (message.ToArray ()' 0' message.ReadableBytes' SocketFlags.None' destination.ToEndPoint ()' SendCallback' state); " is 145.
Long Statement,Helios.Reactor.Udp,UdpProxyReactor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Udp\UdpProxyReactor.cs,SendCallback,The length of the statement  "			receiveState.Socket.BeginSendTo (receiveState.Buffer.ToArray ()' 0' receiveState.Buffer.ReadableBytes' SocketFlags.None' receiveState.RemoteHost.ToEndPoint ()' SendCallback' receiveState); " is 188.
Complex Conditional,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,LengthFieldPrepender,The conditional expression  "lengthFieldLength != 1 && lengthFieldLength != 2 && lengthFieldLength != 4 && lengthFieldLength != 8"  is complex.
Virtual Method Call from Constructor,Helios.Channels,AbstractChannel,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\AbstractChannel.cs,AbstractChannel,The constructor "AbstractChannel" calls a virtual method "NewUnsafe".
Empty Catch Block,Helios.Channels.Sockets,DefaultSocketChannelConfiguration,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Sockets\DefaultSocketChannelConfiguration.cs,DefaultSocketChannelConfiguration,The method has an empty catch block.
Empty Catch Block,Helios.Net.Connections,UnstreamedConnectionBase,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\UnstreamedConnectionBase.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Helios.Reactor,ReactorBase,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\ReactorBase.cs,Stop,The method has an empty catch block.
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var i = 0; i < bytesLength; i += bytesPerLine) {  	line [0] = HexChars [(i >> 28) & 0xF];  	line [1] = HexChars [(i >> 24) & 0xF];  	line [2] = HexChars [(i >> 20) & 0xF];  	line [3] = HexChars [(i >> 16) & 0xF];  	line [4] = HexChars [(i >> 12) & 0xF];  	line [5] = HexChars [(i >> 8) & 0xF];  	line [6] = HexChars [(i >> 4) & 0xF];  	line [7] = HexChars [(i >> 0) & 0xF];  	var hexColumn = firstHexColumn;  	var charColumn = firstCharColumn;  	for (var j = 0; j < bytesPerLine; j++) {  		if (j > 0 && (j & 7) == 0)  			hexColumn++;  		if (i + j >= bytesLength) {  			line [hexColumn] = ' ';  			line [hexColumn + 1] = ' ';  			line [charColumn] = ' ';  		} else {  			var b = bytes [i + j];  			line [hexColumn] = HexChars [(b >> 4) & 0xF];  			line [hexColumn + 1] = HexChars [b & 0xF];  			line [charColumn] = b < 32 ? '.' : (char)b;  		}  		hexColumn += 3;  		charColumn++;  	}  	result.Append (line);  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var i = 0; i < bytesLength; i += bytesPerLine) {  	line [0] = HexChars [(i >> 28) & 0xF];  	line [1] = HexChars [(i >> 24) & 0xF];  	line [2] = HexChars [(i >> 20) & 0xF];  	line [3] = HexChars [(i >> 16) & 0xF];  	line [4] = HexChars [(i >> 12) & 0xF];  	line [5] = HexChars [(i >> 8) & 0xF];  	line [6] = HexChars [(i >> 4) & 0xF];  	line [7] = HexChars [(i >> 0) & 0xF];  	var hexColumn = firstHexColumn;  	var charColumn = firstCharColumn;  	for (var j = 0; j < bytesPerLine; j++) {  		if (j > 0 && (j & 7) == 0)  			hexColumn++;  		if (i + j >= bytesLength) {  			line [hexColumn] = ' ';  			line [hexColumn + 1] = ' ';  			line [charColumn] = ' ';  		} else {  			var b = bytes [i + j];  			line [hexColumn] = HexChars [(b >> 4) & 0xF];  			line [hexColumn + 1] = HexChars [b & 0xF];  			line [charColumn] = b < 32 ? '.' : (char)b;  		}  		hexColumn += 3;  		charColumn++;  	}  	result.Append (line);  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var i = 0; i < bytesLength; i += bytesPerLine) {  	line [0] = HexChars [(i >> 28) & 0xF];  	line [1] = HexChars [(i >> 24) & 0xF];  	line [2] = HexChars [(i >> 20) & 0xF];  	line [3] = HexChars [(i >> 16) & 0xF];  	line [4] = HexChars [(i >> 12) & 0xF];  	line [5] = HexChars [(i >> 8) & 0xF];  	line [6] = HexChars [(i >> 4) & 0xF];  	line [7] = HexChars [(i >> 0) & 0xF];  	var hexColumn = firstHexColumn;  	var charColumn = firstCharColumn;  	for (var j = 0; j < bytesPerLine; j++) {  		if (j > 0 && (j & 7) == 0)  			hexColumn++;  		if (i + j >= bytesLength) {  			line [hexColumn] = ' ';  			line [hexColumn + 1] = ' ';  			line [charColumn] = ' ';  		} else {  			var b = bytes [i + j];  			line [hexColumn] = HexChars [(b >> 4) & 0xF];  			line [hexColumn + 1] = HexChars [b & 0xF];  			line [charColumn] = b < 32 ? '.' : (char)b;  		}  		hexColumn += 3;  		charColumn++;  	}  	result.Append (line);  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var i = 0; i < bytesLength; i += bytesPerLine) {  	line [0] = HexChars [(i >> 28) & 0xF];  	line [1] = HexChars [(i >> 24) & 0xF];  	line [2] = HexChars [(i >> 20) & 0xF];  	line [3] = HexChars [(i >> 16) & 0xF];  	line [4] = HexChars [(i >> 12) & 0xF];  	line [5] = HexChars [(i >> 8) & 0xF];  	line [6] = HexChars [(i >> 4) & 0xF];  	line [7] = HexChars [(i >> 0) & 0xF];  	var hexColumn = firstHexColumn;  	var charColumn = firstCharColumn;  	for (var j = 0; j < bytesPerLine; j++) {  		if (j > 0 && (j & 7) == 0)  			hexColumn++;  		if (i + j >= bytesLength) {  			line [hexColumn] = ' ';  			line [hexColumn + 1] = ' ';  			line [charColumn] = ' ';  		} else {  			var b = bytes [i + j];  			line [hexColumn] = HexChars [(b >> 4) & 0xF];  			line [hexColumn + 1] = HexChars [b & 0xF];  			line [charColumn] = b < 32 ? '.' : (char)b;  		}  		hexColumn += 3;  		charColumn++;  	}  	result.Append (line);  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var i = 0; i < bytesLength; i += bytesPerLine) {  	line [0] = HexChars [(i >> 28) & 0xF];  	line [1] = HexChars [(i >> 24) & 0xF];  	line [2] = HexChars [(i >> 20) & 0xF];  	line [3] = HexChars [(i >> 16) & 0xF];  	line [4] = HexChars [(i >> 12) & 0xF];  	line [5] = HexChars [(i >> 8) & 0xF];  	line [6] = HexChars [(i >> 4) & 0xF];  	line [7] = HexChars [(i >> 0) & 0xF];  	var hexColumn = firstHexColumn;  	var charColumn = firstCharColumn;  	for (var j = 0; j < bytesPerLine; j++) {  		if (j > 0 && (j & 7) == 0)  			hexColumn++;  		if (i + j >= bytesLength) {  			line [hexColumn] = ' ';  			line [hexColumn + 1] = ' ';  			line [charColumn] = ' ';  		} else {  			var b = bytes [i + j];  			line [hexColumn] = HexChars [(b >> 4) & 0xF];  			line [hexColumn + 1] = HexChars [b & 0xF];  			line [charColumn] = b < 32 ? '.' : (char)b;  		}  		hexColumn += 3;  		charColumn++;  	}  	result.Append (line);  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var i = 0; i < bytesLength; i += bytesPerLine) {  	line [0] = HexChars [(i >> 28) & 0xF];  	line [1] = HexChars [(i >> 24) & 0xF];  	line [2] = HexChars [(i >> 20) & 0xF];  	line [3] = HexChars [(i >> 16) & 0xF];  	line [4] = HexChars [(i >> 12) & 0xF];  	line [5] = HexChars [(i >> 8) & 0xF];  	line [6] = HexChars [(i >> 4) & 0xF];  	line [7] = HexChars [(i >> 0) & 0xF];  	var hexColumn = firstHexColumn;  	var charColumn = firstCharColumn;  	for (var j = 0; j < bytesPerLine; j++) {  		if (j > 0 && (j & 7) == 0)  			hexColumn++;  		if (i + j >= bytesLength) {  			line [hexColumn] = ' ';  			line [hexColumn + 1] = ' ';  			line [charColumn] = ' ';  		} else {  			var b = bytes [i + j];  			line [hexColumn] = HexChars [(b >> 4) & 0xF];  			line [hexColumn + 1] = HexChars [b & 0xF];  			line [charColumn] = b < 32 ? '.' : (char)b;  		}  		hexColumn += 3;  		charColumn++;  	}  	result.Append (line);  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var i = 0; i < bytesLength; i += bytesPerLine) {  	line [0] = HexChars [(i >> 28) & 0xF];  	line [1] = HexChars [(i >> 24) & 0xF];  	line [2] = HexChars [(i >> 20) & 0xF];  	line [3] = HexChars [(i >> 16) & 0xF];  	line [4] = HexChars [(i >> 12) & 0xF];  	line [5] = HexChars [(i >> 8) & 0xF];  	line [6] = HexChars [(i >> 4) & 0xF];  	line [7] = HexChars [(i >> 0) & 0xF];  	var hexColumn = firstHexColumn;  	var charColumn = firstCharColumn;  	for (var j = 0; j < bytesPerLine; j++) {  		if (j > 0 && (j & 7) == 0)  			hexColumn++;  		if (i + j >= bytesLength) {  			line [hexColumn] = ' ';  			line [hexColumn + 1] = ' ';  			line [charColumn] = ' ';  		} else {  			var b = bytes [i + j];  			line [hexColumn] = HexChars [(b >> 4) & 0xF];  			line [hexColumn + 1] = HexChars [b & 0xF];  			line [charColumn] = b < 32 ? '.' : (char)b;  		}  		hexColumn += 3;  		charColumn++;  	}  	result.Append (line);  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var i = 0; i < bytesLength; i += bytesPerLine) {  	line [0] = HexChars [(i >> 28) & 0xF];  	line [1] = HexChars [(i >> 24) & 0xF];  	line [2] = HexChars [(i >> 20) & 0xF];  	line [3] = HexChars [(i >> 16) & 0xF];  	line [4] = HexChars [(i >> 12) & 0xF];  	line [5] = HexChars [(i >> 8) & 0xF];  	line [6] = HexChars [(i >> 4) & 0xF];  	line [7] = HexChars [(i >> 0) & 0xF];  	var hexColumn = firstHexColumn;  	var charColumn = firstCharColumn;  	for (var j = 0; j < bytesPerLine; j++) {  		if (j > 0 && (j & 7) == 0)  			hexColumn++;  		if (i + j >= bytesLength) {  			line [hexColumn] = ' ';  			line [hexColumn + 1] = ' ';  			line [charColumn] = ' ';  		} else {  			var b = bytes [i + j];  			line [hexColumn] = HexChars [(b >> 4) & 0xF];  			line [hexColumn + 1] = HexChars [b & 0xF];  			line [charColumn] = b < 32 ? '.' : (char)b;  		}  		hexColumn += 3;  		charColumn++;  	}  	result.Append (line);  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var i = 0; i < bytesLength; i += bytesPerLine) {  	line [0] = HexChars [(i >> 28) & 0xF];  	line [1] = HexChars [(i >> 24) & 0xF];  	line [2] = HexChars [(i >> 20) & 0xF];  	line [3] = HexChars [(i >> 16) & 0xF];  	line [4] = HexChars [(i >> 12) & 0xF];  	line [5] = HexChars [(i >> 8) & 0xF];  	line [6] = HexChars [(i >> 4) & 0xF];  	line [7] = HexChars [(i >> 0) & 0xF];  	var hexColumn = firstHexColumn;  	var charColumn = firstCharColumn;  	for (var j = 0; j < bytesPerLine; j++) {  		if (j > 0 && (j & 7) == 0)  			hexColumn++;  		if (i + j >= bytesLength) {  			line [hexColumn] = ' ';  			line [hexColumn + 1] = ' ';  			line [charColumn] = ' ';  		} else {  			var b = bytes [i + j];  			line [hexColumn] = HexChars [(b >> 4) & 0xF];  			line [hexColumn + 1] = HexChars [b & 0xF];  			line [charColumn] = b < 32 ? '.' : (char)b;  		}  		hexColumn += 3;  		charColumn++;  	}  	result.Append (line);  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var i = 0; i < bytesLength; i += bytesPerLine) {  	line [0] = HexChars [(i >> 28) & 0xF];  	line [1] = HexChars [(i >> 24) & 0xF];  	line [2] = HexChars [(i >> 20) & 0xF];  	line [3] = HexChars [(i >> 16) & 0xF];  	line [4] = HexChars [(i >> 12) & 0xF];  	line [5] = HexChars [(i >> 8) & 0xF];  	line [6] = HexChars [(i >> 4) & 0xF];  	line [7] = HexChars [(i >> 0) & 0xF];  	var hexColumn = firstHexColumn;  	var charColumn = firstCharColumn;  	for (var j = 0; j < bytesPerLine; j++) {  		if (j > 0 && (j & 7) == 0)  			hexColumn++;  		if (i + j >= bytesLength) {  			line [hexColumn] = ' ';  			line [hexColumn + 1] = ' ';  			line [charColumn] = ' ';  		} else {  			var b = bytes [i + j];  			line [hexColumn] = HexChars [(b >> 4) & 0xF];  			line [hexColumn + 1] = HexChars [b & 0xF];  			line [charColumn] = b < 32 ? '.' : (char)b;  		}  		hexColumn += 3;  		charColumn++;  	}  	result.Append (line);  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var i = 0; i < bytesLength; i += bytesPerLine) {  	line [0] = HexChars [(i >> 28) & 0xF];  	line [1] = HexChars [(i >> 24) & 0xF];  	line [2] = HexChars [(i >> 20) & 0xF];  	line [3] = HexChars [(i >> 16) & 0xF];  	line [4] = HexChars [(i >> 12) & 0xF];  	line [5] = HexChars [(i >> 8) & 0xF];  	line [6] = HexChars [(i >> 4) & 0xF];  	line [7] = HexChars [(i >> 0) & 0xF];  	var hexColumn = firstHexColumn;  	var charColumn = firstCharColumn;  	for (var j = 0; j < bytesPerLine; j++) {  		if (j > 0 && (j & 7) == 0)  			hexColumn++;  		if (i + j >= bytesLength) {  			line [hexColumn] = ' ';  			line [hexColumn + 1] = ' ';  			line [charColumn] = ' ';  		} else {  			var b = bytes [i + j];  			line [hexColumn] = HexChars [(b >> 4) & 0xF];  			line [hexColumn + 1] = HexChars [b & 0xF];  			line [charColumn] = b < 32 ? '.' : (char)b;  		}  		hexColumn += 3;  		charColumn++;  	}  	result.Append (line);  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var i = 0; i < bytesLength; i += bytesPerLine) {  	line [0] = HexChars [(i >> 28) & 0xF];  	line [1] = HexChars [(i >> 24) & 0xF];  	line [2] = HexChars [(i >> 20) & 0xF];  	line [3] = HexChars [(i >> 16) & 0xF];  	line [4] = HexChars [(i >> 12) & 0xF];  	line [5] = HexChars [(i >> 8) & 0xF];  	line [6] = HexChars [(i >> 4) & 0xF];  	line [7] = HexChars [(i >> 0) & 0xF];  	var hexColumn = firstHexColumn;  	var charColumn = firstCharColumn;  	for (var j = 0; j < bytesPerLine; j++) {  		if (j > 0 && (j & 7) == 0)  			hexColumn++;  		if (i + j >= bytesLength) {  			line [hexColumn] = ' ';  			line [hexColumn + 1] = ' ';  			line [charColumn] = ' ';  		} else {  			var b = bytes [i + j];  			line [hexColumn] = HexChars [(b >> 4) & 0xF];  			line [hexColumn + 1] = HexChars [b & 0xF];  			line [charColumn] = b < 32 ? '.' : (char)b;  		}  		hexColumn += 3;  		charColumn++;  	}  	result.Append (line);  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var i = 0; i < bytesLength; i += bytesPerLine) {  	line [0] = HexChars [(i >> 28) & 0xF];  	line [1] = HexChars [(i >> 24) & 0xF];  	line [2] = HexChars [(i >> 20) & 0xF];  	line [3] = HexChars [(i >> 16) & 0xF];  	line [4] = HexChars [(i >> 12) & 0xF];  	line [5] = HexChars [(i >> 8) & 0xF];  	line [6] = HexChars [(i >> 4) & 0xF];  	line [7] = HexChars [(i >> 0) & 0xF];  	var hexColumn = firstHexColumn;  	var charColumn = firstCharColumn;  	for (var j = 0; j < bytesPerLine; j++) {  		if (j > 0 && (j & 7) == 0)  			hexColumn++;  		if (i + j >= bytesLength) {  			line [hexColumn] = ' ';  			line [hexColumn + 1] = ' ';  			line [charColumn] = ' ';  		} else {  			var b = bytes [i + j];  			line [hexColumn] = HexChars [(b >> 4) & 0xF];  			line [hexColumn + 1] = HexChars [b & 0xF];  			line [charColumn] = b < 32 ? '.' : (char)b;  		}  		hexColumn += 3;  		charColumn++;  	}  	result.Append (line);  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var i = 0; i < bytesLength; i += bytesPerLine) {  	line [0] = HexChars [(i >> 28) & 0xF];  	line [1] = HexChars [(i >> 24) & 0xF];  	line [2] = HexChars [(i >> 20) & 0xF];  	line [3] = HexChars [(i >> 16) & 0xF];  	line [4] = HexChars [(i >> 12) & 0xF];  	line [5] = HexChars [(i >> 8) & 0xF];  	line [6] = HexChars [(i >> 4) & 0xF];  	line [7] = HexChars [(i >> 0) & 0xF];  	var hexColumn = firstHexColumn;  	var charColumn = firstCharColumn;  	for (var j = 0; j < bytesPerLine; j++) {  		if (j > 0 && (j & 7) == 0)  			hexColumn++;  		if (i + j >= bytesLength) {  			line [hexColumn] = ' ';  			line [hexColumn + 1] = ' ';  			line [charColumn] = ' ';  		} else {  			var b = bytes [i + j];  			line [hexColumn] = HexChars [(b >> 4) & 0xF];  			line [hexColumn + 1] = HexChars [b & 0xF];  			line [charColumn] = b < 32 ? '.' : (char)b;  		}  		hexColumn += 3;  		charColumn++;  	}  	result.Append (line);  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var i = 0; i < bytesLength; i += bytesPerLine) {  	line [0] = HexChars [(i >> 28) & 0xF];  	line [1] = HexChars [(i >> 24) & 0xF];  	line [2] = HexChars [(i >> 20) & 0xF];  	line [3] = HexChars [(i >> 16) & 0xF];  	line [4] = HexChars [(i >> 12) & 0xF];  	line [5] = HexChars [(i >> 8) & 0xF];  	line [6] = HexChars [(i >> 4) & 0xF];  	line [7] = HexChars [(i >> 0) & 0xF];  	var hexColumn = firstHexColumn;  	var charColumn = firstCharColumn;  	for (var j = 0; j < bytesPerLine; j++) {  		if (j > 0 && (j & 7) == 0)  			hexColumn++;  		if (i + j >= bytesLength) {  			line [hexColumn] = ' ';  			line [hexColumn + 1] = ' ';  			line [charColumn] = ' ';  		} else {  			var b = bytes [i + j];  			line [hexColumn] = HexChars [(b >> 4) & 0xF];  			line [hexColumn + 1] = HexChars [b & 0xF];  			line [charColumn] = b < 32 ? '.' : (char)b;  		}  		hexColumn += 3;  		charColumn++;  	}  	result.Append (line);  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var i = 0; i < bytesLength; i += bytesPerLine) {  	line [0] = HexChars [(i >> 28) & 0xF];  	line [1] = HexChars [(i >> 24) & 0xF];  	line [2] = HexChars [(i >> 20) & 0xF];  	line [3] = HexChars [(i >> 16) & 0xF];  	line [4] = HexChars [(i >> 12) & 0xF];  	line [5] = HexChars [(i >> 8) & 0xF];  	line [6] = HexChars [(i >> 4) & 0xF];  	line [7] = HexChars [(i >> 0) & 0xF];  	var hexColumn = firstHexColumn;  	var charColumn = firstCharColumn;  	for (var j = 0; j < bytesPerLine; j++) {  		if (j > 0 && (j & 7) == 0)  			hexColumn++;  		if (i + j >= bytesLength) {  			line [hexColumn] = ' ';  			line [hexColumn + 1] = ' ';  			line [charColumn] = ' ';  		} else {  			var b = bytes [i + j];  			line [hexColumn] = HexChars [(b >> 4) & 0xF];  			line [hexColumn + 1] = HexChars [b & 0xF];  			line [charColumn] = b < 32 ? '.' : (char)b;  		}  		hexColumn += 3;  		charColumn++;  	}  	result.Append (line);  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var i = 0; i < bytesLength; i += bytesPerLine) {  	line [0] = HexChars [(i >> 28) & 0xF];  	line [1] = HexChars [(i >> 24) & 0xF];  	line [2] = HexChars [(i >> 20) & 0xF];  	line [3] = HexChars [(i >> 16) & 0xF];  	line [4] = HexChars [(i >> 12) & 0xF];  	line [5] = HexChars [(i >> 8) & 0xF];  	line [6] = HexChars [(i >> 4) & 0xF];  	line [7] = HexChars [(i >> 0) & 0xF];  	var hexColumn = firstHexColumn;  	var charColumn = firstCharColumn;  	for (var j = 0; j < bytesPerLine; j++) {  		if (j > 0 && (j & 7) == 0)  			hexColumn++;  		if (i + j >= bytesLength) {  			line [hexColumn] = ' ';  			line [hexColumn + 1] = ' ';  			line [charColumn] = ' ';  		} else {  			var b = bytes [i + j];  			line [hexColumn] = HexChars [(b >> 4) & 0xF];  			line [hexColumn + 1] = HexChars [b & 0xF];  			line [charColumn] = b < 32 ? '.' : (char)b;  		}  		hexColumn += 3;  		charColumn++;  	}  	result.Append (line);  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line [0] = HexChars [(i >> 28) & 0xF];  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line [1] = HexChars [(i >> 24) & 0xF];  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line [2] = HexChars [(i >> 20) & 0xF];  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line [2] = HexChars [(i >> 20) & 0xF];  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line [3] = HexChars [(i >> 16) & 0xF];  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line [3] = HexChars [(i >> 16) & 0xF];  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line [4] = HexChars [(i >> 12) & 0xF];  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line [4] = HexChars [(i >> 12) & 0xF];  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line [5] = HexChars [(i >> 8) & 0xF];  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line [5] = HexChars [(i >> 8) & 0xF];  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line [6] = HexChars [(i >> 4) & 0xF];  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line [6] = HexChars [(i >> 4) & 0xF];  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line [7] = HexChars [(i >> 0) & 0xF];  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var j = 0; j < bytesPerLine; j++) {  	if (j > 0 && (j & 7) == 0)  		hexColumn++;  	if (i + j >= bytesLength) {  		line [hexColumn] = ' ';  		line [hexColumn + 1] = ' ';  		line [charColumn] = ' ';  	} else {  		var b = bytes [i + j];  		line [hexColumn] = HexChars [(b >> 4) & 0xF];  		line [hexColumn + 1] = HexChars [b & 0xF];  		line [charColumn] = b < 32 ? '.' : (char)b;  	}  	hexColumn += 3;  	charColumn++;  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var j = 0; j < bytesPerLine; j++) {  	if (j > 0 && (j & 7) == 0)  		hexColumn++;  	if (i + j >= bytesLength) {  		line [hexColumn] = ' ';  		line [hexColumn + 1] = ' ';  		line [charColumn] = ' ';  	} else {  		var b = bytes [i + j];  		line [hexColumn] = HexChars [(b >> 4) & 0xF];  		line [hexColumn + 1] = HexChars [b & 0xF];  		line [charColumn] = b < 32 ? '.' : (char)b;  	}  	hexColumn += 3;  	charColumn++;  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var j = 0; j < bytesPerLine; j++) {  	if (j > 0 && (j & 7) == 0)  		hexColumn++;  	if (i + j >= bytesLength) {  		line [hexColumn] = ' ';  		line [hexColumn + 1] = ' ';  		line [charColumn] = ' ';  	} else {  		var b = bytes [i + j];  		line [hexColumn] = HexChars [(b >> 4) & 0xF];  		line [hexColumn + 1] = HexChars [b & 0xF];  		line [charColumn] = b < 32 ? '.' : (char)b;  	}  	hexColumn += 3;  	charColumn++;  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: for (var j = 0; j < bytesPerLine; j++) {  	if (j > 0 && (j & 7) == 0)  		hexColumn++;  	if (i + j >= bytesLength) {  		line [hexColumn] = ' ';  		line [hexColumn + 1] = ' ';  		line [charColumn] = ' ';  	} else {  		var b = bytes [i + j];  		line [hexColumn] = HexChars [(b >> 4) & 0xF];  		line [hexColumn + 1] = HexChars [b & 0xF];  		line [charColumn] = b < 32 ? '.' : (char)b;  	}  	hexColumn += 3;  	charColumn++;  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: if (j > 0 && (j & 7) == 0)  	hexColumn++;  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: if (i + j >= bytesLength) {  	line [hexColumn] = ' ';  	line [hexColumn + 1] = ' ';  	line [charColumn] = ' ';  } else {  	var b = bytes [i + j];  	line [hexColumn] = HexChars [(b >> 4) & 0xF];  	line [hexColumn + 1] = HexChars [b & 0xF];  	line [charColumn] = b < 32 ? '.' : (char)b;  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: if (i + j >= bytesLength) {  	line [hexColumn] = ' ';  	line [hexColumn + 1] = ' ';  	line [charColumn] = ' ';  } else {  	var b = bytes [i + j];  	line [hexColumn] = HexChars [(b >> 4) & 0xF];  	line [hexColumn + 1] = HexChars [b & 0xF];  	line [charColumn] = b < 32 ? '.' : (char)b;  }  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line [hexColumn] = HexChars [(b >> 4) & 0xF];  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line [charColumn] = b < 32 ? '.' : (char)b;  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: hexColumn += 3;  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,SwapLong,The following statement contains a magic number: return ((SwapInt ((int)value) & 0xFFFFFFFF) << 32) | (SwapInt ((int)(value >> 32)) & 0xFFFFFFFF);  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,SwapLong,The following statement contains a magic number: return ((SwapInt ((int)value) & 0xFFFFFFFF) << 32) | (SwapInt ((int)(value >> 32)) & 0xFFFFFFFF);  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,SwapInt,The following statement contains a magic number: return ((SwapShort ((short)value) & 0xFFFF) << 16) | (SwapShort ((short)(value >> 16)) & 0xFFFF);  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,SwapInt,The following statement contains a magic number: return ((SwapShort ((short)value) & 0xFFFF) << 16) | (SwapShort ((short)(value >> 16)) & 0xFFFF);  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,SwapShort,The following statement contains a magic number: return (short)(((value & 0xFF) << 8) | (value >> 8) & 0xFF);  
Magic Number,Helios.Buffers,ByteBufferUtil,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\ByteBufferUtil.cs,SwapShort,The following statement contains a magic number: return (short)(((value & 0xFF) << 8) | (value >> 8) & 0xFF);  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,GetShort,The following statement contains a magic number: CheckIndex (index' 2);  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,GetInt,The following statement contains a magic number: CheckIndex (index' 4);  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,GetLong,The following statement contains a magic number: CheckIndex (index' 8);  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,SetShort,The following statement contains a magic number: CheckIndex (index' 2);  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,SetInt,The following statement contains a magic number: CheckIndex (index' 4);  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,SetLong,The following statement contains a magic number: CheckIndex (index' 8);  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,ReadShort,The following statement contains a magic number: CheckReadableBytes (2);  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,ReadShort,The following statement contains a magic number: ReaderIndex += 2;  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,ReadInt,The following statement contains a magic number: CheckReadableBytes (4);  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,ReadInt,The following statement contains a magic number: ReaderIndex += 4;  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,ReadLong,The following statement contains a magic number: CheckReadableBytes (8);  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,ReadLong,The following statement contains a magic number: ReaderIndex += 8;  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteShort,The following statement contains a magic number: EnsureWritable (2);  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteShort,The following statement contains a magic number: WriterIndex += 2;  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteInt,The following statement contains a magic number: EnsureWritable (4);  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteInt,The following statement contains a magic number: WriterIndex += 4;  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteLong,The following statement contains a magic number: EnsureWritable (8);  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteLong,The following statement contains a magic number: WriterIndex += 8;  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: unchecked {  	nLong = (int)((uint)length >> 3);  	nBytes = length & 7;  }  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: unchecked {  	nLong = (int)((uint)length >> 3);  	nBytes = length & 7;  }  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: nLong = (int)((uint)length >> 3);  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: nBytes = length & 7;  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: for (var i = nLong; i > 0; i--) {  	_SetLong (wIndex' 0);  	wIndex += 8;  }  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: wIndex += 8;  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: if (nBytes == 4) {  	_SetInt (wIndex' 0);  	wIndex += 4;  } else if (nBytes < 4) {  	for (var i = nBytes; i > 0; i--) {  		_SetByte (wIndex' 0);  		wIndex++;  	}  } else {  	_SetInt (wIndex' 0);  	wIndex += 4;  	for (var i = nBytes - 4; i > 0; i--) {  		_SetByte (wIndex' 0);  		wIndex++;  	}  }  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: if (nBytes == 4) {  	_SetInt (wIndex' 0);  	wIndex += 4;  } else if (nBytes < 4) {  	for (var i = nBytes; i > 0; i--) {  		_SetByte (wIndex' 0);  		wIndex++;  	}  } else {  	_SetInt (wIndex' 0);  	wIndex += 4;  	for (var i = nBytes - 4; i > 0; i--) {  		_SetByte (wIndex' 0);  		wIndex++;  	}  }  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: if (nBytes == 4) {  	_SetInt (wIndex' 0);  	wIndex += 4;  } else if (nBytes < 4) {  	for (var i = nBytes; i > 0; i--) {  		_SetByte (wIndex' 0);  		wIndex++;  	}  } else {  	_SetInt (wIndex' 0);  	wIndex += 4;  	for (var i = nBytes - 4; i > 0; i--) {  		_SetByte (wIndex' 0);  		wIndex++;  	}  }  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: if (nBytes == 4) {  	_SetInt (wIndex' 0);  	wIndex += 4;  } else if (nBytes < 4) {  	for (var i = nBytes; i > 0; i--) {  		_SetByte (wIndex' 0);  		wIndex++;  	}  } else {  	_SetInt (wIndex' 0);  	wIndex += 4;  	for (var i = nBytes - 4; i > 0; i--) {  		_SetByte (wIndex' 0);  		wIndex++;  	}  }  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: if (nBytes == 4) {  	_SetInt (wIndex' 0);  	wIndex += 4;  } else if (nBytes < 4) {  	for (var i = nBytes; i > 0; i--) {  		_SetByte (wIndex' 0);  		wIndex++;  	}  } else {  	_SetInt (wIndex' 0);  	wIndex += 4;  	for (var i = nBytes - 4; i > 0; i--) {  		_SetByte (wIndex' 0);  		wIndex++;  	}  }  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: wIndex += 4;  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: if (nBytes < 4) {  	for (var i = nBytes; i > 0; i--) {  		_SetByte (wIndex' 0);  		wIndex++;  	}  } else {  	_SetInt (wIndex' 0);  	wIndex += 4;  	for (var i = nBytes - 4; i > 0; i--) {  		_SetByte (wIndex' 0);  		wIndex++;  	}  }  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: if (nBytes < 4) {  	for (var i = nBytes; i > 0; i--) {  		_SetByte (wIndex' 0);  		wIndex++;  	}  } else {  	_SetInt (wIndex' 0);  	wIndex += 4;  	for (var i = nBytes - 4; i > 0; i--) {  		_SetByte (wIndex' 0);  		wIndex++;  	}  }  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: if (nBytes < 4) {  	for (var i = nBytes; i > 0; i--) {  		_SetByte (wIndex' 0);  		wIndex++;  	}  } else {  	_SetInt (wIndex' 0);  	wIndex += 4;  	for (var i = nBytes - 4; i > 0; i--) {  		_SetByte (wIndex' 0);  		wIndex++;  	}  }  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: wIndex += 4;  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: for (var i = nBytes - 4; i > 0; i--) {  	_SetByte (wIndex' 0);  	wIndex++;  }  
Magic Number,Helios.Buffers,AbstractByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\AbstractByteBuf.cs,CalculateNewCapacity,The following statement contains a magic number: newCapacity = 64;  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetShort,The following statement contains a magic number: return unchecked((short)(_buffer [index] | _buffer [index + 1] << 8));  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetInt,The following statement contains a magic number: return unchecked(_buffer [index] | _buffer [index + 1] << 8 | _buffer [index + 2] << 16 | _buffer [index + 3] << 24);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetInt,The following statement contains a magic number: return unchecked(_buffer [index] | _buffer [index + 1] << 8 | _buffer [index + 2] << 16 | _buffer [index + 3] << 24);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetInt,The following statement contains a magic number: return unchecked(_buffer [index] | _buffer [index + 1] << 8 | _buffer [index + 2] << 16 | _buffer [index + 3] << 24);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetInt,The following statement contains a magic number: return unchecked(_buffer [index] | _buffer [index + 1] << 8 | _buffer [index + 2] << 16 | _buffer [index + 3] << 24);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetInt,The following statement contains a magic number: return unchecked(_buffer [index] | _buffer [index + 1] << 8 | _buffer [index + 2] << 16 | _buffer [index + 3] << 24);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: unchecked {  	var i1 = _buffer [index] | _buffer [index + 1] << 8 | _buffer [index + 2] << 16 | _buffer [index + 3] << 24;  	var i2 = _buffer [index + 4] | _buffer [index + 5] << 8 | _buffer [index + 6] << 16 | _buffer [index + 7] << 24;  	return (uint)i1 | ((long)i2 << 32);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: unchecked {  	var i1 = _buffer [index] | _buffer [index + 1] << 8 | _buffer [index + 2] << 16 | _buffer [index + 3] << 24;  	var i2 = _buffer [index + 4] | _buffer [index + 5] << 8 | _buffer [index + 6] << 16 | _buffer [index + 7] << 24;  	return (uint)i1 | ((long)i2 << 32);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: unchecked {  	var i1 = _buffer [index] | _buffer [index + 1] << 8 | _buffer [index + 2] << 16 | _buffer [index + 3] << 24;  	var i2 = _buffer [index + 4] | _buffer [index + 5] << 8 | _buffer [index + 6] << 16 | _buffer [index + 7] << 24;  	return (uint)i1 | ((long)i2 << 32);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: unchecked {  	var i1 = _buffer [index] | _buffer [index + 1] << 8 | _buffer [index + 2] << 16 | _buffer [index + 3] << 24;  	var i2 = _buffer [index + 4] | _buffer [index + 5] << 8 | _buffer [index + 6] << 16 | _buffer [index + 7] << 24;  	return (uint)i1 | ((long)i2 << 32);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: unchecked {  	var i1 = _buffer [index] | _buffer [index + 1] << 8 | _buffer [index + 2] << 16 | _buffer [index + 3] << 24;  	var i2 = _buffer [index + 4] | _buffer [index + 5] << 8 | _buffer [index + 6] << 16 | _buffer [index + 7] << 24;  	return (uint)i1 | ((long)i2 << 32);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: unchecked {  	var i1 = _buffer [index] | _buffer [index + 1] << 8 | _buffer [index + 2] << 16 | _buffer [index + 3] << 24;  	var i2 = _buffer [index + 4] | _buffer [index + 5] << 8 | _buffer [index + 6] << 16 | _buffer [index + 7] << 24;  	return (uint)i1 | ((long)i2 << 32);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: unchecked {  	var i1 = _buffer [index] | _buffer [index + 1] << 8 | _buffer [index + 2] << 16 | _buffer [index + 3] << 24;  	var i2 = _buffer [index + 4] | _buffer [index + 5] << 8 | _buffer [index + 6] << 16 | _buffer [index + 7] << 24;  	return (uint)i1 | ((long)i2 << 32);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: unchecked {  	var i1 = _buffer [index] | _buffer [index + 1] << 8 | _buffer [index + 2] << 16 | _buffer [index + 3] << 24;  	var i2 = _buffer [index + 4] | _buffer [index + 5] << 8 | _buffer [index + 6] << 16 | _buffer [index + 7] << 24;  	return (uint)i1 | ((long)i2 << 32);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: unchecked {  	var i1 = _buffer [index] | _buffer [index + 1] << 8 | _buffer [index + 2] << 16 | _buffer [index + 3] << 24;  	var i2 = _buffer [index + 4] | _buffer [index + 5] << 8 | _buffer [index + 6] << 16 | _buffer [index + 7] << 24;  	return (uint)i1 | ((long)i2 << 32);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: unchecked {  	var i1 = _buffer [index] | _buffer [index + 1] << 8 | _buffer [index + 2] << 16 | _buffer [index + 3] << 24;  	var i2 = _buffer [index + 4] | _buffer [index + 5] << 8 | _buffer [index + 6] << 16 | _buffer [index + 7] << 24;  	return (uint)i1 | ((long)i2 << 32);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: unchecked {  	var i1 = _buffer [index] | _buffer [index + 1] << 8 | _buffer [index + 2] << 16 | _buffer [index + 3] << 24;  	var i2 = _buffer [index + 4] | _buffer [index + 5] << 8 | _buffer [index + 6] << 16 | _buffer [index + 7] << 24;  	return (uint)i1 | ((long)i2 << 32);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: unchecked {  	var i1 = _buffer [index] | _buffer [index + 1] << 8 | _buffer [index + 2] << 16 | _buffer [index + 3] << 24;  	var i2 = _buffer [index + 4] | _buffer [index + 5] << 8 | _buffer [index + 6] << 16 | _buffer [index + 7] << 24;  	return (uint)i1 | ((long)i2 << 32);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: unchecked {  	var i1 = _buffer [index] | _buffer [index + 1] << 8 | _buffer [index + 2] << 16 | _buffer [index + 3] << 24;  	var i2 = _buffer [index + 4] | _buffer [index + 5] << 8 | _buffer [index + 6] << 16 | _buffer [index + 7] << 24;  	return (uint)i1 | ((long)i2 << 32);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: return (uint)i1 | ((long)i2 << 32);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetShort,The following statement contains a magic number: unchecked {  	_buffer [index] = (byte)((ushort)value);  	_buffer [index + 1] = (byte)((ushort)value >> 8);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetShort,The following statement contains a magic number: _buffer [index + 1] = (byte)((ushort)value >> 8);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetInt,The following statement contains a magic number: unchecked {  	var unsignedValue = (uint)value;  	_buffer [index] = (byte)(value);  	_buffer [index + 1] = (byte)(unsignedValue >> 8);  	_buffer [index + 2] = (byte)(unsignedValue >> 16);  	_buffer [index + 3] = (byte)(unsignedValue >> 24);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetInt,The following statement contains a magic number: unchecked {  	var unsignedValue = (uint)value;  	_buffer [index] = (byte)(value);  	_buffer [index + 1] = (byte)(unsignedValue >> 8);  	_buffer [index + 2] = (byte)(unsignedValue >> 16);  	_buffer [index + 3] = (byte)(unsignedValue >> 24);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetInt,The following statement contains a magic number: unchecked {  	var unsignedValue = (uint)value;  	_buffer [index] = (byte)(value);  	_buffer [index + 1] = (byte)(unsignedValue >> 8);  	_buffer [index + 2] = (byte)(unsignedValue >> 16);  	_buffer [index + 3] = (byte)(unsignedValue >> 24);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetInt,The following statement contains a magic number: unchecked {  	var unsignedValue = (uint)value;  	_buffer [index] = (byte)(value);  	_buffer [index + 1] = (byte)(unsignedValue >> 8);  	_buffer [index + 2] = (byte)(unsignedValue >> 16);  	_buffer [index + 3] = (byte)(unsignedValue >> 24);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetInt,The following statement contains a magic number: unchecked {  	var unsignedValue = (uint)value;  	_buffer [index] = (byte)(value);  	_buffer [index + 1] = (byte)(unsignedValue >> 8);  	_buffer [index + 2] = (byte)(unsignedValue >> 16);  	_buffer [index + 3] = (byte)(unsignedValue >> 24);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetInt,The following statement contains a magic number: _buffer [index + 1] = (byte)(unsignedValue >> 8);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetInt,The following statement contains a magic number: _buffer [index + 2] = (byte)(unsignedValue >> 16);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetInt,The following statement contains a magic number: _buffer [index + 2] = (byte)(unsignedValue >> 16);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetInt,The following statement contains a magic number: _buffer [index + 3] = (byte)(unsignedValue >> 24);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetInt,The following statement contains a magic number: _buffer [index + 3] = (byte)(unsignedValue >> 24);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: unchecked {  	var unsignedValue = (ulong)value;  	_buffer [index] = (byte)(value);  	_buffer [index + 1] = (byte)(unsignedValue >> 8);  	_buffer [index + 2] = (byte)(unsignedValue >> 16);  	_buffer [index + 3] = (byte)(unsignedValue >> 24);  	_buffer [index + 4] = (byte)(unsignedValue >> 32);  	_buffer [index + 5] = (byte)(unsignedValue >> 40);  	_buffer [index + 6] = (byte)(unsignedValue >> 48);  	_buffer [index + 7] = (byte)(unsignedValue >> 56);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: unchecked {  	var unsignedValue = (ulong)value;  	_buffer [index] = (byte)(value);  	_buffer [index + 1] = (byte)(unsignedValue >> 8);  	_buffer [index + 2] = (byte)(unsignedValue >> 16);  	_buffer [index + 3] = (byte)(unsignedValue >> 24);  	_buffer [index + 4] = (byte)(unsignedValue >> 32);  	_buffer [index + 5] = (byte)(unsignedValue >> 40);  	_buffer [index + 6] = (byte)(unsignedValue >> 48);  	_buffer [index + 7] = (byte)(unsignedValue >> 56);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: unchecked {  	var unsignedValue = (ulong)value;  	_buffer [index] = (byte)(value);  	_buffer [index + 1] = (byte)(unsignedValue >> 8);  	_buffer [index + 2] = (byte)(unsignedValue >> 16);  	_buffer [index + 3] = (byte)(unsignedValue >> 24);  	_buffer [index + 4] = (byte)(unsignedValue >> 32);  	_buffer [index + 5] = (byte)(unsignedValue >> 40);  	_buffer [index + 6] = (byte)(unsignedValue >> 48);  	_buffer [index + 7] = (byte)(unsignedValue >> 56);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: unchecked {  	var unsignedValue = (ulong)value;  	_buffer [index] = (byte)(value);  	_buffer [index + 1] = (byte)(unsignedValue >> 8);  	_buffer [index + 2] = (byte)(unsignedValue >> 16);  	_buffer [index + 3] = (byte)(unsignedValue >> 24);  	_buffer [index + 4] = (byte)(unsignedValue >> 32);  	_buffer [index + 5] = (byte)(unsignedValue >> 40);  	_buffer [index + 6] = (byte)(unsignedValue >> 48);  	_buffer [index + 7] = (byte)(unsignedValue >> 56);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: unchecked {  	var unsignedValue = (ulong)value;  	_buffer [index] = (byte)(value);  	_buffer [index + 1] = (byte)(unsignedValue >> 8);  	_buffer [index + 2] = (byte)(unsignedValue >> 16);  	_buffer [index + 3] = (byte)(unsignedValue >> 24);  	_buffer [index + 4] = (byte)(unsignedValue >> 32);  	_buffer [index + 5] = (byte)(unsignedValue >> 40);  	_buffer [index + 6] = (byte)(unsignedValue >> 48);  	_buffer [index + 7] = (byte)(unsignedValue >> 56);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: unchecked {  	var unsignedValue = (ulong)value;  	_buffer [index] = (byte)(value);  	_buffer [index + 1] = (byte)(unsignedValue >> 8);  	_buffer [index + 2] = (byte)(unsignedValue >> 16);  	_buffer [index + 3] = (byte)(unsignedValue >> 24);  	_buffer [index + 4] = (byte)(unsignedValue >> 32);  	_buffer [index + 5] = (byte)(unsignedValue >> 40);  	_buffer [index + 6] = (byte)(unsignedValue >> 48);  	_buffer [index + 7] = (byte)(unsignedValue >> 56);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: unchecked {  	var unsignedValue = (ulong)value;  	_buffer [index] = (byte)(value);  	_buffer [index + 1] = (byte)(unsignedValue >> 8);  	_buffer [index + 2] = (byte)(unsignedValue >> 16);  	_buffer [index + 3] = (byte)(unsignedValue >> 24);  	_buffer [index + 4] = (byte)(unsignedValue >> 32);  	_buffer [index + 5] = (byte)(unsignedValue >> 40);  	_buffer [index + 6] = (byte)(unsignedValue >> 48);  	_buffer [index + 7] = (byte)(unsignedValue >> 56);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: unchecked {  	var unsignedValue = (ulong)value;  	_buffer [index] = (byte)(value);  	_buffer [index + 1] = (byte)(unsignedValue >> 8);  	_buffer [index + 2] = (byte)(unsignedValue >> 16);  	_buffer [index + 3] = (byte)(unsignedValue >> 24);  	_buffer [index + 4] = (byte)(unsignedValue >> 32);  	_buffer [index + 5] = (byte)(unsignedValue >> 40);  	_buffer [index + 6] = (byte)(unsignedValue >> 48);  	_buffer [index + 7] = (byte)(unsignedValue >> 56);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: unchecked {  	var unsignedValue = (ulong)value;  	_buffer [index] = (byte)(value);  	_buffer [index + 1] = (byte)(unsignedValue >> 8);  	_buffer [index + 2] = (byte)(unsignedValue >> 16);  	_buffer [index + 3] = (byte)(unsignedValue >> 24);  	_buffer [index + 4] = (byte)(unsignedValue >> 32);  	_buffer [index + 5] = (byte)(unsignedValue >> 40);  	_buffer [index + 6] = (byte)(unsignedValue >> 48);  	_buffer [index + 7] = (byte)(unsignedValue >> 56);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: unchecked {  	var unsignedValue = (ulong)value;  	_buffer [index] = (byte)(value);  	_buffer [index + 1] = (byte)(unsignedValue >> 8);  	_buffer [index + 2] = (byte)(unsignedValue >> 16);  	_buffer [index + 3] = (byte)(unsignedValue >> 24);  	_buffer [index + 4] = (byte)(unsignedValue >> 32);  	_buffer [index + 5] = (byte)(unsignedValue >> 40);  	_buffer [index + 6] = (byte)(unsignedValue >> 48);  	_buffer [index + 7] = (byte)(unsignedValue >> 56);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: unchecked {  	var unsignedValue = (ulong)value;  	_buffer [index] = (byte)(value);  	_buffer [index + 1] = (byte)(unsignedValue >> 8);  	_buffer [index + 2] = (byte)(unsignedValue >> 16);  	_buffer [index + 3] = (byte)(unsignedValue >> 24);  	_buffer [index + 4] = (byte)(unsignedValue >> 32);  	_buffer [index + 5] = (byte)(unsignedValue >> 40);  	_buffer [index + 6] = (byte)(unsignedValue >> 48);  	_buffer [index + 7] = (byte)(unsignedValue >> 56);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: unchecked {  	var unsignedValue = (ulong)value;  	_buffer [index] = (byte)(value);  	_buffer [index + 1] = (byte)(unsignedValue >> 8);  	_buffer [index + 2] = (byte)(unsignedValue >> 16);  	_buffer [index + 3] = (byte)(unsignedValue >> 24);  	_buffer [index + 4] = (byte)(unsignedValue >> 32);  	_buffer [index + 5] = (byte)(unsignedValue >> 40);  	_buffer [index + 6] = (byte)(unsignedValue >> 48);  	_buffer [index + 7] = (byte)(unsignedValue >> 56);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: unchecked {  	var unsignedValue = (ulong)value;  	_buffer [index] = (byte)(value);  	_buffer [index + 1] = (byte)(unsignedValue >> 8);  	_buffer [index + 2] = (byte)(unsignedValue >> 16);  	_buffer [index + 3] = (byte)(unsignedValue >> 24);  	_buffer [index + 4] = (byte)(unsignedValue >> 32);  	_buffer [index + 5] = (byte)(unsignedValue >> 40);  	_buffer [index + 6] = (byte)(unsignedValue >> 48);  	_buffer [index + 7] = (byte)(unsignedValue >> 56);  }  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer [index + 1] = (byte)(unsignedValue >> 8);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer [index + 2] = (byte)(unsignedValue >> 16);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer [index + 2] = (byte)(unsignedValue >> 16);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer [index + 3] = (byte)(unsignedValue >> 24);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer [index + 3] = (byte)(unsignedValue >> 24);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer [index + 4] = (byte)(unsignedValue >> 32);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer [index + 4] = (byte)(unsignedValue >> 32);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer [index + 5] = (byte)(unsignedValue >> 40);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer [index + 5] = (byte)(unsignedValue >> 40);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer [index + 6] = (byte)(unsignedValue >> 48);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer [index + 6] = (byte)(unsignedValue >> 48);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer [index + 7] = (byte)(unsignedValue >> 56);  
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer [index + 7] = (byte)(unsignedValue >> 56);  
Magic Number,Helios.Channels,DefaultChannelConfiguration,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\DefaultChannelConfiguration.cs,DefaultChannelConfiguration,The following statement contains a magic number: if (channel is IServerChannel || channel is AbstractSocketByteChannel) {  	_maxMessagesPerRead = 16;  } else {  	_maxMessagesPerRead = 1;  }  
Magic Number,Helios.Channels,DefaultChannelConfiguration,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\DefaultChannelConfiguration.cs,DefaultChannelConfiguration,The following statement contains a magic number: _maxMessagesPerRead = 16;  
Magic Number,Helios.Channels,DefaultChannelPipeline,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\DefaultChannelPipeline.cs,DefaultChannelPipeline,The following statement contains a magic number: _nameContextMap = new Dictionary<string' AbstractChannelHandlerContext> (4);  
Magic Number,Helios.Channels.Bootstrap,ServerBootstrap,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Bootstrap\ServerBootstrap.cs,ToString,The following statement contains a magic number: if (buf [buf.Length - 1] == '(') {  	buf.Append (')');  } else {  	buf [buf.Length - 2] = ')';  	buf.Length = buf.Length - 1;  }  
Magic Number,Helios.Channels.Bootstrap,ServerBootstrap,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Bootstrap\ServerBootstrap.cs,ToString,The following statement contains a magic number: buf [buf.Length - 2] = ')';  
Magic Number,Helios.Channels.Local,LocalAddress,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Local\LocalAddress.cs,LocalAddress,The following statement contains a magic number: sb [7] = ':';  
Magic Number,Helios.Channels.Local,LocalAddress,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Local\LocalAddress.cs,LocalAddress,The following statement contains a magic number: Id = _strVal.Substring (6);  
Magic Number,Helios.Channels.Local,LocalServerChannel,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Local\LocalServerChannel.cs,DoClose,The following statement contains a magic number: if (_state <= 1) {  	// Update all internal state before the CloseTask is notified  	if (_localAddress != null) {  		LocalChannelRegistry.Unregister (_localAddress);  		_localAddress = null;  	}  	_state = 2;  }  
Magic Number,Helios.Channels.Local,LocalServerChannel,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Local\LocalServerChannel.cs,DoClose,The following statement contains a magic number: _state = 2;  
Magic Number,Helios.Codecs,LengthFieldBasedFrameDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldFrameBasedDecoder.cs,GetUnadjustedFrameLength,The following statement contains a magic number: switch (length) {  case 1:  	frameLength = buffer.GetByte (offset);  	break;  case 2:  	frameLength = buffer.GetShort (offset);  	break;  case 4:  	frameLength = buffer.GetInt (offset);  	break;  case 8:  	frameLength = buffer.GetLong (offset);  	break;  default:  	throw new DecoderException ("unsupported lengthFieldLength: " + lengthFieldLength + " (expected: 1' 2' 3' 4' or 8)");  }  
Magic Number,Helios.Codecs,LengthFieldBasedFrameDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldFrameBasedDecoder.cs,GetUnadjustedFrameLength,The following statement contains a magic number: switch (length) {  case 1:  	frameLength = buffer.GetByte (offset);  	break;  case 2:  	frameLength = buffer.GetShort (offset);  	break;  case 4:  	frameLength = buffer.GetInt (offset);  	break;  case 8:  	frameLength = buffer.GetLong (offset);  	break;  default:  	throw new DecoderException ("unsupported lengthFieldLength: " + lengthFieldLength + " (expected: 1' 2' 3' 4' or 8)");  }  
Magic Number,Helios.Codecs,LengthFieldBasedFrameDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldFrameBasedDecoder.cs,GetUnadjustedFrameLength,The following statement contains a magic number: switch (length) {  case 1:  	frameLength = buffer.GetByte (offset);  	break;  case 2:  	frameLength = buffer.GetShort (offset);  	break;  case 4:  	frameLength = buffer.GetInt (offset);  	break;  case 8:  	frameLength = buffer.GetLong (offset);  	break;  default:  	throw new DecoderException ("unsupported lengthFieldLength: " + lengthFieldLength + " (expected: 1' 2' 3' 4' or 8)");  }  
Magic Number,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,LengthFieldPrepender,The following statement contains a magic number: if (lengthFieldLength != 1 && lengthFieldLength != 2 && lengthFieldLength != 4 && lengthFieldLength != 8) {  	throw new ArgumentException ("lengthFieldLength must be either 1' 2' 3' 4' or 8: " + lengthFieldLength' "lengthFieldLength");  }  
Magic Number,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,LengthFieldPrepender,The following statement contains a magic number: if (lengthFieldLength != 1 && lengthFieldLength != 2 && lengthFieldLength != 4 && lengthFieldLength != 8) {  	throw new ArgumentException ("lengthFieldLength must be either 1' 2' 3' 4' or 8: " + lengthFieldLength' "lengthFieldLength");  }  
Magic Number,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,LengthFieldPrepender,The following statement contains a magic number: if (lengthFieldLength != 1 && lengthFieldLength != 2 && lengthFieldLength != 4 && lengthFieldLength != 8) {  	throw new ArgumentException ("lengthFieldLength must be either 1' 2' 3' 4' or 8: " + lengthFieldLength' "lengthFieldLength");  }  
Magic Number,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256) {  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	}  	output.Add (context.Allocator.Buffer (1).WithOrder (_byteOrder).WriteByte ((byte)length));  	break;  case 2:  	if (length >= 65536) {  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	}  	output.Add (context.Allocator.Buffer (2).WithOrder (_byteOrder).WriteShort ((short)length));  	break;  case 4:  	output.Add (context.Allocator.Buffer (4).WithOrder (_byteOrder).WriteInt (length));  	break;  case 8:  	output.Add (context.Allocator.Buffer (8).WithOrder (_byteOrder).WriteLong (length));  	break;  default:  	throw new Exception ("Unknown length field length");  }  
Magic Number,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256) {  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	}  	output.Add (context.Allocator.Buffer (1).WithOrder (_byteOrder).WriteByte ((byte)length));  	break;  case 2:  	if (length >= 65536) {  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	}  	output.Add (context.Allocator.Buffer (2).WithOrder (_byteOrder).WriteShort ((short)length));  	break;  case 4:  	output.Add (context.Allocator.Buffer (4).WithOrder (_byteOrder).WriteInt (length));  	break;  case 8:  	output.Add (context.Allocator.Buffer (8).WithOrder (_byteOrder).WriteLong (length));  	break;  default:  	throw new Exception ("Unknown length field length");  }  
Magic Number,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256) {  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	}  	output.Add (context.Allocator.Buffer (1).WithOrder (_byteOrder).WriteByte ((byte)length));  	break;  case 2:  	if (length >= 65536) {  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	}  	output.Add (context.Allocator.Buffer (2).WithOrder (_byteOrder).WriteShort ((short)length));  	break;  case 4:  	output.Add (context.Allocator.Buffer (4).WithOrder (_byteOrder).WriteInt (length));  	break;  case 8:  	output.Add (context.Allocator.Buffer (8).WithOrder (_byteOrder).WriteLong (length));  	break;  default:  	throw new Exception ("Unknown length field length");  }  
Magic Number,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256) {  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	}  	output.Add (context.Allocator.Buffer (1).WithOrder (_byteOrder).WriteByte ((byte)length));  	break;  case 2:  	if (length >= 65536) {  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	}  	output.Add (context.Allocator.Buffer (2).WithOrder (_byteOrder).WriteShort ((short)length));  	break;  case 4:  	output.Add (context.Allocator.Buffer (4).WithOrder (_byteOrder).WriteInt (length));  	break;  case 8:  	output.Add (context.Allocator.Buffer (8).WithOrder (_byteOrder).WriteLong (length));  	break;  default:  	throw new Exception ("Unknown length field length");  }  
Magic Number,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256) {  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	}  	output.Add (context.Allocator.Buffer (1).WithOrder (_byteOrder).WriteByte ((byte)length));  	break;  case 2:  	if (length >= 65536) {  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	}  	output.Add (context.Allocator.Buffer (2).WithOrder (_byteOrder).WriteShort ((short)length));  	break;  case 4:  	output.Add (context.Allocator.Buffer (4).WithOrder (_byteOrder).WriteInt (length));  	break;  case 8:  	output.Add (context.Allocator.Buffer (8).WithOrder (_byteOrder).WriteLong (length));  	break;  default:  	throw new Exception ("Unknown length field length");  }  
Magic Number,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256) {  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	}  	output.Add (context.Allocator.Buffer (1).WithOrder (_byteOrder).WriteByte ((byte)length));  	break;  case 2:  	if (length >= 65536) {  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	}  	output.Add (context.Allocator.Buffer (2).WithOrder (_byteOrder).WriteShort ((short)length));  	break;  case 4:  	output.Add (context.Allocator.Buffer (4).WithOrder (_byteOrder).WriteInt (length));  	break;  case 8:  	output.Add (context.Allocator.Buffer (8).WithOrder (_byteOrder).WriteLong (length));  	break;  default:  	throw new Exception ("Unknown length field length");  }  
Magic Number,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256) {  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	}  	output.Add (context.Allocator.Buffer (1).WithOrder (_byteOrder).WriteByte ((byte)length));  	break;  case 2:  	if (length >= 65536) {  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	}  	output.Add (context.Allocator.Buffer (2).WithOrder (_byteOrder).WriteShort ((short)length));  	break;  case 4:  	output.Add (context.Allocator.Buffer (4).WithOrder (_byteOrder).WriteInt (length));  	break;  case 8:  	output.Add (context.Allocator.Buffer (8).WithOrder (_byteOrder).WriteLong (length));  	break;  default:  	throw new Exception ("Unknown length field length");  }  
Magic Number,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256) {  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	}  	output.Add (context.Allocator.Buffer (1).WithOrder (_byteOrder).WriteByte ((byte)length));  	break;  case 2:  	if (length >= 65536) {  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	}  	output.Add (context.Allocator.Buffer (2).WithOrder (_byteOrder).WriteShort ((short)length));  	break;  case 4:  	output.Add (context.Allocator.Buffer (4).WithOrder (_byteOrder).WriteInt (length));  	break;  case 8:  	output.Add (context.Allocator.Buffer (8).WithOrder (_byteOrder).WriteLong (length));  	break;  default:  	throw new Exception ("Unknown length field length");  }  
Magic Number,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: if (length >= 256) {  	throw new ArgumentException ("length of object does not fit into one byte: " + length);  }  
Magic Number,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: if (length >= 65536) {  	throw new ArgumentException ("length of object does not fit into a short integer: " + length);  }  
Magic Number,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: output.Add (context.Allocator.Buffer (2).WithOrder (_byteOrder).WriteShort ((short)length));  
Magic Number,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: output.Add (context.Allocator.Buffer (4).WithOrder (_byteOrder).WriteInt (length));  
Magic Number,Helios.Codecs,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: output.Add (context.Allocator.Buffer (8).WithOrder (_byteOrder).WriteLong (length));  
Magic Number,Helios.Concurrency,SingleThreadEventExecutor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\SingleThreadEventExecutor.cs,ConfirmShutdown,The following statement contains a magic number: if (currentTime - _lastExecutionTime <= _gracefulShutdownQuietPeriod) {  	Wakeup (true);  	Thread.Sleep (100);  	return false;  }  
Magic Number,Helios.Concurrency,SingleThreadEventExecutor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\SingleThreadEventExecutor.cs,ConfirmShutdown,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,Helios.Concurrency.Impl,ThreadPoolFiber,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\Impl\ThreadPoolFiber.cs,SwapExecutor,The following statement contains a magic number: Executor.GracefulShutdown (TimeSpan.FromSeconds (3));  
Magic Number,Helios.Concurrency.Impl,DedicatedThreadPoolFiber,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\Impl\DedicatedThreadPoolFiber.cs,SwapExecutor,The following statement contains a magic number: Executor.GracefulShutdown (TimeSpan.FromSeconds (3));  
Magic Number,Helios.Concurrency.Impl,SynchronousFiber,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Concurrency\Impl\SynchronousFiber.cs,SwapExecutor,The following statement contains a magic number: Executor.GracefulShutdown (TimeSpan.FromSeconds (3));  
Magic Number,Helios.Util,InternalThreadLocalMap,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Util\InternalThreadLocalMap.cs,ExpandIndexedVariableTableAndSet,The following statement contains a magic number: newCapacity |= newCapacity.RightUShift (2);  
Magic Number,Helios.Util,InternalThreadLocalMap,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Util\InternalThreadLocalMap.cs,ExpandIndexedVariableTableAndSet,The following statement contains a magic number: newCapacity |= newCapacity.RightUShift (4);  
Magic Number,Helios.Util,InternalThreadLocalMap,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Util\InternalThreadLocalMap.cs,ExpandIndexedVariableTableAndSet,The following statement contains a magic number: newCapacity |= newCapacity.RightUShift (8);  
Magic Number,Helios.Util,InternalThreadLocalMap,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Util\InternalThreadLocalMap.cs,ExpandIndexedVariableTableAndSet,The following statement contains a magic number: newCapacity |= newCapacity.RightUShift (16);  
Magic Number,Helios.Util.Collections,PriorityQueue,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Util\Collections\PriorityQueue.cs,PriorityQueue,The following statement contains a magic number: _capacity = 11;  
Magic Number,Helios.Util.Collections,PriorityQueue,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Util\Collections\PriorityQueue.cs,GrowHeap,The following statement contains a magic number: _capacity = oldCapacity + (oldCapacity <= 64 ? oldCapacity + 2 : oldCapacity >> 1);  
Magic Number,Helios.Util.Collections,PriorityQueue,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Util\Collections\PriorityQueue.cs,GrowHeap,The following statement contains a magic number: _capacity = oldCapacity + (oldCapacity <= 64 ? oldCapacity + 2 : oldCapacity >> 1);  
Magic Number,Helios.Topology,Node,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Topology\Node.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = 17;  	hashCode += 23 * Host.GetHashCode ();  	hashCode += 23 * Port.GetHashCode ();  	return hashCode;  }  
Magic Number,Helios.Topology,Node,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Topology\Node.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = 17;  	hashCode += 23 * Host.GetHashCode ();  	hashCode += 23 * Port.GetHashCode ();  	return hashCode;  }  
Magic Number,Helios.Topology,Node,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Topology\Node.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = 17;  	hashCode += 23 * Host.GetHashCode ();  	hashCode += 23 * Port.GetHashCode ();  	return hashCode;  }  
Magic Number,Helios.Topology,Node,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Topology\Node.cs,GetHashCode,The following statement contains a magic number: hashCode += 23 * Host.GetHashCode ();  
Magic Number,Helios.Topology,Node,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Topology\Node.cs,GetHashCode,The following statement contains a magic number: hashCode += 23 * Port.GetHashCode ();  
Magic Number,Helios.Serialization,LengthFieldFrameBasedDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldFrameBasedDecoder.cs,GetUnadjustedFrameLength,The following statement contains a magic number: switch (length) {  case 1:  	framelength = buf.GetByte (offset);  	break;  case 2:  	framelength = buf.GetShort (offset);  	break;  case 4:  	framelength = buf.GetInt (offset);  	break;  case 8:  	framelength = buf.GetLong (offset);  	break;  default:  	throw new DecoderException (string.Format ("unsupported lengtFieldLength: {0} (expected: 1' 2' 4' or 8)"' length));  }  
Magic Number,Helios.Serialization,LengthFieldFrameBasedDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldFrameBasedDecoder.cs,GetUnadjustedFrameLength,The following statement contains a magic number: switch (length) {  case 1:  	framelength = buf.GetByte (offset);  	break;  case 2:  	framelength = buf.GetShort (offset);  	break;  case 4:  	framelength = buf.GetInt (offset);  	break;  case 8:  	framelength = buf.GetLong (offset);  	break;  default:  	throw new DecoderException (string.Format ("unsupported lengtFieldLength: {0} (expected: 1' 2' 4' or 8)"' length));  }  
Magic Number,Helios.Serialization,LengthFieldFrameBasedDecoder,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldFrameBasedDecoder.cs,GetUnadjustedFrameLength,The following statement contains a magic number: switch (length) {  case 1:  	framelength = buf.GetByte (offset);  	break;  case 2:  	framelength = buf.GetShort (offset);  	break;  case 4:  	framelength = buf.GetInt (offset);  	break;  case 8:  	framelength = buf.GetLong (offset);  	break;  default:  	throw new DecoderException (string.Format ("unsupported lengtFieldLength: {0} (expected: 1' 2' 4' or 8)"' length));  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: using (var memoryStream = new MemoryStream ()) {  	switch (_lengthFieldLength) {  	case 1:  		if (length >= 256)  			throw new ArgumentException ("length of object does not fit into one byte: " + length);  		memoryStream.Write (BitConverter.GetBytes ((byte)length)' 0' 1);  		break;  	case 2:  		if (length >= 65536)  			throw new ArgumentException ("length of object does not fit into a short integer: " + length);  		memoryStream.Write (BitConverter.GetBytes ((ushort)length)' 0' 2);  		break;  	case 4:  		memoryStream.Write (BitConverter.GetBytes ((uint)length)' 0' 4);  		break;  	case 8:  		memoryStream.Write (BitConverter.GetBytes ((long)length)' 0' 8);  		break;  	default:  		throw new Exception ("Unknown lenght field length");  	}  	memoryStream.Write (data.Buffer' 0' data.Length);  	newData = memoryStream.GetBuffer ();  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: using (var memoryStream = new MemoryStream ()) {  	switch (_lengthFieldLength) {  	case 1:  		if (length >= 256)  			throw new ArgumentException ("length of object does not fit into one byte: " + length);  		memoryStream.Write (BitConverter.GetBytes ((byte)length)' 0' 1);  		break;  	case 2:  		if (length >= 65536)  			throw new ArgumentException ("length of object does not fit into a short integer: " + length);  		memoryStream.Write (BitConverter.GetBytes ((ushort)length)' 0' 2);  		break;  	case 4:  		memoryStream.Write (BitConverter.GetBytes ((uint)length)' 0' 4);  		break;  	case 8:  		memoryStream.Write (BitConverter.GetBytes ((long)length)' 0' 8);  		break;  	default:  		throw new Exception ("Unknown lenght field length");  	}  	memoryStream.Write (data.Buffer' 0' data.Length);  	newData = memoryStream.GetBuffer ();  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: using (var memoryStream = new MemoryStream ()) {  	switch (_lengthFieldLength) {  	case 1:  		if (length >= 256)  			throw new ArgumentException ("length of object does not fit into one byte: " + length);  		memoryStream.Write (BitConverter.GetBytes ((byte)length)' 0' 1);  		break;  	case 2:  		if (length >= 65536)  			throw new ArgumentException ("length of object does not fit into a short integer: " + length);  		memoryStream.Write (BitConverter.GetBytes ((ushort)length)' 0' 2);  		break;  	case 4:  		memoryStream.Write (BitConverter.GetBytes ((uint)length)' 0' 4);  		break;  	case 8:  		memoryStream.Write (BitConverter.GetBytes ((long)length)' 0' 8);  		break;  	default:  		throw new Exception ("Unknown lenght field length");  	}  	memoryStream.Write (data.Buffer' 0' data.Length);  	newData = memoryStream.GetBuffer ();  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: using (var memoryStream = new MemoryStream ()) {  	switch (_lengthFieldLength) {  	case 1:  		if (length >= 256)  			throw new ArgumentException ("length of object does not fit into one byte: " + length);  		memoryStream.Write (BitConverter.GetBytes ((byte)length)' 0' 1);  		break;  	case 2:  		if (length >= 65536)  			throw new ArgumentException ("length of object does not fit into a short integer: " + length);  		memoryStream.Write (BitConverter.GetBytes ((ushort)length)' 0' 2);  		break;  	case 4:  		memoryStream.Write (BitConverter.GetBytes ((uint)length)' 0' 4);  		break;  	case 8:  		memoryStream.Write (BitConverter.GetBytes ((long)length)' 0' 8);  		break;  	default:  		throw new Exception ("Unknown lenght field length");  	}  	memoryStream.Write (data.Buffer' 0' data.Length);  	newData = memoryStream.GetBuffer ();  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: using (var memoryStream = new MemoryStream ()) {  	switch (_lengthFieldLength) {  	case 1:  		if (length >= 256)  			throw new ArgumentException ("length of object does not fit into one byte: " + length);  		memoryStream.Write (BitConverter.GetBytes ((byte)length)' 0' 1);  		break;  	case 2:  		if (length >= 65536)  			throw new ArgumentException ("length of object does not fit into a short integer: " + length);  		memoryStream.Write (BitConverter.GetBytes ((ushort)length)' 0' 2);  		break;  	case 4:  		memoryStream.Write (BitConverter.GetBytes ((uint)length)' 0' 4);  		break;  	case 8:  		memoryStream.Write (BitConverter.GetBytes ((long)length)' 0' 8);  		break;  	default:  		throw new Exception ("Unknown lenght field length");  	}  	memoryStream.Write (data.Buffer' 0' data.Length);  	newData = memoryStream.GetBuffer ();  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: using (var memoryStream = new MemoryStream ()) {  	switch (_lengthFieldLength) {  	case 1:  		if (length >= 256)  			throw new ArgumentException ("length of object does not fit into one byte: " + length);  		memoryStream.Write (BitConverter.GetBytes ((byte)length)' 0' 1);  		break;  	case 2:  		if (length >= 65536)  			throw new ArgumentException ("length of object does not fit into a short integer: " + length);  		memoryStream.Write (BitConverter.GetBytes ((ushort)length)' 0' 2);  		break;  	case 4:  		memoryStream.Write (BitConverter.GetBytes ((uint)length)' 0' 4);  		break;  	case 8:  		memoryStream.Write (BitConverter.GetBytes ((long)length)' 0' 8);  		break;  	default:  		throw new Exception ("Unknown lenght field length");  	}  	memoryStream.Write (data.Buffer' 0' data.Length);  	newData = memoryStream.GetBuffer ();  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: using (var memoryStream = new MemoryStream ()) {  	switch (_lengthFieldLength) {  	case 1:  		if (length >= 256)  			throw new ArgumentException ("length of object does not fit into one byte: " + length);  		memoryStream.Write (BitConverter.GetBytes ((byte)length)' 0' 1);  		break;  	case 2:  		if (length >= 65536)  			throw new ArgumentException ("length of object does not fit into a short integer: " + length);  		memoryStream.Write (BitConverter.GetBytes ((ushort)length)' 0' 2);  		break;  	case 4:  		memoryStream.Write (BitConverter.GetBytes ((uint)length)' 0' 4);  		break;  	case 8:  		memoryStream.Write (BitConverter.GetBytes ((long)length)' 0' 8);  		break;  	default:  		throw new Exception ("Unknown lenght field length");  	}  	memoryStream.Write (data.Buffer' 0' data.Length);  	newData = memoryStream.GetBuffer ();  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: using (var memoryStream = new MemoryStream ()) {  	switch (_lengthFieldLength) {  	case 1:  		if (length >= 256)  			throw new ArgumentException ("length of object does not fit into one byte: " + length);  		memoryStream.Write (BitConverter.GetBytes ((byte)length)' 0' 1);  		break;  	case 2:  		if (length >= 65536)  			throw new ArgumentException ("length of object does not fit into a short integer: " + length);  		memoryStream.Write (BitConverter.GetBytes ((ushort)length)' 0' 2);  		break;  	case 4:  		memoryStream.Write (BitConverter.GetBytes ((uint)length)' 0' 4);  		break;  	case 8:  		memoryStream.Write (BitConverter.GetBytes ((long)length)' 0' 8);  		break;  	default:  		throw new Exception ("Unknown lenght field length");  	}  	memoryStream.Write (data.Buffer' 0' data.Length);  	newData = memoryStream.GetBuffer ();  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256)  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	memoryStream.Write (BitConverter.GetBytes ((byte)length)' 0' 1);  	break;  case 2:  	if (length >= 65536)  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	memoryStream.Write (BitConverter.GetBytes ((ushort)length)' 0' 2);  	break;  case 4:  	memoryStream.Write (BitConverter.GetBytes ((uint)length)' 0' 4);  	break;  case 8:  	memoryStream.Write (BitConverter.GetBytes ((long)length)' 0' 8);  	break;  default:  	throw new Exception ("Unknown lenght field length");  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256)  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	memoryStream.Write (BitConverter.GetBytes ((byte)length)' 0' 1);  	break;  case 2:  	if (length >= 65536)  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	memoryStream.Write (BitConverter.GetBytes ((ushort)length)' 0' 2);  	break;  case 4:  	memoryStream.Write (BitConverter.GetBytes ((uint)length)' 0' 4);  	break;  case 8:  	memoryStream.Write (BitConverter.GetBytes ((long)length)' 0' 8);  	break;  default:  	throw new Exception ("Unknown lenght field length");  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256)  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	memoryStream.Write (BitConverter.GetBytes ((byte)length)' 0' 1);  	break;  case 2:  	if (length >= 65536)  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	memoryStream.Write (BitConverter.GetBytes ((ushort)length)' 0' 2);  	break;  case 4:  	memoryStream.Write (BitConverter.GetBytes ((uint)length)' 0' 4);  	break;  case 8:  	memoryStream.Write (BitConverter.GetBytes ((long)length)' 0' 8);  	break;  default:  	throw new Exception ("Unknown lenght field length");  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256)  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	memoryStream.Write (BitConverter.GetBytes ((byte)length)' 0' 1);  	break;  case 2:  	if (length >= 65536)  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	memoryStream.Write (BitConverter.GetBytes ((ushort)length)' 0' 2);  	break;  case 4:  	memoryStream.Write (BitConverter.GetBytes ((uint)length)' 0' 4);  	break;  case 8:  	memoryStream.Write (BitConverter.GetBytes ((long)length)' 0' 8);  	break;  default:  	throw new Exception ("Unknown lenght field length");  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256)  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	memoryStream.Write (BitConverter.GetBytes ((byte)length)' 0' 1);  	break;  case 2:  	if (length >= 65536)  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	memoryStream.Write (BitConverter.GetBytes ((ushort)length)' 0' 2);  	break;  case 4:  	memoryStream.Write (BitConverter.GetBytes ((uint)length)' 0' 4);  	break;  case 8:  	memoryStream.Write (BitConverter.GetBytes ((long)length)' 0' 8);  	break;  default:  	throw new Exception ("Unknown lenght field length");  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256)  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	memoryStream.Write (BitConverter.GetBytes ((byte)length)' 0' 1);  	break;  case 2:  	if (length >= 65536)  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	memoryStream.Write (BitConverter.GetBytes ((ushort)length)' 0' 2);  	break;  case 4:  	memoryStream.Write (BitConverter.GetBytes ((uint)length)' 0' 4);  	break;  case 8:  	memoryStream.Write (BitConverter.GetBytes ((long)length)' 0' 8);  	break;  default:  	throw new Exception ("Unknown lenght field length");  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256)  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	memoryStream.Write (BitConverter.GetBytes ((byte)length)' 0' 1);  	break;  case 2:  	if (length >= 65536)  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	memoryStream.Write (BitConverter.GetBytes ((ushort)length)' 0' 2);  	break;  case 4:  	memoryStream.Write (BitConverter.GetBytes ((uint)length)' 0' 4);  	break;  case 8:  	memoryStream.Write (BitConverter.GetBytes ((long)length)' 0' 8);  	break;  default:  	throw new Exception ("Unknown lenght field length");  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256)  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	memoryStream.Write (BitConverter.GetBytes ((byte)length)' 0' 1);  	break;  case 2:  	if (length >= 65536)  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	memoryStream.Write (BitConverter.GetBytes ((ushort)length)' 0' 2);  	break;  case 4:  	memoryStream.Write (BitConverter.GetBytes ((uint)length)' 0' 4);  	break;  case 8:  	memoryStream.Write (BitConverter.GetBytes ((long)length)' 0' 8);  	break;  default:  	throw new Exception ("Unknown lenght field length");  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: if (length >= 256)  	throw new ArgumentException ("length of object does not fit into one byte: " + length);  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: if (length >= 65536)  	throw new ArgumentException ("length of object does not fit into a short integer: " + length);  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: memoryStream.Write (BitConverter.GetBytes ((ushort)length)' 0' 2);  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: memoryStream.Write (BitConverter.GetBytes ((uint)length)' 0' 4);  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: memoryStream.Write (BitConverter.GetBytes ((long)length)' 0' 8);  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256)  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	sourceByteBuf.WriteByte (length);  	break;  case 2:  	if (length >= 65536)  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	sourceByteBuf.WriteShort ((ushort)length);  	break;  case 4:  	unchecked {  		sourceByteBuf.WriteUnsignedInt ((uint)length);  	}  	break;  case 8:  	sourceByteBuf.WriteLong (length);  	break;  default:  	throw new Exception ("Unknown length field length");  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256)  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	sourceByteBuf.WriteByte (length);  	break;  case 2:  	if (length >= 65536)  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	sourceByteBuf.WriteShort ((ushort)length);  	break;  case 4:  	unchecked {  		sourceByteBuf.WriteUnsignedInt ((uint)length);  	}  	break;  case 8:  	sourceByteBuf.WriteLong (length);  	break;  default:  	throw new Exception ("Unknown length field length");  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256)  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	sourceByteBuf.WriteByte (length);  	break;  case 2:  	if (length >= 65536)  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	sourceByteBuf.WriteShort ((ushort)length);  	break;  case 4:  	unchecked {  		sourceByteBuf.WriteUnsignedInt ((uint)length);  	}  	break;  case 8:  	sourceByteBuf.WriteLong (length);  	break;  default:  	throw new Exception ("Unknown length field length");  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256)  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	sourceByteBuf.WriteByte (length);  	break;  case 2:  	if (length >= 65536)  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	sourceByteBuf.WriteShort ((ushort)length);  	break;  case 4:  	unchecked {  		sourceByteBuf.WriteUnsignedInt ((uint)length);  	}  	break;  case 8:  	sourceByteBuf.WriteLong (length);  	break;  default:  	throw new Exception ("Unknown length field length");  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength) {  case 1:  	if (length >= 256)  		throw new ArgumentException ("length of object does not fit into one byte: " + length);  	sourceByteBuf.WriteByte (length);  	break;  case 2:  	if (length >= 65536)  		throw new ArgumentException ("length of object does not fit into a short integer: " + length);  	sourceByteBuf.WriteShort ((ushort)length);  	break;  case 4:  	unchecked {  		sourceByteBuf.WriteUnsignedInt ((uint)length);  	}  	break;  case 8:  	sourceByteBuf.WriteLong (length);  	break;  default:  	throw new Exception ("Unknown length field length");  }  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: if (length >= 256)  	throw new ArgumentException ("length of object does not fit into one byte: " + length);  
Magic Number,Helios.Serialization,LengthFieldPrepender,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: if (length >= 65536)  	throw new ArgumentException ("length of object does not fit into a short integer: " + length);  
Magic Number,Helios.Net.Bootstrap,ClientBootstrap,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Bootstrap\ClientBootstrap.cs,ClientBootstrap,The following statement contains a magic number: Workers = 2;  
Magic Number,Helios.Reactor.Bootstrap,ServerBootstrap,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Bootstrap\ServerBootstrap.cs,ServerBootstrap,The following statement contains a magic number: Workers = 2;  
Magic Number,Helios.Reactor.Bootstrap,ServerBootstrap,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Bootstrap\ServerBootstrap.cs,BufferSize,The following statement contains a magic number: if (bufferSize < 1024)  	throw new ArgumentException ("Can't be below 1024"' "bufferSize");  
Magic Number,Helios.Reactor.Bootstrap,ServerBootstrap,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Bootstrap\ServerBootstrap.cs,Validate,The following statement contains a magic number: if (BufferBytes < 1024)  	throw new ArgumentException ("BufferSize must be at least 1024");  
Magic Number,Helios.Net.Connections,UdpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\UdpConnection.cs,Close,The following statement contains a magic number: EventLoop.Shutdown (TimeSpan.FromSeconds (2));  
Magic Number,Helios.Net.Connections,TcpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\TcpConnection.cs,Configure,The following statement contains a magic number: if (config.HasOption<bool> ("linger") && config.GetOption<bool> ("linger"))  	Linger = 10;  else  	Linger = 0;  
Magic Number,Helios.Net.Connections,TcpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\TcpConnection.cs,Configure,The following statement contains a magic number: Linger = 10;  
Magic Number,Helios.Net.Connections,TcpConnection,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Net\Connections\TcpConnection.cs,Close,The following statement contains a magic number: EventLoop.Shutdown (TimeSpan.FromSeconds (2));  
Magic Number,Helios.Reactor,ReactorBase,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\ReactorBase.cs,Stop,The following statement contains a magic number: try {  	Listener.Shutdown (SocketShutdown.Both);  	EventLoop.Shutdown (TimeSpan.FromSeconds (2));  } catch {  }  
Magic Number,Helios.Reactor,ReactorBase,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\ReactorBase.cs,Stop,The following statement contains a magic number: EventLoop.Shutdown (TimeSpan.FromSeconds (2));  
Magic Number,Helios.Reactor.Tcp,TcpProxyReactor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Tcp\TcpProxyReactor.cs,Configure,The following statement contains a magic number: if (config.HasOption<bool> ("linger") && config.GetOption<bool> ("linger"))  	Listener.SetSocketOption (SocketOptionLevel.Socket' SocketOptionName.Linger' new LingerOption (true' 10));  else  	Listener.SetSocketOption (SocketOptionLevel.Socket' SocketOptionName.DontLinger' true);  
Magic Number,Helios.Reactor.Tcp,TcpProxyReactor,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Reactor\Tcp\TcpProxyReactor.cs,Configure,The following statement contains a magic number: Listener.SetSocketOption (SocketOptionLevel.Socket' SocketOptionName.Linger' new LingerOption (true' 10));  
Missing Default,Helios.Channels.Local,LocalChannel,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Channels\Local\LocalChannel.cs,DoWrite,The following switch statement is missing a default case: switch (_state) {  case State.Open:  case State.Bound:  	throw NotYetConnectedException.Instance;  case State.Closed:  	throw ClosedChannelException.Instance;  case State.Connected:  	break;  }  
Missing Default,Helios.Logging,LoggingAdapter,F:\newReposMay17\Aaronontheweb_helios\src\Helios\Logging\LoggingAdapter.cs,Log,The following switch statement is missing a default case: switch (logLevel) {  case LogLevel.Info:  	Info (format' args);  	break;  case LogLevel.Warning:  	Warning (format' args);  	break;  case LogLevel.Error:  	Error (format' args);  	break;  case LogLevel.Debug:  	Debug (format' args);  	break;  }  
