Architecture smell,Project,Namespace,Cause,Responsible Classes,Participating Classes
Cyclic Dependency,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: Castle.DynamicProxy.Tests' Castle.DynamicProxy.Tests.Classes,Castle.DynamicProxy.Tests.AccessLevelTestCase' Castle.DynamicProxy.Tests.FindPeVerify' Castle.DynamicProxy.Tests.BasicClassProxyTestCase' Castle.DynamicProxy.Tests.BasicInterfaceProxyTestCase' Castle.DynamicProxy.Tests.GenericClassProxyTestCase' Castle.DynamicProxy.Tests.GenericInterfaceProxyTestCase' Castle.DynamicProxy.Tests.MixinTestCase' Castle.DynamicProxy.Tests.Classes.ClassWithIndexer' Castle.DynamicProxy.Tests.Classes.ClassWithExplicitInterface,Castle.DynamicProxy.Tests.AccessLevelTestCase' Castle.DynamicProxy.Tests.FindPeVerify' Castle.DynamicProxy.Tests.BasicClassProxyTestCase' Castle.DynamicProxy.Tests.BasicInterfaceProxyTestCase' Castle.DynamicProxy.Tests.GenericClassProxyTestCase' Castle.DynamicProxy.Tests.GenericInterfaceProxyTestCase' Castle.DynamicProxy.Tests.MixinTestCase' Castle.DynamicProxy.Tests.Classes.ClassWithIndexer' Castle.DynamicProxy.Tests.Classes.ClassWithExplicitInterface
Cyclic Dependency,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests.Classes,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: Castle.DynamicProxy.Tests.Classes' Castle.DynamicProxy.Tests' Castle.DynamicProxy.Tests.Interceptors' Castle.DynamicProxy.Tests,Castle.DynamicProxy.Tests.Classes.ClassWithIndexer' Castle.DynamicProxy.Tests.Classes.ClassWithExplicitInterface' Castle.DynamicProxy.Tests.AccessLevelTestCase' Castle.DynamicProxy.Tests.FindPeVerify' Castle.DynamicProxy.Tests.BasicClassProxyTestCase' Castle.DynamicProxy.Tests.BasicInterfaceProxyTestCase' Castle.DynamicProxy.Tests.GenericClassProxyTestCase' Castle.DynamicProxy.Tests.GenericInterfaceProxyTestCase' Castle.DynamicProxy.Tests.MixinTestCase' Castle.DynamicProxy.Tests.Interceptors.ProceedOnTypeInterceptor,Castle.DynamicProxy.Tests.Classes.ClassWithIndexer' Castle.DynamicProxy.Tests.Classes.ClassWithExplicitInterface' Castle.DynamicProxy.Tests.AccessLevelTestCase' Castle.DynamicProxy.Tests.FindPeVerify' Castle.DynamicProxy.Tests.BasicClassProxyTestCase' Castle.DynamicProxy.Tests.BasicInterfaceProxyTestCase' Castle.DynamicProxy.Tests.GenericClassProxyTestCase' Castle.DynamicProxy.Tests.GenericInterfaceProxyTestCase' Castle.DynamicProxy.Tests.MixinTestCase' Castle.DynamicProxy.Tests.Interceptors.ProceedOnTypeInterceptor
Cyclic Dependency,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests.Interceptors,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: Castle.DynamicProxy.Tests.Interceptors' Castle.DynamicProxy.Tests,Castle.DynamicProxy.Tests.Interceptors.ProceedOnTypeInterceptor' Castle.DynamicProxy.Tests.AccessLevelTestCase' Castle.DynamicProxy.Tests.FindPeVerify' Castle.DynamicProxy.Tests.BasicClassProxyTestCase' Castle.DynamicProxy.Tests.BasicInterfaceProxyTestCase' Castle.DynamicProxy.Tests.GenericClassProxyTestCase' Castle.DynamicProxy.Tests.GenericInterfaceProxyTestCase' Castle.DynamicProxy.Tests.MixinTestCase,Castle.DynamicProxy.Tests.Interceptors.ProceedOnTypeInterceptor' Castle.DynamicProxy.Tests.AccessLevelTestCase' Castle.DynamicProxy.Tests.FindPeVerify' Castle.DynamicProxy.Tests.BasicClassProxyTestCase' Castle.DynamicProxy.Tests.BasicInterfaceProxyTestCase' Castle.DynamicProxy.Tests.GenericClassProxyTestCase' Castle.DynamicProxy.Tests.GenericInterfaceProxyTestCase' Castle.DynamicProxy.Tests.MixinTestCase
Cyclic Dependency,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests.BugsReported,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: Castle.DynamicProxy.Tests.BugsReported' Castle.DynamicProxy.Tests,Castle.DynamicProxy.Tests.BugsReported.ConstraintViolationInDebuggerTestCase' Castle.DynamicProxy.Tests.AccessLevelTestCase' Castle.DynamicProxy.Tests.FindPeVerify' Castle.DynamicProxy.Tests.BasicClassProxyTestCase' Castle.DynamicProxy.Tests.BasicInterfaceProxyTestCase' Castle.DynamicProxy.Tests.GenericClassProxyTestCase' Castle.DynamicProxy.Tests.GenericInterfaceProxyTestCase' Castle.DynamicProxy.Tests.MixinTestCase,Castle.DynamicProxy.Tests.BugsReported.ConstraintViolationInDebuggerTestCase' Castle.DynamicProxy.Tests.AccessLevelTestCase' Castle.DynamicProxy.Tests.FindPeVerify' Castle.DynamicProxy.Tests.BasicClassProxyTestCase' Castle.DynamicProxy.Tests.BasicInterfaceProxyTestCase' Castle.DynamicProxy.Tests.GenericClassProxyTestCase' Castle.DynamicProxy.Tests.GenericInterfaceProxyTestCase' Castle.DynamicProxy.Tests.MixinTestCase
Cyclic Dependency,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests.BugsReported,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: Castle.DynamicProxy.Tests.BugsReported' Castle.DynamicProxy.Tests' Castle.DynamicProxy.Tests.Classes' Castle.DynamicProxy.Tests,Castle.DynamicProxy.Tests.BugsReported.ConstraintViolationInDebuggerTestCase' Castle.DynamicProxy.Tests.AccessLevelTestCase' Castle.DynamicProxy.Tests.FindPeVerify' Castle.DynamicProxy.Tests.BasicClassProxyTestCase' Castle.DynamicProxy.Tests.BasicInterfaceProxyTestCase' Castle.DynamicProxy.Tests.GenericClassProxyTestCase' Castle.DynamicProxy.Tests.GenericInterfaceProxyTestCase' Castle.DynamicProxy.Tests.MixinTestCase' Castle.DynamicProxy.Tests.Classes.ClassWithIndexer' Castle.DynamicProxy.Tests.Classes.ClassWithExplicitInterface,Castle.DynamicProxy.Tests.BugsReported.ConstraintViolationInDebuggerTestCase' Castle.DynamicProxy.Tests.AccessLevelTestCase' Castle.DynamicProxy.Tests.FindPeVerify' Castle.DynamicProxy.Tests.BasicClassProxyTestCase' Castle.DynamicProxy.Tests.BasicInterfaceProxyTestCase' Castle.DynamicProxy.Tests.GenericClassProxyTestCase' Castle.DynamicProxy.Tests.GenericInterfaceProxyTestCase' Castle.DynamicProxy.Tests.MixinTestCase' Castle.DynamicProxy.Tests.Classes.ClassWithIndexer' Castle.DynamicProxy.Tests.Classes.ClassWithExplicitInterface
Unstable Dependency,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests.Classes,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): Castle.DynamicProxy.Tests,Castle.DynamicProxy.Tests.Classes.ISimpleInterface' Castle.DynamicProxy.Tests.Classes.IHasEvent' Castle.DynamicProxy.Tests.Classes.IHasProperty,Castle.DynamicProxy.Tests.Classes.ISimpleInterface' Castle.DynamicProxy.Tests.Classes.IHasEvent' Castle.DynamicProxy.Tests.Classes.IHasProperty
Unstable Dependency,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests.Interceptors,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): Castle.DynamicProxy.Tests,Castle.DynamicProxy.Tests.Interceptors.IBarFoo' Castle.DynamicProxy.Tests.Interceptors.RequiredAttribute,Castle.DynamicProxy.Tests.Interceptors.IBarFoo' Castle.DynamicProxy.Tests.Interceptors.RequiredAttribute
Unstable Dependency,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests.BugsReported,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): Castle.DynamicProxy.Tests,Castle.DynamicProxy.Tests.BugsReported.BasePEVerifyTestCase,Castle.DynamicProxy.Tests.BugsReported.BasePEVerifyTestCase
God Component,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 148,Castle.DynamicProxy.Tests.ExplicitInterfaceWithPropertyImplementation' Castle.DynamicProxy.Tests.User' Castle.DynamicProxy.Tests.IUserRepository' Castle.DynamicProxy.Tests.IHaveOnlySetter' Castle.DynamicProxy.Tests.HaveOnlySetter' Castle.DynamicProxy.Tests.Marker' Castle.DynamicProxy.Tests.__Protect' Castle.DynamicProxy.Tests.HasPropertyBar' Castle.DynamicProxy.Tests.IHasPropertyBar' Castle.DynamicProxy.Tests.IHasPropertyFoo' Castle.DynamicProxy.Tests.IHasProperty' Castle.DynamicProxy.Tests.IHasEvent' Castle.DynamicProxy.Tests.IHasEventFoo' Castle.DynamicProxy.Tests.IHasEventBar' Castle.DynamicProxy.Tests.ISimpleInterfaceWithProperty' Castle.DynamicProxy.Tests.SimpleClassWithProperty' Castle.DynamicProxy.Tests.Sealed' Castle.DynamicProxy.Tests.EmptyClass' Castle.DynamicProxy.Tests.IEmptyInterface' Castle.DynamicProxy.Tests.ProxyKind' Castle.DynamicProxy.Tests.IProxyTargetAccessorDerived' Castle.DynamicProxy.Tests.IWithEvents' Castle.DynamicProxy.Tests.IWithGuid' Castle.DynamicProxy.Tests.ComplexHolder' Castle.DynamicProxy.Tests.InternalClass' Castle.DynamicProxy.Tests.FindPeVerify' Castle.DynamicProxy.Tests.ResultModifierInterceptor' Castle.DynamicProxy.Tests.IdenticalOneVirtual' Castle.DynamicProxy.Tests.AssertInvocationInterceptor' Castle.DynamicProxy.Tests.XmlSerializationTestCase' Castle.DynamicProxy.Tests.ComInterfacesTests' Castle.DynamicProxy.Tests.CustomAttributesTestCase' Castle.DynamicProxy.Tests.ThrowingInterceptorException' Castle.DynamicProxy.Tests.ThrowingInterceptor' Castle.DynamicProxy.Tests.IRepository' Castle.DynamicProxy.Tests.AbstractClass' Castle.DynamicProxy.Tests.WithMixin' Castle.DynamicProxy.Tests.MyOwnClass' Castle.DynamicProxy.Tests.IHasMethod' Castle.DynamicProxy.Tests.IFooExtended' Castle.DynamicProxy.Tests.IBarFoo' Castle.DynamicProxy.Tests.GenericClass' Castle.DynamicProxy.Tests.IGenericInterface' Castle.DynamicProxy.Tests.TypeInterceptorSelector<TInterceptor>' Castle.DynamicProxy.Tests.AllInterceptorSelector' Castle.DynamicProxy.Tests.SimpleClass' Castle.DynamicProxy.Tests.ISimpleInterface' Castle.DynamicProxy.Tests.NoDefaultCtor' Castle.DynamicProxy.Tests.DefaultProtectedCtor' Castle.DynamicProxy.Tests.DefaultPrivateCtor' Castle.DynamicProxy.Tests.ISingleMethodInterface' Castle.DynamicProxy.Tests.ClassWithInterfaceMethodExplicitlyImplemented' Castle.DynamicProxy.Tests.MethodEquivalenceTestCase' Castle.DynamicProxy.Tests.ISomething' Castle.DynamicProxy.Tests.NoOpSomething' Castle.DynamicProxy.Tests.NewScope' Castle.DynamicProxy.Tests.GenericTestUtility' Castle.DynamicProxy.Tests.MyStruct' Castle.DynamicProxy.Tests.SkipCallingMethodInterceptorWithOutputParams' Castle.DynamicProxy.Tests.FakeWithEvents' Castle.DynamicProxy.Tests.ISpecialMulti' Castle.DynamicProxy.Tests.WithInternalMethod' Castle.DynamicProxy.Tests.IDoubleGeneric' Castle.DynamicProxy.Tests.IFoo' Castle.DynamicProxy.Tests.DoubleGenericImpl<One>' Castle.DynamicProxy.Tests.IComServiceProvider' Castle.DynamicProxy.Tests.IFactory2' Castle.DynamicProxy.Tests.SomeClassWithProtectedInternalAbstractClass' Castle.DynamicProxy.Tests.InternalClassWithInternalMembers' Castle.DynamicProxy.Tests.MakeVirtualCallFromCtor' Castle.DynamicProxy.Tests.IStore1' Castle.DynamicProxy.Tests.C' Castle.DynamicProxy.Tests.EventHandlerClass' Castle.DynamicProxy.Tests.IndirectDelegateHolder' Castle.DynamicProxy.Tests.ClassWithIndirectSelfReference' Castle.DynamicProxy.Tests.ClassWithDirectAndIndirectSelfReference' Castle.DynamicProxy.Tests.IMixedInterface' Castle.DynamicProxy.Tests.SerializableMixin' Castle.DynamicProxy.Tests.SerializableInterceptorSelector' Castle.DynamicProxy.Tests.GenerationHookTestCase' Castle.DynamicProxy.Tests.MethodsWithAttributesOnParametersTestCase' Castle.DynamicProxy.Tests.ClassWithAttributesOnMethodParameters' Castle.DynamicProxy.Tests.RequiredAttribute' Castle.DynamicProxy.Tests.IMyInterface' Castle.DynamicProxy.Tests.ChangeProxyTargetInterceptor' Castle.DynamicProxy.Tests.CanDefineAdditionalCustomAttributes' Castle.DynamicProxy.Tests.HasEventBar' Castle.DynamicProxy.Tests.ImplementedFooExtended' Castle.DynamicProxy.Tests.MultiGenericClass' Castle.DynamicProxy.Tests.IMultiGenericInterface' Castle.DynamicProxy.Tests.InvocationTypesCachingTestCase' Castle.DynamicProxy.Tests.NonVirtualMethodClass' Castle.DynamicProxy.Tests.IMyService' Castle.DynamicProxy.Tests.MyServiceImpl' Castle.DynamicProxy.Tests.FakeScope' Castle.DynamicProxy.Tests.InvocationTestCase' Castle.DynamicProxy.Tests.MyClass' Castle.DynamicProxy.Tests.PersistentProxyBuilderTestCase' Castle.DynamicProxy.Tests.ImplementsProxyTargetAccessor' Castle.DynamicProxy.Tests.ImplementsProxyTargetAccessorDerived' Castle.DynamicProxy.Tests.IMulti' Castle.DynamicProxy.Tests.MultiClass' Castle.DynamicProxy.Tests.SetOutputParameter' Castle.DynamicProxy.Tests.Foo' Castle.DynamicProxy.Tests.DelegateHolder' Castle.DynamicProxy.Tests.ClassWithAttributesTestCase' Castle.DynamicProxy.Tests.MyInterfaceImpl' Castle.DynamicProxy.Tests.EmptyHook' Castle.DynamicProxy.Tests.CrossAppDomainCaller' Castle.DynamicProxy.Tests.ProxyNothingHook' Castle.DynamicProxy.Tests.LogHook' Castle.DynamicProxy.Tests.MethodComparerTestCase' Castle.DynamicProxy.Tests.MethodFilterHook' Castle.DynamicProxy.Tests.AccessLevelTestCase' Castle.DynamicProxy.Tests.BasePEVerifyTestCase' Castle.DynamicProxy.Tests.ExplicitInterfaceTestCase' Castle.DynamicProxy.Tests.BasicInterfaceProxyWithoutTargetTestCase' Castle.DynamicProxy.Tests.DictionarySerializationTestCase' Castle.DynamicProxy.Tests.InheritedInterfacesTestCase,Castle.DynamicProxy.Tests.AccessLevelTestCase' Castle.DynamicProxy.Tests.InternalClass' Castle.DynamicProxy.Tests.FindPeVerify' Castle.DynamicProxy.Tests.BasePEVerifyTestCase' Castle.DynamicProxy.Tests.BasicClassProxyTestCase' Castle.DynamicProxy.Tests.ResultModifierInterceptor' Castle.DynamicProxy.Tests.BasicInterfaceProxyTestCase' Castle.DynamicProxy.Tests.IdenticalOneVirtual' Castle.DynamicProxy.Tests.ClassWithAttributesTestCase' Castle.DynamicProxy.Tests.GenerationHookTestCase' Castle.DynamicProxy.Tests.LogHook' Castle.DynamicProxy.Tests.GenericClassProxyTestCase' Castle.DynamicProxy.Tests.GenericInterfaceProxyTestCase' Castle.DynamicProxy.Tests.MethodsWithAttributesOnParametersTestCase' Castle.DynamicProxy.Tests.ClassWithAttributesOnMethodParameters' Castle.DynamicProxy.Tests.RequiredAttribute' Castle.DynamicProxy.Tests.MixinTestCase' Castle.DynamicProxy.Tests.AssertInvocationInterceptor' Castle.DynamicProxy.Tests.IMyInterface' Castle.DynamicProxy.Tests.MyInterfaceImpl' Castle.DynamicProxy.Tests.XmlSerializationTestCase' Castle.DynamicProxy.Tests.ChangeProxyTargetInterceptor' Castle.DynamicProxy.Tests.ComInterfacesTests' Castle.DynamicProxy.Tests.ExplicitInterfaceTestCase' Castle.DynamicProxy.Tests.ExplicitInterfaceWithPropertyImplementation' Castle.DynamicProxy.Tests.CustomAttributesTestCase' Castle.DynamicProxy.Tests.BaseTestCaseTestCase' Castle.DynamicProxy.Tests.BasicInterfaceProxyWithoutTargetTestCase' Castle.DynamicProxy.Tests.ThrowingInterceptorException' Castle.DynamicProxy.Tests.ThrowingInterceptor' Castle.DynamicProxy.Tests.BugsReportedTestCase' Castle.DynamicProxy.Tests.IRepository' Castle.DynamicProxy.Tests.User' Castle.DynamicProxy.Tests.IUserRepository' Castle.DynamicProxy.Tests.AbstractClass' Castle.DynamicProxy.Tests.IHaveOnlySetter' Castle.DynamicProxy.Tests.HaveOnlySetter' Castle.DynamicProxy.Tests.Marker' Castle.DynamicProxy.Tests.WithMixin' Castle.DynamicProxy.Tests.CacheKeyTestCase' Castle.DynamicProxy.Tests.CanDefineAdditionalCustomAttributes' Castle.DynamicProxy.Tests.__Protect' Castle.DynamicProxy.Tests.ClassEmitterTestCase' Castle.DynamicProxy.Tests.ClassProxyConstructorsTestCase' Castle.DynamicProxy.Tests.MyOwnClass' Castle.DynamicProxy.Tests.GenericMethodsProxyTestCase' Castle.DynamicProxy.Tests.DictionarySerializationTestCase' Castle.DynamicProxy.Tests.InheritedInterfacesTestCase' Castle.DynamicProxy.Tests.HasPropertyBar' Castle.DynamicProxy.Tests.IHasPropertyBar' Castle.DynamicProxy.Tests.IHasPropertyFoo' Castle.DynamicProxy.Tests.IHasProperty' Castle.DynamicProxy.Tests.IHasEvent' Castle.DynamicProxy.Tests.IHasEventFoo' Castle.DynamicProxy.Tests.IHasEventBar' Castle.DynamicProxy.Tests.HasEventBar' Castle.DynamicProxy.Tests.IHasMethod' Castle.DynamicProxy.Tests.IFooExtended' Castle.DynamicProxy.Tests.IBarFoo' Castle.DynamicProxy.Tests.ImplementedFooExtended' Castle.DynamicProxy.Tests.InterceptorSelectorTestCase' Castle.DynamicProxy.Tests.MultiGenericClass' Castle.DynamicProxy.Tests.IMultiGenericInterface' Castle.DynamicProxy.Tests.GenericClass' Castle.DynamicProxy.Tests.IGenericInterface' Castle.DynamicProxy.Tests.ISimpleInterfaceWithProperty' Castle.DynamicProxy.Tests.SimpleClassWithProperty' Castle.DynamicProxy.Tests.TypeInterceptorSelector<TInterceptor>' Castle.DynamicProxy.Tests.AllInterceptorSelector' Castle.DynamicProxy.Tests.SimpleClass' Castle.DynamicProxy.Tests.ISimpleInterface' Castle.DynamicProxy.Tests.InterfaceProxyBaseTypeTestCase' Castle.DynamicProxy.Tests.Sealed' Castle.DynamicProxy.Tests.NoDefaultCtor' Castle.DynamicProxy.Tests.DefaultProtectedCtor' Castle.DynamicProxy.Tests.DefaultPrivateCtor' Castle.DynamicProxy.Tests.InterfaceProxyWithTargetInterfaceTestCase' Castle.DynamicProxy.Tests.InvocationMethodInvocationTargetTestCase' Castle.DynamicProxy.Tests.InvocationTypesCachingTestCase' Castle.DynamicProxy.Tests.LoggingTestCase' Castle.DynamicProxy.Tests.EmptyClass' Castle.DynamicProxy.Tests.IEmptyInterface' Castle.DynamicProxy.Tests.ISingleMethodInterface' Castle.DynamicProxy.Tests.NonVirtualMethodClass' Castle.DynamicProxy.Tests.ClassWithInterfaceMethodExplicitlyImplemented' Castle.DynamicProxy.Tests.EmptyHook' Castle.DynamicProxy.Tests.CollectingLogger' Castle.DynamicProxy.Tests.MethodEquivalenceTestCase' Castle.DynamicProxy.Tests.IMyService' Castle.DynamicProxy.Tests.ISomething' Castle.DynamicProxy.Tests.NoOpSomething' Castle.DynamicProxy.Tests.MyServiceImpl' Castle.DynamicProxy.Tests.MixinDataTestCase' Castle.DynamicProxy.Tests.CrossAppDomainCaller' Castle.DynamicProxy.Tests.MethodComparerTestCase' Castle.DynamicProxy.Tests.FakeScope' Castle.DynamicProxy.Tests.NewScope' Castle.DynamicProxy.Tests.GenericTestUtility' Castle.DynamicProxy.Tests.InvocationTestCase' Castle.DynamicProxy.Tests.MethodFinderTestCase' Castle.DynamicProxy.Tests.ModuleScopeTestCase' Castle.DynamicProxy.Tests.NonProxiedMethodsNoTargetTestCase' Castle.DynamicProxy.Tests.NonProxiedMixinMethodsTestCase' Castle.DynamicProxy.Tests.NonProxiedTargetMethodsTestCase' Castle.DynamicProxy.Tests.OrderOfInterfacePrecedenceTestCase' Castle.DynamicProxy.Tests.OutRefParams' Castle.DynamicProxy.Tests.MyStruct' Castle.DynamicProxy.Tests.MyClass' Castle.DynamicProxy.Tests.PersistentProxyBuilderTestCase' Castle.DynamicProxy.Tests.ProxyGenerationOptionsTestCase' Castle.DynamicProxy.Tests.ProxyKind' Castle.DynamicProxy.Tests.ProxyNothingHook' Castle.DynamicProxy.Tests.ProxyTargetAccessorHandlingTestCase' Castle.DynamicProxy.Tests.ImplementsProxyTargetAccessor' Castle.DynamicProxy.Tests.IProxyTargetAccessorDerived' Castle.DynamicProxy.Tests.ImplementsProxyTargetAccessorDerived' Castle.DynamicProxy.Tests.RhinoMocksTestCase' Castle.DynamicProxy.Tests.SkipCallingMethodInterceptorWithOutputParams' Castle.DynamicProxy.Tests.IWithEvents' Castle.DynamicProxy.Tests.FakeWithEvents' Castle.DynamicProxy.Tests.IMulti' Castle.DynamicProxy.Tests.MultiClass' Castle.DynamicProxy.Tests.ISpecialMulti' Castle.DynamicProxy.Tests.IWithGuid' Castle.DynamicProxy.Tests.SetOutputParameter' Castle.DynamicProxy.Tests.WithInternalMethod' Castle.DynamicProxy.Tests.IDoubleGeneric' Castle.DynamicProxy.Tests.IFoo' Castle.DynamicProxy.Tests.DoubleGenericImpl<One>' Castle.DynamicProxy.Tests.IComServiceProvider' Castle.DynamicProxy.Tests.IFactory2' Castle.DynamicProxy.Tests.SomeClassWithProtectedInternalAbstractClass' Castle.DynamicProxy.Tests.InternalClassWithInternalMembers' Castle.DynamicProxy.Tests.MakeVirtualCallFromCtor' Castle.DynamicProxy.Tests.Foo' Castle.DynamicProxy.Tests.IStore1' Castle.DynamicProxy.Tests.SerializableClassTestCase' Castle.DynamicProxy.Tests.C' Castle.DynamicProxy.Tests.EventHandlerClass' Castle.DynamicProxy.Tests.DelegateHolder' Castle.DynamicProxy.Tests.IndirectDelegateHolder' Castle.DynamicProxy.Tests.ClassWithIndirectSelfReference' Castle.DynamicProxy.Tests.ClassWithDirectAndIndirectSelfReference' Castle.DynamicProxy.Tests.MethodFilterHook' Castle.DynamicProxy.Tests.IMixedInterface' Castle.DynamicProxy.Tests.SerializableMixin' Castle.DynamicProxy.Tests.SerializableInterceptorSelector' Castle.DynamicProxy.Tests.ComplexHolder
God Component,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests.Classes,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 35,Castle.DynamicProxy.Tests.Classes.NonInheritableAttribute' Castle.DynamicProxy.Tests.Classes.ClassToSerialize' Castle.DynamicProxy.Tests.Classes.ClassWithIndexer' Castle.DynamicProxy.Tests.Classes.InernalClass' Castle.DynamicProxy.Tests.Classes.ClassWith_Smart_Attribute' Castle.DynamicProxy.Tests.Classes.SmartAttribute,Castle.DynamicProxy.Tests.Classes.AttributedClass' Castle.DynamicProxy.Tests.Classes.AttributedClass2' Castle.DynamicProxy.Tests.Classes.NonInheritableAttribute' Castle.DynamicProxy.Tests.Classes.ComplexNonInheritableAttribute' Castle.DynamicProxy.Tests.Classes.ClassToSerialize' Castle.DynamicProxy.Tests.Classes.ClassWithIndexer' Castle.DynamicProxy.Tests.Classes.DiffAccessLevelOnProperties' Castle.DynamicProxy.Tests.Classes.NonPublicConstructorClass' Castle.DynamicProxy.Tests.Classes.NonPublicMethodsClass' Castle.DynamicProxy.Tests.Classes.ServiceClass' Castle.DynamicProxy.Tests.Classes.InernalClass' Castle.DynamicProxy.Tests.Classes.ServiceClass2' Castle.DynamicProxy.Tests.Classes.ExtendedServiceClass' Castle.DynamicProxy.Tests.Classes.ClassWithExplicitInterface' Castle.DynamicProxy.Tests.Classes.ClassWithInterface' Castle.DynamicProxy.Tests.Classes.ClassWithVirtualInterface' Castle.DynamicProxy.Tests.Classes.ClassWith_Smart_Attribute' Castle.DynamicProxy.Tests.Classes.SmartAttribute' Castle.DynamicProxy.Tests.Classes.VirtuallyImplementsInterfaceWithEvent' Castle.DynamicProxy.Tests.Classes.ClassCallingVirtualMethodFromCtor' Castle.DynamicProxy.Tests.Classes.ClassWithCharRetType' Castle.DynamicProxy.Tests.Classes.ClassWithConstructors' Castle.DynamicProxy.Tests.Classes.ClassWithVariousConstructors' Castle.DynamicProxy.Tests.Classes.Constructor' Castle.DynamicProxy.Tests.Classes.ClassWithInternalDefaultConstructor' Castle.DynamicProxy.Tests.Classes.ClassWithProtectedDefaultConstructor' Castle.DynamicProxy.Tests.Classes.MySerializableClass' Castle.DynamicProxy.Tests.Classes.MySerializableClass2' Castle.DynamicProxy.Tests.Classes.ProtectedInternalConstructorClass' Castle.DynamicProxy.Tests.Classes.SimpleClass' Castle.DynamicProxy.Tests.Classes.ClassOverridingEqualsAndGetHashCode' Castle.DynamicProxy.Tests.Classes.ClassWithDefaultConstructor' Castle.DynamicProxy.Tests.Classes.IMarkerInterface' Castle.DynamicProxy.Tests.Classes.ClassWithMarkerInterface' Castle.DynamicProxy.Tests.Classes.VirtuallyImplementsInterfaceWithProperty
Feature Concentration,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests.Classes,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [AttributedClass' NonInheritableAttribute]' [AttributedClass2' ComplexNonInheritableAttribute]' [ClassToSerialize]' [ClassWithIndexer]' [DiffAccessLevelOnProperties]' [NonPublicConstructorClass]' [NonPublicMethodsClass]' [ServiceClass' ExtendedServiceClass]' [InernalClass]' [ServiceClass2]' [ClassWithExplicitInterface]' [ClassWithInterface]' [ClassWithVirtualInterface]' [ClassWith_Smart_Attribute' SmartAttribute]' [VirtuallyImplementsInterfaceWithEvent]' [ClassCallingVirtualMethodFromCtor]' [ClassWithCharRetType]' [ClassWithConstructors]' [ClassWithVariousConstructors' Constructor]' [ClassWithInternalDefaultConstructor]' [ClassWithProtectedDefaultConstructor]' [MySerializableClass' MySerializableClass2]' [ProtectedInternalConstructorClass]' [SimpleClass]' [ClassOverridingEqualsAndGetHashCode]' [ClassWithDefaultConstructor]' [IMarkerInterface]' [ClassWithMarkerInterface]' [VirtuallyImplementsInterfaceWithProperty]. LCC (Lack of Component Cohesion) = 0.83,Castle.DynamicProxy.Tests.Classes.AttributedClass2' Castle.DynamicProxy.Tests.Classes.ComplexNonInheritableAttribute' Castle.DynamicProxy.Tests.Classes.ServiceClass' Castle.DynamicProxy.Tests.Classes.ExtendedServiceClass' Castle.DynamicProxy.Tests.Classes.ClassWith_Smart_Attribute' Castle.DynamicProxy.Tests.Classes.SmartAttribute' Castle.DynamicProxy.Tests.Classes.ClassWithVariousConstructors' Castle.DynamicProxy.Tests.Classes.Constructor' Castle.DynamicProxy.Tests.Classes.MySerializableClass' Castle.DynamicProxy.Tests.Classes.MySerializableClass2' Castle.DynamicProxy.Tests.Classes.ClassToSerialize' Castle.DynamicProxy.Tests.Classes.ClassWithIndexer' Castle.DynamicProxy.Tests.Classes.DiffAccessLevelOnProperties' Castle.DynamicProxy.Tests.Classes.NonPublicConstructorClass' Castle.DynamicProxy.Tests.Classes.NonPublicMethodsClass' Castle.DynamicProxy.Tests.Classes.InernalClass' Castle.DynamicProxy.Tests.Classes.ServiceClass2' Castle.DynamicProxy.Tests.Classes.ClassWithExplicitInterface' Castle.DynamicProxy.Tests.Classes.ClassWithInterface' Castle.DynamicProxy.Tests.Classes.ClassWithVirtualInterface' Castle.DynamicProxy.Tests.Classes.VirtuallyImplementsInterfaceWithEvent' Castle.DynamicProxy.Tests.Classes.ClassCallingVirtualMethodFromCtor' Castle.DynamicProxy.Tests.Classes.ClassWithCharRetType' Castle.DynamicProxy.Tests.Classes.ClassWithConstructors' Castle.DynamicProxy.Tests.Classes.ClassWithInternalDefaultConstructor' Castle.DynamicProxy.Tests.Classes.ClassWithProtectedDefaultConstructor' Castle.DynamicProxy.Tests.Classes.ProtectedInternalConstructorClass' Castle.DynamicProxy.Tests.Classes.SimpleClass' Castle.DynamicProxy.Tests.Classes.ClassOverridingEqualsAndGetHashCode' Castle.DynamicProxy.Tests.Classes.ClassWithDefaultConstructor' Castle.DynamicProxy.Tests.Classes.IMarkerInterface' Castle.DynamicProxy.Tests.Classes.ClassWithMarkerInterface' Castle.DynamicProxy.Tests.Classes.VirtuallyImplementsInterfaceWithProperty,Castle.DynamicProxy.Tests.Classes.AttributedClass' Castle.DynamicProxy.Tests.Classes.AttributedClass2' Castle.DynamicProxy.Tests.Classes.NonInheritableAttribute' Castle.DynamicProxy.Tests.Classes.ComplexNonInheritableAttribute' Castle.DynamicProxy.Tests.Classes.ClassToSerialize' Castle.DynamicProxy.Tests.Classes.ClassWithIndexer' Castle.DynamicProxy.Tests.Classes.DiffAccessLevelOnProperties' Castle.DynamicProxy.Tests.Classes.NonPublicConstructorClass' Castle.DynamicProxy.Tests.Classes.NonPublicMethodsClass' Castle.DynamicProxy.Tests.Classes.ServiceClass' Castle.DynamicProxy.Tests.Classes.InernalClass' Castle.DynamicProxy.Tests.Classes.ServiceClass2' Castle.DynamicProxy.Tests.Classes.ExtendedServiceClass' Castle.DynamicProxy.Tests.Classes.ClassWithExplicitInterface' Castle.DynamicProxy.Tests.Classes.ClassWithInterface' Castle.DynamicProxy.Tests.Classes.ClassWithVirtualInterface' Castle.DynamicProxy.Tests.Classes.ClassWith_Smart_Attribute' Castle.DynamicProxy.Tests.Classes.SmartAttribute' Castle.DynamicProxy.Tests.Classes.VirtuallyImplementsInterfaceWithEvent' Castle.DynamicProxy.Tests.Classes.ClassCallingVirtualMethodFromCtor' Castle.DynamicProxy.Tests.Classes.ClassWithCharRetType' Castle.DynamicProxy.Tests.Classes.ClassWithConstructors' Castle.DynamicProxy.Tests.Classes.ClassWithVariousConstructors' Castle.DynamicProxy.Tests.Classes.Constructor' Castle.DynamicProxy.Tests.Classes.ClassWithInternalDefaultConstructor' Castle.DynamicProxy.Tests.Classes.ClassWithProtectedDefaultConstructor' Castle.DynamicProxy.Tests.Classes.MySerializableClass' Castle.DynamicProxy.Tests.Classes.MySerializableClass2' Castle.DynamicProxy.Tests.Classes.ProtectedInternalConstructorClass' Castle.DynamicProxy.Tests.Classes.SimpleClass' Castle.DynamicProxy.Tests.Classes.ClassOverridingEqualsAndGetHashCode' Castle.DynamicProxy.Tests.Classes.ClassWithDefaultConstructor' Castle.DynamicProxy.Tests.Classes.IMarkerInterface' Castle.DynamicProxy.Tests.Classes.ClassWithMarkerInterface' Castle.DynamicProxy.Tests.Classes.VirtuallyImplementsInterfaceWithProperty
Feature Concentration,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests.GenClasses,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ClassWithGenArgs<T>]' [ClassWithGenArgs<T'Z>' SubClassWithGenArgs<T'Z'Y>]' [ClassWithIndexer<TKey'TVal>]' [GenClassNameClash<T'Z>]' [GenClassWithConstraints<T>]' [GenClassWithGenMethods<T>]' [GenClassWithGenMethodsConstrained<T>]' [GenClassWithGenReturn<T'Z>]' [OnlyGenMethodsClass]' [GenClassWithExplicitImpl' GenClassWithExplicitImpl<T>' IChangeTracking]' [ClassWithMethodWithArrayOfListOfT]' [ClassWithMethodWithGenericOfGenericOfT]' [ClassWithMethodWithReturnArrayOfListOfT]' [MethodWithArgumentBeingArrayOfGenericTypeOfT]. LCC (Lack of Component Cohesion) = 0.82,Castle.DynamicProxy.Tests.GenClasses.ClassWithGenArgs<T'Z>' Castle.DynamicProxy.Tests.GenClasses.SubClassWithGenArgs<T'Z'Y>' Castle.DynamicProxy.Tests.GenClasses.ClassWithGenArgs<T>' Castle.DynamicProxy.Tests.GenClasses.ClassWithIndexer<TKey'TVal>' Castle.DynamicProxy.Tests.GenClasses.GenClassNameClash<T'Z>' Castle.DynamicProxy.Tests.GenClasses.GenClassWithConstraints<T>' Castle.DynamicProxy.Tests.GenClasses.GenClassWithGenMethods<T>' Castle.DynamicProxy.Tests.GenClasses.GenClassWithGenMethodsConstrained<T>' Castle.DynamicProxy.Tests.GenClasses.GenClassWithGenReturn<T'Z>' Castle.DynamicProxy.Tests.GenClasses.OnlyGenMethodsClass' Castle.DynamicProxy.Tests.GenClasses.ClassWithMethodWithArrayOfListOfT' Castle.DynamicProxy.Tests.GenClasses.ClassWithMethodWithGenericOfGenericOfT' Castle.DynamicProxy.Tests.GenClasses.ClassWithMethodWithReturnArrayOfListOfT' Castle.DynamicProxy.Tests.GenClasses.MethodWithArgumentBeingArrayOfGenericTypeOfT,Castle.DynamicProxy.Tests.GenClasses.ClassWithGenArgs<T>' Castle.DynamicProxy.Tests.GenClasses.ClassWithGenArgs<T'Z>' Castle.DynamicProxy.Tests.GenClasses.SubClassWithGenArgs<T'Z'Y>' Castle.DynamicProxy.Tests.GenClasses.ClassWithIndexer<TKey'TVal>' Castle.DynamicProxy.Tests.GenClasses.GenClassNameClash<T'Z>' Castle.DynamicProxy.Tests.GenClasses.GenClassWithConstraints<T>' Castle.DynamicProxy.Tests.GenClasses.GenClassWithGenMethods<T>' Castle.DynamicProxy.Tests.GenClasses.GenClassWithGenMethodsConstrained<T>' Castle.DynamicProxy.Tests.GenClasses.GenClassWithGenReturn<T'Z>' Castle.DynamicProxy.Tests.GenClasses.OnlyGenMethodsClass' Castle.DynamicProxy.Tests.GenClasses.GenClassWithExplicitImpl' Castle.DynamicProxy.Tests.GenClasses.GenClassWithExplicitImpl<T>' Castle.DynamicProxy.Tests.GenClasses.IChangeTracking' Castle.DynamicProxy.Tests.GenClasses.ClassWithMethodWithArrayOfListOfT' Castle.DynamicProxy.Tests.GenClasses.ClassWithMethodWithGenericOfGenericOfT' Castle.DynamicProxy.Tests.GenClasses.ClassWithMethodWithReturnArrayOfListOfT' Castle.DynamicProxy.Tests.GenClasses.MethodWithArgumentBeingArrayOfGenericTypeOfT
Feature Concentration,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests.GenInterfaces,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [GenInterface' GenInterfaceImpl<T>]' [GenInterfaceWithGenericTypes' GenInterfaceWithGenericTypesImpl' Proxy' Find2Invo<T>' Find1Invo' Find1InvoA' Find3Invo<T>]' [GenInterfaceWithGenMethods' GenInterfaceWithGenMethodsImpl<T>]' [GenInterfaceWithGenMethodsAndGenReturn' GenInterfaceWithGenMethodsAndGenReturnImpl<T>]' [GenInterfaceWithMethodWithNestedGenericParameter]' [GenInterfaceWithMethodWithNestedGenericParameterByRef]' [GenInterfaceWithMethodWithNestedGenericReturn]' [GenericMethodWhereOneGenParamInheritsTheOther]' [GenInterfaceHierarchy<T>' IGenInterfaceHierarchySpecialization' IGenInterfaceHierarchyBase]' [GenExplicitImplementation<T>' InterfaceWithExplicitImpl]' [GenInterfaceWithGenArray<T>' IGenInterfaceWithGenArray]' [OnlyGenMethodsInterface' OnlyGenMethodsInterfaceImpl]. LCC (Lack of Component Cohesion) = 0.46,Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceHierarchy<T>' Castle.DynamicProxy.Tests.GenInterfaces.IGenInterfaceHierarchySpecialization' Castle.DynamicProxy.Tests.GenInterfaces.IGenInterfaceHierarchyBase' Castle.DynamicProxy.Tests.GenInterfaces.GenInterface' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceImpl<T>' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithGenMethods' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithGenMethodsImpl<T>' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithGenMethodsAndGenReturn' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithGenMethodsAndGenReturnImpl<T>' Castle.DynamicProxy.Tests.GenInterfaces.GenExplicitImplementation<T>' Castle.DynamicProxy.Tests.GenInterfaces.InterfaceWithExplicitImpl' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithGenArray<T>' Castle.DynamicProxy.Tests.GenInterfaces.IGenInterfaceWithGenArray' Castle.DynamicProxy.Tests.GenInterfaces.OnlyGenMethodsInterface' Castle.DynamicProxy.Tests.GenInterfaces.OnlyGenMethodsInterfaceImpl' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithMethodWithNestedGenericParameter' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithMethodWithNestedGenericParameterByRef' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithMethodWithNestedGenericReturn' Castle.DynamicProxy.Tests.GenInterfaces.GenericMethodWhereOneGenParamInheritsTheOther,Castle.DynamicProxy.Tests.GenInterfaces.GenInterface' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceImpl<T>' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithGenericTypes' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithGenericTypesImpl' Castle.DynamicProxy.Tests.GenInterfaces.Proxy' Castle.DynamicProxy.Tests.GenInterfaces.Find2Invo<T>' Castle.DynamicProxy.Tests.GenInterfaces.Find1Invo' Castle.DynamicProxy.Tests.GenInterfaces.Find1InvoA' Castle.DynamicProxy.Tests.GenInterfaces.Find3Invo<T>' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithGenMethods' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithGenMethodsImpl<T>' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithGenMethodsAndGenReturn' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithGenMethodsAndGenReturnImpl<T>' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithMethodWithNestedGenericParameter' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithMethodWithNestedGenericParameterByRef' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithMethodWithNestedGenericReturn' Castle.DynamicProxy.Tests.GenInterfaces.GenericMethodWhereOneGenParamInheritsTheOther' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceHierarchy<T>' Castle.DynamicProxy.Tests.GenInterfaces.IGenInterfaceHierarchySpecialization' Castle.DynamicProxy.Tests.GenInterfaces.IGenInterfaceHierarchyBase' Castle.DynamicProxy.Tests.GenInterfaces.GenExplicitImplementation<T>' Castle.DynamicProxy.Tests.GenInterfaces.InterfaceWithExplicitImpl' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithGenArray<T>' Castle.DynamicProxy.Tests.GenInterfaces.IGenInterfaceWithGenArray' Castle.DynamicProxy.Tests.GenInterfaces.OnlyGenMethodsInterface' Castle.DynamicProxy.Tests.GenInterfaces.OnlyGenMethodsInterfaceImpl
Feature Concentration,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests.Interceptors,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [LogInvocationInterceptor]' [AssertCanChangeTargetInterceptor]' [AssertCannotChangeTargetInterceptor]' [CallCountingInterceptor]' [AddTwoInterceptor]' [DoNothingInterceptor]' [ChangeTargetInterceptor]' [KeepDataInterceptor]' [ProceedOnTypeInterceptor]' [RequiredParamInterceptor]' [SetReturnValueInterceptor]' [WithCallbackInterceptor]. LCC (Lack of Component Cohesion) = 1,Castle.DynamicProxy.Tests.Interceptors.AssertCanChangeTargetInterceptor' Castle.DynamicProxy.Tests.Interceptors.AssertCannotChangeTargetInterceptor' Castle.DynamicProxy.Tests.Interceptors.CallCountingInterceptor' Castle.DynamicProxy.Tests.Interceptors.AddTwoInterceptor' Castle.DynamicProxy.Tests.Interceptors.DoNothingInterceptor' Castle.DynamicProxy.Tests.Interceptors.ChangeTargetInterceptor' Castle.DynamicProxy.Tests.Interceptors.KeepDataInterceptor' Castle.DynamicProxy.Tests.Interceptors.ProceedOnTypeInterceptor' Castle.DynamicProxy.Tests.Interceptors.RequiredParamInterceptor' Castle.DynamicProxy.Tests.Interceptors.SetReturnValueInterceptor' Castle.DynamicProxy.Tests.Interceptors.WithCallbackInterceptor,Castle.DynamicProxy.Tests.Interceptors.LogInvocationInterceptor' Castle.DynamicProxy.Tests.Interceptors.AssertCanChangeTargetInterceptor' Castle.DynamicProxy.Tests.Interceptors.AssertCannotChangeTargetInterceptor' Castle.DynamicProxy.Tests.Interceptors.CallCountingInterceptor' Castle.DynamicProxy.Tests.Interceptors.AddTwoInterceptor' Castle.DynamicProxy.Tests.Interceptors.DoNothingInterceptor' Castle.DynamicProxy.Tests.Interceptors.ChangeTargetInterceptor' Castle.DynamicProxy.Tests.Interceptors.KeepDataInterceptor' Castle.DynamicProxy.Tests.Interceptors.ProceedOnTypeInterceptor' Castle.DynamicProxy.Tests.Interceptors.RequiredParamInterceptor' Castle.DynamicProxy.Tests.Interceptors.SetReturnValueInterceptor' Castle.DynamicProxy.Tests.Interceptors.WithCallbackInterceptor
Feature Concentration,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests.InterClasses,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [IExtendedService' IService' ServiceImpl' AlwaysThrowsServiceImpl]' [IInterfaceWithGenericMethodWithDependentConstraint' IGenericInterfaceWithGenericMethodWithDependentConstraint]' [ClassWithIndexer' InterfaceWithIndexer]' [ClassWithMultiDimentionalArray' IClassWithMultiDimentionalArray]' [IMyInterface2' MyInterfaceImpl' MyInterfaceImplX' MyAttribute]' [IService2' Service2]. LCC (Lack of Component Cohesion) = 0.38,Castle.DynamicProxy.Tests.InterClasses.IMyInterface2' Castle.DynamicProxy.Tests.InterClasses.MyInterfaceImpl' Castle.DynamicProxy.Tests.InterClasses.MyInterfaceImplX' Castle.DynamicProxy.Tests.InterClasses.MyAttribute' Castle.DynamicProxy.Tests.InterClasses.IInterfaceWithGenericMethodWithDependentConstraint' Castle.DynamicProxy.Tests.InterClasses.IGenericInterfaceWithGenericMethodWithDependentConstraint' Castle.DynamicProxy.Tests.InterClasses.ClassWithIndexer' Castle.DynamicProxy.Tests.InterClasses.InterfaceWithIndexer' Castle.DynamicProxy.Tests.InterClasses.ClassWithMultiDimentionalArray' Castle.DynamicProxy.Tests.InterClasses.IClassWithMultiDimentionalArray' Castle.DynamicProxy.Tests.InterClasses.IService2' Castle.DynamicProxy.Tests.InterClasses.Service2,Castle.DynamicProxy.Tests.InterClasses.IExtendedService' Castle.DynamicProxy.Tests.InterClasses.IService' Castle.DynamicProxy.Tests.InterClasses.ServiceImpl' Castle.DynamicProxy.Tests.InterClasses.IInterfaceWithGenericMethodWithDependentConstraint' Castle.DynamicProxy.Tests.InterClasses.IGenericInterfaceWithGenericMethodWithDependentConstraint' Castle.DynamicProxy.Tests.InterClasses.AlwaysThrowsServiceImpl' Castle.DynamicProxy.Tests.InterClasses.ClassWithIndexer' Castle.DynamicProxy.Tests.InterClasses.ClassWithMultiDimentionalArray' Castle.DynamicProxy.Tests.InterClasses.IClassWithMultiDimentionalArray' Castle.DynamicProxy.Tests.InterClasses.IMyInterface2' Castle.DynamicProxy.Tests.InterClasses.MyInterfaceImpl' Castle.DynamicProxy.Tests.InterClasses.MyInterfaceImplX' Castle.DynamicProxy.Tests.InterClasses.MyAttribute' Castle.DynamicProxy.Tests.InterClasses.InterfaceWithIndexer' Castle.DynamicProxy.Tests.InterClasses.IService2' Castle.DynamicProxy.Tests.InterClasses.Service2
Feature Concentration,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests.BugsReported,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ICamera' ICameraServiceBase' ICameraService' CameraService]' [ConstraintViolationInDebuggerTestCase' PresentationHost' ServiceAgent' IPresentationHost' IServiceAgent' IPresentation]' [IMyInterface' MyClass]' [DynProxy88' IBase' Inherited' ISub1' ISub2' MyFoo]. LCC (Lack of Component Cohesion) = 0.22,Castle.DynamicProxy.Tests.BugsReported.IMyInterface' Castle.DynamicProxy.Tests.BugsReported.MyClass,Castle.DynamicProxy.Tests.BugsReported.ICamera' Castle.DynamicProxy.Tests.BugsReported.ICameraServiceBase' Castle.DynamicProxy.Tests.BugsReported.ICameraService' Castle.DynamicProxy.Tests.BugsReported.CameraService' Castle.DynamicProxy.Tests.BugsReported.ConstraintViolationInDebuggerTestCase' Castle.DynamicProxy.Tests.BugsReported.PresentationHost' Castle.DynamicProxy.Tests.BugsReported.ServiceAgent' Castle.DynamicProxy.Tests.BugsReported.IPresentationHost' Castle.DynamicProxy.Tests.BugsReported.IServiceAgent' Castle.DynamicProxy.Tests.BugsReported.IPresentation' Castle.DynamicProxy.Tests.BugsReported.IMyInterface' Castle.DynamicProxy.Tests.BugsReported.MyClass' Castle.DynamicProxy.Tests.BugsReported.DynProxy88' Castle.DynamicProxy.Tests.BugsReported.IBase' Castle.DynamicProxy.Tests.BugsReported.Inherited' Castle.DynamicProxy.Tests.BugsReported.ISub1' Castle.DynamicProxy.Tests.BugsReported.ISub2' Castle.DynamicProxy.Tests.BugsReported.MyFoo
Feature Concentration,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests.Interfaces,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [IDecimalOutParam]' [IIdenticalTwo]' [IIdenticalOne]' [IEmpty' Empty]' [IFooWithIntPtr]' [IFooWithOutIntPtr]' [IGenericWithRefOut' GenericWithRefOut]' [INullable]' [IOne' One' OneTwo' ITwo' Two]' [IWithRefOut' WithRefOut]. LCC (Lack of Component Cohesion) = 0.59,Castle.DynamicProxy.Tests.Interfaces.IEmpty' Castle.DynamicProxy.Tests.Interfaces.Empty' Castle.DynamicProxy.Tests.Interfaces.IGenericWithRefOut' Castle.DynamicProxy.Tests.Interfaces.GenericWithRefOut' Castle.DynamicProxy.Tests.Interfaces.IWithRefOut' Castle.DynamicProxy.Tests.Interfaces.WithRefOut' Castle.DynamicProxy.Tests.Interfaces.IDecimalOutParam' Castle.DynamicProxy.Tests.Interfaces.IIdenticalTwo' Castle.DynamicProxy.Tests.Interfaces.IIdenticalOne' Castle.DynamicProxy.Tests.Interfaces.IFooWithIntPtr' Castle.DynamicProxy.Tests.Interfaces.IFooWithOutIntPtr' Castle.DynamicProxy.Tests.Interfaces.INullable,Castle.DynamicProxy.Tests.Interfaces.IDecimalOutParam' Castle.DynamicProxy.Tests.Interfaces.IIdenticalTwo' Castle.DynamicProxy.Tests.Interfaces.IIdenticalOne' Castle.DynamicProxy.Tests.Interfaces.IEmpty' Castle.DynamicProxy.Tests.Interfaces.Empty' Castle.DynamicProxy.Tests.Interfaces.IFooWithIntPtr' Castle.DynamicProxy.Tests.Interfaces.IFooWithOutIntPtr' Castle.DynamicProxy.Tests.Interfaces.IGenericWithRefOut' Castle.DynamicProxy.Tests.Interfaces.GenericWithRefOut' Castle.DynamicProxy.Tests.Interfaces.INullable' Castle.DynamicProxy.Tests.Interfaces.IOne' Castle.DynamicProxy.Tests.Interfaces.ITwo' Castle.DynamicProxy.Tests.Interfaces.IWithRefOut' Castle.DynamicProxy.Tests.Interfaces.WithRefOut' Castle.DynamicProxy.Tests.Interfaces.One' Castle.DynamicProxy.Tests.Interfaces.OneTwo' Castle.DynamicProxy.Tests.Interfaces.Two
Feature Concentration,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests.Mixins,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ClassImplementingIDerivedSimpleMixin' IDerivedSimpleMixin' ISimpleMixin' SimpleMixin' ClassImplementingISimpleMixin' OtherMixinImplementingISimpleMixin]' [IFirst' ISecond' IThird' ComplexMixin]' [IOtherMixin' OtherMixin]. LCC (Lack of Component Cohesion) = 0.25,Castle.DynamicProxy.Tests.Mixins.IFirst' Castle.DynamicProxy.Tests.Mixins.ISecond' Castle.DynamicProxy.Tests.Mixins.IThird' Castle.DynamicProxy.Tests.Mixins.ComplexMixin' Castle.DynamicProxy.Tests.Mixins.IOtherMixin' Castle.DynamicProxy.Tests.Mixins.OtherMixin,Castle.DynamicProxy.Tests.Mixins.ClassImplementingIDerivedSimpleMixin' Castle.DynamicProxy.Tests.Mixins.ClassImplementingISimpleMixin' Castle.DynamicProxy.Tests.Mixins.IFirst' Castle.DynamicProxy.Tests.Mixins.ISecond' Castle.DynamicProxy.Tests.Mixins.IThird' Castle.DynamicProxy.Tests.Mixins.ComplexMixin' Castle.DynamicProxy.Tests.Mixins.IDerivedSimpleMixin' Castle.DynamicProxy.Tests.Mixins.IOtherMixin' Castle.DynamicProxy.Tests.Mixins.OtherMixin' Castle.DynamicProxy.Tests.Mixins.OtherMixinImplementingISimpleMixin' Castle.DynamicProxy.Tests.Mixins.ISimpleMixin' Castle.DynamicProxy.Tests.Mixins.SimpleMixin
Scattered Functionality,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests,The tool detected the smell in this component because a set of two or more components realizes the same high-level architectural concern. Following components realize the same concern: Castle.DynamicProxy' Castle.DynamicProxy.Tests.Classes,Castle.DynamicProxy.ProxyGenerator' Castle.DynamicProxy.Tests.Classes.NonPublicConstructorClass' Castle.DynamicProxy.Tests.Classes.ProtectedInternalConstructorClass' Castle.DynamicProxy.Tests.Classes.NonPublicMethodsClass' Castle.DynamicProxy.Tests.Classes.ServiceClass' Castle.DynamicProxy.Tests.Classes.DiffAccessLevelOnProperties' Castle.DynamicProxy.Tests.Classes.ExtendedServiceClass' Castle.DynamicProxy.Tests.Classes.ClassWithCharRetType' Castle.DynamicProxy.Tests.Classes.ClassWithVirtualInterface' Castle.DynamicProxy.Tests.Classes.ClassWithExplicitInterface,Castle.DynamicProxy.ProxyGenerator' Castle.DynamicProxy.Tests.Classes.NonPublicConstructorClass' Castle.DynamicProxy.Tests.Classes.ProtectedInternalConstructorClass' Castle.DynamicProxy.Tests.Classes.NonPublicMethodsClass' Castle.DynamicProxy.Tests.Classes.ServiceClass' Castle.DynamicProxy.Tests.Classes.DiffAccessLevelOnProperties' Castle.DynamicProxy.Tests.Classes.ExtendedServiceClass' Castle.DynamicProxy.Tests.Classes.ClassWithCharRetType' Castle.DynamicProxy.Tests.Classes.ClassWithVirtualInterface' Castle.DynamicProxy.Tests.Classes.ClassWithExplicitInterface
Scattered Functionality,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests,The tool detected the smell in this component because a set of two or more components realizes the same high-level architectural concern. Following components realize the same concern: Castle.DynamicProxy' Castle.DynamicProxy.Tests.InterClasses,Castle.DynamicProxy.ProxyGenerator' Castle.DynamicProxy.Tests.InterClasses.ClassWithMultiDimentionalArray' Castle.DynamicProxy.Tests.InterClasses.IService' Castle.DynamicProxy.Tests.InterClasses.IService2' Castle.DynamicProxy.Tests.InterClasses.IInterfaceWithGenericMethodWithDependentConstraint' Castle.DynamicProxy.Tests.InterClasses.IGenericInterfaceWithGenericMethodWithDependentConstraint,Castle.DynamicProxy.ProxyGenerator' Castle.DynamicProxy.Tests.InterClasses.ClassWithMultiDimentionalArray' Castle.DynamicProxy.Tests.InterClasses.IService' Castle.DynamicProxy.Tests.InterClasses.IService2' Castle.DynamicProxy.Tests.InterClasses.IInterfaceWithGenericMethodWithDependentConstraint' Castle.DynamicProxy.Tests.InterClasses.IGenericInterfaceWithGenericMethodWithDependentConstraint
Scattered Functionality,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests,The tool detected the smell in this component because a set of two or more components realizes the same high-level architectural concern. Following components realize the same concern: Castle.DynamicProxy' Castle.DynamicProxy.Tests.Interfaces,Castle.DynamicProxy.ProxyGenerator' Castle.DynamicProxy.Tests.Interfaces.IIdenticalOne' Castle.DynamicProxy.Tests.Interfaces.IIdenticalTwo' Castle.DynamicProxy.Tests.Interfaces.IOne' Castle.DynamicProxy.Tests.Interfaces.ITwo' Castle.DynamicProxy.ProxyGenerationOptions' Castle.DynamicProxy.Tests.Interfaces.IWithRefOut' Castle.DynamicProxy.Tests.Interfaces.IFooWithIntPtr' Castle.DynamicProxy.Tests.Interfaces.IDecimalOutParam' Castle.DynamicProxy.Tests.Interfaces.IFooWithOutIntPtr,Castle.DynamicProxy.ProxyGenerator' Castle.DynamicProxy.Tests.Interfaces.IIdenticalOne' Castle.DynamicProxy.Tests.Interfaces.IIdenticalTwo' Castle.DynamicProxy.Tests.Interfaces.IOne' Castle.DynamicProxy.Tests.Interfaces.ITwo' Castle.DynamicProxy.ProxyGenerationOptions' Castle.DynamicProxy.Tests.Interfaces.IWithRefOut' Castle.DynamicProxy.Tests.Interfaces.IFooWithIntPtr' Castle.DynamicProxy.Tests.Interfaces.IDecimalOutParam' Castle.DynamicProxy.Tests.Interfaces.IFooWithOutIntPtr
Scattered Functionality,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests,The tool detected the smell in this component because a set of two or more components realizes the same high-level architectural concern. Following components realize the same concern: Castle.DynamicProxy' Castle.DynamicProxy.Tests.GenClasses,Castle.DynamicProxy.ProxyGenerator' Castle.DynamicProxy.Tests.GenClasses.OnlyGenMethodsClass,Castle.DynamicProxy.ProxyGenerator' Castle.DynamicProxy.Tests.GenClasses.OnlyGenMethodsClass
Scattered Functionality,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests,The tool detected the smell in this component because a set of two or more components realizes the same high-level architectural concern. Following components realize the same concern: Castle.DynamicProxy' Castle.DynamicProxy.Tests.GenInterfaces,Castle.DynamicProxy.ProxyGenerator' Castle.DynamicProxy.Tests.GenInterfaces.GenInterface' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithMethodWithNestedGenericParameter' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithMethodWithNestedGenericParameterByRef' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithMethodWithNestedGenericReturn' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithGenMethods' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithGenMethodsAndGenReturn' Castle.DynamicProxy.Tests.GenInterfaces.IGenInterfaceWithGenArray' Castle.DynamicProxy.Tests.GenInterfaces.IGenInterfaceHierarchyBase' Castle.DynamicProxy.Tests.GenInterfaces.IGenInterfaceHierarchySpecialization' Castle.DynamicProxy.Tests.GenInterfaces.InterfaceWithExplicitImpl' Castle.DynamicProxy.Tests.GenInterfaces.OnlyGenMethodsInterface,Castle.DynamicProxy.ProxyGenerator' Castle.DynamicProxy.Tests.GenInterfaces.GenInterface' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithMethodWithNestedGenericParameter' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithMethodWithNestedGenericParameterByRef' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithMethodWithNestedGenericReturn' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithGenMethods' Castle.DynamicProxy.Tests.GenInterfaces.GenInterfaceWithGenMethodsAndGenReturn' Castle.DynamicProxy.Tests.GenInterfaces.IGenInterfaceWithGenArray' Castle.DynamicProxy.Tests.GenInterfaces.IGenInterfaceHierarchyBase' Castle.DynamicProxy.Tests.GenInterfaces.IGenInterfaceHierarchySpecialization' Castle.DynamicProxy.Tests.GenInterfaces.InterfaceWithExplicitImpl' Castle.DynamicProxy.Tests.GenInterfaces.OnlyGenMethodsInterface
Scattered Functionality,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests,The tool detected the smell in this component because a set of two or more components realizes the same high-level architectural concern. Following components realize the same concern: Castle.DynamicProxy' Castle.DynamicProxy.Tests.Mixins,Castle.DynamicProxy.ProxyGenerationOptions' Castle.DynamicProxy.ProxyGenerator' Castle.DynamicProxy.Tests.Mixins.ISimpleMixin' Castle.DynamicProxy.Tests.Mixins.IOtherMixin' Castle.DynamicProxy.Tests.Mixins.IThird' Castle.DynamicProxy.Tests.Mixins.ISecond' Castle.DynamicProxy.Tests.Mixins.IFirst' Castle.DynamicProxy.Tests.Mixins.IDerivedSimpleMixin,Castle.DynamicProxy.ProxyGenerationOptions' Castle.DynamicProxy.ProxyGenerator' Castle.DynamicProxy.Tests.Mixins.ISimpleMixin' Castle.DynamicProxy.Tests.Mixins.IOtherMixin' Castle.DynamicProxy.Tests.Mixins.IThird' Castle.DynamicProxy.Tests.Mixins.ISecond' Castle.DynamicProxy.Tests.Mixins.IFirst' Castle.DynamicProxy.Tests.Mixins.IDerivedSimpleMixin
Scattered Functionality,Castle.DynamicProxy.Tests-vs2008,Castle.DynamicProxy.Tests,The tool detected the smell in this component because a set of two or more components realizes the same high-level architectural concern. Following components realize the same concern: Castle.DynamicProxy.Generators.Emitters' Castle.DynamicProxy.Generators.Emitters.CodeBuilders,Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter' Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder,Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter' Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder
