Implementation smell,Namespace,Class,File,Method,Description
Long Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The method has 105 lines of code.
Long Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The method has 172 lines of code.
Long Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The method has 107 lines of code.
Long Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_data,The method has 106 lines of code.
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,Cyclomatic complexity of the method is 26
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,copy_,Cyclomatic complexity of the method is 9
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,update_param,Cyclomatic complexity of the method is 13
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,Compress,Cyclomatic complexity of the method is 8
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,Cyclomatic complexity of the method is 22
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,set_tab,Cyclomatic complexity of the method is 34
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_setup,Cyclomatic complexity of the method is 14
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_user,Cyclomatic complexity of the method is 11
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_replace,Cyclomatic complexity of the method is 10
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,Cyclomatic complexity of the method is 23
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,Cyclomatic complexity of the method is 15
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GENERATORS,Cyclomatic complexity of the method is 16
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_EXCEPTIONS,Cyclomatic complexity of the method is 11
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_ROLES,Cyclomatic complexity of the method is 11
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,Cyclomatic complexity of the method is 21
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_VIEWS,Cyclomatic complexity of the method is 23
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,Cyclomatic complexity of the method is 25
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,Cyclomatic complexity of the method is 53
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,Cyclomatic complexity of the method is 13
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,Cyclomatic complexity of the method is 30
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,Cyclomatic complexity of the method is 58
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,Cyclomatic complexity of the method is 19
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,Cyclomatic complexity of the method is 13
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_INDEXES,Cyclomatic complexity of the method is 18
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,execute_com,Cyclomatic complexity of the method is 10
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_data,Cyclomatic complexity of the method is 47
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_load,Cyclomatic complexity of the method is 9
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,data_count,Cyclomatic complexity of the method is 37
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,PREPARE_DATA,Cyclomatic complexity of the method is 42
Complex Method,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,COPY_DATA,Cyclomatic complexity of the method is 10
Long Parameter List,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The method has 7 parameters.
Long Parameter List,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The method has 6 parameters.
Long Parameter List,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The method has 6 parameters.
Long Statement,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The length of the statement  "		FIELD_SOURCE = get_field_type (Convert.ToInt32 (FTYPE)' Convert.ToInt32 (FLEN)' Convert.ToInt32 (FSCALE)' Convert.ToInt32 (FSUBTYPE)' Convert.ToInt32 (FSEGMENTSIZE)' Convert.ToInt32 (FPRECISION)); " is 196.
Long Statement,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,update_param,The length of the statement  "				using (FbCommand fcon = new FbCommand ("select RF.RDB$FIELD_NAME " + "  from RDB$RELATION_FIELDS RF " + "  where RF.RDB$RELATION_NAME = 'PARAMS' and " + "        RF.RDB$FIELD_NAME in ('PARAM_VALUE_DEF') "' fb' ft)) { " is 216.
Long Statement,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,update_param,The length of the statement  "							using (FbCommand fcon_p = new FbCommand ("update PARAMS P " + " set P.PARAM_VALUE_DEF = @a " + " where (P.MNEMO = 'SYSDBAPASS')"' fb' ft)) { " is 140.
Long Statement,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,Compress,The length of the statement  "		if ((File.GetAttributes (fileToCompress.FullName) & FileAttributes.Hidden) != FileAttributes.Hidden & fileToCompress.Extension != ".gz") { " is 138.
Long Statement,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,Compress,The length of the statement  "					Console.WriteLine ("Compressed {0} from {1} to {2} bytes."' fileToCompress.Name' fileToCompress.Length.ToString ()' compressedFileStream.Length.ToString ()); " is 157.
Long Statement,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,button3_Click,The length of the statement  "	if (MessageBox.Show ("Завершить работу мастера?"' "Выход"' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == DialogResult.Yes) { " is 131.
Long Statement,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The length of the statement  "				MessageBox.Show ("Файла не существует\nпроверте правильность пути"' "Файл не найден"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 130.
Long Statement,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The length of the statement  "													dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true); " is 151.
Long Statement,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The length of the statement  "														dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true); " is 153.
Long Statement,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The length of the statement  "														dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true); " is 166.
Long Statement,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The length of the statement  "													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true); " is 153.
Long Statement,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The length of the statement  "													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true); " is 166.
Long Statement,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The length of the statement  "							dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n"; " is 162.
Long Statement,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The length of the statement  "											fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ()); " is 188.
Long Statement,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The length of the statement  "										string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ()); " is 168.
Long Statement,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The length of the statement  "										string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ()); " is 168.
Long Statement,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The length of the statement  "											//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_"); " is 147.
Empty Catch Block,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_user,The method has an empty catch block.
Empty Catch Block,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,fb_add,The method has an empty catch block.
Empty Catch Block,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,fb_up,The method has an empty catch block.
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 261) {  	FIELD_SOURCE = "BLOB SUB_TYPE " + FSUBTYPE.ToString () + " SEGMENT SIZE " + FSEGMENTSIZE.ToString ();  }  else if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 14) {  	FIELD_SOURCE = "CHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 37) {  	FIELD_SOURCE = "VARCHAR(" + FCHARLEN + ")";  }  else if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 12) {  	FIELD_SOURCE = "DATE";  }  else if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 13) {  	FIELD_SOURCE = "TIME";  }  else if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 35) {  	FIELD_SOURCE = "TIMESTAMP";  }  else if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 7) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "SMALLINT";  }  else if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  	if (FSUBTYPE == 2) {  		FIELD_SOURCE = "DECIMAL";  	}  	else {  		FIELD_SOURCE = "NUMERIC";  	}  	if (FPRECISION > 0) {  		FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  	}  }  else  	FIELD_SOURCE = "SMALLINT";  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  	if (FSUBTYPE == 2) {  		FIELD_SOURCE = "DECIMAL";  	}  	else {  		FIELD_SOURCE = "NUMERIC";  	}  	if (FPRECISION > 0) {  		FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = FIELD_SOURCE + "(4'" + (FSCALE * -1) + ")";  	}  }  else  	FIELD_SOURCE = "SMALLINT";  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FSUBTYPE == 2) {  	FIELD_SOURCE = "DECIMAL";  }  else {  	FIELD_SOURCE = "NUMERIC";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 8) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = "INTEGER";  	}  }  else if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  	if (FSUBTYPE == 2) {  		FIELD_SOURCE = "DECIMAL";  	}  	else {  		FIELD_SOURCE = "NUMERIC";  	}  	if (FPRECISION > 0) {  		FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  	}  	else  		FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  }  else {  	FIELD_SOURCE = "INTEGER";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  	if (FSUBTYPE == 2) {  		FIELD_SOURCE = "DECIMAL";  	}  	else {  		FIELD_SOURCE = "NUMERIC";  	}  	if (FPRECISION > 0) {  		FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  	}  	else  		FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  }  else {  	FIELD_SOURCE = "INTEGER";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FSUBTYPE == 2) {  	FIELD_SOURCE = "DECIMAL";  }  else {  	FIELD_SOURCE = "NUMERIC";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 27) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  		}  	}  	else  		FIELD_SOURCE = "DOUBLE PRECISION";  }  else if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  	if (FSUBTYPE == 2) {  		FIELD_SOURCE = "DECIMAL";  	}  	else {  		FIELD_SOURCE = "NUMERIC";  	}  	if (FPRECISION > 0) {  		FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  }  else  	FIELD_SOURCE = "DOUBLE PRECISION";  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  	if (FSUBTYPE == 2) {  		FIELD_SOURCE = "DECIMAL";  	}  	else {  		FIELD_SOURCE = "NUMERIC";  	}  	if (FPRECISION > 0) {  		FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = FIELD_SOURCE + "(9'" + (FSCALE * -1) + ")";  	}  }  else  	FIELD_SOURCE = "DOUBLE PRECISION";  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FSUBTYPE == 2) {  	FIELD_SOURCE = "DECIMAL";  }  else {  	FIELD_SOURCE = "NUMERIC";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 16) {  	if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  		if (FSUBTYPE == 2) {  			FIELD_SOURCE = "DECIMAL";  		}  		else {  			FIELD_SOURCE = "NUMERIC";  		}  		if (FPRECISION > 0) {  			FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  		}  		else {  			FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  		}  	}  	else {  		FIELD_SOURCE = "BIGINT";  	}  }  else if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  	if (FSUBTYPE == 2) {  		FIELD_SOURCE = "DECIMAL";  	}  	else {  		FIELD_SOURCE = "NUMERIC";  	}  	if (FPRECISION > 0) {  		FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  	}  }  else {  	FIELD_SOURCE = "BIGINT";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if ((FSCALE < 0) || (FSUBTYPE == 1) || (FSUBTYPE == 2)) {  	if (FSUBTYPE == 2) {  		FIELD_SOURCE = "DECIMAL";  	}  	else {  		FIELD_SOURCE = "NUMERIC";  	}  	if (FPRECISION > 0) {  		FIELD_SOURCE = FIELD_SOURCE + "(" + FPRECISION + "'" + (FSCALE * -1) + ")";  	}  	else {  		FIELD_SOURCE = FIELD_SOURCE + "(18'" + (FSCALE * -1) + ")";  	}  }  else {  	FIELD_SOURCE = "BIGINT";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FSUBTYPE == 2) {  	FIELD_SOURCE = "DECIMAL";  }  else {  	FIELD_SOURCE = "NUMERIC";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 10) {  	FIELD_SOURCE = "FLOAT";  }  else if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,get_field_type,The following statement contains a magic number: if (FTYPE == 40) {  	FIELD_SOURCE = "CSTRING(" + FLEN.ToString () + ")";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,copy_,The following statement contains a magic number: try {  	byte[] buffer = new byte[4096 * 4096];  	// 1MB buffer  	bool cancelFlag = false;  	using (FileStream source = new FileStream (from_' FileMode.Open' FileAccess.Read)) {  		long fileLength = source.Length;  		using (FileStream dest = new FileStream (to_' FileMode.Create' FileAccess.Write)) {  			long totalBytes = 0;  			int currentBlockSize = 0;  			while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  				totalBytes += currentBlockSize;  				double persentage = totalBytes / (double)fileLength * 100.0;  				dest.Write (buffer' 0' currentBlockSize);  				cancelFlag = false;  				p_cur = (int)((float)totalBytes / (float)fileLength * 100);  				p_text = "Заменяем файл " + p_cur + @"%";  				if (totalBytes >= fileLength) {  					cancelFlag = true;  				}  				if (cancelFlag == true) {  					// Delete dest file here  					dest.Flush ();  					dest.Close ();  					source.Flush ();  					source.Close ();  					break;  				}  			}  		}  	}  }  catch (Exception ex) {  	sb.AppendLine ("error COPY");  	sb.AppendLine (ex.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,copy_,The following statement contains a magic number: try {  	byte[] buffer = new byte[4096 * 4096];  	// 1MB buffer  	bool cancelFlag = false;  	using (FileStream source = new FileStream (from_' FileMode.Open' FileAccess.Read)) {  		long fileLength = source.Length;  		using (FileStream dest = new FileStream (to_' FileMode.Create' FileAccess.Write)) {  			long totalBytes = 0;  			int currentBlockSize = 0;  			while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  				totalBytes += currentBlockSize;  				double persentage = totalBytes / (double)fileLength * 100.0;  				dest.Write (buffer' 0' currentBlockSize);  				cancelFlag = false;  				p_cur = (int)((float)totalBytes / (float)fileLength * 100);  				p_text = "Заменяем файл " + p_cur + @"%";  				if (totalBytes >= fileLength) {  					cancelFlag = true;  				}  				if (cancelFlag == true) {  					// Delete dest file here  					dest.Flush ();  					dest.Close ();  					source.Flush ();  					source.Close ();  					break;  				}  			}  		}  	}  }  catch (Exception ex) {  	sb.AppendLine ("error COPY");  	sb.AppendLine (ex.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,copy_,The following statement contains a magic number: try {  	byte[] buffer = new byte[4096 * 4096];  	// 1MB buffer  	bool cancelFlag = false;  	using (FileStream source = new FileStream (from_' FileMode.Open' FileAccess.Read)) {  		long fileLength = source.Length;  		using (FileStream dest = new FileStream (to_' FileMode.Create' FileAccess.Write)) {  			long totalBytes = 0;  			int currentBlockSize = 0;  			while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  				totalBytes += currentBlockSize;  				double persentage = totalBytes / (double)fileLength * 100.0;  				dest.Write (buffer' 0' currentBlockSize);  				cancelFlag = false;  				p_cur = (int)((float)totalBytes / (float)fileLength * 100);  				p_text = "Заменяем файл " + p_cur + @"%";  				if (totalBytes >= fileLength) {  					cancelFlag = true;  				}  				if (cancelFlag == true) {  					// Delete dest file here  					dest.Flush ();  					dest.Close ();  					source.Flush ();  					source.Close ();  					break;  				}  			}  		}  	}  }  catch (Exception ex) {  	sb.AppendLine ("error COPY");  	sb.AppendLine (ex.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,copy_,The following statement contains a magic number: try {  	byte[] buffer = new byte[4096 * 4096];  	// 1MB buffer  	bool cancelFlag = false;  	using (FileStream source = new FileStream (from_' FileMode.Open' FileAccess.Read)) {  		long fileLength = source.Length;  		using (FileStream dest = new FileStream (to_' FileMode.Create' FileAccess.Write)) {  			long totalBytes = 0;  			int currentBlockSize = 0;  			while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  				totalBytes += currentBlockSize;  				double persentage = totalBytes / (double)fileLength * 100.0;  				dest.Write (buffer' 0' currentBlockSize);  				cancelFlag = false;  				p_cur = (int)((float)totalBytes / (float)fileLength * 100);  				p_text = "Заменяем файл " + p_cur + @"%";  				if (totalBytes >= fileLength) {  					cancelFlag = true;  				}  				if (cancelFlag == true) {  					// Delete dest file here  					dest.Flush ();  					dest.Close ();  					source.Flush ();  					source.Close ();  					break;  				}  			}  		}  	}  }  catch (Exception ex) {  	sb.AppendLine ("error COPY");  	sb.AppendLine (ex.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,copy_,The following statement contains a magic number: using (FileStream source = new FileStream (from_' FileMode.Open' FileAccess.Read)) {  	long fileLength = source.Length;  	using (FileStream dest = new FileStream (to_' FileMode.Create' FileAccess.Write)) {  		long totalBytes = 0;  		int currentBlockSize = 0;  		while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  			totalBytes += currentBlockSize;  			double persentage = totalBytes / (double)fileLength * 100.0;  			dest.Write (buffer' 0' currentBlockSize);  			cancelFlag = false;  			p_cur = (int)((float)totalBytes / (float)fileLength * 100);  			p_text = "Заменяем файл " + p_cur + @"%";  			if (totalBytes >= fileLength) {  				cancelFlag = true;  			}  			if (cancelFlag == true) {  				// Delete dest file here  				dest.Flush ();  				dest.Close ();  				source.Flush ();  				source.Close ();  				break;  			}  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,copy_,The following statement contains a magic number: using (FileStream source = new FileStream (from_' FileMode.Open' FileAccess.Read)) {  	long fileLength = source.Length;  	using (FileStream dest = new FileStream (to_' FileMode.Create' FileAccess.Write)) {  		long totalBytes = 0;  		int currentBlockSize = 0;  		while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  			totalBytes += currentBlockSize;  			double persentage = totalBytes / (double)fileLength * 100.0;  			dest.Write (buffer' 0' currentBlockSize);  			cancelFlag = false;  			p_cur = (int)((float)totalBytes / (float)fileLength * 100);  			p_text = "Заменяем файл " + p_cur + @"%";  			if (totalBytes >= fileLength) {  				cancelFlag = true;  			}  			if (cancelFlag == true) {  				// Delete dest file here  				dest.Flush ();  				dest.Close ();  				source.Flush ();  				source.Close ();  				break;  			}  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,copy_,The following statement contains a magic number: using (FileStream dest = new FileStream (to_' FileMode.Create' FileAccess.Write)) {  	long totalBytes = 0;  	int currentBlockSize = 0;  	while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  		totalBytes += currentBlockSize;  		double persentage = totalBytes / (double)fileLength * 100.0;  		dest.Write (buffer' 0' currentBlockSize);  		cancelFlag = false;  		p_cur = (int)((float)totalBytes / (float)fileLength * 100);  		p_text = "Заменяем файл " + p_cur + @"%";  		if (totalBytes >= fileLength) {  			cancelFlag = true;  		}  		if (cancelFlag == true) {  			// Delete dest file here  			dest.Flush ();  			dest.Close ();  			source.Flush ();  			source.Close ();  			break;  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,copy_,The following statement contains a magic number: using (FileStream dest = new FileStream (to_' FileMode.Create' FileAccess.Write)) {  	long totalBytes = 0;  	int currentBlockSize = 0;  	while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  		totalBytes += currentBlockSize;  		double persentage = totalBytes / (double)fileLength * 100.0;  		dest.Write (buffer' 0' currentBlockSize);  		cancelFlag = false;  		p_cur = (int)((float)totalBytes / (float)fileLength * 100);  		p_text = "Заменяем файл " + p_cur + @"%";  		if (totalBytes >= fileLength) {  			cancelFlag = true;  		}  		if (cancelFlag == true) {  			// Delete dest file here  			dest.Flush ();  			dest.Close ();  			source.Flush ();  			source.Close ();  			break;  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,copy_,The following statement contains a magic number: while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  	totalBytes += currentBlockSize;  	double persentage = totalBytes / (double)fileLength * 100.0;  	dest.Write (buffer' 0' currentBlockSize);  	cancelFlag = false;  	p_cur = (int)((float)totalBytes / (float)fileLength * 100);  	p_text = "Заменяем файл " + p_cur + @"%";  	if (totalBytes >= fileLength) {  		cancelFlag = true;  	}  	if (cancelFlag == true) {  		// Delete dest file here  		dest.Flush ();  		dest.Close ();  		source.Flush ();  		source.Close ();  		break;  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,copy_,The following statement contains a magic number: while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  	totalBytes += currentBlockSize;  	double persentage = totalBytes / (double)fileLength * 100.0;  	dest.Write (buffer' 0' currentBlockSize);  	cancelFlag = false;  	p_cur = (int)((float)totalBytes / (float)fileLength * 100);  	p_text = "Заменяем файл " + p_cur + @"%";  	if (totalBytes >= fileLength) {  		cancelFlag = true;  	}  	if (cancelFlag == true) {  		// Delete dest file here  		dest.Flush ();  		dest.Close ();  		source.Flush ();  		source.Close ();  		break;  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,copy_,The following statement contains a magic number: p_cur = (int)((float)totalBytes / (float)fileLength * 100);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,update_param,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_new.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand ("select RF.RDB$FIELD_NAME " + "  from RDB$RELATION_FIELDS RF " + "  where RF.RDB$RELATION_NAME = 'PARAMS' and " + "        RF.RDB$FIELD_NAME in ('PARAM_VALUE_DEF') "' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						using (FbCommand fcon_p = new FbCommand ("update PARAMS P " + " set P.PARAM_VALUE_DEF = @a " + " where (P.MNEMO = 'SYSDBAPASS')"' fb' ft)) {  							fcon_p.Parameters.Add ("@a"' FbDbType.VarChar' 8);  							fcon_p.Parameters [0].Value = pass_;  							fcon_p.ExecuteNonQuery ();  							fcon_p.Dispose ();  						}  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("*****Ошибка при смене параметра пароль SYSDBA*****");  		sb.AppendLine (ex.Message);  		sb.AppendLine ("**********");  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,update_param,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand ("select RF.RDB$FIELD_NAME " + "  from RDB$RELATION_FIELDS RF " + "  where RF.RDB$RELATION_NAME = 'PARAMS' and " + "        RF.RDB$FIELD_NAME in ('PARAM_VALUE_DEF') "' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					using (FbCommand fcon_p = new FbCommand ("update PARAMS P " + " set P.PARAM_VALUE_DEF = @a " + " where (P.MNEMO = 'SYSDBAPASS')"' fb' ft)) {  						fcon_p.Parameters.Add ("@a"' FbDbType.VarChar' 8);  						fcon_p.Parameters [0].Value = pass_;  						fcon_p.ExecuteNonQuery ();  						fcon_p.Dispose ();  					}  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("*****Ошибка при смене параметра пароль SYSDBA*****");  	sb.AppendLine (ex.Message);  	sb.AppendLine ("**********");  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,update_param,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand ("select RF.RDB$FIELD_NAME " + "  from RDB$RELATION_FIELDS RF " + "  where RF.RDB$RELATION_NAME = 'PARAMS' and " + "        RF.RDB$FIELD_NAME in ('PARAM_VALUE_DEF') "' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				using (FbCommand fcon_p = new FbCommand ("update PARAMS P " + " set P.PARAM_VALUE_DEF = @a " + " where (P.MNEMO = 'SYSDBAPASS')"' fb' ft)) {  					fcon_p.Parameters.Add ("@a"' FbDbType.VarChar' 8);  					fcon_p.Parameters [0].Value = pass_;  					fcon_p.ExecuteNonQuery ();  					fcon_p.Dispose ();  				}  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,update_param,The following statement contains a magic number: using (FbCommand fcon = new FbCommand ("select RF.RDB$FIELD_NAME " + "  from RDB$RELATION_FIELDS RF " + "  where RF.RDB$RELATION_NAME = 'PARAMS' and " + "        RF.RDB$FIELD_NAME in ('PARAM_VALUE_DEF') "' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			using (FbCommand fcon_p = new FbCommand ("update PARAMS P " + " set P.PARAM_VALUE_DEF = @a " + " where (P.MNEMO = 'SYSDBAPASS')"' fb' ft)) {  				fcon_p.Parameters.Add ("@a"' FbDbType.VarChar' 8);  				fcon_p.Parameters [0].Value = pass_;  				fcon_p.ExecuteNonQuery ();  				fcon_p.Dispose ();  			}  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,update_param,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		using (FbCommand fcon_p = new FbCommand ("update PARAMS P " + " set P.PARAM_VALUE_DEF = @a " + " where (P.MNEMO = 'SYSDBAPASS')"' fb' ft)) {  			fcon_p.Parameters.Add ("@a"' FbDbType.VarChar' 8);  			fcon_p.Parameters [0].Value = pass_;  			fcon_p.ExecuteNonQuery ();  			fcon_p.Dispose ();  		}  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,update_param,The following statement contains a magic number: while (fr.Read ()) {  	using (FbCommand fcon_p = new FbCommand ("update PARAMS P " + " set P.PARAM_VALUE_DEF = @a " + " where (P.MNEMO = 'SYSDBAPASS')"' fb' ft)) {  		fcon_p.Parameters.Add ("@a"' FbDbType.VarChar' 8);  		fcon_p.Parameters [0].Value = pass_;  		fcon_p.ExecuteNonQuery ();  		fcon_p.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,update_param,The following statement contains a magic number: using (FbCommand fcon_p = new FbCommand ("update PARAMS P " + " set P.PARAM_VALUE_DEF = @a " + " where (P.MNEMO = 'SYSDBAPASS')"' fb' ft)) {  	fcon_p.Parameters.Add ("@a"' FbDbType.VarChar' 8);  	fcon_p.Parameters [0].Value = pass_;  	fcon_p.ExecuteNonQuery ();  	fcon_p.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,update_param,The following statement contains a magic number: fcon_p.Parameters.Add ("@a"' FbDbType.VarChar' 8);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: switch (i) {  case 3:  	if (this.is_convert.Checked) {  		if (!File.Exists (this.t_database.Text)) {  			is_ok = false;  			MessageBox.Show ("Файла не существует\nпроверте правильность пути"' "Файл не найден"' MessageBoxButtons.OK' MessageBoxIcon.Error);  		}  	}  	if (this.is_install.Checked && is_ok) {  		//проверим  		//есть ли установленный сервер  FB25  		is_ok = check_sysdba (this.t_sysdba.Text);  	}  	break;  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (is_ok) {  	set_tab (i);  	if (i == 3) {  		is_may_close = false;  		//теперь настройка содержания  		if (is_convert.Checked) {  			treeView1.Nodes ["Node3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  		}  		if (is_install.Checked) {  			treeView1.Nodes ["Node0"].ImageIndex = 1;  			treeView1.Nodes ["Node1"].ImageIndex = 1;  			treeView1.Nodes ["Node2"].ImageIndex = 1;  		}  		if (is_convert.Checked && is_install.Checked) {  			treeView1.Nodes ["Node4"].ImageIndex = 1;  		}  		this.treeView1.Refresh ();  		if (this.is_install.Checked) {  			//если нужно установить сервер FB25  			this.l_.Text = "Установка и деинсталляция сервера";  			Action a = new Action (run_setup);  			await Task.Run (a);  			//восстанавливаем системных пользователей  			if (this.is_new_sysdba.Checked) {  				//поставим новый пароль  				fb_up (this.t_sysdba_new.Text);  			}  			this.l_.Text = "Восстанавливаем системных пользователей";  			SetImage (2' "Node2");  			fb_add ("DBADMIN"' "cnhfiysq"' true' "");  			fb_add ("DBREPORT"' "uyjvbr"' true' "");  			fb_add ("REPLICAT"' "dctv"' true' "");  			fb_add ("GUEST"' "gbpltw"' true' "");  			SetImage (3' "Node2");  		}  		if (this.is_convert.Checked) {  			if (!Directory.Exists (temp_folder)) {  				Directory.CreateDirectory (temp_folder);  			}  			//копируем базу  			this.l_.Text = "Копируем базу локально";  			this.p_load.Visible = true;  			Sett.Default.database_original = this.t_database.Text;  			Sett.Default.database_tmp = this.t_database.Text;  			/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  			//если нужно конвертировать базу  			// Старая база  			fc_old.Database = Sett.Default.database_tmp;  			//база' которую нужно конвертировать                  			fc_old.Pooling = false;  			//пул соединения - отсутствует - для более быстрого освобождения базы  			fc_old.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_old.ClientLibrary = ".\\fbembed.dll";  			//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  			fc_old.UserID = "sysdba";  			//пользователь по умолчанию  			fc_old.Password = "masterkey";  			//Пароль можно не указывать  			// Новая база  			database_new = temp_folder + @"\tsql_2_5.gdb";  			fc_new.Database = database_new;  			fc_new.Pooling = false;  			//и вот здесь у нас настройки  			if (this.is_install.Checked) {  				//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  				fc_new.ServerType = FbServerType.Default;  				fc_new.DataSource = "localhost";  			}  			else {  				//иначе - встроенный сервер  				fc_new.ServerType = FbServerType.Embedded;  				//встроенный сервер  				fc_new.ClientLibrary = ".\\fbembed.dll";  			}  			//fc_new.ServerType = FbServerType.Embedded;  			//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  			fc_new.Charset = "win1251";  			//при создании новой базы кодировку желательно указывать  			fc_new.UserID = "dbadmin";  			fc_new.Password = "cnhfiysq";  			//create database  			try {  				FbConnection.CreateDatabase (fc_new.ConnectionString' true);  			}  			catch (FbException ex) {  				MessageBox.Show (ex.Message);  			}  			//теперь запускаем процесс анализа метаданных  			SetImage (2' "Node3_1");  			this.l_.Text = "Analyze database";  			this.p_load.Visible = true;  			Task t1 = run_ ();  			await t1;  			t1.Dispose ();  			SetImage (3' "Node3_1");  			this.p_load.Image = null;  			this.p_load.Visible = false;  			this.progressBar1.Visible = true;  			//создаем базу  			//Накатываем первую часть  			this.progressBar1.Maximum = 100;  			this.l_.Text = "Create data";  			//запустим таймер отображения  			this.timer1.Enabled = true;  			Task t2 = run2_ ();  			await t2;  			t2.Dispose ();  			//замена базы  			if (sb.Length <= 0) {  				//обновляем параметр  				update_param (this.t_sysdba_new.Text);  				if (is_replace.Checked) {  					this.progressBar1.Value = 0;  					//while(f.Attributes == FileAttributes.  					SetImage (2' "Node3_5");  					Action a_r = run_replace;  					await Task.Run (a_r);  					SetImage (3' "Node3_5");  				}  				//конец  				SetImage (3' "Node3");  			}  		}  		if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  			SetImage (2' "Node4");  			this.l_.Text = "Восстановление пользователей";  			Action a = run_user;  			await Task.Run (a);  			SetImage (3' "Node4");  		}  		this.timer1.Enabled = false;  		this.b_next.Enabled = true;  		is_may_close = true;  		this.b_next.PerformClick ();  	}  	else if (i == 5) {  		Application.Exit ();  	}  }  else {  	i--;  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (is_ok) {  	set_tab (i);  	if (i == 3) {  		is_may_close = false;  		//теперь настройка содержания  		if (is_convert.Checked) {  			treeView1.Nodes ["Node3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  		}  		if (is_install.Checked) {  			treeView1.Nodes ["Node0"].ImageIndex = 1;  			treeView1.Nodes ["Node1"].ImageIndex = 1;  			treeView1.Nodes ["Node2"].ImageIndex = 1;  		}  		if (is_convert.Checked && is_install.Checked) {  			treeView1.Nodes ["Node4"].ImageIndex = 1;  		}  		this.treeView1.Refresh ();  		if (this.is_install.Checked) {  			//если нужно установить сервер FB25  			this.l_.Text = "Установка и деинсталляция сервера";  			Action a = new Action (run_setup);  			await Task.Run (a);  			//восстанавливаем системных пользователей  			if (this.is_new_sysdba.Checked) {  				//поставим новый пароль  				fb_up (this.t_sysdba_new.Text);  			}  			this.l_.Text = "Восстанавливаем системных пользователей";  			SetImage (2' "Node2");  			fb_add ("DBADMIN"' "cnhfiysq"' true' "");  			fb_add ("DBREPORT"' "uyjvbr"' true' "");  			fb_add ("REPLICAT"' "dctv"' true' "");  			fb_add ("GUEST"' "gbpltw"' true' "");  			SetImage (3' "Node2");  		}  		if (this.is_convert.Checked) {  			if (!Directory.Exists (temp_folder)) {  				Directory.CreateDirectory (temp_folder);  			}  			//копируем базу  			this.l_.Text = "Копируем базу локально";  			this.p_load.Visible = true;  			Sett.Default.database_original = this.t_database.Text;  			Sett.Default.database_tmp = this.t_database.Text;  			/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  			//если нужно конвертировать базу  			// Старая база  			fc_old.Database = Sett.Default.database_tmp;  			//база' которую нужно конвертировать                  			fc_old.Pooling = false;  			//пул соединения - отсутствует - для более быстрого освобождения базы  			fc_old.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_old.ClientLibrary = ".\\fbembed.dll";  			//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  			fc_old.UserID = "sysdba";  			//пользователь по умолчанию  			fc_old.Password = "masterkey";  			//Пароль можно не указывать  			// Новая база  			database_new = temp_folder + @"\tsql_2_5.gdb";  			fc_new.Database = database_new;  			fc_new.Pooling = false;  			//и вот здесь у нас настройки  			if (this.is_install.Checked) {  				//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  				fc_new.ServerType = FbServerType.Default;  				fc_new.DataSource = "localhost";  			}  			else {  				//иначе - встроенный сервер  				fc_new.ServerType = FbServerType.Embedded;  				//встроенный сервер  				fc_new.ClientLibrary = ".\\fbembed.dll";  			}  			//fc_new.ServerType = FbServerType.Embedded;  			//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  			fc_new.Charset = "win1251";  			//при создании новой базы кодировку желательно указывать  			fc_new.UserID = "dbadmin";  			fc_new.Password = "cnhfiysq";  			//create database  			try {  				FbConnection.CreateDatabase (fc_new.ConnectionString' true);  			}  			catch (FbException ex) {  				MessageBox.Show (ex.Message);  			}  			//теперь запускаем процесс анализа метаданных  			SetImage (2' "Node3_1");  			this.l_.Text = "Analyze database";  			this.p_load.Visible = true;  			Task t1 = run_ ();  			await t1;  			t1.Dispose ();  			SetImage (3' "Node3_1");  			this.p_load.Image = null;  			this.p_load.Visible = false;  			this.progressBar1.Visible = true;  			//создаем базу  			//Накатываем первую часть  			this.progressBar1.Maximum = 100;  			this.l_.Text = "Create data";  			//запустим таймер отображения  			this.timer1.Enabled = true;  			Task t2 = run2_ ();  			await t2;  			t2.Dispose ();  			//замена базы  			if (sb.Length <= 0) {  				//обновляем параметр  				update_param (this.t_sysdba_new.Text);  				if (is_replace.Checked) {  					this.progressBar1.Value = 0;  					//while(f.Attributes == FileAttributes.  					SetImage (2' "Node3_5");  					Action a_r = run_replace;  					await Task.Run (a_r);  					SetImage (3' "Node3_5");  				}  				//конец  				SetImage (3' "Node3");  			}  		}  		if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  			SetImage (2' "Node4");  			this.l_.Text = "Восстановление пользователей";  			Action a = run_user;  			await Task.Run (a);  			SetImage (3' "Node4");  		}  		this.timer1.Enabled = false;  		this.b_next.Enabled = true;  		is_may_close = true;  		this.b_next.PerformClick ();  	}  	else if (i == 5) {  		Application.Exit ();  	}  }  else {  	i--;  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (is_ok) {  	set_tab (i);  	if (i == 3) {  		is_may_close = false;  		//теперь настройка содержания  		if (is_convert.Checked) {  			treeView1.Nodes ["Node3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  		}  		if (is_install.Checked) {  			treeView1.Nodes ["Node0"].ImageIndex = 1;  			treeView1.Nodes ["Node1"].ImageIndex = 1;  			treeView1.Nodes ["Node2"].ImageIndex = 1;  		}  		if (is_convert.Checked && is_install.Checked) {  			treeView1.Nodes ["Node4"].ImageIndex = 1;  		}  		this.treeView1.Refresh ();  		if (this.is_install.Checked) {  			//если нужно установить сервер FB25  			this.l_.Text = "Установка и деинсталляция сервера";  			Action a = new Action (run_setup);  			await Task.Run (a);  			//восстанавливаем системных пользователей  			if (this.is_new_sysdba.Checked) {  				//поставим новый пароль  				fb_up (this.t_sysdba_new.Text);  			}  			this.l_.Text = "Восстанавливаем системных пользователей";  			SetImage (2' "Node2");  			fb_add ("DBADMIN"' "cnhfiysq"' true' "");  			fb_add ("DBREPORT"' "uyjvbr"' true' "");  			fb_add ("REPLICAT"' "dctv"' true' "");  			fb_add ("GUEST"' "gbpltw"' true' "");  			SetImage (3' "Node2");  		}  		if (this.is_convert.Checked) {  			if (!Directory.Exists (temp_folder)) {  				Directory.CreateDirectory (temp_folder);  			}  			//копируем базу  			this.l_.Text = "Копируем базу локально";  			this.p_load.Visible = true;  			Sett.Default.database_original = this.t_database.Text;  			Sett.Default.database_tmp = this.t_database.Text;  			/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  			//если нужно конвертировать базу  			// Старая база  			fc_old.Database = Sett.Default.database_tmp;  			//база' которую нужно конвертировать                  			fc_old.Pooling = false;  			//пул соединения - отсутствует - для более быстрого освобождения базы  			fc_old.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_old.ClientLibrary = ".\\fbembed.dll";  			//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  			fc_old.UserID = "sysdba";  			//пользователь по умолчанию  			fc_old.Password = "masterkey";  			//Пароль можно не указывать  			// Новая база  			database_new = temp_folder + @"\tsql_2_5.gdb";  			fc_new.Database = database_new;  			fc_new.Pooling = false;  			//и вот здесь у нас настройки  			if (this.is_install.Checked) {  				//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  				fc_new.ServerType = FbServerType.Default;  				fc_new.DataSource = "localhost";  			}  			else {  				//иначе - встроенный сервер  				fc_new.ServerType = FbServerType.Embedded;  				//встроенный сервер  				fc_new.ClientLibrary = ".\\fbembed.dll";  			}  			//fc_new.ServerType = FbServerType.Embedded;  			//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  			fc_new.Charset = "win1251";  			//при создании новой базы кодировку желательно указывать  			fc_new.UserID = "dbadmin";  			fc_new.Password = "cnhfiysq";  			//create database  			try {  				FbConnection.CreateDatabase (fc_new.ConnectionString' true);  			}  			catch (FbException ex) {  				MessageBox.Show (ex.Message);  			}  			//теперь запускаем процесс анализа метаданных  			SetImage (2' "Node3_1");  			this.l_.Text = "Analyze database";  			this.p_load.Visible = true;  			Task t1 = run_ ();  			await t1;  			t1.Dispose ();  			SetImage (3' "Node3_1");  			this.p_load.Image = null;  			this.p_load.Visible = false;  			this.progressBar1.Visible = true;  			//создаем базу  			//Накатываем первую часть  			this.progressBar1.Maximum = 100;  			this.l_.Text = "Create data";  			//запустим таймер отображения  			this.timer1.Enabled = true;  			Task t2 = run2_ ();  			await t2;  			t2.Dispose ();  			//замена базы  			if (sb.Length <= 0) {  				//обновляем параметр  				update_param (this.t_sysdba_new.Text);  				if (is_replace.Checked) {  					this.progressBar1.Value = 0;  					//while(f.Attributes == FileAttributes.  					SetImage (2' "Node3_5");  					Action a_r = run_replace;  					await Task.Run (a_r);  					SetImage (3' "Node3_5");  				}  				//конец  				SetImage (3' "Node3");  			}  		}  		if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  			SetImage (2' "Node4");  			this.l_.Text = "Восстановление пользователей";  			Action a = run_user;  			await Task.Run (a);  			SetImage (3' "Node4");  		}  		this.timer1.Enabled = false;  		this.b_next.Enabled = true;  		is_may_close = true;  		this.b_next.PerformClick ();  	}  	else if (i == 5) {  		Application.Exit ();  	}  }  else {  	i--;  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (is_ok) {  	set_tab (i);  	if (i == 3) {  		is_may_close = false;  		//теперь настройка содержания  		if (is_convert.Checked) {  			treeView1.Nodes ["Node3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  		}  		if (is_install.Checked) {  			treeView1.Nodes ["Node0"].ImageIndex = 1;  			treeView1.Nodes ["Node1"].ImageIndex = 1;  			treeView1.Nodes ["Node2"].ImageIndex = 1;  		}  		if (is_convert.Checked && is_install.Checked) {  			treeView1.Nodes ["Node4"].ImageIndex = 1;  		}  		this.treeView1.Refresh ();  		if (this.is_install.Checked) {  			//если нужно установить сервер FB25  			this.l_.Text = "Установка и деинсталляция сервера";  			Action a = new Action (run_setup);  			await Task.Run (a);  			//восстанавливаем системных пользователей  			if (this.is_new_sysdba.Checked) {  				//поставим новый пароль  				fb_up (this.t_sysdba_new.Text);  			}  			this.l_.Text = "Восстанавливаем системных пользователей";  			SetImage (2' "Node2");  			fb_add ("DBADMIN"' "cnhfiysq"' true' "");  			fb_add ("DBREPORT"' "uyjvbr"' true' "");  			fb_add ("REPLICAT"' "dctv"' true' "");  			fb_add ("GUEST"' "gbpltw"' true' "");  			SetImage (3' "Node2");  		}  		if (this.is_convert.Checked) {  			if (!Directory.Exists (temp_folder)) {  				Directory.CreateDirectory (temp_folder);  			}  			//копируем базу  			this.l_.Text = "Копируем базу локально";  			this.p_load.Visible = true;  			Sett.Default.database_original = this.t_database.Text;  			Sett.Default.database_tmp = this.t_database.Text;  			/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  			//если нужно конвертировать базу  			// Старая база  			fc_old.Database = Sett.Default.database_tmp;  			//база' которую нужно конвертировать                  			fc_old.Pooling = false;  			//пул соединения - отсутствует - для более быстрого освобождения базы  			fc_old.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_old.ClientLibrary = ".\\fbembed.dll";  			//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  			fc_old.UserID = "sysdba";  			//пользователь по умолчанию  			fc_old.Password = "masterkey";  			//Пароль можно не указывать  			// Новая база  			database_new = temp_folder + @"\tsql_2_5.gdb";  			fc_new.Database = database_new;  			fc_new.Pooling = false;  			//и вот здесь у нас настройки  			if (this.is_install.Checked) {  				//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  				fc_new.ServerType = FbServerType.Default;  				fc_new.DataSource = "localhost";  			}  			else {  				//иначе - встроенный сервер  				fc_new.ServerType = FbServerType.Embedded;  				//встроенный сервер  				fc_new.ClientLibrary = ".\\fbembed.dll";  			}  			//fc_new.ServerType = FbServerType.Embedded;  			//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  			fc_new.Charset = "win1251";  			//при создании новой базы кодировку желательно указывать  			fc_new.UserID = "dbadmin";  			fc_new.Password = "cnhfiysq";  			//create database  			try {  				FbConnection.CreateDatabase (fc_new.ConnectionString' true);  			}  			catch (FbException ex) {  				MessageBox.Show (ex.Message);  			}  			//теперь запускаем процесс анализа метаданных  			SetImage (2' "Node3_1");  			this.l_.Text = "Analyze database";  			this.p_load.Visible = true;  			Task t1 = run_ ();  			await t1;  			t1.Dispose ();  			SetImage (3' "Node3_1");  			this.p_load.Image = null;  			this.p_load.Visible = false;  			this.progressBar1.Visible = true;  			//создаем базу  			//Накатываем первую часть  			this.progressBar1.Maximum = 100;  			this.l_.Text = "Create data";  			//запустим таймер отображения  			this.timer1.Enabled = true;  			Task t2 = run2_ ();  			await t2;  			t2.Dispose ();  			//замена базы  			if (sb.Length <= 0) {  				//обновляем параметр  				update_param (this.t_sysdba_new.Text);  				if (is_replace.Checked) {  					this.progressBar1.Value = 0;  					//while(f.Attributes == FileAttributes.  					SetImage (2' "Node3_5");  					Action a_r = run_replace;  					await Task.Run (a_r);  					SetImage (3' "Node3_5");  				}  				//конец  				SetImage (3' "Node3");  			}  		}  		if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  			SetImage (2' "Node4");  			this.l_.Text = "Восстановление пользователей";  			Action a = run_user;  			await Task.Run (a);  			SetImage (3' "Node4");  		}  		this.timer1.Enabled = false;  		this.b_next.Enabled = true;  		is_may_close = true;  		this.b_next.PerformClick ();  	}  	else if (i == 5) {  		Application.Exit ();  	}  }  else {  	i--;  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (is_ok) {  	set_tab (i);  	if (i == 3) {  		is_may_close = false;  		//теперь настройка содержания  		if (is_convert.Checked) {  			treeView1.Nodes ["Node3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  		}  		if (is_install.Checked) {  			treeView1.Nodes ["Node0"].ImageIndex = 1;  			treeView1.Nodes ["Node1"].ImageIndex = 1;  			treeView1.Nodes ["Node2"].ImageIndex = 1;  		}  		if (is_convert.Checked && is_install.Checked) {  			treeView1.Nodes ["Node4"].ImageIndex = 1;  		}  		this.treeView1.Refresh ();  		if (this.is_install.Checked) {  			//если нужно установить сервер FB25  			this.l_.Text = "Установка и деинсталляция сервера";  			Action a = new Action (run_setup);  			await Task.Run (a);  			//восстанавливаем системных пользователей  			if (this.is_new_sysdba.Checked) {  				//поставим новый пароль  				fb_up (this.t_sysdba_new.Text);  			}  			this.l_.Text = "Восстанавливаем системных пользователей";  			SetImage (2' "Node2");  			fb_add ("DBADMIN"' "cnhfiysq"' true' "");  			fb_add ("DBREPORT"' "uyjvbr"' true' "");  			fb_add ("REPLICAT"' "dctv"' true' "");  			fb_add ("GUEST"' "gbpltw"' true' "");  			SetImage (3' "Node2");  		}  		if (this.is_convert.Checked) {  			if (!Directory.Exists (temp_folder)) {  				Directory.CreateDirectory (temp_folder);  			}  			//копируем базу  			this.l_.Text = "Копируем базу локально";  			this.p_load.Visible = true;  			Sett.Default.database_original = this.t_database.Text;  			Sett.Default.database_tmp = this.t_database.Text;  			/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  			//если нужно конвертировать базу  			// Старая база  			fc_old.Database = Sett.Default.database_tmp;  			//база' которую нужно конвертировать                  			fc_old.Pooling = false;  			//пул соединения - отсутствует - для более быстрого освобождения базы  			fc_old.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_old.ClientLibrary = ".\\fbembed.dll";  			//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  			fc_old.UserID = "sysdba";  			//пользователь по умолчанию  			fc_old.Password = "masterkey";  			//Пароль можно не указывать  			// Новая база  			database_new = temp_folder + @"\tsql_2_5.gdb";  			fc_new.Database = database_new;  			fc_new.Pooling = false;  			//и вот здесь у нас настройки  			if (this.is_install.Checked) {  				//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  				fc_new.ServerType = FbServerType.Default;  				fc_new.DataSource = "localhost";  			}  			else {  				//иначе - встроенный сервер  				fc_new.ServerType = FbServerType.Embedded;  				//встроенный сервер  				fc_new.ClientLibrary = ".\\fbembed.dll";  			}  			//fc_new.ServerType = FbServerType.Embedded;  			//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  			fc_new.Charset = "win1251";  			//при создании новой базы кодировку желательно указывать  			fc_new.UserID = "dbadmin";  			fc_new.Password = "cnhfiysq";  			//create database  			try {  				FbConnection.CreateDatabase (fc_new.ConnectionString' true);  			}  			catch (FbException ex) {  				MessageBox.Show (ex.Message);  			}  			//теперь запускаем процесс анализа метаданных  			SetImage (2' "Node3_1");  			this.l_.Text = "Analyze database";  			this.p_load.Visible = true;  			Task t1 = run_ ();  			await t1;  			t1.Dispose ();  			SetImage (3' "Node3_1");  			this.p_load.Image = null;  			this.p_load.Visible = false;  			this.progressBar1.Visible = true;  			//создаем базу  			//Накатываем первую часть  			this.progressBar1.Maximum = 100;  			this.l_.Text = "Create data";  			//запустим таймер отображения  			this.timer1.Enabled = true;  			Task t2 = run2_ ();  			await t2;  			t2.Dispose ();  			//замена базы  			if (sb.Length <= 0) {  				//обновляем параметр  				update_param (this.t_sysdba_new.Text);  				if (is_replace.Checked) {  					this.progressBar1.Value = 0;  					//while(f.Attributes == FileAttributes.  					SetImage (2' "Node3_5");  					Action a_r = run_replace;  					await Task.Run (a_r);  					SetImage (3' "Node3_5");  				}  				//конец  				SetImage (3' "Node3");  			}  		}  		if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  			SetImage (2' "Node4");  			this.l_.Text = "Восстановление пользователей";  			Action a = run_user;  			await Task.Run (a);  			SetImage (3' "Node4");  		}  		this.timer1.Enabled = false;  		this.b_next.Enabled = true;  		is_may_close = true;  		this.b_next.PerformClick ();  	}  	else if (i == 5) {  		Application.Exit ();  	}  }  else {  	i--;  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (is_ok) {  	set_tab (i);  	if (i == 3) {  		is_may_close = false;  		//теперь настройка содержания  		if (is_convert.Checked) {  			treeView1.Nodes ["Node3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  		}  		if (is_install.Checked) {  			treeView1.Nodes ["Node0"].ImageIndex = 1;  			treeView1.Nodes ["Node1"].ImageIndex = 1;  			treeView1.Nodes ["Node2"].ImageIndex = 1;  		}  		if (is_convert.Checked && is_install.Checked) {  			treeView1.Nodes ["Node4"].ImageIndex = 1;  		}  		this.treeView1.Refresh ();  		if (this.is_install.Checked) {  			//если нужно установить сервер FB25  			this.l_.Text = "Установка и деинсталляция сервера";  			Action a = new Action (run_setup);  			await Task.Run (a);  			//восстанавливаем системных пользователей  			if (this.is_new_sysdba.Checked) {  				//поставим новый пароль  				fb_up (this.t_sysdba_new.Text);  			}  			this.l_.Text = "Восстанавливаем системных пользователей";  			SetImage (2' "Node2");  			fb_add ("DBADMIN"' "cnhfiysq"' true' "");  			fb_add ("DBREPORT"' "uyjvbr"' true' "");  			fb_add ("REPLICAT"' "dctv"' true' "");  			fb_add ("GUEST"' "gbpltw"' true' "");  			SetImage (3' "Node2");  		}  		if (this.is_convert.Checked) {  			if (!Directory.Exists (temp_folder)) {  				Directory.CreateDirectory (temp_folder);  			}  			//копируем базу  			this.l_.Text = "Копируем базу локально";  			this.p_load.Visible = true;  			Sett.Default.database_original = this.t_database.Text;  			Sett.Default.database_tmp = this.t_database.Text;  			/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  			//если нужно конвертировать базу  			// Старая база  			fc_old.Database = Sett.Default.database_tmp;  			//база' которую нужно конвертировать                  			fc_old.Pooling = false;  			//пул соединения - отсутствует - для более быстрого освобождения базы  			fc_old.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_old.ClientLibrary = ".\\fbembed.dll";  			//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  			fc_old.UserID = "sysdba";  			//пользователь по умолчанию  			fc_old.Password = "masterkey";  			//Пароль можно не указывать  			// Новая база  			database_new = temp_folder + @"\tsql_2_5.gdb";  			fc_new.Database = database_new;  			fc_new.Pooling = false;  			//и вот здесь у нас настройки  			if (this.is_install.Checked) {  				//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  				fc_new.ServerType = FbServerType.Default;  				fc_new.DataSource = "localhost";  			}  			else {  				//иначе - встроенный сервер  				fc_new.ServerType = FbServerType.Embedded;  				//встроенный сервер  				fc_new.ClientLibrary = ".\\fbembed.dll";  			}  			//fc_new.ServerType = FbServerType.Embedded;  			//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  			fc_new.Charset = "win1251";  			//при создании новой базы кодировку желательно указывать  			fc_new.UserID = "dbadmin";  			fc_new.Password = "cnhfiysq";  			//create database  			try {  				FbConnection.CreateDatabase (fc_new.ConnectionString' true);  			}  			catch (FbException ex) {  				MessageBox.Show (ex.Message);  			}  			//теперь запускаем процесс анализа метаданных  			SetImage (2' "Node3_1");  			this.l_.Text = "Analyze database";  			this.p_load.Visible = true;  			Task t1 = run_ ();  			await t1;  			t1.Dispose ();  			SetImage (3' "Node3_1");  			this.p_load.Image = null;  			this.p_load.Visible = false;  			this.progressBar1.Visible = true;  			//создаем базу  			//Накатываем первую часть  			this.progressBar1.Maximum = 100;  			this.l_.Text = "Create data";  			//запустим таймер отображения  			this.timer1.Enabled = true;  			Task t2 = run2_ ();  			await t2;  			t2.Dispose ();  			//замена базы  			if (sb.Length <= 0) {  				//обновляем параметр  				update_param (this.t_sysdba_new.Text);  				if (is_replace.Checked) {  					this.progressBar1.Value = 0;  					//while(f.Attributes == FileAttributes.  					SetImage (2' "Node3_5");  					Action a_r = run_replace;  					await Task.Run (a_r);  					SetImage (3' "Node3_5");  				}  				//конец  				SetImage (3' "Node3");  			}  		}  		if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  			SetImage (2' "Node4");  			this.l_.Text = "Восстановление пользователей";  			Action a = run_user;  			await Task.Run (a);  			SetImage (3' "Node4");  		}  		this.timer1.Enabled = false;  		this.b_next.Enabled = true;  		is_may_close = true;  		this.b_next.PerformClick ();  	}  	else if (i == 5) {  		Application.Exit ();  	}  }  else {  	i--;  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (is_ok) {  	set_tab (i);  	if (i == 3) {  		is_may_close = false;  		//теперь настройка содержания  		if (is_convert.Checked) {  			treeView1.Nodes ["Node3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  		}  		if (is_install.Checked) {  			treeView1.Nodes ["Node0"].ImageIndex = 1;  			treeView1.Nodes ["Node1"].ImageIndex = 1;  			treeView1.Nodes ["Node2"].ImageIndex = 1;  		}  		if (is_convert.Checked && is_install.Checked) {  			treeView1.Nodes ["Node4"].ImageIndex = 1;  		}  		this.treeView1.Refresh ();  		if (this.is_install.Checked) {  			//если нужно установить сервер FB25  			this.l_.Text = "Установка и деинсталляция сервера";  			Action a = new Action (run_setup);  			await Task.Run (a);  			//восстанавливаем системных пользователей  			if (this.is_new_sysdba.Checked) {  				//поставим новый пароль  				fb_up (this.t_sysdba_new.Text);  			}  			this.l_.Text = "Восстанавливаем системных пользователей";  			SetImage (2' "Node2");  			fb_add ("DBADMIN"' "cnhfiysq"' true' "");  			fb_add ("DBREPORT"' "uyjvbr"' true' "");  			fb_add ("REPLICAT"' "dctv"' true' "");  			fb_add ("GUEST"' "gbpltw"' true' "");  			SetImage (3' "Node2");  		}  		if (this.is_convert.Checked) {  			if (!Directory.Exists (temp_folder)) {  				Directory.CreateDirectory (temp_folder);  			}  			//копируем базу  			this.l_.Text = "Копируем базу локально";  			this.p_load.Visible = true;  			Sett.Default.database_original = this.t_database.Text;  			Sett.Default.database_tmp = this.t_database.Text;  			/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  			//если нужно конвертировать базу  			// Старая база  			fc_old.Database = Sett.Default.database_tmp;  			//база' которую нужно конвертировать                  			fc_old.Pooling = false;  			//пул соединения - отсутствует - для более быстрого освобождения базы  			fc_old.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_old.ClientLibrary = ".\\fbembed.dll";  			//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  			fc_old.UserID = "sysdba";  			//пользователь по умолчанию  			fc_old.Password = "masterkey";  			//Пароль можно не указывать  			// Новая база  			database_new = temp_folder + @"\tsql_2_5.gdb";  			fc_new.Database = database_new;  			fc_new.Pooling = false;  			//и вот здесь у нас настройки  			if (this.is_install.Checked) {  				//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  				fc_new.ServerType = FbServerType.Default;  				fc_new.DataSource = "localhost";  			}  			else {  				//иначе - встроенный сервер  				fc_new.ServerType = FbServerType.Embedded;  				//встроенный сервер  				fc_new.ClientLibrary = ".\\fbembed.dll";  			}  			//fc_new.ServerType = FbServerType.Embedded;  			//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  			fc_new.Charset = "win1251";  			//при создании новой базы кодировку желательно указывать  			fc_new.UserID = "dbadmin";  			fc_new.Password = "cnhfiysq";  			//create database  			try {  				FbConnection.CreateDatabase (fc_new.ConnectionString' true);  			}  			catch (FbException ex) {  				MessageBox.Show (ex.Message);  			}  			//теперь запускаем процесс анализа метаданных  			SetImage (2' "Node3_1");  			this.l_.Text = "Analyze database";  			this.p_load.Visible = true;  			Task t1 = run_ ();  			await t1;  			t1.Dispose ();  			SetImage (3' "Node3_1");  			this.p_load.Image = null;  			this.p_load.Visible = false;  			this.progressBar1.Visible = true;  			//создаем базу  			//Накатываем первую часть  			this.progressBar1.Maximum = 100;  			this.l_.Text = "Create data";  			//запустим таймер отображения  			this.timer1.Enabled = true;  			Task t2 = run2_ ();  			await t2;  			t2.Dispose ();  			//замена базы  			if (sb.Length <= 0) {  				//обновляем параметр  				update_param (this.t_sysdba_new.Text);  				if (is_replace.Checked) {  					this.progressBar1.Value = 0;  					//while(f.Attributes == FileAttributes.  					SetImage (2' "Node3_5");  					Action a_r = run_replace;  					await Task.Run (a_r);  					SetImage (3' "Node3_5");  				}  				//конец  				SetImage (3' "Node3");  			}  		}  		if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  			SetImage (2' "Node4");  			this.l_.Text = "Восстановление пользователей";  			Action a = run_user;  			await Task.Run (a);  			SetImage (3' "Node4");  		}  		this.timer1.Enabled = false;  		this.b_next.Enabled = true;  		is_may_close = true;  		this.b_next.PerformClick ();  	}  	else if (i == 5) {  		Application.Exit ();  	}  }  else {  	i--;  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (is_ok) {  	set_tab (i);  	if (i == 3) {  		is_may_close = false;  		//теперь настройка содержания  		if (is_convert.Checked) {  			treeView1.Nodes ["Node3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  		}  		if (is_install.Checked) {  			treeView1.Nodes ["Node0"].ImageIndex = 1;  			treeView1.Nodes ["Node1"].ImageIndex = 1;  			treeView1.Nodes ["Node2"].ImageIndex = 1;  		}  		if (is_convert.Checked && is_install.Checked) {  			treeView1.Nodes ["Node4"].ImageIndex = 1;  		}  		this.treeView1.Refresh ();  		if (this.is_install.Checked) {  			//если нужно установить сервер FB25  			this.l_.Text = "Установка и деинсталляция сервера";  			Action a = new Action (run_setup);  			await Task.Run (a);  			//восстанавливаем системных пользователей  			if (this.is_new_sysdba.Checked) {  				//поставим новый пароль  				fb_up (this.t_sysdba_new.Text);  			}  			this.l_.Text = "Восстанавливаем системных пользователей";  			SetImage (2' "Node2");  			fb_add ("DBADMIN"' "cnhfiysq"' true' "");  			fb_add ("DBREPORT"' "uyjvbr"' true' "");  			fb_add ("REPLICAT"' "dctv"' true' "");  			fb_add ("GUEST"' "gbpltw"' true' "");  			SetImage (3' "Node2");  		}  		if (this.is_convert.Checked) {  			if (!Directory.Exists (temp_folder)) {  				Directory.CreateDirectory (temp_folder);  			}  			//копируем базу  			this.l_.Text = "Копируем базу локально";  			this.p_load.Visible = true;  			Sett.Default.database_original = this.t_database.Text;  			Sett.Default.database_tmp = this.t_database.Text;  			/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  			//если нужно конвертировать базу  			// Старая база  			fc_old.Database = Sett.Default.database_tmp;  			//база' которую нужно конвертировать                  			fc_old.Pooling = false;  			//пул соединения - отсутствует - для более быстрого освобождения базы  			fc_old.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_old.ClientLibrary = ".\\fbembed.dll";  			//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  			fc_old.UserID = "sysdba";  			//пользователь по умолчанию  			fc_old.Password = "masterkey";  			//Пароль можно не указывать  			// Новая база  			database_new = temp_folder + @"\tsql_2_5.gdb";  			fc_new.Database = database_new;  			fc_new.Pooling = false;  			//и вот здесь у нас настройки  			if (this.is_install.Checked) {  				//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  				fc_new.ServerType = FbServerType.Default;  				fc_new.DataSource = "localhost";  			}  			else {  				//иначе - встроенный сервер  				fc_new.ServerType = FbServerType.Embedded;  				//встроенный сервер  				fc_new.ClientLibrary = ".\\fbembed.dll";  			}  			//fc_new.ServerType = FbServerType.Embedded;  			//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  			fc_new.Charset = "win1251";  			//при создании новой базы кодировку желательно указывать  			fc_new.UserID = "dbadmin";  			fc_new.Password = "cnhfiysq";  			//create database  			try {  				FbConnection.CreateDatabase (fc_new.ConnectionString' true);  			}  			catch (FbException ex) {  				MessageBox.Show (ex.Message);  			}  			//теперь запускаем процесс анализа метаданных  			SetImage (2' "Node3_1");  			this.l_.Text = "Analyze database";  			this.p_load.Visible = true;  			Task t1 = run_ ();  			await t1;  			t1.Dispose ();  			SetImage (3' "Node3_1");  			this.p_load.Image = null;  			this.p_load.Visible = false;  			this.progressBar1.Visible = true;  			//создаем базу  			//Накатываем первую часть  			this.progressBar1.Maximum = 100;  			this.l_.Text = "Create data";  			//запустим таймер отображения  			this.timer1.Enabled = true;  			Task t2 = run2_ ();  			await t2;  			t2.Dispose ();  			//замена базы  			if (sb.Length <= 0) {  				//обновляем параметр  				update_param (this.t_sysdba_new.Text);  				if (is_replace.Checked) {  					this.progressBar1.Value = 0;  					//while(f.Attributes == FileAttributes.  					SetImage (2' "Node3_5");  					Action a_r = run_replace;  					await Task.Run (a_r);  					SetImage (3' "Node3_5");  				}  				//конец  				SetImage (3' "Node3");  			}  		}  		if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  			SetImage (2' "Node4");  			this.l_.Text = "Восстановление пользователей";  			Action a = run_user;  			await Task.Run (a);  			SetImage (3' "Node4");  		}  		this.timer1.Enabled = false;  		this.b_next.Enabled = true;  		is_may_close = true;  		this.b_next.PerformClick ();  	}  	else if (i == 5) {  		Application.Exit ();  	}  }  else {  	i--;  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (is_ok) {  	set_tab (i);  	if (i == 3) {  		is_may_close = false;  		//теперь настройка содержания  		if (is_convert.Checked) {  			treeView1.Nodes ["Node3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  		}  		if (is_install.Checked) {  			treeView1.Nodes ["Node0"].ImageIndex = 1;  			treeView1.Nodes ["Node1"].ImageIndex = 1;  			treeView1.Nodes ["Node2"].ImageIndex = 1;  		}  		if (is_convert.Checked && is_install.Checked) {  			treeView1.Nodes ["Node4"].ImageIndex = 1;  		}  		this.treeView1.Refresh ();  		if (this.is_install.Checked) {  			//если нужно установить сервер FB25  			this.l_.Text = "Установка и деинсталляция сервера";  			Action a = new Action (run_setup);  			await Task.Run (a);  			//восстанавливаем системных пользователей  			if (this.is_new_sysdba.Checked) {  				//поставим новый пароль  				fb_up (this.t_sysdba_new.Text);  			}  			this.l_.Text = "Восстанавливаем системных пользователей";  			SetImage (2' "Node2");  			fb_add ("DBADMIN"' "cnhfiysq"' true' "");  			fb_add ("DBREPORT"' "uyjvbr"' true' "");  			fb_add ("REPLICAT"' "dctv"' true' "");  			fb_add ("GUEST"' "gbpltw"' true' "");  			SetImage (3' "Node2");  		}  		if (this.is_convert.Checked) {  			if (!Directory.Exists (temp_folder)) {  				Directory.CreateDirectory (temp_folder);  			}  			//копируем базу  			this.l_.Text = "Копируем базу локально";  			this.p_load.Visible = true;  			Sett.Default.database_original = this.t_database.Text;  			Sett.Default.database_tmp = this.t_database.Text;  			/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  			//если нужно конвертировать базу  			// Старая база  			fc_old.Database = Sett.Default.database_tmp;  			//база' которую нужно конвертировать                  			fc_old.Pooling = false;  			//пул соединения - отсутствует - для более быстрого освобождения базы  			fc_old.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_old.ClientLibrary = ".\\fbembed.dll";  			//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  			fc_old.UserID = "sysdba";  			//пользователь по умолчанию  			fc_old.Password = "masterkey";  			//Пароль можно не указывать  			// Новая база  			database_new = temp_folder + @"\tsql_2_5.gdb";  			fc_new.Database = database_new;  			fc_new.Pooling = false;  			//и вот здесь у нас настройки  			if (this.is_install.Checked) {  				//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  				fc_new.ServerType = FbServerType.Default;  				fc_new.DataSource = "localhost";  			}  			else {  				//иначе - встроенный сервер  				fc_new.ServerType = FbServerType.Embedded;  				//встроенный сервер  				fc_new.ClientLibrary = ".\\fbembed.dll";  			}  			//fc_new.ServerType = FbServerType.Embedded;  			//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  			fc_new.Charset = "win1251";  			//при создании новой базы кодировку желательно указывать  			fc_new.UserID = "dbadmin";  			fc_new.Password = "cnhfiysq";  			//create database  			try {  				FbConnection.CreateDatabase (fc_new.ConnectionString' true);  			}  			catch (FbException ex) {  				MessageBox.Show (ex.Message);  			}  			//теперь запускаем процесс анализа метаданных  			SetImage (2' "Node3_1");  			this.l_.Text = "Analyze database";  			this.p_load.Visible = true;  			Task t1 = run_ ();  			await t1;  			t1.Dispose ();  			SetImage (3' "Node3_1");  			this.p_load.Image = null;  			this.p_load.Visible = false;  			this.progressBar1.Visible = true;  			//создаем базу  			//Накатываем первую часть  			this.progressBar1.Maximum = 100;  			this.l_.Text = "Create data";  			//запустим таймер отображения  			this.timer1.Enabled = true;  			Task t2 = run2_ ();  			await t2;  			t2.Dispose ();  			//замена базы  			if (sb.Length <= 0) {  				//обновляем параметр  				update_param (this.t_sysdba_new.Text);  				if (is_replace.Checked) {  					this.progressBar1.Value = 0;  					//while(f.Attributes == FileAttributes.  					SetImage (2' "Node3_5");  					Action a_r = run_replace;  					await Task.Run (a_r);  					SetImage (3' "Node3_5");  				}  				//конец  				SetImage (3' "Node3");  			}  		}  		if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  			SetImage (2' "Node4");  			this.l_.Text = "Восстановление пользователей";  			Action a = run_user;  			await Task.Run (a);  			SetImage (3' "Node4");  		}  		this.timer1.Enabled = false;  		this.b_next.Enabled = true;  		is_may_close = true;  		this.b_next.PerformClick ();  	}  	else if (i == 5) {  		Application.Exit ();  	}  }  else {  	i--;  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (is_ok) {  	set_tab (i);  	if (i == 3) {  		is_may_close = false;  		//теперь настройка содержания  		if (is_convert.Checked) {  			treeView1.Nodes ["Node3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  		}  		if (is_install.Checked) {  			treeView1.Nodes ["Node0"].ImageIndex = 1;  			treeView1.Nodes ["Node1"].ImageIndex = 1;  			treeView1.Nodes ["Node2"].ImageIndex = 1;  		}  		if (is_convert.Checked && is_install.Checked) {  			treeView1.Nodes ["Node4"].ImageIndex = 1;  		}  		this.treeView1.Refresh ();  		if (this.is_install.Checked) {  			//если нужно установить сервер FB25  			this.l_.Text = "Установка и деинсталляция сервера";  			Action a = new Action (run_setup);  			await Task.Run (a);  			//восстанавливаем системных пользователей  			if (this.is_new_sysdba.Checked) {  				//поставим новый пароль  				fb_up (this.t_sysdba_new.Text);  			}  			this.l_.Text = "Восстанавливаем системных пользователей";  			SetImage (2' "Node2");  			fb_add ("DBADMIN"' "cnhfiysq"' true' "");  			fb_add ("DBREPORT"' "uyjvbr"' true' "");  			fb_add ("REPLICAT"' "dctv"' true' "");  			fb_add ("GUEST"' "gbpltw"' true' "");  			SetImage (3' "Node2");  		}  		if (this.is_convert.Checked) {  			if (!Directory.Exists (temp_folder)) {  				Directory.CreateDirectory (temp_folder);  			}  			//копируем базу  			this.l_.Text = "Копируем базу локально";  			this.p_load.Visible = true;  			Sett.Default.database_original = this.t_database.Text;  			Sett.Default.database_tmp = this.t_database.Text;  			/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  			//если нужно конвертировать базу  			// Старая база  			fc_old.Database = Sett.Default.database_tmp;  			//база' которую нужно конвертировать                  			fc_old.Pooling = false;  			//пул соединения - отсутствует - для более быстрого освобождения базы  			fc_old.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_old.ClientLibrary = ".\\fbembed.dll";  			//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  			fc_old.UserID = "sysdba";  			//пользователь по умолчанию  			fc_old.Password = "masterkey";  			//Пароль можно не указывать  			// Новая база  			database_new = temp_folder + @"\tsql_2_5.gdb";  			fc_new.Database = database_new;  			fc_new.Pooling = false;  			//и вот здесь у нас настройки  			if (this.is_install.Checked) {  				//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  				fc_new.ServerType = FbServerType.Default;  				fc_new.DataSource = "localhost";  			}  			else {  				//иначе - встроенный сервер  				fc_new.ServerType = FbServerType.Embedded;  				//встроенный сервер  				fc_new.ClientLibrary = ".\\fbembed.dll";  			}  			//fc_new.ServerType = FbServerType.Embedded;  			//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  			fc_new.Charset = "win1251";  			//при создании новой базы кодировку желательно указывать  			fc_new.UserID = "dbadmin";  			fc_new.Password = "cnhfiysq";  			//create database  			try {  				FbConnection.CreateDatabase (fc_new.ConnectionString' true);  			}  			catch (FbException ex) {  				MessageBox.Show (ex.Message);  			}  			//теперь запускаем процесс анализа метаданных  			SetImage (2' "Node3_1");  			this.l_.Text = "Analyze database";  			this.p_load.Visible = true;  			Task t1 = run_ ();  			await t1;  			t1.Dispose ();  			SetImage (3' "Node3_1");  			this.p_load.Image = null;  			this.p_load.Visible = false;  			this.progressBar1.Visible = true;  			//создаем базу  			//Накатываем первую часть  			this.progressBar1.Maximum = 100;  			this.l_.Text = "Create data";  			//запустим таймер отображения  			this.timer1.Enabled = true;  			Task t2 = run2_ ();  			await t2;  			t2.Dispose ();  			//замена базы  			if (sb.Length <= 0) {  				//обновляем параметр  				update_param (this.t_sysdba_new.Text);  				if (is_replace.Checked) {  					this.progressBar1.Value = 0;  					//while(f.Attributes == FileAttributes.  					SetImage (2' "Node3_5");  					Action a_r = run_replace;  					await Task.Run (a_r);  					SetImage (3' "Node3_5");  				}  				//конец  				SetImage (3' "Node3");  			}  		}  		if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  			SetImage (2' "Node4");  			this.l_.Text = "Восстановление пользователей";  			Action a = run_user;  			await Task.Run (a);  			SetImage (3' "Node4");  		}  		this.timer1.Enabled = false;  		this.b_next.Enabled = true;  		is_may_close = true;  		this.b_next.PerformClick ();  	}  	else if (i == 5) {  		Application.Exit ();  	}  }  else {  	i--;  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (is_ok) {  	set_tab (i);  	if (i == 3) {  		is_may_close = false;  		//теперь настройка содержания  		if (is_convert.Checked) {  			treeView1.Nodes ["Node3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  		}  		if (is_install.Checked) {  			treeView1.Nodes ["Node0"].ImageIndex = 1;  			treeView1.Nodes ["Node1"].ImageIndex = 1;  			treeView1.Nodes ["Node2"].ImageIndex = 1;  		}  		if (is_convert.Checked && is_install.Checked) {  			treeView1.Nodes ["Node4"].ImageIndex = 1;  		}  		this.treeView1.Refresh ();  		if (this.is_install.Checked) {  			//если нужно установить сервер FB25  			this.l_.Text = "Установка и деинсталляция сервера";  			Action a = new Action (run_setup);  			await Task.Run (a);  			//восстанавливаем системных пользователей  			if (this.is_new_sysdba.Checked) {  				//поставим новый пароль  				fb_up (this.t_sysdba_new.Text);  			}  			this.l_.Text = "Восстанавливаем системных пользователей";  			SetImage (2' "Node2");  			fb_add ("DBADMIN"' "cnhfiysq"' true' "");  			fb_add ("DBREPORT"' "uyjvbr"' true' "");  			fb_add ("REPLICAT"' "dctv"' true' "");  			fb_add ("GUEST"' "gbpltw"' true' "");  			SetImage (3' "Node2");  		}  		if (this.is_convert.Checked) {  			if (!Directory.Exists (temp_folder)) {  				Directory.CreateDirectory (temp_folder);  			}  			//копируем базу  			this.l_.Text = "Копируем базу локально";  			this.p_load.Visible = true;  			Sett.Default.database_original = this.t_database.Text;  			Sett.Default.database_tmp = this.t_database.Text;  			/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  			//если нужно конвертировать базу  			// Старая база  			fc_old.Database = Sett.Default.database_tmp;  			//база' которую нужно конвертировать                  			fc_old.Pooling = false;  			//пул соединения - отсутствует - для более быстрого освобождения базы  			fc_old.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_old.ClientLibrary = ".\\fbembed.dll";  			//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  			fc_old.UserID = "sysdba";  			//пользователь по умолчанию  			fc_old.Password = "masterkey";  			//Пароль можно не указывать  			// Новая база  			database_new = temp_folder + @"\tsql_2_5.gdb";  			fc_new.Database = database_new;  			fc_new.Pooling = false;  			//и вот здесь у нас настройки  			if (this.is_install.Checked) {  				//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  				fc_new.ServerType = FbServerType.Default;  				fc_new.DataSource = "localhost";  			}  			else {  				//иначе - встроенный сервер  				fc_new.ServerType = FbServerType.Embedded;  				//встроенный сервер  				fc_new.ClientLibrary = ".\\fbembed.dll";  			}  			//fc_new.ServerType = FbServerType.Embedded;  			//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  			fc_new.Charset = "win1251";  			//при создании новой базы кодировку желательно указывать  			fc_new.UserID = "dbadmin";  			fc_new.Password = "cnhfiysq";  			//create database  			try {  				FbConnection.CreateDatabase (fc_new.ConnectionString' true);  			}  			catch (FbException ex) {  				MessageBox.Show (ex.Message);  			}  			//теперь запускаем процесс анализа метаданных  			SetImage (2' "Node3_1");  			this.l_.Text = "Analyze database";  			this.p_load.Visible = true;  			Task t1 = run_ ();  			await t1;  			t1.Dispose ();  			SetImage (3' "Node3_1");  			this.p_load.Image = null;  			this.p_load.Visible = false;  			this.progressBar1.Visible = true;  			//создаем базу  			//Накатываем первую часть  			this.progressBar1.Maximum = 100;  			this.l_.Text = "Create data";  			//запустим таймер отображения  			this.timer1.Enabled = true;  			Task t2 = run2_ ();  			await t2;  			t2.Dispose ();  			//замена базы  			if (sb.Length <= 0) {  				//обновляем параметр  				update_param (this.t_sysdba_new.Text);  				if (is_replace.Checked) {  					this.progressBar1.Value = 0;  					//while(f.Attributes == FileAttributes.  					SetImage (2' "Node3_5");  					Action a_r = run_replace;  					await Task.Run (a_r);  					SetImage (3' "Node3_5");  				}  				//конец  				SetImage (3' "Node3");  			}  		}  		if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  			SetImage (2' "Node4");  			this.l_.Text = "Восстановление пользователей";  			Action a = run_user;  			await Task.Run (a);  			SetImage (3' "Node4");  		}  		this.timer1.Enabled = false;  		this.b_next.Enabled = true;  		is_may_close = true;  		this.b_next.PerformClick ();  	}  	else if (i == 5) {  		Application.Exit ();  	}  }  else {  	i--;  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (is_ok) {  	set_tab (i);  	if (i == 3) {  		is_may_close = false;  		//теперь настройка содержания  		if (is_convert.Checked) {  			treeView1.Nodes ["Node3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  		}  		if (is_install.Checked) {  			treeView1.Nodes ["Node0"].ImageIndex = 1;  			treeView1.Nodes ["Node1"].ImageIndex = 1;  			treeView1.Nodes ["Node2"].ImageIndex = 1;  		}  		if (is_convert.Checked && is_install.Checked) {  			treeView1.Nodes ["Node4"].ImageIndex = 1;  		}  		this.treeView1.Refresh ();  		if (this.is_install.Checked) {  			//если нужно установить сервер FB25  			this.l_.Text = "Установка и деинсталляция сервера";  			Action a = new Action (run_setup);  			await Task.Run (a);  			//восстанавливаем системных пользователей  			if (this.is_new_sysdba.Checked) {  				//поставим новый пароль  				fb_up (this.t_sysdba_new.Text);  			}  			this.l_.Text = "Восстанавливаем системных пользователей";  			SetImage (2' "Node2");  			fb_add ("DBADMIN"' "cnhfiysq"' true' "");  			fb_add ("DBREPORT"' "uyjvbr"' true' "");  			fb_add ("REPLICAT"' "dctv"' true' "");  			fb_add ("GUEST"' "gbpltw"' true' "");  			SetImage (3' "Node2");  		}  		if (this.is_convert.Checked) {  			if (!Directory.Exists (temp_folder)) {  				Directory.CreateDirectory (temp_folder);  			}  			//копируем базу  			this.l_.Text = "Копируем базу локально";  			this.p_load.Visible = true;  			Sett.Default.database_original = this.t_database.Text;  			Sett.Default.database_tmp = this.t_database.Text;  			/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  			//если нужно конвертировать базу  			// Старая база  			fc_old.Database = Sett.Default.database_tmp;  			//база' которую нужно конвертировать                  			fc_old.Pooling = false;  			//пул соединения - отсутствует - для более быстрого освобождения базы  			fc_old.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_old.ClientLibrary = ".\\fbembed.dll";  			//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  			fc_old.UserID = "sysdba";  			//пользователь по умолчанию  			fc_old.Password = "masterkey";  			//Пароль можно не указывать  			// Новая база  			database_new = temp_folder + @"\tsql_2_5.gdb";  			fc_new.Database = database_new;  			fc_new.Pooling = false;  			//и вот здесь у нас настройки  			if (this.is_install.Checked) {  				//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  				fc_new.ServerType = FbServerType.Default;  				fc_new.DataSource = "localhost";  			}  			else {  				//иначе - встроенный сервер  				fc_new.ServerType = FbServerType.Embedded;  				//встроенный сервер  				fc_new.ClientLibrary = ".\\fbembed.dll";  			}  			//fc_new.ServerType = FbServerType.Embedded;  			//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  			fc_new.Charset = "win1251";  			//при создании новой базы кодировку желательно указывать  			fc_new.UserID = "dbadmin";  			fc_new.Password = "cnhfiysq";  			//create database  			try {  				FbConnection.CreateDatabase (fc_new.ConnectionString' true);  			}  			catch (FbException ex) {  				MessageBox.Show (ex.Message);  			}  			//теперь запускаем процесс анализа метаданных  			SetImage (2' "Node3_1");  			this.l_.Text = "Analyze database";  			this.p_load.Visible = true;  			Task t1 = run_ ();  			await t1;  			t1.Dispose ();  			SetImage (3' "Node3_1");  			this.p_load.Image = null;  			this.p_load.Visible = false;  			this.progressBar1.Visible = true;  			//создаем базу  			//Накатываем первую часть  			this.progressBar1.Maximum = 100;  			this.l_.Text = "Create data";  			//запустим таймер отображения  			this.timer1.Enabled = true;  			Task t2 = run2_ ();  			await t2;  			t2.Dispose ();  			//замена базы  			if (sb.Length <= 0) {  				//обновляем параметр  				update_param (this.t_sysdba_new.Text);  				if (is_replace.Checked) {  					this.progressBar1.Value = 0;  					//while(f.Attributes == FileAttributes.  					SetImage (2' "Node3_5");  					Action a_r = run_replace;  					await Task.Run (a_r);  					SetImage (3' "Node3_5");  				}  				//конец  				SetImage (3' "Node3");  			}  		}  		if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  			SetImage (2' "Node4");  			this.l_.Text = "Восстановление пользователей";  			Action a = run_user;  			await Task.Run (a);  			SetImage (3' "Node4");  		}  		this.timer1.Enabled = false;  		this.b_next.Enabled = true;  		is_may_close = true;  		this.b_next.PerformClick ();  	}  	else if (i == 5) {  		Application.Exit ();  	}  }  else {  	i--;  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (is_ok) {  	set_tab (i);  	if (i == 3) {  		is_may_close = false;  		//теперь настройка содержания  		if (is_convert.Checked) {  			treeView1.Nodes ["Node3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  			treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  		}  		if (is_install.Checked) {  			treeView1.Nodes ["Node0"].ImageIndex = 1;  			treeView1.Nodes ["Node1"].ImageIndex = 1;  			treeView1.Nodes ["Node2"].ImageIndex = 1;  		}  		if (is_convert.Checked && is_install.Checked) {  			treeView1.Nodes ["Node4"].ImageIndex = 1;  		}  		this.treeView1.Refresh ();  		if (this.is_install.Checked) {  			//если нужно установить сервер FB25  			this.l_.Text = "Установка и деинсталляция сервера";  			Action a = new Action (run_setup);  			await Task.Run (a);  			//восстанавливаем системных пользователей  			if (this.is_new_sysdba.Checked) {  				//поставим новый пароль  				fb_up (this.t_sysdba_new.Text);  			}  			this.l_.Text = "Восстанавливаем системных пользователей";  			SetImage (2' "Node2");  			fb_add ("DBADMIN"' "cnhfiysq"' true' "");  			fb_add ("DBREPORT"' "uyjvbr"' true' "");  			fb_add ("REPLICAT"' "dctv"' true' "");  			fb_add ("GUEST"' "gbpltw"' true' "");  			SetImage (3' "Node2");  		}  		if (this.is_convert.Checked) {  			if (!Directory.Exists (temp_folder)) {  				Directory.CreateDirectory (temp_folder);  			}  			//копируем базу  			this.l_.Text = "Копируем базу локально";  			this.p_load.Visible = true;  			Sett.Default.database_original = this.t_database.Text;  			Sett.Default.database_tmp = this.t_database.Text;  			/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  			//если нужно конвертировать базу  			// Старая база  			fc_old.Database = Sett.Default.database_tmp;  			//база' которую нужно конвертировать                  			fc_old.Pooling = false;  			//пул соединения - отсутствует - для более быстрого освобождения базы  			fc_old.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_old.ClientLibrary = ".\\fbembed.dll";  			//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  			fc_old.UserID = "sysdba";  			//пользователь по умолчанию  			fc_old.Password = "masterkey";  			//Пароль можно не указывать  			// Новая база  			database_new = temp_folder + @"\tsql_2_5.gdb";  			fc_new.Database = database_new;  			fc_new.Pooling = false;  			//и вот здесь у нас настройки  			if (this.is_install.Checked) {  				//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  				fc_new.ServerType = FbServerType.Default;  				fc_new.DataSource = "localhost";  			}  			else {  				//иначе - встроенный сервер  				fc_new.ServerType = FbServerType.Embedded;  				//встроенный сервер  				fc_new.ClientLibrary = ".\\fbembed.dll";  			}  			//fc_new.ServerType = FbServerType.Embedded;  			//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  			fc_new.Charset = "win1251";  			//при создании новой базы кодировку желательно указывать  			fc_new.UserID = "dbadmin";  			fc_new.Password = "cnhfiysq";  			//create database  			try {  				FbConnection.CreateDatabase (fc_new.ConnectionString' true);  			}  			catch (FbException ex) {  				MessageBox.Show (ex.Message);  			}  			//теперь запускаем процесс анализа метаданных  			SetImage (2' "Node3_1");  			this.l_.Text = "Analyze database";  			this.p_load.Visible = true;  			Task t1 = run_ ();  			await t1;  			t1.Dispose ();  			SetImage (3' "Node3_1");  			this.p_load.Image = null;  			this.p_load.Visible = false;  			this.progressBar1.Visible = true;  			//создаем базу  			//Накатываем первую часть  			this.progressBar1.Maximum = 100;  			this.l_.Text = "Create data";  			//запустим таймер отображения  			this.timer1.Enabled = true;  			Task t2 = run2_ ();  			await t2;  			t2.Dispose ();  			//замена базы  			if (sb.Length <= 0) {  				//обновляем параметр  				update_param (this.t_sysdba_new.Text);  				if (is_replace.Checked) {  					this.progressBar1.Value = 0;  					//while(f.Attributes == FileAttributes.  					SetImage (2' "Node3_5");  					Action a_r = run_replace;  					await Task.Run (a_r);  					SetImage (3' "Node3_5");  				}  				//конец  				SetImage (3' "Node3");  			}  		}  		if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  			SetImage (2' "Node4");  			this.l_.Text = "Восстановление пользователей";  			Action a = run_user;  			await Task.Run (a);  			SetImage (3' "Node4");  		}  		this.timer1.Enabled = false;  		this.b_next.Enabled = true;  		is_may_close = true;  		this.b_next.PerformClick ();  	}  	else if (i == 5) {  		Application.Exit ();  	}  }  else {  	i--;  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (i == 3) {  	is_may_close = false;  	//теперь настройка содержания  	if (is_convert.Checked) {  		treeView1.Nodes ["Node3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  	}  	if (is_install.Checked) {  		treeView1.Nodes ["Node0"].ImageIndex = 1;  		treeView1.Nodes ["Node1"].ImageIndex = 1;  		treeView1.Nodes ["Node2"].ImageIndex = 1;  	}  	if (is_convert.Checked && is_install.Checked) {  		treeView1.Nodes ["Node4"].ImageIndex = 1;  	}  	this.treeView1.Refresh ();  	if (this.is_install.Checked) {  		//если нужно установить сервер FB25  		this.l_.Text = "Установка и деинсталляция сервера";  		Action a = new Action (run_setup);  		await Task.Run (a);  		//восстанавливаем системных пользователей  		if (this.is_new_sysdba.Checked) {  			//поставим новый пароль  			fb_up (this.t_sysdba_new.Text);  		}  		this.l_.Text = "Восстанавливаем системных пользователей";  		SetImage (2' "Node2");  		fb_add ("DBADMIN"' "cnhfiysq"' true' "");  		fb_add ("DBREPORT"' "uyjvbr"' true' "");  		fb_add ("REPLICAT"' "dctv"' true' "");  		fb_add ("GUEST"' "gbpltw"' true' "");  		SetImage (3' "Node2");  	}  	if (this.is_convert.Checked) {  		if (!Directory.Exists (temp_folder)) {  			Directory.CreateDirectory (temp_folder);  		}  		//копируем базу  		this.l_.Text = "Копируем базу локально";  		this.p_load.Visible = true;  		Sett.Default.database_original = this.t_database.Text;  		Sett.Default.database_tmp = this.t_database.Text;  		/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  		//если нужно конвертировать базу  		// Старая база  		fc_old.Database = Sett.Default.database_tmp;  		//база' которую нужно конвертировать                  		fc_old.Pooling = false;  		//пул соединения - отсутствует - для более быстрого освобождения базы  		fc_old.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_old.ClientLibrary = ".\\fbembed.dll";  		//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  		fc_old.UserID = "sysdba";  		//пользователь по умолчанию  		fc_old.Password = "masterkey";  		//Пароль можно не указывать  		// Новая база  		database_new = temp_folder + @"\tsql_2_5.gdb";  		fc_new.Database = database_new;  		fc_new.Pooling = false;  		//и вот здесь у нас настройки  		if (this.is_install.Checked) {  			//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  			fc_new.ServerType = FbServerType.Default;  			fc_new.DataSource = "localhost";  		}  		else {  			//иначе - встроенный сервер  			fc_new.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_new.ClientLibrary = ".\\fbembed.dll";  		}  		//fc_new.ServerType = FbServerType.Embedded;  		//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  		fc_new.Charset = "win1251";  		//при создании новой базы кодировку желательно указывать  		fc_new.UserID = "dbadmin";  		fc_new.Password = "cnhfiysq";  		//create database  		try {  			FbConnection.CreateDatabase (fc_new.ConnectionString' true);  		}  		catch (FbException ex) {  			MessageBox.Show (ex.Message);  		}  		//теперь запускаем процесс анализа метаданных  		SetImage (2' "Node3_1");  		this.l_.Text = "Analyze database";  		this.p_load.Visible = true;  		Task t1 = run_ ();  		await t1;  		t1.Dispose ();  		SetImage (3' "Node3_1");  		this.p_load.Image = null;  		this.p_load.Visible = false;  		this.progressBar1.Visible = true;  		//создаем базу  		//Накатываем первую часть  		this.progressBar1.Maximum = 100;  		this.l_.Text = "Create data";  		//запустим таймер отображения  		this.timer1.Enabled = true;  		Task t2 = run2_ ();  		await t2;  		t2.Dispose ();  		//замена базы  		if (sb.Length <= 0) {  			//обновляем параметр  			update_param (this.t_sysdba_new.Text);  			if (is_replace.Checked) {  				this.progressBar1.Value = 0;  				//while(f.Attributes == FileAttributes.  				SetImage (2' "Node3_5");  				Action a_r = run_replace;  				await Task.Run (a_r);  				SetImage (3' "Node3_5");  			}  			//конец  			SetImage (3' "Node3");  		}  	}  	if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  		SetImage (2' "Node4");  		this.l_.Text = "Восстановление пользователей";  		Action a = run_user;  		await Task.Run (a);  		SetImage (3' "Node4");  	}  	this.timer1.Enabled = false;  	this.b_next.Enabled = true;  	is_may_close = true;  	this.b_next.PerformClick ();  }  else if (i == 5) {  	Application.Exit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (i == 3) {  	is_may_close = false;  	//теперь настройка содержания  	if (is_convert.Checked) {  		treeView1.Nodes ["Node3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  	}  	if (is_install.Checked) {  		treeView1.Nodes ["Node0"].ImageIndex = 1;  		treeView1.Nodes ["Node1"].ImageIndex = 1;  		treeView1.Nodes ["Node2"].ImageIndex = 1;  	}  	if (is_convert.Checked && is_install.Checked) {  		treeView1.Nodes ["Node4"].ImageIndex = 1;  	}  	this.treeView1.Refresh ();  	if (this.is_install.Checked) {  		//если нужно установить сервер FB25  		this.l_.Text = "Установка и деинсталляция сервера";  		Action a = new Action (run_setup);  		await Task.Run (a);  		//восстанавливаем системных пользователей  		if (this.is_new_sysdba.Checked) {  			//поставим новый пароль  			fb_up (this.t_sysdba_new.Text);  		}  		this.l_.Text = "Восстанавливаем системных пользователей";  		SetImage (2' "Node2");  		fb_add ("DBADMIN"' "cnhfiysq"' true' "");  		fb_add ("DBREPORT"' "uyjvbr"' true' "");  		fb_add ("REPLICAT"' "dctv"' true' "");  		fb_add ("GUEST"' "gbpltw"' true' "");  		SetImage (3' "Node2");  	}  	if (this.is_convert.Checked) {  		if (!Directory.Exists (temp_folder)) {  			Directory.CreateDirectory (temp_folder);  		}  		//копируем базу  		this.l_.Text = "Копируем базу локально";  		this.p_load.Visible = true;  		Sett.Default.database_original = this.t_database.Text;  		Sett.Default.database_tmp = this.t_database.Text;  		/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  		//если нужно конвертировать базу  		// Старая база  		fc_old.Database = Sett.Default.database_tmp;  		//база' которую нужно конвертировать                  		fc_old.Pooling = false;  		//пул соединения - отсутствует - для более быстрого освобождения базы  		fc_old.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_old.ClientLibrary = ".\\fbembed.dll";  		//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  		fc_old.UserID = "sysdba";  		//пользователь по умолчанию  		fc_old.Password = "masterkey";  		//Пароль можно не указывать  		// Новая база  		database_new = temp_folder + @"\tsql_2_5.gdb";  		fc_new.Database = database_new;  		fc_new.Pooling = false;  		//и вот здесь у нас настройки  		if (this.is_install.Checked) {  			//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  			fc_new.ServerType = FbServerType.Default;  			fc_new.DataSource = "localhost";  		}  		else {  			//иначе - встроенный сервер  			fc_new.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_new.ClientLibrary = ".\\fbembed.dll";  		}  		//fc_new.ServerType = FbServerType.Embedded;  		//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  		fc_new.Charset = "win1251";  		//при создании новой базы кодировку желательно указывать  		fc_new.UserID = "dbadmin";  		fc_new.Password = "cnhfiysq";  		//create database  		try {  			FbConnection.CreateDatabase (fc_new.ConnectionString' true);  		}  		catch (FbException ex) {  			MessageBox.Show (ex.Message);  		}  		//теперь запускаем процесс анализа метаданных  		SetImage (2' "Node3_1");  		this.l_.Text = "Analyze database";  		this.p_load.Visible = true;  		Task t1 = run_ ();  		await t1;  		t1.Dispose ();  		SetImage (3' "Node3_1");  		this.p_load.Image = null;  		this.p_load.Visible = false;  		this.progressBar1.Visible = true;  		//создаем базу  		//Накатываем первую часть  		this.progressBar1.Maximum = 100;  		this.l_.Text = "Create data";  		//запустим таймер отображения  		this.timer1.Enabled = true;  		Task t2 = run2_ ();  		await t2;  		t2.Dispose ();  		//замена базы  		if (sb.Length <= 0) {  			//обновляем параметр  			update_param (this.t_sysdba_new.Text);  			if (is_replace.Checked) {  				this.progressBar1.Value = 0;  				//while(f.Attributes == FileAttributes.  				SetImage (2' "Node3_5");  				Action a_r = run_replace;  				await Task.Run (a_r);  				SetImage (3' "Node3_5");  			}  			//конец  			SetImage (3' "Node3");  		}  	}  	if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  		SetImage (2' "Node4");  		this.l_.Text = "Восстановление пользователей";  		Action a = run_user;  		await Task.Run (a);  		SetImage (3' "Node4");  	}  	this.timer1.Enabled = false;  	this.b_next.Enabled = true;  	is_may_close = true;  	this.b_next.PerformClick ();  }  else if (i == 5) {  	Application.Exit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (i == 3) {  	is_may_close = false;  	//теперь настройка содержания  	if (is_convert.Checked) {  		treeView1.Nodes ["Node3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  	}  	if (is_install.Checked) {  		treeView1.Nodes ["Node0"].ImageIndex = 1;  		treeView1.Nodes ["Node1"].ImageIndex = 1;  		treeView1.Nodes ["Node2"].ImageIndex = 1;  	}  	if (is_convert.Checked && is_install.Checked) {  		treeView1.Nodes ["Node4"].ImageIndex = 1;  	}  	this.treeView1.Refresh ();  	if (this.is_install.Checked) {  		//если нужно установить сервер FB25  		this.l_.Text = "Установка и деинсталляция сервера";  		Action a = new Action (run_setup);  		await Task.Run (a);  		//восстанавливаем системных пользователей  		if (this.is_new_sysdba.Checked) {  			//поставим новый пароль  			fb_up (this.t_sysdba_new.Text);  		}  		this.l_.Text = "Восстанавливаем системных пользователей";  		SetImage (2' "Node2");  		fb_add ("DBADMIN"' "cnhfiysq"' true' "");  		fb_add ("DBREPORT"' "uyjvbr"' true' "");  		fb_add ("REPLICAT"' "dctv"' true' "");  		fb_add ("GUEST"' "gbpltw"' true' "");  		SetImage (3' "Node2");  	}  	if (this.is_convert.Checked) {  		if (!Directory.Exists (temp_folder)) {  			Directory.CreateDirectory (temp_folder);  		}  		//копируем базу  		this.l_.Text = "Копируем базу локально";  		this.p_load.Visible = true;  		Sett.Default.database_original = this.t_database.Text;  		Sett.Default.database_tmp = this.t_database.Text;  		/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  		//если нужно конвертировать базу  		// Старая база  		fc_old.Database = Sett.Default.database_tmp;  		//база' которую нужно конвертировать                  		fc_old.Pooling = false;  		//пул соединения - отсутствует - для более быстрого освобождения базы  		fc_old.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_old.ClientLibrary = ".\\fbembed.dll";  		//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  		fc_old.UserID = "sysdba";  		//пользователь по умолчанию  		fc_old.Password = "masterkey";  		//Пароль можно не указывать  		// Новая база  		database_new = temp_folder + @"\tsql_2_5.gdb";  		fc_new.Database = database_new;  		fc_new.Pooling = false;  		//и вот здесь у нас настройки  		if (this.is_install.Checked) {  			//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  			fc_new.ServerType = FbServerType.Default;  			fc_new.DataSource = "localhost";  		}  		else {  			//иначе - встроенный сервер  			fc_new.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_new.ClientLibrary = ".\\fbembed.dll";  		}  		//fc_new.ServerType = FbServerType.Embedded;  		//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  		fc_new.Charset = "win1251";  		//при создании новой базы кодировку желательно указывать  		fc_new.UserID = "dbadmin";  		fc_new.Password = "cnhfiysq";  		//create database  		try {  			FbConnection.CreateDatabase (fc_new.ConnectionString' true);  		}  		catch (FbException ex) {  			MessageBox.Show (ex.Message);  		}  		//теперь запускаем процесс анализа метаданных  		SetImage (2' "Node3_1");  		this.l_.Text = "Analyze database";  		this.p_load.Visible = true;  		Task t1 = run_ ();  		await t1;  		t1.Dispose ();  		SetImage (3' "Node3_1");  		this.p_load.Image = null;  		this.p_load.Visible = false;  		this.progressBar1.Visible = true;  		//создаем базу  		//Накатываем первую часть  		this.progressBar1.Maximum = 100;  		this.l_.Text = "Create data";  		//запустим таймер отображения  		this.timer1.Enabled = true;  		Task t2 = run2_ ();  		await t2;  		t2.Dispose ();  		//замена базы  		if (sb.Length <= 0) {  			//обновляем параметр  			update_param (this.t_sysdba_new.Text);  			if (is_replace.Checked) {  				this.progressBar1.Value = 0;  				//while(f.Attributes == FileAttributes.  				SetImage (2' "Node3_5");  				Action a_r = run_replace;  				await Task.Run (a_r);  				SetImage (3' "Node3_5");  			}  			//конец  			SetImage (3' "Node3");  		}  	}  	if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  		SetImage (2' "Node4");  		this.l_.Text = "Восстановление пользователей";  		Action a = run_user;  		await Task.Run (a);  		SetImage (3' "Node4");  	}  	this.timer1.Enabled = false;  	this.b_next.Enabled = true;  	is_may_close = true;  	this.b_next.PerformClick ();  }  else if (i == 5) {  	Application.Exit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (i == 3) {  	is_may_close = false;  	//теперь настройка содержания  	if (is_convert.Checked) {  		treeView1.Nodes ["Node3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  	}  	if (is_install.Checked) {  		treeView1.Nodes ["Node0"].ImageIndex = 1;  		treeView1.Nodes ["Node1"].ImageIndex = 1;  		treeView1.Nodes ["Node2"].ImageIndex = 1;  	}  	if (is_convert.Checked && is_install.Checked) {  		treeView1.Nodes ["Node4"].ImageIndex = 1;  	}  	this.treeView1.Refresh ();  	if (this.is_install.Checked) {  		//если нужно установить сервер FB25  		this.l_.Text = "Установка и деинсталляция сервера";  		Action a = new Action (run_setup);  		await Task.Run (a);  		//восстанавливаем системных пользователей  		if (this.is_new_sysdba.Checked) {  			//поставим новый пароль  			fb_up (this.t_sysdba_new.Text);  		}  		this.l_.Text = "Восстанавливаем системных пользователей";  		SetImage (2' "Node2");  		fb_add ("DBADMIN"' "cnhfiysq"' true' "");  		fb_add ("DBREPORT"' "uyjvbr"' true' "");  		fb_add ("REPLICAT"' "dctv"' true' "");  		fb_add ("GUEST"' "gbpltw"' true' "");  		SetImage (3' "Node2");  	}  	if (this.is_convert.Checked) {  		if (!Directory.Exists (temp_folder)) {  			Directory.CreateDirectory (temp_folder);  		}  		//копируем базу  		this.l_.Text = "Копируем базу локально";  		this.p_load.Visible = true;  		Sett.Default.database_original = this.t_database.Text;  		Sett.Default.database_tmp = this.t_database.Text;  		/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  		//если нужно конвертировать базу  		// Старая база  		fc_old.Database = Sett.Default.database_tmp;  		//база' которую нужно конвертировать                  		fc_old.Pooling = false;  		//пул соединения - отсутствует - для более быстрого освобождения базы  		fc_old.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_old.ClientLibrary = ".\\fbembed.dll";  		//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  		fc_old.UserID = "sysdba";  		//пользователь по умолчанию  		fc_old.Password = "masterkey";  		//Пароль можно не указывать  		// Новая база  		database_new = temp_folder + @"\tsql_2_5.gdb";  		fc_new.Database = database_new;  		fc_new.Pooling = false;  		//и вот здесь у нас настройки  		if (this.is_install.Checked) {  			//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  			fc_new.ServerType = FbServerType.Default;  			fc_new.DataSource = "localhost";  		}  		else {  			//иначе - встроенный сервер  			fc_new.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_new.ClientLibrary = ".\\fbembed.dll";  		}  		//fc_new.ServerType = FbServerType.Embedded;  		//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  		fc_new.Charset = "win1251";  		//при создании новой базы кодировку желательно указывать  		fc_new.UserID = "dbadmin";  		fc_new.Password = "cnhfiysq";  		//create database  		try {  			FbConnection.CreateDatabase (fc_new.ConnectionString' true);  		}  		catch (FbException ex) {  			MessageBox.Show (ex.Message);  		}  		//теперь запускаем процесс анализа метаданных  		SetImage (2' "Node3_1");  		this.l_.Text = "Analyze database";  		this.p_load.Visible = true;  		Task t1 = run_ ();  		await t1;  		t1.Dispose ();  		SetImage (3' "Node3_1");  		this.p_load.Image = null;  		this.p_load.Visible = false;  		this.progressBar1.Visible = true;  		//создаем базу  		//Накатываем первую часть  		this.progressBar1.Maximum = 100;  		this.l_.Text = "Create data";  		//запустим таймер отображения  		this.timer1.Enabled = true;  		Task t2 = run2_ ();  		await t2;  		t2.Dispose ();  		//замена базы  		if (sb.Length <= 0) {  			//обновляем параметр  			update_param (this.t_sysdba_new.Text);  			if (is_replace.Checked) {  				this.progressBar1.Value = 0;  				//while(f.Attributes == FileAttributes.  				SetImage (2' "Node3_5");  				Action a_r = run_replace;  				await Task.Run (a_r);  				SetImage (3' "Node3_5");  			}  			//конец  			SetImage (3' "Node3");  		}  	}  	if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  		SetImage (2' "Node4");  		this.l_.Text = "Восстановление пользователей";  		Action a = run_user;  		await Task.Run (a);  		SetImage (3' "Node4");  	}  	this.timer1.Enabled = false;  	this.b_next.Enabled = true;  	is_may_close = true;  	this.b_next.PerformClick ();  }  else if (i == 5) {  	Application.Exit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (i == 3) {  	is_may_close = false;  	//теперь настройка содержания  	if (is_convert.Checked) {  		treeView1.Nodes ["Node3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  	}  	if (is_install.Checked) {  		treeView1.Nodes ["Node0"].ImageIndex = 1;  		treeView1.Nodes ["Node1"].ImageIndex = 1;  		treeView1.Nodes ["Node2"].ImageIndex = 1;  	}  	if (is_convert.Checked && is_install.Checked) {  		treeView1.Nodes ["Node4"].ImageIndex = 1;  	}  	this.treeView1.Refresh ();  	if (this.is_install.Checked) {  		//если нужно установить сервер FB25  		this.l_.Text = "Установка и деинсталляция сервера";  		Action a = new Action (run_setup);  		await Task.Run (a);  		//восстанавливаем системных пользователей  		if (this.is_new_sysdba.Checked) {  			//поставим новый пароль  			fb_up (this.t_sysdba_new.Text);  		}  		this.l_.Text = "Восстанавливаем системных пользователей";  		SetImage (2' "Node2");  		fb_add ("DBADMIN"' "cnhfiysq"' true' "");  		fb_add ("DBREPORT"' "uyjvbr"' true' "");  		fb_add ("REPLICAT"' "dctv"' true' "");  		fb_add ("GUEST"' "gbpltw"' true' "");  		SetImage (3' "Node2");  	}  	if (this.is_convert.Checked) {  		if (!Directory.Exists (temp_folder)) {  			Directory.CreateDirectory (temp_folder);  		}  		//копируем базу  		this.l_.Text = "Копируем базу локально";  		this.p_load.Visible = true;  		Sett.Default.database_original = this.t_database.Text;  		Sett.Default.database_tmp = this.t_database.Text;  		/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  		//если нужно конвертировать базу  		// Старая база  		fc_old.Database = Sett.Default.database_tmp;  		//база' которую нужно конвертировать                  		fc_old.Pooling = false;  		//пул соединения - отсутствует - для более быстрого освобождения базы  		fc_old.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_old.ClientLibrary = ".\\fbembed.dll";  		//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  		fc_old.UserID = "sysdba";  		//пользователь по умолчанию  		fc_old.Password = "masterkey";  		//Пароль можно не указывать  		// Новая база  		database_new = temp_folder + @"\tsql_2_5.gdb";  		fc_new.Database = database_new;  		fc_new.Pooling = false;  		//и вот здесь у нас настройки  		if (this.is_install.Checked) {  			//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  			fc_new.ServerType = FbServerType.Default;  			fc_new.DataSource = "localhost";  		}  		else {  			//иначе - встроенный сервер  			fc_new.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_new.ClientLibrary = ".\\fbembed.dll";  		}  		//fc_new.ServerType = FbServerType.Embedded;  		//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  		fc_new.Charset = "win1251";  		//при создании новой базы кодировку желательно указывать  		fc_new.UserID = "dbadmin";  		fc_new.Password = "cnhfiysq";  		//create database  		try {  			FbConnection.CreateDatabase (fc_new.ConnectionString' true);  		}  		catch (FbException ex) {  			MessageBox.Show (ex.Message);  		}  		//теперь запускаем процесс анализа метаданных  		SetImage (2' "Node3_1");  		this.l_.Text = "Analyze database";  		this.p_load.Visible = true;  		Task t1 = run_ ();  		await t1;  		t1.Dispose ();  		SetImage (3' "Node3_1");  		this.p_load.Image = null;  		this.p_load.Visible = false;  		this.progressBar1.Visible = true;  		//создаем базу  		//Накатываем первую часть  		this.progressBar1.Maximum = 100;  		this.l_.Text = "Create data";  		//запустим таймер отображения  		this.timer1.Enabled = true;  		Task t2 = run2_ ();  		await t2;  		t2.Dispose ();  		//замена базы  		if (sb.Length <= 0) {  			//обновляем параметр  			update_param (this.t_sysdba_new.Text);  			if (is_replace.Checked) {  				this.progressBar1.Value = 0;  				//while(f.Attributes == FileAttributes.  				SetImage (2' "Node3_5");  				Action a_r = run_replace;  				await Task.Run (a_r);  				SetImage (3' "Node3_5");  			}  			//конец  			SetImage (3' "Node3");  		}  	}  	if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  		SetImage (2' "Node4");  		this.l_.Text = "Восстановление пользователей";  		Action a = run_user;  		await Task.Run (a);  		SetImage (3' "Node4");  	}  	this.timer1.Enabled = false;  	this.b_next.Enabled = true;  	is_may_close = true;  	this.b_next.PerformClick ();  }  else if (i == 5) {  	Application.Exit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (i == 3) {  	is_may_close = false;  	//теперь настройка содержания  	if (is_convert.Checked) {  		treeView1.Nodes ["Node3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  	}  	if (is_install.Checked) {  		treeView1.Nodes ["Node0"].ImageIndex = 1;  		treeView1.Nodes ["Node1"].ImageIndex = 1;  		treeView1.Nodes ["Node2"].ImageIndex = 1;  	}  	if (is_convert.Checked && is_install.Checked) {  		treeView1.Nodes ["Node4"].ImageIndex = 1;  	}  	this.treeView1.Refresh ();  	if (this.is_install.Checked) {  		//если нужно установить сервер FB25  		this.l_.Text = "Установка и деинсталляция сервера";  		Action a = new Action (run_setup);  		await Task.Run (a);  		//восстанавливаем системных пользователей  		if (this.is_new_sysdba.Checked) {  			//поставим новый пароль  			fb_up (this.t_sysdba_new.Text);  		}  		this.l_.Text = "Восстанавливаем системных пользователей";  		SetImage (2' "Node2");  		fb_add ("DBADMIN"' "cnhfiysq"' true' "");  		fb_add ("DBREPORT"' "uyjvbr"' true' "");  		fb_add ("REPLICAT"' "dctv"' true' "");  		fb_add ("GUEST"' "gbpltw"' true' "");  		SetImage (3' "Node2");  	}  	if (this.is_convert.Checked) {  		if (!Directory.Exists (temp_folder)) {  			Directory.CreateDirectory (temp_folder);  		}  		//копируем базу  		this.l_.Text = "Копируем базу локально";  		this.p_load.Visible = true;  		Sett.Default.database_original = this.t_database.Text;  		Sett.Default.database_tmp = this.t_database.Text;  		/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  		//если нужно конвертировать базу  		// Старая база  		fc_old.Database = Sett.Default.database_tmp;  		//база' которую нужно конвертировать                  		fc_old.Pooling = false;  		//пул соединения - отсутствует - для более быстрого освобождения базы  		fc_old.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_old.ClientLibrary = ".\\fbembed.dll";  		//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  		fc_old.UserID = "sysdba";  		//пользователь по умолчанию  		fc_old.Password = "masterkey";  		//Пароль можно не указывать  		// Новая база  		database_new = temp_folder + @"\tsql_2_5.gdb";  		fc_new.Database = database_new;  		fc_new.Pooling = false;  		//и вот здесь у нас настройки  		if (this.is_install.Checked) {  			//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  			fc_new.ServerType = FbServerType.Default;  			fc_new.DataSource = "localhost";  		}  		else {  			//иначе - встроенный сервер  			fc_new.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_new.ClientLibrary = ".\\fbembed.dll";  		}  		//fc_new.ServerType = FbServerType.Embedded;  		//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  		fc_new.Charset = "win1251";  		//при создании новой базы кодировку желательно указывать  		fc_new.UserID = "dbadmin";  		fc_new.Password = "cnhfiysq";  		//create database  		try {  			FbConnection.CreateDatabase (fc_new.ConnectionString' true);  		}  		catch (FbException ex) {  			MessageBox.Show (ex.Message);  		}  		//теперь запускаем процесс анализа метаданных  		SetImage (2' "Node3_1");  		this.l_.Text = "Analyze database";  		this.p_load.Visible = true;  		Task t1 = run_ ();  		await t1;  		t1.Dispose ();  		SetImage (3' "Node3_1");  		this.p_load.Image = null;  		this.p_load.Visible = false;  		this.progressBar1.Visible = true;  		//создаем базу  		//Накатываем первую часть  		this.progressBar1.Maximum = 100;  		this.l_.Text = "Create data";  		//запустим таймер отображения  		this.timer1.Enabled = true;  		Task t2 = run2_ ();  		await t2;  		t2.Dispose ();  		//замена базы  		if (sb.Length <= 0) {  			//обновляем параметр  			update_param (this.t_sysdba_new.Text);  			if (is_replace.Checked) {  				this.progressBar1.Value = 0;  				//while(f.Attributes == FileAttributes.  				SetImage (2' "Node3_5");  				Action a_r = run_replace;  				await Task.Run (a_r);  				SetImage (3' "Node3_5");  			}  			//конец  			SetImage (3' "Node3");  		}  	}  	if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  		SetImage (2' "Node4");  		this.l_.Text = "Восстановление пользователей";  		Action a = run_user;  		await Task.Run (a);  		SetImage (3' "Node4");  	}  	this.timer1.Enabled = false;  	this.b_next.Enabled = true;  	is_may_close = true;  	this.b_next.PerformClick ();  }  else if (i == 5) {  	Application.Exit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (i == 3) {  	is_may_close = false;  	//теперь настройка содержания  	if (is_convert.Checked) {  		treeView1.Nodes ["Node3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  	}  	if (is_install.Checked) {  		treeView1.Nodes ["Node0"].ImageIndex = 1;  		treeView1.Nodes ["Node1"].ImageIndex = 1;  		treeView1.Nodes ["Node2"].ImageIndex = 1;  	}  	if (is_convert.Checked && is_install.Checked) {  		treeView1.Nodes ["Node4"].ImageIndex = 1;  	}  	this.treeView1.Refresh ();  	if (this.is_install.Checked) {  		//если нужно установить сервер FB25  		this.l_.Text = "Установка и деинсталляция сервера";  		Action a = new Action (run_setup);  		await Task.Run (a);  		//восстанавливаем системных пользователей  		if (this.is_new_sysdba.Checked) {  			//поставим новый пароль  			fb_up (this.t_sysdba_new.Text);  		}  		this.l_.Text = "Восстанавливаем системных пользователей";  		SetImage (2' "Node2");  		fb_add ("DBADMIN"' "cnhfiysq"' true' "");  		fb_add ("DBREPORT"' "uyjvbr"' true' "");  		fb_add ("REPLICAT"' "dctv"' true' "");  		fb_add ("GUEST"' "gbpltw"' true' "");  		SetImage (3' "Node2");  	}  	if (this.is_convert.Checked) {  		if (!Directory.Exists (temp_folder)) {  			Directory.CreateDirectory (temp_folder);  		}  		//копируем базу  		this.l_.Text = "Копируем базу локально";  		this.p_load.Visible = true;  		Sett.Default.database_original = this.t_database.Text;  		Sett.Default.database_tmp = this.t_database.Text;  		/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  		//если нужно конвертировать базу  		// Старая база  		fc_old.Database = Sett.Default.database_tmp;  		//база' которую нужно конвертировать                  		fc_old.Pooling = false;  		//пул соединения - отсутствует - для более быстрого освобождения базы  		fc_old.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_old.ClientLibrary = ".\\fbembed.dll";  		//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  		fc_old.UserID = "sysdba";  		//пользователь по умолчанию  		fc_old.Password = "masterkey";  		//Пароль можно не указывать  		// Новая база  		database_new = temp_folder + @"\tsql_2_5.gdb";  		fc_new.Database = database_new;  		fc_new.Pooling = false;  		//и вот здесь у нас настройки  		if (this.is_install.Checked) {  			//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  			fc_new.ServerType = FbServerType.Default;  			fc_new.DataSource = "localhost";  		}  		else {  			//иначе - встроенный сервер  			fc_new.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_new.ClientLibrary = ".\\fbembed.dll";  		}  		//fc_new.ServerType = FbServerType.Embedded;  		//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  		fc_new.Charset = "win1251";  		//при создании новой базы кодировку желательно указывать  		fc_new.UserID = "dbadmin";  		fc_new.Password = "cnhfiysq";  		//create database  		try {  			FbConnection.CreateDatabase (fc_new.ConnectionString' true);  		}  		catch (FbException ex) {  			MessageBox.Show (ex.Message);  		}  		//теперь запускаем процесс анализа метаданных  		SetImage (2' "Node3_1");  		this.l_.Text = "Analyze database";  		this.p_load.Visible = true;  		Task t1 = run_ ();  		await t1;  		t1.Dispose ();  		SetImage (3' "Node3_1");  		this.p_load.Image = null;  		this.p_load.Visible = false;  		this.progressBar1.Visible = true;  		//создаем базу  		//Накатываем первую часть  		this.progressBar1.Maximum = 100;  		this.l_.Text = "Create data";  		//запустим таймер отображения  		this.timer1.Enabled = true;  		Task t2 = run2_ ();  		await t2;  		t2.Dispose ();  		//замена базы  		if (sb.Length <= 0) {  			//обновляем параметр  			update_param (this.t_sysdba_new.Text);  			if (is_replace.Checked) {  				this.progressBar1.Value = 0;  				//while(f.Attributes == FileAttributes.  				SetImage (2' "Node3_5");  				Action a_r = run_replace;  				await Task.Run (a_r);  				SetImage (3' "Node3_5");  			}  			//конец  			SetImage (3' "Node3");  		}  	}  	if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  		SetImage (2' "Node4");  		this.l_.Text = "Восстановление пользователей";  		Action a = run_user;  		await Task.Run (a);  		SetImage (3' "Node4");  	}  	this.timer1.Enabled = false;  	this.b_next.Enabled = true;  	is_may_close = true;  	this.b_next.PerformClick ();  }  else if (i == 5) {  	Application.Exit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (i == 3) {  	is_may_close = false;  	//теперь настройка содержания  	if (is_convert.Checked) {  		treeView1.Nodes ["Node3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  	}  	if (is_install.Checked) {  		treeView1.Nodes ["Node0"].ImageIndex = 1;  		treeView1.Nodes ["Node1"].ImageIndex = 1;  		treeView1.Nodes ["Node2"].ImageIndex = 1;  	}  	if (is_convert.Checked && is_install.Checked) {  		treeView1.Nodes ["Node4"].ImageIndex = 1;  	}  	this.treeView1.Refresh ();  	if (this.is_install.Checked) {  		//если нужно установить сервер FB25  		this.l_.Text = "Установка и деинсталляция сервера";  		Action a = new Action (run_setup);  		await Task.Run (a);  		//восстанавливаем системных пользователей  		if (this.is_new_sysdba.Checked) {  			//поставим новый пароль  			fb_up (this.t_sysdba_new.Text);  		}  		this.l_.Text = "Восстанавливаем системных пользователей";  		SetImage (2' "Node2");  		fb_add ("DBADMIN"' "cnhfiysq"' true' "");  		fb_add ("DBREPORT"' "uyjvbr"' true' "");  		fb_add ("REPLICAT"' "dctv"' true' "");  		fb_add ("GUEST"' "gbpltw"' true' "");  		SetImage (3' "Node2");  	}  	if (this.is_convert.Checked) {  		if (!Directory.Exists (temp_folder)) {  			Directory.CreateDirectory (temp_folder);  		}  		//копируем базу  		this.l_.Text = "Копируем базу локально";  		this.p_load.Visible = true;  		Sett.Default.database_original = this.t_database.Text;  		Sett.Default.database_tmp = this.t_database.Text;  		/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  		//если нужно конвертировать базу  		// Старая база  		fc_old.Database = Sett.Default.database_tmp;  		//база' которую нужно конвертировать                  		fc_old.Pooling = false;  		//пул соединения - отсутствует - для более быстрого освобождения базы  		fc_old.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_old.ClientLibrary = ".\\fbembed.dll";  		//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  		fc_old.UserID = "sysdba";  		//пользователь по умолчанию  		fc_old.Password = "masterkey";  		//Пароль можно не указывать  		// Новая база  		database_new = temp_folder + @"\tsql_2_5.gdb";  		fc_new.Database = database_new;  		fc_new.Pooling = false;  		//и вот здесь у нас настройки  		if (this.is_install.Checked) {  			//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  			fc_new.ServerType = FbServerType.Default;  			fc_new.DataSource = "localhost";  		}  		else {  			//иначе - встроенный сервер  			fc_new.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_new.ClientLibrary = ".\\fbembed.dll";  		}  		//fc_new.ServerType = FbServerType.Embedded;  		//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  		fc_new.Charset = "win1251";  		//при создании новой базы кодировку желательно указывать  		fc_new.UserID = "dbadmin";  		fc_new.Password = "cnhfiysq";  		//create database  		try {  			FbConnection.CreateDatabase (fc_new.ConnectionString' true);  		}  		catch (FbException ex) {  			MessageBox.Show (ex.Message);  		}  		//теперь запускаем процесс анализа метаданных  		SetImage (2' "Node3_1");  		this.l_.Text = "Analyze database";  		this.p_load.Visible = true;  		Task t1 = run_ ();  		await t1;  		t1.Dispose ();  		SetImage (3' "Node3_1");  		this.p_load.Image = null;  		this.p_load.Visible = false;  		this.progressBar1.Visible = true;  		//создаем базу  		//Накатываем первую часть  		this.progressBar1.Maximum = 100;  		this.l_.Text = "Create data";  		//запустим таймер отображения  		this.timer1.Enabled = true;  		Task t2 = run2_ ();  		await t2;  		t2.Dispose ();  		//замена базы  		if (sb.Length <= 0) {  			//обновляем параметр  			update_param (this.t_sysdba_new.Text);  			if (is_replace.Checked) {  				this.progressBar1.Value = 0;  				//while(f.Attributes == FileAttributes.  				SetImage (2' "Node3_5");  				Action a_r = run_replace;  				await Task.Run (a_r);  				SetImage (3' "Node3_5");  			}  			//конец  			SetImage (3' "Node3");  		}  	}  	if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  		SetImage (2' "Node4");  		this.l_.Text = "Восстановление пользователей";  		Action a = run_user;  		await Task.Run (a);  		SetImage (3' "Node4");  	}  	this.timer1.Enabled = false;  	this.b_next.Enabled = true;  	is_may_close = true;  	this.b_next.PerformClick ();  }  else if (i == 5) {  	Application.Exit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (i == 3) {  	is_may_close = false;  	//теперь настройка содержания  	if (is_convert.Checked) {  		treeView1.Nodes ["Node3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  	}  	if (is_install.Checked) {  		treeView1.Nodes ["Node0"].ImageIndex = 1;  		treeView1.Nodes ["Node1"].ImageIndex = 1;  		treeView1.Nodes ["Node2"].ImageIndex = 1;  	}  	if (is_convert.Checked && is_install.Checked) {  		treeView1.Nodes ["Node4"].ImageIndex = 1;  	}  	this.treeView1.Refresh ();  	if (this.is_install.Checked) {  		//если нужно установить сервер FB25  		this.l_.Text = "Установка и деинсталляция сервера";  		Action a = new Action (run_setup);  		await Task.Run (a);  		//восстанавливаем системных пользователей  		if (this.is_new_sysdba.Checked) {  			//поставим новый пароль  			fb_up (this.t_sysdba_new.Text);  		}  		this.l_.Text = "Восстанавливаем системных пользователей";  		SetImage (2' "Node2");  		fb_add ("DBADMIN"' "cnhfiysq"' true' "");  		fb_add ("DBREPORT"' "uyjvbr"' true' "");  		fb_add ("REPLICAT"' "dctv"' true' "");  		fb_add ("GUEST"' "gbpltw"' true' "");  		SetImage (3' "Node2");  	}  	if (this.is_convert.Checked) {  		if (!Directory.Exists (temp_folder)) {  			Directory.CreateDirectory (temp_folder);  		}  		//копируем базу  		this.l_.Text = "Копируем базу локально";  		this.p_load.Visible = true;  		Sett.Default.database_original = this.t_database.Text;  		Sett.Default.database_tmp = this.t_database.Text;  		/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  		//если нужно конвертировать базу  		// Старая база  		fc_old.Database = Sett.Default.database_tmp;  		//база' которую нужно конвертировать                  		fc_old.Pooling = false;  		//пул соединения - отсутствует - для более быстрого освобождения базы  		fc_old.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_old.ClientLibrary = ".\\fbembed.dll";  		//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  		fc_old.UserID = "sysdba";  		//пользователь по умолчанию  		fc_old.Password = "masterkey";  		//Пароль можно не указывать  		// Новая база  		database_new = temp_folder + @"\tsql_2_5.gdb";  		fc_new.Database = database_new;  		fc_new.Pooling = false;  		//и вот здесь у нас настройки  		if (this.is_install.Checked) {  			//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  			fc_new.ServerType = FbServerType.Default;  			fc_new.DataSource = "localhost";  		}  		else {  			//иначе - встроенный сервер  			fc_new.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_new.ClientLibrary = ".\\fbembed.dll";  		}  		//fc_new.ServerType = FbServerType.Embedded;  		//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  		fc_new.Charset = "win1251";  		//при создании новой базы кодировку желательно указывать  		fc_new.UserID = "dbadmin";  		fc_new.Password = "cnhfiysq";  		//create database  		try {  			FbConnection.CreateDatabase (fc_new.ConnectionString' true);  		}  		catch (FbException ex) {  			MessageBox.Show (ex.Message);  		}  		//теперь запускаем процесс анализа метаданных  		SetImage (2' "Node3_1");  		this.l_.Text = "Analyze database";  		this.p_load.Visible = true;  		Task t1 = run_ ();  		await t1;  		t1.Dispose ();  		SetImage (3' "Node3_1");  		this.p_load.Image = null;  		this.p_load.Visible = false;  		this.progressBar1.Visible = true;  		//создаем базу  		//Накатываем первую часть  		this.progressBar1.Maximum = 100;  		this.l_.Text = "Create data";  		//запустим таймер отображения  		this.timer1.Enabled = true;  		Task t2 = run2_ ();  		await t2;  		t2.Dispose ();  		//замена базы  		if (sb.Length <= 0) {  			//обновляем параметр  			update_param (this.t_sysdba_new.Text);  			if (is_replace.Checked) {  				this.progressBar1.Value = 0;  				//while(f.Attributes == FileAttributes.  				SetImage (2' "Node3_5");  				Action a_r = run_replace;  				await Task.Run (a_r);  				SetImage (3' "Node3_5");  			}  			//конец  			SetImage (3' "Node3");  		}  	}  	if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  		SetImage (2' "Node4");  		this.l_.Text = "Восстановление пользователей";  		Action a = run_user;  		await Task.Run (a);  		SetImage (3' "Node4");  	}  	this.timer1.Enabled = false;  	this.b_next.Enabled = true;  	is_may_close = true;  	this.b_next.PerformClick ();  }  else if (i == 5) {  	Application.Exit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (i == 3) {  	is_may_close = false;  	//теперь настройка содержания  	if (is_convert.Checked) {  		treeView1.Nodes ["Node3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  	}  	if (is_install.Checked) {  		treeView1.Nodes ["Node0"].ImageIndex = 1;  		treeView1.Nodes ["Node1"].ImageIndex = 1;  		treeView1.Nodes ["Node2"].ImageIndex = 1;  	}  	if (is_convert.Checked && is_install.Checked) {  		treeView1.Nodes ["Node4"].ImageIndex = 1;  	}  	this.treeView1.Refresh ();  	if (this.is_install.Checked) {  		//если нужно установить сервер FB25  		this.l_.Text = "Установка и деинсталляция сервера";  		Action a = new Action (run_setup);  		await Task.Run (a);  		//восстанавливаем системных пользователей  		if (this.is_new_sysdba.Checked) {  			//поставим новый пароль  			fb_up (this.t_sysdba_new.Text);  		}  		this.l_.Text = "Восстанавливаем системных пользователей";  		SetImage (2' "Node2");  		fb_add ("DBADMIN"' "cnhfiysq"' true' "");  		fb_add ("DBREPORT"' "uyjvbr"' true' "");  		fb_add ("REPLICAT"' "dctv"' true' "");  		fb_add ("GUEST"' "gbpltw"' true' "");  		SetImage (3' "Node2");  	}  	if (this.is_convert.Checked) {  		if (!Directory.Exists (temp_folder)) {  			Directory.CreateDirectory (temp_folder);  		}  		//копируем базу  		this.l_.Text = "Копируем базу локально";  		this.p_load.Visible = true;  		Sett.Default.database_original = this.t_database.Text;  		Sett.Default.database_tmp = this.t_database.Text;  		/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  		//если нужно конвертировать базу  		// Старая база  		fc_old.Database = Sett.Default.database_tmp;  		//база' которую нужно конвертировать                  		fc_old.Pooling = false;  		//пул соединения - отсутствует - для более быстрого освобождения базы  		fc_old.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_old.ClientLibrary = ".\\fbembed.dll";  		//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  		fc_old.UserID = "sysdba";  		//пользователь по умолчанию  		fc_old.Password = "masterkey";  		//Пароль можно не указывать  		// Новая база  		database_new = temp_folder + @"\tsql_2_5.gdb";  		fc_new.Database = database_new;  		fc_new.Pooling = false;  		//и вот здесь у нас настройки  		if (this.is_install.Checked) {  			//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  			fc_new.ServerType = FbServerType.Default;  			fc_new.DataSource = "localhost";  		}  		else {  			//иначе - встроенный сервер  			fc_new.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_new.ClientLibrary = ".\\fbembed.dll";  		}  		//fc_new.ServerType = FbServerType.Embedded;  		//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  		fc_new.Charset = "win1251";  		//при создании новой базы кодировку желательно указывать  		fc_new.UserID = "dbadmin";  		fc_new.Password = "cnhfiysq";  		//create database  		try {  			FbConnection.CreateDatabase (fc_new.ConnectionString' true);  		}  		catch (FbException ex) {  			MessageBox.Show (ex.Message);  		}  		//теперь запускаем процесс анализа метаданных  		SetImage (2' "Node3_1");  		this.l_.Text = "Analyze database";  		this.p_load.Visible = true;  		Task t1 = run_ ();  		await t1;  		t1.Dispose ();  		SetImage (3' "Node3_1");  		this.p_load.Image = null;  		this.p_load.Visible = false;  		this.progressBar1.Visible = true;  		//создаем базу  		//Накатываем первую часть  		this.progressBar1.Maximum = 100;  		this.l_.Text = "Create data";  		//запустим таймер отображения  		this.timer1.Enabled = true;  		Task t2 = run2_ ();  		await t2;  		t2.Dispose ();  		//замена базы  		if (sb.Length <= 0) {  			//обновляем параметр  			update_param (this.t_sysdba_new.Text);  			if (is_replace.Checked) {  				this.progressBar1.Value = 0;  				//while(f.Attributes == FileAttributes.  				SetImage (2' "Node3_5");  				Action a_r = run_replace;  				await Task.Run (a_r);  				SetImage (3' "Node3_5");  			}  			//конец  			SetImage (3' "Node3");  		}  	}  	if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  		SetImage (2' "Node4");  		this.l_.Text = "Восстановление пользователей";  		Action a = run_user;  		await Task.Run (a);  		SetImage (3' "Node4");  	}  	this.timer1.Enabled = false;  	this.b_next.Enabled = true;  	is_may_close = true;  	this.b_next.PerformClick ();  }  else if (i == 5) {  	Application.Exit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (i == 3) {  	is_may_close = false;  	//теперь настройка содержания  	if (is_convert.Checked) {  		treeView1.Nodes ["Node3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  	}  	if (is_install.Checked) {  		treeView1.Nodes ["Node0"].ImageIndex = 1;  		treeView1.Nodes ["Node1"].ImageIndex = 1;  		treeView1.Nodes ["Node2"].ImageIndex = 1;  	}  	if (is_convert.Checked && is_install.Checked) {  		treeView1.Nodes ["Node4"].ImageIndex = 1;  	}  	this.treeView1.Refresh ();  	if (this.is_install.Checked) {  		//если нужно установить сервер FB25  		this.l_.Text = "Установка и деинсталляция сервера";  		Action a = new Action (run_setup);  		await Task.Run (a);  		//восстанавливаем системных пользователей  		if (this.is_new_sysdba.Checked) {  			//поставим новый пароль  			fb_up (this.t_sysdba_new.Text);  		}  		this.l_.Text = "Восстанавливаем системных пользователей";  		SetImage (2' "Node2");  		fb_add ("DBADMIN"' "cnhfiysq"' true' "");  		fb_add ("DBREPORT"' "uyjvbr"' true' "");  		fb_add ("REPLICAT"' "dctv"' true' "");  		fb_add ("GUEST"' "gbpltw"' true' "");  		SetImage (3' "Node2");  	}  	if (this.is_convert.Checked) {  		if (!Directory.Exists (temp_folder)) {  			Directory.CreateDirectory (temp_folder);  		}  		//копируем базу  		this.l_.Text = "Копируем базу локально";  		this.p_load.Visible = true;  		Sett.Default.database_original = this.t_database.Text;  		Sett.Default.database_tmp = this.t_database.Text;  		/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  		//если нужно конвертировать базу  		// Старая база  		fc_old.Database = Sett.Default.database_tmp;  		//база' которую нужно конвертировать                  		fc_old.Pooling = false;  		//пул соединения - отсутствует - для более быстрого освобождения базы  		fc_old.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_old.ClientLibrary = ".\\fbembed.dll";  		//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  		fc_old.UserID = "sysdba";  		//пользователь по умолчанию  		fc_old.Password = "masterkey";  		//Пароль можно не указывать  		// Новая база  		database_new = temp_folder + @"\tsql_2_5.gdb";  		fc_new.Database = database_new;  		fc_new.Pooling = false;  		//и вот здесь у нас настройки  		if (this.is_install.Checked) {  			//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  			fc_new.ServerType = FbServerType.Default;  			fc_new.DataSource = "localhost";  		}  		else {  			//иначе - встроенный сервер  			fc_new.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_new.ClientLibrary = ".\\fbembed.dll";  		}  		//fc_new.ServerType = FbServerType.Embedded;  		//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  		fc_new.Charset = "win1251";  		//при создании новой базы кодировку желательно указывать  		fc_new.UserID = "dbadmin";  		fc_new.Password = "cnhfiysq";  		//create database  		try {  			FbConnection.CreateDatabase (fc_new.ConnectionString' true);  		}  		catch (FbException ex) {  			MessageBox.Show (ex.Message);  		}  		//теперь запускаем процесс анализа метаданных  		SetImage (2' "Node3_1");  		this.l_.Text = "Analyze database";  		this.p_load.Visible = true;  		Task t1 = run_ ();  		await t1;  		t1.Dispose ();  		SetImage (3' "Node3_1");  		this.p_load.Image = null;  		this.p_load.Visible = false;  		this.progressBar1.Visible = true;  		//создаем базу  		//Накатываем первую часть  		this.progressBar1.Maximum = 100;  		this.l_.Text = "Create data";  		//запустим таймер отображения  		this.timer1.Enabled = true;  		Task t2 = run2_ ();  		await t2;  		t2.Dispose ();  		//замена базы  		if (sb.Length <= 0) {  			//обновляем параметр  			update_param (this.t_sysdba_new.Text);  			if (is_replace.Checked) {  				this.progressBar1.Value = 0;  				//while(f.Attributes == FileAttributes.  				SetImage (2' "Node3_5");  				Action a_r = run_replace;  				await Task.Run (a_r);  				SetImage (3' "Node3_5");  			}  			//конец  			SetImage (3' "Node3");  		}  	}  	if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  		SetImage (2' "Node4");  		this.l_.Text = "Восстановление пользователей";  		Action a = run_user;  		await Task.Run (a);  		SetImage (3' "Node4");  	}  	this.timer1.Enabled = false;  	this.b_next.Enabled = true;  	is_may_close = true;  	this.b_next.PerformClick ();  }  else if (i == 5) {  	Application.Exit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (i == 3) {  	is_may_close = false;  	//теперь настройка содержания  	if (is_convert.Checked) {  		treeView1.Nodes ["Node3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  	}  	if (is_install.Checked) {  		treeView1.Nodes ["Node0"].ImageIndex = 1;  		treeView1.Nodes ["Node1"].ImageIndex = 1;  		treeView1.Nodes ["Node2"].ImageIndex = 1;  	}  	if (is_convert.Checked && is_install.Checked) {  		treeView1.Nodes ["Node4"].ImageIndex = 1;  	}  	this.treeView1.Refresh ();  	if (this.is_install.Checked) {  		//если нужно установить сервер FB25  		this.l_.Text = "Установка и деинсталляция сервера";  		Action a = new Action (run_setup);  		await Task.Run (a);  		//восстанавливаем системных пользователей  		if (this.is_new_sysdba.Checked) {  			//поставим новый пароль  			fb_up (this.t_sysdba_new.Text);  		}  		this.l_.Text = "Восстанавливаем системных пользователей";  		SetImage (2' "Node2");  		fb_add ("DBADMIN"' "cnhfiysq"' true' "");  		fb_add ("DBREPORT"' "uyjvbr"' true' "");  		fb_add ("REPLICAT"' "dctv"' true' "");  		fb_add ("GUEST"' "gbpltw"' true' "");  		SetImage (3' "Node2");  	}  	if (this.is_convert.Checked) {  		if (!Directory.Exists (temp_folder)) {  			Directory.CreateDirectory (temp_folder);  		}  		//копируем базу  		this.l_.Text = "Копируем базу локально";  		this.p_load.Visible = true;  		Sett.Default.database_original = this.t_database.Text;  		Sett.Default.database_tmp = this.t_database.Text;  		/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  		//если нужно конвертировать базу  		// Старая база  		fc_old.Database = Sett.Default.database_tmp;  		//база' которую нужно конвертировать                  		fc_old.Pooling = false;  		//пул соединения - отсутствует - для более быстрого освобождения базы  		fc_old.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_old.ClientLibrary = ".\\fbembed.dll";  		//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  		fc_old.UserID = "sysdba";  		//пользователь по умолчанию  		fc_old.Password = "masterkey";  		//Пароль можно не указывать  		// Новая база  		database_new = temp_folder + @"\tsql_2_5.gdb";  		fc_new.Database = database_new;  		fc_new.Pooling = false;  		//и вот здесь у нас настройки  		if (this.is_install.Checked) {  			//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  			fc_new.ServerType = FbServerType.Default;  			fc_new.DataSource = "localhost";  		}  		else {  			//иначе - встроенный сервер  			fc_new.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_new.ClientLibrary = ".\\fbembed.dll";  		}  		//fc_new.ServerType = FbServerType.Embedded;  		//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  		fc_new.Charset = "win1251";  		//при создании новой базы кодировку желательно указывать  		fc_new.UserID = "dbadmin";  		fc_new.Password = "cnhfiysq";  		//create database  		try {  			FbConnection.CreateDatabase (fc_new.ConnectionString' true);  		}  		catch (FbException ex) {  			MessageBox.Show (ex.Message);  		}  		//теперь запускаем процесс анализа метаданных  		SetImage (2' "Node3_1");  		this.l_.Text = "Analyze database";  		this.p_load.Visible = true;  		Task t1 = run_ ();  		await t1;  		t1.Dispose ();  		SetImage (3' "Node3_1");  		this.p_load.Image = null;  		this.p_load.Visible = false;  		this.progressBar1.Visible = true;  		//создаем базу  		//Накатываем первую часть  		this.progressBar1.Maximum = 100;  		this.l_.Text = "Create data";  		//запустим таймер отображения  		this.timer1.Enabled = true;  		Task t2 = run2_ ();  		await t2;  		t2.Dispose ();  		//замена базы  		if (sb.Length <= 0) {  			//обновляем параметр  			update_param (this.t_sysdba_new.Text);  			if (is_replace.Checked) {  				this.progressBar1.Value = 0;  				//while(f.Attributes == FileAttributes.  				SetImage (2' "Node3_5");  				Action a_r = run_replace;  				await Task.Run (a_r);  				SetImage (3' "Node3_5");  			}  			//конец  			SetImage (3' "Node3");  		}  	}  	if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  		SetImage (2' "Node4");  		this.l_.Text = "Восстановление пользователей";  		Action a = run_user;  		await Task.Run (a);  		SetImage (3' "Node4");  	}  	this.timer1.Enabled = false;  	this.b_next.Enabled = true;  	is_may_close = true;  	this.b_next.PerformClick ();  }  else if (i == 5) {  	Application.Exit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (i == 3) {  	is_may_close = false;  	//теперь настройка содержания  	if (is_convert.Checked) {  		treeView1.Nodes ["Node3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_1"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_2"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_3"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_4"].ImageIndex = 1;  		treeView1.Nodes ["Node3"].Nodes ["Node3_5"].ImageIndex = 1;  	}  	if (is_install.Checked) {  		treeView1.Nodes ["Node0"].ImageIndex = 1;  		treeView1.Nodes ["Node1"].ImageIndex = 1;  		treeView1.Nodes ["Node2"].ImageIndex = 1;  	}  	if (is_convert.Checked && is_install.Checked) {  		treeView1.Nodes ["Node4"].ImageIndex = 1;  	}  	this.treeView1.Refresh ();  	if (this.is_install.Checked) {  		//если нужно установить сервер FB25  		this.l_.Text = "Установка и деинсталляция сервера";  		Action a = new Action (run_setup);  		await Task.Run (a);  		//восстанавливаем системных пользователей  		if (this.is_new_sysdba.Checked) {  			//поставим новый пароль  			fb_up (this.t_sysdba_new.Text);  		}  		this.l_.Text = "Восстанавливаем системных пользователей";  		SetImage (2' "Node2");  		fb_add ("DBADMIN"' "cnhfiysq"' true' "");  		fb_add ("DBREPORT"' "uyjvbr"' true' "");  		fb_add ("REPLICAT"' "dctv"' true' "");  		fb_add ("GUEST"' "gbpltw"' true' "");  		SetImage (3' "Node2");  	}  	if (this.is_convert.Checked) {  		if (!Directory.Exists (temp_folder)) {  			Directory.CreateDirectory (temp_folder);  		}  		//копируем базу  		this.l_.Text = "Копируем базу локально";  		this.p_load.Visible = true;  		Sett.Default.database_original = this.t_database.Text;  		Sett.Default.database_tmp = this.t_database.Text;  		/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  		//если нужно конвертировать базу  		// Старая база  		fc_old.Database = Sett.Default.database_tmp;  		//база' которую нужно конвертировать                  		fc_old.Pooling = false;  		//пул соединения - отсутствует - для более быстрого освобождения базы  		fc_old.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_old.ClientLibrary = ".\\fbembed.dll";  		//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  		fc_old.UserID = "sysdba";  		//пользователь по умолчанию  		fc_old.Password = "masterkey";  		//Пароль можно не указывать  		// Новая база  		database_new = temp_folder + @"\tsql_2_5.gdb";  		fc_new.Database = database_new;  		fc_new.Pooling = false;  		//и вот здесь у нас настройки  		if (this.is_install.Checked) {  			//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  			fc_new.ServerType = FbServerType.Default;  			fc_new.DataSource = "localhost";  		}  		else {  			//иначе - встроенный сервер  			fc_new.ServerType = FbServerType.Embedded;  			//встроенный сервер  			fc_new.ClientLibrary = ".\\fbembed.dll";  		}  		//fc_new.ServerType = FbServerType.Embedded;  		//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  		fc_new.Charset = "win1251";  		//при создании новой базы кодировку желательно указывать  		fc_new.UserID = "dbadmin";  		fc_new.Password = "cnhfiysq";  		//create database  		try {  			FbConnection.CreateDatabase (fc_new.ConnectionString' true);  		}  		catch (FbException ex) {  			MessageBox.Show (ex.Message);  		}  		//теперь запускаем процесс анализа метаданных  		SetImage (2' "Node3_1");  		this.l_.Text = "Analyze database";  		this.p_load.Visible = true;  		Task t1 = run_ ();  		await t1;  		t1.Dispose ();  		SetImage (3' "Node3_1");  		this.p_load.Image = null;  		this.p_load.Visible = false;  		this.progressBar1.Visible = true;  		//создаем базу  		//Накатываем первую часть  		this.progressBar1.Maximum = 100;  		this.l_.Text = "Create data";  		//запустим таймер отображения  		this.timer1.Enabled = true;  		Task t2 = run2_ ();  		await t2;  		t2.Dispose ();  		//замена базы  		if (sb.Length <= 0) {  			//обновляем параметр  			update_param (this.t_sysdba_new.Text);  			if (is_replace.Checked) {  				this.progressBar1.Value = 0;  				//while(f.Attributes == FileAttributes.  				SetImage (2' "Node3_5");  				Action a_r = run_replace;  				await Task.Run (a_r);  				SetImage (3' "Node3_5");  			}  			//конец  			SetImage (3' "Node3");  		}  	}  	if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  		SetImage (2' "Node4");  		this.l_.Text = "Восстановление пользователей";  		Action a = run_user;  		await Task.Run (a);  		SetImage (3' "Node4");  	}  	this.timer1.Enabled = false;  	this.b_next.Enabled = true;  	is_may_close = true;  	this.b_next.PerformClick ();  }  else if (i == 5) {  	Application.Exit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (this.is_install.Checked) {  	//если нужно установить сервер FB25  	this.l_.Text = "Установка и деинсталляция сервера";  	Action a = new Action (run_setup);  	await Task.Run (a);  	//восстанавливаем системных пользователей  	if (this.is_new_sysdba.Checked) {  		//поставим новый пароль  		fb_up (this.t_sysdba_new.Text);  	}  	this.l_.Text = "Восстанавливаем системных пользователей";  	SetImage (2' "Node2");  	fb_add ("DBADMIN"' "cnhfiysq"' true' "");  	fb_add ("DBREPORT"' "uyjvbr"' true' "");  	fb_add ("REPLICAT"' "dctv"' true' "");  	fb_add ("GUEST"' "gbpltw"' true' "");  	SetImage (3' "Node2");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (this.is_install.Checked) {  	//если нужно установить сервер FB25  	this.l_.Text = "Установка и деинсталляция сервера";  	Action a = new Action (run_setup);  	await Task.Run (a);  	//восстанавливаем системных пользователей  	if (this.is_new_sysdba.Checked) {  		//поставим новый пароль  		fb_up (this.t_sysdba_new.Text);  	}  	this.l_.Text = "Восстанавливаем системных пользователей";  	SetImage (2' "Node2");  	fb_add ("DBADMIN"' "cnhfiysq"' true' "");  	fb_add ("DBREPORT"' "uyjvbr"' true' "");  	fb_add ("REPLICAT"' "dctv"' true' "");  	fb_add ("GUEST"' "gbpltw"' true' "");  	SetImage (3' "Node2");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: SetImage (2' "Node2");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: SetImage (3' "Node2");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (this.is_convert.Checked) {  	if (!Directory.Exists (temp_folder)) {  		Directory.CreateDirectory (temp_folder);  	}  	//копируем базу  	this.l_.Text = "Копируем базу локально";  	this.p_load.Visible = true;  	Sett.Default.database_original = this.t_database.Text;  	Sett.Default.database_tmp = this.t_database.Text;  	/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  	//если нужно конвертировать базу  	// Старая база  	fc_old.Database = Sett.Default.database_tmp;  	//база' которую нужно конвертировать                  	fc_old.Pooling = false;  	//пул соединения - отсутствует - для более быстрого освобождения базы  	fc_old.ServerType = FbServerType.Embedded;  	//встроенный сервер  	fc_old.ClientLibrary = ".\\fbembed.dll";  	//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  	fc_old.UserID = "sysdba";  	//пользователь по умолчанию  	fc_old.Password = "masterkey";  	//Пароль можно не указывать  	// Новая база  	database_new = temp_folder + @"\tsql_2_5.gdb";  	fc_new.Database = database_new;  	fc_new.Pooling = false;  	//и вот здесь у нас настройки  	if (this.is_install.Checked) {  		//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  		fc_new.ServerType = FbServerType.Default;  		fc_new.DataSource = "localhost";  	}  	else {  		//иначе - встроенный сервер  		fc_new.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_new.ClientLibrary = ".\\fbembed.dll";  	}  	//fc_new.ServerType = FbServerType.Embedded;  	//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  	fc_new.Charset = "win1251";  	//при создании новой базы кодировку желательно указывать  	fc_new.UserID = "dbadmin";  	fc_new.Password = "cnhfiysq";  	//create database  	try {  		FbConnection.CreateDatabase (fc_new.ConnectionString' true);  	}  	catch (FbException ex) {  		MessageBox.Show (ex.Message);  	}  	//теперь запускаем процесс анализа метаданных  	SetImage (2' "Node3_1");  	this.l_.Text = "Analyze database";  	this.p_load.Visible = true;  	Task t1 = run_ ();  	await t1;  	t1.Dispose ();  	SetImage (3' "Node3_1");  	this.p_load.Image = null;  	this.p_load.Visible = false;  	this.progressBar1.Visible = true;  	//создаем базу  	//Накатываем первую часть  	this.progressBar1.Maximum = 100;  	this.l_.Text = "Create data";  	//запустим таймер отображения  	this.timer1.Enabled = true;  	Task t2 = run2_ ();  	await t2;  	t2.Dispose ();  	//замена базы  	if (sb.Length <= 0) {  		//обновляем параметр  		update_param (this.t_sysdba_new.Text);  		if (is_replace.Checked) {  			this.progressBar1.Value = 0;  			//while(f.Attributes == FileAttributes.  			SetImage (2' "Node3_5");  			Action a_r = run_replace;  			await Task.Run (a_r);  			SetImage (3' "Node3_5");  		}  		//конец  		SetImage (3' "Node3");  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (this.is_convert.Checked) {  	if (!Directory.Exists (temp_folder)) {  		Directory.CreateDirectory (temp_folder);  	}  	//копируем базу  	this.l_.Text = "Копируем базу локально";  	this.p_load.Visible = true;  	Sett.Default.database_original = this.t_database.Text;  	Sett.Default.database_tmp = this.t_database.Text;  	/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  	//если нужно конвертировать базу  	// Старая база  	fc_old.Database = Sett.Default.database_tmp;  	//база' которую нужно конвертировать                  	fc_old.Pooling = false;  	//пул соединения - отсутствует - для более быстрого освобождения базы  	fc_old.ServerType = FbServerType.Embedded;  	//встроенный сервер  	fc_old.ClientLibrary = ".\\fbembed.dll";  	//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  	fc_old.UserID = "sysdba";  	//пользователь по умолчанию  	fc_old.Password = "masterkey";  	//Пароль можно не указывать  	// Новая база  	database_new = temp_folder + @"\tsql_2_5.gdb";  	fc_new.Database = database_new;  	fc_new.Pooling = false;  	//и вот здесь у нас настройки  	if (this.is_install.Checked) {  		//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  		fc_new.ServerType = FbServerType.Default;  		fc_new.DataSource = "localhost";  	}  	else {  		//иначе - встроенный сервер  		fc_new.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_new.ClientLibrary = ".\\fbembed.dll";  	}  	//fc_new.ServerType = FbServerType.Embedded;  	//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  	fc_new.Charset = "win1251";  	//при создании новой базы кодировку желательно указывать  	fc_new.UserID = "dbadmin";  	fc_new.Password = "cnhfiysq";  	//create database  	try {  		FbConnection.CreateDatabase (fc_new.ConnectionString' true);  	}  	catch (FbException ex) {  		MessageBox.Show (ex.Message);  	}  	//теперь запускаем процесс анализа метаданных  	SetImage (2' "Node3_1");  	this.l_.Text = "Analyze database";  	this.p_load.Visible = true;  	Task t1 = run_ ();  	await t1;  	t1.Dispose ();  	SetImage (3' "Node3_1");  	this.p_load.Image = null;  	this.p_load.Visible = false;  	this.progressBar1.Visible = true;  	//создаем базу  	//Накатываем первую часть  	this.progressBar1.Maximum = 100;  	this.l_.Text = "Create data";  	//запустим таймер отображения  	this.timer1.Enabled = true;  	Task t2 = run2_ ();  	await t2;  	t2.Dispose ();  	//замена базы  	if (sb.Length <= 0) {  		//обновляем параметр  		update_param (this.t_sysdba_new.Text);  		if (is_replace.Checked) {  			this.progressBar1.Value = 0;  			//while(f.Attributes == FileAttributes.  			SetImage (2' "Node3_5");  			Action a_r = run_replace;  			await Task.Run (a_r);  			SetImage (3' "Node3_5");  		}  		//конец  		SetImage (3' "Node3");  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (this.is_convert.Checked) {  	if (!Directory.Exists (temp_folder)) {  		Directory.CreateDirectory (temp_folder);  	}  	//копируем базу  	this.l_.Text = "Копируем базу локально";  	this.p_load.Visible = true;  	Sett.Default.database_original = this.t_database.Text;  	Sett.Default.database_tmp = this.t_database.Text;  	/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  	//если нужно конвертировать базу  	// Старая база  	fc_old.Database = Sett.Default.database_tmp;  	//база' которую нужно конвертировать                  	fc_old.Pooling = false;  	//пул соединения - отсутствует - для более быстрого освобождения базы  	fc_old.ServerType = FbServerType.Embedded;  	//встроенный сервер  	fc_old.ClientLibrary = ".\\fbembed.dll";  	//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  	fc_old.UserID = "sysdba";  	//пользователь по умолчанию  	fc_old.Password = "masterkey";  	//Пароль можно не указывать  	// Новая база  	database_new = temp_folder + @"\tsql_2_5.gdb";  	fc_new.Database = database_new;  	fc_new.Pooling = false;  	//и вот здесь у нас настройки  	if (this.is_install.Checked) {  		//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  		fc_new.ServerType = FbServerType.Default;  		fc_new.DataSource = "localhost";  	}  	else {  		//иначе - встроенный сервер  		fc_new.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_new.ClientLibrary = ".\\fbembed.dll";  	}  	//fc_new.ServerType = FbServerType.Embedded;  	//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  	fc_new.Charset = "win1251";  	//при создании новой базы кодировку желательно указывать  	fc_new.UserID = "dbadmin";  	fc_new.Password = "cnhfiysq";  	//create database  	try {  		FbConnection.CreateDatabase (fc_new.ConnectionString' true);  	}  	catch (FbException ex) {  		MessageBox.Show (ex.Message);  	}  	//теперь запускаем процесс анализа метаданных  	SetImage (2' "Node3_1");  	this.l_.Text = "Analyze database";  	this.p_load.Visible = true;  	Task t1 = run_ ();  	await t1;  	t1.Dispose ();  	SetImage (3' "Node3_1");  	this.p_load.Image = null;  	this.p_load.Visible = false;  	this.progressBar1.Visible = true;  	//создаем базу  	//Накатываем первую часть  	this.progressBar1.Maximum = 100;  	this.l_.Text = "Create data";  	//запустим таймер отображения  	this.timer1.Enabled = true;  	Task t2 = run2_ ();  	await t2;  	t2.Dispose ();  	//замена базы  	if (sb.Length <= 0) {  		//обновляем параметр  		update_param (this.t_sysdba_new.Text);  		if (is_replace.Checked) {  			this.progressBar1.Value = 0;  			//while(f.Attributes == FileAttributes.  			SetImage (2' "Node3_5");  			Action a_r = run_replace;  			await Task.Run (a_r);  			SetImage (3' "Node3_5");  		}  		//конец  		SetImage (3' "Node3");  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (this.is_convert.Checked) {  	if (!Directory.Exists (temp_folder)) {  		Directory.CreateDirectory (temp_folder);  	}  	//копируем базу  	this.l_.Text = "Копируем базу локально";  	this.p_load.Visible = true;  	Sett.Default.database_original = this.t_database.Text;  	Sett.Default.database_tmp = this.t_database.Text;  	/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  	//если нужно конвертировать базу  	// Старая база  	fc_old.Database = Sett.Default.database_tmp;  	//база' которую нужно конвертировать                  	fc_old.Pooling = false;  	//пул соединения - отсутствует - для более быстрого освобождения базы  	fc_old.ServerType = FbServerType.Embedded;  	//встроенный сервер  	fc_old.ClientLibrary = ".\\fbembed.dll";  	//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  	fc_old.UserID = "sysdba";  	//пользователь по умолчанию  	fc_old.Password = "masterkey";  	//Пароль можно не указывать  	// Новая база  	database_new = temp_folder + @"\tsql_2_5.gdb";  	fc_new.Database = database_new;  	fc_new.Pooling = false;  	//и вот здесь у нас настройки  	if (this.is_install.Checked) {  		//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  		fc_new.ServerType = FbServerType.Default;  		fc_new.DataSource = "localhost";  	}  	else {  		//иначе - встроенный сервер  		fc_new.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_new.ClientLibrary = ".\\fbembed.dll";  	}  	//fc_new.ServerType = FbServerType.Embedded;  	//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  	fc_new.Charset = "win1251";  	//при создании новой базы кодировку желательно указывать  	fc_new.UserID = "dbadmin";  	fc_new.Password = "cnhfiysq";  	//create database  	try {  		FbConnection.CreateDatabase (fc_new.ConnectionString' true);  	}  	catch (FbException ex) {  		MessageBox.Show (ex.Message);  	}  	//теперь запускаем процесс анализа метаданных  	SetImage (2' "Node3_1");  	this.l_.Text = "Analyze database";  	this.p_load.Visible = true;  	Task t1 = run_ ();  	await t1;  	t1.Dispose ();  	SetImage (3' "Node3_1");  	this.p_load.Image = null;  	this.p_load.Visible = false;  	this.progressBar1.Visible = true;  	//создаем базу  	//Накатываем первую часть  	this.progressBar1.Maximum = 100;  	this.l_.Text = "Create data";  	//запустим таймер отображения  	this.timer1.Enabled = true;  	Task t2 = run2_ ();  	await t2;  	t2.Dispose ();  	//замена базы  	if (sb.Length <= 0) {  		//обновляем параметр  		update_param (this.t_sysdba_new.Text);  		if (is_replace.Checked) {  			this.progressBar1.Value = 0;  			//while(f.Attributes == FileAttributes.  			SetImage (2' "Node3_5");  			Action a_r = run_replace;  			await Task.Run (a_r);  			SetImage (3' "Node3_5");  		}  		//конец  		SetImage (3' "Node3");  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (this.is_convert.Checked) {  	if (!Directory.Exists (temp_folder)) {  		Directory.CreateDirectory (temp_folder);  	}  	//копируем базу  	this.l_.Text = "Копируем базу локально";  	this.p_load.Visible = true;  	Sett.Default.database_original = this.t_database.Text;  	Sett.Default.database_tmp = this.t_database.Text;  	/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  	//если нужно конвертировать базу  	// Старая база  	fc_old.Database = Sett.Default.database_tmp;  	//база' которую нужно конвертировать                  	fc_old.Pooling = false;  	//пул соединения - отсутствует - для более быстрого освобождения базы  	fc_old.ServerType = FbServerType.Embedded;  	//встроенный сервер  	fc_old.ClientLibrary = ".\\fbembed.dll";  	//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  	fc_old.UserID = "sysdba";  	//пользователь по умолчанию  	fc_old.Password = "masterkey";  	//Пароль можно не указывать  	// Новая база  	database_new = temp_folder + @"\tsql_2_5.gdb";  	fc_new.Database = database_new;  	fc_new.Pooling = false;  	//и вот здесь у нас настройки  	if (this.is_install.Checked) {  		//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  		fc_new.ServerType = FbServerType.Default;  		fc_new.DataSource = "localhost";  	}  	else {  		//иначе - встроенный сервер  		fc_new.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_new.ClientLibrary = ".\\fbembed.dll";  	}  	//fc_new.ServerType = FbServerType.Embedded;  	//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  	fc_new.Charset = "win1251";  	//при создании новой базы кодировку желательно указывать  	fc_new.UserID = "dbadmin";  	fc_new.Password = "cnhfiysq";  	//create database  	try {  		FbConnection.CreateDatabase (fc_new.ConnectionString' true);  	}  	catch (FbException ex) {  		MessageBox.Show (ex.Message);  	}  	//теперь запускаем процесс анализа метаданных  	SetImage (2' "Node3_1");  	this.l_.Text = "Analyze database";  	this.p_load.Visible = true;  	Task t1 = run_ ();  	await t1;  	t1.Dispose ();  	SetImage (3' "Node3_1");  	this.p_load.Image = null;  	this.p_load.Visible = false;  	this.progressBar1.Visible = true;  	//создаем базу  	//Накатываем первую часть  	this.progressBar1.Maximum = 100;  	this.l_.Text = "Create data";  	//запустим таймер отображения  	this.timer1.Enabled = true;  	Task t2 = run2_ ();  	await t2;  	t2.Dispose ();  	//замена базы  	if (sb.Length <= 0) {  		//обновляем параметр  		update_param (this.t_sysdba_new.Text);  		if (is_replace.Checked) {  			this.progressBar1.Value = 0;  			//while(f.Attributes == FileAttributes.  			SetImage (2' "Node3_5");  			Action a_r = run_replace;  			await Task.Run (a_r);  			SetImage (3' "Node3_5");  		}  		//конец  		SetImage (3' "Node3");  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (this.is_convert.Checked) {  	if (!Directory.Exists (temp_folder)) {  		Directory.CreateDirectory (temp_folder);  	}  	//копируем базу  	this.l_.Text = "Копируем базу локально";  	this.p_load.Visible = true;  	Sett.Default.database_original = this.t_database.Text;  	Sett.Default.database_tmp = this.t_database.Text;  	/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  	//если нужно конвертировать базу  	// Старая база  	fc_old.Database = Sett.Default.database_tmp;  	//база' которую нужно конвертировать                  	fc_old.Pooling = false;  	//пул соединения - отсутствует - для более быстрого освобождения базы  	fc_old.ServerType = FbServerType.Embedded;  	//встроенный сервер  	fc_old.ClientLibrary = ".\\fbembed.dll";  	//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  	fc_old.UserID = "sysdba";  	//пользователь по умолчанию  	fc_old.Password = "masterkey";  	//Пароль можно не указывать  	// Новая база  	database_new = temp_folder + @"\tsql_2_5.gdb";  	fc_new.Database = database_new;  	fc_new.Pooling = false;  	//и вот здесь у нас настройки  	if (this.is_install.Checked) {  		//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  		fc_new.ServerType = FbServerType.Default;  		fc_new.DataSource = "localhost";  	}  	else {  		//иначе - встроенный сервер  		fc_new.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_new.ClientLibrary = ".\\fbembed.dll";  	}  	//fc_new.ServerType = FbServerType.Embedded;  	//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  	fc_new.Charset = "win1251";  	//при создании новой базы кодировку желательно указывать  	fc_new.UserID = "dbadmin";  	fc_new.Password = "cnhfiysq";  	//create database  	try {  		FbConnection.CreateDatabase (fc_new.ConnectionString' true);  	}  	catch (FbException ex) {  		MessageBox.Show (ex.Message);  	}  	//теперь запускаем процесс анализа метаданных  	SetImage (2' "Node3_1");  	this.l_.Text = "Analyze database";  	this.p_load.Visible = true;  	Task t1 = run_ ();  	await t1;  	t1.Dispose ();  	SetImage (3' "Node3_1");  	this.p_load.Image = null;  	this.p_load.Visible = false;  	this.progressBar1.Visible = true;  	//создаем базу  	//Накатываем первую часть  	this.progressBar1.Maximum = 100;  	this.l_.Text = "Create data";  	//запустим таймер отображения  	this.timer1.Enabled = true;  	Task t2 = run2_ ();  	await t2;  	t2.Dispose ();  	//замена базы  	if (sb.Length <= 0) {  		//обновляем параметр  		update_param (this.t_sysdba_new.Text);  		if (is_replace.Checked) {  			this.progressBar1.Value = 0;  			//while(f.Attributes == FileAttributes.  			SetImage (2' "Node3_5");  			Action a_r = run_replace;  			await Task.Run (a_r);  			SetImage (3' "Node3_5");  		}  		//конец  		SetImage (3' "Node3");  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (this.is_convert.Checked) {  	if (!Directory.Exists (temp_folder)) {  		Directory.CreateDirectory (temp_folder);  	}  	//копируем базу  	this.l_.Text = "Копируем базу локально";  	this.p_load.Visible = true;  	Sett.Default.database_original = this.t_database.Text;  	Sett.Default.database_tmp = this.t_database.Text;  	/*                         Sett.Default.database_tmp = temp_folder + @"\tsql_tmp.gdb";                         Action a_c = new Action(copy_);                         await Task.Run(a_c);                         */SetImage (2' "Node3");  	//если нужно конвертировать базу  	// Старая база  	fc_old.Database = Sett.Default.database_tmp;  	//база' которую нужно конвертировать                  	fc_old.Pooling = false;  	//пул соединения - отсутствует - для более быстрого освобождения базы  	fc_old.ServerType = FbServerType.Embedded;  	//встроенный сервер  	fc_old.ClientLibrary = ".\\fbembed.dll";  	//fc_old.Charset = "win1251"; //кодировка для FB 1/5 не указывается - здесь нужно было переводить в форматы UTF  	fc_old.UserID = "sysdba";  	//пользователь по умолчанию  	fc_old.Password = "masterkey";  	//Пароль можно не указывать  	// Новая база  	database_new = temp_folder + @"\tsql_2_5.gdb";  	fc_new.Database = database_new;  	fc_new.Pooling = false;  	//и вот здесь у нас настройки  	if (this.is_install.Checked) {  		//если пользователь воззжелал установить сервер' то будем в дальнейшем применять его  		fc_new.ServerType = FbServerType.Default;  		fc_new.DataSource = "localhost";  	}  	else {  		//иначе - встроенный сервер  		fc_new.ServerType = FbServerType.Embedded;  		//встроенный сервер  		fc_new.ClientLibrary = ".\\fbembed.dll";  	}  	//fc_new.ServerType = FbServerType.Embedded;  	//fc_new.ClientLibrary = ".\\Fx64\\fbembed.dll";  	fc_new.Charset = "win1251";  	//при создании новой базы кодировку желательно указывать  	fc_new.UserID = "dbadmin";  	fc_new.Password = "cnhfiysq";  	//create database  	try {  		FbConnection.CreateDatabase (fc_new.ConnectionString' true);  	}  	catch (FbException ex) {  		MessageBox.Show (ex.Message);  	}  	//теперь запускаем процесс анализа метаданных  	SetImage (2' "Node3_1");  	this.l_.Text = "Analyze database";  	this.p_load.Visible = true;  	Task t1 = run_ ();  	await t1;  	t1.Dispose ();  	SetImage (3' "Node3_1");  	this.p_load.Image = null;  	this.p_load.Visible = false;  	this.progressBar1.Visible = true;  	//создаем базу  	//Накатываем первую часть  	this.progressBar1.Maximum = 100;  	this.l_.Text = "Create data";  	//запустим таймер отображения  	this.timer1.Enabled = true;  	Task t2 = run2_ ();  	await t2;  	t2.Dispose ();  	//замена базы  	if (sb.Length <= 0) {  		//обновляем параметр  		update_param (this.t_sysdba_new.Text);  		if (is_replace.Checked) {  			this.progressBar1.Value = 0;  			//while(f.Attributes == FileAttributes.  			SetImage (2' "Node3_5");  			Action a_r = run_replace;  			await Task.Run (a_r);  			SetImage (3' "Node3_5");  		}  		//конец  		SetImage (3' "Node3");  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: SetImage (2' "Node3");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: SetImage (2' "Node3_1");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: SetImage (3' "Node3_1");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: this.progressBar1.Maximum = 100;  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (sb.Length <= 0) {  	//обновляем параметр  	update_param (this.t_sysdba_new.Text);  	if (is_replace.Checked) {  		this.progressBar1.Value = 0;  		//while(f.Attributes == FileAttributes.  		SetImage (2' "Node3_5");  		Action a_r = run_replace;  		await Task.Run (a_r);  		SetImage (3' "Node3_5");  	}  	//конец  	SetImage (3' "Node3");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (sb.Length <= 0) {  	//обновляем параметр  	update_param (this.t_sysdba_new.Text);  	if (is_replace.Checked) {  		this.progressBar1.Value = 0;  		//while(f.Attributes == FileAttributes.  		SetImage (2' "Node3_5");  		Action a_r = run_replace;  		await Task.Run (a_r);  		SetImage (3' "Node3_5");  	}  	//конец  	SetImage (3' "Node3");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (sb.Length <= 0) {  	//обновляем параметр  	update_param (this.t_sysdba_new.Text);  	if (is_replace.Checked) {  		this.progressBar1.Value = 0;  		//while(f.Attributes == FileAttributes.  		SetImage (2' "Node3_5");  		Action a_r = run_replace;  		await Task.Run (a_r);  		SetImage (3' "Node3_5");  	}  	//конец  	SetImage (3' "Node3");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (is_replace.Checked) {  	this.progressBar1.Value = 0;  	//while(f.Attributes == FileAttributes.  	SetImage (2' "Node3_5");  	Action a_r = run_replace;  	await Task.Run (a_r);  	SetImage (3' "Node3_5");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (is_replace.Checked) {  	this.progressBar1.Value = 0;  	//while(f.Attributes == FileAttributes.  	SetImage (2' "Node3_5");  	Action a_r = run_replace;  	await Task.Run (a_r);  	SetImage (3' "Node3_5");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: SetImage (2' "Node3_5");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: SetImage (3' "Node3_5");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: SetImage (3' "Node3");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  	SetImage (2' "Node4");  	this.l_.Text = "Восстановление пользователей";  	Action a = run_user;  	await Task.Run (a);  	SetImage (3' "Node4");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (sb.Length <= 0 && is_convert.Checked && is_install.Checked) {  	SetImage (2' "Node4");  	this.l_.Text = "Восстановление пользователей";  	Action a = run_user;  	await Task.Run (a);  	SetImage (3' "Node4");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: SetImage (2' "Node4");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: SetImage (3' "Node4");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following statement contains a magic number: if (i == 5) {  	Application.Exit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,set_tab,The following statement contains a magic number: switch (j) {  case 1:  	this.tabControl1.SelectedIndex = j - 1;  	this.b_prev.Enabled = false;  	this.b_next.Enabled = true;  	this.button3.Enabled = true;  	break;  case 2:  	this.tabControl1.SelectedIndex = j - 1;  	this.b_prev.Enabled = true;  	this.b_next.Enabled = true;  	this.button3.Enabled = true;  	break;  case 3:  	this.tabControl1.SelectedIndex = j - 1;  	this.b_prev.Enabled = false;  	this.b_next.Enabled = false;  	this.button3.Enabled = false;  	break;  case 4:  	this.tabControl1.SelectedIndex = j - 1;  	this.b_prev.Enabled = false;  	this.b_next.Text = "Завершить";  	this.b_next.Enabled = true;  	this.button3.Visible = false;  	this.richTextBox1.Clear ();  	if (sb.Length > 0) {  		try {  			using (StreamWriter outfile = new StreamWriter (File.Create (temp_folder + @"\error.log")' Encoding.Default)) {  				sb.Replace ("{"' "{{");  				sb.Replace ("}"' "}}");  				outfile.Write (sb.ToString ()' Encoding.Default);  			}  			this.richTextBox1.AppendText (File.ReadAllText (temp_folder + @"\error.log"' Encoding.Default));  		}  		catch (Exception ex) {  			MessageBox.Show (ex.Message);  		}  		this.image_bad.Image = dataPump.det.Properties.Resources.l_fatal;  	}  	else {  		this.richTextBox1.Text = "Конвертация прошла успешно";  		this.image_bad.Image = dataPump.det.Properties.Resources.l_done;  	}  	this.richTextBox1.Visible = true;  	this.l_error.Visible = true;  	this.image_bad.Visible = true;  	break;  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,set_tab,The following statement contains a magic number: switch (j) {  case 1:  	this.tabControl1.SelectedIndex = j - 1;  	this.b_prev.Enabled = false;  	this.b_next.Enabled = true;  	this.button3.Enabled = true;  	break;  case 2:  	this.tabControl1.SelectedIndex = j - 1;  	this.b_prev.Enabled = true;  	this.b_next.Enabled = true;  	this.button3.Enabled = true;  	break;  case 3:  	this.tabControl1.SelectedIndex = j - 1;  	this.b_prev.Enabled = false;  	this.b_next.Enabled = false;  	this.button3.Enabled = false;  	break;  case 4:  	this.tabControl1.SelectedIndex = j - 1;  	this.b_prev.Enabled = false;  	this.b_next.Text = "Завершить";  	this.b_next.Enabled = true;  	this.button3.Visible = false;  	this.richTextBox1.Clear ();  	if (sb.Length > 0) {  		try {  			using (StreamWriter outfile = new StreamWriter (File.Create (temp_folder + @"\error.log")' Encoding.Default)) {  				sb.Replace ("{"' "{{");  				sb.Replace ("}"' "}}");  				outfile.Write (sb.ToString ()' Encoding.Default);  			}  			this.richTextBox1.AppendText (File.ReadAllText (temp_folder + @"\error.log"' Encoding.Default));  		}  		catch (Exception ex) {  			MessageBox.Show (ex.Message);  		}  		this.image_bad.Image = dataPump.det.Properties.Resources.l_fatal;  	}  	else {  		this.richTextBox1.Text = "Конвертация прошла успешно";  		this.image_bad.Image = dataPump.det.Properties.Resources.l_done;  	}  	this.richTextBox1.Visible = true;  	this.l_error.Visible = true;  	this.image_bad.Visible = true;  	break;  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,set_tab,The following statement contains a magic number: switch (j) {  case 1:  	this.tabControl1.SelectedIndex = j - 1;  	this.b_prev.Enabled = false;  	this.b_next.Enabled = true;  	this.button3.Enabled = true;  	break;  case 2:  	this.tabControl1.SelectedIndex = j - 1;  	this.b_prev.Enabled = true;  	this.b_next.Enabled = true;  	this.button3.Enabled = true;  	break;  case 3:  	this.tabControl1.SelectedIndex = j - 1;  	this.b_prev.Enabled = false;  	this.b_next.Enabled = false;  	this.button3.Enabled = false;  	break;  case 4:  	this.tabControl1.SelectedIndex = j - 1;  	this.b_prev.Enabled = false;  	this.b_next.Text = "Завершить";  	this.b_next.Enabled = true;  	this.button3.Visible = false;  	this.richTextBox1.Clear ();  	if (sb.Length > 0) {  		try {  			using (StreamWriter outfile = new StreamWriter (File.Create (temp_folder + @"\error.log")' Encoding.Default)) {  				sb.Replace ("{"' "{{");  				sb.Replace ("}"' "}}");  				outfile.Write (sb.ToString ()' Encoding.Default);  			}  			this.richTextBox1.AppendText (File.ReadAllText (temp_folder + @"\error.log"' Encoding.Default));  		}  		catch (Exception ex) {  			MessageBox.Show (ex.Message);  		}  		this.image_bad.Image = dataPump.det.Properties.Resources.l_fatal;  	}  	else {  		this.richTextBox1.Text = "Конвертация прошла успешно";  		this.image_bad.Image = dataPump.det.Properties.Resources.l_done;  	}  	this.richTextBox1.Visible = true;  	this.l_error.Visible = true;  	this.image_bad.Visible = true;  	break;  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_,The following statement contains a magic number: this.progressBar1.Maximum = 18;  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: SetImage (2' "Node3_2");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: if (sb.Length <= 0) {  	this.progressBar1.Maximum = 100;  	SetImage (3' "Node3_2");  	SetImage (2' "Node3_3");  	int i_ = 0;  	int j_ = tables_.Count;  	this.progressBar2.Maximum = 100;  	this.progressBar2.Visible = true;  	this.l_count.Visible = true;  	//второй этап - данные  	//запускаем анализ  	Task t_prepare = new Task (go_data);  	t_prepare.Start ();  	await t_prepare;  	this.progressBar2.Visible = false;  	this.l_count.Visible = false;  	com2.Clear ();  	//очистим список значений - re:  	SetImage (3' "Node3_3");  	//and the last  	SetImage (2' "Node3_4");  	com = com3;  	this.progressBar1.Value = 0;  	a = execute_com;  	await Task.Run (a);  	a = null;  	com.Clear ();  	com2.Clear ();  	if (sb.Length > 0) {  		SetImage (4' "Node3_4");  	}  	else {  		SetImage (3' "Node3_4");  	}  }  else {  	SetImage (4' "Node3_2");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: if (sb.Length <= 0) {  	this.progressBar1.Maximum = 100;  	SetImage (3' "Node3_2");  	SetImage (2' "Node3_3");  	int i_ = 0;  	int j_ = tables_.Count;  	this.progressBar2.Maximum = 100;  	this.progressBar2.Visible = true;  	this.l_count.Visible = true;  	//второй этап - данные  	//запускаем анализ  	Task t_prepare = new Task (go_data);  	t_prepare.Start ();  	await t_prepare;  	this.progressBar2.Visible = false;  	this.l_count.Visible = false;  	com2.Clear ();  	//очистим список значений - re:  	SetImage (3' "Node3_3");  	//and the last  	SetImage (2' "Node3_4");  	com = com3;  	this.progressBar1.Value = 0;  	a = execute_com;  	await Task.Run (a);  	a = null;  	com.Clear ();  	com2.Clear ();  	if (sb.Length > 0) {  		SetImage (4' "Node3_4");  	}  	else {  		SetImage (3' "Node3_4");  	}  }  else {  	SetImage (4' "Node3_2");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: if (sb.Length <= 0) {  	this.progressBar1.Maximum = 100;  	SetImage (3' "Node3_2");  	SetImage (2' "Node3_3");  	int i_ = 0;  	int j_ = tables_.Count;  	this.progressBar2.Maximum = 100;  	this.progressBar2.Visible = true;  	this.l_count.Visible = true;  	//второй этап - данные  	//запускаем анализ  	Task t_prepare = new Task (go_data);  	t_prepare.Start ();  	await t_prepare;  	this.progressBar2.Visible = false;  	this.l_count.Visible = false;  	com2.Clear ();  	//очистим список значений - re:  	SetImage (3' "Node3_3");  	//and the last  	SetImage (2' "Node3_4");  	com = com3;  	this.progressBar1.Value = 0;  	a = execute_com;  	await Task.Run (a);  	a = null;  	com.Clear ();  	com2.Clear ();  	if (sb.Length > 0) {  		SetImage (4' "Node3_4");  	}  	else {  		SetImage (3' "Node3_4");  	}  }  else {  	SetImage (4' "Node3_2");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: if (sb.Length <= 0) {  	this.progressBar1.Maximum = 100;  	SetImage (3' "Node3_2");  	SetImage (2' "Node3_3");  	int i_ = 0;  	int j_ = tables_.Count;  	this.progressBar2.Maximum = 100;  	this.progressBar2.Visible = true;  	this.l_count.Visible = true;  	//второй этап - данные  	//запускаем анализ  	Task t_prepare = new Task (go_data);  	t_prepare.Start ();  	await t_prepare;  	this.progressBar2.Visible = false;  	this.l_count.Visible = false;  	com2.Clear ();  	//очистим список значений - re:  	SetImage (3' "Node3_3");  	//and the last  	SetImage (2' "Node3_4");  	com = com3;  	this.progressBar1.Value = 0;  	a = execute_com;  	await Task.Run (a);  	a = null;  	com.Clear ();  	com2.Clear ();  	if (sb.Length > 0) {  		SetImage (4' "Node3_4");  	}  	else {  		SetImage (3' "Node3_4");  	}  }  else {  	SetImage (4' "Node3_2");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: if (sb.Length <= 0) {  	this.progressBar1.Maximum = 100;  	SetImage (3' "Node3_2");  	SetImage (2' "Node3_3");  	int i_ = 0;  	int j_ = tables_.Count;  	this.progressBar2.Maximum = 100;  	this.progressBar2.Visible = true;  	this.l_count.Visible = true;  	//второй этап - данные  	//запускаем анализ  	Task t_prepare = new Task (go_data);  	t_prepare.Start ();  	await t_prepare;  	this.progressBar2.Visible = false;  	this.l_count.Visible = false;  	com2.Clear ();  	//очистим список значений - re:  	SetImage (3' "Node3_3");  	//and the last  	SetImage (2' "Node3_4");  	com = com3;  	this.progressBar1.Value = 0;  	a = execute_com;  	await Task.Run (a);  	a = null;  	com.Clear ();  	com2.Clear ();  	if (sb.Length > 0) {  		SetImage (4' "Node3_4");  	}  	else {  		SetImage (3' "Node3_4");  	}  }  else {  	SetImage (4' "Node3_2");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: if (sb.Length <= 0) {  	this.progressBar1.Maximum = 100;  	SetImage (3' "Node3_2");  	SetImage (2' "Node3_3");  	int i_ = 0;  	int j_ = tables_.Count;  	this.progressBar2.Maximum = 100;  	this.progressBar2.Visible = true;  	this.l_count.Visible = true;  	//второй этап - данные  	//запускаем анализ  	Task t_prepare = new Task (go_data);  	t_prepare.Start ();  	await t_prepare;  	this.progressBar2.Visible = false;  	this.l_count.Visible = false;  	com2.Clear ();  	//очистим список значений - re:  	SetImage (3' "Node3_3");  	//and the last  	SetImage (2' "Node3_4");  	com = com3;  	this.progressBar1.Value = 0;  	a = execute_com;  	await Task.Run (a);  	a = null;  	com.Clear ();  	com2.Clear ();  	if (sb.Length > 0) {  		SetImage (4' "Node3_4");  	}  	else {  		SetImage (3' "Node3_4");  	}  }  else {  	SetImage (4' "Node3_2");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: if (sb.Length <= 0) {  	this.progressBar1.Maximum = 100;  	SetImage (3' "Node3_2");  	SetImage (2' "Node3_3");  	int i_ = 0;  	int j_ = tables_.Count;  	this.progressBar2.Maximum = 100;  	this.progressBar2.Visible = true;  	this.l_count.Visible = true;  	//второй этап - данные  	//запускаем анализ  	Task t_prepare = new Task (go_data);  	t_prepare.Start ();  	await t_prepare;  	this.progressBar2.Visible = false;  	this.l_count.Visible = false;  	com2.Clear ();  	//очистим список значений - re:  	SetImage (3' "Node3_3");  	//and the last  	SetImage (2' "Node3_4");  	com = com3;  	this.progressBar1.Value = 0;  	a = execute_com;  	await Task.Run (a);  	a = null;  	com.Clear ();  	com2.Clear ();  	if (sb.Length > 0) {  		SetImage (4' "Node3_4");  	}  	else {  		SetImage (3' "Node3_4");  	}  }  else {  	SetImage (4' "Node3_2");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: if (sb.Length <= 0) {  	this.progressBar1.Maximum = 100;  	SetImage (3' "Node3_2");  	SetImage (2' "Node3_3");  	int i_ = 0;  	int j_ = tables_.Count;  	this.progressBar2.Maximum = 100;  	this.progressBar2.Visible = true;  	this.l_count.Visible = true;  	//второй этап - данные  	//запускаем анализ  	Task t_prepare = new Task (go_data);  	t_prepare.Start ();  	await t_prepare;  	this.progressBar2.Visible = false;  	this.l_count.Visible = false;  	com2.Clear ();  	//очистим список значений - re:  	SetImage (3' "Node3_3");  	//and the last  	SetImage (2' "Node3_4");  	com = com3;  	this.progressBar1.Value = 0;  	a = execute_com;  	await Task.Run (a);  	a = null;  	com.Clear ();  	com2.Clear ();  	if (sb.Length > 0) {  		SetImage (4' "Node3_4");  	}  	else {  		SetImage (3' "Node3_4");  	}  }  else {  	SetImage (4' "Node3_2");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: if (sb.Length <= 0) {  	this.progressBar1.Maximum = 100;  	SetImage (3' "Node3_2");  	SetImage (2' "Node3_3");  	int i_ = 0;  	int j_ = tables_.Count;  	this.progressBar2.Maximum = 100;  	this.progressBar2.Visible = true;  	this.l_count.Visible = true;  	//второй этап - данные  	//запускаем анализ  	Task t_prepare = new Task (go_data);  	t_prepare.Start ();  	await t_prepare;  	this.progressBar2.Visible = false;  	this.l_count.Visible = false;  	com2.Clear ();  	//очистим список значений - re:  	SetImage (3' "Node3_3");  	//and the last  	SetImage (2' "Node3_4");  	com = com3;  	this.progressBar1.Value = 0;  	a = execute_com;  	await Task.Run (a);  	a = null;  	com.Clear ();  	com2.Clear ();  	if (sb.Length > 0) {  		SetImage (4' "Node3_4");  	}  	else {  		SetImage (3' "Node3_4");  	}  }  else {  	SetImage (4' "Node3_2");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: this.progressBar1.Maximum = 100;  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: SetImage (3' "Node3_2");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: SetImage (2' "Node3_3");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: this.progressBar2.Maximum = 100;  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: SetImage (3' "Node3_3");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: SetImage (2' "Node3_4");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: if (sb.Length > 0) {  	SetImage (4' "Node3_4");  }  else {  	SetImage (3' "Node3_4");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: if (sb.Length > 0) {  	SetImage (4' "Node3_4");  }  else {  	SetImage (3' "Node3_4");  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: SetImage (4' "Node3_4");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: SetImage (3' "Node3_4");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run2_,The following statement contains a magic number: SetImage (4' "Node3_2");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_setup,The following statement contains a magic number: SetImage (2' "Node0");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_setup,The following statement contains a magic number: SetImage (3' "Node0");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_setup,The following statement contains a magic number: SetImage (2' "Node1");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_setup,The following statement contains a magic number: SetImage (3' "Node1");  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_replace,The following statement contains a magic number: while (is_locked) {  	try {  		p_cur = 0;  		p_text = "Архивируем базу оригинал";  		FileInfo file_ = new FileInfo (Sett.Default.database_original);  		Compress (file_);  		byte[] buffer = new byte[4096 * 4096];  		// 1MB buffer  		bool cancelFlag = false;  		using (FileStream source = new FileStream (fc_new.Database' FileMode.Open' FileAccess.Read)) {  			long fileLength = source.Length;  			using (FileStream dest = new FileStream (Sett.Default.database_original' FileMode.Create' FileAccess.Write)) {  				is_locked = false;  				long totalBytes = 0;  				int currentBlockSize = 0;  				while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  					totalBytes += currentBlockSize;  					double persentage = totalBytes / (double)fileLength * 100.0;  					dest.Write (buffer' 0' currentBlockSize);  					cancelFlag = false;  					p_cur = (int)((float)totalBytes / (float)fileLength * 100);  					p_text = "Заменяем файл " + p_cur + @"%";  					if (totalBytes >= fileLength) {  						cancelFlag = true;  					}  					if (cancelFlag == true) {  						// Delete dest file here  						dest.Flush ();  						dest.Close ();  						source.Flush ();  						source.Close ();  						break;  					}  				}  			}  		}  	}  	catch {  		System.Threading.Thread.Sleep (5000);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_replace,The following statement contains a magic number: while (is_locked) {  	try {  		p_cur = 0;  		p_text = "Архивируем базу оригинал";  		FileInfo file_ = new FileInfo (Sett.Default.database_original);  		Compress (file_);  		byte[] buffer = new byte[4096 * 4096];  		// 1MB buffer  		bool cancelFlag = false;  		using (FileStream source = new FileStream (fc_new.Database' FileMode.Open' FileAccess.Read)) {  			long fileLength = source.Length;  			using (FileStream dest = new FileStream (Sett.Default.database_original' FileMode.Create' FileAccess.Write)) {  				is_locked = false;  				long totalBytes = 0;  				int currentBlockSize = 0;  				while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  					totalBytes += currentBlockSize;  					double persentage = totalBytes / (double)fileLength * 100.0;  					dest.Write (buffer' 0' currentBlockSize);  					cancelFlag = false;  					p_cur = (int)((float)totalBytes / (float)fileLength * 100);  					p_text = "Заменяем файл " + p_cur + @"%";  					if (totalBytes >= fileLength) {  						cancelFlag = true;  					}  					if (cancelFlag == true) {  						// Delete dest file here  						dest.Flush ();  						dest.Close ();  						source.Flush ();  						source.Close ();  						break;  					}  				}  			}  		}  	}  	catch {  		System.Threading.Thread.Sleep (5000);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_replace,The following statement contains a magic number: while (is_locked) {  	try {  		p_cur = 0;  		p_text = "Архивируем базу оригинал";  		FileInfo file_ = new FileInfo (Sett.Default.database_original);  		Compress (file_);  		byte[] buffer = new byte[4096 * 4096];  		// 1MB buffer  		bool cancelFlag = false;  		using (FileStream source = new FileStream (fc_new.Database' FileMode.Open' FileAccess.Read)) {  			long fileLength = source.Length;  			using (FileStream dest = new FileStream (Sett.Default.database_original' FileMode.Create' FileAccess.Write)) {  				is_locked = false;  				long totalBytes = 0;  				int currentBlockSize = 0;  				while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  					totalBytes += currentBlockSize;  					double persentage = totalBytes / (double)fileLength * 100.0;  					dest.Write (buffer' 0' currentBlockSize);  					cancelFlag = false;  					p_cur = (int)((float)totalBytes / (float)fileLength * 100);  					p_text = "Заменяем файл " + p_cur + @"%";  					if (totalBytes >= fileLength) {  						cancelFlag = true;  					}  					if (cancelFlag == true) {  						// Delete dest file here  						dest.Flush ();  						dest.Close ();  						source.Flush ();  						source.Close ();  						break;  					}  				}  			}  		}  	}  	catch {  		System.Threading.Thread.Sleep (5000);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_replace,The following statement contains a magic number: while (is_locked) {  	try {  		p_cur = 0;  		p_text = "Архивируем базу оригинал";  		FileInfo file_ = new FileInfo (Sett.Default.database_original);  		Compress (file_);  		byte[] buffer = new byte[4096 * 4096];  		// 1MB buffer  		bool cancelFlag = false;  		using (FileStream source = new FileStream (fc_new.Database' FileMode.Open' FileAccess.Read)) {  			long fileLength = source.Length;  			using (FileStream dest = new FileStream (Sett.Default.database_original' FileMode.Create' FileAccess.Write)) {  				is_locked = false;  				long totalBytes = 0;  				int currentBlockSize = 0;  				while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  					totalBytes += currentBlockSize;  					double persentage = totalBytes / (double)fileLength * 100.0;  					dest.Write (buffer' 0' currentBlockSize);  					cancelFlag = false;  					p_cur = (int)((float)totalBytes / (float)fileLength * 100);  					p_text = "Заменяем файл " + p_cur + @"%";  					if (totalBytes >= fileLength) {  						cancelFlag = true;  					}  					if (cancelFlag == true) {  						// Delete dest file here  						dest.Flush ();  						dest.Close ();  						source.Flush ();  						source.Close ();  						break;  					}  				}  			}  		}  	}  	catch {  		System.Threading.Thread.Sleep (5000);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_replace,The following statement contains a magic number: while (is_locked) {  	try {  		p_cur = 0;  		p_text = "Архивируем базу оригинал";  		FileInfo file_ = new FileInfo (Sett.Default.database_original);  		Compress (file_);  		byte[] buffer = new byte[4096 * 4096];  		// 1MB buffer  		bool cancelFlag = false;  		using (FileStream source = new FileStream (fc_new.Database' FileMode.Open' FileAccess.Read)) {  			long fileLength = source.Length;  			using (FileStream dest = new FileStream (Sett.Default.database_original' FileMode.Create' FileAccess.Write)) {  				is_locked = false;  				long totalBytes = 0;  				int currentBlockSize = 0;  				while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  					totalBytes += currentBlockSize;  					double persentage = totalBytes / (double)fileLength * 100.0;  					dest.Write (buffer' 0' currentBlockSize);  					cancelFlag = false;  					p_cur = (int)((float)totalBytes / (float)fileLength * 100);  					p_text = "Заменяем файл " + p_cur + @"%";  					if (totalBytes >= fileLength) {  						cancelFlag = true;  					}  					if (cancelFlag == true) {  						// Delete dest file here  						dest.Flush ();  						dest.Close ();  						source.Flush ();  						source.Close ();  						break;  					}  				}  			}  		}  	}  	catch {  		System.Threading.Thread.Sleep (5000);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_replace,The following statement contains a magic number: try {  	p_cur = 0;  	p_text = "Архивируем базу оригинал";  	FileInfo file_ = new FileInfo (Sett.Default.database_original);  	Compress (file_);  	byte[] buffer = new byte[4096 * 4096];  	// 1MB buffer  	bool cancelFlag = false;  	using (FileStream source = new FileStream (fc_new.Database' FileMode.Open' FileAccess.Read)) {  		long fileLength = source.Length;  		using (FileStream dest = new FileStream (Sett.Default.database_original' FileMode.Create' FileAccess.Write)) {  			is_locked = false;  			long totalBytes = 0;  			int currentBlockSize = 0;  			while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  				totalBytes += currentBlockSize;  				double persentage = totalBytes / (double)fileLength * 100.0;  				dest.Write (buffer' 0' currentBlockSize);  				cancelFlag = false;  				p_cur = (int)((float)totalBytes / (float)fileLength * 100);  				p_text = "Заменяем файл " + p_cur + @"%";  				if (totalBytes >= fileLength) {  					cancelFlag = true;  				}  				if (cancelFlag == true) {  					// Delete dest file here  					dest.Flush ();  					dest.Close ();  					source.Flush ();  					source.Close ();  					break;  				}  			}  		}  	}  }  catch {  	System.Threading.Thread.Sleep (5000);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_replace,The following statement contains a magic number: try {  	p_cur = 0;  	p_text = "Архивируем базу оригинал";  	FileInfo file_ = new FileInfo (Sett.Default.database_original);  	Compress (file_);  	byte[] buffer = new byte[4096 * 4096];  	// 1MB buffer  	bool cancelFlag = false;  	using (FileStream source = new FileStream (fc_new.Database' FileMode.Open' FileAccess.Read)) {  		long fileLength = source.Length;  		using (FileStream dest = new FileStream (Sett.Default.database_original' FileMode.Create' FileAccess.Write)) {  			is_locked = false;  			long totalBytes = 0;  			int currentBlockSize = 0;  			while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  				totalBytes += currentBlockSize;  				double persentage = totalBytes / (double)fileLength * 100.0;  				dest.Write (buffer' 0' currentBlockSize);  				cancelFlag = false;  				p_cur = (int)((float)totalBytes / (float)fileLength * 100);  				p_text = "Заменяем файл " + p_cur + @"%";  				if (totalBytes >= fileLength) {  					cancelFlag = true;  				}  				if (cancelFlag == true) {  					// Delete dest file here  					dest.Flush ();  					dest.Close ();  					source.Flush ();  					source.Close ();  					break;  				}  			}  		}  	}  }  catch {  	System.Threading.Thread.Sleep (5000);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_replace,The following statement contains a magic number: try {  	p_cur = 0;  	p_text = "Архивируем базу оригинал";  	FileInfo file_ = new FileInfo (Sett.Default.database_original);  	Compress (file_);  	byte[] buffer = new byte[4096 * 4096];  	// 1MB buffer  	bool cancelFlag = false;  	using (FileStream source = new FileStream (fc_new.Database' FileMode.Open' FileAccess.Read)) {  		long fileLength = source.Length;  		using (FileStream dest = new FileStream (Sett.Default.database_original' FileMode.Create' FileAccess.Write)) {  			is_locked = false;  			long totalBytes = 0;  			int currentBlockSize = 0;  			while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  				totalBytes += currentBlockSize;  				double persentage = totalBytes / (double)fileLength * 100.0;  				dest.Write (buffer' 0' currentBlockSize);  				cancelFlag = false;  				p_cur = (int)((float)totalBytes / (float)fileLength * 100);  				p_text = "Заменяем файл " + p_cur + @"%";  				if (totalBytes >= fileLength) {  					cancelFlag = true;  				}  				if (cancelFlag == true) {  					// Delete dest file here  					dest.Flush ();  					dest.Close ();  					source.Flush ();  					source.Close ();  					break;  				}  			}  		}  	}  }  catch {  	System.Threading.Thread.Sleep (5000);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_replace,The following statement contains a magic number: try {  	p_cur = 0;  	p_text = "Архивируем базу оригинал";  	FileInfo file_ = new FileInfo (Sett.Default.database_original);  	Compress (file_);  	byte[] buffer = new byte[4096 * 4096];  	// 1MB buffer  	bool cancelFlag = false;  	using (FileStream source = new FileStream (fc_new.Database' FileMode.Open' FileAccess.Read)) {  		long fileLength = source.Length;  		using (FileStream dest = new FileStream (Sett.Default.database_original' FileMode.Create' FileAccess.Write)) {  			is_locked = false;  			long totalBytes = 0;  			int currentBlockSize = 0;  			while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  				totalBytes += currentBlockSize;  				double persentage = totalBytes / (double)fileLength * 100.0;  				dest.Write (buffer' 0' currentBlockSize);  				cancelFlag = false;  				p_cur = (int)((float)totalBytes / (float)fileLength * 100);  				p_text = "Заменяем файл " + p_cur + @"%";  				if (totalBytes >= fileLength) {  					cancelFlag = true;  				}  				if (cancelFlag == true) {  					// Delete dest file here  					dest.Flush ();  					dest.Close ();  					source.Flush ();  					source.Close ();  					break;  				}  			}  		}  	}  }  catch {  	System.Threading.Thread.Sleep (5000);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_replace,The following statement contains a magic number: try {  	p_cur = 0;  	p_text = "Архивируем базу оригинал";  	FileInfo file_ = new FileInfo (Sett.Default.database_original);  	Compress (file_);  	byte[] buffer = new byte[4096 * 4096];  	// 1MB buffer  	bool cancelFlag = false;  	using (FileStream source = new FileStream (fc_new.Database' FileMode.Open' FileAccess.Read)) {  		long fileLength = source.Length;  		using (FileStream dest = new FileStream (Sett.Default.database_original' FileMode.Create' FileAccess.Write)) {  			is_locked = false;  			long totalBytes = 0;  			int currentBlockSize = 0;  			while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  				totalBytes += currentBlockSize;  				double persentage = totalBytes / (double)fileLength * 100.0;  				dest.Write (buffer' 0' currentBlockSize);  				cancelFlag = false;  				p_cur = (int)((float)totalBytes / (float)fileLength * 100);  				p_text = "Заменяем файл " + p_cur + @"%";  				if (totalBytes >= fileLength) {  					cancelFlag = true;  				}  				if (cancelFlag == true) {  					// Delete dest file here  					dest.Flush ();  					dest.Close ();  					source.Flush ();  					source.Close ();  					break;  				}  			}  		}  	}  }  catch {  	System.Threading.Thread.Sleep (5000);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_replace,The following statement contains a magic number: using (FileStream source = new FileStream (fc_new.Database' FileMode.Open' FileAccess.Read)) {  	long fileLength = source.Length;  	using (FileStream dest = new FileStream (Sett.Default.database_original' FileMode.Create' FileAccess.Write)) {  		is_locked = false;  		long totalBytes = 0;  		int currentBlockSize = 0;  		while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  			totalBytes += currentBlockSize;  			double persentage = totalBytes / (double)fileLength * 100.0;  			dest.Write (buffer' 0' currentBlockSize);  			cancelFlag = false;  			p_cur = (int)((float)totalBytes / (float)fileLength * 100);  			p_text = "Заменяем файл " + p_cur + @"%";  			if (totalBytes >= fileLength) {  				cancelFlag = true;  			}  			if (cancelFlag == true) {  				// Delete dest file here  				dest.Flush ();  				dest.Close ();  				source.Flush ();  				source.Close ();  				break;  			}  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_replace,The following statement contains a magic number: using (FileStream source = new FileStream (fc_new.Database' FileMode.Open' FileAccess.Read)) {  	long fileLength = source.Length;  	using (FileStream dest = new FileStream (Sett.Default.database_original' FileMode.Create' FileAccess.Write)) {  		is_locked = false;  		long totalBytes = 0;  		int currentBlockSize = 0;  		while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  			totalBytes += currentBlockSize;  			double persentage = totalBytes / (double)fileLength * 100.0;  			dest.Write (buffer' 0' currentBlockSize);  			cancelFlag = false;  			p_cur = (int)((float)totalBytes / (float)fileLength * 100);  			p_text = "Заменяем файл " + p_cur + @"%";  			if (totalBytes >= fileLength) {  				cancelFlag = true;  			}  			if (cancelFlag == true) {  				// Delete dest file here  				dest.Flush ();  				dest.Close ();  				source.Flush ();  				source.Close ();  				break;  			}  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_replace,The following statement contains a magic number: using (FileStream dest = new FileStream (Sett.Default.database_original' FileMode.Create' FileAccess.Write)) {  	is_locked = false;  	long totalBytes = 0;  	int currentBlockSize = 0;  	while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  		totalBytes += currentBlockSize;  		double persentage = totalBytes / (double)fileLength * 100.0;  		dest.Write (buffer' 0' currentBlockSize);  		cancelFlag = false;  		p_cur = (int)((float)totalBytes / (float)fileLength * 100);  		p_text = "Заменяем файл " + p_cur + @"%";  		if (totalBytes >= fileLength) {  			cancelFlag = true;  		}  		if (cancelFlag == true) {  			// Delete dest file here  			dest.Flush ();  			dest.Close ();  			source.Flush ();  			source.Close ();  			break;  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_replace,The following statement contains a magic number: using (FileStream dest = new FileStream (Sett.Default.database_original' FileMode.Create' FileAccess.Write)) {  	is_locked = false;  	long totalBytes = 0;  	int currentBlockSize = 0;  	while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  		totalBytes += currentBlockSize;  		double persentage = totalBytes / (double)fileLength * 100.0;  		dest.Write (buffer' 0' currentBlockSize);  		cancelFlag = false;  		p_cur = (int)((float)totalBytes / (float)fileLength * 100);  		p_text = "Заменяем файл " + p_cur + @"%";  		if (totalBytes >= fileLength) {  			cancelFlag = true;  		}  		if (cancelFlag == true) {  			// Delete dest file here  			dest.Flush ();  			dest.Close ();  			source.Flush ();  			source.Close ();  			break;  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_replace,The following statement contains a magic number: while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  	totalBytes += currentBlockSize;  	double persentage = totalBytes / (double)fileLength * 100.0;  	dest.Write (buffer' 0' currentBlockSize);  	cancelFlag = false;  	p_cur = (int)((float)totalBytes / (float)fileLength * 100);  	p_text = "Заменяем файл " + p_cur + @"%";  	if (totalBytes >= fileLength) {  		cancelFlag = true;  	}  	if (cancelFlag == true) {  		// Delete dest file here  		dest.Flush ();  		dest.Close ();  		source.Flush ();  		source.Close ();  		break;  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_replace,The following statement contains a magic number: while ((currentBlockSize = source.Read (buffer' 0' buffer.Length)) > 0) {  	totalBytes += currentBlockSize;  	double persentage = totalBytes / (double)fileLength * 100.0;  	dest.Write (buffer' 0' currentBlockSize);  	cancelFlag = false;  	p_cur = (int)((float)totalBytes / (float)fileLength * 100);  	p_text = "Заменяем файл " + p_cur + @"%";  	if (totalBytes >= fileLength) {  		cancelFlag = true;  	}  	if (cancelFlag == true) {  		// Delete dest file here  		dest.Flush ();  		dest.Close ();  		source.Flush ();  		source.Close ();  		break;  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_replace,The following statement contains a magic number: p_cur = (int)((float)totalBytes / (float)fileLength * 100);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,run_replace,The following statement contains a magic number: System.Threading.Thread.Sleep (5000);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			try {  				//сформируем список функций - их создание  				using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							//будующая заготовка  							string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  							//будующий возврат  							string dll_return = "RETURNS ";  							//оконцовка  							string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  							//Теперь нам нужны возвращаемые параметры  							string dll_argument = "";  							#region Формирование аргументов  							using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  								fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_a.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  									while (fr_a.Read ()) {  										if (fr_a [0].ToString () == fr [6].ToString ()) {  											if (fr [6].ToString () == "0") {  												//Значит выходной  												dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												//теперь как значение или как ссылка  												if (fr_a [1].ToString () == "-1") {  													//FREE_IT  													dll_return += " FREE_IT";  												}  												else if (fr_a [1].ToString () == "0") {  													dll_return += " BY VALUE";  												}  											}  											else {  												dll_return += "PARAMETER " + fr_a [0].ToString ();  												if (dll_argument == "")  													dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												else {  													dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  												}  											}  										}  										else {  											//а вот теперь начнем формировать строку создания  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									fr_a.Dispose ();  								}  								fcon_a.Dispose ();  							}  							#endregion  							//и вот она наша собранная строка   							dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  							dll_command = regexTrim.Replace (dll_command' "TRIM_");  							dll_command = regexIIF.Replace (dll_command' "IIF_");  							//теперь добавим ее в список команд  							com_udf.Add (dll_command);  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  			}  			catch (FbException ex2) {  				MessageBox.Show (ex2.Message);  			}  			ft.Commit ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("udf");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  		fb.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		try {  			//сформируем список функций - их создание  			using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//будующая заготовка  						string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  						//будующий возврат  						string dll_return = "RETURNS ";  						//оконцовка  						string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  						//Теперь нам нужны возвращаемые параметры  						string dll_argument = "";  						#region Формирование аргументов  						using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									if (fr_a [0].ToString () == fr [6].ToString ()) {  										if (fr [6].ToString () == "0") {  											//Значит выходной  											dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											//теперь как значение или как ссылка  											if (fr_a [1].ToString () == "-1") {  												//FREE_IT  												dll_return += " FREE_IT";  											}  											else if (fr_a [1].ToString () == "0") {  												dll_return += " BY VALUE";  											}  										}  										else {  											dll_return += "PARAMETER " + fr_a [0].ToString ();  											if (dll_argument == "")  												dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											else {  												dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  											}  										}  									}  									else {  										//а вот теперь начнем формировать строку создания  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						#endregion  						//и вот она наша собранная строка   						dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						//теперь добавим ее в список команд  						com_udf.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  		}  		catch (FbException ex2) {  			MessageBox.Show (ex2.Message);  		}  		ft.Commit ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("udf");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	try {  		//сформируем список функций - их создание  		using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//будующая заготовка  					string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  					//будующий возврат  					string dll_return = "RETURNS ";  					//оконцовка  					string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  					//Теперь нам нужны возвращаемые параметры  					string dll_argument = "";  					#region Формирование аргументов  					using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								if (fr_a [0].ToString () == fr [6].ToString ()) {  									if (fr [6].ToString () == "0") {  										//Значит выходной  										dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										//теперь как значение или как ссылка  										if (fr_a [1].ToString () == "-1") {  											//FREE_IT  											dll_return += " FREE_IT";  										}  										else if (fr_a [1].ToString () == "0") {  											dll_return += " BY VALUE";  										}  									}  									else {  										dll_return += "PARAMETER " + fr_a [0].ToString ();  										if (dll_argument == "")  											dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										else {  											dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  										}  									}  								}  								else {  									//а вот теперь начнем формировать строку создания  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					#endregion  					//и вот она наша собранная строка   					dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					//теперь добавим ее в список команд  					com_udf.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  	}  	catch (FbException ex2) {  		MessageBox.Show (ex2.Message);  	}  	ft.Commit ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: try {  	//сформируем список функций - их создание  	using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//будующая заготовка  				string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  				//будующий возврат  				string dll_return = "RETURNS ";  				//оконцовка  				string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  				//Теперь нам нужны возвращаемые параметры  				string dll_argument = "";  				#region Формирование аргументов  				using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							if (fr_a [0].ToString () == fr [6].ToString ()) {  								if (fr [6].ToString () == "0") {  									//Значит выходной  									dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									//теперь как значение или как ссылка  									if (fr_a [1].ToString () == "-1") {  										//FREE_IT  										dll_return += " FREE_IT";  									}  									else if (fr_a [1].ToString () == "0") {  										dll_return += " BY VALUE";  									}  								}  								else {  									dll_return += "PARAMETER " + fr_a [0].ToString ();  									if (dll_argument == "")  										dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									else {  										dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  									}  								}  							}  							else {  								//а вот теперь начнем формировать строку создания  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				#endregion  				//и вот она наша собранная строка   				dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				//теперь добавим ее в список команд  				com_udf.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  }  catch (FbException ex2) {  	MessageBox.Show (ex2.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_udf' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//будующая заготовка  			string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  			//будующий возврат  			string dll_return = "RETURNS ";  			//оконцовка  			string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  			//Теперь нам нужны возвращаемые параметры  			string dll_argument = "";  			#region Формирование аргументов  			using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						if (fr_a [0].ToString () == fr [6].ToString ()) {  							if (fr [6].ToString () == "0") {  								//Значит выходной  								dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								//теперь как значение или как ссылка  								if (fr_a [1].ToString () == "-1") {  									//FREE_IT  									dll_return += " FREE_IT";  								}  								else if (fr_a [1].ToString () == "0") {  									dll_return += " BY VALUE";  								}  							}  							else {  								dll_return += "PARAMETER " + fr_a [0].ToString ();  								if (dll_argument == "")  									dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								else {  									dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  								}  							}  						}  						else {  							//а вот теперь начнем формировать строку создания  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			#endregion  			//и вот она наша собранная строка   			dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			//теперь добавим ее в список команд  			com_udf.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//будующая заготовка  		string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  		//будующий возврат  		string dll_return = "RETURNS ";  		//оконцовка  		string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  		//Теперь нам нужны возвращаемые параметры  		string dll_argument = "";  		#region Формирование аргументов  		using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					if (fr_a [0].ToString () == fr [6].ToString ()) {  						if (fr [6].ToString () == "0") {  							//Значит выходной  							dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							//теперь как значение или как ссылка  							if (fr_a [1].ToString () == "-1") {  								//FREE_IT  								dll_return += " FREE_IT";  							}  							else if (fr_a [1].ToString () == "0") {  								dll_return += " BY VALUE";  							}  						}  						else {  							dll_return += "PARAMETER " + fr_a [0].ToString ();  							if (dll_argument == "")  								dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							else {  								dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  							}  						}  					}  					else {  						//а вот теперь начнем формировать строку создания  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		#endregion  		//и вот она наша собранная строка   		dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		//теперь добавим ее в список команд  		com_udf.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr.Read ()) {  	//будующая заготовка  	string dll_command = "DECLARE EXTERNAL FUNCTION " + fr [0].ToString ().Trim ();  	//будующий возврат  	string dll_return = "RETURNS ";  	//оконцовка  	string dll_end = "ENTRY_POINT '" + fr [5].ToString ().Trim () + "'" + " MODULE_NAME '" + fr [4].ToString () + "'";  	//Теперь нам нужны возвращаемые параметры  	string dll_argument = "";  	#region Формирование аргументов  	using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				if (fr_a [0].ToString () == fr [6].ToString ()) {  					if (fr [6].ToString () == "0") {  						//Значит выходной  						dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						//теперь как значение или как ссылка  						if (fr_a [1].ToString () == "-1") {  							//FREE_IT  							dll_return += " FREE_IT";  						}  						else if (fr_a [1].ToString () == "0") {  							dll_return += " BY VALUE";  						}  					}  					else {  						dll_return += "PARAMETER " + fr_a [0].ToString ();  						if (dll_argument == "")  							dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						else {  							dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  						}  					}  				}  				else {  					//а вот теперь начнем формировать строку создания  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	#endregion  	//и вот она наша собранная строка   	dll_command += "\n" + dll_argument + "\n" + dll_return + "\n" + dll_end;  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	//теперь добавим ее в список команд  	com_udf.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_udf_a' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			if (fr_a [0].ToString () == fr [6].ToString ()) {  				if (fr [6].ToString () == "0") {  					//Значит выходной  					dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					//теперь как значение или как ссылка  					if (fr_a [1].ToString () == "-1") {  						//FREE_IT  						dll_return += " FREE_IT";  					}  					else if (fr_a [1].ToString () == "0") {  						dll_return += " BY VALUE";  					}  				}  				else {  					dll_return += "PARAMETER " + fr_a [0].ToString ();  					if (dll_argument == "")  						dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					else {  						dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  					}  				}  			}  			else {  				//а вот теперь начнем формировать строку создания  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		if (fr_a [0].ToString () == fr [6].ToString ()) {  			if (fr [6].ToString () == "0") {  				//Значит выходной  				dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				//теперь как значение или как ссылка  				if (fr_a [1].ToString () == "-1") {  					//FREE_IT  					dll_return += " FREE_IT";  				}  				else if (fr_a [1].ToString () == "0") {  					dll_return += " BY VALUE";  				}  			}  			else {  				dll_return += "PARAMETER " + fr_a [0].ToString ();  				if (dll_argument == "")  					dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				else {  					dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  				}  			}  		}  		else {  			//а вот теперь начнем формировать строку создания  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: while (fr_a.Read ()) {  	if (fr_a [0].ToString () == fr [6].ToString ()) {  		if (fr [6].ToString () == "0") {  			//Значит выходной  			dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			//теперь как значение или как ссылка  			if (fr_a [1].ToString () == "-1") {  				//FREE_IT  				dll_return += " FREE_IT";  			}  			else if (fr_a [1].ToString () == "0") {  				dll_return += " BY VALUE";  			}  		}  		else {  			dll_return += "PARAMETER " + fr_a [0].ToString ();  			if (dll_argument == "")  				dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			else {  				dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  			}  		}  	}  	else {  		//а вот теперь начнем формировать строку создания  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr_a [0].ToString () == fr [6].ToString ()) {  	if (fr [6].ToString () == "0") {  		//Значит выходной  		dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		//теперь как значение или как ссылка  		if (fr_a [1].ToString () == "-1") {  			//FREE_IT  			dll_return += " FREE_IT";  		}  		else if (fr_a [1].ToString () == "0") {  			dll_return += " BY VALUE";  		}  	}  	else {  		dll_return += "PARAMETER " + fr_a [0].ToString ();  		if (dll_argument == "")  			dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		else {  			dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  		}  	}  }  else {  	//а вот теперь начнем формировать строку создания  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr [6].ToString () == "0") {  	//Значит выходной  	dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	//теперь как значение или как ссылка  	if (fr_a [1].ToString () == "-1") {  		//FREE_IT  		dll_return += " FREE_IT";  	}  	else if (fr_a [1].ToString () == "0") {  		dll_return += " BY VALUE";  	}  }  else {  	dll_return += "PARAMETER " + fr_a [0].ToString ();  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr [6].ToString () == "0") {  	//Значит выходной  	dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	//теперь как значение или как ссылка  	if (fr_a [1].ToString () == "-1") {  		//FREE_IT  		dll_return += " FREE_IT";  	}  	else if (fr_a [1].ToString () == "0") {  		dll_return += " BY VALUE";  	}  }  else {  	dll_return += "PARAMETER " + fr_a [0].ToString ();  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr [6].ToString () == "0") {  	//Значит выходной  	dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	//теперь как значение или как ссылка  	if (fr_a [1].ToString () == "-1") {  		//FREE_IT  		dll_return += " FREE_IT";  	}  	else if (fr_a [1].ToString () == "0") {  		dll_return += " BY VALUE";  	}  }  else {  	dll_return += "PARAMETER " + fr_a [0].ToString ();  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr [6].ToString () == "0") {  	//Значит выходной  	dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	//теперь как значение или как ссылка  	if (fr_a [1].ToString () == "-1") {  		//FREE_IT  		dll_return += " FREE_IT";  	}  	else if (fr_a [1].ToString () == "0") {  		dll_return += " BY VALUE";  	}  }  else {  	dll_return += "PARAMETER " + fr_a [0].ToString ();  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr [6].ToString () == "0") {  	//Значит выходной  	dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	//теперь как значение или как ссылка  	if (fr_a [1].ToString () == "-1") {  		//FREE_IT  		dll_return += " FREE_IT";  	}  	else if (fr_a [1].ToString () == "0") {  		dll_return += " BY VALUE";  	}  }  else {  	dll_return += "PARAMETER " + fr_a [0].ToString ();  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr [6].ToString () == "0") {  	//Значит выходной  	dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	//теперь как значение или как ссылка  	if (fr_a [1].ToString () == "-1") {  		//FREE_IT  		dll_return += " FREE_IT";  	}  	else if (fr_a [1].ToString () == "0") {  		dll_return += " BY VALUE";  	}  }  else {  	dll_return += "PARAMETER " + fr_a [0].ToString ();  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr [6].ToString () == "0") {  	//Значит выходной  	dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	//теперь как значение или как ссылка  	if (fr_a [1].ToString () == "-1") {  		//FREE_IT  		dll_return += " FREE_IT";  	}  	else if (fr_a [1].ToString () == "0") {  		dll_return += " BY VALUE";  	}  }  else {  	dll_return += "PARAMETER " + fr_a [0].ToString ();  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr [6].ToString () == "0") {  	//Значит выходной  	dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	//теперь как значение или как ссылка  	if (fr_a [1].ToString () == "-1") {  		//FREE_IT  		dll_return += " FREE_IT";  	}  	else if (fr_a [1].ToString () == "0") {  		dll_return += " BY VALUE";  	}  }  else {  	dll_return += "PARAMETER " + fr_a [0].ToString ();  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr [6].ToString () == "0") {  	//Значит выходной  	dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	//теперь как значение или как ссылка  	if (fr_a [1].ToString () == "-1") {  		//FREE_IT  		dll_return += " FREE_IT";  	}  	else if (fr_a [1].ToString () == "0") {  		dll_return += " BY VALUE";  	}  }  else {  	dll_return += "PARAMETER " + fr_a [0].ToString ();  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr [6].ToString () == "0") {  	//Значит выходной  	dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	//теперь как значение или как ссылка  	if (fr_a [1].ToString () == "-1") {  		//FREE_IT  		dll_return += " FREE_IT";  	}  	else if (fr_a [1].ToString () == "0") {  		dll_return += " BY VALUE";  	}  }  else {  	dll_return += "PARAMETER " + fr_a [0].ToString ();  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr [6].ToString () == "0") {  	//Значит выходной  	dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	//теперь как значение или как ссылка  	if (fr_a [1].ToString () == "-1") {  		//FREE_IT  		dll_return += " FREE_IT";  	}  	else if (fr_a [1].ToString () == "0") {  		dll_return += " BY VALUE";  	}  }  else {  	dll_return += "PARAMETER " + fr_a [0].ToString ();  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr [6].ToString () == "0") {  	//Значит выходной  	dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	//теперь как значение или как ссылка  	if (fr_a [1].ToString () == "-1") {  		//FREE_IT  		dll_return += " FREE_IT";  	}  	else if (fr_a [1].ToString () == "0") {  		dll_return += " BY VALUE";  	}  }  else {  	dll_return += "PARAMETER " + fr_a [0].ToString ();  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr [6].ToString () == "0") {  	//Значит выходной  	dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	//теперь как значение или как ссылка  	if (fr_a [1].ToString () == "-1") {  		//FREE_IT  		dll_return += " FREE_IT";  	}  	else if (fr_a [1].ToString () == "0") {  		dll_return += " BY VALUE";  	}  }  else {  	dll_return += "PARAMETER " + fr_a [0].ToString ();  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr [6].ToString () == "0") {  	//Значит выходной  	dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	//теперь как значение или как ссылка  	if (fr_a [1].ToString () == "-1") {  		//FREE_IT  		dll_return += " FREE_IT";  	}  	else if (fr_a [1].ToString () == "0") {  		dll_return += " BY VALUE";  	}  }  else {  	dll_return += "PARAMETER " + fr_a [0].ToString ();  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr [6].ToString () == "0") {  	//Значит выходной  	dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	//теперь как значение или как ссылка  	if (fr_a [1].ToString () == "-1") {  		//FREE_IT  		dll_return += " FREE_IT";  	}  	else if (fr_a [1].ToString () == "0") {  		dll_return += " BY VALUE";  	}  }  else {  	dll_return += "PARAMETER " + fr_a [0].ToString ();  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (fr [6].ToString () == "0") {  	//Значит выходной  	dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	//теперь как значение или как ссылка  	if (fr_a [1].ToString () == "-1") {  		//FREE_IT  		dll_return += " FREE_IT";  	}  	else if (fr_a [1].ToString () == "0") {  		dll_return += " BY VALUE";  	}  }  else {  	dll_return += "PARAMETER " + fr_a [0].ToString ();  	if (dll_argument == "")  		dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	else {  		dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_return += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: if (dll_argument == "")  	dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  else {  	dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_UDF,The following statement contains a magic number: dll_argument += "'" + "\n" + get_field_type (fr_a [2].ToString ()' fr_a [4].ToString ()' fr_a [3].ToString ()' fr_a [5].ToString ()' "0"' fr_a [8].ToString ()' true);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//основа  						string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  						//теперь тип данных  						dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  						//есть ли у него Character set  						if (fr [28].ToString () != DBNull.Value.ToString ()) {  							dll_command += " character set " + fr [28].ToString () + "\n";  						}  						//дальше идет значение DEFAULT  						if (fr [7].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [7].ToString () + "\n";  						}  						//проверка  						if (fr [3].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [3].ToString () + "\n";  						}  						//COLLATE  						if (fr [29].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [29].ToString () + "\n";  						}  						//записываем  						com_domains.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("DOMAINS");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//основа  						string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  						//теперь тип данных  						dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  						//есть ли у него Character set  						if (fr [28].ToString () != DBNull.Value.ToString ()) {  							dll_command += " character set " + fr [28].ToString () + "\n";  						}  						//дальше идет значение DEFAULT  						if (fr [7].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [7].ToString () + "\n";  						}  						//проверка  						if (fr [3].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [3].ToString () + "\n";  						}  						//COLLATE  						if (fr [29].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [29].ToString () + "\n";  						}  						//записываем  						com_domains.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("DOMAINS");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//основа  						string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  						//теперь тип данных  						dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  						//есть ли у него Character set  						if (fr [28].ToString () != DBNull.Value.ToString ()) {  							dll_command += " character set " + fr [28].ToString () + "\n";  						}  						//дальше идет значение DEFAULT  						if (fr [7].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [7].ToString () + "\n";  						}  						//проверка  						if (fr [3].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [3].ToString () + "\n";  						}  						//COLLATE  						if (fr [29].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [29].ToString () + "\n";  						}  						//записываем  						com_domains.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("DOMAINS");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//основа  						string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  						//теперь тип данных  						dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  						//есть ли у него Character set  						if (fr [28].ToString () != DBNull.Value.ToString ()) {  							dll_command += " character set " + fr [28].ToString () + "\n";  						}  						//дальше идет значение DEFAULT  						if (fr [7].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [7].ToString () + "\n";  						}  						//проверка  						if (fr [3].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [3].ToString () + "\n";  						}  						//COLLATE  						if (fr [29].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [29].ToString () + "\n";  						}  						//записываем  						com_domains.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("DOMAINS");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//основа  						string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  						//теперь тип данных  						dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  						//есть ли у него Character set  						if (fr [28].ToString () != DBNull.Value.ToString ()) {  							dll_command += " character set " + fr [28].ToString () + "\n";  						}  						//дальше идет значение DEFAULT  						if (fr [7].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [7].ToString () + "\n";  						}  						//проверка  						if (fr [3].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [3].ToString () + "\n";  						}  						//COLLATE  						if (fr [29].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [29].ToString () + "\n";  						}  						//записываем  						com_domains.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("DOMAINS");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//основа  						string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  						//теперь тип данных  						dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  						//есть ли у него Character set  						if (fr [28].ToString () != DBNull.Value.ToString ()) {  							dll_command += " character set " + fr [28].ToString () + "\n";  						}  						//дальше идет значение DEFAULT  						if (fr [7].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [7].ToString () + "\n";  						}  						//проверка  						if (fr [3].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [3].ToString () + "\n";  						}  						//COLLATE  						if (fr [29].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [29].ToString () + "\n";  						}  						//записываем  						com_domains.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("DOMAINS");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//основа  						string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  						//теперь тип данных  						dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  						//есть ли у него Character set  						if (fr [28].ToString () != DBNull.Value.ToString ()) {  							dll_command += " character set " + fr [28].ToString () + "\n";  						}  						//дальше идет значение DEFAULT  						if (fr [7].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [7].ToString () + "\n";  						}  						//проверка  						if (fr [3].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [3].ToString () + "\n";  						}  						//COLLATE  						if (fr [29].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [29].ToString () + "\n";  						}  						//записываем  						com_domains.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("DOMAINS");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//основа  						string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  						//теперь тип данных  						dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  						//есть ли у него Character set  						if (fr [28].ToString () != DBNull.Value.ToString ()) {  							dll_command += " character set " + fr [28].ToString () + "\n";  						}  						//дальше идет значение DEFAULT  						if (fr [7].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [7].ToString () + "\n";  						}  						//проверка  						if (fr [3].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [3].ToString () + "\n";  						}  						//COLLATE  						if (fr [29].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [29].ToString () + "\n";  						}  						//записываем  						com_domains.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("DOMAINS");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//основа  						string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  						//теперь тип данных  						dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  						//есть ли у него Character set  						if (fr [28].ToString () != DBNull.Value.ToString ()) {  							dll_command += " character set " + fr [28].ToString () + "\n";  						}  						//дальше идет значение DEFAULT  						if (fr [7].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [7].ToString () + "\n";  						}  						//проверка  						if (fr [3].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [3].ToString () + "\n";  						}  						//COLLATE  						if (fr [29].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [29].ToString () + "\n";  						}  						//записываем  						com_domains.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("DOMAINS");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//основа  						string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  						//теперь тип данных  						dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  						//есть ли у него Character set  						if (fr [28].ToString () != DBNull.Value.ToString ()) {  							dll_command += " character set " + fr [28].ToString () + "\n";  						}  						//дальше идет значение DEFAULT  						if (fr [7].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [7].ToString () + "\n";  						}  						//проверка  						if (fr [3].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [3].ToString () + "\n";  						}  						//COLLATE  						if (fr [29].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [29].ToString () + "\n";  						}  						//записываем  						com_domains.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("DOMAINS");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//основа  						string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  						//теперь тип данных  						dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  						//есть ли у него Character set  						if (fr [28].ToString () != DBNull.Value.ToString ()) {  							dll_command += " character set " + fr [28].ToString () + "\n";  						}  						//дальше идет значение DEFAULT  						if (fr [7].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [7].ToString () + "\n";  						}  						//проверка  						if (fr [3].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [3].ToString () + "\n";  						}  						//COLLATE  						if (fr [29].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [29].ToString () + "\n";  						}  						//записываем  						com_domains.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("DOMAINS");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//основа  						string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  						//теперь тип данных  						dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  						//есть ли у него Character set  						if (fr [28].ToString () != DBNull.Value.ToString ()) {  							dll_command += " character set " + fr [28].ToString () + "\n";  						}  						//дальше идет значение DEFAULT  						if (fr [7].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [7].ToString () + "\n";  						}  						//проверка  						if (fr [3].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [3].ToString () + "\n";  						}  						//COLLATE  						if (fr [29].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [29].ToString () + "\n";  						}  						//записываем  						com_domains.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("DOMAINS");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//основа  						string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  						//теперь тип данных  						dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  						//есть ли у него Character set  						if (fr [28].ToString () != DBNull.Value.ToString ()) {  							dll_command += " character set " + fr [28].ToString () + "\n";  						}  						//дальше идет значение DEFAULT  						if (fr [7].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [7].ToString () + "\n";  						}  						//проверка  						if (fr [3].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [3].ToString () + "\n";  						}  						//COLLATE  						if (fr [29].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [29].ToString () + "\n";  						}  						//записываем  						com_domains.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("DOMAINS");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						//основа  						string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  						//теперь тип данных  						dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  						//есть ли у него Character set  						if (fr [28].ToString () != DBNull.Value.ToString ()) {  							dll_command += " character set " + fr [28].ToString () + "\n";  						}  						//дальше идет значение DEFAULT  						if (fr [7].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [7].ToString () + "\n";  						}  						//проверка  						if (fr [3].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [3].ToString () + "\n";  						}  						//COLLATE  						if (fr [29].ToString () != DBNull.Value.ToString ()) {  							dll_command += fr [29].ToString () + "\n";  						}  						//записываем  						com_domains.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("DOMAINS");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//основа  					string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  					//теперь тип данных  					dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  					//есть ли у него Character set  					if (fr [28].ToString () != DBNull.Value.ToString ()) {  						dll_command += " character set " + fr [28].ToString () + "\n";  					}  					//дальше идет значение DEFAULT  					if (fr [7].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [7].ToString () + "\n";  					}  					//проверка  					if (fr [3].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [3].ToString () + "\n";  					}  					//COLLATE  					if (fr [29].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [29].ToString () + "\n";  					}  					//записываем  					com_domains.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("DOMAINS");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//основа  					string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  					//теперь тип данных  					dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  					//есть ли у него Character set  					if (fr [28].ToString () != DBNull.Value.ToString ()) {  						dll_command += " character set " + fr [28].ToString () + "\n";  					}  					//дальше идет значение DEFAULT  					if (fr [7].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [7].ToString () + "\n";  					}  					//проверка  					if (fr [3].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [3].ToString () + "\n";  					}  					//COLLATE  					if (fr [29].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [29].ToString () + "\n";  					}  					//записываем  					com_domains.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("DOMAINS");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//основа  					string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  					//теперь тип данных  					dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  					//есть ли у него Character set  					if (fr [28].ToString () != DBNull.Value.ToString ()) {  						dll_command += " character set " + fr [28].ToString () + "\n";  					}  					//дальше идет значение DEFAULT  					if (fr [7].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [7].ToString () + "\n";  					}  					//проверка  					if (fr [3].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [3].ToString () + "\n";  					}  					//COLLATE  					if (fr [29].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [29].ToString () + "\n";  					}  					//записываем  					com_domains.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("DOMAINS");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//основа  					string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  					//теперь тип данных  					dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  					//есть ли у него Character set  					if (fr [28].ToString () != DBNull.Value.ToString ()) {  						dll_command += " character set " + fr [28].ToString () + "\n";  					}  					//дальше идет значение DEFAULT  					if (fr [7].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [7].ToString () + "\n";  					}  					//проверка  					if (fr [3].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [3].ToString () + "\n";  					}  					//COLLATE  					if (fr [29].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [29].ToString () + "\n";  					}  					//записываем  					com_domains.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("DOMAINS");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//основа  					string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  					//теперь тип данных  					dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  					//есть ли у него Character set  					if (fr [28].ToString () != DBNull.Value.ToString ()) {  						dll_command += " character set " + fr [28].ToString () + "\n";  					}  					//дальше идет значение DEFAULT  					if (fr [7].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [7].ToString () + "\n";  					}  					//проверка  					if (fr [3].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [3].ToString () + "\n";  					}  					//COLLATE  					if (fr [29].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [29].ToString () + "\n";  					}  					//записываем  					com_domains.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("DOMAINS");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//основа  					string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  					//теперь тип данных  					dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  					//есть ли у него Character set  					if (fr [28].ToString () != DBNull.Value.ToString ()) {  						dll_command += " character set " + fr [28].ToString () + "\n";  					}  					//дальше идет значение DEFAULT  					if (fr [7].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [7].ToString () + "\n";  					}  					//проверка  					if (fr [3].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [3].ToString () + "\n";  					}  					//COLLATE  					if (fr [29].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [29].ToString () + "\n";  					}  					//записываем  					com_domains.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("DOMAINS");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//основа  					string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  					//теперь тип данных  					dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  					//есть ли у него Character set  					if (fr [28].ToString () != DBNull.Value.ToString ()) {  						dll_command += " character set " + fr [28].ToString () + "\n";  					}  					//дальше идет значение DEFAULT  					if (fr [7].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [7].ToString () + "\n";  					}  					//проверка  					if (fr [3].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [3].ToString () + "\n";  					}  					//COLLATE  					if (fr [29].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [29].ToString () + "\n";  					}  					//записываем  					com_domains.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("DOMAINS");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//основа  					string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  					//теперь тип данных  					dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  					//есть ли у него Character set  					if (fr [28].ToString () != DBNull.Value.ToString ()) {  						dll_command += " character set " + fr [28].ToString () + "\n";  					}  					//дальше идет значение DEFAULT  					if (fr [7].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [7].ToString () + "\n";  					}  					//проверка  					if (fr [3].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [3].ToString () + "\n";  					}  					//COLLATE  					if (fr [29].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [29].ToString () + "\n";  					}  					//записываем  					com_domains.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("DOMAINS");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//основа  					string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  					//теперь тип данных  					dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  					//есть ли у него Character set  					if (fr [28].ToString () != DBNull.Value.ToString ()) {  						dll_command += " character set " + fr [28].ToString () + "\n";  					}  					//дальше идет значение DEFAULT  					if (fr [7].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [7].ToString () + "\n";  					}  					//проверка  					if (fr [3].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [3].ToString () + "\n";  					}  					//COLLATE  					if (fr [29].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [29].ToString () + "\n";  					}  					//записываем  					com_domains.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("DOMAINS");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//основа  					string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  					//теперь тип данных  					dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  					//есть ли у него Character set  					if (fr [28].ToString () != DBNull.Value.ToString ()) {  						dll_command += " character set " + fr [28].ToString () + "\n";  					}  					//дальше идет значение DEFAULT  					if (fr [7].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [7].ToString () + "\n";  					}  					//проверка  					if (fr [3].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [3].ToString () + "\n";  					}  					//COLLATE  					if (fr [29].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [29].ToString () + "\n";  					}  					//записываем  					com_domains.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("DOMAINS");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//основа  					string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  					//теперь тип данных  					dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  					//есть ли у него Character set  					if (fr [28].ToString () != DBNull.Value.ToString ()) {  						dll_command += " character set " + fr [28].ToString () + "\n";  					}  					//дальше идет значение DEFAULT  					if (fr [7].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [7].ToString () + "\n";  					}  					//проверка  					if (fr [3].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [3].ToString () + "\n";  					}  					//COLLATE  					if (fr [29].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [29].ToString () + "\n";  					}  					//записываем  					com_domains.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("DOMAINS");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//основа  					string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  					//теперь тип данных  					dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  					//есть ли у него Character set  					if (fr [28].ToString () != DBNull.Value.ToString ()) {  						dll_command += " character set " + fr [28].ToString () + "\n";  					}  					//дальше идет значение DEFAULT  					if (fr [7].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [7].ToString () + "\n";  					}  					//проверка  					if (fr [3].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [3].ToString () + "\n";  					}  					//COLLATE  					if (fr [29].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [29].ToString () + "\n";  					}  					//записываем  					com_domains.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("DOMAINS");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//основа  					string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  					//теперь тип данных  					dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  					//есть ли у него Character set  					if (fr [28].ToString () != DBNull.Value.ToString ()) {  						dll_command += " character set " + fr [28].ToString () + "\n";  					}  					//дальше идет значение DEFAULT  					if (fr [7].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [7].ToString () + "\n";  					}  					//проверка  					if (fr [3].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [3].ToString () + "\n";  					}  					//COLLATE  					if (fr [29].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [29].ToString () + "\n";  					}  					//записываем  					com_domains.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("DOMAINS");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					//основа  					string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  					//теперь тип данных  					dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  					//есть ли у него Character set  					if (fr [28].ToString () != DBNull.Value.ToString ()) {  						dll_command += " character set " + fr [28].ToString () + "\n";  					}  					//дальше идет значение DEFAULT  					if (fr [7].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [7].ToString () + "\n";  					}  					//проверка  					if (fr [3].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [3].ToString () + "\n";  					}  					//COLLATE  					if (fr [29].ToString () != DBNull.Value.ToString ()) {  						dll_command += fr [29].ToString () + "\n";  					}  					//записываем  					com_domains.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("DOMAINS");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//основа  				string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  				//теперь тип данных  				dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  				//есть ли у него Character set  				if (fr [28].ToString () != DBNull.Value.ToString ()) {  					dll_command += " character set " + fr [28].ToString () + "\n";  				}  				//дальше идет значение DEFAULT  				if (fr [7].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [7].ToString () + "\n";  				}  				//проверка  				if (fr [3].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [3].ToString () + "\n";  				}  				//COLLATE  				if (fr [29].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [29].ToString () + "\n";  				}  				//записываем  				com_domains.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//основа  				string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  				//теперь тип данных  				dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  				//есть ли у него Character set  				if (fr [28].ToString () != DBNull.Value.ToString ()) {  					dll_command += " character set " + fr [28].ToString () + "\n";  				}  				//дальше идет значение DEFAULT  				if (fr [7].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [7].ToString () + "\n";  				}  				//проверка  				if (fr [3].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [3].ToString () + "\n";  				}  				//COLLATE  				if (fr [29].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [29].ToString () + "\n";  				}  				//записываем  				com_domains.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//основа  				string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  				//теперь тип данных  				dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  				//есть ли у него Character set  				if (fr [28].ToString () != DBNull.Value.ToString ()) {  					dll_command += " character set " + fr [28].ToString () + "\n";  				}  				//дальше идет значение DEFAULT  				if (fr [7].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [7].ToString () + "\n";  				}  				//проверка  				if (fr [3].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [3].ToString () + "\n";  				}  				//COLLATE  				if (fr [29].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [29].ToString () + "\n";  				}  				//записываем  				com_domains.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//основа  				string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  				//теперь тип данных  				dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  				//есть ли у него Character set  				if (fr [28].ToString () != DBNull.Value.ToString ()) {  					dll_command += " character set " + fr [28].ToString () + "\n";  				}  				//дальше идет значение DEFAULT  				if (fr [7].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [7].ToString () + "\n";  				}  				//проверка  				if (fr [3].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [3].ToString () + "\n";  				}  				//COLLATE  				if (fr [29].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [29].ToString () + "\n";  				}  				//записываем  				com_domains.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//основа  				string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  				//теперь тип данных  				dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  				//есть ли у него Character set  				if (fr [28].ToString () != DBNull.Value.ToString ()) {  					dll_command += " character set " + fr [28].ToString () + "\n";  				}  				//дальше идет значение DEFAULT  				if (fr [7].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [7].ToString () + "\n";  				}  				//проверка  				if (fr [3].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [3].ToString () + "\n";  				}  				//COLLATE  				if (fr [29].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [29].ToString () + "\n";  				}  				//записываем  				com_domains.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//основа  				string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  				//теперь тип данных  				dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  				//есть ли у него Character set  				if (fr [28].ToString () != DBNull.Value.ToString ()) {  					dll_command += " character set " + fr [28].ToString () + "\n";  				}  				//дальше идет значение DEFAULT  				if (fr [7].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [7].ToString () + "\n";  				}  				//проверка  				if (fr [3].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [3].ToString () + "\n";  				}  				//COLLATE  				if (fr [29].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [29].ToString () + "\n";  				}  				//записываем  				com_domains.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//основа  				string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  				//теперь тип данных  				dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  				//есть ли у него Character set  				if (fr [28].ToString () != DBNull.Value.ToString ()) {  					dll_command += " character set " + fr [28].ToString () + "\n";  				}  				//дальше идет значение DEFAULT  				if (fr [7].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [7].ToString () + "\n";  				}  				//проверка  				if (fr [3].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [3].ToString () + "\n";  				}  				//COLLATE  				if (fr [29].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [29].ToString () + "\n";  				}  				//записываем  				com_domains.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//основа  				string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  				//теперь тип данных  				dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  				//есть ли у него Character set  				if (fr [28].ToString () != DBNull.Value.ToString ()) {  					dll_command += " character set " + fr [28].ToString () + "\n";  				}  				//дальше идет значение DEFAULT  				if (fr [7].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [7].ToString () + "\n";  				}  				//проверка  				if (fr [3].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [3].ToString () + "\n";  				}  				//COLLATE  				if (fr [29].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [29].ToString () + "\n";  				}  				//записываем  				com_domains.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//основа  				string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  				//теперь тип данных  				dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  				//есть ли у него Character set  				if (fr [28].ToString () != DBNull.Value.ToString ()) {  					dll_command += " character set " + fr [28].ToString () + "\n";  				}  				//дальше идет значение DEFAULT  				if (fr [7].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [7].ToString () + "\n";  				}  				//проверка  				if (fr [3].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [3].ToString () + "\n";  				}  				//COLLATE  				if (fr [29].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [29].ToString () + "\n";  				}  				//записываем  				com_domains.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//основа  				string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  				//теперь тип данных  				dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  				//есть ли у него Character set  				if (fr [28].ToString () != DBNull.Value.ToString ()) {  					dll_command += " character set " + fr [28].ToString () + "\n";  				}  				//дальше идет значение DEFAULT  				if (fr [7].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [7].ToString () + "\n";  				}  				//проверка  				if (fr [3].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [3].ToString () + "\n";  				}  				//COLLATE  				if (fr [29].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [29].ToString () + "\n";  				}  				//записываем  				com_domains.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//основа  				string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  				//теперь тип данных  				dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  				//есть ли у него Character set  				if (fr [28].ToString () != DBNull.Value.ToString ()) {  					dll_command += " character set " + fr [28].ToString () + "\n";  				}  				//дальше идет значение DEFAULT  				if (fr [7].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [7].ToString () + "\n";  				}  				//проверка  				if (fr [3].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [3].ToString () + "\n";  				}  				//COLLATE  				if (fr [29].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [29].ToString () + "\n";  				}  				//записываем  				com_domains.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//основа  				string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  				//теперь тип данных  				dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  				//есть ли у него Character set  				if (fr [28].ToString () != DBNull.Value.ToString ()) {  					dll_command += " character set " + fr [28].ToString () + "\n";  				}  				//дальше идет значение DEFAULT  				if (fr [7].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [7].ToString () + "\n";  				}  				//проверка  				if (fr [3].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [3].ToString () + "\n";  				}  				//COLLATE  				if (fr [29].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [29].ToString () + "\n";  				}  				//записываем  				com_domains.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//основа  				string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  				//теперь тип данных  				dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  				//есть ли у него Character set  				if (fr [28].ToString () != DBNull.Value.ToString ()) {  					dll_command += " character set " + fr [28].ToString () + "\n";  				}  				//дальше идет значение DEFAULT  				if (fr [7].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [7].ToString () + "\n";  				}  				//проверка  				if (fr [3].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [3].ToString () + "\n";  				}  				//COLLATE  				if (fr [29].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [29].ToString () + "\n";  				}  				//записываем  				com_domains.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				//основа  				string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  				//теперь тип данных  				dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  				//есть ли у него Character set  				if (fr [28].ToString () != DBNull.Value.ToString ()) {  					dll_command += " character set " + fr [28].ToString () + "\n";  				}  				//дальше идет значение DEFAULT  				if (fr [7].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [7].ToString () + "\n";  				}  				//проверка  				if (fr [3].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [3].ToString () + "\n";  				}  				//COLLATE  				if (fr [29].ToString () != DBNull.Value.ToString ()) {  					dll_command += fr [29].ToString () + "\n";  				}  				//записываем  				com_domains.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//основа  			string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  			//теперь тип данных  			dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  			//есть ли у него Character set  			if (fr [28].ToString () != DBNull.Value.ToString ()) {  				dll_command += " character set " + fr [28].ToString () + "\n";  			}  			//дальше идет значение DEFAULT  			if (fr [7].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [7].ToString () + "\n";  			}  			//проверка  			if (fr [3].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [3].ToString () + "\n";  			}  			//COLLATE  			if (fr [29].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [29].ToString () + "\n";  			}  			//записываем  			com_domains.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//основа  			string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  			//теперь тип данных  			dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  			//есть ли у него Character set  			if (fr [28].ToString () != DBNull.Value.ToString ()) {  				dll_command += " character set " + fr [28].ToString () + "\n";  			}  			//дальше идет значение DEFAULT  			if (fr [7].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [7].ToString () + "\n";  			}  			//проверка  			if (fr [3].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [3].ToString () + "\n";  			}  			//COLLATE  			if (fr [29].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [29].ToString () + "\n";  			}  			//записываем  			com_domains.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//основа  			string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  			//теперь тип данных  			dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  			//есть ли у него Character set  			if (fr [28].ToString () != DBNull.Value.ToString ()) {  				dll_command += " character set " + fr [28].ToString () + "\n";  			}  			//дальше идет значение DEFAULT  			if (fr [7].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [7].ToString () + "\n";  			}  			//проверка  			if (fr [3].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [3].ToString () + "\n";  			}  			//COLLATE  			if (fr [29].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [29].ToString () + "\n";  			}  			//записываем  			com_domains.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//основа  			string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  			//теперь тип данных  			dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  			//есть ли у него Character set  			if (fr [28].ToString () != DBNull.Value.ToString ()) {  				dll_command += " character set " + fr [28].ToString () + "\n";  			}  			//дальше идет значение DEFAULT  			if (fr [7].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [7].ToString () + "\n";  			}  			//проверка  			if (fr [3].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [3].ToString () + "\n";  			}  			//COLLATE  			if (fr [29].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [29].ToString () + "\n";  			}  			//записываем  			com_domains.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//основа  			string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  			//теперь тип данных  			dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  			//есть ли у него Character set  			if (fr [28].ToString () != DBNull.Value.ToString ()) {  				dll_command += " character set " + fr [28].ToString () + "\n";  			}  			//дальше идет значение DEFAULT  			if (fr [7].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [7].ToString () + "\n";  			}  			//проверка  			if (fr [3].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [3].ToString () + "\n";  			}  			//COLLATE  			if (fr [29].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [29].ToString () + "\n";  			}  			//записываем  			com_domains.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//основа  			string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  			//теперь тип данных  			dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  			//есть ли у него Character set  			if (fr [28].ToString () != DBNull.Value.ToString ()) {  				dll_command += " character set " + fr [28].ToString () + "\n";  			}  			//дальше идет значение DEFAULT  			if (fr [7].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [7].ToString () + "\n";  			}  			//проверка  			if (fr [3].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [3].ToString () + "\n";  			}  			//COLLATE  			if (fr [29].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [29].ToString () + "\n";  			}  			//записываем  			com_domains.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//основа  			string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  			//теперь тип данных  			dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  			//есть ли у него Character set  			if (fr [28].ToString () != DBNull.Value.ToString ()) {  				dll_command += " character set " + fr [28].ToString () + "\n";  			}  			//дальше идет значение DEFAULT  			if (fr [7].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [7].ToString () + "\n";  			}  			//проверка  			if (fr [3].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [3].ToString () + "\n";  			}  			//COLLATE  			if (fr [29].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [29].ToString () + "\n";  			}  			//записываем  			com_domains.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//основа  			string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  			//теперь тип данных  			dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  			//есть ли у него Character set  			if (fr [28].ToString () != DBNull.Value.ToString ()) {  				dll_command += " character set " + fr [28].ToString () + "\n";  			}  			//дальше идет значение DEFAULT  			if (fr [7].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [7].ToString () + "\n";  			}  			//проверка  			if (fr [3].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [3].ToString () + "\n";  			}  			//COLLATE  			if (fr [29].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [29].ToString () + "\n";  			}  			//записываем  			com_domains.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//основа  			string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  			//теперь тип данных  			dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  			//есть ли у него Character set  			if (fr [28].ToString () != DBNull.Value.ToString ()) {  				dll_command += " character set " + fr [28].ToString () + "\n";  			}  			//дальше идет значение DEFAULT  			if (fr [7].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [7].ToString () + "\n";  			}  			//проверка  			if (fr [3].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [3].ToString () + "\n";  			}  			//COLLATE  			if (fr [29].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [29].ToString () + "\n";  			}  			//записываем  			com_domains.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//основа  			string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  			//теперь тип данных  			dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  			//есть ли у него Character set  			if (fr [28].ToString () != DBNull.Value.ToString ()) {  				dll_command += " character set " + fr [28].ToString () + "\n";  			}  			//дальше идет значение DEFAULT  			if (fr [7].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [7].ToString () + "\n";  			}  			//проверка  			if (fr [3].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [3].ToString () + "\n";  			}  			//COLLATE  			if (fr [29].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [29].ToString () + "\n";  			}  			//записываем  			com_domains.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//основа  			string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  			//теперь тип данных  			dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  			//есть ли у него Character set  			if (fr [28].ToString () != DBNull.Value.ToString ()) {  				dll_command += " character set " + fr [28].ToString () + "\n";  			}  			//дальше идет значение DEFAULT  			if (fr [7].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [7].ToString () + "\n";  			}  			//проверка  			if (fr [3].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [3].ToString () + "\n";  			}  			//COLLATE  			if (fr [29].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [29].ToString () + "\n";  			}  			//записываем  			com_domains.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//основа  			string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  			//теперь тип данных  			dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  			//есть ли у него Character set  			if (fr [28].ToString () != DBNull.Value.ToString ()) {  				dll_command += " character set " + fr [28].ToString () + "\n";  			}  			//дальше идет значение DEFAULT  			if (fr [7].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [7].ToString () + "\n";  			}  			//проверка  			if (fr [3].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [3].ToString () + "\n";  			}  			//COLLATE  			if (fr [29].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [29].ToString () + "\n";  			}  			//записываем  			com_domains.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//основа  			string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  			//теперь тип данных  			dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  			//есть ли у него Character set  			if (fr [28].ToString () != DBNull.Value.ToString ()) {  				dll_command += " character set " + fr [28].ToString () + "\n";  			}  			//дальше идет значение DEFAULT  			if (fr [7].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [7].ToString () + "\n";  			}  			//проверка  			if (fr [3].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [3].ToString () + "\n";  			}  			//COLLATE  			if (fr [29].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [29].ToString () + "\n";  			}  			//записываем  			com_domains.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_domains' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			//основа  			string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  			//теперь тип данных  			dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  			//есть ли у него Character set  			if (fr [28].ToString () != DBNull.Value.ToString ()) {  				dll_command += " character set " + fr [28].ToString () + "\n";  			}  			//дальше идет значение DEFAULT  			if (fr [7].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [7].ToString () + "\n";  			}  			//проверка  			if (fr [3].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [3].ToString () + "\n";  			}  			//COLLATE  			if (fr [29].ToString () != DBNull.Value.ToString ()) {  				dll_command += fr [29].ToString () + "\n";  			}  			//записываем  			com_domains.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//основа  		string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  		//теперь тип данных  		dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  		//есть ли у него Character set  		if (fr [28].ToString () != DBNull.Value.ToString ()) {  			dll_command += " character set " + fr [28].ToString () + "\n";  		}  		//дальше идет значение DEFAULT  		if (fr [7].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [7].ToString () + "\n";  		}  		//проверка  		if (fr [3].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [3].ToString () + "\n";  		}  		//COLLATE  		if (fr [29].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [29].ToString () + "\n";  		}  		//записываем  		com_domains.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//основа  		string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  		//теперь тип данных  		dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  		//есть ли у него Character set  		if (fr [28].ToString () != DBNull.Value.ToString ()) {  			dll_command += " character set " + fr [28].ToString () + "\n";  		}  		//дальше идет значение DEFAULT  		if (fr [7].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [7].ToString () + "\n";  		}  		//проверка  		if (fr [3].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [3].ToString () + "\n";  		}  		//COLLATE  		if (fr [29].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [29].ToString () + "\n";  		}  		//записываем  		com_domains.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//основа  		string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  		//теперь тип данных  		dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  		//есть ли у него Character set  		if (fr [28].ToString () != DBNull.Value.ToString ()) {  			dll_command += " character set " + fr [28].ToString () + "\n";  		}  		//дальше идет значение DEFAULT  		if (fr [7].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [7].ToString () + "\n";  		}  		//проверка  		if (fr [3].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [3].ToString () + "\n";  		}  		//COLLATE  		if (fr [29].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [29].ToString () + "\n";  		}  		//записываем  		com_domains.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//основа  		string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  		//теперь тип данных  		dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  		//есть ли у него Character set  		if (fr [28].ToString () != DBNull.Value.ToString ()) {  			dll_command += " character set " + fr [28].ToString () + "\n";  		}  		//дальше идет значение DEFAULT  		if (fr [7].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [7].ToString () + "\n";  		}  		//проверка  		if (fr [3].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [3].ToString () + "\n";  		}  		//COLLATE  		if (fr [29].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [29].ToString () + "\n";  		}  		//записываем  		com_domains.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//основа  		string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  		//теперь тип данных  		dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  		//есть ли у него Character set  		if (fr [28].ToString () != DBNull.Value.ToString ()) {  			dll_command += " character set " + fr [28].ToString () + "\n";  		}  		//дальше идет значение DEFAULT  		if (fr [7].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [7].ToString () + "\n";  		}  		//проверка  		if (fr [3].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [3].ToString () + "\n";  		}  		//COLLATE  		if (fr [29].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [29].ToString () + "\n";  		}  		//записываем  		com_domains.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//основа  		string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  		//теперь тип данных  		dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  		//есть ли у него Character set  		if (fr [28].ToString () != DBNull.Value.ToString ()) {  			dll_command += " character set " + fr [28].ToString () + "\n";  		}  		//дальше идет значение DEFAULT  		if (fr [7].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [7].ToString () + "\n";  		}  		//проверка  		if (fr [3].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [3].ToString () + "\n";  		}  		//COLLATE  		if (fr [29].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [29].ToString () + "\n";  		}  		//записываем  		com_domains.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//основа  		string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  		//теперь тип данных  		dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  		//есть ли у него Character set  		if (fr [28].ToString () != DBNull.Value.ToString ()) {  			dll_command += " character set " + fr [28].ToString () + "\n";  		}  		//дальше идет значение DEFAULT  		if (fr [7].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [7].ToString () + "\n";  		}  		//проверка  		if (fr [3].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [3].ToString () + "\n";  		}  		//COLLATE  		if (fr [29].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [29].ToString () + "\n";  		}  		//записываем  		com_domains.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//основа  		string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  		//теперь тип данных  		dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  		//есть ли у него Character set  		if (fr [28].ToString () != DBNull.Value.ToString ()) {  			dll_command += " character set " + fr [28].ToString () + "\n";  		}  		//дальше идет значение DEFAULT  		if (fr [7].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [7].ToString () + "\n";  		}  		//проверка  		if (fr [3].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [3].ToString () + "\n";  		}  		//COLLATE  		if (fr [29].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [29].ToString () + "\n";  		}  		//записываем  		com_domains.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//основа  		string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  		//теперь тип данных  		dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  		//есть ли у него Character set  		if (fr [28].ToString () != DBNull.Value.ToString ()) {  			dll_command += " character set " + fr [28].ToString () + "\n";  		}  		//дальше идет значение DEFAULT  		if (fr [7].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [7].ToString () + "\n";  		}  		//проверка  		if (fr [3].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [3].ToString () + "\n";  		}  		//COLLATE  		if (fr [29].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [29].ToString () + "\n";  		}  		//записываем  		com_domains.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//основа  		string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  		//теперь тип данных  		dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  		//есть ли у него Character set  		if (fr [28].ToString () != DBNull.Value.ToString ()) {  			dll_command += " character set " + fr [28].ToString () + "\n";  		}  		//дальше идет значение DEFAULT  		if (fr [7].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [7].ToString () + "\n";  		}  		//проверка  		if (fr [3].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [3].ToString () + "\n";  		}  		//COLLATE  		if (fr [29].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [29].ToString () + "\n";  		}  		//записываем  		com_domains.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//основа  		string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  		//теперь тип данных  		dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  		//есть ли у него Character set  		if (fr [28].ToString () != DBNull.Value.ToString ()) {  			dll_command += " character set " + fr [28].ToString () + "\n";  		}  		//дальше идет значение DEFAULT  		if (fr [7].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [7].ToString () + "\n";  		}  		//проверка  		if (fr [3].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [3].ToString () + "\n";  		}  		//COLLATE  		if (fr [29].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [29].ToString () + "\n";  		}  		//записываем  		com_domains.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//основа  		string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  		//теперь тип данных  		dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  		//есть ли у него Character set  		if (fr [28].ToString () != DBNull.Value.ToString ()) {  			dll_command += " character set " + fr [28].ToString () + "\n";  		}  		//дальше идет значение DEFAULT  		if (fr [7].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [7].ToString () + "\n";  		}  		//проверка  		if (fr [3].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [3].ToString () + "\n";  		}  		//COLLATE  		if (fr [29].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [29].ToString () + "\n";  		}  		//записываем  		com_domains.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//основа  		string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  		//теперь тип данных  		dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  		//есть ли у него Character set  		if (fr [28].ToString () != DBNull.Value.ToString ()) {  			dll_command += " character set " + fr [28].ToString () + "\n";  		}  		//дальше идет значение DEFAULT  		if (fr [7].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [7].ToString () + "\n";  		}  		//проверка  		if (fr [3].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [3].ToString () + "\n";  		}  		//COLLATE  		if (fr [29].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [29].ToString () + "\n";  		}  		//записываем  		com_domains.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		//основа  		string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  		//теперь тип данных  		dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  		//есть ли у него Character set  		if (fr [28].ToString () != DBNull.Value.ToString ()) {  			dll_command += " character set " + fr [28].ToString () + "\n";  		}  		//дальше идет значение DEFAULT  		if (fr [7].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [7].ToString () + "\n";  		}  		//проверка  		if (fr [3].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [3].ToString () + "\n";  		}  		//COLLATE  		if (fr [29].ToString () != DBNull.Value.ToString ()) {  			dll_command += fr [29].ToString () + "\n";  		}  		//записываем  		com_domains.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: while (fr.Read ()) {  	//основа  	string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  	//теперь тип данных  	dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  	//есть ли у него Character set  	if (fr [28].ToString () != DBNull.Value.ToString ()) {  		dll_command += " character set " + fr [28].ToString () + "\n";  	}  	//дальше идет значение DEFAULT  	if (fr [7].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [7].ToString () + "\n";  	}  	//проверка  	if (fr [3].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [3].ToString () + "\n";  	}  	//COLLATE  	if (fr [29].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [29].ToString () + "\n";  	}  	//записываем  	com_domains.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: while (fr.Read ()) {  	//основа  	string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  	//теперь тип данных  	dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  	//есть ли у него Character set  	if (fr [28].ToString () != DBNull.Value.ToString ()) {  		dll_command += " character set " + fr [28].ToString () + "\n";  	}  	//дальше идет значение DEFAULT  	if (fr [7].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [7].ToString () + "\n";  	}  	//проверка  	if (fr [3].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [3].ToString () + "\n";  	}  	//COLLATE  	if (fr [29].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [29].ToString () + "\n";  	}  	//записываем  	com_domains.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: while (fr.Read ()) {  	//основа  	string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  	//теперь тип данных  	dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  	//есть ли у него Character set  	if (fr [28].ToString () != DBNull.Value.ToString ()) {  		dll_command += " character set " + fr [28].ToString () + "\n";  	}  	//дальше идет значение DEFAULT  	if (fr [7].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [7].ToString () + "\n";  	}  	//проверка  	if (fr [3].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [3].ToString () + "\n";  	}  	//COLLATE  	if (fr [29].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [29].ToString () + "\n";  	}  	//записываем  	com_domains.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: while (fr.Read ()) {  	//основа  	string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  	//теперь тип данных  	dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  	//есть ли у него Character set  	if (fr [28].ToString () != DBNull.Value.ToString ()) {  		dll_command += " character set " + fr [28].ToString () + "\n";  	}  	//дальше идет значение DEFAULT  	if (fr [7].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [7].ToString () + "\n";  	}  	//проверка  	if (fr [3].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [3].ToString () + "\n";  	}  	//COLLATE  	if (fr [29].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [29].ToString () + "\n";  	}  	//записываем  	com_domains.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: while (fr.Read ()) {  	//основа  	string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  	//теперь тип данных  	dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  	//есть ли у него Character set  	if (fr [28].ToString () != DBNull.Value.ToString ()) {  		dll_command += " character set " + fr [28].ToString () + "\n";  	}  	//дальше идет значение DEFAULT  	if (fr [7].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [7].ToString () + "\n";  	}  	//проверка  	if (fr [3].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [3].ToString () + "\n";  	}  	//COLLATE  	if (fr [29].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [29].ToString () + "\n";  	}  	//записываем  	com_domains.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: while (fr.Read ()) {  	//основа  	string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  	//теперь тип данных  	dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  	//есть ли у него Character set  	if (fr [28].ToString () != DBNull.Value.ToString ()) {  		dll_command += " character set " + fr [28].ToString () + "\n";  	}  	//дальше идет значение DEFAULT  	if (fr [7].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [7].ToString () + "\n";  	}  	//проверка  	if (fr [3].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [3].ToString () + "\n";  	}  	//COLLATE  	if (fr [29].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [29].ToString () + "\n";  	}  	//записываем  	com_domains.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: while (fr.Read ()) {  	//основа  	string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  	//теперь тип данных  	dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  	//есть ли у него Character set  	if (fr [28].ToString () != DBNull.Value.ToString ()) {  		dll_command += " character set " + fr [28].ToString () + "\n";  	}  	//дальше идет значение DEFAULT  	if (fr [7].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [7].ToString () + "\n";  	}  	//проверка  	if (fr [3].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [3].ToString () + "\n";  	}  	//COLLATE  	if (fr [29].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [29].ToString () + "\n";  	}  	//записываем  	com_domains.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: while (fr.Read ()) {  	//основа  	string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  	//теперь тип данных  	dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  	//есть ли у него Character set  	if (fr [28].ToString () != DBNull.Value.ToString ()) {  		dll_command += " character set " + fr [28].ToString () + "\n";  	}  	//дальше идет значение DEFAULT  	if (fr [7].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [7].ToString () + "\n";  	}  	//проверка  	if (fr [3].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [3].ToString () + "\n";  	}  	//COLLATE  	if (fr [29].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [29].ToString () + "\n";  	}  	//записываем  	com_domains.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: while (fr.Read ()) {  	//основа  	string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  	//теперь тип данных  	dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  	//есть ли у него Character set  	if (fr [28].ToString () != DBNull.Value.ToString ()) {  		dll_command += " character set " + fr [28].ToString () + "\n";  	}  	//дальше идет значение DEFAULT  	if (fr [7].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [7].ToString () + "\n";  	}  	//проверка  	if (fr [3].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [3].ToString () + "\n";  	}  	//COLLATE  	if (fr [29].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [29].ToString () + "\n";  	}  	//записываем  	com_domains.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: while (fr.Read ()) {  	//основа  	string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  	//теперь тип данных  	dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  	//есть ли у него Character set  	if (fr [28].ToString () != DBNull.Value.ToString ()) {  		dll_command += " character set " + fr [28].ToString () + "\n";  	}  	//дальше идет значение DEFAULT  	if (fr [7].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [7].ToString () + "\n";  	}  	//проверка  	if (fr [3].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [3].ToString () + "\n";  	}  	//COLLATE  	if (fr [29].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [29].ToString () + "\n";  	}  	//записываем  	com_domains.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: while (fr.Read ()) {  	//основа  	string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  	//теперь тип данных  	dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  	//есть ли у него Character set  	if (fr [28].ToString () != DBNull.Value.ToString ()) {  		dll_command += " character set " + fr [28].ToString () + "\n";  	}  	//дальше идет значение DEFAULT  	if (fr [7].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [7].ToString () + "\n";  	}  	//проверка  	if (fr [3].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [3].ToString () + "\n";  	}  	//COLLATE  	if (fr [29].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [29].ToString () + "\n";  	}  	//записываем  	com_domains.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: while (fr.Read ()) {  	//основа  	string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  	//теперь тип данных  	dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  	//есть ли у него Character set  	if (fr [28].ToString () != DBNull.Value.ToString ()) {  		dll_command += " character set " + fr [28].ToString () + "\n";  	}  	//дальше идет значение DEFAULT  	if (fr [7].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [7].ToString () + "\n";  	}  	//проверка  	if (fr [3].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [3].ToString () + "\n";  	}  	//COLLATE  	if (fr [29].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [29].ToString () + "\n";  	}  	//записываем  	com_domains.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: while (fr.Read ()) {  	//основа  	string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  	//теперь тип данных  	dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  	//есть ли у него Character set  	if (fr [28].ToString () != DBNull.Value.ToString ()) {  		dll_command += " character set " + fr [28].ToString () + "\n";  	}  	//дальше идет значение DEFAULT  	if (fr [7].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [7].ToString () + "\n";  	}  	//проверка  	if (fr [3].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [3].ToString () + "\n";  	}  	//COLLATE  	if (fr [29].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [29].ToString () + "\n";  	}  	//записываем  	com_domains.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: while (fr.Read ()) {  	//основа  	string dll_command = "create domain " + fr [0].ToString () + "\n" + "as" + "\n";  	//теперь тип данных  	dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  	//есть ли у него Character set  	if (fr [28].ToString () != DBNull.Value.ToString ()) {  		dll_command += " character set " + fr [28].ToString () + "\n";  	}  	//дальше идет значение DEFAULT  	if (fr [7].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [7].ToString () + "\n";  	}  	//проверка  	if (fr [3].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [3].ToString () + "\n";  	}  	//COLLATE  	if (fr [29].ToString () != DBNull.Value.ToString ()) {  		dll_command += fr [29].ToString () + "\n";  	}  	//записываем  	com_domains.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: dll_command += get_field_type (fr [10].ToString ()' fr [8].ToString ()' fr [9].ToString ()' fr [11].ToString ()' fr [17].ToString ()' fr [27].ToString ()) + "\n";  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: if (fr [28].ToString () != DBNull.Value.ToString ()) {  	dll_command += " character set " + fr [28].ToString () + "\n";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: if (fr [28].ToString () != DBNull.Value.ToString ()) {  	dll_command += " character set " + fr [28].ToString () + "\n";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: dll_command += " character set " + fr [28].ToString () + "\n";  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: if (fr [7].ToString () != DBNull.Value.ToString ()) {  	dll_command += fr [7].ToString () + "\n";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: if (fr [7].ToString () != DBNull.Value.ToString ()) {  	dll_command += fr [7].ToString () + "\n";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: dll_command += fr [7].ToString () + "\n";  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: if (fr [3].ToString () != DBNull.Value.ToString ()) {  	dll_command += fr [3].ToString () + "\n";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: if (fr [3].ToString () != DBNull.Value.ToString ()) {  	dll_command += fr [3].ToString () + "\n";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: dll_command += fr [3].ToString () + "\n";  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: if (fr [29].ToString () != DBNull.Value.ToString ()) {  	dll_command += fr [29].ToString () + "\n";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: if (fr [29].ToString () != DBNull.Value.ToString ()) {  	dll_command += fr [29].ToString () + "\n";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_DOMAINS,The following statement contains a magic number: dll_command += fr [29].ToString () + "\n";  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						tables_.Add (fr [0].ToString ());  						//добавляем сразу в список таблиц  						string dll_command = "create table ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "(" + "\n";  						}  						//спикос полей  						using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								string fields_ = "";  								while (fr_a.Read ()) {  									//если у нас поле происходит из простого типа' то найдем его  									if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  										if (fields_ != "") {  											fields_ += "'" + "\n";  										}  										fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									}  									else {  										if (fields_ != "") {  											fields_ += "'" + "\n";  										}  										fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  									}  									//Обязательное?  									if (fr_a [2].ToString ().Trim () == "1") {  										fields_ += " NOT NULL";  									}  								}  								dll_command += fields_ + "\n" + ")";  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						com_tables.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						tables_.Add (fr [0].ToString ());  						//добавляем сразу в список таблиц  						string dll_command = "create table ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "(" + "\n";  						}  						//спикос полей  						using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								string fields_ = "";  								while (fr_a.Read ()) {  									//если у нас поле происходит из простого типа' то найдем его  									if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  										if (fields_ != "") {  											fields_ += "'" + "\n";  										}  										fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									}  									else {  										if (fields_ != "") {  											fields_ += "'" + "\n";  										}  										fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  									}  									//Обязательное?  									if (fr_a [2].ToString ().Trim () == "1") {  										fields_ += " NOT NULL";  									}  								}  								dll_command += fields_ + "\n" + ")";  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						com_tables.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						tables_.Add (fr [0].ToString ());  						//добавляем сразу в список таблиц  						string dll_command = "create table ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "(" + "\n";  						}  						//спикос полей  						using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								string fields_ = "";  								while (fr_a.Read ()) {  									//если у нас поле происходит из простого типа' то найдем его  									if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  										if (fields_ != "") {  											fields_ += "'" + "\n";  										}  										fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									}  									else {  										if (fields_ != "") {  											fields_ += "'" + "\n";  										}  										fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  									}  									//Обязательное?  									if (fr_a [2].ToString ().Trim () == "1") {  										fields_ += " NOT NULL";  									}  								}  								dll_command += fields_ + "\n" + ")";  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						com_tables.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						tables_.Add (fr [0].ToString ());  						//добавляем сразу в список таблиц  						string dll_command = "create table ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "(" + "\n";  						}  						//спикос полей  						using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								string fields_ = "";  								while (fr_a.Read ()) {  									//если у нас поле происходит из простого типа' то найдем его  									if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  										if (fields_ != "") {  											fields_ += "'" + "\n";  										}  										fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									}  									else {  										if (fields_ != "") {  											fields_ += "'" + "\n";  										}  										fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  									}  									//Обязательное?  									if (fr_a [2].ToString ().Trim () == "1") {  										fields_ += " NOT NULL";  									}  								}  								dll_command += fields_ + "\n" + ")";  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						com_tables.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						tables_.Add (fr [0].ToString ());  						//добавляем сразу в список таблиц  						string dll_command = "create table ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "(" + "\n";  						}  						//спикос полей  						using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								string fields_ = "";  								while (fr_a.Read ()) {  									//если у нас поле происходит из простого типа' то найдем его  									if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  										if (fields_ != "") {  											fields_ += "'" + "\n";  										}  										fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									}  									else {  										if (fields_ != "") {  											fields_ += "'" + "\n";  										}  										fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  									}  									//Обязательное?  									if (fr_a [2].ToString ().Trim () == "1") {  										fields_ += " NOT NULL";  									}  								}  								dll_command += fields_ + "\n" + ")";  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						com_tables.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						tables_.Add (fr [0].ToString ());  						//добавляем сразу в список таблиц  						string dll_command = "create table ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "(" + "\n";  						}  						//спикос полей  						using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								string fields_ = "";  								while (fr_a.Read ()) {  									//если у нас поле происходит из простого типа' то найдем его  									if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  										if (fields_ != "") {  											fields_ += "'" + "\n";  										}  										fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									}  									else {  										if (fields_ != "") {  											fields_ += "'" + "\n";  										}  										fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  									}  									//Обязательное?  									if (fr_a [2].ToString ().Trim () == "1") {  										fields_ += " NOT NULL";  									}  								}  								dll_command += fields_ + "\n" + ")";  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						com_tables.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						tables_.Add (fr [0].ToString ());  						//добавляем сразу в список таблиц  						string dll_command = "create table ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "(" + "\n";  						}  						//спикос полей  						using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								string fields_ = "";  								while (fr_a.Read ()) {  									//если у нас поле происходит из простого типа' то найдем его  									if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  										if (fields_ != "") {  											fields_ += "'" + "\n";  										}  										fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									}  									else {  										if (fields_ != "") {  											fields_ += "'" + "\n";  										}  										fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  									}  									//Обязательное?  									if (fr_a [2].ToString ().Trim () == "1") {  										fields_ += " NOT NULL";  									}  								}  								dll_command += fields_ + "\n" + ")";  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						com_tables.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						tables_.Add (fr [0].ToString ());  						//добавляем сразу в список таблиц  						string dll_command = "create table ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "(" + "\n";  						}  						//спикос полей  						using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								string fields_ = "";  								while (fr_a.Read ()) {  									//если у нас поле происходит из простого типа' то найдем его  									if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  										if (fields_ != "") {  											fields_ += "'" + "\n";  										}  										fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									}  									else {  										if (fields_ != "") {  											fields_ += "'" + "\n";  										}  										fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  									}  									//Обязательное?  									if (fr_a [2].ToString ().Trim () == "1") {  										fields_ += " NOT NULL";  									}  								}  								dll_command += fields_ + "\n" + ")";  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						com_tables.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						tables_.Add (fr [0].ToString ());  						//добавляем сразу в список таблиц  						string dll_command = "create table ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "(" + "\n";  						}  						//спикос полей  						using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								string fields_ = "";  								while (fr_a.Read ()) {  									//если у нас поле происходит из простого типа' то найдем его  									if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  										if (fields_ != "") {  											fields_ += "'" + "\n";  										}  										fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									}  									else {  										if (fields_ != "") {  											fields_ += "'" + "\n";  										}  										fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  									}  									//Обязательное?  									if (fr_a [2].ToString ().Trim () == "1") {  										fields_ += " NOT NULL";  									}  								}  								dll_command += fields_ + "\n" + ")";  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						com_tables.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					tables_.Add (fr [0].ToString ());  					//добавляем сразу в список таблиц  					string dll_command = "create table ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "(" + "\n";  					}  					//спикос полей  					using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							string fields_ = "";  							while (fr_a.Read ()) {  								//если у нас поле происходит из простого типа' то найдем его  								if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								}  								else {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  								}  								//Обязательное?  								if (fr_a [2].ToString ().Trim () == "1") {  									fields_ += " NOT NULL";  								}  							}  							dll_command += fields_ + "\n" + ")";  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					com_tables.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					tables_.Add (fr [0].ToString ());  					//добавляем сразу в список таблиц  					string dll_command = "create table ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "(" + "\n";  					}  					//спикос полей  					using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							string fields_ = "";  							while (fr_a.Read ()) {  								//если у нас поле происходит из простого типа' то найдем его  								if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								}  								else {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  								}  								//Обязательное?  								if (fr_a [2].ToString ().Trim () == "1") {  									fields_ += " NOT NULL";  								}  							}  							dll_command += fields_ + "\n" + ")";  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					com_tables.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					tables_.Add (fr [0].ToString ());  					//добавляем сразу в список таблиц  					string dll_command = "create table ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "(" + "\n";  					}  					//спикос полей  					using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							string fields_ = "";  							while (fr_a.Read ()) {  								//если у нас поле происходит из простого типа' то найдем его  								if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								}  								else {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  								}  								//Обязательное?  								if (fr_a [2].ToString ().Trim () == "1") {  									fields_ += " NOT NULL";  								}  							}  							dll_command += fields_ + "\n" + ")";  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					com_tables.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					tables_.Add (fr [0].ToString ());  					//добавляем сразу в список таблиц  					string dll_command = "create table ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "(" + "\n";  					}  					//спикос полей  					using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							string fields_ = "";  							while (fr_a.Read ()) {  								//если у нас поле происходит из простого типа' то найдем его  								if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								}  								else {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  								}  								//Обязательное?  								if (fr_a [2].ToString ().Trim () == "1") {  									fields_ += " NOT NULL";  								}  							}  							dll_command += fields_ + "\n" + ")";  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					com_tables.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					tables_.Add (fr [0].ToString ());  					//добавляем сразу в список таблиц  					string dll_command = "create table ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "(" + "\n";  					}  					//спикос полей  					using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							string fields_ = "";  							while (fr_a.Read ()) {  								//если у нас поле происходит из простого типа' то найдем его  								if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								}  								else {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  								}  								//Обязательное?  								if (fr_a [2].ToString ().Trim () == "1") {  									fields_ += " NOT NULL";  								}  							}  							dll_command += fields_ + "\n" + ")";  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					com_tables.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					tables_.Add (fr [0].ToString ());  					//добавляем сразу в список таблиц  					string dll_command = "create table ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "(" + "\n";  					}  					//спикос полей  					using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							string fields_ = "";  							while (fr_a.Read ()) {  								//если у нас поле происходит из простого типа' то найдем его  								if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								}  								else {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  								}  								//Обязательное?  								if (fr_a [2].ToString ().Trim () == "1") {  									fields_ += " NOT NULL";  								}  							}  							dll_command += fields_ + "\n" + ")";  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					com_tables.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					tables_.Add (fr [0].ToString ());  					//добавляем сразу в список таблиц  					string dll_command = "create table ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "(" + "\n";  					}  					//спикос полей  					using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							string fields_ = "";  							while (fr_a.Read ()) {  								//если у нас поле происходит из простого типа' то найдем его  								if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								}  								else {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  								}  								//Обязательное?  								if (fr_a [2].ToString ().Trim () == "1") {  									fields_ += " NOT NULL";  								}  							}  							dll_command += fields_ + "\n" + ")";  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					com_tables.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					tables_.Add (fr [0].ToString ());  					//добавляем сразу в список таблиц  					string dll_command = "create table ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "(" + "\n";  					}  					//спикос полей  					using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							string fields_ = "";  							while (fr_a.Read ()) {  								//если у нас поле происходит из простого типа' то найдем его  								if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								}  								else {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  								}  								//Обязательное?  								if (fr_a [2].ToString ().Trim () == "1") {  									fields_ += " NOT NULL";  								}  							}  							dll_command += fields_ + "\n" + ")";  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					com_tables.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					tables_.Add (fr [0].ToString ());  					//добавляем сразу в список таблиц  					string dll_command = "create table ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "(" + "\n";  					}  					//спикос полей  					using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							string fields_ = "";  							while (fr_a.Read ()) {  								//если у нас поле происходит из простого типа' то найдем его  								if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								}  								else {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  								}  								//Обязательное?  								if (fr_a [2].ToString ().Trim () == "1") {  									fields_ += " NOT NULL";  								}  							}  							dll_command += fields_ + "\n" + ")";  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					com_tables.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				tables_.Add (fr [0].ToString ());  				//добавляем сразу в список таблиц  				string dll_command = "create table ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "(" + "\n";  				}  				//спикос полей  				using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						string fields_ = "";  						while (fr_a.Read ()) {  							//если у нас поле происходит из простого типа' то найдем его  							if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							}  							else {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  							}  							//Обязательное?  							if (fr_a [2].ToString ().Trim () == "1") {  								fields_ += " NOT NULL";  							}  						}  						dll_command += fields_ + "\n" + ")";  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				com_tables.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				tables_.Add (fr [0].ToString ());  				//добавляем сразу в список таблиц  				string dll_command = "create table ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "(" + "\n";  				}  				//спикос полей  				using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						string fields_ = "";  						while (fr_a.Read ()) {  							//если у нас поле происходит из простого типа' то найдем его  							if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							}  							else {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  							}  							//Обязательное?  							if (fr_a [2].ToString ().Trim () == "1") {  								fields_ += " NOT NULL";  							}  						}  						dll_command += fields_ + "\n" + ")";  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				com_tables.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				tables_.Add (fr [0].ToString ());  				//добавляем сразу в список таблиц  				string dll_command = "create table ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "(" + "\n";  				}  				//спикос полей  				using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						string fields_ = "";  						while (fr_a.Read ()) {  							//если у нас поле происходит из простого типа' то найдем его  							if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							}  							else {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  							}  							//Обязательное?  							if (fr_a [2].ToString ().Trim () == "1") {  								fields_ += " NOT NULL";  							}  						}  						dll_command += fields_ + "\n" + ")";  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				com_tables.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				tables_.Add (fr [0].ToString ());  				//добавляем сразу в список таблиц  				string dll_command = "create table ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "(" + "\n";  				}  				//спикос полей  				using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						string fields_ = "";  						while (fr_a.Read ()) {  							//если у нас поле происходит из простого типа' то найдем его  							if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							}  							else {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  							}  							//Обязательное?  							if (fr_a [2].ToString ().Trim () == "1") {  								fields_ += " NOT NULL";  							}  						}  						dll_command += fields_ + "\n" + ")";  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				com_tables.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				tables_.Add (fr [0].ToString ());  				//добавляем сразу в список таблиц  				string dll_command = "create table ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "(" + "\n";  				}  				//спикос полей  				using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						string fields_ = "";  						while (fr_a.Read ()) {  							//если у нас поле происходит из простого типа' то найдем его  							if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							}  							else {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  							}  							//Обязательное?  							if (fr_a [2].ToString ().Trim () == "1") {  								fields_ += " NOT NULL";  							}  						}  						dll_command += fields_ + "\n" + ")";  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				com_tables.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				tables_.Add (fr [0].ToString ());  				//добавляем сразу в список таблиц  				string dll_command = "create table ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "(" + "\n";  				}  				//спикос полей  				using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						string fields_ = "";  						while (fr_a.Read ()) {  							//если у нас поле происходит из простого типа' то найдем его  							if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							}  							else {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  							}  							//Обязательное?  							if (fr_a [2].ToString ().Trim () == "1") {  								fields_ += " NOT NULL";  							}  						}  						dll_command += fields_ + "\n" + ")";  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				com_tables.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				tables_.Add (fr [0].ToString ());  				//добавляем сразу в список таблиц  				string dll_command = "create table ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "(" + "\n";  				}  				//спикос полей  				using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						string fields_ = "";  						while (fr_a.Read ()) {  							//если у нас поле происходит из простого типа' то найдем его  							if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							}  							else {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  							}  							//Обязательное?  							if (fr_a [2].ToString ().Trim () == "1") {  								fields_ += " NOT NULL";  							}  						}  						dll_command += fields_ + "\n" + ")";  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				com_tables.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				tables_.Add (fr [0].ToString ());  				//добавляем сразу в список таблиц  				string dll_command = "create table ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "(" + "\n";  				}  				//спикос полей  				using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						string fields_ = "";  						while (fr_a.Read ()) {  							//если у нас поле происходит из простого типа' то найдем его  							if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							}  							else {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  							}  							//Обязательное?  							if (fr_a [2].ToString ().Trim () == "1") {  								fields_ += " NOT NULL";  							}  						}  						dll_command += fields_ + "\n" + ")";  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				com_tables.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				tables_.Add (fr [0].ToString ());  				//добавляем сразу в список таблиц  				string dll_command = "create table ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "(" + "\n";  				}  				//спикос полей  				using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						string fields_ = "";  						while (fr_a.Read ()) {  							//если у нас поле происходит из простого типа' то найдем его  							if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							}  							else {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  							}  							//Обязательное?  							if (fr_a [2].ToString ().Trim () == "1") {  								fields_ += " NOT NULL";  							}  						}  						dll_command += fields_ + "\n" + ")";  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				com_tables.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			tables_.Add (fr [0].ToString ());  			//добавляем сразу в список таблиц  			string dll_command = "create table ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "(" + "\n";  			}  			//спикос полей  			using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					string fields_ = "";  					while (fr_a.Read ()) {  						//если у нас поле происходит из простого типа' то найдем его  						if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						}  						else {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  						}  						//Обязательное?  						if (fr_a [2].ToString ().Trim () == "1") {  							fields_ += " NOT NULL";  						}  					}  					dll_command += fields_ + "\n" + ")";  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			com_tables.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			tables_.Add (fr [0].ToString ());  			//добавляем сразу в список таблиц  			string dll_command = "create table ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "(" + "\n";  			}  			//спикос полей  			using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					string fields_ = "";  					while (fr_a.Read ()) {  						//если у нас поле происходит из простого типа' то найдем его  						if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						}  						else {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  						}  						//Обязательное?  						if (fr_a [2].ToString ().Trim () == "1") {  							fields_ += " NOT NULL";  						}  					}  					dll_command += fields_ + "\n" + ")";  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			com_tables.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			tables_.Add (fr [0].ToString ());  			//добавляем сразу в список таблиц  			string dll_command = "create table ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "(" + "\n";  			}  			//спикос полей  			using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					string fields_ = "";  					while (fr_a.Read ()) {  						//если у нас поле происходит из простого типа' то найдем его  						if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						}  						else {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  						}  						//Обязательное?  						if (fr_a [2].ToString ().Trim () == "1") {  							fields_ += " NOT NULL";  						}  					}  					dll_command += fields_ + "\n" + ")";  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			com_tables.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			tables_.Add (fr [0].ToString ());  			//добавляем сразу в список таблиц  			string dll_command = "create table ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "(" + "\n";  			}  			//спикос полей  			using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					string fields_ = "";  					while (fr_a.Read ()) {  						//если у нас поле происходит из простого типа' то найдем его  						if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						}  						else {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  						}  						//Обязательное?  						if (fr_a [2].ToString ().Trim () == "1") {  							fields_ += " NOT NULL";  						}  					}  					dll_command += fields_ + "\n" + ")";  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			com_tables.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			tables_.Add (fr [0].ToString ());  			//добавляем сразу в список таблиц  			string dll_command = "create table ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "(" + "\n";  			}  			//спикос полей  			using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					string fields_ = "";  					while (fr_a.Read ()) {  						//если у нас поле происходит из простого типа' то найдем его  						if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						}  						else {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  						}  						//Обязательное?  						if (fr_a [2].ToString ().Trim () == "1") {  							fields_ += " NOT NULL";  						}  					}  					dll_command += fields_ + "\n" + ")";  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			com_tables.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			tables_.Add (fr [0].ToString ());  			//добавляем сразу в список таблиц  			string dll_command = "create table ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "(" + "\n";  			}  			//спикос полей  			using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					string fields_ = "";  					while (fr_a.Read ()) {  						//если у нас поле происходит из простого типа' то найдем его  						if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						}  						else {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  						}  						//Обязательное?  						if (fr_a [2].ToString ().Trim () == "1") {  							fields_ += " NOT NULL";  						}  					}  					dll_command += fields_ + "\n" + ")";  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			com_tables.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			tables_.Add (fr [0].ToString ());  			//добавляем сразу в список таблиц  			string dll_command = "create table ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "(" + "\n";  			}  			//спикос полей  			using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					string fields_ = "";  					while (fr_a.Read ()) {  						//если у нас поле происходит из простого типа' то найдем его  						if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						}  						else {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  						}  						//Обязательное?  						if (fr_a [2].ToString ().Trim () == "1") {  							fields_ += " NOT NULL";  						}  					}  					dll_command += fields_ + "\n" + ")";  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			com_tables.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			tables_.Add (fr [0].ToString ());  			//добавляем сразу в список таблиц  			string dll_command = "create table ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "(" + "\n";  			}  			//спикос полей  			using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					string fields_ = "";  					while (fr_a.Read ()) {  						//если у нас поле происходит из простого типа' то найдем его  						if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						}  						else {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  						}  						//Обязательное?  						if (fr_a [2].ToString ().Trim () == "1") {  							fields_ += " NOT NULL";  						}  					}  					dll_command += fields_ + "\n" + ")";  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			com_tables.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_tables' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			tables_.Add (fr [0].ToString ());  			//добавляем сразу в список таблиц  			string dll_command = "create table ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "(" + "\n";  			}  			//спикос полей  			using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					string fields_ = "";  					while (fr_a.Read ()) {  						//если у нас поле происходит из простого типа' то найдем его  						if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						}  						else {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  						}  						//Обязательное?  						if (fr_a [2].ToString ().Trim () == "1") {  							fields_ += " NOT NULL";  						}  					}  					dll_command += fields_ + "\n" + ")";  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			com_tables.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		tables_.Add (fr [0].ToString ());  		//добавляем сразу в список таблиц  		string dll_command = "create table ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "(" + "\n";  		}  		//спикос полей  		using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				string fields_ = "";  				while (fr_a.Read ()) {  					//если у нас поле происходит из простого типа' то найдем его  					if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					}  					else {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  					}  					//Обязательное?  					if (fr_a [2].ToString ().Trim () == "1") {  						fields_ += " NOT NULL";  					}  				}  				dll_command += fields_ + "\n" + ")";  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		com_tables.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		tables_.Add (fr [0].ToString ());  		//добавляем сразу в список таблиц  		string dll_command = "create table ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "(" + "\n";  		}  		//спикос полей  		using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				string fields_ = "";  				while (fr_a.Read ()) {  					//если у нас поле происходит из простого типа' то найдем его  					if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					}  					else {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  					}  					//Обязательное?  					if (fr_a [2].ToString ().Trim () == "1") {  						fields_ += " NOT NULL";  					}  				}  				dll_command += fields_ + "\n" + ")";  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		com_tables.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		tables_.Add (fr [0].ToString ());  		//добавляем сразу в список таблиц  		string dll_command = "create table ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "(" + "\n";  		}  		//спикос полей  		using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				string fields_ = "";  				while (fr_a.Read ()) {  					//если у нас поле происходит из простого типа' то найдем его  					if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					}  					else {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  					}  					//Обязательное?  					if (fr_a [2].ToString ().Trim () == "1") {  						fields_ += " NOT NULL";  					}  				}  				dll_command += fields_ + "\n" + ")";  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		com_tables.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		tables_.Add (fr [0].ToString ());  		//добавляем сразу в список таблиц  		string dll_command = "create table ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "(" + "\n";  		}  		//спикос полей  		using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				string fields_ = "";  				while (fr_a.Read ()) {  					//если у нас поле происходит из простого типа' то найдем его  					if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					}  					else {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  					}  					//Обязательное?  					if (fr_a [2].ToString ().Trim () == "1") {  						fields_ += " NOT NULL";  					}  				}  				dll_command += fields_ + "\n" + ")";  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		com_tables.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		tables_.Add (fr [0].ToString ());  		//добавляем сразу в список таблиц  		string dll_command = "create table ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "(" + "\n";  		}  		//спикос полей  		using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				string fields_ = "";  				while (fr_a.Read ()) {  					//если у нас поле происходит из простого типа' то найдем его  					if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					}  					else {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  					}  					//Обязательное?  					if (fr_a [2].ToString ().Trim () == "1") {  						fields_ += " NOT NULL";  					}  				}  				dll_command += fields_ + "\n" + ")";  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		com_tables.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		tables_.Add (fr [0].ToString ());  		//добавляем сразу в список таблиц  		string dll_command = "create table ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "(" + "\n";  		}  		//спикос полей  		using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				string fields_ = "";  				while (fr_a.Read ()) {  					//если у нас поле происходит из простого типа' то найдем его  					if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					}  					else {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  					}  					//Обязательное?  					if (fr_a [2].ToString ().Trim () == "1") {  						fields_ += " NOT NULL";  					}  				}  				dll_command += fields_ + "\n" + ")";  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		com_tables.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		tables_.Add (fr [0].ToString ());  		//добавляем сразу в список таблиц  		string dll_command = "create table ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "(" + "\n";  		}  		//спикос полей  		using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				string fields_ = "";  				while (fr_a.Read ()) {  					//если у нас поле происходит из простого типа' то найдем его  					if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					}  					else {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  					}  					//Обязательное?  					if (fr_a [2].ToString ().Trim () == "1") {  						fields_ += " NOT NULL";  					}  				}  				dll_command += fields_ + "\n" + ")";  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		com_tables.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		tables_.Add (fr [0].ToString ());  		//добавляем сразу в список таблиц  		string dll_command = "create table ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "(" + "\n";  		}  		//спикос полей  		using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				string fields_ = "";  				while (fr_a.Read ()) {  					//если у нас поле происходит из простого типа' то найдем его  					if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					}  					else {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  					}  					//Обязательное?  					if (fr_a [2].ToString ().Trim () == "1") {  						fields_ += " NOT NULL";  					}  				}  				dll_command += fields_ + "\n" + ")";  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		com_tables.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		tables_.Add (fr [0].ToString ());  		//добавляем сразу в список таблиц  		string dll_command = "create table ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "(" + "\n";  		}  		//спикос полей  		using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				string fields_ = "";  				while (fr_a.Read ()) {  					//если у нас поле происходит из простого типа' то найдем его  					if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					}  					else {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  					}  					//Обязательное?  					if (fr_a [2].ToString ().Trim () == "1") {  						fields_ += " NOT NULL";  					}  				}  				dll_command += fields_ + "\n" + ")";  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		com_tables.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: while (fr.Read ()) {  	tables_.Add (fr [0].ToString ());  	//добавляем сразу в список таблиц  	string dll_command = "create table ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "(" + "\n";  	}  	//спикос полей  	using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			string fields_ = "";  			while (fr_a.Read ()) {  				//если у нас поле происходит из простого типа' то найдем его  				if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				}  				else {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  				}  				//Обязательное?  				if (fr_a [2].ToString ().Trim () == "1") {  					fields_ += " NOT NULL";  				}  			}  			dll_command += fields_ + "\n" + ")";  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	com_tables.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: while (fr.Read ()) {  	tables_.Add (fr [0].ToString ());  	//добавляем сразу в список таблиц  	string dll_command = "create table ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "(" + "\n";  	}  	//спикос полей  	using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			string fields_ = "";  			while (fr_a.Read ()) {  				//если у нас поле происходит из простого типа' то найдем его  				if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				}  				else {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  				}  				//Обязательное?  				if (fr_a [2].ToString ().Trim () == "1") {  					fields_ += " NOT NULL";  				}  			}  			dll_command += fields_ + "\n" + ")";  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	com_tables.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: while (fr.Read ()) {  	tables_.Add (fr [0].ToString ());  	//добавляем сразу в список таблиц  	string dll_command = "create table ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "(" + "\n";  	}  	//спикос полей  	using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			string fields_ = "";  			while (fr_a.Read ()) {  				//если у нас поле происходит из простого типа' то найдем его  				if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				}  				else {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  				}  				//Обязательное?  				if (fr_a [2].ToString ().Trim () == "1") {  					fields_ += " NOT NULL";  				}  			}  			dll_command += fields_ + "\n" + ")";  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	com_tables.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: while (fr.Read ()) {  	tables_.Add (fr [0].ToString ());  	//добавляем сразу в список таблиц  	string dll_command = "create table ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "(" + "\n";  	}  	//спикос полей  	using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			string fields_ = "";  			while (fr_a.Read ()) {  				//если у нас поле происходит из простого типа' то найдем его  				if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				}  				else {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  				}  				//Обязательное?  				if (fr_a [2].ToString ().Trim () == "1") {  					fields_ += " NOT NULL";  				}  			}  			dll_command += fields_ + "\n" + ")";  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	com_tables.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: while (fr.Read ()) {  	tables_.Add (fr [0].ToString ());  	//добавляем сразу в список таблиц  	string dll_command = "create table ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "(" + "\n";  	}  	//спикос полей  	using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			string fields_ = "";  			while (fr_a.Read ()) {  				//если у нас поле происходит из простого типа' то найдем его  				if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				}  				else {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  				}  				//Обязательное?  				if (fr_a [2].ToString ().Trim () == "1") {  					fields_ += " NOT NULL";  				}  			}  			dll_command += fields_ + "\n" + ")";  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	com_tables.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: while (fr.Read ()) {  	tables_.Add (fr [0].ToString ());  	//добавляем сразу в список таблиц  	string dll_command = "create table ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "(" + "\n";  	}  	//спикос полей  	using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			string fields_ = "";  			while (fr_a.Read ()) {  				//если у нас поле происходит из простого типа' то найдем его  				if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				}  				else {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  				}  				//Обязательное?  				if (fr_a [2].ToString ().Trim () == "1") {  					fields_ += " NOT NULL";  				}  			}  			dll_command += fields_ + "\n" + ")";  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	com_tables.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: while (fr.Read ()) {  	tables_.Add (fr [0].ToString ());  	//добавляем сразу в список таблиц  	string dll_command = "create table ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "(" + "\n";  	}  	//спикос полей  	using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			string fields_ = "";  			while (fr_a.Read ()) {  				//если у нас поле происходит из простого типа' то найдем его  				if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				}  				else {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  				}  				//Обязательное?  				if (fr_a [2].ToString ().Trim () == "1") {  					fields_ += " NOT NULL";  				}  			}  			dll_command += fields_ + "\n" + ")";  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	com_tables.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: while (fr.Read ()) {  	tables_.Add (fr [0].ToString ());  	//добавляем сразу в список таблиц  	string dll_command = "create table ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "(" + "\n";  	}  	//спикос полей  	using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			string fields_ = "";  			while (fr_a.Read ()) {  				//если у нас поле происходит из простого типа' то найдем его  				if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				}  				else {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  				}  				//Обязательное?  				if (fr_a [2].ToString ().Trim () == "1") {  					fields_ += " NOT NULL";  				}  			}  			dll_command += fields_ + "\n" + ")";  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	com_tables.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: while (fr.Read ()) {  	tables_.Add (fr [0].ToString ());  	//добавляем сразу в список таблиц  	string dll_command = "create table ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "(" + "\n";  	}  	//спикос полей  	using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			string fields_ = "";  			while (fr_a.Read ()) {  				//если у нас поле происходит из простого типа' то найдем его  				if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				}  				else {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  				}  				//Обязательное?  				if (fr_a [2].ToString ().Trim () == "1") {  					fields_ += " NOT NULL";  				}  			}  			dll_command += fields_ + "\n" + ")";  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	com_tables.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		string fields_ = "";  		while (fr_a.Read ()) {  			//если у нас поле происходит из простого типа' то найдем его  			if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			}  			else {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  			}  			//Обязательное?  			if (fr_a [2].ToString ().Trim () == "1") {  				fields_ += " NOT NULL";  			}  		}  		dll_command += fields_ + "\n" + ")";  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		string fields_ = "";  		while (fr_a.Read ()) {  			//если у нас поле происходит из простого типа' то найдем его  			if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			}  			else {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  			}  			//Обязательное?  			if (fr_a [2].ToString ().Trim () == "1") {  				fields_ += " NOT NULL";  			}  		}  		dll_command += fields_ + "\n" + ")";  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		string fields_ = "";  		while (fr_a.Read ()) {  			//если у нас поле происходит из простого типа' то найдем его  			if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			}  			else {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  			}  			//Обязательное?  			if (fr_a [2].ToString ().Trim () == "1") {  				fields_ += " NOT NULL";  			}  		}  		dll_command += fields_ + "\n" + ")";  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		string fields_ = "";  		while (fr_a.Read ()) {  			//если у нас поле происходит из простого типа' то найдем его  			if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			}  			else {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  			}  			//Обязательное?  			if (fr_a [2].ToString ().Trim () == "1") {  				fields_ += " NOT NULL";  			}  		}  		dll_command += fields_ + "\n" + ")";  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		string fields_ = "";  		while (fr_a.Read ()) {  			//если у нас поле происходит из простого типа' то найдем его  			if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			}  			else {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  			}  			//Обязательное?  			if (fr_a [2].ToString ().Trim () == "1") {  				fields_ += " NOT NULL";  			}  		}  		dll_command += fields_ + "\n" + ")";  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		string fields_ = "";  		while (fr_a.Read ()) {  			//если у нас поле происходит из простого типа' то найдем его  			if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			}  			else {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  			}  			//Обязательное?  			if (fr_a [2].ToString ().Trim () == "1") {  				fields_ += " NOT NULL";  			}  		}  		dll_command += fields_ + "\n" + ")";  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		string fields_ = "";  		while (fr_a.Read ()) {  			//если у нас поле происходит из простого типа' то найдем его  			if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			}  			else {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  			}  			//Обязательное?  			if (fr_a [2].ToString ().Trim () == "1") {  				fields_ += " NOT NULL";  			}  		}  		dll_command += fields_ + "\n" + ")";  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		string fields_ = "";  		while (fr_a.Read ()) {  			//если у нас поле происходит из простого типа' то найдем его  			if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			}  			else {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  			}  			//Обязательное?  			if (fr_a [2].ToString ().Trim () == "1") {  				fields_ += " NOT NULL";  			}  		}  		dll_command += fields_ + "\n" + ")";  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_tables_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		string fields_ = "";  		while (fr_a.Read ()) {  			//если у нас поле происходит из простого типа' то найдем его  			if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			}  			else {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  			}  			//Обязательное?  			if (fr_a [2].ToString ().Trim () == "1") {  				fields_ += " NOT NULL";  			}  		}  		dll_command += fields_ + "\n" + ")";  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	string fields_ = "";  	while (fr_a.Read ()) {  		//если у нас поле происходит из простого типа' то найдем его  		if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  			if (fields_ != "") {  				fields_ += "'" + "\n";  			}  			fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		}  		else {  			if (fields_ != "") {  				fields_ += "'" + "\n";  			}  			fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  		}  		//Обязательное?  		if (fr_a [2].ToString ().Trim () == "1") {  			fields_ += " NOT NULL";  		}  	}  	dll_command += fields_ + "\n" + ")";  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	string fields_ = "";  	while (fr_a.Read ()) {  		//если у нас поле происходит из простого типа' то найдем его  		if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  			if (fields_ != "") {  				fields_ += "'" + "\n";  			}  			fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		}  		else {  			if (fields_ != "") {  				fields_ += "'" + "\n";  			}  			fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  		}  		//Обязательное?  		if (fr_a [2].ToString ().Trim () == "1") {  			fields_ += " NOT NULL";  		}  	}  	dll_command += fields_ + "\n" + ")";  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	string fields_ = "";  	while (fr_a.Read ()) {  		//если у нас поле происходит из простого типа' то найдем его  		if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  			if (fields_ != "") {  				fields_ += "'" + "\n";  			}  			fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		}  		else {  			if (fields_ != "") {  				fields_ += "'" + "\n";  			}  			fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  		}  		//Обязательное?  		if (fr_a [2].ToString ().Trim () == "1") {  			fields_ += " NOT NULL";  		}  	}  	dll_command += fields_ + "\n" + ")";  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	string fields_ = "";  	while (fr_a.Read ()) {  		//если у нас поле происходит из простого типа' то найдем его  		if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  			if (fields_ != "") {  				fields_ += "'" + "\n";  			}  			fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		}  		else {  			if (fields_ != "") {  				fields_ += "'" + "\n";  			}  			fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  		}  		//Обязательное?  		if (fr_a [2].ToString ().Trim () == "1") {  			fields_ += " NOT NULL";  		}  	}  	dll_command += fields_ + "\n" + ")";  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	string fields_ = "";  	while (fr_a.Read ()) {  		//если у нас поле происходит из простого типа' то найдем его  		if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  			if (fields_ != "") {  				fields_ += "'" + "\n";  			}  			fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		}  		else {  			if (fields_ != "") {  				fields_ += "'" + "\n";  			}  			fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  		}  		//Обязательное?  		if (fr_a [2].ToString ().Trim () == "1") {  			fields_ += " NOT NULL";  		}  	}  	dll_command += fields_ + "\n" + ")";  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	string fields_ = "";  	while (fr_a.Read ()) {  		//если у нас поле происходит из простого типа' то найдем его  		if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  			if (fields_ != "") {  				fields_ += "'" + "\n";  			}  			fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		}  		else {  			if (fields_ != "") {  				fields_ += "'" + "\n";  			}  			fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  		}  		//Обязательное?  		if (fr_a [2].ToString ().Trim () == "1") {  			fields_ += " NOT NULL";  		}  	}  	dll_command += fields_ + "\n" + ")";  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	string fields_ = "";  	while (fr_a.Read ()) {  		//если у нас поле происходит из простого типа' то найдем его  		if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  			if (fields_ != "") {  				fields_ += "'" + "\n";  			}  			fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		}  		else {  			if (fields_ != "") {  				fields_ += "'" + "\n";  			}  			fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  		}  		//Обязательное?  		if (fr_a [2].ToString ().Trim () == "1") {  			fields_ += " NOT NULL";  		}  	}  	dll_command += fields_ + "\n" + ")";  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	string fields_ = "";  	while (fr_a.Read ()) {  		//если у нас поле происходит из простого типа' то найдем его  		if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  			if (fields_ != "") {  				fields_ += "'" + "\n";  			}  			fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		}  		else {  			if (fields_ != "") {  				fields_ += "'" + "\n";  			}  			fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  		}  		//Обязательное?  		if (fr_a [2].ToString ().Trim () == "1") {  			fields_ += " NOT NULL";  		}  	}  	dll_command += fields_ + "\n" + ")";  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: while (fr_a.Read ()) {  	//если у нас поле происходит из простого типа' то найдем его  	if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  		if (fields_ != "") {  			fields_ += "'" + "\n";  		}  		fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	}  	else {  		if (fields_ != "") {  			fields_ += "'" + "\n";  		}  		fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  	}  	//Обязательное?  	if (fr_a [2].ToString ().Trim () == "1") {  		fields_ += " NOT NULL";  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: while (fr_a.Read ()) {  	//если у нас поле происходит из простого типа' то найдем его  	if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  		if (fields_ != "") {  			fields_ += "'" + "\n";  		}  		fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	}  	else {  		if (fields_ != "") {  			fields_ += "'" + "\n";  		}  		fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  	}  	//Обязательное?  	if (fr_a [2].ToString ().Trim () == "1") {  		fields_ += " NOT NULL";  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: while (fr_a.Read ()) {  	//если у нас поле происходит из простого типа' то найдем его  	if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  		if (fields_ != "") {  			fields_ += "'" + "\n";  		}  		fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	}  	else {  		if (fields_ != "") {  			fields_ += "'" + "\n";  		}  		fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  	}  	//Обязательное?  	if (fr_a [2].ToString ().Trim () == "1") {  		fields_ += " NOT NULL";  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: while (fr_a.Read ()) {  	//если у нас поле происходит из простого типа' то найдем его  	if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  		if (fields_ != "") {  			fields_ += "'" + "\n";  		}  		fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	}  	else {  		if (fields_ != "") {  			fields_ += "'" + "\n";  		}  		fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  	}  	//Обязательное?  	if (fr_a [2].ToString ().Trim () == "1") {  		fields_ += " NOT NULL";  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: while (fr_a.Read ()) {  	//если у нас поле происходит из простого типа' то найдем его  	if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  		if (fields_ != "") {  			fields_ += "'" + "\n";  		}  		fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	}  	else {  		if (fields_ != "") {  			fields_ += "'" + "\n";  		}  		fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  	}  	//Обязательное?  	if (fr_a [2].ToString ().Trim () == "1") {  		fields_ += " NOT NULL";  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: while (fr_a.Read ()) {  	//если у нас поле происходит из простого типа' то найдем его  	if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  		if (fields_ != "") {  			fields_ += "'" + "\n";  		}  		fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	}  	else {  		if (fields_ != "") {  			fields_ += "'" + "\n";  		}  		fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  	}  	//Обязательное?  	if (fr_a [2].ToString ().Trim () == "1") {  		fields_ += " NOT NULL";  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: while (fr_a.Read ()) {  	//если у нас поле происходит из простого типа' то найдем его  	if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  		if (fields_ != "") {  			fields_ += "'" + "\n";  		}  		fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	}  	else {  		if (fields_ != "") {  			fields_ += "'" + "\n";  		}  		fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  	}  	//Обязательное?  	if (fr_a [2].ToString ().Trim () == "1") {  		fields_ += " NOT NULL";  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: while (fr_a.Read ()) {  	//если у нас поле происходит из простого типа' то найдем его  	if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  		if (fields_ != "") {  			fields_ += "'" + "\n";  		}  		fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	}  	else {  		if (fields_ != "") {  			fields_ += "'" + "\n";  		}  		fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  	}  	//Обязательное?  	if (fr_a [2].ToString ().Trim () == "1") {  		fields_ += " NOT NULL";  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  	if (fields_ != "") {  		fields_ += "'" + "\n";  	}  	fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  }  else {  	if (fields_ != "") {  		fields_ += "'" + "\n";  	}  	fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  	if (fields_ != "") {  		fields_ += "'" + "\n";  	}  	fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  }  else {  	if (fields_ != "") {  		fields_ += "'" + "\n";  	}  	fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  	if (fields_ != "") {  		fields_ += "'" + "\n";  	}  	fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  }  else {  	if (fields_ != "") {  		fields_ += "'" + "\n";  	}  	fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  	if (fields_ != "") {  		fields_ += "'" + "\n";  	}  	fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  }  else {  	if (fields_ != "") {  		fields_ += "'" + "\n";  	}  	fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  	if (fields_ != "") {  		fields_ += "'" + "\n";  	}  	fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  }  else {  	if (fields_ != "") {  		fields_ += "'" + "\n";  	}  	fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  	if (fields_ != "") {  		fields_ += "'" + "\n";  	}  	fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  }  else {  	if (fields_ != "") {  		fields_ += "'" + "\n";  	}  	fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: if (fr_a [1].ToString ().Substring (0' 4) == "RDB$") {  	if (fields_ != "") {  		fields_ += "'" + "\n";  	}  	fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  }  else {  	if (fields_ != "") {  		fields_ += "'" + "\n";  	}  	fields_ += fr_a [0].ToString () + " " + fr_a [1].ToString ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: fields_ += fr_a [0].ToString () + " " + get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TABLES,The following statement contains a magic number: if (fr_a [2].ToString ().Trim () == "1") {  	fields_ += " NOT NULL";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_VIEWS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_views' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create view ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "(" + "\n";  						}  						//поля  						using (FbCommand fcon_a = new FbCommand (sql_views_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								string fields_ = "";  								while (fr_a.Read ()) {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString ();  								}  								dll_command += fields_ + "\n" + ")" + "\nAS\n";  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						//Содерживое  						using (FbCommand fcon_b = new FbCommand (sql_views_b' fb' ft)) {  							fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_b.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  								while (fr_b.Read ()) {  									dll_command += "\n" + fr_b.GetString (0);  								}  								fr_b.Dispose ();  							}  							fcon_b.Dispose ();  						}  						com_views.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_VIEWS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_views' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create view ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "(" + "\n";  						}  						//поля  						using (FbCommand fcon_a = new FbCommand (sql_views_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								string fields_ = "";  								while (fr_a.Read ()) {  									if (fields_ != "") {  										fields_ += "'" + "\n";  									}  									fields_ += fr_a [0].ToString ();  								}  								dll_command += fields_ + "\n" + ")" + "\nAS\n";  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						//Содерживое  						using (FbCommand fcon_b = new FbCommand (sql_views_b' fb' ft)) {  							fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_b.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  								while (fr_b.Read ()) {  									dll_command += "\n" + fr_b.GetString (0);  								}  								fr_b.Dispose ();  							}  							fcon_b.Dispose ();  						}  						com_views.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_VIEWS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_views' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create view ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "(" + "\n";  					}  					//поля  					using (FbCommand fcon_a = new FbCommand (sql_views_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							string fields_ = "";  							while (fr_a.Read ()) {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString ();  							}  							dll_command += fields_ + "\n" + ")" + "\nAS\n";  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					//Содерживое  					using (FbCommand fcon_b = new FbCommand (sql_views_b' fb' ft)) {  						fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_b.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  							while (fr_b.Read ()) {  								dll_command += "\n" + fr_b.GetString (0);  							}  							fr_b.Dispose ();  						}  						fcon_b.Dispose ();  					}  					com_views.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_VIEWS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_views' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create view ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "(" + "\n";  					}  					//поля  					using (FbCommand fcon_a = new FbCommand (sql_views_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							string fields_ = "";  							while (fr_a.Read ()) {  								if (fields_ != "") {  									fields_ += "'" + "\n";  								}  								fields_ += fr_a [0].ToString ();  							}  							dll_command += fields_ + "\n" + ")" + "\nAS\n";  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					//Содерживое  					using (FbCommand fcon_b = new FbCommand (sql_views_b' fb' ft)) {  						fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_b.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  							while (fr_b.Read ()) {  								dll_command += "\n" + fr_b.GetString (0);  							}  							fr_b.Dispose ();  						}  						fcon_b.Dispose ();  					}  					com_views.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_VIEWS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_views' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create view ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "(" + "\n";  				}  				//поля  				using (FbCommand fcon_a = new FbCommand (sql_views_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						string fields_ = "";  						while (fr_a.Read ()) {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString ();  						}  						dll_command += fields_ + "\n" + ")" + "\nAS\n";  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				//Содерживое  				using (FbCommand fcon_b = new FbCommand (sql_views_b' fb' ft)) {  					fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_b.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  						while (fr_b.Read ()) {  							dll_command += "\n" + fr_b.GetString (0);  						}  						fr_b.Dispose ();  					}  					fcon_b.Dispose ();  				}  				com_views.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_VIEWS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_views' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create view ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "(" + "\n";  				}  				//поля  				using (FbCommand fcon_a = new FbCommand (sql_views_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						string fields_ = "";  						while (fr_a.Read ()) {  							if (fields_ != "") {  								fields_ += "'" + "\n";  							}  							fields_ += fr_a [0].ToString ();  						}  						dll_command += fields_ + "\n" + ")" + "\nAS\n";  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				//Содерживое  				using (FbCommand fcon_b = new FbCommand (sql_views_b' fb' ft)) {  					fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_b.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  						while (fr_b.Read ()) {  							dll_command += "\n" + fr_b.GetString (0);  						}  						fr_b.Dispose ();  					}  					fcon_b.Dispose ();  				}  				com_views.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_VIEWS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_views' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create view ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "(" + "\n";  			}  			//поля  			using (FbCommand fcon_a = new FbCommand (sql_views_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					string fields_ = "";  					while (fr_a.Read ()) {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString ();  					}  					dll_command += fields_ + "\n" + ")" + "\nAS\n";  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			//Содерживое  			using (FbCommand fcon_b = new FbCommand (sql_views_b' fb' ft)) {  				fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_b.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  					while (fr_b.Read ()) {  						dll_command += "\n" + fr_b.GetString (0);  					}  					fr_b.Dispose ();  				}  				fcon_b.Dispose ();  			}  			com_views.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_VIEWS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_views' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create view ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "(" + "\n";  			}  			//поля  			using (FbCommand fcon_a = new FbCommand (sql_views_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					string fields_ = "";  					while (fr_a.Read ()) {  						if (fields_ != "") {  							fields_ += "'" + "\n";  						}  						fields_ += fr_a [0].ToString ();  					}  					dll_command += fields_ + "\n" + ")" + "\nAS\n";  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			//Содерживое  			using (FbCommand fcon_b = new FbCommand (sql_views_b' fb' ft)) {  				fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_b.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  					while (fr_b.Read ()) {  						dll_command += "\n" + fr_b.GetString (0);  					}  					fr_b.Dispose ();  				}  				fcon_b.Dispose ();  			}  			com_views.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_VIEWS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create view ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "(" + "\n";  		}  		//поля  		using (FbCommand fcon_a = new FbCommand (sql_views_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				string fields_ = "";  				while (fr_a.Read ()) {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString ();  				}  				dll_command += fields_ + "\n" + ")" + "\nAS\n";  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		//Содерживое  		using (FbCommand fcon_b = new FbCommand (sql_views_b' fb' ft)) {  			fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_b.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  				while (fr_b.Read ()) {  					dll_command += "\n" + fr_b.GetString (0);  				}  				fr_b.Dispose ();  			}  			fcon_b.Dispose ();  		}  		com_views.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_VIEWS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create view ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "(" + "\n";  		}  		//поля  		using (FbCommand fcon_a = new FbCommand (sql_views_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				string fields_ = "";  				while (fr_a.Read ()) {  					if (fields_ != "") {  						fields_ += "'" + "\n";  					}  					fields_ += fr_a [0].ToString ();  				}  				dll_command += fields_ + "\n" + ")" + "\nAS\n";  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		//Содерживое  		using (FbCommand fcon_b = new FbCommand (sql_views_b' fb' ft)) {  			fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_b.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  				while (fr_b.Read ()) {  					dll_command += "\n" + fr_b.GetString (0);  				}  				fr_b.Dispose ();  			}  			fcon_b.Dispose ();  		}  		com_views.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_VIEWS,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create view ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "(" + "\n";  	}  	//поля  	using (FbCommand fcon_a = new FbCommand (sql_views_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			string fields_ = "";  			while (fr_a.Read ()) {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString ();  			}  			dll_command += fields_ + "\n" + ")" + "\nAS\n";  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	//Содерживое  	using (FbCommand fcon_b = new FbCommand (sql_views_b' fb' ft)) {  		fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_b.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  			while (fr_b.Read ()) {  				dll_command += "\n" + fr_b.GetString (0);  			}  			fr_b.Dispose ();  		}  		fcon_b.Dispose ();  	}  	com_views.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_VIEWS,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create view ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "(" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "(" + "\n";  	}  	//поля  	using (FbCommand fcon_a = new FbCommand (sql_views_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			string fields_ = "";  			while (fr_a.Read ()) {  				if (fields_ != "") {  					fields_ += "'" + "\n";  				}  				fields_ += fr_a [0].ToString ();  			}  			dll_command += fields_ + "\n" + ")" + "\nAS\n";  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	//Содерживое  	using (FbCommand fcon_b = new FbCommand (sql_views_b' fb' ft)) {  		fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_b.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  			while (fr_b.Read ()) {  				dll_command += "\n" + fr_b.GetString (0);  			}  			fr_b.Dispose ();  		}  		fcon_b.Dispose ();  	}  	com_views.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_VIEWS,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_views_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		string fields_ = "";  		while (fr_a.Read ()) {  			if (fields_ != "") {  				fields_ += "'" + "\n";  			}  			fields_ += fr_a [0].ToString ();  		}  		dll_command += fields_ + "\n" + ")" + "\nAS\n";  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_VIEWS,The following statement contains a magic number: fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_VIEWS,The following statement contains a magic number: using (FbCommand fcon_b = new FbCommand (sql_views_b' fb' ft)) {  	fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_b.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  		while (fr_b.Read ()) {  			dll_command += "\n" + fr_b.GetString (0);  		}  		fr_b.Dispose ();  	}  	fcon_b.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_VIEWS,The following statement contains a magic number: fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter procedure ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "\n";  						}  						//Список полей  						string fields_in = "";  						string fields_out = "";  						bool is_out = false;  						using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									//резервное?  									var fields_name = fr_a [0].ToString ().Trim ();  									if (is_reserv (fields_name)) {  										fields_name = "\"" + fields_name + "\"";  									}  									//Извлекаем тип данных  									string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  									if (fr_a [2].ToString () == "0") {  										//входной  										if (fields_in == "") {  											fields_in += "( " + fields_name + " " + field_type;  										}  										else {  											fields_in += "'\n " + fields_name + " " + field_type;  										}  									}  									else {  										//значит выходной  										if (!is_out) {  											//ставим флаг' что есть выходные параметры  											is_out = true;  										}  										if (fields_out == "") {  											fields_out += "returns ( " + fields_name + " " + field_type;  										}  										else {  											fields_out += "'\n " + fields_name + " " + field_type;  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						//теперь соединяем   						if (fields_in != "") {  							fields_in += "\n )";  						}  						if (fields_out != "") {  							fields_out += "\n )";  						}  						dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  						if (is_out) {  							dll_command += "suspend;\n";  						}  						dll_command += "\nEND";  						com_procedures_prototype.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter procedure ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "\n";  						}  						//Список полей  						string fields_in = "";  						string fields_out = "";  						bool is_out = false;  						using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									//резервное?  									var fields_name = fr_a [0].ToString ().Trim ();  									if (is_reserv (fields_name)) {  										fields_name = "\"" + fields_name + "\"";  									}  									//Извлекаем тип данных  									string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  									if (fr_a [2].ToString () == "0") {  										//входной  										if (fields_in == "") {  											fields_in += "( " + fields_name + " " + field_type;  										}  										else {  											fields_in += "'\n " + fields_name + " " + field_type;  										}  									}  									else {  										//значит выходной  										if (!is_out) {  											//ставим флаг' что есть выходные параметры  											is_out = true;  										}  										if (fields_out == "") {  											fields_out += "returns ( " + fields_name + " " + field_type;  										}  										else {  											fields_out += "'\n " + fields_name + " " + field_type;  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						//теперь соединяем   						if (fields_in != "") {  							fields_in += "\n )";  						}  						if (fields_out != "") {  							fields_out += "\n )";  						}  						dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  						if (is_out) {  							dll_command += "suspend;\n";  						}  						dll_command += "\nEND";  						com_procedures_prototype.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter procedure ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "\n";  						}  						//Список полей  						string fields_in = "";  						string fields_out = "";  						bool is_out = false;  						using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									//резервное?  									var fields_name = fr_a [0].ToString ().Trim ();  									if (is_reserv (fields_name)) {  										fields_name = "\"" + fields_name + "\"";  									}  									//Извлекаем тип данных  									string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  									if (fr_a [2].ToString () == "0") {  										//входной  										if (fields_in == "") {  											fields_in += "( " + fields_name + " " + field_type;  										}  										else {  											fields_in += "'\n " + fields_name + " " + field_type;  										}  									}  									else {  										//значит выходной  										if (!is_out) {  											//ставим флаг' что есть выходные параметры  											is_out = true;  										}  										if (fields_out == "") {  											fields_out += "returns ( " + fields_name + " " + field_type;  										}  										else {  											fields_out += "'\n " + fields_name + " " + field_type;  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						//теперь соединяем   						if (fields_in != "") {  							fields_in += "\n )";  						}  						if (fields_out != "") {  							fields_out += "\n )";  						}  						dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  						if (is_out) {  							dll_command += "suspend;\n";  						}  						dll_command += "\nEND";  						com_procedures_prototype.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter procedure ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "\n";  						}  						//Список полей  						string fields_in = "";  						string fields_out = "";  						bool is_out = false;  						using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									//резервное?  									var fields_name = fr_a [0].ToString ().Trim ();  									if (is_reserv (fields_name)) {  										fields_name = "\"" + fields_name + "\"";  									}  									//Извлекаем тип данных  									string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  									if (fr_a [2].ToString () == "0") {  										//входной  										if (fields_in == "") {  											fields_in += "( " + fields_name + " " + field_type;  										}  										else {  											fields_in += "'\n " + fields_name + " " + field_type;  										}  									}  									else {  										//значит выходной  										if (!is_out) {  											//ставим флаг' что есть выходные параметры  											is_out = true;  										}  										if (fields_out == "") {  											fields_out += "returns ( " + fields_name + " " + field_type;  										}  										else {  											fields_out += "'\n " + fields_name + " " + field_type;  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						//теперь соединяем   						if (fields_in != "") {  							fields_in += "\n )";  						}  						if (fields_out != "") {  							fields_out += "\n )";  						}  						dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  						if (is_out) {  							dll_command += "suspend;\n";  						}  						dll_command += "\nEND";  						com_procedures_prototype.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter procedure ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "\n";  						}  						//Список полей  						string fields_in = "";  						string fields_out = "";  						bool is_out = false;  						using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									//резервное?  									var fields_name = fr_a [0].ToString ().Trim ();  									if (is_reserv (fields_name)) {  										fields_name = "\"" + fields_name + "\"";  									}  									//Извлекаем тип данных  									string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  									if (fr_a [2].ToString () == "0") {  										//входной  										if (fields_in == "") {  											fields_in += "( " + fields_name + " " + field_type;  										}  										else {  											fields_in += "'\n " + fields_name + " " + field_type;  										}  									}  									else {  										//значит выходной  										if (!is_out) {  											//ставим флаг' что есть выходные параметры  											is_out = true;  										}  										if (fields_out == "") {  											fields_out += "returns ( " + fields_name + " " + field_type;  										}  										else {  											fields_out += "'\n " + fields_name + " " + field_type;  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						//теперь соединяем   						if (fields_in != "") {  							fields_in += "\n )";  						}  						if (fields_out != "") {  							fields_out += "\n )";  						}  						dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  						if (is_out) {  							dll_command += "suspend;\n";  						}  						dll_command += "\nEND";  						com_procedures_prototype.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter procedure ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "\n";  						}  						//Список полей  						string fields_in = "";  						string fields_out = "";  						bool is_out = false;  						using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									//резервное?  									var fields_name = fr_a [0].ToString ().Trim ();  									if (is_reserv (fields_name)) {  										fields_name = "\"" + fields_name + "\"";  									}  									//Извлекаем тип данных  									string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  									if (fr_a [2].ToString () == "0") {  										//входной  										if (fields_in == "") {  											fields_in += "( " + fields_name + " " + field_type;  										}  										else {  											fields_in += "'\n " + fields_name + " " + field_type;  										}  									}  									else {  										//значит выходной  										if (!is_out) {  											//ставим флаг' что есть выходные параметры  											is_out = true;  										}  										if (fields_out == "") {  											fields_out += "returns ( " + fields_name + " " + field_type;  										}  										else {  											fields_out += "'\n " + fields_name + " " + field_type;  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						//теперь соединяем   						if (fields_in != "") {  							fields_in += "\n )";  						}  						if (fields_out != "") {  							fields_out += "\n )";  						}  						dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  						if (is_out) {  							dll_command += "suspend;\n";  						}  						dll_command += "\nEND";  						com_procedures_prototype.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter procedure ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "\n";  						}  						//Список полей  						string fields_in = "";  						string fields_out = "";  						bool is_out = false;  						using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									//резервное?  									var fields_name = fr_a [0].ToString ().Trim ();  									if (is_reserv (fields_name)) {  										fields_name = "\"" + fields_name + "\"";  									}  									//Извлекаем тип данных  									string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  									if (fr_a [2].ToString () == "0") {  										//входной  										if (fields_in == "") {  											fields_in += "( " + fields_name + " " + field_type;  										}  										else {  											fields_in += "'\n " + fields_name + " " + field_type;  										}  									}  									else {  										//значит выходной  										if (!is_out) {  											//ставим флаг' что есть выходные параметры  											is_out = true;  										}  										if (fields_out == "") {  											fields_out += "returns ( " + fields_name + " " + field_type;  										}  										else {  											fields_out += "'\n " + fields_name + " " + field_type;  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						//теперь соединяем   						if (fields_in != "") {  							fields_in += "\n )";  						}  						if (fields_out != "") {  							fields_out += "\n )";  						}  						dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  						if (is_out) {  							dll_command += "suspend;\n";  						}  						dll_command += "\nEND";  						com_procedures_prototype.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter procedure ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "\n";  						}  						//Список полей  						string fields_in = "";  						string fields_out = "";  						bool is_out = false;  						using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									//резервное?  									var fields_name = fr_a [0].ToString ().Trim ();  									if (is_reserv (fields_name)) {  										fields_name = "\"" + fields_name + "\"";  									}  									//Извлекаем тип данных  									string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  									if (fr_a [2].ToString () == "0") {  										//входной  										if (fields_in == "") {  											fields_in += "( " + fields_name + " " + field_type;  										}  										else {  											fields_in += "'\n " + fields_name + " " + field_type;  										}  									}  									else {  										//значит выходной  										if (!is_out) {  											//ставим флаг' что есть выходные параметры  											is_out = true;  										}  										if (fields_out == "") {  											fields_out += "returns ( " + fields_name + " " + field_type;  										}  										else {  											fields_out += "'\n " + fields_name + " " + field_type;  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						//теперь соединяем   						if (fields_in != "") {  							fields_in += "\n )";  						}  						if (fields_out != "") {  							fields_out += "\n )";  						}  						dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  						if (is_out) {  							dll_command += "suspend;\n";  						}  						dll_command += "\nEND";  						com_procedures_prototype.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter procedure ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "\n";  					}  					//Список полей  					string fields_in = "";  					string fields_out = "";  					bool is_out = false;  					using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								//резервное?  								var fields_name = fr_a [0].ToString ().Trim ();  								if (is_reserv (fields_name)) {  									fields_name = "\"" + fields_name + "\"";  								}  								//Извлекаем тип данных  								string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  								if (fr_a [2].ToString () == "0") {  									//входной  									if (fields_in == "") {  										fields_in += "( " + fields_name + " " + field_type;  									}  									else {  										fields_in += "'\n " + fields_name + " " + field_type;  									}  								}  								else {  									//значит выходной  									if (!is_out) {  										//ставим флаг' что есть выходные параметры  										is_out = true;  									}  									if (fields_out == "") {  										fields_out += "returns ( " + fields_name + " " + field_type;  									}  									else {  										fields_out += "'\n " + fields_name + " " + field_type;  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					//теперь соединяем   					if (fields_in != "") {  						fields_in += "\n )";  					}  					if (fields_out != "") {  						fields_out += "\n )";  					}  					dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  					if (is_out) {  						dll_command += "suspend;\n";  					}  					dll_command += "\nEND";  					com_procedures_prototype.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter procedure ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "\n";  					}  					//Список полей  					string fields_in = "";  					string fields_out = "";  					bool is_out = false;  					using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								//резервное?  								var fields_name = fr_a [0].ToString ().Trim ();  								if (is_reserv (fields_name)) {  									fields_name = "\"" + fields_name + "\"";  								}  								//Извлекаем тип данных  								string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  								if (fr_a [2].ToString () == "0") {  									//входной  									if (fields_in == "") {  										fields_in += "( " + fields_name + " " + field_type;  									}  									else {  										fields_in += "'\n " + fields_name + " " + field_type;  									}  								}  								else {  									//значит выходной  									if (!is_out) {  										//ставим флаг' что есть выходные параметры  										is_out = true;  									}  									if (fields_out == "") {  										fields_out += "returns ( " + fields_name + " " + field_type;  									}  									else {  										fields_out += "'\n " + fields_name + " " + field_type;  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					//теперь соединяем   					if (fields_in != "") {  						fields_in += "\n )";  					}  					if (fields_out != "") {  						fields_out += "\n )";  					}  					dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  					if (is_out) {  						dll_command += "suspend;\n";  					}  					dll_command += "\nEND";  					com_procedures_prototype.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter procedure ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "\n";  					}  					//Список полей  					string fields_in = "";  					string fields_out = "";  					bool is_out = false;  					using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								//резервное?  								var fields_name = fr_a [0].ToString ().Trim ();  								if (is_reserv (fields_name)) {  									fields_name = "\"" + fields_name + "\"";  								}  								//Извлекаем тип данных  								string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  								if (fr_a [2].ToString () == "0") {  									//входной  									if (fields_in == "") {  										fields_in += "( " + fields_name + " " + field_type;  									}  									else {  										fields_in += "'\n " + fields_name + " " + field_type;  									}  								}  								else {  									//значит выходной  									if (!is_out) {  										//ставим флаг' что есть выходные параметры  										is_out = true;  									}  									if (fields_out == "") {  										fields_out += "returns ( " + fields_name + " " + field_type;  									}  									else {  										fields_out += "'\n " + fields_name + " " + field_type;  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					//теперь соединяем   					if (fields_in != "") {  						fields_in += "\n )";  					}  					if (fields_out != "") {  						fields_out += "\n )";  					}  					dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  					if (is_out) {  						dll_command += "suspend;\n";  					}  					dll_command += "\nEND";  					com_procedures_prototype.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter procedure ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "\n";  					}  					//Список полей  					string fields_in = "";  					string fields_out = "";  					bool is_out = false;  					using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								//резервное?  								var fields_name = fr_a [0].ToString ().Trim ();  								if (is_reserv (fields_name)) {  									fields_name = "\"" + fields_name + "\"";  								}  								//Извлекаем тип данных  								string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  								if (fr_a [2].ToString () == "0") {  									//входной  									if (fields_in == "") {  										fields_in += "( " + fields_name + " " + field_type;  									}  									else {  										fields_in += "'\n " + fields_name + " " + field_type;  									}  								}  								else {  									//значит выходной  									if (!is_out) {  										//ставим флаг' что есть выходные параметры  										is_out = true;  									}  									if (fields_out == "") {  										fields_out += "returns ( " + fields_name + " " + field_type;  									}  									else {  										fields_out += "'\n " + fields_name + " " + field_type;  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					//теперь соединяем   					if (fields_in != "") {  						fields_in += "\n )";  					}  					if (fields_out != "") {  						fields_out += "\n )";  					}  					dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  					if (is_out) {  						dll_command += "suspend;\n";  					}  					dll_command += "\nEND";  					com_procedures_prototype.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter procedure ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "\n";  					}  					//Список полей  					string fields_in = "";  					string fields_out = "";  					bool is_out = false;  					using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								//резервное?  								var fields_name = fr_a [0].ToString ().Trim ();  								if (is_reserv (fields_name)) {  									fields_name = "\"" + fields_name + "\"";  								}  								//Извлекаем тип данных  								string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  								if (fr_a [2].ToString () == "0") {  									//входной  									if (fields_in == "") {  										fields_in += "( " + fields_name + " " + field_type;  									}  									else {  										fields_in += "'\n " + fields_name + " " + field_type;  									}  								}  								else {  									//значит выходной  									if (!is_out) {  										//ставим флаг' что есть выходные параметры  										is_out = true;  									}  									if (fields_out == "") {  										fields_out += "returns ( " + fields_name + " " + field_type;  									}  									else {  										fields_out += "'\n " + fields_name + " " + field_type;  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					//теперь соединяем   					if (fields_in != "") {  						fields_in += "\n )";  					}  					if (fields_out != "") {  						fields_out += "\n )";  					}  					dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  					if (is_out) {  						dll_command += "suspend;\n";  					}  					dll_command += "\nEND";  					com_procedures_prototype.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter procedure ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "\n";  					}  					//Список полей  					string fields_in = "";  					string fields_out = "";  					bool is_out = false;  					using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								//резервное?  								var fields_name = fr_a [0].ToString ().Trim ();  								if (is_reserv (fields_name)) {  									fields_name = "\"" + fields_name + "\"";  								}  								//Извлекаем тип данных  								string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  								if (fr_a [2].ToString () == "0") {  									//входной  									if (fields_in == "") {  										fields_in += "( " + fields_name + " " + field_type;  									}  									else {  										fields_in += "'\n " + fields_name + " " + field_type;  									}  								}  								else {  									//значит выходной  									if (!is_out) {  										//ставим флаг' что есть выходные параметры  										is_out = true;  									}  									if (fields_out == "") {  										fields_out += "returns ( " + fields_name + " " + field_type;  									}  									else {  										fields_out += "'\n " + fields_name + " " + field_type;  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					//теперь соединяем   					if (fields_in != "") {  						fields_in += "\n )";  					}  					if (fields_out != "") {  						fields_out += "\n )";  					}  					dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  					if (is_out) {  						dll_command += "suspend;\n";  					}  					dll_command += "\nEND";  					com_procedures_prototype.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter procedure ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "\n";  					}  					//Список полей  					string fields_in = "";  					string fields_out = "";  					bool is_out = false;  					using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								//резервное?  								var fields_name = fr_a [0].ToString ().Trim ();  								if (is_reserv (fields_name)) {  									fields_name = "\"" + fields_name + "\"";  								}  								//Извлекаем тип данных  								string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  								if (fr_a [2].ToString () == "0") {  									//входной  									if (fields_in == "") {  										fields_in += "( " + fields_name + " " + field_type;  									}  									else {  										fields_in += "'\n " + fields_name + " " + field_type;  									}  								}  								else {  									//значит выходной  									if (!is_out) {  										//ставим флаг' что есть выходные параметры  										is_out = true;  									}  									if (fields_out == "") {  										fields_out += "returns ( " + fields_name + " " + field_type;  									}  									else {  										fields_out += "'\n " + fields_name + " " + field_type;  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					//теперь соединяем   					if (fields_in != "") {  						fields_in += "\n )";  					}  					if (fields_out != "") {  						fields_out += "\n )";  					}  					dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  					if (is_out) {  						dll_command += "suspend;\n";  					}  					dll_command += "\nEND";  					com_procedures_prototype.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter procedure ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "\n";  					}  					//Список полей  					string fields_in = "";  					string fields_out = "";  					bool is_out = false;  					using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								//резервное?  								var fields_name = fr_a [0].ToString ().Trim ();  								if (is_reserv (fields_name)) {  									fields_name = "\"" + fields_name + "\"";  								}  								//Извлекаем тип данных  								string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  								if (fr_a [2].ToString () == "0") {  									//входной  									if (fields_in == "") {  										fields_in += "( " + fields_name + " " + field_type;  									}  									else {  										fields_in += "'\n " + fields_name + " " + field_type;  									}  								}  								else {  									//значит выходной  									if (!is_out) {  										//ставим флаг' что есть выходные параметры  										is_out = true;  									}  									if (fields_out == "") {  										fields_out += "returns ( " + fields_name + " " + field_type;  									}  									else {  										fields_out += "'\n " + fields_name + " " + field_type;  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					//теперь соединяем   					if (fields_in != "") {  						fields_in += "\n )";  					}  					if (fields_out != "") {  						fields_out += "\n )";  					}  					dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  					if (is_out) {  						dll_command += "suspend;\n";  					}  					dll_command += "\nEND";  					com_procedures_prototype.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter procedure ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "\n";  				}  				//Список полей  				string fields_in = "";  				string fields_out = "";  				bool is_out = false;  				using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							//резервное?  							var fields_name = fr_a [0].ToString ().Trim ();  							if (is_reserv (fields_name)) {  								fields_name = "\"" + fields_name + "\"";  							}  							//Извлекаем тип данных  							string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  							if (fr_a [2].ToString () == "0") {  								//входной  								if (fields_in == "") {  									fields_in += "( " + fields_name + " " + field_type;  								}  								else {  									fields_in += "'\n " + fields_name + " " + field_type;  								}  							}  							else {  								//значит выходной  								if (!is_out) {  									//ставим флаг' что есть выходные параметры  									is_out = true;  								}  								if (fields_out == "") {  									fields_out += "returns ( " + fields_name + " " + field_type;  								}  								else {  									fields_out += "'\n " + fields_name + " " + field_type;  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				//теперь соединяем   				if (fields_in != "") {  					fields_in += "\n )";  				}  				if (fields_out != "") {  					fields_out += "\n )";  				}  				dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  				if (is_out) {  					dll_command += "suspend;\n";  				}  				dll_command += "\nEND";  				com_procedures_prototype.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter procedure ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "\n";  				}  				//Список полей  				string fields_in = "";  				string fields_out = "";  				bool is_out = false;  				using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							//резервное?  							var fields_name = fr_a [0].ToString ().Trim ();  							if (is_reserv (fields_name)) {  								fields_name = "\"" + fields_name + "\"";  							}  							//Извлекаем тип данных  							string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  							if (fr_a [2].ToString () == "0") {  								//входной  								if (fields_in == "") {  									fields_in += "( " + fields_name + " " + field_type;  								}  								else {  									fields_in += "'\n " + fields_name + " " + field_type;  								}  							}  							else {  								//значит выходной  								if (!is_out) {  									//ставим флаг' что есть выходные параметры  									is_out = true;  								}  								if (fields_out == "") {  									fields_out += "returns ( " + fields_name + " " + field_type;  								}  								else {  									fields_out += "'\n " + fields_name + " " + field_type;  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				//теперь соединяем   				if (fields_in != "") {  					fields_in += "\n )";  				}  				if (fields_out != "") {  					fields_out += "\n )";  				}  				dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  				if (is_out) {  					dll_command += "suspend;\n";  				}  				dll_command += "\nEND";  				com_procedures_prototype.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter procedure ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "\n";  				}  				//Список полей  				string fields_in = "";  				string fields_out = "";  				bool is_out = false;  				using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							//резервное?  							var fields_name = fr_a [0].ToString ().Trim ();  							if (is_reserv (fields_name)) {  								fields_name = "\"" + fields_name + "\"";  							}  							//Извлекаем тип данных  							string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  							if (fr_a [2].ToString () == "0") {  								//входной  								if (fields_in == "") {  									fields_in += "( " + fields_name + " " + field_type;  								}  								else {  									fields_in += "'\n " + fields_name + " " + field_type;  								}  							}  							else {  								//значит выходной  								if (!is_out) {  									//ставим флаг' что есть выходные параметры  									is_out = true;  								}  								if (fields_out == "") {  									fields_out += "returns ( " + fields_name + " " + field_type;  								}  								else {  									fields_out += "'\n " + fields_name + " " + field_type;  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				//теперь соединяем   				if (fields_in != "") {  					fields_in += "\n )";  				}  				if (fields_out != "") {  					fields_out += "\n )";  				}  				dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  				if (is_out) {  					dll_command += "suspend;\n";  				}  				dll_command += "\nEND";  				com_procedures_prototype.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter procedure ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "\n";  				}  				//Список полей  				string fields_in = "";  				string fields_out = "";  				bool is_out = false;  				using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							//резервное?  							var fields_name = fr_a [0].ToString ().Trim ();  							if (is_reserv (fields_name)) {  								fields_name = "\"" + fields_name + "\"";  							}  							//Извлекаем тип данных  							string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  							if (fr_a [2].ToString () == "0") {  								//входной  								if (fields_in == "") {  									fields_in += "( " + fields_name + " " + field_type;  								}  								else {  									fields_in += "'\n " + fields_name + " " + field_type;  								}  							}  							else {  								//значит выходной  								if (!is_out) {  									//ставим флаг' что есть выходные параметры  									is_out = true;  								}  								if (fields_out == "") {  									fields_out += "returns ( " + fields_name + " " + field_type;  								}  								else {  									fields_out += "'\n " + fields_name + " " + field_type;  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				//теперь соединяем   				if (fields_in != "") {  					fields_in += "\n )";  				}  				if (fields_out != "") {  					fields_out += "\n )";  				}  				dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  				if (is_out) {  					dll_command += "suspend;\n";  				}  				dll_command += "\nEND";  				com_procedures_prototype.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter procedure ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "\n";  				}  				//Список полей  				string fields_in = "";  				string fields_out = "";  				bool is_out = false;  				using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							//резервное?  							var fields_name = fr_a [0].ToString ().Trim ();  							if (is_reserv (fields_name)) {  								fields_name = "\"" + fields_name + "\"";  							}  							//Извлекаем тип данных  							string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  							if (fr_a [2].ToString () == "0") {  								//входной  								if (fields_in == "") {  									fields_in += "( " + fields_name + " " + field_type;  								}  								else {  									fields_in += "'\n " + fields_name + " " + field_type;  								}  							}  							else {  								//значит выходной  								if (!is_out) {  									//ставим флаг' что есть выходные параметры  									is_out = true;  								}  								if (fields_out == "") {  									fields_out += "returns ( " + fields_name + " " + field_type;  								}  								else {  									fields_out += "'\n " + fields_name + " " + field_type;  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				//теперь соединяем   				if (fields_in != "") {  					fields_in += "\n )";  				}  				if (fields_out != "") {  					fields_out += "\n )";  				}  				dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  				if (is_out) {  					dll_command += "suspend;\n";  				}  				dll_command += "\nEND";  				com_procedures_prototype.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter procedure ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "\n";  				}  				//Список полей  				string fields_in = "";  				string fields_out = "";  				bool is_out = false;  				using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							//резервное?  							var fields_name = fr_a [0].ToString ().Trim ();  							if (is_reserv (fields_name)) {  								fields_name = "\"" + fields_name + "\"";  							}  							//Извлекаем тип данных  							string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  							if (fr_a [2].ToString () == "0") {  								//входной  								if (fields_in == "") {  									fields_in += "( " + fields_name + " " + field_type;  								}  								else {  									fields_in += "'\n " + fields_name + " " + field_type;  								}  							}  							else {  								//значит выходной  								if (!is_out) {  									//ставим флаг' что есть выходные параметры  									is_out = true;  								}  								if (fields_out == "") {  									fields_out += "returns ( " + fields_name + " " + field_type;  								}  								else {  									fields_out += "'\n " + fields_name + " " + field_type;  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				//теперь соединяем   				if (fields_in != "") {  					fields_in += "\n )";  				}  				if (fields_out != "") {  					fields_out += "\n )";  				}  				dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  				if (is_out) {  					dll_command += "suspend;\n";  				}  				dll_command += "\nEND";  				com_procedures_prototype.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter procedure ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "\n";  				}  				//Список полей  				string fields_in = "";  				string fields_out = "";  				bool is_out = false;  				using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							//резервное?  							var fields_name = fr_a [0].ToString ().Trim ();  							if (is_reserv (fields_name)) {  								fields_name = "\"" + fields_name + "\"";  							}  							//Извлекаем тип данных  							string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  							if (fr_a [2].ToString () == "0") {  								//входной  								if (fields_in == "") {  									fields_in += "( " + fields_name + " " + field_type;  								}  								else {  									fields_in += "'\n " + fields_name + " " + field_type;  								}  							}  							else {  								//значит выходной  								if (!is_out) {  									//ставим флаг' что есть выходные параметры  									is_out = true;  								}  								if (fields_out == "") {  									fields_out += "returns ( " + fields_name + " " + field_type;  								}  								else {  									fields_out += "'\n " + fields_name + " " + field_type;  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				//теперь соединяем   				if (fields_in != "") {  					fields_in += "\n )";  				}  				if (fields_out != "") {  					fields_out += "\n )";  				}  				dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  				if (is_out) {  					dll_command += "suspend;\n";  				}  				dll_command += "\nEND";  				com_procedures_prototype.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter procedure ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "\n";  				}  				//Список полей  				string fields_in = "";  				string fields_out = "";  				bool is_out = false;  				using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							//резервное?  							var fields_name = fr_a [0].ToString ().Trim ();  							if (is_reserv (fields_name)) {  								fields_name = "\"" + fields_name + "\"";  							}  							//Извлекаем тип данных  							string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  							if (fr_a [2].ToString () == "0") {  								//входной  								if (fields_in == "") {  									fields_in += "( " + fields_name + " " + field_type;  								}  								else {  									fields_in += "'\n " + fields_name + " " + field_type;  								}  							}  							else {  								//значит выходной  								if (!is_out) {  									//ставим флаг' что есть выходные параметры  									is_out = true;  								}  								if (fields_out == "") {  									fields_out += "returns ( " + fields_name + " " + field_type;  								}  								else {  									fields_out += "'\n " + fields_name + " " + field_type;  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				//теперь соединяем   				if (fields_in != "") {  					fields_in += "\n )";  				}  				if (fields_out != "") {  					fields_out += "\n )";  				}  				dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  				if (is_out) {  					dll_command += "suspend;\n";  				}  				dll_command += "\nEND";  				com_procedures_prototype.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter procedure ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "\n";  			}  			//Список полей  			string fields_in = "";  			string fields_out = "";  			bool is_out = false;  			using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						//резервное?  						var fields_name = fr_a [0].ToString ().Trim ();  						if (is_reserv (fields_name)) {  							fields_name = "\"" + fields_name + "\"";  						}  						//Извлекаем тип данных  						string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  						if (fr_a [2].ToString () == "0") {  							//входной  							if (fields_in == "") {  								fields_in += "( " + fields_name + " " + field_type;  							}  							else {  								fields_in += "'\n " + fields_name + " " + field_type;  							}  						}  						else {  							//значит выходной  							if (!is_out) {  								//ставим флаг' что есть выходные параметры  								is_out = true;  							}  							if (fields_out == "") {  								fields_out += "returns ( " + fields_name + " " + field_type;  							}  							else {  								fields_out += "'\n " + fields_name + " " + field_type;  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			//теперь соединяем   			if (fields_in != "") {  				fields_in += "\n )";  			}  			if (fields_out != "") {  				fields_out += "\n )";  			}  			dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  			if (is_out) {  				dll_command += "suspend;\n";  			}  			dll_command += "\nEND";  			com_procedures_prototype.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter procedure ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "\n";  			}  			//Список полей  			string fields_in = "";  			string fields_out = "";  			bool is_out = false;  			using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						//резервное?  						var fields_name = fr_a [0].ToString ().Trim ();  						if (is_reserv (fields_name)) {  							fields_name = "\"" + fields_name + "\"";  						}  						//Извлекаем тип данных  						string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  						if (fr_a [2].ToString () == "0") {  							//входной  							if (fields_in == "") {  								fields_in += "( " + fields_name + " " + field_type;  							}  							else {  								fields_in += "'\n " + fields_name + " " + field_type;  							}  						}  						else {  							//значит выходной  							if (!is_out) {  								//ставим флаг' что есть выходные параметры  								is_out = true;  							}  							if (fields_out == "") {  								fields_out += "returns ( " + fields_name + " " + field_type;  							}  							else {  								fields_out += "'\n " + fields_name + " " + field_type;  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			//теперь соединяем   			if (fields_in != "") {  				fields_in += "\n )";  			}  			if (fields_out != "") {  				fields_out += "\n )";  			}  			dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  			if (is_out) {  				dll_command += "suspend;\n";  			}  			dll_command += "\nEND";  			com_procedures_prototype.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter procedure ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "\n";  			}  			//Список полей  			string fields_in = "";  			string fields_out = "";  			bool is_out = false;  			using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						//резервное?  						var fields_name = fr_a [0].ToString ().Trim ();  						if (is_reserv (fields_name)) {  							fields_name = "\"" + fields_name + "\"";  						}  						//Извлекаем тип данных  						string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  						if (fr_a [2].ToString () == "0") {  							//входной  							if (fields_in == "") {  								fields_in += "( " + fields_name + " " + field_type;  							}  							else {  								fields_in += "'\n " + fields_name + " " + field_type;  							}  						}  						else {  							//значит выходной  							if (!is_out) {  								//ставим флаг' что есть выходные параметры  								is_out = true;  							}  							if (fields_out == "") {  								fields_out += "returns ( " + fields_name + " " + field_type;  							}  							else {  								fields_out += "'\n " + fields_name + " " + field_type;  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			//теперь соединяем   			if (fields_in != "") {  				fields_in += "\n )";  			}  			if (fields_out != "") {  				fields_out += "\n )";  			}  			dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  			if (is_out) {  				dll_command += "suspend;\n";  			}  			dll_command += "\nEND";  			com_procedures_prototype.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter procedure ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "\n";  			}  			//Список полей  			string fields_in = "";  			string fields_out = "";  			bool is_out = false;  			using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						//резервное?  						var fields_name = fr_a [0].ToString ().Trim ();  						if (is_reserv (fields_name)) {  							fields_name = "\"" + fields_name + "\"";  						}  						//Извлекаем тип данных  						string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  						if (fr_a [2].ToString () == "0") {  							//входной  							if (fields_in == "") {  								fields_in += "( " + fields_name + " " + field_type;  							}  							else {  								fields_in += "'\n " + fields_name + " " + field_type;  							}  						}  						else {  							//значит выходной  							if (!is_out) {  								//ставим флаг' что есть выходные параметры  								is_out = true;  							}  							if (fields_out == "") {  								fields_out += "returns ( " + fields_name + " " + field_type;  							}  							else {  								fields_out += "'\n " + fields_name + " " + field_type;  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			//теперь соединяем   			if (fields_in != "") {  				fields_in += "\n )";  			}  			if (fields_out != "") {  				fields_out += "\n )";  			}  			dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  			if (is_out) {  				dll_command += "suspend;\n";  			}  			dll_command += "\nEND";  			com_procedures_prototype.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter procedure ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "\n";  			}  			//Список полей  			string fields_in = "";  			string fields_out = "";  			bool is_out = false;  			using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						//резервное?  						var fields_name = fr_a [0].ToString ().Trim ();  						if (is_reserv (fields_name)) {  							fields_name = "\"" + fields_name + "\"";  						}  						//Извлекаем тип данных  						string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  						if (fr_a [2].ToString () == "0") {  							//входной  							if (fields_in == "") {  								fields_in += "( " + fields_name + " " + field_type;  							}  							else {  								fields_in += "'\n " + fields_name + " " + field_type;  							}  						}  						else {  							//значит выходной  							if (!is_out) {  								//ставим флаг' что есть выходные параметры  								is_out = true;  							}  							if (fields_out == "") {  								fields_out += "returns ( " + fields_name + " " + field_type;  							}  							else {  								fields_out += "'\n " + fields_name + " " + field_type;  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			//теперь соединяем   			if (fields_in != "") {  				fields_in += "\n )";  			}  			if (fields_out != "") {  				fields_out += "\n )";  			}  			dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  			if (is_out) {  				dll_command += "suspend;\n";  			}  			dll_command += "\nEND";  			com_procedures_prototype.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter procedure ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "\n";  			}  			//Список полей  			string fields_in = "";  			string fields_out = "";  			bool is_out = false;  			using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						//резервное?  						var fields_name = fr_a [0].ToString ().Trim ();  						if (is_reserv (fields_name)) {  							fields_name = "\"" + fields_name + "\"";  						}  						//Извлекаем тип данных  						string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  						if (fr_a [2].ToString () == "0") {  							//входной  							if (fields_in == "") {  								fields_in += "( " + fields_name + " " + field_type;  							}  							else {  								fields_in += "'\n " + fields_name + " " + field_type;  							}  						}  						else {  							//значит выходной  							if (!is_out) {  								//ставим флаг' что есть выходные параметры  								is_out = true;  							}  							if (fields_out == "") {  								fields_out += "returns ( " + fields_name + " " + field_type;  							}  							else {  								fields_out += "'\n " + fields_name + " " + field_type;  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			//теперь соединяем   			if (fields_in != "") {  				fields_in += "\n )";  			}  			if (fields_out != "") {  				fields_out += "\n )";  			}  			dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  			if (is_out) {  				dll_command += "suspend;\n";  			}  			dll_command += "\nEND";  			com_procedures_prototype.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter procedure ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "\n";  			}  			//Список полей  			string fields_in = "";  			string fields_out = "";  			bool is_out = false;  			using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						//резервное?  						var fields_name = fr_a [0].ToString ().Trim ();  						if (is_reserv (fields_name)) {  							fields_name = "\"" + fields_name + "\"";  						}  						//Извлекаем тип данных  						string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  						if (fr_a [2].ToString () == "0") {  							//входной  							if (fields_in == "") {  								fields_in += "( " + fields_name + " " + field_type;  							}  							else {  								fields_in += "'\n " + fields_name + " " + field_type;  							}  						}  						else {  							//значит выходной  							if (!is_out) {  								//ставим флаг' что есть выходные параметры  								is_out = true;  							}  							if (fields_out == "") {  								fields_out += "returns ( " + fields_name + " " + field_type;  							}  							else {  								fields_out += "'\n " + fields_name + " " + field_type;  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			//теперь соединяем   			if (fields_in != "") {  				fields_in += "\n )";  			}  			if (fields_out != "") {  				fields_out += "\n )";  			}  			dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  			if (is_out) {  				dll_command += "suspend;\n";  			}  			dll_command += "\nEND";  			com_procedures_prototype.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter procedure ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "\n";  			}  			//Список полей  			string fields_in = "";  			string fields_out = "";  			bool is_out = false;  			using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						//резервное?  						var fields_name = fr_a [0].ToString ().Trim ();  						if (is_reserv (fields_name)) {  							fields_name = "\"" + fields_name + "\"";  						}  						//Извлекаем тип данных  						string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  						if (fr_a [2].ToString () == "0") {  							//входной  							if (fields_in == "") {  								fields_in += "( " + fields_name + " " + field_type;  							}  							else {  								fields_in += "'\n " + fields_name + " " + field_type;  							}  						}  						else {  							//значит выходной  							if (!is_out) {  								//ставим флаг' что есть выходные параметры  								is_out = true;  							}  							if (fields_out == "") {  								fields_out += "returns ( " + fields_name + " " + field_type;  							}  							else {  								fields_out += "'\n " + fields_name + " " + field_type;  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			//теперь соединяем   			if (fields_in != "") {  				fields_in += "\n )";  			}  			if (fields_out != "") {  				fields_out += "\n )";  			}  			dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  			if (is_out) {  				dll_command += "suspend;\n";  			}  			dll_command += "\nEND";  			com_procedures_prototype.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter procedure ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "\n";  		}  		//Список полей  		string fields_in = "";  		string fields_out = "";  		bool is_out = false;  		using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					//резервное?  					var fields_name = fr_a [0].ToString ().Trim ();  					if (is_reserv (fields_name)) {  						fields_name = "\"" + fields_name + "\"";  					}  					//Извлекаем тип данных  					string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  					if (fr_a [2].ToString () == "0") {  						//входной  						if (fields_in == "") {  							fields_in += "( " + fields_name + " " + field_type;  						}  						else {  							fields_in += "'\n " + fields_name + " " + field_type;  						}  					}  					else {  						//значит выходной  						if (!is_out) {  							//ставим флаг' что есть выходные параметры  							is_out = true;  						}  						if (fields_out == "") {  							fields_out += "returns ( " + fields_name + " " + field_type;  						}  						else {  							fields_out += "'\n " + fields_name + " " + field_type;  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		//теперь соединяем   		if (fields_in != "") {  			fields_in += "\n )";  		}  		if (fields_out != "") {  			fields_out += "\n )";  		}  		dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  		if (is_out) {  			dll_command += "suspend;\n";  		}  		dll_command += "\nEND";  		com_procedures_prototype.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter procedure ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "\n";  		}  		//Список полей  		string fields_in = "";  		string fields_out = "";  		bool is_out = false;  		using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					//резервное?  					var fields_name = fr_a [0].ToString ().Trim ();  					if (is_reserv (fields_name)) {  						fields_name = "\"" + fields_name + "\"";  					}  					//Извлекаем тип данных  					string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  					if (fr_a [2].ToString () == "0") {  						//входной  						if (fields_in == "") {  							fields_in += "( " + fields_name + " " + field_type;  						}  						else {  							fields_in += "'\n " + fields_name + " " + field_type;  						}  					}  					else {  						//значит выходной  						if (!is_out) {  							//ставим флаг' что есть выходные параметры  							is_out = true;  						}  						if (fields_out == "") {  							fields_out += "returns ( " + fields_name + " " + field_type;  						}  						else {  							fields_out += "'\n " + fields_name + " " + field_type;  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		//теперь соединяем   		if (fields_in != "") {  			fields_in += "\n )";  		}  		if (fields_out != "") {  			fields_out += "\n )";  		}  		dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  		if (is_out) {  			dll_command += "suspend;\n";  		}  		dll_command += "\nEND";  		com_procedures_prototype.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter procedure ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "\n";  		}  		//Список полей  		string fields_in = "";  		string fields_out = "";  		bool is_out = false;  		using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					//резервное?  					var fields_name = fr_a [0].ToString ().Trim ();  					if (is_reserv (fields_name)) {  						fields_name = "\"" + fields_name + "\"";  					}  					//Извлекаем тип данных  					string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  					if (fr_a [2].ToString () == "0") {  						//входной  						if (fields_in == "") {  							fields_in += "( " + fields_name + " " + field_type;  						}  						else {  							fields_in += "'\n " + fields_name + " " + field_type;  						}  					}  					else {  						//значит выходной  						if (!is_out) {  							//ставим флаг' что есть выходные параметры  							is_out = true;  						}  						if (fields_out == "") {  							fields_out += "returns ( " + fields_name + " " + field_type;  						}  						else {  							fields_out += "'\n " + fields_name + " " + field_type;  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		//теперь соединяем   		if (fields_in != "") {  			fields_in += "\n )";  		}  		if (fields_out != "") {  			fields_out += "\n )";  		}  		dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  		if (is_out) {  			dll_command += "suspend;\n";  		}  		dll_command += "\nEND";  		com_procedures_prototype.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter procedure ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "\n";  		}  		//Список полей  		string fields_in = "";  		string fields_out = "";  		bool is_out = false;  		using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					//резервное?  					var fields_name = fr_a [0].ToString ().Trim ();  					if (is_reserv (fields_name)) {  						fields_name = "\"" + fields_name + "\"";  					}  					//Извлекаем тип данных  					string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  					if (fr_a [2].ToString () == "0") {  						//входной  						if (fields_in == "") {  							fields_in += "( " + fields_name + " " + field_type;  						}  						else {  							fields_in += "'\n " + fields_name + " " + field_type;  						}  					}  					else {  						//значит выходной  						if (!is_out) {  							//ставим флаг' что есть выходные параметры  							is_out = true;  						}  						if (fields_out == "") {  							fields_out += "returns ( " + fields_name + " " + field_type;  						}  						else {  							fields_out += "'\n " + fields_name + " " + field_type;  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		//теперь соединяем   		if (fields_in != "") {  			fields_in += "\n )";  		}  		if (fields_out != "") {  			fields_out += "\n )";  		}  		dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  		if (is_out) {  			dll_command += "suspend;\n";  		}  		dll_command += "\nEND";  		com_procedures_prototype.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter procedure ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "\n";  		}  		//Список полей  		string fields_in = "";  		string fields_out = "";  		bool is_out = false;  		using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					//резервное?  					var fields_name = fr_a [0].ToString ().Trim ();  					if (is_reserv (fields_name)) {  						fields_name = "\"" + fields_name + "\"";  					}  					//Извлекаем тип данных  					string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  					if (fr_a [2].ToString () == "0") {  						//входной  						if (fields_in == "") {  							fields_in += "( " + fields_name + " " + field_type;  						}  						else {  							fields_in += "'\n " + fields_name + " " + field_type;  						}  					}  					else {  						//значит выходной  						if (!is_out) {  							//ставим флаг' что есть выходные параметры  							is_out = true;  						}  						if (fields_out == "") {  							fields_out += "returns ( " + fields_name + " " + field_type;  						}  						else {  							fields_out += "'\n " + fields_name + " " + field_type;  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		//теперь соединяем   		if (fields_in != "") {  			fields_in += "\n )";  		}  		if (fields_out != "") {  			fields_out += "\n )";  		}  		dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  		if (is_out) {  			dll_command += "suspend;\n";  		}  		dll_command += "\nEND";  		com_procedures_prototype.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter procedure ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "\n";  		}  		//Список полей  		string fields_in = "";  		string fields_out = "";  		bool is_out = false;  		using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					//резервное?  					var fields_name = fr_a [0].ToString ().Trim ();  					if (is_reserv (fields_name)) {  						fields_name = "\"" + fields_name + "\"";  					}  					//Извлекаем тип данных  					string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  					if (fr_a [2].ToString () == "0") {  						//входной  						if (fields_in == "") {  							fields_in += "( " + fields_name + " " + field_type;  						}  						else {  							fields_in += "'\n " + fields_name + " " + field_type;  						}  					}  					else {  						//значит выходной  						if (!is_out) {  							//ставим флаг' что есть выходные параметры  							is_out = true;  						}  						if (fields_out == "") {  							fields_out += "returns ( " + fields_name + " " + field_type;  						}  						else {  							fields_out += "'\n " + fields_name + " " + field_type;  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		//теперь соединяем   		if (fields_in != "") {  			fields_in += "\n )";  		}  		if (fields_out != "") {  			fields_out += "\n )";  		}  		dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  		if (is_out) {  			dll_command += "suspend;\n";  		}  		dll_command += "\nEND";  		com_procedures_prototype.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter procedure ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "\n";  		}  		//Список полей  		string fields_in = "";  		string fields_out = "";  		bool is_out = false;  		using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					//резервное?  					var fields_name = fr_a [0].ToString ().Trim ();  					if (is_reserv (fields_name)) {  						fields_name = "\"" + fields_name + "\"";  					}  					//Извлекаем тип данных  					string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  					if (fr_a [2].ToString () == "0") {  						//входной  						if (fields_in == "") {  							fields_in += "( " + fields_name + " " + field_type;  						}  						else {  							fields_in += "'\n " + fields_name + " " + field_type;  						}  					}  					else {  						//значит выходной  						if (!is_out) {  							//ставим флаг' что есть выходные параметры  							is_out = true;  						}  						if (fields_out == "") {  							fields_out += "returns ( " + fields_name + " " + field_type;  						}  						else {  							fields_out += "'\n " + fields_name + " " + field_type;  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		//теперь соединяем   		if (fields_in != "") {  			fields_in += "\n )";  		}  		if (fields_out != "") {  			fields_out += "\n )";  		}  		dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  		if (is_out) {  			dll_command += "suspend;\n";  		}  		dll_command += "\nEND";  		com_procedures_prototype.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter procedure ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "\n";  		}  		//Список полей  		string fields_in = "";  		string fields_out = "";  		bool is_out = false;  		using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					//резервное?  					var fields_name = fr_a [0].ToString ().Trim ();  					if (is_reserv (fields_name)) {  						fields_name = "\"" + fields_name + "\"";  					}  					//Извлекаем тип данных  					string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  					if (fr_a [2].ToString () == "0") {  						//входной  						if (fields_in == "") {  							fields_in += "( " + fields_name + " " + field_type;  						}  						else {  							fields_in += "'\n " + fields_name + " " + field_type;  						}  					}  					else {  						//значит выходной  						if (!is_out) {  							//ставим флаг' что есть выходные параметры  							is_out = true;  						}  						if (fields_out == "") {  							fields_out += "returns ( " + fields_name + " " + field_type;  						}  						else {  							fields_out += "'\n " + fields_name + " " + field_type;  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		//теперь соединяем   		if (fields_in != "") {  			fields_in += "\n )";  		}  		if (fields_out != "") {  			fields_out += "\n )";  		}  		dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  		if (is_out) {  			dll_command += "suspend;\n";  		}  		dll_command += "\nEND";  		com_procedures_prototype.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter procedure ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "\n";  	}  	//Список полей  	string fields_in = "";  	string fields_out = "";  	bool is_out = false;  	using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				//резервное?  				var fields_name = fr_a [0].ToString ().Trim ();  				if (is_reserv (fields_name)) {  					fields_name = "\"" + fields_name + "\"";  				}  				//Извлекаем тип данных  				string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  				if (fr_a [2].ToString () == "0") {  					//входной  					if (fields_in == "") {  						fields_in += "( " + fields_name + " " + field_type;  					}  					else {  						fields_in += "'\n " + fields_name + " " + field_type;  					}  				}  				else {  					//значит выходной  					if (!is_out) {  						//ставим флаг' что есть выходные параметры  						is_out = true;  					}  					if (fields_out == "") {  						fields_out += "returns ( " + fields_name + " " + field_type;  					}  					else {  						fields_out += "'\n " + fields_name + " " + field_type;  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	//теперь соединяем   	if (fields_in != "") {  		fields_in += "\n )";  	}  	if (fields_out != "") {  		fields_out += "\n )";  	}  	dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  	if (is_out) {  		dll_command += "suspend;\n";  	}  	dll_command += "\nEND";  	com_procedures_prototype.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter procedure ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "\n";  	}  	//Список полей  	string fields_in = "";  	string fields_out = "";  	bool is_out = false;  	using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				//резервное?  				var fields_name = fr_a [0].ToString ().Trim ();  				if (is_reserv (fields_name)) {  					fields_name = "\"" + fields_name + "\"";  				}  				//Извлекаем тип данных  				string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  				if (fr_a [2].ToString () == "0") {  					//входной  					if (fields_in == "") {  						fields_in += "( " + fields_name + " " + field_type;  					}  					else {  						fields_in += "'\n " + fields_name + " " + field_type;  					}  				}  				else {  					//значит выходной  					if (!is_out) {  						//ставим флаг' что есть выходные параметры  						is_out = true;  					}  					if (fields_out == "") {  						fields_out += "returns ( " + fields_name + " " + field_type;  					}  					else {  						fields_out += "'\n " + fields_name + " " + field_type;  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	//теперь соединяем   	if (fields_in != "") {  		fields_in += "\n )";  	}  	if (fields_out != "") {  		fields_out += "\n )";  	}  	dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  	if (is_out) {  		dll_command += "suspend;\n";  	}  	dll_command += "\nEND";  	com_procedures_prototype.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter procedure ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "\n";  	}  	//Список полей  	string fields_in = "";  	string fields_out = "";  	bool is_out = false;  	using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				//резервное?  				var fields_name = fr_a [0].ToString ().Trim ();  				if (is_reserv (fields_name)) {  					fields_name = "\"" + fields_name + "\"";  				}  				//Извлекаем тип данных  				string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  				if (fr_a [2].ToString () == "0") {  					//входной  					if (fields_in == "") {  						fields_in += "( " + fields_name + " " + field_type;  					}  					else {  						fields_in += "'\n " + fields_name + " " + field_type;  					}  				}  				else {  					//значит выходной  					if (!is_out) {  						//ставим флаг' что есть выходные параметры  						is_out = true;  					}  					if (fields_out == "") {  						fields_out += "returns ( " + fields_name + " " + field_type;  					}  					else {  						fields_out += "'\n " + fields_name + " " + field_type;  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	//теперь соединяем   	if (fields_in != "") {  		fields_in += "\n )";  	}  	if (fields_out != "") {  		fields_out += "\n )";  	}  	dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  	if (is_out) {  		dll_command += "suspend;\n";  	}  	dll_command += "\nEND";  	com_procedures_prototype.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter procedure ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "\n";  	}  	//Список полей  	string fields_in = "";  	string fields_out = "";  	bool is_out = false;  	using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				//резервное?  				var fields_name = fr_a [0].ToString ().Trim ();  				if (is_reserv (fields_name)) {  					fields_name = "\"" + fields_name + "\"";  				}  				//Извлекаем тип данных  				string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  				if (fr_a [2].ToString () == "0") {  					//входной  					if (fields_in == "") {  						fields_in += "( " + fields_name + " " + field_type;  					}  					else {  						fields_in += "'\n " + fields_name + " " + field_type;  					}  				}  				else {  					//значит выходной  					if (!is_out) {  						//ставим флаг' что есть выходные параметры  						is_out = true;  					}  					if (fields_out == "") {  						fields_out += "returns ( " + fields_name + " " + field_type;  					}  					else {  						fields_out += "'\n " + fields_name + " " + field_type;  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	//теперь соединяем   	if (fields_in != "") {  		fields_in += "\n )";  	}  	if (fields_out != "") {  		fields_out += "\n )";  	}  	dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  	if (is_out) {  		dll_command += "suspend;\n";  	}  	dll_command += "\nEND";  	com_procedures_prototype.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter procedure ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "\n";  	}  	//Список полей  	string fields_in = "";  	string fields_out = "";  	bool is_out = false;  	using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				//резервное?  				var fields_name = fr_a [0].ToString ().Trim ();  				if (is_reserv (fields_name)) {  					fields_name = "\"" + fields_name + "\"";  				}  				//Извлекаем тип данных  				string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  				if (fr_a [2].ToString () == "0") {  					//входной  					if (fields_in == "") {  						fields_in += "( " + fields_name + " " + field_type;  					}  					else {  						fields_in += "'\n " + fields_name + " " + field_type;  					}  				}  				else {  					//значит выходной  					if (!is_out) {  						//ставим флаг' что есть выходные параметры  						is_out = true;  					}  					if (fields_out == "") {  						fields_out += "returns ( " + fields_name + " " + field_type;  					}  					else {  						fields_out += "'\n " + fields_name + " " + field_type;  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	//теперь соединяем   	if (fields_in != "") {  		fields_in += "\n )";  	}  	if (fields_out != "") {  		fields_out += "\n )";  	}  	dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  	if (is_out) {  		dll_command += "suspend;\n";  	}  	dll_command += "\nEND";  	com_procedures_prototype.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter procedure ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "\n";  	}  	//Список полей  	string fields_in = "";  	string fields_out = "";  	bool is_out = false;  	using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				//резервное?  				var fields_name = fr_a [0].ToString ().Trim ();  				if (is_reserv (fields_name)) {  					fields_name = "\"" + fields_name + "\"";  				}  				//Извлекаем тип данных  				string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  				if (fr_a [2].ToString () == "0") {  					//входной  					if (fields_in == "") {  						fields_in += "( " + fields_name + " " + field_type;  					}  					else {  						fields_in += "'\n " + fields_name + " " + field_type;  					}  				}  				else {  					//значит выходной  					if (!is_out) {  						//ставим флаг' что есть выходные параметры  						is_out = true;  					}  					if (fields_out == "") {  						fields_out += "returns ( " + fields_name + " " + field_type;  					}  					else {  						fields_out += "'\n " + fields_name + " " + field_type;  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	//теперь соединяем   	if (fields_in != "") {  		fields_in += "\n )";  	}  	if (fields_out != "") {  		fields_out += "\n )";  	}  	dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  	if (is_out) {  		dll_command += "suspend;\n";  	}  	dll_command += "\nEND";  	com_procedures_prototype.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter procedure ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "\n";  	}  	//Список полей  	string fields_in = "";  	string fields_out = "";  	bool is_out = false;  	using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				//резервное?  				var fields_name = fr_a [0].ToString ().Trim ();  				if (is_reserv (fields_name)) {  					fields_name = "\"" + fields_name + "\"";  				}  				//Извлекаем тип данных  				string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  				if (fr_a [2].ToString () == "0") {  					//входной  					if (fields_in == "") {  						fields_in += "( " + fields_name + " " + field_type;  					}  					else {  						fields_in += "'\n " + fields_name + " " + field_type;  					}  				}  				else {  					//значит выходной  					if (!is_out) {  						//ставим флаг' что есть выходные параметры  						is_out = true;  					}  					if (fields_out == "") {  						fields_out += "returns ( " + fields_name + " " + field_type;  					}  					else {  						fields_out += "'\n " + fields_name + " " + field_type;  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	//теперь соединяем   	if (fields_in != "") {  		fields_in += "\n )";  	}  	if (fields_out != "") {  		fields_out += "\n )";  	}  	dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  	if (is_out) {  		dll_command += "suspend;\n";  	}  	dll_command += "\nEND";  	com_procedures_prototype.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter procedure ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "\n";  	}  	//Список полей  	string fields_in = "";  	string fields_out = "";  	bool is_out = false;  	using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				//резервное?  				var fields_name = fr_a [0].ToString ().Trim ();  				if (is_reserv (fields_name)) {  					fields_name = "\"" + fields_name + "\"";  				}  				//Извлекаем тип данных  				string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  				if (fr_a [2].ToString () == "0") {  					//входной  					if (fields_in == "") {  						fields_in += "( " + fields_name + " " + field_type;  					}  					else {  						fields_in += "'\n " + fields_name + " " + field_type;  					}  				}  				else {  					//значит выходной  					if (!is_out) {  						//ставим флаг' что есть выходные параметры  						is_out = true;  					}  					if (fields_out == "") {  						fields_out += "returns ( " + fields_name + " " + field_type;  					}  					else {  						fields_out += "'\n " + fields_name + " " + field_type;  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	//теперь соединяем   	if (fields_in != "") {  		fields_in += "\n )";  	}  	if (fields_out != "") {  		fields_out += "\n )";  	}  	dll_command += fields_in + fields_out + "\n AS\nBEGIN\n";  	if (is_out) {  		dll_command += "suspend;\n";  	}  	dll_command += "\nEND";  	com_procedures_prototype.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			//резервное?  			var fields_name = fr_a [0].ToString ().Trim ();  			if (is_reserv (fields_name)) {  				fields_name = "\"" + fields_name + "\"";  			}  			//Извлекаем тип данных  			string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  			if (fr_a [2].ToString () == "0") {  				//входной  				if (fields_in == "") {  					fields_in += "( " + fields_name + " " + field_type;  				}  				else {  					fields_in += "'\n " + fields_name + " " + field_type;  				}  			}  			else {  				//значит выходной  				if (!is_out) {  					//ставим флаг' что есть выходные параметры  					is_out = true;  				}  				if (fields_out == "") {  					fields_out += "returns ( " + fields_name + " " + field_type;  				}  				else {  					fields_out += "'\n " + fields_name + " " + field_type;  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			//резервное?  			var fields_name = fr_a [0].ToString ().Trim ();  			if (is_reserv (fields_name)) {  				fields_name = "\"" + fields_name + "\"";  			}  			//Извлекаем тип данных  			string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  			if (fr_a [2].ToString () == "0") {  				//входной  				if (fields_in == "") {  					fields_in += "( " + fields_name + " " + field_type;  				}  				else {  					fields_in += "'\n " + fields_name + " " + field_type;  				}  			}  			else {  				//значит выходной  				if (!is_out) {  					//ставим флаг' что есть выходные параметры  					is_out = true;  				}  				if (fields_out == "") {  					fields_out += "returns ( " + fields_name + " " + field_type;  				}  				else {  					fields_out += "'\n " + fields_name + " " + field_type;  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			//резервное?  			var fields_name = fr_a [0].ToString ().Trim ();  			if (is_reserv (fields_name)) {  				fields_name = "\"" + fields_name + "\"";  			}  			//Извлекаем тип данных  			string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  			if (fr_a [2].ToString () == "0") {  				//входной  				if (fields_in == "") {  					fields_in += "( " + fields_name + " " + field_type;  				}  				else {  					fields_in += "'\n " + fields_name + " " + field_type;  				}  			}  			else {  				//значит выходной  				if (!is_out) {  					//ставим флаг' что есть выходные параметры  					is_out = true;  				}  				if (fields_out == "") {  					fields_out += "returns ( " + fields_name + " " + field_type;  				}  				else {  					fields_out += "'\n " + fields_name + " " + field_type;  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			//резервное?  			var fields_name = fr_a [0].ToString ().Trim ();  			if (is_reserv (fields_name)) {  				fields_name = "\"" + fields_name + "\"";  			}  			//Извлекаем тип данных  			string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  			if (fr_a [2].ToString () == "0") {  				//входной  				if (fields_in == "") {  					fields_in += "( " + fields_name + " " + field_type;  				}  				else {  					fields_in += "'\n " + fields_name + " " + field_type;  				}  			}  			else {  				//значит выходной  				if (!is_out) {  					//ставим флаг' что есть выходные параметры  					is_out = true;  				}  				if (fields_out == "") {  					fields_out += "returns ( " + fields_name + " " + field_type;  				}  				else {  					fields_out += "'\n " + fields_name + " " + field_type;  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			//резервное?  			var fields_name = fr_a [0].ToString ().Trim ();  			if (is_reserv (fields_name)) {  				fields_name = "\"" + fields_name + "\"";  			}  			//Извлекаем тип данных  			string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  			if (fr_a [2].ToString () == "0") {  				//входной  				if (fields_in == "") {  					fields_in += "( " + fields_name + " " + field_type;  				}  				else {  					fields_in += "'\n " + fields_name + " " + field_type;  				}  			}  			else {  				//значит выходной  				if (!is_out) {  					//ставим флаг' что есть выходные параметры  					is_out = true;  				}  				if (fields_out == "") {  					fields_out += "returns ( " + fields_name + " " + field_type;  				}  				else {  					fields_out += "'\n " + fields_name + " " + field_type;  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			//резервное?  			var fields_name = fr_a [0].ToString ().Trim ();  			if (is_reserv (fields_name)) {  				fields_name = "\"" + fields_name + "\"";  			}  			//Извлекаем тип данных  			string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  			if (fr_a [2].ToString () == "0") {  				//входной  				if (fields_in == "") {  					fields_in += "( " + fields_name + " " + field_type;  				}  				else {  					fields_in += "'\n " + fields_name + " " + field_type;  				}  			}  			else {  				//значит выходной  				if (!is_out) {  					//ставим флаг' что есть выходные параметры  					is_out = true;  				}  				if (fields_out == "") {  					fields_out += "returns ( " + fields_name + " " + field_type;  				}  				else {  					fields_out += "'\n " + fields_name + " " + field_type;  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			//резервное?  			var fields_name = fr_a [0].ToString ().Trim ();  			if (is_reserv (fields_name)) {  				fields_name = "\"" + fields_name + "\"";  			}  			//Извлекаем тип данных  			string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  			if (fr_a [2].ToString () == "0") {  				//входной  				if (fields_in == "") {  					fields_in += "( " + fields_name + " " + field_type;  				}  				else {  					fields_in += "'\n " + fields_name + " " + field_type;  				}  			}  			else {  				//значит выходной  				if (!is_out) {  					//ставим флаг' что есть выходные параметры  					is_out = true;  				}  				if (fields_out == "") {  					fields_out += "returns ( " + fields_name + " " + field_type;  				}  				else {  					fields_out += "'\n " + fields_name + " " + field_type;  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			//резервное?  			var fields_name = fr_a [0].ToString ().Trim ();  			if (is_reserv (fields_name)) {  				fields_name = "\"" + fields_name + "\"";  			}  			//Извлекаем тип данных  			string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  			if (fr_a [2].ToString () == "0") {  				//входной  				if (fields_in == "") {  					fields_in += "( " + fields_name + " " + field_type;  				}  				else {  					fields_in += "'\n " + fields_name + " " + field_type;  				}  			}  			else {  				//значит выходной  				if (!is_out) {  					//ставим флаг' что есть выходные параметры  					is_out = true;  				}  				if (fields_out == "") {  					fields_out += "returns ( " + fields_name + " " + field_type;  				}  				else {  					fields_out += "'\n " + fields_name + " " + field_type;  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		//резервное?  		var fields_name = fr_a [0].ToString ().Trim ();  		if (is_reserv (fields_name)) {  			fields_name = "\"" + fields_name + "\"";  		}  		//Извлекаем тип данных  		string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  		if (fr_a [2].ToString () == "0") {  			//входной  			if (fields_in == "") {  				fields_in += "( " + fields_name + " " + field_type;  			}  			else {  				fields_in += "'\n " + fields_name + " " + field_type;  			}  		}  		else {  			//значит выходной  			if (!is_out) {  				//ставим флаг' что есть выходные параметры  				is_out = true;  			}  			if (fields_out == "") {  				fields_out += "returns ( " + fields_name + " " + field_type;  			}  			else {  				fields_out += "'\n " + fields_name + " " + field_type;  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		//резервное?  		var fields_name = fr_a [0].ToString ().Trim ();  		if (is_reserv (fields_name)) {  			fields_name = "\"" + fields_name + "\"";  		}  		//Извлекаем тип данных  		string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  		if (fr_a [2].ToString () == "0") {  			//входной  			if (fields_in == "") {  				fields_in += "( " + fields_name + " " + field_type;  			}  			else {  				fields_in += "'\n " + fields_name + " " + field_type;  			}  		}  		else {  			//значит выходной  			if (!is_out) {  				//ставим флаг' что есть выходные параметры  				is_out = true;  			}  			if (fields_out == "") {  				fields_out += "returns ( " + fields_name + " " + field_type;  			}  			else {  				fields_out += "'\n " + fields_name + " " + field_type;  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		//резервное?  		var fields_name = fr_a [0].ToString ().Trim ();  		if (is_reserv (fields_name)) {  			fields_name = "\"" + fields_name + "\"";  		}  		//Извлекаем тип данных  		string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  		if (fr_a [2].ToString () == "0") {  			//входной  			if (fields_in == "") {  				fields_in += "( " + fields_name + " " + field_type;  			}  			else {  				fields_in += "'\n " + fields_name + " " + field_type;  			}  		}  		else {  			//значит выходной  			if (!is_out) {  				//ставим флаг' что есть выходные параметры  				is_out = true;  			}  			if (fields_out == "") {  				fields_out += "returns ( " + fields_name + " " + field_type;  			}  			else {  				fields_out += "'\n " + fields_name + " " + field_type;  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		//резервное?  		var fields_name = fr_a [0].ToString ().Trim ();  		if (is_reserv (fields_name)) {  			fields_name = "\"" + fields_name + "\"";  		}  		//Извлекаем тип данных  		string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  		if (fr_a [2].ToString () == "0") {  			//входной  			if (fields_in == "") {  				fields_in += "( " + fields_name + " " + field_type;  			}  			else {  				fields_in += "'\n " + fields_name + " " + field_type;  			}  		}  		else {  			//значит выходной  			if (!is_out) {  				//ставим флаг' что есть выходные параметры  				is_out = true;  			}  			if (fields_out == "") {  				fields_out += "returns ( " + fields_name + " " + field_type;  			}  			else {  				fields_out += "'\n " + fields_name + " " + field_type;  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		//резервное?  		var fields_name = fr_a [0].ToString ().Trim ();  		if (is_reserv (fields_name)) {  			fields_name = "\"" + fields_name + "\"";  		}  		//Извлекаем тип данных  		string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  		if (fr_a [2].ToString () == "0") {  			//входной  			if (fields_in == "") {  				fields_in += "( " + fields_name + " " + field_type;  			}  			else {  				fields_in += "'\n " + fields_name + " " + field_type;  			}  		}  		else {  			//значит выходной  			if (!is_out) {  				//ставим флаг' что есть выходные параметры  				is_out = true;  			}  			if (fields_out == "") {  				fields_out += "returns ( " + fields_name + " " + field_type;  			}  			else {  				fields_out += "'\n " + fields_name + " " + field_type;  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		//резервное?  		var fields_name = fr_a [0].ToString ().Trim ();  		if (is_reserv (fields_name)) {  			fields_name = "\"" + fields_name + "\"";  		}  		//Извлекаем тип данных  		string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  		if (fr_a [2].ToString () == "0") {  			//входной  			if (fields_in == "") {  				fields_in += "( " + fields_name + " " + field_type;  			}  			else {  				fields_in += "'\n " + fields_name + " " + field_type;  			}  		}  		else {  			//значит выходной  			if (!is_out) {  				//ставим флаг' что есть выходные параметры  				is_out = true;  			}  			if (fields_out == "") {  				fields_out += "returns ( " + fields_name + " " + field_type;  			}  			else {  				fields_out += "'\n " + fields_name + " " + field_type;  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		//резервное?  		var fields_name = fr_a [0].ToString ().Trim ();  		if (is_reserv (fields_name)) {  			fields_name = "\"" + fields_name + "\"";  		}  		//Извлекаем тип данных  		string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  		if (fr_a [2].ToString () == "0") {  			//входной  			if (fields_in == "") {  				fields_in += "( " + fields_name + " " + field_type;  			}  			else {  				fields_in += "'\n " + fields_name + " " + field_type;  			}  		}  		else {  			//значит выходной  			if (!is_out) {  				//ставим флаг' что есть выходные параметры  				is_out = true;  			}  			if (fields_out == "") {  				fields_out += "returns ( " + fields_name + " " + field_type;  			}  			else {  				fields_out += "'\n " + fields_name + " " + field_type;  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: while (fr_a.Read ()) {  	//резервное?  	var fields_name = fr_a [0].ToString ().Trim ();  	if (is_reserv (fields_name)) {  		fields_name = "\"" + fields_name + "\"";  	}  	//Извлекаем тип данных  	string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  	if (fr_a [2].ToString () == "0") {  		//входной  		if (fields_in == "") {  			fields_in += "( " + fields_name + " " + field_type;  		}  		else {  			fields_in += "'\n " + fields_name + " " + field_type;  		}  	}  	else {  		//значит выходной  		if (!is_out) {  			//ставим флаг' что есть выходные параметры  			is_out = true;  		}  		if (fields_out == "") {  			fields_out += "returns ( " + fields_name + " " + field_type;  		}  		else {  			fields_out += "'\n " + fields_name + " " + field_type;  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: while (fr_a.Read ()) {  	//резервное?  	var fields_name = fr_a [0].ToString ().Trim ();  	if (is_reserv (fields_name)) {  		fields_name = "\"" + fields_name + "\"";  	}  	//Извлекаем тип данных  	string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  	if (fr_a [2].ToString () == "0") {  		//входной  		if (fields_in == "") {  			fields_in += "( " + fields_name + " " + field_type;  		}  		else {  			fields_in += "'\n " + fields_name + " " + field_type;  		}  	}  	else {  		//значит выходной  		if (!is_out) {  			//ставим флаг' что есть выходные параметры  			is_out = true;  		}  		if (fields_out == "") {  			fields_out += "returns ( " + fields_name + " " + field_type;  		}  		else {  			fields_out += "'\n " + fields_name + " " + field_type;  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: while (fr_a.Read ()) {  	//резервное?  	var fields_name = fr_a [0].ToString ().Trim ();  	if (is_reserv (fields_name)) {  		fields_name = "\"" + fields_name + "\"";  	}  	//Извлекаем тип данных  	string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  	if (fr_a [2].ToString () == "0") {  		//входной  		if (fields_in == "") {  			fields_in += "( " + fields_name + " " + field_type;  		}  		else {  			fields_in += "'\n " + fields_name + " " + field_type;  		}  	}  	else {  		//значит выходной  		if (!is_out) {  			//ставим флаг' что есть выходные параметры  			is_out = true;  		}  		if (fields_out == "") {  			fields_out += "returns ( " + fields_name + " " + field_type;  		}  		else {  			fields_out += "'\n " + fields_name + " " + field_type;  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: while (fr_a.Read ()) {  	//резервное?  	var fields_name = fr_a [0].ToString ().Trim ();  	if (is_reserv (fields_name)) {  		fields_name = "\"" + fields_name + "\"";  	}  	//Извлекаем тип данных  	string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  	if (fr_a [2].ToString () == "0") {  		//входной  		if (fields_in == "") {  			fields_in += "( " + fields_name + " " + field_type;  		}  		else {  			fields_in += "'\n " + fields_name + " " + field_type;  		}  	}  	else {  		//значит выходной  		if (!is_out) {  			//ставим флаг' что есть выходные параметры  			is_out = true;  		}  		if (fields_out == "") {  			fields_out += "returns ( " + fields_name + " " + field_type;  		}  		else {  			fields_out += "'\n " + fields_name + " " + field_type;  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: while (fr_a.Read ()) {  	//резервное?  	var fields_name = fr_a [0].ToString ().Trim ();  	if (is_reserv (fields_name)) {  		fields_name = "\"" + fields_name + "\"";  	}  	//Извлекаем тип данных  	string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  	if (fr_a [2].ToString () == "0") {  		//входной  		if (fields_in == "") {  			fields_in += "( " + fields_name + " " + field_type;  		}  		else {  			fields_in += "'\n " + fields_name + " " + field_type;  		}  	}  	else {  		//значит выходной  		if (!is_out) {  			//ставим флаг' что есть выходные параметры  			is_out = true;  		}  		if (fields_out == "") {  			fields_out += "returns ( " + fields_name + " " + field_type;  		}  		else {  			fields_out += "'\n " + fields_name + " " + field_type;  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: while (fr_a.Read ()) {  	//резервное?  	var fields_name = fr_a [0].ToString ().Trim ();  	if (is_reserv (fields_name)) {  		fields_name = "\"" + fields_name + "\"";  	}  	//Извлекаем тип данных  	string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  	if (fr_a [2].ToString () == "0") {  		//входной  		if (fields_in == "") {  			fields_in += "( " + fields_name + " " + field_type;  		}  		else {  			fields_in += "'\n " + fields_name + " " + field_type;  		}  	}  	else {  		//значит выходной  		if (!is_out) {  			//ставим флаг' что есть выходные параметры  			is_out = true;  		}  		if (fields_out == "") {  			fields_out += "returns ( " + fields_name + " " + field_type;  		}  		else {  			fields_out += "'\n " + fields_name + " " + field_type;  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: while (fr_a.Read ()) {  	//резервное?  	var fields_name = fr_a [0].ToString ().Trim ();  	if (is_reserv (fields_name)) {  		fields_name = "\"" + fields_name + "\"";  	}  	//Извлекаем тип данных  	string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  	if (fr_a [2].ToString () == "0") {  		//входной  		if (fields_in == "") {  			fields_in += "( " + fields_name + " " + field_type;  		}  		else {  			fields_in += "'\n " + fields_name + " " + field_type;  		}  	}  	else {  		//значит выходной  		if (!is_out) {  			//ставим флаг' что есть выходные параметры  			is_out = true;  		}  		if (fields_out == "") {  			fields_out += "returns ( " + fields_name + " " + field_type;  		}  		else {  			fields_out += "'\n " + fields_name + " " + field_type;  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES_PROTOTYPE,The following statement contains a magic number: if (fr_a [2].ToString () == "0") {  	//входной  	if (fields_in == "") {  		fields_in += "( " + fields_name + " " + field_type;  	}  	else {  		fields_in += "'\n " + fields_name + " " + field_type;  	}  }  else {  	//значит выходной  	if (!is_out) {  		//ставим флаг' что есть выходные параметры  		is_out = true;  	}  	if (fields_out == "") {  		fields_out += "returns ( " + fields_name + " " + field_type;  	}  	else {  		fields_out += "'\n " + fields_name + " " + field_type;  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  						//активность  						if (fr [5].ToString ().Trim () == "1") {  							dll_command += "\n" + "INACTIVE";  						}  						else {  							dll_command += "\n" + "ACTIVE";  						}  						//теперь узнаем что за тип триггера  						switch (fr [3].ToString ().Trim ()) {  						case "1":  							dll_command += " before insert ";  							break;  						case "2":  							dll_command += " after insert ";  							break;  						case "3":  							dll_command += " before update ";  							break;  						case "4":  							dll_command += " after update ";  							break;  						case "5":  							dll_command += " before delete ";  							break;  						case "6":  							dll_command += " after delete ";  							break;  						case "17":  							dll_command += " before insert or update ";  							break;  						case "25":  							dll_command += " before insert or delete";  							break;  						case "113":  							dll_command += " before insert or update or delete ";  							break;  						case "27":  							dll_command += " before update or delete ";  							break;  						case "18":  							dll_command += " after insert or update ";  							break;  						case "26":  							dll_command += " after insert or delete";  							break;  						case "114":  							dll_command += " after insert or update or delete ";  							break;  						case "28":  							dll_command += " after update or delete ";  							break;  						}  						//позиция триггера  						dll_command += " position " + fr [2].ToString ().Trim ();  						dll_command += "\nAS\nBEGIN\n\nEND";  						com_triggers_prototype.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("TRIGGERS PROTOTYPE");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  						//активность  						if (fr [5].ToString ().Trim () == "1") {  							dll_command += "\n" + "INACTIVE";  						}  						else {  							dll_command += "\n" + "ACTIVE";  						}  						//теперь узнаем что за тип триггера  						switch (fr [3].ToString ().Trim ()) {  						case "1":  							dll_command += " before insert ";  							break;  						case "2":  							dll_command += " after insert ";  							break;  						case "3":  							dll_command += " before update ";  							break;  						case "4":  							dll_command += " after update ";  							break;  						case "5":  							dll_command += " before delete ";  							break;  						case "6":  							dll_command += " after delete ";  							break;  						case "17":  							dll_command += " before insert or update ";  							break;  						case "25":  							dll_command += " before insert or delete";  							break;  						case "113":  							dll_command += " before insert or update or delete ";  							break;  						case "27":  							dll_command += " before update or delete ";  							break;  						case "18":  							dll_command += " after insert or update ";  							break;  						case "26":  							dll_command += " after insert or delete";  							break;  						case "114":  							dll_command += " after insert or update or delete ";  							break;  						case "28":  							dll_command += " after update or delete ";  							break;  						}  						//позиция триггера  						dll_command += " position " + fr [2].ToString ().Trim ();  						dll_command += "\nAS\nBEGIN\n\nEND";  						com_triggers_prototype.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("TRIGGERS PROTOTYPE");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  						//активность  						if (fr [5].ToString ().Trim () == "1") {  							dll_command += "\n" + "INACTIVE";  						}  						else {  							dll_command += "\n" + "ACTIVE";  						}  						//теперь узнаем что за тип триггера  						switch (fr [3].ToString ().Trim ()) {  						case "1":  							dll_command += " before insert ";  							break;  						case "2":  							dll_command += " after insert ";  							break;  						case "3":  							dll_command += " before update ";  							break;  						case "4":  							dll_command += " after update ";  							break;  						case "5":  							dll_command += " before delete ";  							break;  						case "6":  							dll_command += " after delete ";  							break;  						case "17":  							dll_command += " before insert or update ";  							break;  						case "25":  							dll_command += " before insert or delete";  							break;  						case "113":  							dll_command += " before insert or update or delete ";  							break;  						case "27":  							dll_command += " before update or delete ";  							break;  						case "18":  							dll_command += " after insert or update ";  							break;  						case "26":  							dll_command += " after insert or delete";  							break;  						case "114":  							dll_command += " after insert or update or delete ";  							break;  						case "28":  							dll_command += " after update or delete ";  							break;  						}  						//позиция триггера  						dll_command += " position " + fr [2].ToString ().Trim ();  						dll_command += "\nAS\nBEGIN\n\nEND";  						com_triggers_prototype.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("TRIGGERS PROTOTYPE");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  					//активность  					if (fr [5].ToString ().Trim () == "1") {  						dll_command += "\n" + "INACTIVE";  					}  					else {  						dll_command += "\n" + "ACTIVE";  					}  					//теперь узнаем что за тип триггера  					switch (fr [3].ToString ().Trim ()) {  					case "1":  						dll_command += " before insert ";  						break;  					case "2":  						dll_command += " after insert ";  						break;  					case "3":  						dll_command += " before update ";  						break;  					case "4":  						dll_command += " after update ";  						break;  					case "5":  						dll_command += " before delete ";  						break;  					case "6":  						dll_command += " after delete ";  						break;  					case "17":  						dll_command += " before insert or update ";  						break;  					case "25":  						dll_command += " before insert or delete";  						break;  					case "113":  						dll_command += " before insert or update or delete ";  						break;  					case "27":  						dll_command += " before update or delete ";  						break;  					case "18":  						dll_command += " after insert or update ";  						break;  					case "26":  						dll_command += " after insert or delete";  						break;  					case "114":  						dll_command += " after insert or update or delete ";  						break;  					case "28":  						dll_command += " after update or delete ";  						break;  					}  					//позиция триггера  					dll_command += " position " + fr [2].ToString ().Trim ();  					dll_command += "\nAS\nBEGIN\n\nEND";  					com_triggers_prototype.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("TRIGGERS PROTOTYPE");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  					//активность  					if (fr [5].ToString ().Trim () == "1") {  						dll_command += "\n" + "INACTIVE";  					}  					else {  						dll_command += "\n" + "ACTIVE";  					}  					//теперь узнаем что за тип триггера  					switch (fr [3].ToString ().Trim ()) {  					case "1":  						dll_command += " before insert ";  						break;  					case "2":  						dll_command += " after insert ";  						break;  					case "3":  						dll_command += " before update ";  						break;  					case "4":  						dll_command += " after update ";  						break;  					case "5":  						dll_command += " before delete ";  						break;  					case "6":  						dll_command += " after delete ";  						break;  					case "17":  						dll_command += " before insert or update ";  						break;  					case "25":  						dll_command += " before insert or delete";  						break;  					case "113":  						dll_command += " before insert or update or delete ";  						break;  					case "27":  						dll_command += " before update or delete ";  						break;  					case "18":  						dll_command += " after insert or update ";  						break;  					case "26":  						dll_command += " after insert or delete";  						break;  					case "114":  						dll_command += " after insert or update or delete ";  						break;  					case "28":  						dll_command += " after update or delete ";  						break;  					}  					//позиция триггера  					dll_command += " position " + fr [2].ToString ().Trim ();  					dll_command += "\nAS\nBEGIN\n\nEND";  					com_triggers_prototype.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("TRIGGERS PROTOTYPE");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  					//активность  					if (fr [5].ToString ().Trim () == "1") {  						dll_command += "\n" + "INACTIVE";  					}  					else {  						dll_command += "\n" + "ACTIVE";  					}  					//теперь узнаем что за тип триггера  					switch (fr [3].ToString ().Trim ()) {  					case "1":  						dll_command += " before insert ";  						break;  					case "2":  						dll_command += " after insert ";  						break;  					case "3":  						dll_command += " before update ";  						break;  					case "4":  						dll_command += " after update ";  						break;  					case "5":  						dll_command += " before delete ";  						break;  					case "6":  						dll_command += " after delete ";  						break;  					case "17":  						dll_command += " before insert or update ";  						break;  					case "25":  						dll_command += " before insert or delete";  						break;  					case "113":  						dll_command += " before insert or update or delete ";  						break;  					case "27":  						dll_command += " before update or delete ";  						break;  					case "18":  						dll_command += " after insert or update ";  						break;  					case "26":  						dll_command += " after insert or delete";  						break;  					case "114":  						dll_command += " after insert or update or delete ";  						break;  					case "28":  						dll_command += " after update or delete ";  						break;  					}  					//позиция триггера  					dll_command += " position " + fr [2].ToString ().Trim ();  					dll_command += "\nAS\nBEGIN\n\nEND";  					com_triggers_prototype.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("TRIGGERS PROTOTYPE");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  				//активность  				if (fr [5].ToString ().Trim () == "1") {  					dll_command += "\n" + "INACTIVE";  				}  				else {  					dll_command += "\n" + "ACTIVE";  				}  				//теперь узнаем что за тип триггера  				switch (fr [3].ToString ().Trim ()) {  				case "1":  					dll_command += " before insert ";  					break;  				case "2":  					dll_command += " after insert ";  					break;  				case "3":  					dll_command += " before update ";  					break;  				case "4":  					dll_command += " after update ";  					break;  				case "5":  					dll_command += " before delete ";  					break;  				case "6":  					dll_command += " after delete ";  					break;  				case "17":  					dll_command += " before insert or update ";  					break;  				case "25":  					dll_command += " before insert or delete";  					break;  				case "113":  					dll_command += " before insert or update or delete ";  					break;  				case "27":  					dll_command += " before update or delete ";  					break;  				case "18":  					dll_command += " after insert or update ";  					break;  				case "26":  					dll_command += " after insert or delete";  					break;  				case "114":  					dll_command += " after insert or update or delete ";  					break;  				case "28":  					dll_command += " after update or delete ";  					break;  				}  				//позиция триггера  				dll_command += " position " + fr [2].ToString ().Trim ();  				dll_command += "\nAS\nBEGIN\n\nEND";  				com_triggers_prototype.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  				//активность  				if (fr [5].ToString ().Trim () == "1") {  					dll_command += "\n" + "INACTIVE";  				}  				else {  					dll_command += "\n" + "ACTIVE";  				}  				//теперь узнаем что за тип триггера  				switch (fr [3].ToString ().Trim ()) {  				case "1":  					dll_command += " before insert ";  					break;  				case "2":  					dll_command += " after insert ";  					break;  				case "3":  					dll_command += " before update ";  					break;  				case "4":  					dll_command += " after update ";  					break;  				case "5":  					dll_command += " before delete ";  					break;  				case "6":  					dll_command += " after delete ";  					break;  				case "17":  					dll_command += " before insert or update ";  					break;  				case "25":  					dll_command += " before insert or delete";  					break;  				case "113":  					dll_command += " before insert or update or delete ";  					break;  				case "27":  					dll_command += " before update or delete ";  					break;  				case "18":  					dll_command += " after insert or update ";  					break;  				case "26":  					dll_command += " after insert or delete";  					break;  				case "114":  					dll_command += " after insert or update or delete ";  					break;  				case "28":  					dll_command += " after update or delete ";  					break;  				}  				//позиция триггера  				dll_command += " position " + fr [2].ToString ().Trim ();  				dll_command += "\nAS\nBEGIN\n\nEND";  				com_triggers_prototype.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  				//активность  				if (fr [5].ToString ().Trim () == "1") {  					dll_command += "\n" + "INACTIVE";  				}  				else {  					dll_command += "\n" + "ACTIVE";  				}  				//теперь узнаем что за тип триггера  				switch (fr [3].ToString ().Trim ()) {  				case "1":  					dll_command += " before insert ";  					break;  				case "2":  					dll_command += " after insert ";  					break;  				case "3":  					dll_command += " before update ";  					break;  				case "4":  					dll_command += " after update ";  					break;  				case "5":  					dll_command += " before delete ";  					break;  				case "6":  					dll_command += " after delete ";  					break;  				case "17":  					dll_command += " before insert or update ";  					break;  				case "25":  					dll_command += " before insert or delete";  					break;  				case "113":  					dll_command += " before insert or update or delete ";  					break;  				case "27":  					dll_command += " before update or delete ";  					break;  				case "18":  					dll_command += " after insert or update ";  					break;  				case "26":  					dll_command += " after insert or delete";  					break;  				case "114":  					dll_command += " after insert or update or delete ";  					break;  				case "28":  					dll_command += " after update or delete ";  					break;  				}  				//позиция триггера  				dll_command += " position " + fr [2].ToString ().Trim ();  				dll_command += "\nAS\nBEGIN\n\nEND";  				com_triggers_prototype.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  			//активность  			if (fr [5].ToString ().Trim () == "1") {  				dll_command += "\n" + "INACTIVE";  			}  			else {  				dll_command += "\n" + "ACTIVE";  			}  			//теперь узнаем что за тип триггера  			switch (fr [3].ToString ().Trim ()) {  			case "1":  				dll_command += " before insert ";  				break;  			case "2":  				dll_command += " after insert ";  				break;  			case "3":  				dll_command += " before update ";  				break;  			case "4":  				dll_command += " after update ";  				break;  			case "5":  				dll_command += " before delete ";  				break;  			case "6":  				dll_command += " after delete ";  				break;  			case "17":  				dll_command += " before insert or update ";  				break;  			case "25":  				dll_command += " before insert or delete";  				break;  			case "113":  				dll_command += " before insert or update or delete ";  				break;  			case "27":  				dll_command += " before update or delete ";  				break;  			case "18":  				dll_command += " after insert or update ";  				break;  			case "26":  				dll_command += " after insert or delete";  				break;  			case "114":  				dll_command += " after insert or update or delete ";  				break;  			case "28":  				dll_command += " after update or delete ";  				break;  			}  			//позиция триггера  			dll_command += " position " + fr [2].ToString ().Trim ();  			dll_command += "\nAS\nBEGIN\n\nEND";  			com_triggers_prototype.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  			//активность  			if (fr [5].ToString ().Trim () == "1") {  				dll_command += "\n" + "INACTIVE";  			}  			else {  				dll_command += "\n" + "ACTIVE";  			}  			//теперь узнаем что за тип триггера  			switch (fr [3].ToString ().Trim ()) {  			case "1":  				dll_command += " before insert ";  				break;  			case "2":  				dll_command += " after insert ";  				break;  			case "3":  				dll_command += " before update ";  				break;  			case "4":  				dll_command += " after update ";  				break;  			case "5":  				dll_command += " before delete ";  				break;  			case "6":  				dll_command += " after delete ";  				break;  			case "17":  				dll_command += " before insert or update ";  				break;  			case "25":  				dll_command += " before insert or delete";  				break;  			case "113":  				dll_command += " before insert or update or delete ";  				break;  			case "27":  				dll_command += " before update or delete ";  				break;  			case "18":  				dll_command += " after insert or update ";  				break;  			case "26":  				dll_command += " after insert or delete";  				break;  			case "114":  				dll_command += " after insert or update or delete ";  				break;  			case "28":  				dll_command += " after update or delete ";  				break;  			}  			//позиция триггера  			dll_command += " position " + fr [2].ToString ().Trim ();  			dll_command += "\nAS\nBEGIN\n\nEND";  			com_triggers_prototype.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  			//активность  			if (fr [5].ToString ().Trim () == "1") {  				dll_command += "\n" + "INACTIVE";  			}  			else {  				dll_command += "\n" + "ACTIVE";  			}  			//теперь узнаем что за тип триггера  			switch (fr [3].ToString ().Trim ()) {  			case "1":  				dll_command += " before insert ";  				break;  			case "2":  				dll_command += " after insert ";  				break;  			case "3":  				dll_command += " before update ";  				break;  			case "4":  				dll_command += " after update ";  				break;  			case "5":  				dll_command += " before delete ";  				break;  			case "6":  				dll_command += " after delete ";  				break;  			case "17":  				dll_command += " before insert or update ";  				break;  			case "25":  				dll_command += " before insert or delete";  				break;  			case "113":  				dll_command += " before insert or update or delete ";  				break;  			case "27":  				dll_command += " before update or delete ";  				break;  			case "18":  				dll_command += " after insert or update ";  				break;  			case "26":  				dll_command += " after insert or delete";  				break;  			case "114":  				dll_command += " after insert or update or delete ";  				break;  			case "28":  				dll_command += " after update or delete ";  				break;  			}  			//позиция триггера  			dll_command += " position " + fr [2].ToString ().Trim ();  			dll_command += "\nAS\nBEGIN\n\nEND";  			com_triggers_prototype.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  		//активность  		if (fr [5].ToString ().Trim () == "1") {  			dll_command += "\n" + "INACTIVE";  		}  		else {  			dll_command += "\n" + "ACTIVE";  		}  		//теперь узнаем что за тип триггера  		switch (fr [3].ToString ().Trim ()) {  		case "1":  			dll_command += " before insert ";  			break;  		case "2":  			dll_command += " after insert ";  			break;  		case "3":  			dll_command += " before update ";  			break;  		case "4":  			dll_command += " after update ";  			break;  		case "5":  			dll_command += " before delete ";  			break;  		case "6":  			dll_command += " after delete ";  			break;  		case "17":  			dll_command += " before insert or update ";  			break;  		case "25":  			dll_command += " before insert or delete";  			break;  		case "113":  			dll_command += " before insert or update or delete ";  			break;  		case "27":  			dll_command += " before update or delete ";  			break;  		case "18":  			dll_command += " after insert or update ";  			break;  		case "26":  			dll_command += " after insert or delete";  			break;  		case "114":  			dll_command += " after insert or update or delete ";  			break;  		case "28":  			dll_command += " after update or delete ";  			break;  		}  		//позиция триггера  		dll_command += " position " + fr [2].ToString ().Trim ();  		dll_command += "\nAS\nBEGIN\n\nEND";  		com_triggers_prototype.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  		//активность  		if (fr [5].ToString ().Trim () == "1") {  			dll_command += "\n" + "INACTIVE";  		}  		else {  			dll_command += "\n" + "ACTIVE";  		}  		//теперь узнаем что за тип триггера  		switch (fr [3].ToString ().Trim ()) {  		case "1":  			dll_command += " before insert ";  			break;  		case "2":  			dll_command += " after insert ";  			break;  		case "3":  			dll_command += " before update ";  			break;  		case "4":  			dll_command += " after update ";  			break;  		case "5":  			dll_command += " before delete ";  			break;  		case "6":  			dll_command += " after delete ";  			break;  		case "17":  			dll_command += " before insert or update ";  			break;  		case "25":  			dll_command += " before insert or delete";  			break;  		case "113":  			dll_command += " before insert or update or delete ";  			break;  		case "27":  			dll_command += " before update or delete ";  			break;  		case "18":  			dll_command += " after insert or update ";  			break;  		case "26":  			dll_command += " after insert or delete";  			break;  		case "114":  			dll_command += " after insert or update or delete ";  			break;  		case "28":  			dll_command += " after update or delete ";  			break;  		}  		//позиция триггера  		dll_command += " position " + fr [2].ToString ().Trim ();  		dll_command += "\nAS\nBEGIN\n\nEND";  		com_triggers_prototype.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  		//активность  		if (fr [5].ToString ().Trim () == "1") {  			dll_command += "\n" + "INACTIVE";  		}  		else {  			dll_command += "\n" + "ACTIVE";  		}  		//теперь узнаем что за тип триггера  		switch (fr [3].ToString ().Trim ()) {  		case "1":  			dll_command += " before insert ";  			break;  		case "2":  			dll_command += " after insert ";  			break;  		case "3":  			dll_command += " before update ";  			break;  		case "4":  			dll_command += " after update ";  			break;  		case "5":  			dll_command += " before delete ";  			break;  		case "6":  			dll_command += " after delete ";  			break;  		case "17":  			dll_command += " before insert or update ";  			break;  		case "25":  			dll_command += " before insert or delete";  			break;  		case "113":  			dll_command += " before insert or update or delete ";  			break;  		case "27":  			dll_command += " before update or delete ";  			break;  		case "18":  			dll_command += " after insert or update ";  			break;  		case "26":  			dll_command += " after insert or delete";  			break;  		case "114":  			dll_command += " after insert or update or delete ";  			break;  		case "28":  			dll_command += " after update or delete ";  			break;  		}  		//позиция триггера  		dll_command += " position " + fr [2].ToString ().Trim ();  		dll_command += "\nAS\nBEGIN\n\nEND";  		com_triggers_prototype.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  	//активность  	if (fr [5].ToString ().Trim () == "1") {  		dll_command += "\n" + "INACTIVE";  	}  	else {  		dll_command += "\n" + "ACTIVE";  	}  	//теперь узнаем что за тип триггера  	switch (fr [3].ToString ().Trim ()) {  	case "1":  		dll_command += " before insert ";  		break;  	case "2":  		dll_command += " after insert ";  		break;  	case "3":  		dll_command += " before update ";  		break;  	case "4":  		dll_command += " after update ";  		break;  	case "5":  		dll_command += " before delete ";  		break;  	case "6":  		dll_command += " after delete ";  		break;  	case "17":  		dll_command += " before insert or update ";  		break;  	case "25":  		dll_command += " before insert or delete";  		break;  	case "113":  		dll_command += " before insert or update or delete ";  		break;  	case "27":  		dll_command += " before update or delete ";  		break;  	case "18":  		dll_command += " after insert or update ";  		break;  	case "26":  		dll_command += " after insert or delete";  		break;  	case "114":  		dll_command += " after insert or update or delete ";  		break;  	case "28":  		dll_command += " after update or delete ";  		break;  	}  	//позиция триггера  	dll_command += " position " + fr [2].ToString ().Trim ();  	dll_command += "\nAS\nBEGIN\n\nEND";  	com_triggers_prototype.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  	//активность  	if (fr [5].ToString ().Trim () == "1") {  		dll_command += "\n" + "INACTIVE";  	}  	else {  		dll_command += "\n" + "ACTIVE";  	}  	//теперь узнаем что за тип триггера  	switch (fr [3].ToString ().Trim ()) {  	case "1":  		dll_command += " before insert ";  		break;  	case "2":  		dll_command += " after insert ";  		break;  	case "3":  		dll_command += " before update ";  		break;  	case "4":  		dll_command += " after update ";  		break;  	case "5":  		dll_command += " before delete ";  		break;  	case "6":  		dll_command += " after delete ";  		break;  	case "17":  		dll_command += " before insert or update ";  		break;  	case "25":  		dll_command += " before insert or delete";  		break;  	case "113":  		dll_command += " before insert or update or delete ";  		break;  	case "27":  		dll_command += " before update or delete ";  		break;  	case "18":  		dll_command += " after insert or update ";  		break;  	case "26":  		dll_command += " after insert or delete";  		break;  	case "114":  		dll_command += " after insert or update or delete ";  		break;  	case "28":  		dll_command += " after update or delete ";  		break;  	}  	//позиция триггера  	dll_command += " position " + fr [2].ToString ().Trim ();  	dll_command += "\nAS\nBEGIN\n\nEND";  	com_triggers_prototype.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  	//активность  	if (fr [5].ToString ().Trim () == "1") {  		dll_command += "\n" + "INACTIVE";  	}  	else {  		dll_command += "\n" + "ACTIVE";  	}  	//теперь узнаем что за тип триггера  	switch (fr [3].ToString ().Trim ()) {  	case "1":  		dll_command += " before insert ";  		break;  	case "2":  		dll_command += " after insert ";  		break;  	case "3":  		dll_command += " before update ";  		break;  	case "4":  		dll_command += " after update ";  		break;  	case "5":  		dll_command += " before delete ";  		break;  	case "6":  		dll_command += " after delete ";  		break;  	case "17":  		dll_command += " before insert or update ";  		break;  	case "25":  		dll_command += " before insert or delete";  		break;  	case "113":  		dll_command += " before insert or update or delete ";  		break;  	case "27":  		dll_command += " before update or delete ";  		break;  	case "18":  		dll_command += " after insert or update ";  		break;  	case "26":  		dll_command += " after insert or delete";  		break;  	case "114":  		dll_command += " after insert or update or delete ";  		break;  	case "28":  		dll_command += " after update or delete ";  		break;  	}  	//позиция триггера  	dll_command += " position " + fr [2].ToString ().Trim ();  	dll_command += "\nAS\nBEGIN\n\nEND";  	com_triggers_prototype.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: if (fr [5].ToString ().Trim () == "1") {  	dll_command += "\n" + "INACTIVE";  }  else {  	dll_command += "\n" + "ACTIVE";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: switch (fr [3].ToString ().Trim ()) {  case "1":  	dll_command += " before insert ";  	break;  case "2":  	dll_command += " after insert ";  	break;  case "3":  	dll_command += " before update ";  	break;  case "4":  	dll_command += " after update ";  	break;  case "5":  	dll_command += " before delete ";  	break;  case "6":  	dll_command += " after delete ";  	break;  case "17":  	dll_command += " before insert or update ";  	break;  case "25":  	dll_command += " before insert or delete";  	break;  case "113":  	dll_command += " before insert or update or delete ";  	break;  case "27":  	dll_command += " before update or delete ";  	break;  case "18":  	dll_command += " after insert or update ";  	break;  case "26":  	dll_command += " after insert or delete";  	break;  case "114":  	dll_command += " after insert or update or delete ";  	break;  case "28":  	dll_command += " after update or delete ";  	break;  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following statement contains a magic number: dll_command += " position " + fr [2].ToString ().Trim ();  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					string dll_command = "";  					while (fr.Read ()) {  						dll_command = fr [0].ToString ();  						if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  							dll_command += "\"" + fr [1].ToString () + "\"";  						}  						else {  							dll_command += fr [1].ToString ();  						}  						dll_command += fr [2].ToString ();  						if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  							dll_command += "\"" + fr [3].ToString () + "\"";  						}  						else {  							dll_command += fr [3].ToString ();  						}  						dll_command += fr [4].ToString ();  						com_grants.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					string dll_command = "";  					while (fr.Read ()) {  						dll_command = fr [0].ToString ();  						if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  							dll_command += "\"" + fr [1].ToString () + "\"";  						}  						else {  							dll_command += fr [1].ToString ();  						}  						dll_command += fr [2].ToString ();  						if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  							dll_command += "\"" + fr [3].ToString () + "\"";  						}  						else {  							dll_command += fr [3].ToString ();  						}  						dll_command += fr [4].ToString ();  						com_grants.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					string dll_command = "";  					while (fr.Read ()) {  						dll_command = fr [0].ToString ();  						if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  							dll_command += "\"" + fr [1].ToString () + "\"";  						}  						else {  							dll_command += fr [1].ToString ();  						}  						dll_command += fr [2].ToString ();  						if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  							dll_command += "\"" + fr [3].ToString () + "\"";  						}  						else {  							dll_command += fr [3].ToString ();  						}  						dll_command += fr [4].ToString ();  						com_grants.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					string dll_command = "";  					while (fr.Read ()) {  						dll_command = fr [0].ToString ();  						if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  							dll_command += "\"" + fr [1].ToString () + "\"";  						}  						else {  							dll_command += fr [1].ToString ();  						}  						dll_command += fr [2].ToString ();  						if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  							dll_command += "\"" + fr [3].ToString () + "\"";  						}  						else {  							dll_command += fr [3].ToString ();  						}  						dll_command += fr [4].ToString ();  						com_grants.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					string dll_command = "";  					while (fr.Read ()) {  						dll_command = fr [0].ToString ();  						if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  							dll_command += "\"" + fr [1].ToString () + "\"";  						}  						else {  							dll_command += fr [1].ToString ();  						}  						dll_command += fr [2].ToString ();  						if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  							dll_command += "\"" + fr [3].ToString () + "\"";  						}  						else {  							dll_command += fr [3].ToString ();  						}  						dll_command += fr [4].ToString ();  						com_grants.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					string dll_command = "";  					while (fr.Read ()) {  						dll_command = fr [0].ToString ();  						if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  							dll_command += "\"" + fr [1].ToString () + "\"";  						}  						else {  							dll_command += fr [1].ToString ();  						}  						dll_command += fr [2].ToString ();  						if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  							dll_command += "\"" + fr [3].ToString () + "\"";  						}  						else {  							dll_command += fr [3].ToString ();  						}  						dll_command += fr [4].ToString ();  						com_grants.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				string dll_command = "";  				while (fr.Read ()) {  					dll_command = fr [0].ToString ();  					if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  						dll_command += "\"" + fr [1].ToString () + "\"";  					}  					else {  						dll_command += fr [1].ToString ();  					}  					dll_command += fr [2].ToString ();  					if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  						dll_command += "\"" + fr [3].ToString () + "\"";  					}  					else {  						dll_command += fr [3].ToString ();  					}  					dll_command += fr [4].ToString ();  					com_grants.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				string dll_command = "";  				while (fr.Read ()) {  					dll_command = fr [0].ToString ();  					if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  						dll_command += "\"" + fr [1].ToString () + "\"";  					}  					else {  						dll_command += fr [1].ToString ();  					}  					dll_command += fr [2].ToString ();  					if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  						dll_command += "\"" + fr [3].ToString () + "\"";  					}  					else {  						dll_command += fr [3].ToString ();  					}  					dll_command += fr [4].ToString ();  					com_grants.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				string dll_command = "";  				while (fr.Read ()) {  					dll_command = fr [0].ToString ();  					if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  						dll_command += "\"" + fr [1].ToString () + "\"";  					}  					else {  						dll_command += fr [1].ToString ();  					}  					dll_command += fr [2].ToString ();  					if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  						dll_command += "\"" + fr [3].ToString () + "\"";  					}  					else {  						dll_command += fr [3].ToString ();  					}  					dll_command += fr [4].ToString ();  					com_grants.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				string dll_command = "";  				while (fr.Read ()) {  					dll_command = fr [0].ToString ();  					if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  						dll_command += "\"" + fr [1].ToString () + "\"";  					}  					else {  						dll_command += fr [1].ToString ();  					}  					dll_command += fr [2].ToString ();  					if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  						dll_command += "\"" + fr [3].ToString () + "\"";  					}  					else {  						dll_command += fr [3].ToString ();  					}  					dll_command += fr [4].ToString ();  					com_grants.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				string dll_command = "";  				while (fr.Read ()) {  					dll_command = fr [0].ToString ();  					if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  						dll_command += "\"" + fr [1].ToString () + "\"";  					}  					else {  						dll_command += fr [1].ToString ();  					}  					dll_command += fr [2].ToString ();  					if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  						dll_command += "\"" + fr [3].ToString () + "\"";  					}  					else {  						dll_command += fr [3].ToString ();  					}  					dll_command += fr [4].ToString ();  					com_grants.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				string dll_command = "";  				while (fr.Read ()) {  					dll_command = fr [0].ToString ();  					if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  						dll_command += "\"" + fr [1].ToString () + "\"";  					}  					else {  						dll_command += fr [1].ToString ();  					}  					dll_command += fr [2].ToString ();  					if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  						dll_command += "\"" + fr [3].ToString () + "\"";  					}  					else {  						dll_command += fr [3].ToString ();  					}  					dll_command += fr [4].ToString ();  					com_grants.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			string dll_command = "";  			while (fr.Read ()) {  				dll_command = fr [0].ToString ();  				if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  					dll_command += "\"" + fr [1].ToString () + "\"";  				}  				else {  					dll_command += fr [1].ToString ();  				}  				dll_command += fr [2].ToString ();  				if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  					dll_command += "\"" + fr [3].ToString () + "\"";  				}  				else {  					dll_command += fr [3].ToString ();  				}  				dll_command += fr [4].ToString ();  				com_grants.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			string dll_command = "";  			while (fr.Read ()) {  				dll_command = fr [0].ToString ();  				if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  					dll_command += "\"" + fr [1].ToString () + "\"";  				}  				else {  					dll_command += fr [1].ToString ();  				}  				dll_command += fr [2].ToString ();  				if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  					dll_command += "\"" + fr [3].ToString () + "\"";  				}  				else {  					dll_command += fr [3].ToString ();  				}  				dll_command += fr [4].ToString ();  				com_grants.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			string dll_command = "";  			while (fr.Read ()) {  				dll_command = fr [0].ToString ();  				if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  					dll_command += "\"" + fr [1].ToString () + "\"";  				}  				else {  					dll_command += fr [1].ToString ();  				}  				dll_command += fr [2].ToString ();  				if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  					dll_command += "\"" + fr [3].ToString () + "\"";  				}  				else {  					dll_command += fr [3].ToString ();  				}  				dll_command += fr [4].ToString ();  				com_grants.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			string dll_command = "";  			while (fr.Read ()) {  				dll_command = fr [0].ToString ();  				if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  					dll_command += "\"" + fr [1].ToString () + "\"";  				}  				else {  					dll_command += fr [1].ToString ();  				}  				dll_command += fr [2].ToString ();  				if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  					dll_command += "\"" + fr [3].ToString () + "\"";  				}  				else {  					dll_command += fr [3].ToString ();  				}  				dll_command += fr [4].ToString ();  				com_grants.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			string dll_command = "";  			while (fr.Read ()) {  				dll_command = fr [0].ToString ();  				if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  					dll_command += "\"" + fr [1].ToString () + "\"";  				}  				else {  					dll_command += fr [1].ToString ();  				}  				dll_command += fr [2].ToString ();  				if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  					dll_command += "\"" + fr [3].ToString () + "\"";  				}  				else {  					dll_command += fr [3].ToString ();  				}  				dll_command += fr [4].ToString ();  				com_grants.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			string dll_command = "";  			while (fr.Read ()) {  				dll_command = fr [0].ToString ();  				if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  					dll_command += "\"" + fr [1].ToString () + "\"";  				}  				else {  					dll_command += fr [1].ToString ();  				}  				dll_command += fr [2].ToString ();  				if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  					dll_command += "\"" + fr [3].ToString () + "\"";  				}  				else {  					dll_command += fr [3].ToString ();  				}  				dll_command += fr [4].ToString ();  				com_grants.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		string dll_command = "";  		while (fr.Read ()) {  			dll_command = fr [0].ToString ();  			if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  				dll_command += "\"" + fr [1].ToString () + "\"";  			}  			else {  				dll_command += fr [1].ToString ();  			}  			dll_command += fr [2].ToString ();  			if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  				dll_command += "\"" + fr [3].ToString () + "\"";  			}  			else {  				dll_command += fr [3].ToString ();  			}  			dll_command += fr [4].ToString ();  			com_grants.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		string dll_command = "";  		while (fr.Read ()) {  			dll_command = fr [0].ToString ();  			if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  				dll_command += "\"" + fr [1].ToString () + "\"";  			}  			else {  				dll_command += fr [1].ToString ();  			}  			dll_command += fr [2].ToString ();  			if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  				dll_command += "\"" + fr [3].ToString () + "\"";  			}  			else {  				dll_command += fr [3].ToString ();  			}  			dll_command += fr [4].ToString ();  			com_grants.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		string dll_command = "";  		while (fr.Read ()) {  			dll_command = fr [0].ToString ();  			if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  				dll_command += "\"" + fr [1].ToString () + "\"";  			}  			else {  				dll_command += fr [1].ToString ();  			}  			dll_command += fr [2].ToString ();  			if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  				dll_command += "\"" + fr [3].ToString () + "\"";  			}  			else {  				dll_command += fr [3].ToString ();  			}  			dll_command += fr [4].ToString ();  			com_grants.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		string dll_command = "";  		while (fr.Read ()) {  			dll_command = fr [0].ToString ();  			if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  				dll_command += "\"" + fr [1].ToString () + "\"";  			}  			else {  				dll_command += fr [1].ToString ();  			}  			dll_command += fr [2].ToString ();  			if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  				dll_command += "\"" + fr [3].ToString () + "\"";  			}  			else {  				dll_command += fr [3].ToString ();  			}  			dll_command += fr [4].ToString ();  			com_grants.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		string dll_command = "";  		while (fr.Read ()) {  			dll_command = fr [0].ToString ();  			if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  				dll_command += "\"" + fr [1].ToString () + "\"";  			}  			else {  				dll_command += fr [1].ToString ();  			}  			dll_command += fr [2].ToString ();  			if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  				dll_command += "\"" + fr [3].ToString () + "\"";  			}  			else {  				dll_command += fr [3].ToString ();  			}  			dll_command += fr [4].ToString ();  			com_grants.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_users_grant' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		string dll_command = "";  		while (fr.Read ()) {  			dll_command = fr [0].ToString ();  			if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  				dll_command += "\"" + fr [1].ToString () + "\"";  			}  			else {  				dll_command += fr [1].ToString ();  			}  			dll_command += fr [2].ToString ();  			if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  				dll_command += "\"" + fr [3].ToString () + "\"";  			}  			else {  				dll_command += fr [3].ToString ();  			}  			dll_command += fr [4].ToString ();  			com_grants.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	string dll_command = "";  	while (fr.Read ()) {  		dll_command = fr [0].ToString ();  		if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  			dll_command += "\"" + fr [1].ToString () + "\"";  		}  		else {  			dll_command += fr [1].ToString ();  		}  		dll_command += fr [2].ToString ();  		if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  			dll_command += "\"" + fr [3].ToString () + "\"";  		}  		else {  			dll_command += fr [3].ToString ();  		}  		dll_command += fr [4].ToString ();  		com_grants.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	string dll_command = "";  	while (fr.Read ()) {  		dll_command = fr [0].ToString ();  		if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  			dll_command += "\"" + fr [1].ToString () + "\"";  		}  		else {  			dll_command += fr [1].ToString ();  		}  		dll_command += fr [2].ToString ();  		if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  			dll_command += "\"" + fr [3].ToString () + "\"";  		}  		else {  			dll_command += fr [3].ToString ();  		}  		dll_command += fr [4].ToString ();  		com_grants.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	string dll_command = "";  	while (fr.Read ()) {  		dll_command = fr [0].ToString ();  		if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  			dll_command += "\"" + fr [1].ToString () + "\"";  		}  		else {  			dll_command += fr [1].ToString ();  		}  		dll_command += fr [2].ToString ();  		if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  			dll_command += "\"" + fr [3].ToString () + "\"";  		}  		else {  			dll_command += fr [3].ToString ();  		}  		dll_command += fr [4].ToString ();  		com_grants.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	string dll_command = "";  	while (fr.Read ()) {  		dll_command = fr [0].ToString ();  		if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  			dll_command += "\"" + fr [1].ToString () + "\"";  		}  		else {  			dll_command += fr [1].ToString ();  		}  		dll_command += fr [2].ToString ();  		if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  			dll_command += "\"" + fr [3].ToString () + "\"";  		}  		else {  			dll_command += fr [3].ToString ();  		}  		dll_command += fr [4].ToString ();  		com_grants.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	string dll_command = "";  	while (fr.Read ()) {  		dll_command = fr [0].ToString ();  		if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  			dll_command += "\"" + fr [1].ToString () + "\"";  		}  		else {  			dll_command += fr [1].ToString ();  		}  		dll_command += fr [2].ToString ();  		if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  			dll_command += "\"" + fr [3].ToString () + "\"";  		}  		else {  			dll_command += fr [3].ToString ();  		}  		dll_command += fr [4].ToString ();  		com_grants.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	string dll_command = "";  	while (fr.Read ()) {  		dll_command = fr [0].ToString ();  		if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  			dll_command += "\"" + fr [1].ToString () + "\"";  		}  		else {  			dll_command += fr [1].ToString ();  		}  		dll_command += fr [2].ToString ();  		if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  			dll_command += "\"" + fr [3].ToString () + "\"";  		}  		else {  			dll_command += fr [3].ToString ();  		}  		dll_command += fr [4].ToString ();  		com_grants.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: while (fr.Read ()) {  	dll_command = fr [0].ToString ();  	if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  		dll_command += "\"" + fr [1].ToString () + "\"";  	}  	else {  		dll_command += fr [1].ToString ();  	}  	dll_command += fr [2].ToString ();  	if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  		dll_command += "\"" + fr [3].ToString () + "\"";  	}  	else {  		dll_command += fr [3].ToString ();  	}  	dll_command += fr [4].ToString ();  	com_grants.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: while (fr.Read ()) {  	dll_command = fr [0].ToString ();  	if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  		dll_command += "\"" + fr [1].ToString () + "\"";  	}  	else {  		dll_command += fr [1].ToString ();  	}  	dll_command += fr [2].ToString ();  	if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  		dll_command += "\"" + fr [3].ToString () + "\"";  	}  	else {  		dll_command += fr [3].ToString ();  	}  	dll_command += fr [4].ToString ();  	com_grants.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: while (fr.Read ()) {  	dll_command = fr [0].ToString ();  	if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  		dll_command += "\"" + fr [1].ToString () + "\"";  	}  	else {  		dll_command += fr [1].ToString ();  	}  	dll_command += fr [2].ToString ();  	if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  		dll_command += "\"" + fr [3].ToString () + "\"";  	}  	else {  		dll_command += fr [3].ToString ();  	}  	dll_command += fr [4].ToString ();  	com_grants.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: while (fr.Read ()) {  	dll_command = fr [0].ToString ();  	if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  		dll_command += "\"" + fr [1].ToString () + "\"";  	}  	else {  		dll_command += fr [1].ToString ();  	}  	dll_command += fr [2].ToString ();  	if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  		dll_command += "\"" + fr [3].ToString () + "\"";  	}  	else {  		dll_command += fr [3].ToString ();  	}  	dll_command += fr [4].ToString ();  	com_grants.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: while (fr.Read ()) {  	dll_command = fr [0].ToString ();  	if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  		dll_command += "\"" + fr [1].ToString () + "\"";  	}  	else {  		dll_command += fr [1].ToString ();  	}  	dll_command += fr [2].ToString ();  	if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  		dll_command += "\"" + fr [3].ToString () + "\"";  	}  	else {  		dll_command += fr [3].ToString ();  	}  	dll_command += fr [4].ToString ();  	com_grants.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: while (fr.Read ()) {  	dll_command = fr [0].ToString ();  	if (is_reserv (fr [1].ToString ()) || !is_en_string (fr [1].ToString ())) {  		dll_command += "\"" + fr [1].ToString () + "\"";  	}  	else {  		dll_command += fr [1].ToString ();  	}  	dll_command += fr [2].ToString ();  	if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  		dll_command += "\"" + fr [3].ToString () + "\"";  	}  	else {  		dll_command += fr [3].ToString ();  	}  	dll_command += fr [4].ToString ();  	com_grants.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: dll_command += fr [2].ToString ();  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  	dll_command += "\"" + fr [3].ToString () + "\"";  }  else {  	dll_command += fr [3].ToString ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  	dll_command += "\"" + fr [3].ToString () + "\"";  }  else {  	dll_command += fr [3].ToString ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  	dll_command += "\"" + fr [3].ToString () + "\"";  }  else {  	dll_command += fr [3].ToString ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: if (is_reserv (fr [3].ToString ()) || !is_en_string (fr [3].ToString ())) {  	dll_command += "\"" + fr [3].ToString () + "\"";  }  else {  	dll_command += fr [3].ToString ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: dll_command += "\"" + fr [3].ToString () + "\"";  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: dll_command += fr [3].ToString ();  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_GRANTS,The following statement contains a magic number: dll_command += fr [4].ToString ();  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter procedure ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "\n";  						}  						//Список полей  						string fields_in = "";  						string fields_out = "";  						bool is_out = false;  						using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									//резервное?  									var fields_name = fr_a [0].ToString ().Trim ();  									if (is_reserv (fields_name)) {  										fields_name = "\"" + fields_name + "\"";  									}  									//Извлекаем тип данных  									string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  									if (fr_a [2].ToString () == "0") {  										//входной  										if (fields_in == "") {  											fields_in += "( " + fields_name + " " + field_type;  										}  										else {  											fields_in += "'\n " + fields_name + " " + field_type;  										}  									}  									else {  										//значит выходной  										if (!is_out) {  											//ставим флаг' что есть выходные параметры  											is_out = true;  										}  										if (fields_out == "") {  											fields_out += "returns ( " + fields_name + " " + field_type;  										}  										else {  											fields_out += "'\n " + fields_name + " " + field_type;  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						//теперь соединяем   						if (fields_in != "") {  							fields_in += "\n )";  						}  						if (fields_out != "") {  							fields_out += "\n )";  						}  						dll_command += fields_in + fields_out + "\n AS\n";  						//Добавляем содержимое  						try {  							using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  								fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_b.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  									while (fr_b.Read ()) {  										dll_command += fr_b.GetString (0);  										//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  									}  									fr_b.Dispose ();  								}  								fcon_b.Dispose ();  							}  						}  						catch (Exception ex) {  							MessageBox.Show (ex.Message);  						}  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						com_procedures_content.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter procedure ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "\n";  						}  						//Список полей  						string fields_in = "";  						string fields_out = "";  						bool is_out = false;  						using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									//резервное?  									var fields_name = fr_a [0].ToString ().Trim ();  									if (is_reserv (fields_name)) {  										fields_name = "\"" + fields_name + "\"";  									}  									//Извлекаем тип данных  									string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  									if (fr_a [2].ToString () == "0") {  										//входной  										if (fields_in == "") {  											fields_in += "( " + fields_name + " " + field_type;  										}  										else {  											fields_in += "'\n " + fields_name + " " + field_type;  										}  									}  									else {  										//значит выходной  										if (!is_out) {  											//ставим флаг' что есть выходные параметры  											is_out = true;  										}  										if (fields_out == "") {  											fields_out += "returns ( " + fields_name + " " + field_type;  										}  										else {  											fields_out += "'\n " + fields_name + " " + field_type;  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						//теперь соединяем   						if (fields_in != "") {  							fields_in += "\n )";  						}  						if (fields_out != "") {  							fields_out += "\n )";  						}  						dll_command += fields_in + fields_out + "\n AS\n";  						//Добавляем содержимое  						try {  							using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  								fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_b.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  									while (fr_b.Read ()) {  										dll_command += fr_b.GetString (0);  										//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  									}  									fr_b.Dispose ();  								}  								fcon_b.Dispose ();  							}  						}  						catch (Exception ex) {  							MessageBox.Show (ex.Message);  						}  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						com_procedures_content.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter procedure ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "\n";  						}  						//Список полей  						string fields_in = "";  						string fields_out = "";  						bool is_out = false;  						using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									//резервное?  									var fields_name = fr_a [0].ToString ().Trim ();  									if (is_reserv (fields_name)) {  										fields_name = "\"" + fields_name + "\"";  									}  									//Извлекаем тип данных  									string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  									if (fr_a [2].ToString () == "0") {  										//входной  										if (fields_in == "") {  											fields_in += "( " + fields_name + " " + field_type;  										}  										else {  											fields_in += "'\n " + fields_name + " " + field_type;  										}  									}  									else {  										//значит выходной  										if (!is_out) {  											//ставим флаг' что есть выходные параметры  											is_out = true;  										}  										if (fields_out == "") {  											fields_out += "returns ( " + fields_name + " " + field_type;  										}  										else {  											fields_out += "'\n " + fields_name + " " + field_type;  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						//теперь соединяем   						if (fields_in != "") {  							fields_in += "\n )";  						}  						if (fields_out != "") {  							fields_out += "\n )";  						}  						dll_command += fields_in + fields_out + "\n AS\n";  						//Добавляем содержимое  						try {  							using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  								fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_b.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  									while (fr_b.Read ()) {  										dll_command += fr_b.GetString (0);  										//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  									}  									fr_b.Dispose ();  								}  								fcon_b.Dispose ();  							}  						}  						catch (Exception ex) {  							MessageBox.Show (ex.Message);  						}  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						com_procedures_content.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter procedure ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "\n";  						}  						//Список полей  						string fields_in = "";  						string fields_out = "";  						bool is_out = false;  						using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									//резервное?  									var fields_name = fr_a [0].ToString ().Trim ();  									if (is_reserv (fields_name)) {  										fields_name = "\"" + fields_name + "\"";  									}  									//Извлекаем тип данных  									string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  									if (fr_a [2].ToString () == "0") {  										//входной  										if (fields_in == "") {  											fields_in += "( " + fields_name + " " + field_type;  										}  										else {  											fields_in += "'\n " + fields_name + " " + field_type;  										}  									}  									else {  										//значит выходной  										if (!is_out) {  											//ставим флаг' что есть выходные параметры  											is_out = true;  										}  										if (fields_out == "") {  											fields_out += "returns ( " + fields_name + " " + field_type;  										}  										else {  											fields_out += "'\n " + fields_name + " " + field_type;  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						//теперь соединяем   						if (fields_in != "") {  							fields_in += "\n )";  						}  						if (fields_out != "") {  							fields_out += "\n )";  						}  						dll_command += fields_in + fields_out + "\n AS\n";  						//Добавляем содержимое  						try {  							using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  								fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_b.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  									while (fr_b.Read ()) {  										dll_command += fr_b.GetString (0);  										//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  									}  									fr_b.Dispose ();  								}  								fcon_b.Dispose ();  							}  						}  						catch (Exception ex) {  							MessageBox.Show (ex.Message);  						}  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						com_procedures_content.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter procedure ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "\n";  						}  						//Список полей  						string fields_in = "";  						string fields_out = "";  						bool is_out = false;  						using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									//резервное?  									var fields_name = fr_a [0].ToString ().Trim ();  									if (is_reserv (fields_name)) {  										fields_name = "\"" + fields_name + "\"";  									}  									//Извлекаем тип данных  									string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  									if (fr_a [2].ToString () == "0") {  										//входной  										if (fields_in == "") {  											fields_in += "( " + fields_name + " " + field_type;  										}  										else {  											fields_in += "'\n " + fields_name + " " + field_type;  										}  									}  									else {  										//значит выходной  										if (!is_out) {  											//ставим флаг' что есть выходные параметры  											is_out = true;  										}  										if (fields_out == "") {  											fields_out += "returns ( " + fields_name + " " + field_type;  										}  										else {  											fields_out += "'\n " + fields_name + " " + field_type;  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						//теперь соединяем   						if (fields_in != "") {  							fields_in += "\n )";  						}  						if (fields_out != "") {  							fields_out += "\n )";  						}  						dll_command += fields_in + fields_out + "\n AS\n";  						//Добавляем содержимое  						try {  							using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  								fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_b.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  									while (fr_b.Read ()) {  										dll_command += fr_b.GetString (0);  										//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  									}  									fr_b.Dispose ();  								}  								fcon_b.Dispose ();  							}  						}  						catch (Exception ex) {  							MessageBox.Show (ex.Message);  						}  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						com_procedures_content.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter procedure ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "\n";  						}  						//Список полей  						string fields_in = "";  						string fields_out = "";  						bool is_out = false;  						using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									//резервное?  									var fields_name = fr_a [0].ToString ().Trim ();  									if (is_reserv (fields_name)) {  										fields_name = "\"" + fields_name + "\"";  									}  									//Извлекаем тип данных  									string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  									if (fr_a [2].ToString () == "0") {  										//входной  										if (fields_in == "") {  											fields_in += "( " + fields_name + " " + field_type;  										}  										else {  											fields_in += "'\n " + fields_name + " " + field_type;  										}  									}  									else {  										//значит выходной  										if (!is_out) {  											//ставим флаг' что есть выходные параметры  											is_out = true;  										}  										if (fields_out == "") {  											fields_out += "returns ( " + fields_name + " " + field_type;  										}  										else {  											fields_out += "'\n " + fields_name + " " + field_type;  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						//теперь соединяем   						if (fields_in != "") {  							fields_in += "\n )";  						}  						if (fields_out != "") {  							fields_out += "\n )";  						}  						dll_command += fields_in + fields_out + "\n AS\n";  						//Добавляем содержимое  						try {  							using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  								fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_b.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  									while (fr_b.Read ()) {  										dll_command += fr_b.GetString (0);  										//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  									}  									fr_b.Dispose ();  								}  								fcon_b.Dispose ();  							}  						}  						catch (Exception ex) {  							MessageBox.Show (ex.Message);  						}  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						com_procedures_content.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter procedure ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "\n";  						}  						//Список полей  						string fields_in = "";  						string fields_out = "";  						bool is_out = false;  						using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									//резервное?  									var fields_name = fr_a [0].ToString ().Trim ();  									if (is_reserv (fields_name)) {  										fields_name = "\"" + fields_name + "\"";  									}  									//Извлекаем тип данных  									string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  									if (fr_a [2].ToString () == "0") {  										//входной  										if (fields_in == "") {  											fields_in += "( " + fields_name + " " + field_type;  										}  										else {  											fields_in += "'\n " + fields_name + " " + field_type;  										}  									}  									else {  										//значит выходной  										if (!is_out) {  											//ставим флаг' что есть выходные параметры  											is_out = true;  										}  										if (fields_out == "") {  											fields_out += "returns ( " + fields_name + " " + field_type;  										}  										else {  											fields_out += "'\n " + fields_name + " " + field_type;  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						//теперь соединяем   						if (fields_in != "") {  							fields_in += "\n )";  						}  						if (fields_out != "") {  							fields_out += "\n )";  						}  						dll_command += fields_in + fields_out + "\n AS\n";  						//Добавляем содержимое  						try {  							using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  								fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_b.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  									while (fr_b.Read ()) {  										dll_command += fr_b.GetString (0);  										//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  									}  									fr_b.Dispose ();  								}  								fcon_b.Dispose ();  							}  						}  						catch (Exception ex) {  							MessageBox.Show (ex.Message);  						}  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						com_procedures_content.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter procedure ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "\n";  						}  						//Список полей  						string fields_in = "";  						string fields_out = "";  						bool is_out = false;  						using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									//резервное?  									var fields_name = fr_a [0].ToString ().Trim ();  									if (is_reserv (fields_name)) {  										fields_name = "\"" + fields_name + "\"";  									}  									//Извлекаем тип данных  									string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  									if (fr_a [2].ToString () == "0") {  										//входной  										if (fields_in == "") {  											fields_in += "( " + fields_name + " " + field_type;  										}  										else {  											fields_in += "'\n " + fields_name + " " + field_type;  										}  									}  									else {  										//значит выходной  										if (!is_out) {  											//ставим флаг' что есть выходные параметры  											is_out = true;  										}  										if (fields_out == "") {  											fields_out += "returns ( " + fields_name + " " + field_type;  										}  										else {  											fields_out += "'\n " + fields_name + " " + field_type;  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						//теперь соединяем   						if (fields_in != "") {  							fields_in += "\n )";  						}  						if (fields_out != "") {  							fields_out += "\n )";  						}  						dll_command += fields_in + fields_out + "\n AS\n";  						//Добавляем содержимое  						try {  							using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  								fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_b.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  									while (fr_b.Read ()) {  										dll_command += fr_b.GetString (0);  										//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  									}  									fr_b.Dispose ();  								}  								fcon_b.Dispose ();  							}  						}  						catch (Exception ex) {  							MessageBox.Show (ex.Message);  						}  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						com_procedures_content.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter procedure ";  						if (is_reserv (fr [0].ToString ())) {  							dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  						}  						else {  							dll_command += fr [0].ToString () + "\n";  						}  						//Список полей  						string fields_in = "";  						string fields_out = "";  						bool is_out = false;  						using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  							fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_a.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  								while (fr_a.Read ()) {  									//резервное?  									var fields_name = fr_a [0].ToString ().Trim ();  									if (is_reserv (fields_name)) {  										fields_name = "\"" + fields_name + "\"";  									}  									//Извлекаем тип данных  									string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  									//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  									if (fr_a [2].ToString () == "0") {  										//входной  										if (fields_in == "") {  											fields_in += "( " + fields_name + " " + field_type;  										}  										else {  											fields_in += "'\n " + fields_name + " " + field_type;  										}  									}  									else {  										//значит выходной  										if (!is_out) {  											//ставим флаг' что есть выходные параметры  											is_out = true;  										}  										if (fields_out == "") {  											fields_out += "returns ( " + fields_name + " " + field_type;  										}  										else {  											fields_out += "'\n " + fields_name + " " + field_type;  										}  									}  								}  								fr_a.Dispose ();  							}  							fcon_a.Dispose ();  						}  						//теперь соединяем   						if (fields_in != "") {  							fields_in += "\n )";  						}  						if (fields_out != "") {  							fields_out += "\n )";  						}  						dll_command += fields_in + fields_out + "\n AS\n";  						//Добавляем содержимое  						try {  							using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  								fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  								fcon_b.Parameters [0].Value = fr [0].ToString ();  								using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  									while (fr_b.Read ()) {  										dll_command += fr_b.GetString (0);  										//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  									}  									fr_b.Dispose ();  								}  								fcon_b.Dispose ();  							}  						}  						catch (Exception ex) {  							MessageBox.Show (ex.Message);  						}  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						com_procedures_content.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter procedure ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "\n";  					}  					//Список полей  					string fields_in = "";  					string fields_out = "";  					bool is_out = false;  					using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								//резервное?  								var fields_name = fr_a [0].ToString ().Trim ();  								if (is_reserv (fields_name)) {  									fields_name = "\"" + fields_name + "\"";  								}  								//Извлекаем тип данных  								string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  								if (fr_a [2].ToString () == "0") {  									//входной  									if (fields_in == "") {  										fields_in += "( " + fields_name + " " + field_type;  									}  									else {  										fields_in += "'\n " + fields_name + " " + field_type;  									}  								}  								else {  									//значит выходной  									if (!is_out) {  										//ставим флаг' что есть выходные параметры  										is_out = true;  									}  									if (fields_out == "") {  										fields_out += "returns ( " + fields_name + " " + field_type;  									}  									else {  										fields_out += "'\n " + fields_name + " " + field_type;  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					//теперь соединяем   					if (fields_in != "") {  						fields_in += "\n )";  					}  					if (fields_out != "") {  						fields_out += "\n )";  					}  					dll_command += fields_in + fields_out + "\n AS\n";  					//Добавляем содержимое  					try {  						using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  							fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_b.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  								while (fr_b.Read ()) {  									dll_command += fr_b.GetString (0);  									//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  								}  								fr_b.Dispose ();  							}  							fcon_b.Dispose ();  						}  					}  					catch (Exception ex) {  						MessageBox.Show (ex.Message);  					}  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					com_procedures_content.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter procedure ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "\n";  					}  					//Список полей  					string fields_in = "";  					string fields_out = "";  					bool is_out = false;  					using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								//резервное?  								var fields_name = fr_a [0].ToString ().Trim ();  								if (is_reserv (fields_name)) {  									fields_name = "\"" + fields_name + "\"";  								}  								//Извлекаем тип данных  								string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  								if (fr_a [2].ToString () == "0") {  									//входной  									if (fields_in == "") {  										fields_in += "( " + fields_name + " " + field_type;  									}  									else {  										fields_in += "'\n " + fields_name + " " + field_type;  									}  								}  								else {  									//значит выходной  									if (!is_out) {  										//ставим флаг' что есть выходные параметры  										is_out = true;  									}  									if (fields_out == "") {  										fields_out += "returns ( " + fields_name + " " + field_type;  									}  									else {  										fields_out += "'\n " + fields_name + " " + field_type;  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					//теперь соединяем   					if (fields_in != "") {  						fields_in += "\n )";  					}  					if (fields_out != "") {  						fields_out += "\n )";  					}  					dll_command += fields_in + fields_out + "\n AS\n";  					//Добавляем содержимое  					try {  						using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  							fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_b.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  								while (fr_b.Read ()) {  									dll_command += fr_b.GetString (0);  									//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  								}  								fr_b.Dispose ();  							}  							fcon_b.Dispose ();  						}  					}  					catch (Exception ex) {  						MessageBox.Show (ex.Message);  					}  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					com_procedures_content.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter procedure ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "\n";  					}  					//Список полей  					string fields_in = "";  					string fields_out = "";  					bool is_out = false;  					using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								//резервное?  								var fields_name = fr_a [0].ToString ().Trim ();  								if (is_reserv (fields_name)) {  									fields_name = "\"" + fields_name + "\"";  								}  								//Извлекаем тип данных  								string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  								if (fr_a [2].ToString () == "0") {  									//входной  									if (fields_in == "") {  										fields_in += "( " + fields_name + " " + field_type;  									}  									else {  										fields_in += "'\n " + fields_name + " " + field_type;  									}  								}  								else {  									//значит выходной  									if (!is_out) {  										//ставим флаг' что есть выходные параметры  										is_out = true;  									}  									if (fields_out == "") {  										fields_out += "returns ( " + fields_name + " " + field_type;  									}  									else {  										fields_out += "'\n " + fields_name + " " + field_type;  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					//теперь соединяем   					if (fields_in != "") {  						fields_in += "\n )";  					}  					if (fields_out != "") {  						fields_out += "\n )";  					}  					dll_command += fields_in + fields_out + "\n AS\n";  					//Добавляем содержимое  					try {  						using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  							fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_b.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  								while (fr_b.Read ()) {  									dll_command += fr_b.GetString (0);  									//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  								}  								fr_b.Dispose ();  							}  							fcon_b.Dispose ();  						}  					}  					catch (Exception ex) {  						MessageBox.Show (ex.Message);  					}  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					com_procedures_content.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter procedure ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "\n";  					}  					//Список полей  					string fields_in = "";  					string fields_out = "";  					bool is_out = false;  					using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								//резервное?  								var fields_name = fr_a [0].ToString ().Trim ();  								if (is_reserv (fields_name)) {  									fields_name = "\"" + fields_name + "\"";  								}  								//Извлекаем тип данных  								string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  								if (fr_a [2].ToString () == "0") {  									//входной  									if (fields_in == "") {  										fields_in += "( " + fields_name + " " + field_type;  									}  									else {  										fields_in += "'\n " + fields_name + " " + field_type;  									}  								}  								else {  									//значит выходной  									if (!is_out) {  										//ставим флаг' что есть выходные параметры  										is_out = true;  									}  									if (fields_out == "") {  										fields_out += "returns ( " + fields_name + " " + field_type;  									}  									else {  										fields_out += "'\n " + fields_name + " " + field_type;  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					//теперь соединяем   					if (fields_in != "") {  						fields_in += "\n )";  					}  					if (fields_out != "") {  						fields_out += "\n )";  					}  					dll_command += fields_in + fields_out + "\n AS\n";  					//Добавляем содержимое  					try {  						using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  							fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_b.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  								while (fr_b.Read ()) {  									dll_command += fr_b.GetString (0);  									//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  								}  								fr_b.Dispose ();  							}  							fcon_b.Dispose ();  						}  					}  					catch (Exception ex) {  						MessageBox.Show (ex.Message);  					}  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					com_procedures_content.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter procedure ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "\n";  					}  					//Список полей  					string fields_in = "";  					string fields_out = "";  					bool is_out = false;  					using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								//резервное?  								var fields_name = fr_a [0].ToString ().Trim ();  								if (is_reserv (fields_name)) {  									fields_name = "\"" + fields_name + "\"";  								}  								//Извлекаем тип данных  								string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  								if (fr_a [2].ToString () == "0") {  									//входной  									if (fields_in == "") {  										fields_in += "( " + fields_name + " " + field_type;  									}  									else {  										fields_in += "'\n " + fields_name + " " + field_type;  									}  								}  								else {  									//значит выходной  									if (!is_out) {  										//ставим флаг' что есть выходные параметры  										is_out = true;  									}  									if (fields_out == "") {  										fields_out += "returns ( " + fields_name + " " + field_type;  									}  									else {  										fields_out += "'\n " + fields_name + " " + field_type;  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					//теперь соединяем   					if (fields_in != "") {  						fields_in += "\n )";  					}  					if (fields_out != "") {  						fields_out += "\n )";  					}  					dll_command += fields_in + fields_out + "\n AS\n";  					//Добавляем содержимое  					try {  						using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  							fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_b.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  								while (fr_b.Read ()) {  									dll_command += fr_b.GetString (0);  									//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  								}  								fr_b.Dispose ();  							}  							fcon_b.Dispose ();  						}  					}  					catch (Exception ex) {  						MessageBox.Show (ex.Message);  					}  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					com_procedures_content.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter procedure ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "\n";  					}  					//Список полей  					string fields_in = "";  					string fields_out = "";  					bool is_out = false;  					using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								//резервное?  								var fields_name = fr_a [0].ToString ().Trim ();  								if (is_reserv (fields_name)) {  									fields_name = "\"" + fields_name + "\"";  								}  								//Извлекаем тип данных  								string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  								if (fr_a [2].ToString () == "0") {  									//входной  									if (fields_in == "") {  										fields_in += "( " + fields_name + " " + field_type;  									}  									else {  										fields_in += "'\n " + fields_name + " " + field_type;  									}  								}  								else {  									//значит выходной  									if (!is_out) {  										//ставим флаг' что есть выходные параметры  										is_out = true;  									}  									if (fields_out == "") {  										fields_out += "returns ( " + fields_name + " " + field_type;  									}  									else {  										fields_out += "'\n " + fields_name + " " + field_type;  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					//теперь соединяем   					if (fields_in != "") {  						fields_in += "\n )";  					}  					if (fields_out != "") {  						fields_out += "\n )";  					}  					dll_command += fields_in + fields_out + "\n AS\n";  					//Добавляем содержимое  					try {  						using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  							fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_b.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  								while (fr_b.Read ()) {  									dll_command += fr_b.GetString (0);  									//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  								}  								fr_b.Dispose ();  							}  							fcon_b.Dispose ();  						}  					}  					catch (Exception ex) {  						MessageBox.Show (ex.Message);  					}  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					com_procedures_content.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter procedure ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "\n";  					}  					//Список полей  					string fields_in = "";  					string fields_out = "";  					bool is_out = false;  					using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								//резервное?  								var fields_name = fr_a [0].ToString ().Trim ();  								if (is_reserv (fields_name)) {  									fields_name = "\"" + fields_name + "\"";  								}  								//Извлекаем тип данных  								string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  								if (fr_a [2].ToString () == "0") {  									//входной  									if (fields_in == "") {  										fields_in += "( " + fields_name + " " + field_type;  									}  									else {  										fields_in += "'\n " + fields_name + " " + field_type;  									}  								}  								else {  									//значит выходной  									if (!is_out) {  										//ставим флаг' что есть выходные параметры  										is_out = true;  									}  									if (fields_out == "") {  										fields_out += "returns ( " + fields_name + " " + field_type;  									}  									else {  										fields_out += "'\n " + fields_name + " " + field_type;  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					//теперь соединяем   					if (fields_in != "") {  						fields_in += "\n )";  					}  					if (fields_out != "") {  						fields_out += "\n )";  					}  					dll_command += fields_in + fields_out + "\n AS\n";  					//Добавляем содержимое  					try {  						using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  							fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_b.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  								while (fr_b.Read ()) {  									dll_command += fr_b.GetString (0);  									//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  								}  								fr_b.Dispose ();  							}  							fcon_b.Dispose ();  						}  					}  					catch (Exception ex) {  						MessageBox.Show (ex.Message);  					}  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					com_procedures_content.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter procedure ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "\n";  					}  					//Список полей  					string fields_in = "";  					string fields_out = "";  					bool is_out = false;  					using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								//резервное?  								var fields_name = fr_a [0].ToString ().Trim ();  								if (is_reserv (fields_name)) {  									fields_name = "\"" + fields_name + "\"";  								}  								//Извлекаем тип данных  								string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  								if (fr_a [2].ToString () == "0") {  									//входной  									if (fields_in == "") {  										fields_in += "( " + fields_name + " " + field_type;  									}  									else {  										fields_in += "'\n " + fields_name + " " + field_type;  									}  								}  								else {  									//значит выходной  									if (!is_out) {  										//ставим флаг' что есть выходные параметры  										is_out = true;  									}  									if (fields_out == "") {  										fields_out += "returns ( " + fields_name + " " + field_type;  									}  									else {  										fields_out += "'\n " + fields_name + " " + field_type;  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					//теперь соединяем   					if (fields_in != "") {  						fields_in += "\n )";  					}  					if (fields_out != "") {  						fields_out += "\n )";  					}  					dll_command += fields_in + fields_out + "\n AS\n";  					//Добавляем содержимое  					try {  						using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  							fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_b.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  								while (fr_b.Read ()) {  									dll_command += fr_b.GetString (0);  									//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  								}  								fr_b.Dispose ();  							}  							fcon_b.Dispose ();  						}  					}  					catch (Exception ex) {  						MessageBox.Show (ex.Message);  					}  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					com_procedures_content.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter procedure ";  					if (is_reserv (fr [0].ToString ())) {  						dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  					}  					else {  						dll_command += fr [0].ToString () + "\n";  					}  					//Список полей  					string fields_in = "";  					string fields_out = "";  					bool is_out = false;  					using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  						fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_a.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  							while (fr_a.Read ()) {  								//резервное?  								var fields_name = fr_a [0].ToString ().Trim ();  								if (is_reserv (fields_name)) {  									fields_name = "\"" + fields_name + "\"";  								}  								//Извлекаем тип данных  								string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  								//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  								if (fr_a [2].ToString () == "0") {  									//входной  									if (fields_in == "") {  										fields_in += "( " + fields_name + " " + field_type;  									}  									else {  										fields_in += "'\n " + fields_name + " " + field_type;  									}  								}  								else {  									//значит выходной  									if (!is_out) {  										//ставим флаг' что есть выходные параметры  										is_out = true;  									}  									if (fields_out == "") {  										fields_out += "returns ( " + fields_name + " " + field_type;  									}  									else {  										fields_out += "'\n " + fields_name + " " + field_type;  									}  								}  							}  							fr_a.Dispose ();  						}  						fcon_a.Dispose ();  					}  					//теперь соединяем   					if (fields_in != "") {  						fields_in += "\n )";  					}  					if (fields_out != "") {  						fields_out += "\n )";  					}  					dll_command += fields_in + fields_out + "\n AS\n";  					//Добавляем содержимое  					try {  						using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  							fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_b.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  								while (fr_b.Read ()) {  									dll_command += fr_b.GetString (0);  									//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  								}  								fr_b.Dispose ();  							}  							fcon_b.Dispose ();  						}  					}  					catch (Exception ex) {  						MessageBox.Show (ex.Message);  					}  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					com_procedures_content.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter procedure ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "\n";  				}  				//Список полей  				string fields_in = "";  				string fields_out = "";  				bool is_out = false;  				using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							//резервное?  							var fields_name = fr_a [0].ToString ().Trim ();  							if (is_reserv (fields_name)) {  								fields_name = "\"" + fields_name + "\"";  							}  							//Извлекаем тип данных  							string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  							if (fr_a [2].ToString () == "0") {  								//входной  								if (fields_in == "") {  									fields_in += "( " + fields_name + " " + field_type;  								}  								else {  									fields_in += "'\n " + fields_name + " " + field_type;  								}  							}  							else {  								//значит выходной  								if (!is_out) {  									//ставим флаг' что есть выходные параметры  									is_out = true;  								}  								if (fields_out == "") {  									fields_out += "returns ( " + fields_name + " " + field_type;  								}  								else {  									fields_out += "'\n " + fields_name + " " + field_type;  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				//теперь соединяем   				if (fields_in != "") {  					fields_in += "\n )";  				}  				if (fields_out != "") {  					fields_out += "\n )";  				}  				dll_command += fields_in + fields_out + "\n AS\n";  				//Добавляем содержимое  				try {  					using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  						fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_b.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  							while (fr_b.Read ()) {  								dll_command += fr_b.GetString (0);  								//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  							}  							fr_b.Dispose ();  						}  						fcon_b.Dispose ();  					}  				}  				catch (Exception ex) {  					MessageBox.Show (ex.Message);  				}  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				com_procedures_content.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter procedure ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "\n";  				}  				//Список полей  				string fields_in = "";  				string fields_out = "";  				bool is_out = false;  				using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							//резервное?  							var fields_name = fr_a [0].ToString ().Trim ();  							if (is_reserv (fields_name)) {  								fields_name = "\"" + fields_name + "\"";  							}  							//Извлекаем тип данных  							string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  							if (fr_a [2].ToString () == "0") {  								//входной  								if (fields_in == "") {  									fields_in += "( " + fields_name + " " + field_type;  								}  								else {  									fields_in += "'\n " + fields_name + " " + field_type;  								}  							}  							else {  								//значит выходной  								if (!is_out) {  									//ставим флаг' что есть выходные параметры  									is_out = true;  								}  								if (fields_out == "") {  									fields_out += "returns ( " + fields_name + " " + field_type;  								}  								else {  									fields_out += "'\n " + fields_name + " " + field_type;  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				//теперь соединяем   				if (fields_in != "") {  					fields_in += "\n )";  				}  				if (fields_out != "") {  					fields_out += "\n )";  				}  				dll_command += fields_in + fields_out + "\n AS\n";  				//Добавляем содержимое  				try {  					using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  						fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_b.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  							while (fr_b.Read ()) {  								dll_command += fr_b.GetString (0);  								//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  							}  							fr_b.Dispose ();  						}  						fcon_b.Dispose ();  					}  				}  				catch (Exception ex) {  					MessageBox.Show (ex.Message);  				}  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				com_procedures_content.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter procedure ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "\n";  				}  				//Список полей  				string fields_in = "";  				string fields_out = "";  				bool is_out = false;  				using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							//резервное?  							var fields_name = fr_a [0].ToString ().Trim ();  							if (is_reserv (fields_name)) {  								fields_name = "\"" + fields_name + "\"";  							}  							//Извлекаем тип данных  							string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  							if (fr_a [2].ToString () == "0") {  								//входной  								if (fields_in == "") {  									fields_in += "( " + fields_name + " " + field_type;  								}  								else {  									fields_in += "'\n " + fields_name + " " + field_type;  								}  							}  							else {  								//значит выходной  								if (!is_out) {  									//ставим флаг' что есть выходные параметры  									is_out = true;  								}  								if (fields_out == "") {  									fields_out += "returns ( " + fields_name + " " + field_type;  								}  								else {  									fields_out += "'\n " + fields_name + " " + field_type;  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				//теперь соединяем   				if (fields_in != "") {  					fields_in += "\n )";  				}  				if (fields_out != "") {  					fields_out += "\n )";  				}  				dll_command += fields_in + fields_out + "\n AS\n";  				//Добавляем содержимое  				try {  					using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  						fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_b.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  							while (fr_b.Read ()) {  								dll_command += fr_b.GetString (0);  								//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  							}  							fr_b.Dispose ();  						}  						fcon_b.Dispose ();  					}  				}  				catch (Exception ex) {  					MessageBox.Show (ex.Message);  				}  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				com_procedures_content.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter procedure ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "\n";  				}  				//Список полей  				string fields_in = "";  				string fields_out = "";  				bool is_out = false;  				using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							//резервное?  							var fields_name = fr_a [0].ToString ().Trim ();  							if (is_reserv (fields_name)) {  								fields_name = "\"" + fields_name + "\"";  							}  							//Извлекаем тип данных  							string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  							if (fr_a [2].ToString () == "0") {  								//входной  								if (fields_in == "") {  									fields_in += "( " + fields_name + " " + field_type;  								}  								else {  									fields_in += "'\n " + fields_name + " " + field_type;  								}  							}  							else {  								//значит выходной  								if (!is_out) {  									//ставим флаг' что есть выходные параметры  									is_out = true;  								}  								if (fields_out == "") {  									fields_out += "returns ( " + fields_name + " " + field_type;  								}  								else {  									fields_out += "'\n " + fields_name + " " + field_type;  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				//теперь соединяем   				if (fields_in != "") {  					fields_in += "\n )";  				}  				if (fields_out != "") {  					fields_out += "\n )";  				}  				dll_command += fields_in + fields_out + "\n AS\n";  				//Добавляем содержимое  				try {  					using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  						fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_b.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  							while (fr_b.Read ()) {  								dll_command += fr_b.GetString (0);  								//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  							}  							fr_b.Dispose ();  						}  						fcon_b.Dispose ();  					}  				}  				catch (Exception ex) {  					MessageBox.Show (ex.Message);  				}  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				com_procedures_content.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter procedure ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "\n";  				}  				//Список полей  				string fields_in = "";  				string fields_out = "";  				bool is_out = false;  				using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							//резервное?  							var fields_name = fr_a [0].ToString ().Trim ();  							if (is_reserv (fields_name)) {  								fields_name = "\"" + fields_name + "\"";  							}  							//Извлекаем тип данных  							string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  							if (fr_a [2].ToString () == "0") {  								//входной  								if (fields_in == "") {  									fields_in += "( " + fields_name + " " + field_type;  								}  								else {  									fields_in += "'\n " + fields_name + " " + field_type;  								}  							}  							else {  								//значит выходной  								if (!is_out) {  									//ставим флаг' что есть выходные параметры  									is_out = true;  								}  								if (fields_out == "") {  									fields_out += "returns ( " + fields_name + " " + field_type;  								}  								else {  									fields_out += "'\n " + fields_name + " " + field_type;  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				//теперь соединяем   				if (fields_in != "") {  					fields_in += "\n )";  				}  				if (fields_out != "") {  					fields_out += "\n )";  				}  				dll_command += fields_in + fields_out + "\n AS\n";  				//Добавляем содержимое  				try {  					using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  						fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_b.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  							while (fr_b.Read ()) {  								dll_command += fr_b.GetString (0);  								//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  							}  							fr_b.Dispose ();  						}  						fcon_b.Dispose ();  					}  				}  				catch (Exception ex) {  					MessageBox.Show (ex.Message);  				}  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				com_procedures_content.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter procedure ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "\n";  				}  				//Список полей  				string fields_in = "";  				string fields_out = "";  				bool is_out = false;  				using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							//резервное?  							var fields_name = fr_a [0].ToString ().Trim ();  							if (is_reserv (fields_name)) {  								fields_name = "\"" + fields_name + "\"";  							}  							//Извлекаем тип данных  							string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  							if (fr_a [2].ToString () == "0") {  								//входной  								if (fields_in == "") {  									fields_in += "( " + fields_name + " " + field_type;  								}  								else {  									fields_in += "'\n " + fields_name + " " + field_type;  								}  							}  							else {  								//значит выходной  								if (!is_out) {  									//ставим флаг' что есть выходные параметры  									is_out = true;  								}  								if (fields_out == "") {  									fields_out += "returns ( " + fields_name + " " + field_type;  								}  								else {  									fields_out += "'\n " + fields_name + " " + field_type;  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				//теперь соединяем   				if (fields_in != "") {  					fields_in += "\n )";  				}  				if (fields_out != "") {  					fields_out += "\n )";  				}  				dll_command += fields_in + fields_out + "\n AS\n";  				//Добавляем содержимое  				try {  					using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  						fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_b.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  							while (fr_b.Read ()) {  								dll_command += fr_b.GetString (0);  								//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  							}  							fr_b.Dispose ();  						}  						fcon_b.Dispose ();  					}  				}  				catch (Exception ex) {  					MessageBox.Show (ex.Message);  				}  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				com_procedures_content.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter procedure ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "\n";  				}  				//Список полей  				string fields_in = "";  				string fields_out = "";  				bool is_out = false;  				using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							//резервное?  							var fields_name = fr_a [0].ToString ().Trim ();  							if (is_reserv (fields_name)) {  								fields_name = "\"" + fields_name + "\"";  							}  							//Извлекаем тип данных  							string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  							if (fr_a [2].ToString () == "0") {  								//входной  								if (fields_in == "") {  									fields_in += "( " + fields_name + " " + field_type;  								}  								else {  									fields_in += "'\n " + fields_name + " " + field_type;  								}  							}  							else {  								//значит выходной  								if (!is_out) {  									//ставим флаг' что есть выходные параметры  									is_out = true;  								}  								if (fields_out == "") {  									fields_out += "returns ( " + fields_name + " " + field_type;  								}  								else {  									fields_out += "'\n " + fields_name + " " + field_type;  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				//теперь соединяем   				if (fields_in != "") {  					fields_in += "\n )";  				}  				if (fields_out != "") {  					fields_out += "\n )";  				}  				dll_command += fields_in + fields_out + "\n AS\n";  				//Добавляем содержимое  				try {  					using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  						fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_b.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  							while (fr_b.Read ()) {  								dll_command += fr_b.GetString (0);  								//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  							}  							fr_b.Dispose ();  						}  						fcon_b.Dispose ();  					}  				}  				catch (Exception ex) {  					MessageBox.Show (ex.Message);  				}  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				com_procedures_content.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter procedure ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "\n";  				}  				//Список полей  				string fields_in = "";  				string fields_out = "";  				bool is_out = false;  				using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							//резервное?  							var fields_name = fr_a [0].ToString ().Trim ();  							if (is_reserv (fields_name)) {  								fields_name = "\"" + fields_name + "\"";  							}  							//Извлекаем тип данных  							string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  							if (fr_a [2].ToString () == "0") {  								//входной  								if (fields_in == "") {  									fields_in += "( " + fields_name + " " + field_type;  								}  								else {  									fields_in += "'\n " + fields_name + " " + field_type;  								}  							}  							else {  								//значит выходной  								if (!is_out) {  									//ставим флаг' что есть выходные параметры  									is_out = true;  								}  								if (fields_out == "") {  									fields_out += "returns ( " + fields_name + " " + field_type;  								}  								else {  									fields_out += "'\n " + fields_name + " " + field_type;  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				//теперь соединяем   				if (fields_in != "") {  					fields_in += "\n )";  				}  				if (fields_out != "") {  					fields_out += "\n )";  				}  				dll_command += fields_in + fields_out + "\n AS\n";  				//Добавляем содержимое  				try {  					using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  						fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_b.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  							while (fr_b.Read ()) {  								dll_command += fr_b.GetString (0);  								//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  							}  							fr_b.Dispose ();  						}  						fcon_b.Dispose ();  					}  				}  				catch (Exception ex) {  					MessageBox.Show (ex.Message);  				}  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				com_procedures_content.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter procedure ";  				if (is_reserv (fr [0].ToString ())) {  					dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  				}  				else {  					dll_command += fr [0].ToString () + "\n";  				}  				//Список полей  				string fields_in = "";  				string fields_out = "";  				bool is_out = false;  				using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  					fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_a.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  						while (fr_a.Read ()) {  							//резервное?  							var fields_name = fr_a [0].ToString ().Trim ();  							if (is_reserv (fields_name)) {  								fields_name = "\"" + fields_name + "\"";  							}  							//Извлекаем тип данных  							string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  							//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  							if (fr_a [2].ToString () == "0") {  								//входной  								if (fields_in == "") {  									fields_in += "( " + fields_name + " " + field_type;  								}  								else {  									fields_in += "'\n " + fields_name + " " + field_type;  								}  							}  							else {  								//значит выходной  								if (!is_out) {  									//ставим флаг' что есть выходные параметры  									is_out = true;  								}  								if (fields_out == "") {  									fields_out += "returns ( " + fields_name + " " + field_type;  								}  								else {  									fields_out += "'\n " + fields_name + " " + field_type;  								}  							}  						}  						fr_a.Dispose ();  					}  					fcon_a.Dispose ();  				}  				//теперь соединяем   				if (fields_in != "") {  					fields_in += "\n )";  				}  				if (fields_out != "") {  					fields_out += "\n )";  				}  				dll_command += fields_in + fields_out + "\n AS\n";  				//Добавляем содержимое  				try {  					using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  						fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_b.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  							while (fr_b.Read ()) {  								dll_command += fr_b.GetString (0);  								//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  							}  							fr_b.Dispose ();  						}  						fcon_b.Dispose ();  					}  				}  				catch (Exception ex) {  					MessageBox.Show (ex.Message);  				}  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				com_procedures_content.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter procedure ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "\n";  			}  			//Список полей  			string fields_in = "";  			string fields_out = "";  			bool is_out = false;  			using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						//резервное?  						var fields_name = fr_a [0].ToString ().Trim ();  						if (is_reserv (fields_name)) {  							fields_name = "\"" + fields_name + "\"";  						}  						//Извлекаем тип данных  						string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  						if (fr_a [2].ToString () == "0") {  							//входной  							if (fields_in == "") {  								fields_in += "( " + fields_name + " " + field_type;  							}  							else {  								fields_in += "'\n " + fields_name + " " + field_type;  							}  						}  						else {  							//значит выходной  							if (!is_out) {  								//ставим флаг' что есть выходные параметры  								is_out = true;  							}  							if (fields_out == "") {  								fields_out += "returns ( " + fields_name + " " + field_type;  							}  							else {  								fields_out += "'\n " + fields_name + " " + field_type;  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			//теперь соединяем   			if (fields_in != "") {  				fields_in += "\n )";  			}  			if (fields_out != "") {  				fields_out += "\n )";  			}  			dll_command += fields_in + fields_out + "\n AS\n";  			//Добавляем содержимое  			try {  				using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  					fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_b.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  						while (fr_b.Read ()) {  							dll_command += fr_b.GetString (0);  							//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  						}  						fr_b.Dispose ();  					}  					fcon_b.Dispose ();  				}  			}  			catch (Exception ex) {  				MessageBox.Show (ex.Message);  			}  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			com_procedures_content.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter procedure ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "\n";  			}  			//Список полей  			string fields_in = "";  			string fields_out = "";  			bool is_out = false;  			using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						//резервное?  						var fields_name = fr_a [0].ToString ().Trim ();  						if (is_reserv (fields_name)) {  							fields_name = "\"" + fields_name + "\"";  						}  						//Извлекаем тип данных  						string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  						if (fr_a [2].ToString () == "0") {  							//входной  							if (fields_in == "") {  								fields_in += "( " + fields_name + " " + field_type;  							}  							else {  								fields_in += "'\n " + fields_name + " " + field_type;  							}  						}  						else {  							//значит выходной  							if (!is_out) {  								//ставим флаг' что есть выходные параметры  								is_out = true;  							}  							if (fields_out == "") {  								fields_out += "returns ( " + fields_name + " " + field_type;  							}  							else {  								fields_out += "'\n " + fields_name + " " + field_type;  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			//теперь соединяем   			if (fields_in != "") {  				fields_in += "\n )";  			}  			if (fields_out != "") {  				fields_out += "\n )";  			}  			dll_command += fields_in + fields_out + "\n AS\n";  			//Добавляем содержимое  			try {  				using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  					fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_b.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  						while (fr_b.Read ()) {  							dll_command += fr_b.GetString (0);  							//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  						}  						fr_b.Dispose ();  					}  					fcon_b.Dispose ();  				}  			}  			catch (Exception ex) {  				MessageBox.Show (ex.Message);  			}  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			com_procedures_content.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter procedure ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "\n";  			}  			//Список полей  			string fields_in = "";  			string fields_out = "";  			bool is_out = false;  			using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						//резервное?  						var fields_name = fr_a [0].ToString ().Trim ();  						if (is_reserv (fields_name)) {  							fields_name = "\"" + fields_name + "\"";  						}  						//Извлекаем тип данных  						string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  						if (fr_a [2].ToString () == "0") {  							//входной  							if (fields_in == "") {  								fields_in += "( " + fields_name + " " + field_type;  							}  							else {  								fields_in += "'\n " + fields_name + " " + field_type;  							}  						}  						else {  							//значит выходной  							if (!is_out) {  								//ставим флаг' что есть выходные параметры  								is_out = true;  							}  							if (fields_out == "") {  								fields_out += "returns ( " + fields_name + " " + field_type;  							}  							else {  								fields_out += "'\n " + fields_name + " " + field_type;  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			//теперь соединяем   			if (fields_in != "") {  				fields_in += "\n )";  			}  			if (fields_out != "") {  				fields_out += "\n )";  			}  			dll_command += fields_in + fields_out + "\n AS\n";  			//Добавляем содержимое  			try {  				using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  					fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_b.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  						while (fr_b.Read ()) {  							dll_command += fr_b.GetString (0);  							//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  						}  						fr_b.Dispose ();  					}  					fcon_b.Dispose ();  				}  			}  			catch (Exception ex) {  				MessageBox.Show (ex.Message);  			}  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			com_procedures_content.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter procedure ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "\n";  			}  			//Список полей  			string fields_in = "";  			string fields_out = "";  			bool is_out = false;  			using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						//резервное?  						var fields_name = fr_a [0].ToString ().Trim ();  						if (is_reserv (fields_name)) {  							fields_name = "\"" + fields_name + "\"";  						}  						//Извлекаем тип данных  						string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  						if (fr_a [2].ToString () == "0") {  							//входной  							if (fields_in == "") {  								fields_in += "( " + fields_name + " " + field_type;  							}  							else {  								fields_in += "'\n " + fields_name + " " + field_type;  							}  						}  						else {  							//значит выходной  							if (!is_out) {  								//ставим флаг' что есть выходные параметры  								is_out = true;  							}  							if (fields_out == "") {  								fields_out += "returns ( " + fields_name + " " + field_type;  							}  							else {  								fields_out += "'\n " + fields_name + " " + field_type;  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			//теперь соединяем   			if (fields_in != "") {  				fields_in += "\n )";  			}  			if (fields_out != "") {  				fields_out += "\n )";  			}  			dll_command += fields_in + fields_out + "\n AS\n";  			//Добавляем содержимое  			try {  				using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  					fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_b.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  						while (fr_b.Read ()) {  							dll_command += fr_b.GetString (0);  							//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  						}  						fr_b.Dispose ();  					}  					fcon_b.Dispose ();  				}  			}  			catch (Exception ex) {  				MessageBox.Show (ex.Message);  			}  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			com_procedures_content.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter procedure ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "\n";  			}  			//Список полей  			string fields_in = "";  			string fields_out = "";  			bool is_out = false;  			using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						//резервное?  						var fields_name = fr_a [0].ToString ().Trim ();  						if (is_reserv (fields_name)) {  							fields_name = "\"" + fields_name + "\"";  						}  						//Извлекаем тип данных  						string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  						if (fr_a [2].ToString () == "0") {  							//входной  							if (fields_in == "") {  								fields_in += "( " + fields_name + " " + field_type;  							}  							else {  								fields_in += "'\n " + fields_name + " " + field_type;  							}  						}  						else {  							//значит выходной  							if (!is_out) {  								//ставим флаг' что есть выходные параметры  								is_out = true;  							}  							if (fields_out == "") {  								fields_out += "returns ( " + fields_name + " " + field_type;  							}  							else {  								fields_out += "'\n " + fields_name + " " + field_type;  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			//теперь соединяем   			if (fields_in != "") {  				fields_in += "\n )";  			}  			if (fields_out != "") {  				fields_out += "\n )";  			}  			dll_command += fields_in + fields_out + "\n AS\n";  			//Добавляем содержимое  			try {  				using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  					fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_b.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  						while (fr_b.Read ()) {  							dll_command += fr_b.GetString (0);  							//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  						}  						fr_b.Dispose ();  					}  					fcon_b.Dispose ();  				}  			}  			catch (Exception ex) {  				MessageBox.Show (ex.Message);  			}  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			com_procedures_content.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter procedure ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "\n";  			}  			//Список полей  			string fields_in = "";  			string fields_out = "";  			bool is_out = false;  			using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						//резервное?  						var fields_name = fr_a [0].ToString ().Trim ();  						if (is_reserv (fields_name)) {  							fields_name = "\"" + fields_name + "\"";  						}  						//Извлекаем тип данных  						string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  						if (fr_a [2].ToString () == "0") {  							//входной  							if (fields_in == "") {  								fields_in += "( " + fields_name + " " + field_type;  							}  							else {  								fields_in += "'\n " + fields_name + " " + field_type;  							}  						}  						else {  							//значит выходной  							if (!is_out) {  								//ставим флаг' что есть выходные параметры  								is_out = true;  							}  							if (fields_out == "") {  								fields_out += "returns ( " + fields_name + " " + field_type;  							}  							else {  								fields_out += "'\n " + fields_name + " " + field_type;  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			//теперь соединяем   			if (fields_in != "") {  				fields_in += "\n )";  			}  			if (fields_out != "") {  				fields_out += "\n )";  			}  			dll_command += fields_in + fields_out + "\n AS\n";  			//Добавляем содержимое  			try {  				using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  					fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_b.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  						while (fr_b.Read ()) {  							dll_command += fr_b.GetString (0);  							//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  						}  						fr_b.Dispose ();  					}  					fcon_b.Dispose ();  				}  			}  			catch (Exception ex) {  				MessageBox.Show (ex.Message);  			}  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			com_procedures_content.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter procedure ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "\n";  			}  			//Список полей  			string fields_in = "";  			string fields_out = "";  			bool is_out = false;  			using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						//резервное?  						var fields_name = fr_a [0].ToString ().Trim ();  						if (is_reserv (fields_name)) {  							fields_name = "\"" + fields_name + "\"";  						}  						//Извлекаем тип данных  						string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  						if (fr_a [2].ToString () == "0") {  							//входной  							if (fields_in == "") {  								fields_in += "( " + fields_name + " " + field_type;  							}  							else {  								fields_in += "'\n " + fields_name + " " + field_type;  							}  						}  						else {  							//значит выходной  							if (!is_out) {  								//ставим флаг' что есть выходные параметры  								is_out = true;  							}  							if (fields_out == "") {  								fields_out += "returns ( " + fields_name + " " + field_type;  							}  							else {  								fields_out += "'\n " + fields_name + " " + field_type;  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			//теперь соединяем   			if (fields_in != "") {  				fields_in += "\n )";  			}  			if (fields_out != "") {  				fields_out += "\n )";  			}  			dll_command += fields_in + fields_out + "\n AS\n";  			//Добавляем содержимое  			try {  				using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  					fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_b.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  						while (fr_b.Read ()) {  							dll_command += fr_b.GetString (0);  							//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  						}  						fr_b.Dispose ();  					}  					fcon_b.Dispose ();  				}  			}  			catch (Exception ex) {  				MessageBox.Show (ex.Message);  			}  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			com_procedures_content.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter procedure ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "\n";  			}  			//Список полей  			string fields_in = "";  			string fields_out = "";  			bool is_out = false;  			using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						//резервное?  						var fields_name = fr_a [0].ToString ().Trim ();  						if (is_reserv (fields_name)) {  							fields_name = "\"" + fields_name + "\"";  						}  						//Извлекаем тип данных  						string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  						if (fr_a [2].ToString () == "0") {  							//входной  							if (fields_in == "") {  								fields_in += "( " + fields_name + " " + field_type;  							}  							else {  								fields_in += "'\n " + fields_name + " " + field_type;  							}  						}  						else {  							//значит выходной  							if (!is_out) {  								//ставим флаг' что есть выходные параметры  								is_out = true;  							}  							if (fields_out == "") {  								fields_out += "returns ( " + fields_name + " " + field_type;  							}  							else {  								fields_out += "'\n " + fields_name + " " + field_type;  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			//теперь соединяем   			if (fields_in != "") {  				fields_in += "\n )";  			}  			if (fields_out != "") {  				fields_out += "\n )";  			}  			dll_command += fields_in + fields_out + "\n AS\n";  			//Добавляем содержимое  			try {  				using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  					fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_b.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  						while (fr_b.Read ()) {  							dll_command += fr_b.GetString (0);  							//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  						}  						fr_b.Dispose ();  					}  					fcon_b.Dispose ();  				}  			}  			catch (Exception ex) {  				MessageBox.Show (ex.Message);  			}  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			com_procedures_content.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_procedures' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter procedure ";  			if (is_reserv (fr [0].ToString ())) {  				dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  			}  			else {  				dll_command += fr [0].ToString () + "\n";  			}  			//Список полей  			string fields_in = "";  			string fields_out = "";  			bool is_out = false;  			using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  				fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_a.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  					while (fr_a.Read ()) {  						//резервное?  						var fields_name = fr_a [0].ToString ().Trim ();  						if (is_reserv (fields_name)) {  							fields_name = "\"" + fields_name + "\"";  						}  						//Извлекаем тип данных  						string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  						//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  						if (fr_a [2].ToString () == "0") {  							//входной  							if (fields_in == "") {  								fields_in += "( " + fields_name + " " + field_type;  							}  							else {  								fields_in += "'\n " + fields_name + " " + field_type;  							}  						}  						else {  							//значит выходной  							if (!is_out) {  								//ставим флаг' что есть выходные параметры  								is_out = true;  							}  							if (fields_out == "") {  								fields_out += "returns ( " + fields_name + " " + field_type;  							}  							else {  								fields_out += "'\n " + fields_name + " " + field_type;  							}  						}  					}  					fr_a.Dispose ();  				}  				fcon_a.Dispose ();  			}  			//теперь соединяем   			if (fields_in != "") {  				fields_in += "\n )";  			}  			if (fields_out != "") {  				fields_out += "\n )";  			}  			dll_command += fields_in + fields_out + "\n AS\n";  			//Добавляем содержимое  			try {  				using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  					fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_b.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  						while (fr_b.Read ()) {  							dll_command += fr_b.GetString (0);  							//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  						}  						fr_b.Dispose ();  					}  					fcon_b.Dispose ();  				}  			}  			catch (Exception ex) {  				MessageBox.Show (ex.Message);  			}  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			com_procedures_content.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter procedure ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "\n";  		}  		//Список полей  		string fields_in = "";  		string fields_out = "";  		bool is_out = false;  		using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					//резервное?  					var fields_name = fr_a [0].ToString ().Trim ();  					if (is_reserv (fields_name)) {  						fields_name = "\"" + fields_name + "\"";  					}  					//Извлекаем тип данных  					string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  					if (fr_a [2].ToString () == "0") {  						//входной  						if (fields_in == "") {  							fields_in += "( " + fields_name + " " + field_type;  						}  						else {  							fields_in += "'\n " + fields_name + " " + field_type;  						}  					}  					else {  						//значит выходной  						if (!is_out) {  							//ставим флаг' что есть выходные параметры  							is_out = true;  						}  						if (fields_out == "") {  							fields_out += "returns ( " + fields_name + " " + field_type;  						}  						else {  							fields_out += "'\n " + fields_name + " " + field_type;  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		//теперь соединяем   		if (fields_in != "") {  			fields_in += "\n )";  		}  		if (fields_out != "") {  			fields_out += "\n )";  		}  		dll_command += fields_in + fields_out + "\n AS\n";  		//Добавляем содержимое  		try {  			using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  				fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_b.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  					while (fr_b.Read ()) {  						dll_command += fr_b.GetString (0);  						//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  					}  					fr_b.Dispose ();  				}  				fcon_b.Dispose ();  			}  		}  		catch (Exception ex) {  			MessageBox.Show (ex.Message);  		}  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		com_procedures_content.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter procedure ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "\n";  		}  		//Список полей  		string fields_in = "";  		string fields_out = "";  		bool is_out = false;  		using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					//резервное?  					var fields_name = fr_a [0].ToString ().Trim ();  					if (is_reserv (fields_name)) {  						fields_name = "\"" + fields_name + "\"";  					}  					//Извлекаем тип данных  					string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  					if (fr_a [2].ToString () == "0") {  						//входной  						if (fields_in == "") {  							fields_in += "( " + fields_name + " " + field_type;  						}  						else {  							fields_in += "'\n " + fields_name + " " + field_type;  						}  					}  					else {  						//значит выходной  						if (!is_out) {  							//ставим флаг' что есть выходные параметры  							is_out = true;  						}  						if (fields_out == "") {  							fields_out += "returns ( " + fields_name + " " + field_type;  						}  						else {  							fields_out += "'\n " + fields_name + " " + field_type;  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		//теперь соединяем   		if (fields_in != "") {  			fields_in += "\n )";  		}  		if (fields_out != "") {  			fields_out += "\n )";  		}  		dll_command += fields_in + fields_out + "\n AS\n";  		//Добавляем содержимое  		try {  			using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  				fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_b.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  					while (fr_b.Read ()) {  						dll_command += fr_b.GetString (0);  						//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  					}  					fr_b.Dispose ();  				}  				fcon_b.Dispose ();  			}  		}  		catch (Exception ex) {  			MessageBox.Show (ex.Message);  		}  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		com_procedures_content.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter procedure ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "\n";  		}  		//Список полей  		string fields_in = "";  		string fields_out = "";  		bool is_out = false;  		using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					//резервное?  					var fields_name = fr_a [0].ToString ().Trim ();  					if (is_reserv (fields_name)) {  						fields_name = "\"" + fields_name + "\"";  					}  					//Извлекаем тип данных  					string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  					if (fr_a [2].ToString () == "0") {  						//входной  						if (fields_in == "") {  							fields_in += "( " + fields_name + " " + field_type;  						}  						else {  							fields_in += "'\n " + fields_name + " " + field_type;  						}  					}  					else {  						//значит выходной  						if (!is_out) {  							//ставим флаг' что есть выходные параметры  							is_out = true;  						}  						if (fields_out == "") {  							fields_out += "returns ( " + fields_name + " " + field_type;  						}  						else {  							fields_out += "'\n " + fields_name + " " + field_type;  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		//теперь соединяем   		if (fields_in != "") {  			fields_in += "\n )";  		}  		if (fields_out != "") {  			fields_out += "\n )";  		}  		dll_command += fields_in + fields_out + "\n AS\n";  		//Добавляем содержимое  		try {  			using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  				fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_b.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  					while (fr_b.Read ()) {  						dll_command += fr_b.GetString (0);  						//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  					}  					fr_b.Dispose ();  				}  				fcon_b.Dispose ();  			}  		}  		catch (Exception ex) {  			MessageBox.Show (ex.Message);  		}  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		com_procedures_content.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter procedure ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "\n";  		}  		//Список полей  		string fields_in = "";  		string fields_out = "";  		bool is_out = false;  		using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					//резервное?  					var fields_name = fr_a [0].ToString ().Trim ();  					if (is_reserv (fields_name)) {  						fields_name = "\"" + fields_name + "\"";  					}  					//Извлекаем тип данных  					string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  					if (fr_a [2].ToString () == "0") {  						//входной  						if (fields_in == "") {  							fields_in += "( " + fields_name + " " + field_type;  						}  						else {  							fields_in += "'\n " + fields_name + " " + field_type;  						}  					}  					else {  						//значит выходной  						if (!is_out) {  							//ставим флаг' что есть выходные параметры  							is_out = true;  						}  						if (fields_out == "") {  							fields_out += "returns ( " + fields_name + " " + field_type;  						}  						else {  							fields_out += "'\n " + fields_name + " " + field_type;  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		//теперь соединяем   		if (fields_in != "") {  			fields_in += "\n )";  		}  		if (fields_out != "") {  			fields_out += "\n )";  		}  		dll_command += fields_in + fields_out + "\n AS\n";  		//Добавляем содержимое  		try {  			using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  				fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_b.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  					while (fr_b.Read ()) {  						dll_command += fr_b.GetString (0);  						//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  					}  					fr_b.Dispose ();  				}  				fcon_b.Dispose ();  			}  		}  		catch (Exception ex) {  			MessageBox.Show (ex.Message);  		}  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		com_procedures_content.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter procedure ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "\n";  		}  		//Список полей  		string fields_in = "";  		string fields_out = "";  		bool is_out = false;  		using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					//резервное?  					var fields_name = fr_a [0].ToString ().Trim ();  					if (is_reserv (fields_name)) {  						fields_name = "\"" + fields_name + "\"";  					}  					//Извлекаем тип данных  					string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  					if (fr_a [2].ToString () == "0") {  						//входной  						if (fields_in == "") {  							fields_in += "( " + fields_name + " " + field_type;  						}  						else {  							fields_in += "'\n " + fields_name + " " + field_type;  						}  					}  					else {  						//значит выходной  						if (!is_out) {  							//ставим флаг' что есть выходные параметры  							is_out = true;  						}  						if (fields_out == "") {  							fields_out += "returns ( " + fields_name + " " + field_type;  						}  						else {  							fields_out += "'\n " + fields_name + " " + field_type;  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		//теперь соединяем   		if (fields_in != "") {  			fields_in += "\n )";  		}  		if (fields_out != "") {  			fields_out += "\n )";  		}  		dll_command += fields_in + fields_out + "\n AS\n";  		//Добавляем содержимое  		try {  			using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  				fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_b.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  					while (fr_b.Read ()) {  						dll_command += fr_b.GetString (0);  						//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  					}  					fr_b.Dispose ();  				}  				fcon_b.Dispose ();  			}  		}  		catch (Exception ex) {  			MessageBox.Show (ex.Message);  		}  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		com_procedures_content.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter procedure ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "\n";  		}  		//Список полей  		string fields_in = "";  		string fields_out = "";  		bool is_out = false;  		using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					//резервное?  					var fields_name = fr_a [0].ToString ().Trim ();  					if (is_reserv (fields_name)) {  						fields_name = "\"" + fields_name + "\"";  					}  					//Извлекаем тип данных  					string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  					if (fr_a [2].ToString () == "0") {  						//входной  						if (fields_in == "") {  							fields_in += "( " + fields_name + " " + field_type;  						}  						else {  							fields_in += "'\n " + fields_name + " " + field_type;  						}  					}  					else {  						//значит выходной  						if (!is_out) {  							//ставим флаг' что есть выходные параметры  							is_out = true;  						}  						if (fields_out == "") {  							fields_out += "returns ( " + fields_name + " " + field_type;  						}  						else {  							fields_out += "'\n " + fields_name + " " + field_type;  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		//теперь соединяем   		if (fields_in != "") {  			fields_in += "\n )";  		}  		if (fields_out != "") {  			fields_out += "\n )";  		}  		dll_command += fields_in + fields_out + "\n AS\n";  		//Добавляем содержимое  		try {  			using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  				fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_b.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  					while (fr_b.Read ()) {  						dll_command += fr_b.GetString (0);  						//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  					}  					fr_b.Dispose ();  				}  				fcon_b.Dispose ();  			}  		}  		catch (Exception ex) {  			MessageBox.Show (ex.Message);  		}  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		com_procedures_content.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter procedure ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "\n";  		}  		//Список полей  		string fields_in = "";  		string fields_out = "";  		bool is_out = false;  		using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					//резервное?  					var fields_name = fr_a [0].ToString ().Trim ();  					if (is_reserv (fields_name)) {  						fields_name = "\"" + fields_name + "\"";  					}  					//Извлекаем тип данных  					string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  					if (fr_a [2].ToString () == "0") {  						//входной  						if (fields_in == "") {  							fields_in += "( " + fields_name + " " + field_type;  						}  						else {  							fields_in += "'\n " + fields_name + " " + field_type;  						}  					}  					else {  						//значит выходной  						if (!is_out) {  							//ставим флаг' что есть выходные параметры  							is_out = true;  						}  						if (fields_out == "") {  							fields_out += "returns ( " + fields_name + " " + field_type;  						}  						else {  							fields_out += "'\n " + fields_name + " " + field_type;  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		//теперь соединяем   		if (fields_in != "") {  			fields_in += "\n )";  		}  		if (fields_out != "") {  			fields_out += "\n )";  		}  		dll_command += fields_in + fields_out + "\n AS\n";  		//Добавляем содержимое  		try {  			using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  				fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_b.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  					while (fr_b.Read ()) {  						dll_command += fr_b.GetString (0);  						//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  					}  					fr_b.Dispose ();  				}  				fcon_b.Dispose ();  			}  		}  		catch (Exception ex) {  			MessageBox.Show (ex.Message);  		}  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		com_procedures_content.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter procedure ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "\n";  		}  		//Список полей  		string fields_in = "";  		string fields_out = "";  		bool is_out = false;  		using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					//резервное?  					var fields_name = fr_a [0].ToString ().Trim ();  					if (is_reserv (fields_name)) {  						fields_name = "\"" + fields_name + "\"";  					}  					//Извлекаем тип данных  					string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  					if (fr_a [2].ToString () == "0") {  						//входной  						if (fields_in == "") {  							fields_in += "( " + fields_name + " " + field_type;  						}  						else {  							fields_in += "'\n " + fields_name + " " + field_type;  						}  					}  					else {  						//значит выходной  						if (!is_out) {  							//ставим флаг' что есть выходные параметры  							is_out = true;  						}  						if (fields_out == "") {  							fields_out += "returns ( " + fields_name + " " + field_type;  						}  						else {  							fields_out += "'\n " + fields_name + " " + field_type;  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		//теперь соединяем   		if (fields_in != "") {  			fields_in += "\n )";  		}  		if (fields_out != "") {  			fields_out += "\n )";  		}  		dll_command += fields_in + fields_out + "\n AS\n";  		//Добавляем содержимое  		try {  			using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  				fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_b.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  					while (fr_b.Read ()) {  						dll_command += fr_b.GetString (0);  						//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  					}  					fr_b.Dispose ();  				}  				fcon_b.Dispose ();  			}  		}  		catch (Exception ex) {  			MessageBox.Show (ex.Message);  		}  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		com_procedures_content.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter procedure ";  		if (is_reserv (fr [0].ToString ())) {  			dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  		}  		else {  			dll_command += fr [0].ToString () + "\n";  		}  		//Список полей  		string fields_in = "";  		string fields_out = "";  		bool is_out = false;  		using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  			fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_a.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  				while (fr_a.Read ()) {  					//резервное?  					var fields_name = fr_a [0].ToString ().Trim ();  					if (is_reserv (fields_name)) {  						fields_name = "\"" + fields_name + "\"";  					}  					//Извлекаем тип данных  					string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  					//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  					if (fr_a [2].ToString () == "0") {  						//входной  						if (fields_in == "") {  							fields_in += "( " + fields_name + " " + field_type;  						}  						else {  							fields_in += "'\n " + fields_name + " " + field_type;  						}  					}  					else {  						//значит выходной  						if (!is_out) {  							//ставим флаг' что есть выходные параметры  							is_out = true;  						}  						if (fields_out == "") {  							fields_out += "returns ( " + fields_name + " " + field_type;  						}  						else {  							fields_out += "'\n " + fields_name + " " + field_type;  						}  					}  				}  				fr_a.Dispose ();  			}  			fcon_a.Dispose ();  		}  		//теперь соединяем   		if (fields_in != "") {  			fields_in += "\n )";  		}  		if (fields_out != "") {  			fields_out += "\n )";  		}  		dll_command += fields_in + fields_out + "\n AS\n";  		//Добавляем содержимое  		try {  			using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  				fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_b.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  					while (fr_b.Read ()) {  						dll_command += fr_b.GetString (0);  						//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  					}  					fr_b.Dispose ();  				}  				fcon_b.Dispose ();  			}  		}  		catch (Exception ex) {  			MessageBox.Show (ex.Message);  		}  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		com_procedures_content.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter procedure ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "\n";  	}  	//Список полей  	string fields_in = "";  	string fields_out = "";  	bool is_out = false;  	using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				//резервное?  				var fields_name = fr_a [0].ToString ().Trim ();  				if (is_reserv (fields_name)) {  					fields_name = "\"" + fields_name + "\"";  				}  				//Извлекаем тип данных  				string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  				if (fr_a [2].ToString () == "0") {  					//входной  					if (fields_in == "") {  						fields_in += "( " + fields_name + " " + field_type;  					}  					else {  						fields_in += "'\n " + fields_name + " " + field_type;  					}  				}  				else {  					//значит выходной  					if (!is_out) {  						//ставим флаг' что есть выходные параметры  						is_out = true;  					}  					if (fields_out == "") {  						fields_out += "returns ( " + fields_name + " " + field_type;  					}  					else {  						fields_out += "'\n " + fields_name + " " + field_type;  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	//теперь соединяем   	if (fields_in != "") {  		fields_in += "\n )";  	}  	if (fields_out != "") {  		fields_out += "\n )";  	}  	dll_command += fields_in + fields_out + "\n AS\n";  	//Добавляем содержимое  	try {  		using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  			fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_b.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  				while (fr_b.Read ()) {  					dll_command += fr_b.GetString (0);  					//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  				}  				fr_b.Dispose ();  			}  			fcon_b.Dispose ();  		}  	}  	catch (Exception ex) {  		MessageBox.Show (ex.Message);  	}  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	com_procedures_content.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter procedure ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "\n";  	}  	//Список полей  	string fields_in = "";  	string fields_out = "";  	bool is_out = false;  	using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				//резервное?  				var fields_name = fr_a [0].ToString ().Trim ();  				if (is_reserv (fields_name)) {  					fields_name = "\"" + fields_name + "\"";  				}  				//Извлекаем тип данных  				string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  				if (fr_a [2].ToString () == "0") {  					//входной  					if (fields_in == "") {  						fields_in += "( " + fields_name + " " + field_type;  					}  					else {  						fields_in += "'\n " + fields_name + " " + field_type;  					}  				}  				else {  					//значит выходной  					if (!is_out) {  						//ставим флаг' что есть выходные параметры  						is_out = true;  					}  					if (fields_out == "") {  						fields_out += "returns ( " + fields_name + " " + field_type;  					}  					else {  						fields_out += "'\n " + fields_name + " " + field_type;  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	//теперь соединяем   	if (fields_in != "") {  		fields_in += "\n )";  	}  	if (fields_out != "") {  		fields_out += "\n )";  	}  	dll_command += fields_in + fields_out + "\n AS\n";  	//Добавляем содержимое  	try {  		using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  			fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_b.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  				while (fr_b.Read ()) {  					dll_command += fr_b.GetString (0);  					//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  				}  				fr_b.Dispose ();  			}  			fcon_b.Dispose ();  		}  	}  	catch (Exception ex) {  		MessageBox.Show (ex.Message);  	}  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	com_procedures_content.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter procedure ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "\n";  	}  	//Список полей  	string fields_in = "";  	string fields_out = "";  	bool is_out = false;  	using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				//резервное?  				var fields_name = fr_a [0].ToString ().Trim ();  				if (is_reserv (fields_name)) {  					fields_name = "\"" + fields_name + "\"";  				}  				//Извлекаем тип данных  				string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  				if (fr_a [2].ToString () == "0") {  					//входной  					if (fields_in == "") {  						fields_in += "( " + fields_name + " " + field_type;  					}  					else {  						fields_in += "'\n " + fields_name + " " + field_type;  					}  				}  				else {  					//значит выходной  					if (!is_out) {  						//ставим флаг' что есть выходные параметры  						is_out = true;  					}  					if (fields_out == "") {  						fields_out += "returns ( " + fields_name + " " + field_type;  					}  					else {  						fields_out += "'\n " + fields_name + " " + field_type;  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	//теперь соединяем   	if (fields_in != "") {  		fields_in += "\n )";  	}  	if (fields_out != "") {  		fields_out += "\n )";  	}  	dll_command += fields_in + fields_out + "\n AS\n";  	//Добавляем содержимое  	try {  		using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  			fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_b.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  				while (fr_b.Read ()) {  					dll_command += fr_b.GetString (0);  					//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  				}  				fr_b.Dispose ();  			}  			fcon_b.Dispose ();  		}  	}  	catch (Exception ex) {  		MessageBox.Show (ex.Message);  	}  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	com_procedures_content.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter procedure ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "\n";  	}  	//Список полей  	string fields_in = "";  	string fields_out = "";  	bool is_out = false;  	using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				//резервное?  				var fields_name = fr_a [0].ToString ().Trim ();  				if (is_reserv (fields_name)) {  					fields_name = "\"" + fields_name + "\"";  				}  				//Извлекаем тип данных  				string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  				if (fr_a [2].ToString () == "0") {  					//входной  					if (fields_in == "") {  						fields_in += "( " + fields_name + " " + field_type;  					}  					else {  						fields_in += "'\n " + fields_name + " " + field_type;  					}  				}  				else {  					//значит выходной  					if (!is_out) {  						//ставим флаг' что есть выходные параметры  						is_out = true;  					}  					if (fields_out == "") {  						fields_out += "returns ( " + fields_name + " " + field_type;  					}  					else {  						fields_out += "'\n " + fields_name + " " + field_type;  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	//теперь соединяем   	if (fields_in != "") {  		fields_in += "\n )";  	}  	if (fields_out != "") {  		fields_out += "\n )";  	}  	dll_command += fields_in + fields_out + "\n AS\n";  	//Добавляем содержимое  	try {  		using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  			fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_b.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  				while (fr_b.Read ()) {  					dll_command += fr_b.GetString (0);  					//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  				}  				fr_b.Dispose ();  			}  			fcon_b.Dispose ();  		}  	}  	catch (Exception ex) {  		MessageBox.Show (ex.Message);  	}  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	com_procedures_content.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter procedure ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "\n";  	}  	//Список полей  	string fields_in = "";  	string fields_out = "";  	bool is_out = false;  	using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				//резервное?  				var fields_name = fr_a [0].ToString ().Trim ();  				if (is_reserv (fields_name)) {  					fields_name = "\"" + fields_name + "\"";  				}  				//Извлекаем тип данных  				string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  				if (fr_a [2].ToString () == "0") {  					//входной  					if (fields_in == "") {  						fields_in += "( " + fields_name + " " + field_type;  					}  					else {  						fields_in += "'\n " + fields_name + " " + field_type;  					}  				}  				else {  					//значит выходной  					if (!is_out) {  						//ставим флаг' что есть выходные параметры  						is_out = true;  					}  					if (fields_out == "") {  						fields_out += "returns ( " + fields_name + " " + field_type;  					}  					else {  						fields_out += "'\n " + fields_name + " " + field_type;  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	//теперь соединяем   	if (fields_in != "") {  		fields_in += "\n )";  	}  	if (fields_out != "") {  		fields_out += "\n )";  	}  	dll_command += fields_in + fields_out + "\n AS\n";  	//Добавляем содержимое  	try {  		using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  			fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_b.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  				while (fr_b.Read ()) {  					dll_command += fr_b.GetString (0);  					//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  				}  				fr_b.Dispose ();  			}  			fcon_b.Dispose ();  		}  	}  	catch (Exception ex) {  		MessageBox.Show (ex.Message);  	}  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	com_procedures_content.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter procedure ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "\n";  	}  	//Список полей  	string fields_in = "";  	string fields_out = "";  	bool is_out = false;  	using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				//резервное?  				var fields_name = fr_a [0].ToString ().Trim ();  				if (is_reserv (fields_name)) {  					fields_name = "\"" + fields_name + "\"";  				}  				//Извлекаем тип данных  				string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  				if (fr_a [2].ToString () == "0") {  					//входной  					if (fields_in == "") {  						fields_in += "( " + fields_name + " " + field_type;  					}  					else {  						fields_in += "'\n " + fields_name + " " + field_type;  					}  				}  				else {  					//значит выходной  					if (!is_out) {  						//ставим флаг' что есть выходные параметры  						is_out = true;  					}  					if (fields_out == "") {  						fields_out += "returns ( " + fields_name + " " + field_type;  					}  					else {  						fields_out += "'\n " + fields_name + " " + field_type;  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	//теперь соединяем   	if (fields_in != "") {  		fields_in += "\n )";  	}  	if (fields_out != "") {  		fields_out += "\n )";  	}  	dll_command += fields_in + fields_out + "\n AS\n";  	//Добавляем содержимое  	try {  		using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  			fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_b.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  				while (fr_b.Read ()) {  					dll_command += fr_b.GetString (0);  					//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  				}  				fr_b.Dispose ();  			}  			fcon_b.Dispose ();  		}  	}  	catch (Exception ex) {  		MessageBox.Show (ex.Message);  	}  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	com_procedures_content.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter procedure ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "\n";  	}  	//Список полей  	string fields_in = "";  	string fields_out = "";  	bool is_out = false;  	using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				//резервное?  				var fields_name = fr_a [0].ToString ().Trim ();  				if (is_reserv (fields_name)) {  					fields_name = "\"" + fields_name + "\"";  				}  				//Извлекаем тип данных  				string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  				if (fr_a [2].ToString () == "0") {  					//входной  					if (fields_in == "") {  						fields_in += "( " + fields_name + " " + field_type;  					}  					else {  						fields_in += "'\n " + fields_name + " " + field_type;  					}  				}  				else {  					//значит выходной  					if (!is_out) {  						//ставим флаг' что есть выходные параметры  						is_out = true;  					}  					if (fields_out == "") {  						fields_out += "returns ( " + fields_name + " " + field_type;  					}  					else {  						fields_out += "'\n " + fields_name + " " + field_type;  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	//теперь соединяем   	if (fields_in != "") {  		fields_in += "\n )";  	}  	if (fields_out != "") {  		fields_out += "\n )";  	}  	dll_command += fields_in + fields_out + "\n AS\n";  	//Добавляем содержимое  	try {  		using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  			fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_b.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  				while (fr_b.Read ()) {  					dll_command += fr_b.GetString (0);  					//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  				}  				fr_b.Dispose ();  			}  			fcon_b.Dispose ();  		}  	}  	catch (Exception ex) {  		MessageBox.Show (ex.Message);  	}  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	com_procedures_content.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter procedure ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "\n";  	}  	//Список полей  	string fields_in = "";  	string fields_out = "";  	bool is_out = false;  	using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				//резервное?  				var fields_name = fr_a [0].ToString ().Trim ();  				if (is_reserv (fields_name)) {  					fields_name = "\"" + fields_name + "\"";  				}  				//Извлекаем тип данных  				string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  				if (fr_a [2].ToString () == "0") {  					//входной  					if (fields_in == "") {  						fields_in += "( " + fields_name + " " + field_type;  					}  					else {  						fields_in += "'\n " + fields_name + " " + field_type;  					}  				}  				else {  					//значит выходной  					if (!is_out) {  						//ставим флаг' что есть выходные параметры  						is_out = true;  					}  					if (fields_out == "") {  						fields_out += "returns ( " + fields_name + " " + field_type;  					}  					else {  						fields_out += "'\n " + fields_name + " " + field_type;  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	//теперь соединяем   	if (fields_in != "") {  		fields_in += "\n )";  	}  	if (fields_out != "") {  		fields_out += "\n )";  	}  	dll_command += fields_in + fields_out + "\n AS\n";  	//Добавляем содержимое  	try {  		using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  			fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_b.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  				while (fr_b.Read ()) {  					dll_command += fr_b.GetString (0);  					//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  				}  				fr_b.Dispose ();  			}  			fcon_b.Dispose ();  		}  	}  	catch (Exception ex) {  		MessageBox.Show (ex.Message);  	}  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	com_procedures_content.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter procedure ";  	if (is_reserv (fr [0].ToString ())) {  		dll_command += "\"" + fr [0].ToString () + "\"" + "\n";  	}  	else {  		dll_command += fr [0].ToString () + "\n";  	}  	//Список полей  	string fields_in = "";  	string fields_out = "";  	bool is_out = false;  	using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  		fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_a.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  			while (fr_a.Read ()) {  				//резервное?  				var fields_name = fr_a [0].ToString ().Trim ();  				if (is_reserv (fields_name)) {  					fields_name = "\"" + fields_name + "\"";  				}  				//Извлекаем тип данных  				string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  				//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  				if (fr_a [2].ToString () == "0") {  					//входной  					if (fields_in == "") {  						fields_in += "( " + fields_name + " " + field_type;  					}  					else {  						fields_in += "'\n " + fields_name + " " + field_type;  					}  				}  				else {  					//значит выходной  					if (!is_out) {  						//ставим флаг' что есть выходные параметры  						is_out = true;  					}  					if (fields_out == "") {  						fields_out += "returns ( " + fields_name + " " + field_type;  					}  					else {  						fields_out += "'\n " + fields_name + " " + field_type;  					}  				}  			}  			fr_a.Dispose ();  		}  		fcon_a.Dispose ();  	}  	//теперь соединяем   	if (fields_in != "") {  		fields_in += "\n )";  	}  	if (fields_out != "") {  		fields_out += "\n )";  	}  	dll_command += fields_in + fields_out + "\n AS\n";  	//Добавляем содержимое  	try {  		using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  			fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_b.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  				while (fr_b.Read ()) {  					dll_command += fr_b.GetString (0);  					//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  				}  				fr_b.Dispose ();  			}  			fcon_b.Dispose ();  		}  	}  	catch (Exception ex) {  		MessageBox.Show (ex.Message);  	}  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	com_procedures_content.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			//резервное?  			var fields_name = fr_a [0].ToString ().Trim ();  			if (is_reserv (fields_name)) {  				fields_name = "\"" + fields_name + "\"";  			}  			//Извлекаем тип данных  			string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  			if (fr_a [2].ToString () == "0") {  				//входной  				if (fields_in == "") {  					fields_in += "( " + fields_name + " " + field_type;  				}  				else {  					fields_in += "'\n " + fields_name + " " + field_type;  				}  			}  			else {  				//значит выходной  				if (!is_out) {  					//ставим флаг' что есть выходные параметры  					is_out = true;  				}  				if (fields_out == "") {  					fields_out += "returns ( " + fields_name + " " + field_type;  				}  				else {  					fields_out += "'\n " + fields_name + " " + field_type;  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			//резервное?  			var fields_name = fr_a [0].ToString ().Trim ();  			if (is_reserv (fields_name)) {  				fields_name = "\"" + fields_name + "\"";  			}  			//Извлекаем тип данных  			string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  			if (fr_a [2].ToString () == "0") {  				//входной  				if (fields_in == "") {  					fields_in += "( " + fields_name + " " + field_type;  				}  				else {  					fields_in += "'\n " + fields_name + " " + field_type;  				}  			}  			else {  				//значит выходной  				if (!is_out) {  					//ставим флаг' что есть выходные параметры  					is_out = true;  				}  				if (fields_out == "") {  					fields_out += "returns ( " + fields_name + " " + field_type;  				}  				else {  					fields_out += "'\n " + fields_name + " " + field_type;  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			//резервное?  			var fields_name = fr_a [0].ToString ().Trim ();  			if (is_reserv (fields_name)) {  				fields_name = "\"" + fields_name + "\"";  			}  			//Извлекаем тип данных  			string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  			if (fr_a [2].ToString () == "0") {  				//входной  				if (fields_in == "") {  					fields_in += "( " + fields_name + " " + field_type;  				}  				else {  					fields_in += "'\n " + fields_name + " " + field_type;  				}  			}  			else {  				//значит выходной  				if (!is_out) {  					//ставим флаг' что есть выходные параметры  					is_out = true;  				}  				if (fields_out == "") {  					fields_out += "returns ( " + fields_name + " " + field_type;  				}  				else {  					fields_out += "'\n " + fields_name + " " + field_type;  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			//резервное?  			var fields_name = fr_a [0].ToString ().Trim ();  			if (is_reserv (fields_name)) {  				fields_name = "\"" + fields_name + "\"";  			}  			//Извлекаем тип данных  			string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  			if (fr_a [2].ToString () == "0") {  				//входной  				if (fields_in == "") {  					fields_in += "( " + fields_name + " " + field_type;  				}  				else {  					fields_in += "'\n " + fields_name + " " + field_type;  				}  			}  			else {  				//значит выходной  				if (!is_out) {  					//ставим флаг' что есть выходные параметры  					is_out = true;  				}  				if (fields_out == "") {  					fields_out += "returns ( " + fields_name + " " + field_type;  				}  				else {  					fields_out += "'\n " + fields_name + " " + field_type;  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			//резервное?  			var fields_name = fr_a [0].ToString ().Trim ();  			if (is_reserv (fields_name)) {  				fields_name = "\"" + fields_name + "\"";  			}  			//Извлекаем тип данных  			string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  			if (fr_a [2].ToString () == "0") {  				//входной  				if (fields_in == "") {  					fields_in += "( " + fields_name + " " + field_type;  				}  				else {  					fields_in += "'\n " + fields_name + " " + field_type;  				}  			}  			else {  				//значит выходной  				if (!is_out) {  					//ставим флаг' что есть выходные параметры  					is_out = true;  				}  				if (fields_out == "") {  					fields_out += "returns ( " + fields_name + " " + field_type;  				}  				else {  					fields_out += "'\n " + fields_name + " " + field_type;  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			//резервное?  			var fields_name = fr_a [0].ToString ().Trim ();  			if (is_reserv (fields_name)) {  				fields_name = "\"" + fields_name + "\"";  			}  			//Извлекаем тип данных  			string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  			if (fr_a [2].ToString () == "0") {  				//входной  				if (fields_in == "") {  					fields_in += "( " + fields_name + " " + field_type;  				}  				else {  					fields_in += "'\n " + fields_name + " " + field_type;  				}  			}  			else {  				//значит выходной  				if (!is_out) {  					//ставим флаг' что есть выходные параметры  					is_out = true;  				}  				if (fields_out == "") {  					fields_out += "returns ( " + fields_name + " " + field_type;  				}  				else {  					fields_out += "'\n " + fields_name + " " + field_type;  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			//резервное?  			var fields_name = fr_a [0].ToString ().Trim ();  			if (is_reserv (fields_name)) {  				fields_name = "\"" + fields_name + "\"";  			}  			//Извлекаем тип данных  			string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  			if (fr_a [2].ToString () == "0") {  				//входной  				if (fields_in == "") {  					fields_in += "( " + fields_name + " " + field_type;  				}  				else {  					fields_in += "'\n " + fields_name + " " + field_type;  				}  			}  			else {  				//значит выходной  				if (!is_out) {  					//ставим флаг' что есть выходные параметры  					is_out = true;  				}  				if (fields_out == "") {  					fields_out += "returns ( " + fields_name + " " + field_type;  				}  				else {  					fields_out += "'\n " + fields_name + " " + field_type;  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbCommand fcon_a = new FbCommand (sql_procedures_f' fb' ft)) {  	fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_a.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  		while (fr_a.Read ()) {  			//резервное?  			var fields_name = fr_a [0].ToString ().Trim ();  			if (is_reserv (fields_name)) {  				fields_name = "\"" + fields_name + "\"";  			}  			//Извлекаем тип данных  			string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  			//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  			if (fr_a [2].ToString () == "0") {  				//входной  				if (fields_in == "") {  					fields_in += "( " + fields_name + " " + field_type;  				}  				else {  					fields_in += "'\n " + fields_name + " " + field_type;  				}  			}  			else {  				//значит выходной  				if (!is_out) {  					//ставим флаг' что есть выходные параметры  					is_out = true;  				}  				if (fields_out == "") {  					fields_out += "returns ( " + fields_name + " " + field_type;  				}  				else {  					fields_out += "'\n " + fields_name + " " + field_type;  				}  			}  		}  		fr_a.Dispose ();  	}  	fcon_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: fcon_a.Parameters.Add ("@a"' FbDbType.VarChar' 31);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		//резервное?  		var fields_name = fr_a [0].ToString ().Trim ();  		if (is_reserv (fields_name)) {  			fields_name = "\"" + fields_name + "\"";  		}  		//Извлекаем тип данных  		string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  		if (fr_a [2].ToString () == "0") {  			//входной  			if (fields_in == "") {  				fields_in += "( " + fields_name + " " + field_type;  			}  			else {  				fields_in += "'\n " + fields_name + " " + field_type;  			}  		}  		else {  			//значит выходной  			if (!is_out) {  				//ставим флаг' что есть выходные параметры  				is_out = true;  			}  			if (fields_out == "") {  				fields_out += "returns ( " + fields_name + " " + field_type;  			}  			else {  				fields_out += "'\n " + fields_name + " " + field_type;  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		//резервное?  		var fields_name = fr_a [0].ToString ().Trim ();  		if (is_reserv (fields_name)) {  			fields_name = "\"" + fields_name + "\"";  		}  		//Извлекаем тип данных  		string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  		if (fr_a [2].ToString () == "0") {  			//входной  			if (fields_in == "") {  				fields_in += "( " + fields_name + " " + field_type;  			}  			else {  				fields_in += "'\n " + fields_name + " " + field_type;  			}  		}  		else {  			//значит выходной  			if (!is_out) {  				//ставим флаг' что есть выходные параметры  				is_out = true;  			}  			if (fields_out == "") {  				fields_out += "returns ( " + fields_name + " " + field_type;  			}  			else {  				fields_out += "'\n " + fields_name + " " + field_type;  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		//резервное?  		var fields_name = fr_a [0].ToString ().Trim ();  		if (is_reserv (fields_name)) {  			fields_name = "\"" + fields_name + "\"";  		}  		//Извлекаем тип данных  		string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  		if (fr_a [2].ToString () == "0") {  			//входной  			if (fields_in == "") {  				fields_in += "( " + fields_name + " " + field_type;  			}  			else {  				fields_in += "'\n " + fields_name + " " + field_type;  			}  		}  		else {  			//значит выходной  			if (!is_out) {  				//ставим флаг' что есть выходные параметры  				is_out = true;  			}  			if (fields_out == "") {  				fields_out += "returns ( " + fields_name + " " + field_type;  			}  			else {  				fields_out += "'\n " + fields_name + " " + field_type;  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		//резервное?  		var fields_name = fr_a [0].ToString ().Trim ();  		if (is_reserv (fields_name)) {  			fields_name = "\"" + fields_name + "\"";  		}  		//Извлекаем тип данных  		string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  		if (fr_a [2].ToString () == "0") {  			//входной  			if (fields_in == "") {  				fields_in += "( " + fields_name + " " + field_type;  			}  			else {  				fields_in += "'\n " + fields_name + " " + field_type;  			}  		}  		else {  			//значит выходной  			if (!is_out) {  				//ставим флаг' что есть выходные параметры  				is_out = true;  			}  			if (fields_out == "") {  				fields_out += "returns ( " + fields_name + " " + field_type;  			}  			else {  				fields_out += "'\n " + fields_name + " " + field_type;  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		//резервное?  		var fields_name = fr_a [0].ToString ().Trim ();  		if (is_reserv (fields_name)) {  			fields_name = "\"" + fields_name + "\"";  		}  		//Извлекаем тип данных  		string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  		if (fr_a [2].ToString () == "0") {  			//входной  			if (fields_in == "") {  				fields_in += "( " + fields_name + " " + field_type;  			}  			else {  				fields_in += "'\n " + fields_name + " " + field_type;  			}  		}  		else {  			//значит выходной  			if (!is_out) {  				//ставим флаг' что есть выходные параметры  				is_out = true;  			}  			if (fields_out == "") {  				fields_out += "returns ( " + fields_name + " " + field_type;  			}  			else {  				fields_out += "'\n " + fields_name + " " + field_type;  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		//резервное?  		var fields_name = fr_a [0].ToString ().Trim ();  		if (is_reserv (fields_name)) {  			fields_name = "\"" + fields_name + "\"";  		}  		//Извлекаем тип данных  		string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  		if (fr_a [2].ToString () == "0") {  			//входной  			if (fields_in == "") {  				fields_in += "( " + fields_name + " " + field_type;  			}  			else {  				fields_in += "'\n " + fields_name + " " + field_type;  			}  		}  		else {  			//значит выходной  			if (!is_out) {  				//ставим флаг' что есть выходные параметры  				is_out = true;  			}  			if (fields_out == "") {  				fields_out += "returns ( " + fields_name + " " + field_type;  			}  			else {  				fields_out += "'\n " + fields_name + " " + field_type;  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbDataReader fr_a = fcon_a.ExecuteReader ()) {  	while (fr_a.Read ()) {  		//резервное?  		var fields_name = fr_a [0].ToString ().Trim ();  		if (is_reserv (fields_name)) {  			fields_name = "\"" + fields_name + "\"";  		}  		//Извлекаем тип данных  		string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  		//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  		if (fr_a [2].ToString () == "0") {  			//входной  			if (fields_in == "") {  				fields_in += "( " + fields_name + " " + field_type;  			}  			else {  				fields_in += "'\n " + fields_name + " " + field_type;  			}  		}  		else {  			//значит выходной  			if (!is_out) {  				//ставим флаг' что есть выходные параметры  				is_out = true;  			}  			if (fields_out == "") {  				fields_out += "returns ( " + fields_name + " " + field_type;  			}  			else {  				fields_out += "'\n " + fields_name + " " + field_type;  			}  		}  	}  	fr_a.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: while (fr_a.Read ()) {  	//резервное?  	var fields_name = fr_a [0].ToString ().Trim ();  	if (is_reserv (fields_name)) {  		fields_name = "\"" + fields_name + "\"";  	}  	//Извлекаем тип данных  	string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  	if (fr_a [2].ToString () == "0") {  		//входной  		if (fields_in == "") {  			fields_in += "( " + fields_name + " " + field_type;  		}  		else {  			fields_in += "'\n " + fields_name + " " + field_type;  		}  	}  	else {  		//значит выходной  		if (!is_out) {  			//ставим флаг' что есть выходные параметры  			is_out = true;  		}  		if (fields_out == "") {  			fields_out += "returns ( " + fields_name + " " + field_type;  		}  		else {  			fields_out += "'\n " + fields_name + " " + field_type;  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: while (fr_a.Read ()) {  	//резервное?  	var fields_name = fr_a [0].ToString ().Trim ();  	if (is_reserv (fields_name)) {  		fields_name = "\"" + fields_name + "\"";  	}  	//Извлекаем тип данных  	string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  	if (fr_a [2].ToString () == "0") {  		//входной  		if (fields_in == "") {  			fields_in += "( " + fields_name + " " + field_type;  		}  		else {  			fields_in += "'\n " + fields_name + " " + field_type;  		}  	}  	else {  		//значит выходной  		if (!is_out) {  			//ставим флаг' что есть выходные параметры  			is_out = true;  		}  		if (fields_out == "") {  			fields_out += "returns ( " + fields_name + " " + field_type;  		}  		else {  			fields_out += "'\n " + fields_name + " " + field_type;  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: while (fr_a.Read ()) {  	//резервное?  	var fields_name = fr_a [0].ToString ().Trim ();  	if (is_reserv (fields_name)) {  		fields_name = "\"" + fields_name + "\"";  	}  	//Извлекаем тип данных  	string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  	if (fr_a [2].ToString () == "0") {  		//входной  		if (fields_in == "") {  			fields_in += "( " + fields_name + " " + field_type;  		}  		else {  			fields_in += "'\n " + fields_name + " " + field_type;  		}  	}  	else {  		//значит выходной  		if (!is_out) {  			//ставим флаг' что есть выходные параметры  			is_out = true;  		}  		if (fields_out == "") {  			fields_out += "returns ( " + fields_name + " " + field_type;  		}  		else {  			fields_out += "'\n " + fields_name + " " + field_type;  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: while (fr_a.Read ()) {  	//резервное?  	var fields_name = fr_a [0].ToString ().Trim ();  	if (is_reserv (fields_name)) {  		fields_name = "\"" + fields_name + "\"";  	}  	//Извлекаем тип данных  	string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  	if (fr_a [2].ToString () == "0") {  		//входной  		if (fields_in == "") {  			fields_in += "( " + fields_name + " " + field_type;  		}  		else {  			fields_in += "'\n " + fields_name + " " + field_type;  		}  	}  	else {  		//значит выходной  		if (!is_out) {  			//ставим флаг' что есть выходные параметры  			is_out = true;  		}  		if (fields_out == "") {  			fields_out += "returns ( " + fields_name + " " + field_type;  		}  		else {  			fields_out += "'\n " + fields_name + " " + field_type;  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: while (fr_a.Read ()) {  	//резервное?  	var fields_name = fr_a [0].ToString ().Trim ();  	if (is_reserv (fields_name)) {  		fields_name = "\"" + fields_name + "\"";  	}  	//Извлекаем тип данных  	string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  	if (fr_a [2].ToString () == "0") {  		//входной  		if (fields_in == "") {  			fields_in += "( " + fields_name + " " + field_type;  		}  		else {  			fields_in += "'\n " + fields_name + " " + field_type;  		}  	}  	else {  		//значит выходной  		if (!is_out) {  			//ставим флаг' что есть выходные параметры  			is_out = true;  		}  		if (fields_out == "") {  			fields_out += "returns ( " + fields_name + " " + field_type;  		}  		else {  			fields_out += "'\n " + fields_name + " " + field_type;  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: while (fr_a.Read ()) {  	//резервное?  	var fields_name = fr_a [0].ToString ().Trim ();  	if (is_reserv (fields_name)) {  		fields_name = "\"" + fields_name + "\"";  	}  	//Извлекаем тип данных  	string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  	if (fr_a [2].ToString () == "0") {  		//входной  		if (fields_in == "") {  			fields_in += "( " + fields_name + " " + field_type;  		}  		else {  			fields_in += "'\n " + fields_name + " " + field_type;  		}  	}  	else {  		//значит выходной  		if (!is_out) {  			//ставим флаг' что есть выходные параметры  			is_out = true;  		}  		if (fields_out == "") {  			fields_out += "returns ( " + fields_name + " " + field_type;  		}  		else {  			fields_out += "'\n " + fields_name + " " + field_type;  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: while (fr_a.Read ()) {  	//резервное?  	var fields_name = fr_a [0].ToString ().Trim ();  	if (is_reserv (fields_name)) {  		fields_name = "\"" + fields_name + "\"";  	}  	//Извлекаем тип данных  	string field_type = get_field_type (fr_a [3].ToString ()' fr_a [4].ToString ()' fr_a [5].ToString ()' fr_a [6].ToString ()' fr_a [7].ToString ()' fr_a [8].ToString ());  	//теперь в зависимости от типа параметра (вх/вых) - запишем в определенный блок  	if (fr_a [2].ToString () == "0") {  		//входной  		if (fields_in == "") {  			fields_in += "( " + fields_name + " " + field_type;  		}  		else {  			fields_in += "'\n " + fields_name + " " + field_type;  		}  	}  	else {  		//значит выходной  		if (!is_out) {  			//ставим флаг' что есть выходные параметры  			is_out = true;  		}  		if (fields_out == "") {  			fields_out += "returns ( " + fields_name + " " + field_type;  		}  		else {  			fields_out += "'\n " + fields_name + " " + field_type;  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: if (fr_a [2].ToString () == "0") {  	//входной  	if (fields_in == "") {  		fields_in += "( " + fields_name + " " + field_type;  	}  	else {  		fields_in += "'\n " + fields_name + " " + field_type;  	}  }  else {  	//значит выходной  	if (!is_out) {  		//ставим флаг' что есть выходные параметры  		is_out = true;  	}  	if (fields_out == "") {  		fields_out += "returns ( " + fields_name + " " + field_type;  	}  	else {  		fields_out += "'\n " + fields_name + " " + field_type;  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: try {  	using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  		fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_b.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  			while (fr_b.Read ()) {  				dll_command += fr_b.GetString (0);  				//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  			}  			fr_b.Dispose ();  		}  		fcon_b.Dispose ();  	}  }  catch (Exception ex) {  	MessageBox.Show (ex.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: using (FbCommand fcon_b = new FbCommand (sql_procedures_b' fb' ft)) {  	fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_b.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  		while (fr_b.Read ()) {  			dll_command += fr_b.GetString (0);  			//.Replace("TRIM"' "TRIM_").Replace("Trim"' "TRIM_").Replace("trim"' "TRIM_").Replace("IIF"' "IIF_").Replace("iif"' "IIF_").Replace("Iif"' "IIF_");  		}  		fr_b.Dispose ();  	}  	fcon_b.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PROCEDURES,The following statement contains a magic number: fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  						//активность  						if (fr [5].ToString ().Trim () == "1") {  							dll_command += "\n" + "INACTIVE";  						}  						else {  							dll_command += "\n" + "ACTIVE";  						}  						//теперь узнаем что за тип триггера  						switch (fr [3].ToString ().Trim ()) {  						case "1":  							dll_command += " before insert ";  							break;  						case "2":  							dll_command += " after insert ";  							break;  						case "3":  							dll_command += " before update ";  							break;  						case "4":  							dll_command += " after update ";  							break;  						case "5":  							dll_command += " before delete ";  							break;  						case "6":  							dll_command += " after delete ";  							break;  						case "17":  							dll_command += " before insert or update ";  							break;  						case "25":  							dll_command += " before insert or delete";  							break;  						case "113":  							dll_command += " before insert or update or delete ";  							break;  						case "27":  							dll_command += " before update or delete ";  							break;  						case "18":  							dll_command += " after insert or update ";  							break;  						case "26":  							dll_command += " after insert or delete";  							break;  						case "114":  							dll_command += " after insert or update or delete ";  							break;  						case "28":  							dll_command += " after update or delete ";  							break;  						}  						//позиция триггера  						dll_command += " position " + fr [2].ToString ().Trim ();  						//Добавляем содержимое  						using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  							fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_b.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  								while (fr_b.Read ()) {  									dll_command += "\n" + fr_b.GetString (0);  								}  								fr_b.Dispose ();  							}  							fcon_b.Dispose ();  						}  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						com_triggers_content.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("TRIGGERS Content");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  						//активность  						if (fr [5].ToString ().Trim () == "1") {  							dll_command += "\n" + "INACTIVE";  						}  						else {  							dll_command += "\n" + "ACTIVE";  						}  						//теперь узнаем что за тип триггера  						switch (fr [3].ToString ().Trim ()) {  						case "1":  							dll_command += " before insert ";  							break;  						case "2":  							dll_command += " after insert ";  							break;  						case "3":  							dll_command += " before update ";  							break;  						case "4":  							dll_command += " after update ";  							break;  						case "5":  							dll_command += " before delete ";  							break;  						case "6":  							dll_command += " after delete ";  							break;  						case "17":  							dll_command += " before insert or update ";  							break;  						case "25":  							dll_command += " before insert or delete";  							break;  						case "113":  							dll_command += " before insert or update or delete ";  							break;  						case "27":  							dll_command += " before update or delete ";  							break;  						case "18":  							dll_command += " after insert or update ";  							break;  						case "26":  							dll_command += " after insert or delete";  							break;  						case "114":  							dll_command += " after insert or update or delete ";  							break;  						case "28":  							dll_command += " after update or delete ";  							break;  						}  						//позиция триггера  						dll_command += " position " + fr [2].ToString ().Trim ();  						//Добавляем содержимое  						using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  							fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_b.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  								while (fr_b.Read ()) {  									dll_command += "\n" + fr_b.GetString (0);  								}  								fr_b.Dispose ();  							}  							fcon_b.Dispose ();  						}  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						com_triggers_content.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("TRIGGERS Content");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  						//активность  						if (fr [5].ToString ().Trim () == "1") {  							dll_command += "\n" + "INACTIVE";  						}  						else {  							dll_command += "\n" + "ACTIVE";  						}  						//теперь узнаем что за тип триггера  						switch (fr [3].ToString ().Trim ()) {  						case "1":  							dll_command += " before insert ";  							break;  						case "2":  							dll_command += " after insert ";  							break;  						case "3":  							dll_command += " before update ";  							break;  						case "4":  							dll_command += " after update ";  							break;  						case "5":  							dll_command += " before delete ";  							break;  						case "6":  							dll_command += " after delete ";  							break;  						case "17":  							dll_command += " before insert or update ";  							break;  						case "25":  							dll_command += " before insert or delete";  							break;  						case "113":  							dll_command += " before insert or update or delete ";  							break;  						case "27":  							dll_command += " before update or delete ";  							break;  						case "18":  							dll_command += " after insert or update ";  							break;  						case "26":  							dll_command += " after insert or delete";  							break;  						case "114":  							dll_command += " after insert or update or delete ";  							break;  						case "28":  							dll_command += " after update or delete ";  							break;  						}  						//позиция триггера  						dll_command += " position " + fr [2].ToString ().Trim ();  						//Добавляем содержимое  						using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  							fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_b.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  								while (fr_b.Read ()) {  									dll_command += "\n" + fr_b.GetString (0);  								}  								fr_b.Dispose ();  							}  							fcon_b.Dispose ();  						}  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						com_triggers_content.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("TRIGGERS Content");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  						//активность  						if (fr [5].ToString ().Trim () == "1") {  							dll_command += "\n" + "INACTIVE";  						}  						else {  							dll_command += "\n" + "ACTIVE";  						}  						//теперь узнаем что за тип триггера  						switch (fr [3].ToString ().Trim ()) {  						case "1":  							dll_command += " before insert ";  							break;  						case "2":  							dll_command += " after insert ";  							break;  						case "3":  							dll_command += " before update ";  							break;  						case "4":  							dll_command += " after update ";  							break;  						case "5":  							dll_command += " before delete ";  							break;  						case "6":  							dll_command += " after delete ";  							break;  						case "17":  							dll_command += " before insert or update ";  							break;  						case "25":  							dll_command += " before insert or delete";  							break;  						case "113":  							dll_command += " before insert or update or delete ";  							break;  						case "27":  							dll_command += " before update or delete ";  							break;  						case "18":  							dll_command += " after insert or update ";  							break;  						case "26":  							dll_command += " after insert or delete";  							break;  						case "114":  							dll_command += " after insert or update or delete ";  							break;  						case "28":  							dll_command += " after update or delete ";  							break;  						}  						//позиция триггера  						dll_command += " position " + fr [2].ToString ().Trim ();  						//Добавляем содержимое  						using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  							fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_b.Parameters [0].Value = fr [0].ToString ();  							using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  								while (fr_b.Read ()) {  									dll_command += "\n" + fr_b.GetString (0);  								}  								fr_b.Dispose ();  							}  							fcon_b.Dispose ();  						}  						dll_command = regexTrim.Replace (dll_command' "TRIM_");  						dll_command = regexIIF.Replace (dll_command' "IIF_");  						com_triggers_content.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("TRIGGERS Content");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  					//активность  					if (fr [5].ToString ().Trim () == "1") {  						dll_command += "\n" + "INACTIVE";  					}  					else {  						dll_command += "\n" + "ACTIVE";  					}  					//теперь узнаем что за тип триггера  					switch (fr [3].ToString ().Trim ()) {  					case "1":  						dll_command += " before insert ";  						break;  					case "2":  						dll_command += " after insert ";  						break;  					case "3":  						dll_command += " before update ";  						break;  					case "4":  						dll_command += " after update ";  						break;  					case "5":  						dll_command += " before delete ";  						break;  					case "6":  						dll_command += " after delete ";  						break;  					case "17":  						dll_command += " before insert or update ";  						break;  					case "25":  						dll_command += " before insert or delete";  						break;  					case "113":  						dll_command += " before insert or update or delete ";  						break;  					case "27":  						dll_command += " before update or delete ";  						break;  					case "18":  						dll_command += " after insert or update ";  						break;  					case "26":  						dll_command += " after insert or delete";  						break;  					case "114":  						dll_command += " after insert or update or delete ";  						break;  					case "28":  						dll_command += " after update or delete ";  						break;  					}  					//позиция триггера  					dll_command += " position " + fr [2].ToString ().Trim ();  					//Добавляем содержимое  					using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  						fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_b.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  							while (fr_b.Read ()) {  								dll_command += "\n" + fr_b.GetString (0);  							}  							fr_b.Dispose ();  						}  						fcon_b.Dispose ();  					}  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					com_triggers_content.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("TRIGGERS Content");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  					//активность  					if (fr [5].ToString ().Trim () == "1") {  						dll_command += "\n" + "INACTIVE";  					}  					else {  						dll_command += "\n" + "ACTIVE";  					}  					//теперь узнаем что за тип триггера  					switch (fr [3].ToString ().Trim ()) {  					case "1":  						dll_command += " before insert ";  						break;  					case "2":  						dll_command += " after insert ";  						break;  					case "3":  						dll_command += " before update ";  						break;  					case "4":  						dll_command += " after update ";  						break;  					case "5":  						dll_command += " before delete ";  						break;  					case "6":  						dll_command += " after delete ";  						break;  					case "17":  						dll_command += " before insert or update ";  						break;  					case "25":  						dll_command += " before insert or delete";  						break;  					case "113":  						dll_command += " before insert or update or delete ";  						break;  					case "27":  						dll_command += " before update or delete ";  						break;  					case "18":  						dll_command += " after insert or update ";  						break;  					case "26":  						dll_command += " after insert or delete";  						break;  					case "114":  						dll_command += " after insert or update or delete ";  						break;  					case "28":  						dll_command += " after update or delete ";  						break;  					}  					//позиция триггера  					dll_command += " position " + fr [2].ToString ().Trim ();  					//Добавляем содержимое  					using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  						fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_b.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  							while (fr_b.Read ()) {  								dll_command += "\n" + fr_b.GetString (0);  							}  							fr_b.Dispose ();  						}  						fcon_b.Dispose ();  					}  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					com_triggers_content.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("TRIGGERS Content");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  					//активность  					if (fr [5].ToString ().Trim () == "1") {  						dll_command += "\n" + "INACTIVE";  					}  					else {  						dll_command += "\n" + "ACTIVE";  					}  					//теперь узнаем что за тип триггера  					switch (fr [3].ToString ().Trim ()) {  					case "1":  						dll_command += " before insert ";  						break;  					case "2":  						dll_command += " after insert ";  						break;  					case "3":  						dll_command += " before update ";  						break;  					case "4":  						dll_command += " after update ";  						break;  					case "5":  						dll_command += " before delete ";  						break;  					case "6":  						dll_command += " after delete ";  						break;  					case "17":  						dll_command += " before insert or update ";  						break;  					case "25":  						dll_command += " before insert or delete";  						break;  					case "113":  						dll_command += " before insert or update or delete ";  						break;  					case "27":  						dll_command += " before update or delete ";  						break;  					case "18":  						dll_command += " after insert or update ";  						break;  					case "26":  						dll_command += " after insert or delete";  						break;  					case "114":  						dll_command += " after insert or update or delete ";  						break;  					case "28":  						dll_command += " after update or delete ";  						break;  					}  					//позиция триггера  					dll_command += " position " + fr [2].ToString ().Trim ();  					//Добавляем содержимое  					using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  						fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_b.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  							while (fr_b.Read ()) {  								dll_command += "\n" + fr_b.GetString (0);  							}  							fr_b.Dispose ();  						}  						fcon_b.Dispose ();  					}  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					com_triggers_content.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("TRIGGERS Content");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  					//активность  					if (fr [5].ToString ().Trim () == "1") {  						dll_command += "\n" + "INACTIVE";  					}  					else {  						dll_command += "\n" + "ACTIVE";  					}  					//теперь узнаем что за тип триггера  					switch (fr [3].ToString ().Trim ()) {  					case "1":  						dll_command += " before insert ";  						break;  					case "2":  						dll_command += " after insert ";  						break;  					case "3":  						dll_command += " before update ";  						break;  					case "4":  						dll_command += " after update ";  						break;  					case "5":  						dll_command += " before delete ";  						break;  					case "6":  						dll_command += " after delete ";  						break;  					case "17":  						dll_command += " before insert or update ";  						break;  					case "25":  						dll_command += " before insert or delete";  						break;  					case "113":  						dll_command += " before insert or update or delete ";  						break;  					case "27":  						dll_command += " before update or delete ";  						break;  					case "18":  						dll_command += " after insert or update ";  						break;  					case "26":  						dll_command += " after insert or delete";  						break;  					case "114":  						dll_command += " after insert or update or delete ";  						break;  					case "28":  						dll_command += " after update or delete ";  						break;  					}  					//позиция триггера  					dll_command += " position " + fr [2].ToString ().Trim ();  					//Добавляем содержимое  					using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  						fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_b.Parameters [0].Value = fr [0].ToString ();  						using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  							while (fr_b.Read ()) {  								dll_command += "\n" + fr_b.GetString (0);  							}  							fr_b.Dispose ();  						}  						fcon_b.Dispose ();  					}  					dll_command = regexTrim.Replace (dll_command' "TRIM_");  					dll_command = regexIIF.Replace (dll_command' "IIF_");  					com_triggers_content.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("TRIGGERS Content");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  				//активность  				if (fr [5].ToString ().Trim () == "1") {  					dll_command += "\n" + "INACTIVE";  				}  				else {  					dll_command += "\n" + "ACTIVE";  				}  				//теперь узнаем что за тип триггера  				switch (fr [3].ToString ().Trim ()) {  				case "1":  					dll_command += " before insert ";  					break;  				case "2":  					dll_command += " after insert ";  					break;  				case "3":  					dll_command += " before update ";  					break;  				case "4":  					dll_command += " after update ";  					break;  				case "5":  					dll_command += " before delete ";  					break;  				case "6":  					dll_command += " after delete ";  					break;  				case "17":  					dll_command += " before insert or update ";  					break;  				case "25":  					dll_command += " before insert or delete";  					break;  				case "113":  					dll_command += " before insert or update or delete ";  					break;  				case "27":  					dll_command += " before update or delete ";  					break;  				case "18":  					dll_command += " after insert or update ";  					break;  				case "26":  					dll_command += " after insert or delete";  					break;  				case "114":  					dll_command += " after insert or update or delete ";  					break;  				case "28":  					dll_command += " after update or delete ";  					break;  				}  				//позиция триггера  				dll_command += " position " + fr [2].ToString ().Trim ();  				//Добавляем содержимое  				using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  					fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_b.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  						while (fr_b.Read ()) {  							dll_command += "\n" + fr_b.GetString (0);  						}  						fr_b.Dispose ();  					}  					fcon_b.Dispose ();  				}  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				com_triggers_content.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  				//активность  				if (fr [5].ToString ().Trim () == "1") {  					dll_command += "\n" + "INACTIVE";  				}  				else {  					dll_command += "\n" + "ACTIVE";  				}  				//теперь узнаем что за тип триггера  				switch (fr [3].ToString ().Trim ()) {  				case "1":  					dll_command += " before insert ";  					break;  				case "2":  					dll_command += " after insert ";  					break;  				case "3":  					dll_command += " before update ";  					break;  				case "4":  					dll_command += " after update ";  					break;  				case "5":  					dll_command += " before delete ";  					break;  				case "6":  					dll_command += " after delete ";  					break;  				case "17":  					dll_command += " before insert or update ";  					break;  				case "25":  					dll_command += " before insert or delete";  					break;  				case "113":  					dll_command += " before insert or update or delete ";  					break;  				case "27":  					dll_command += " before update or delete ";  					break;  				case "18":  					dll_command += " after insert or update ";  					break;  				case "26":  					dll_command += " after insert or delete";  					break;  				case "114":  					dll_command += " after insert or update or delete ";  					break;  				case "28":  					dll_command += " after update or delete ";  					break;  				}  				//позиция триггера  				dll_command += " position " + fr [2].ToString ().Trim ();  				//Добавляем содержимое  				using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  					fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_b.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  						while (fr_b.Read ()) {  							dll_command += "\n" + fr_b.GetString (0);  						}  						fr_b.Dispose ();  					}  					fcon_b.Dispose ();  				}  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				com_triggers_content.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  				//активность  				if (fr [5].ToString ().Trim () == "1") {  					dll_command += "\n" + "INACTIVE";  				}  				else {  					dll_command += "\n" + "ACTIVE";  				}  				//теперь узнаем что за тип триггера  				switch (fr [3].ToString ().Trim ()) {  				case "1":  					dll_command += " before insert ";  					break;  				case "2":  					dll_command += " after insert ";  					break;  				case "3":  					dll_command += " before update ";  					break;  				case "4":  					dll_command += " after update ";  					break;  				case "5":  					dll_command += " before delete ";  					break;  				case "6":  					dll_command += " after delete ";  					break;  				case "17":  					dll_command += " before insert or update ";  					break;  				case "25":  					dll_command += " before insert or delete";  					break;  				case "113":  					dll_command += " before insert or update or delete ";  					break;  				case "27":  					dll_command += " before update or delete ";  					break;  				case "18":  					dll_command += " after insert or update ";  					break;  				case "26":  					dll_command += " after insert or delete";  					break;  				case "114":  					dll_command += " after insert or update or delete ";  					break;  				case "28":  					dll_command += " after update or delete ";  					break;  				}  				//позиция триггера  				dll_command += " position " + fr [2].ToString ().Trim ();  				//Добавляем содержимое  				using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  					fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_b.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  						while (fr_b.Read ()) {  							dll_command += "\n" + fr_b.GetString (0);  						}  						fr_b.Dispose ();  					}  					fcon_b.Dispose ();  				}  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				com_triggers_content.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  				//активность  				if (fr [5].ToString ().Trim () == "1") {  					dll_command += "\n" + "INACTIVE";  				}  				else {  					dll_command += "\n" + "ACTIVE";  				}  				//теперь узнаем что за тип триггера  				switch (fr [3].ToString ().Trim ()) {  				case "1":  					dll_command += " before insert ";  					break;  				case "2":  					dll_command += " after insert ";  					break;  				case "3":  					dll_command += " before update ";  					break;  				case "4":  					dll_command += " after update ";  					break;  				case "5":  					dll_command += " before delete ";  					break;  				case "6":  					dll_command += " after delete ";  					break;  				case "17":  					dll_command += " before insert or update ";  					break;  				case "25":  					dll_command += " before insert or delete";  					break;  				case "113":  					dll_command += " before insert or update or delete ";  					break;  				case "27":  					dll_command += " before update or delete ";  					break;  				case "18":  					dll_command += " after insert or update ";  					break;  				case "26":  					dll_command += " after insert or delete";  					break;  				case "114":  					dll_command += " after insert or update or delete ";  					break;  				case "28":  					dll_command += " after update or delete ";  					break;  				}  				//позиция триггера  				dll_command += " position " + fr [2].ToString ().Trim ();  				//Добавляем содержимое  				using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  					fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_b.Parameters [0].Value = fr [0].ToString ();  					using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  						while (fr_b.Read ()) {  							dll_command += "\n" + fr_b.GetString (0);  						}  						fr_b.Dispose ();  					}  					fcon_b.Dispose ();  				}  				dll_command = regexTrim.Replace (dll_command' "TRIM_");  				dll_command = regexIIF.Replace (dll_command' "IIF_");  				com_triggers_content.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  			//активность  			if (fr [5].ToString ().Trim () == "1") {  				dll_command += "\n" + "INACTIVE";  			}  			else {  				dll_command += "\n" + "ACTIVE";  			}  			//теперь узнаем что за тип триггера  			switch (fr [3].ToString ().Trim ()) {  			case "1":  				dll_command += " before insert ";  				break;  			case "2":  				dll_command += " after insert ";  				break;  			case "3":  				dll_command += " before update ";  				break;  			case "4":  				dll_command += " after update ";  				break;  			case "5":  				dll_command += " before delete ";  				break;  			case "6":  				dll_command += " after delete ";  				break;  			case "17":  				dll_command += " before insert or update ";  				break;  			case "25":  				dll_command += " before insert or delete";  				break;  			case "113":  				dll_command += " before insert or update or delete ";  				break;  			case "27":  				dll_command += " before update or delete ";  				break;  			case "18":  				dll_command += " after insert or update ";  				break;  			case "26":  				dll_command += " after insert or delete";  				break;  			case "114":  				dll_command += " after insert or update or delete ";  				break;  			case "28":  				dll_command += " after update or delete ";  				break;  			}  			//позиция триггера  			dll_command += " position " + fr [2].ToString ().Trim ();  			//Добавляем содержимое  			using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  				fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_b.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  					while (fr_b.Read ()) {  						dll_command += "\n" + fr_b.GetString (0);  					}  					fr_b.Dispose ();  				}  				fcon_b.Dispose ();  			}  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			com_triggers_content.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  			//активность  			if (fr [5].ToString ().Trim () == "1") {  				dll_command += "\n" + "INACTIVE";  			}  			else {  				dll_command += "\n" + "ACTIVE";  			}  			//теперь узнаем что за тип триггера  			switch (fr [3].ToString ().Trim ()) {  			case "1":  				dll_command += " before insert ";  				break;  			case "2":  				dll_command += " after insert ";  				break;  			case "3":  				dll_command += " before update ";  				break;  			case "4":  				dll_command += " after update ";  				break;  			case "5":  				dll_command += " before delete ";  				break;  			case "6":  				dll_command += " after delete ";  				break;  			case "17":  				dll_command += " before insert or update ";  				break;  			case "25":  				dll_command += " before insert or delete";  				break;  			case "113":  				dll_command += " before insert or update or delete ";  				break;  			case "27":  				dll_command += " before update or delete ";  				break;  			case "18":  				dll_command += " after insert or update ";  				break;  			case "26":  				dll_command += " after insert or delete";  				break;  			case "114":  				dll_command += " after insert or update or delete ";  				break;  			case "28":  				dll_command += " after update or delete ";  				break;  			}  			//позиция триггера  			dll_command += " position " + fr [2].ToString ().Trim ();  			//Добавляем содержимое  			using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  				fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_b.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  					while (fr_b.Read ()) {  						dll_command += "\n" + fr_b.GetString (0);  					}  					fr_b.Dispose ();  				}  				fcon_b.Dispose ();  			}  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			com_triggers_content.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  			//активность  			if (fr [5].ToString ().Trim () == "1") {  				dll_command += "\n" + "INACTIVE";  			}  			else {  				dll_command += "\n" + "ACTIVE";  			}  			//теперь узнаем что за тип триггера  			switch (fr [3].ToString ().Trim ()) {  			case "1":  				dll_command += " before insert ";  				break;  			case "2":  				dll_command += " after insert ";  				break;  			case "3":  				dll_command += " before update ";  				break;  			case "4":  				dll_command += " after update ";  				break;  			case "5":  				dll_command += " before delete ";  				break;  			case "6":  				dll_command += " after delete ";  				break;  			case "17":  				dll_command += " before insert or update ";  				break;  			case "25":  				dll_command += " before insert or delete";  				break;  			case "113":  				dll_command += " before insert or update or delete ";  				break;  			case "27":  				dll_command += " before update or delete ";  				break;  			case "18":  				dll_command += " after insert or update ";  				break;  			case "26":  				dll_command += " after insert or delete";  				break;  			case "114":  				dll_command += " after insert or update or delete ";  				break;  			case "28":  				dll_command += " after update or delete ";  				break;  			}  			//позиция триггера  			dll_command += " position " + fr [2].ToString ().Trim ();  			//Добавляем содержимое  			using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  				fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_b.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  					while (fr_b.Read ()) {  						dll_command += "\n" + fr_b.GetString (0);  					}  					fr_b.Dispose ();  				}  				fcon_b.Dispose ();  			}  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			com_triggers_content.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_triggers' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  			//активность  			if (fr [5].ToString ().Trim () == "1") {  				dll_command += "\n" + "INACTIVE";  			}  			else {  				dll_command += "\n" + "ACTIVE";  			}  			//теперь узнаем что за тип триггера  			switch (fr [3].ToString ().Trim ()) {  			case "1":  				dll_command += " before insert ";  				break;  			case "2":  				dll_command += " after insert ";  				break;  			case "3":  				dll_command += " before update ";  				break;  			case "4":  				dll_command += " after update ";  				break;  			case "5":  				dll_command += " before delete ";  				break;  			case "6":  				dll_command += " after delete ";  				break;  			case "17":  				dll_command += " before insert or update ";  				break;  			case "25":  				dll_command += " before insert or delete";  				break;  			case "113":  				dll_command += " before insert or update or delete ";  				break;  			case "27":  				dll_command += " before update or delete ";  				break;  			case "18":  				dll_command += " after insert or update ";  				break;  			case "26":  				dll_command += " after insert or delete";  				break;  			case "114":  				dll_command += " after insert or update or delete ";  				break;  			case "28":  				dll_command += " after update or delete ";  				break;  			}  			//позиция триггера  			dll_command += " position " + fr [2].ToString ().Trim ();  			//Добавляем содержимое  			using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  				fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_b.Parameters [0].Value = fr [0].ToString ();  				using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  					while (fr_b.Read ()) {  						dll_command += "\n" + fr_b.GetString (0);  					}  					fr_b.Dispose ();  				}  				fcon_b.Dispose ();  			}  			dll_command = regexTrim.Replace (dll_command' "TRIM_");  			dll_command = regexIIF.Replace (dll_command' "IIF_");  			com_triggers_content.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  		//активность  		if (fr [5].ToString ().Trim () == "1") {  			dll_command += "\n" + "INACTIVE";  		}  		else {  			dll_command += "\n" + "ACTIVE";  		}  		//теперь узнаем что за тип триггера  		switch (fr [3].ToString ().Trim ()) {  		case "1":  			dll_command += " before insert ";  			break;  		case "2":  			dll_command += " after insert ";  			break;  		case "3":  			dll_command += " before update ";  			break;  		case "4":  			dll_command += " after update ";  			break;  		case "5":  			dll_command += " before delete ";  			break;  		case "6":  			dll_command += " after delete ";  			break;  		case "17":  			dll_command += " before insert or update ";  			break;  		case "25":  			dll_command += " before insert or delete";  			break;  		case "113":  			dll_command += " before insert or update or delete ";  			break;  		case "27":  			dll_command += " before update or delete ";  			break;  		case "18":  			dll_command += " after insert or update ";  			break;  		case "26":  			dll_command += " after insert or delete";  			break;  		case "114":  			dll_command += " after insert or update or delete ";  			break;  		case "28":  			dll_command += " after update or delete ";  			break;  		}  		//позиция триггера  		dll_command += " position " + fr [2].ToString ().Trim ();  		//Добавляем содержимое  		using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  			fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_b.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  				while (fr_b.Read ()) {  					dll_command += "\n" + fr_b.GetString (0);  				}  				fr_b.Dispose ();  			}  			fcon_b.Dispose ();  		}  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		com_triggers_content.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  		//активность  		if (fr [5].ToString ().Trim () == "1") {  			dll_command += "\n" + "INACTIVE";  		}  		else {  			dll_command += "\n" + "ACTIVE";  		}  		//теперь узнаем что за тип триггера  		switch (fr [3].ToString ().Trim ()) {  		case "1":  			dll_command += " before insert ";  			break;  		case "2":  			dll_command += " after insert ";  			break;  		case "3":  			dll_command += " before update ";  			break;  		case "4":  			dll_command += " after update ";  			break;  		case "5":  			dll_command += " before delete ";  			break;  		case "6":  			dll_command += " after delete ";  			break;  		case "17":  			dll_command += " before insert or update ";  			break;  		case "25":  			dll_command += " before insert or delete";  			break;  		case "113":  			dll_command += " before insert or update or delete ";  			break;  		case "27":  			dll_command += " before update or delete ";  			break;  		case "18":  			dll_command += " after insert or update ";  			break;  		case "26":  			dll_command += " after insert or delete";  			break;  		case "114":  			dll_command += " after insert or update or delete ";  			break;  		case "28":  			dll_command += " after update or delete ";  			break;  		}  		//позиция триггера  		dll_command += " position " + fr [2].ToString ().Trim ();  		//Добавляем содержимое  		using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  			fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_b.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  				while (fr_b.Read ()) {  					dll_command += "\n" + fr_b.GetString (0);  				}  				fr_b.Dispose ();  			}  			fcon_b.Dispose ();  		}  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		com_triggers_content.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  		//активность  		if (fr [5].ToString ().Trim () == "1") {  			dll_command += "\n" + "INACTIVE";  		}  		else {  			dll_command += "\n" + "ACTIVE";  		}  		//теперь узнаем что за тип триггера  		switch (fr [3].ToString ().Trim ()) {  		case "1":  			dll_command += " before insert ";  			break;  		case "2":  			dll_command += " after insert ";  			break;  		case "3":  			dll_command += " before update ";  			break;  		case "4":  			dll_command += " after update ";  			break;  		case "5":  			dll_command += " before delete ";  			break;  		case "6":  			dll_command += " after delete ";  			break;  		case "17":  			dll_command += " before insert or update ";  			break;  		case "25":  			dll_command += " before insert or delete";  			break;  		case "113":  			dll_command += " before insert or update or delete ";  			break;  		case "27":  			dll_command += " before update or delete ";  			break;  		case "18":  			dll_command += " after insert or update ";  			break;  		case "26":  			dll_command += " after insert or delete";  			break;  		case "114":  			dll_command += " after insert or update or delete ";  			break;  		case "28":  			dll_command += " after update or delete ";  			break;  		}  		//позиция триггера  		dll_command += " position " + fr [2].ToString ().Trim ();  		//Добавляем содержимое  		using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  			fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_b.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  				while (fr_b.Read ()) {  					dll_command += "\n" + fr_b.GetString (0);  				}  				fr_b.Dispose ();  			}  			fcon_b.Dispose ();  		}  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		com_triggers_content.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  		//активность  		if (fr [5].ToString ().Trim () == "1") {  			dll_command += "\n" + "INACTIVE";  		}  		else {  			dll_command += "\n" + "ACTIVE";  		}  		//теперь узнаем что за тип триггера  		switch (fr [3].ToString ().Trim ()) {  		case "1":  			dll_command += " before insert ";  			break;  		case "2":  			dll_command += " after insert ";  			break;  		case "3":  			dll_command += " before update ";  			break;  		case "4":  			dll_command += " after update ";  			break;  		case "5":  			dll_command += " before delete ";  			break;  		case "6":  			dll_command += " after delete ";  			break;  		case "17":  			dll_command += " before insert or update ";  			break;  		case "25":  			dll_command += " before insert or delete";  			break;  		case "113":  			dll_command += " before insert or update or delete ";  			break;  		case "27":  			dll_command += " before update or delete ";  			break;  		case "18":  			dll_command += " after insert or update ";  			break;  		case "26":  			dll_command += " after insert or delete";  			break;  		case "114":  			dll_command += " after insert or update or delete ";  			break;  		case "28":  			dll_command += " after update or delete ";  			break;  		}  		//позиция триггера  		dll_command += " position " + fr [2].ToString ().Trim ();  		//Добавляем содержимое  		using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  			fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_b.Parameters [0].Value = fr [0].ToString ();  			using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  				while (fr_b.Read ()) {  					dll_command += "\n" + fr_b.GetString (0);  				}  				fr_b.Dispose ();  			}  			fcon_b.Dispose ();  		}  		dll_command = regexTrim.Replace (dll_command' "TRIM_");  		dll_command = regexIIF.Replace (dll_command' "IIF_");  		com_triggers_content.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  	//активность  	if (fr [5].ToString ().Trim () == "1") {  		dll_command += "\n" + "INACTIVE";  	}  	else {  		dll_command += "\n" + "ACTIVE";  	}  	//теперь узнаем что за тип триггера  	switch (fr [3].ToString ().Trim ()) {  	case "1":  		dll_command += " before insert ";  		break;  	case "2":  		dll_command += " after insert ";  		break;  	case "3":  		dll_command += " before update ";  		break;  	case "4":  		dll_command += " after update ";  		break;  	case "5":  		dll_command += " before delete ";  		break;  	case "6":  		dll_command += " after delete ";  		break;  	case "17":  		dll_command += " before insert or update ";  		break;  	case "25":  		dll_command += " before insert or delete";  		break;  	case "113":  		dll_command += " before insert or update or delete ";  		break;  	case "27":  		dll_command += " before update or delete ";  		break;  	case "18":  		dll_command += " after insert or update ";  		break;  	case "26":  		dll_command += " after insert or delete";  		break;  	case "114":  		dll_command += " after insert or update or delete ";  		break;  	case "28":  		dll_command += " after update or delete ";  		break;  	}  	//позиция триггера  	dll_command += " position " + fr [2].ToString ().Trim ();  	//Добавляем содержимое  	using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  		fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_b.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  			while (fr_b.Read ()) {  				dll_command += "\n" + fr_b.GetString (0);  			}  			fr_b.Dispose ();  		}  		fcon_b.Dispose ();  	}  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	com_triggers_content.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  	//активность  	if (fr [5].ToString ().Trim () == "1") {  		dll_command += "\n" + "INACTIVE";  	}  	else {  		dll_command += "\n" + "ACTIVE";  	}  	//теперь узнаем что за тип триггера  	switch (fr [3].ToString ().Trim ()) {  	case "1":  		dll_command += " before insert ";  		break;  	case "2":  		dll_command += " after insert ";  		break;  	case "3":  		dll_command += " before update ";  		break;  	case "4":  		dll_command += " after update ";  		break;  	case "5":  		dll_command += " before delete ";  		break;  	case "6":  		dll_command += " after delete ";  		break;  	case "17":  		dll_command += " before insert or update ";  		break;  	case "25":  		dll_command += " before insert or delete";  		break;  	case "113":  		dll_command += " before insert or update or delete ";  		break;  	case "27":  		dll_command += " before update or delete ";  		break;  	case "18":  		dll_command += " after insert or update ";  		break;  	case "26":  		dll_command += " after insert or delete";  		break;  	case "114":  		dll_command += " after insert or update or delete ";  		break;  	case "28":  		dll_command += " after update or delete ";  		break;  	}  	//позиция триггера  	dll_command += " position " + fr [2].ToString ().Trim ();  	//Добавляем содержимое  	using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  		fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_b.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  			while (fr_b.Read ()) {  				dll_command += "\n" + fr_b.GetString (0);  			}  			fr_b.Dispose ();  		}  		fcon_b.Dispose ();  	}  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	com_triggers_content.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  	//активность  	if (fr [5].ToString ().Trim () == "1") {  		dll_command += "\n" + "INACTIVE";  	}  	else {  		dll_command += "\n" + "ACTIVE";  	}  	//теперь узнаем что за тип триггера  	switch (fr [3].ToString ().Trim ()) {  	case "1":  		dll_command += " before insert ";  		break;  	case "2":  		dll_command += " after insert ";  		break;  	case "3":  		dll_command += " before update ";  		break;  	case "4":  		dll_command += " after update ";  		break;  	case "5":  		dll_command += " before delete ";  		break;  	case "6":  		dll_command += " after delete ";  		break;  	case "17":  		dll_command += " before insert or update ";  		break;  	case "25":  		dll_command += " before insert or delete";  		break;  	case "113":  		dll_command += " before insert or update or delete ";  		break;  	case "27":  		dll_command += " before update or delete ";  		break;  	case "18":  		dll_command += " after insert or update ";  		break;  	case "26":  		dll_command += " after insert or delete";  		break;  	case "114":  		dll_command += " after insert or update or delete ";  		break;  	case "28":  		dll_command += " after update or delete ";  		break;  	}  	//позиция триггера  	dll_command += " position " + fr [2].ToString ().Trim ();  	//Добавляем содержимое  	using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  		fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_b.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  			while (fr_b.Read ()) {  				dll_command += "\n" + fr_b.GetString (0);  			}  			fr_b.Dispose ();  		}  		fcon_b.Dispose ();  	}  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	com_triggers_content.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "create or alter trigger " + fr [0].ToString ().Trim () + " FOR " + fr [1].ToString ();  	//активность  	if (fr [5].ToString ().Trim () == "1") {  		dll_command += "\n" + "INACTIVE";  	}  	else {  		dll_command += "\n" + "ACTIVE";  	}  	//теперь узнаем что за тип триггера  	switch (fr [3].ToString ().Trim ()) {  	case "1":  		dll_command += " before insert ";  		break;  	case "2":  		dll_command += " after insert ";  		break;  	case "3":  		dll_command += " before update ";  		break;  	case "4":  		dll_command += " after update ";  		break;  	case "5":  		dll_command += " before delete ";  		break;  	case "6":  		dll_command += " after delete ";  		break;  	case "17":  		dll_command += " before insert or update ";  		break;  	case "25":  		dll_command += " before insert or delete";  		break;  	case "113":  		dll_command += " before insert or update or delete ";  		break;  	case "27":  		dll_command += " before update or delete ";  		break;  	case "18":  		dll_command += " after insert or update ";  		break;  	case "26":  		dll_command += " after insert or delete";  		break;  	case "114":  		dll_command += " after insert or update or delete ";  		break;  	case "28":  		dll_command += " after update or delete ";  		break;  	}  	//позиция триггера  	dll_command += " position " + fr [2].ToString ().Trim ();  	//Добавляем содержимое  	using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  		fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_b.Parameters [0].Value = fr [0].ToString ();  		using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  			while (fr_b.Read ()) {  				dll_command += "\n" + fr_b.GetString (0);  			}  			fr_b.Dispose ();  		}  		fcon_b.Dispose ();  	}  	dll_command = regexTrim.Replace (dll_command' "TRIM_");  	dll_command = regexIIF.Replace (dll_command' "IIF_");  	com_triggers_content.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: if (fr [5].ToString ().Trim () == "1") {  	dll_command += "\n" + "INACTIVE";  }  else {  	dll_command += "\n" + "ACTIVE";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: switch (fr [3].ToString ().Trim ()) {  case "1":  	dll_command += " before insert ";  	break;  case "2":  	dll_command += " after insert ";  	break;  case "3":  	dll_command += " before update ";  	break;  case "4":  	dll_command += " after update ";  	break;  case "5":  	dll_command += " before delete ";  	break;  case "6":  	dll_command += " after delete ";  	break;  case "17":  	dll_command += " before insert or update ";  	break;  case "25":  	dll_command += " before insert or delete";  	break;  case "113":  	dll_command += " before insert or update or delete ";  	break;  case "27":  	dll_command += " before update or delete ";  	break;  case "18":  	dll_command += " after insert or update ";  	break;  case "26":  	dll_command += " after insert or delete";  	break;  case "114":  	dll_command += " after insert or update or delete ";  	break;  case "28":  	dll_command += " after update or delete ";  	break;  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: dll_command += " position " + fr [2].ToString ().Trim ();  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: using (FbCommand fcon_b = new FbCommand (sql_triggers_b' fb' ft)) {  	fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_b.Parameters [0].Value = fr [0].ToString ();  	using (FbDataReader fr_b = fcon_b.ExecuteReader ()) {  		while (fr_b.Read ()) {  			dll_command += "\n" + fr_b.GetString (0);  		}  		fr_b.Dispose ();  	}  	fcon_b.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following statement contains a magic number: fcon_b.Parameters.Add ("@a"' FbDbType.VarChar' 31);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_primary_key' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "";  						dll_command += "ALTER TABLE ";  						if (is_reserv (fr [1].ToString ().Trim ())) {  							dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  						}  						else {  							dll_command += fr [1].ToString ().Trim ();  						}  						if (fr [0].ToString ().Substring (0' 5).ToUpper () == "INTEG") {  							//если это просто индекс без наименования - то есть созданный системой  							dll_command += " ADD  PRIMARY KEY ";  						}  						else {  							dll_command += " ADD CONSTRAINT " + fr [0].ToString ().Trim () + " PRIMARY KEY ";  						}  						//соостав индекса  						string fields_ = "";  						using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  							fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_f.Parameters [0].Value = fr [2].ToString ();  							using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  								while (fr_f.Read ()) {  									if (fields_ == "") {  										fields_ += "(" + fr_f [0].ToString ();  									}  									else {  										fields_ += "'" + fr_f [0].ToString ();  									}  								}  								fields_ += ")";  								fr_f.Dispose ();  							}  							fcon_f.Dispose ();  						}  						dll_command += " " + fields_;  						com_primary_key.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_primary_key' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "";  						dll_command += "ALTER TABLE ";  						if (is_reserv (fr [1].ToString ().Trim ())) {  							dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  						}  						else {  							dll_command += fr [1].ToString ().Trim ();  						}  						if (fr [0].ToString ().Substring (0' 5).ToUpper () == "INTEG") {  							//если это просто индекс без наименования - то есть созданный системой  							dll_command += " ADD  PRIMARY KEY ";  						}  						else {  							dll_command += " ADD CONSTRAINT " + fr [0].ToString ().Trim () + " PRIMARY KEY ";  						}  						//соостав индекса  						string fields_ = "";  						using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  							fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_f.Parameters [0].Value = fr [2].ToString ();  							using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  								while (fr_f.Read ()) {  									if (fields_ == "") {  										fields_ += "(" + fr_f [0].ToString ();  									}  									else {  										fields_ += "'" + fr_f [0].ToString ();  									}  								}  								fields_ += ")";  								fr_f.Dispose ();  							}  							fcon_f.Dispose ();  						}  						dll_command += " " + fields_;  						com_primary_key.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_primary_key' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "";  						dll_command += "ALTER TABLE ";  						if (is_reserv (fr [1].ToString ().Trim ())) {  							dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  						}  						else {  							dll_command += fr [1].ToString ().Trim ();  						}  						if (fr [0].ToString ().Substring (0' 5).ToUpper () == "INTEG") {  							//если это просто индекс без наименования - то есть созданный системой  							dll_command += " ADD  PRIMARY KEY ";  						}  						else {  							dll_command += " ADD CONSTRAINT " + fr [0].ToString ().Trim () + " PRIMARY KEY ";  						}  						//соостав индекса  						string fields_ = "";  						using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  							fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_f.Parameters [0].Value = fr [2].ToString ();  							using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  								while (fr_f.Read ()) {  									if (fields_ == "") {  										fields_ += "(" + fr_f [0].ToString ();  									}  									else {  										fields_ += "'" + fr_f [0].ToString ();  									}  								}  								fields_ += ")";  								fr_f.Dispose ();  							}  							fcon_f.Dispose ();  						}  						dll_command += " " + fields_;  						com_primary_key.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_primary_key' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "";  					dll_command += "ALTER TABLE ";  					if (is_reserv (fr [1].ToString ().Trim ())) {  						dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  					}  					else {  						dll_command += fr [1].ToString ().Trim ();  					}  					if (fr [0].ToString ().Substring (0' 5).ToUpper () == "INTEG") {  						//если это просто индекс без наименования - то есть созданный системой  						dll_command += " ADD  PRIMARY KEY ";  					}  					else {  						dll_command += " ADD CONSTRAINT " + fr [0].ToString ().Trim () + " PRIMARY KEY ";  					}  					//соостав индекса  					string fields_ = "";  					using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  						fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_f.Parameters [0].Value = fr [2].ToString ();  						using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  							while (fr_f.Read ()) {  								if (fields_ == "") {  									fields_ += "(" + fr_f [0].ToString ();  								}  								else {  									fields_ += "'" + fr_f [0].ToString ();  								}  							}  							fields_ += ")";  							fr_f.Dispose ();  						}  						fcon_f.Dispose ();  					}  					dll_command += " " + fields_;  					com_primary_key.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_primary_key' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "";  					dll_command += "ALTER TABLE ";  					if (is_reserv (fr [1].ToString ().Trim ())) {  						dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  					}  					else {  						dll_command += fr [1].ToString ().Trim ();  					}  					if (fr [0].ToString ().Substring (0' 5).ToUpper () == "INTEG") {  						//если это просто индекс без наименования - то есть созданный системой  						dll_command += " ADD  PRIMARY KEY ";  					}  					else {  						dll_command += " ADD CONSTRAINT " + fr [0].ToString ().Trim () + " PRIMARY KEY ";  					}  					//соостав индекса  					string fields_ = "";  					using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  						fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_f.Parameters [0].Value = fr [2].ToString ();  						using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  							while (fr_f.Read ()) {  								if (fields_ == "") {  									fields_ += "(" + fr_f [0].ToString ();  								}  								else {  									fields_ += "'" + fr_f [0].ToString ();  								}  							}  							fields_ += ")";  							fr_f.Dispose ();  						}  						fcon_f.Dispose ();  					}  					dll_command += " " + fields_;  					com_primary_key.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_primary_key' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "";  					dll_command += "ALTER TABLE ";  					if (is_reserv (fr [1].ToString ().Trim ())) {  						dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  					}  					else {  						dll_command += fr [1].ToString ().Trim ();  					}  					if (fr [0].ToString ().Substring (0' 5).ToUpper () == "INTEG") {  						//если это просто индекс без наименования - то есть созданный системой  						dll_command += " ADD  PRIMARY KEY ";  					}  					else {  						dll_command += " ADD CONSTRAINT " + fr [0].ToString ().Trim () + " PRIMARY KEY ";  					}  					//соостав индекса  					string fields_ = "";  					using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  						fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_f.Parameters [0].Value = fr [2].ToString ();  						using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  							while (fr_f.Read ()) {  								if (fields_ == "") {  									fields_ += "(" + fr_f [0].ToString ();  								}  								else {  									fields_ += "'" + fr_f [0].ToString ();  								}  							}  							fields_ += ")";  							fr_f.Dispose ();  						}  						fcon_f.Dispose ();  					}  					dll_command += " " + fields_;  					com_primary_key.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_primary_key' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "";  				dll_command += "ALTER TABLE ";  				if (is_reserv (fr [1].ToString ().Trim ())) {  					dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  				}  				else {  					dll_command += fr [1].ToString ().Trim ();  				}  				if (fr [0].ToString ().Substring (0' 5).ToUpper () == "INTEG") {  					//если это просто индекс без наименования - то есть созданный системой  					dll_command += " ADD  PRIMARY KEY ";  				}  				else {  					dll_command += " ADD CONSTRAINT " + fr [0].ToString ().Trim () + " PRIMARY KEY ";  				}  				//соостав индекса  				string fields_ = "";  				using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  					fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_f.Parameters [0].Value = fr [2].ToString ();  					using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  						while (fr_f.Read ()) {  							if (fields_ == "") {  								fields_ += "(" + fr_f [0].ToString ();  							}  							else {  								fields_ += "'" + fr_f [0].ToString ();  							}  						}  						fields_ += ")";  						fr_f.Dispose ();  					}  					fcon_f.Dispose ();  				}  				dll_command += " " + fields_;  				com_primary_key.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_primary_key' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "";  				dll_command += "ALTER TABLE ";  				if (is_reserv (fr [1].ToString ().Trim ())) {  					dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  				}  				else {  					dll_command += fr [1].ToString ().Trim ();  				}  				if (fr [0].ToString ().Substring (0' 5).ToUpper () == "INTEG") {  					//если это просто индекс без наименования - то есть созданный системой  					dll_command += " ADD  PRIMARY KEY ";  				}  				else {  					dll_command += " ADD CONSTRAINT " + fr [0].ToString ().Trim () + " PRIMARY KEY ";  				}  				//соостав индекса  				string fields_ = "";  				using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  					fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_f.Parameters [0].Value = fr [2].ToString ();  					using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  						while (fr_f.Read ()) {  							if (fields_ == "") {  								fields_ += "(" + fr_f [0].ToString ();  							}  							else {  								fields_ += "'" + fr_f [0].ToString ();  							}  						}  						fields_ += ")";  						fr_f.Dispose ();  					}  					fcon_f.Dispose ();  				}  				dll_command += " " + fields_;  				com_primary_key.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_primary_key' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "";  				dll_command += "ALTER TABLE ";  				if (is_reserv (fr [1].ToString ().Trim ())) {  					dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  				}  				else {  					dll_command += fr [1].ToString ().Trim ();  				}  				if (fr [0].ToString ().Substring (0' 5).ToUpper () == "INTEG") {  					//если это просто индекс без наименования - то есть созданный системой  					dll_command += " ADD  PRIMARY KEY ";  				}  				else {  					dll_command += " ADD CONSTRAINT " + fr [0].ToString ().Trim () + " PRIMARY KEY ";  				}  				//соостав индекса  				string fields_ = "";  				using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  					fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_f.Parameters [0].Value = fr [2].ToString ();  					using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  						while (fr_f.Read ()) {  							if (fields_ == "") {  								fields_ += "(" + fr_f [0].ToString ();  							}  							else {  								fields_ += "'" + fr_f [0].ToString ();  							}  						}  						fields_ += ")";  						fr_f.Dispose ();  					}  					fcon_f.Dispose ();  				}  				dll_command += " " + fields_;  				com_primary_key.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_primary_key' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "";  			dll_command += "ALTER TABLE ";  			if (is_reserv (fr [1].ToString ().Trim ())) {  				dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  			}  			else {  				dll_command += fr [1].ToString ().Trim ();  			}  			if (fr [0].ToString ().Substring (0' 5).ToUpper () == "INTEG") {  				//если это просто индекс без наименования - то есть созданный системой  				dll_command += " ADD  PRIMARY KEY ";  			}  			else {  				dll_command += " ADD CONSTRAINT " + fr [0].ToString ().Trim () + " PRIMARY KEY ";  			}  			//соостав индекса  			string fields_ = "";  			using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  				fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_f.Parameters [0].Value = fr [2].ToString ();  				using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  					while (fr_f.Read ()) {  						if (fields_ == "") {  							fields_ += "(" + fr_f [0].ToString ();  						}  						else {  							fields_ += "'" + fr_f [0].ToString ();  						}  					}  					fields_ += ")";  					fr_f.Dispose ();  				}  				fcon_f.Dispose ();  			}  			dll_command += " " + fields_;  			com_primary_key.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_primary_key' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "";  			dll_command += "ALTER TABLE ";  			if (is_reserv (fr [1].ToString ().Trim ())) {  				dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  			}  			else {  				dll_command += fr [1].ToString ().Trim ();  			}  			if (fr [0].ToString ().Substring (0' 5).ToUpper () == "INTEG") {  				//если это просто индекс без наименования - то есть созданный системой  				dll_command += " ADD  PRIMARY KEY ";  			}  			else {  				dll_command += " ADD CONSTRAINT " + fr [0].ToString ().Trim () + " PRIMARY KEY ";  			}  			//соостав индекса  			string fields_ = "";  			using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  				fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_f.Parameters [0].Value = fr [2].ToString ();  				using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  					while (fr_f.Read ()) {  						if (fields_ == "") {  							fields_ += "(" + fr_f [0].ToString ();  						}  						else {  							fields_ += "'" + fr_f [0].ToString ();  						}  					}  					fields_ += ")";  					fr_f.Dispose ();  				}  				fcon_f.Dispose ();  			}  			dll_command += " " + fields_;  			com_primary_key.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_primary_key' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "";  			dll_command += "ALTER TABLE ";  			if (is_reserv (fr [1].ToString ().Trim ())) {  				dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  			}  			else {  				dll_command += fr [1].ToString ().Trim ();  			}  			if (fr [0].ToString ().Substring (0' 5).ToUpper () == "INTEG") {  				//если это просто индекс без наименования - то есть созданный системой  				dll_command += " ADD  PRIMARY KEY ";  			}  			else {  				dll_command += " ADD CONSTRAINT " + fr [0].ToString ().Trim () + " PRIMARY KEY ";  			}  			//соостав индекса  			string fields_ = "";  			using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  				fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_f.Parameters [0].Value = fr [2].ToString ();  				using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  					while (fr_f.Read ()) {  						if (fields_ == "") {  							fields_ += "(" + fr_f [0].ToString ();  						}  						else {  							fields_ += "'" + fr_f [0].ToString ();  						}  					}  					fields_ += ")";  					fr_f.Dispose ();  				}  				fcon_f.Dispose ();  			}  			dll_command += " " + fields_;  			com_primary_key.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "";  		dll_command += "ALTER TABLE ";  		if (is_reserv (fr [1].ToString ().Trim ())) {  			dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  		}  		else {  			dll_command += fr [1].ToString ().Trim ();  		}  		if (fr [0].ToString ().Substring (0' 5).ToUpper () == "INTEG") {  			//если это просто индекс без наименования - то есть созданный системой  			dll_command += " ADD  PRIMARY KEY ";  		}  		else {  			dll_command += " ADD CONSTRAINT " + fr [0].ToString ().Trim () + " PRIMARY KEY ";  		}  		//соостав индекса  		string fields_ = "";  		using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  			fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_f.Parameters [0].Value = fr [2].ToString ();  			using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  				while (fr_f.Read ()) {  					if (fields_ == "") {  						fields_ += "(" + fr_f [0].ToString ();  					}  					else {  						fields_ += "'" + fr_f [0].ToString ();  					}  				}  				fields_ += ")";  				fr_f.Dispose ();  			}  			fcon_f.Dispose ();  		}  		dll_command += " " + fields_;  		com_primary_key.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "";  		dll_command += "ALTER TABLE ";  		if (is_reserv (fr [1].ToString ().Trim ())) {  			dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  		}  		else {  			dll_command += fr [1].ToString ().Trim ();  		}  		if (fr [0].ToString ().Substring (0' 5).ToUpper () == "INTEG") {  			//если это просто индекс без наименования - то есть созданный системой  			dll_command += " ADD  PRIMARY KEY ";  		}  		else {  			dll_command += " ADD CONSTRAINT " + fr [0].ToString ().Trim () + " PRIMARY KEY ";  		}  		//соостав индекса  		string fields_ = "";  		using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  			fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_f.Parameters [0].Value = fr [2].ToString ();  			using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  				while (fr_f.Read ()) {  					if (fields_ == "") {  						fields_ += "(" + fr_f [0].ToString ();  					}  					else {  						fields_ += "'" + fr_f [0].ToString ();  					}  				}  				fields_ += ")";  				fr_f.Dispose ();  			}  			fcon_f.Dispose ();  		}  		dll_command += " " + fields_;  		com_primary_key.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "";  		dll_command += "ALTER TABLE ";  		if (is_reserv (fr [1].ToString ().Trim ())) {  			dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  		}  		else {  			dll_command += fr [1].ToString ().Trim ();  		}  		if (fr [0].ToString ().Substring (0' 5).ToUpper () == "INTEG") {  			//если это просто индекс без наименования - то есть созданный системой  			dll_command += " ADD  PRIMARY KEY ";  		}  		else {  			dll_command += " ADD CONSTRAINT " + fr [0].ToString ().Trim () + " PRIMARY KEY ";  		}  		//соостав индекса  		string fields_ = "";  		using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  			fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_f.Parameters [0].Value = fr [2].ToString ();  			using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  				while (fr_f.Read ()) {  					if (fields_ == "") {  						fields_ += "(" + fr_f [0].ToString ();  					}  					else {  						fields_ += "'" + fr_f [0].ToString ();  					}  				}  				fields_ += ")";  				fr_f.Dispose ();  			}  			fcon_f.Dispose ();  		}  		dll_command += " " + fields_;  		com_primary_key.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "";  	dll_command += "ALTER TABLE ";  	if (is_reserv (fr [1].ToString ().Trim ())) {  		dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  	}  	else {  		dll_command += fr [1].ToString ().Trim ();  	}  	if (fr [0].ToString ().Substring (0' 5).ToUpper () == "INTEG") {  		//если это просто индекс без наименования - то есть созданный системой  		dll_command += " ADD  PRIMARY KEY ";  	}  	else {  		dll_command += " ADD CONSTRAINT " + fr [0].ToString ().Trim () + " PRIMARY KEY ";  	}  	//соостав индекса  	string fields_ = "";  	using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  		fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_f.Parameters [0].Value = fr [2].ToString ();  		using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  			while (fr_f.Read ()) {  				if (fields_ == "") {  					fields_ += "(" + fr_f [0].ToString ();  				}  				else {  					fields_ += "'" + fr_f [0].ToString ();  				}  			}  			fields_ += ")";  			fr_f.Dispose ();  		}  		fcon_f.Dispose ();  	}  	dll_command += " " + fields_;  	com_primary_key.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "";  	dll_command += "ALTER TABLE ";  	if (is_reserv (fr [1].ToString ().Trim ())) {  		dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  	}  	else {  		dll_command += fr [1].ToString ().Trim ();  	}  	if (fr [0].ToString ().Substring (0' 5).ToUpper () == "INTEG") {  		//если это просто индекс без наименования - то есть созданный системой  		dll_command += " ADD  PRIMARY KEY ";  	}  	else {  		dll_command += " ADD CONSTRAINT " + fr [0].ToString ().Trim () + " PRIMARY KEY ";  	}  	//соостав индекса  	string fields_ = "";  	using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  		fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_f.Parameters [0].Value = fr [2].ToString ();  		using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  			while (fr_f.Read ()) {  				if (fields_ == "") {  					fields_ += "(" + fr_f [0].ToString ();  				}  				else {  					fields_ += "'" + fr_f [0].ToString ();  				}  			}  			fields_ += ")";  			fr_f.Dispose ();  		}  		fcon_f.Dispose ();  	}  	dll_command += " " + fields_;  	com_primary_key.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "";  	dll_command += "ALTER TABLE ";  	if (is_reserv (fr [1].ToString ().Trim ())) {  		dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  	}  	else {  		dll_command += fr [1].ToString ().Trim ();  	}  	if (fr [0].ToString ().Substring (0' 5).ToUpper () == "INTEG") {  		//если это просто индекс без наименования - то есть созданный системой  		dll_command += " ADD  PRIMARY KEY ";  	}  	else {  		dll_command += " ADD CONSTRAINT " + fr [0].ToString ().Trim () + " PRIMARY KEY ";  	}  	//соостав индекса  	string fields_ = "";  	using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  		fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_f.Parameters [0].Value = fr [2].ToString ();  		using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  			while (fr_f.Read ()) {  				if (fields_ == "") {  					fields_ += "(" + fr_f [0].ToString ();  				}  				else {  					fields_ += "'" + fr_f [0].ToString ();  				}  			}  			fields_ += ")";  			fr_f.Dispose ();  		}  		fcon_f.Dispose ();  	}  	dll_command += " " + fields_;  	com_primary_key.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: if (fr [0].ToString ().Substring (0' 5).ToUpper () == "INTEG") {  	//если это просто индекс без наименования - то есть созданный системой  	dll_command += " ADD  PRIMARY KEY ";  }  else {  	dll_command += " ADD CONSTRAINT " + fr [0].ToString ().Trim () + " PRIMARY KEY ";  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  	fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_f.Parameters [0].Value = fr [2].ToString ();  	using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  		while (fr_f.Read ()) {  			if (fields_ == "") {  				fields_ += "(" + fr_f [0].ToString ();  			}  			else {  				fields_ += "'" + fr_f [0].ToString ();  			}  		}  		fields_ += ")";  		fr_f.Dispose ();  	}  	fcon_f.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: using (FbCommand fcon_f = new FbCommand (sql_primary_key_f' fb' ft)) {  	fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_f.Parameters [0].Value = fr [2].ToString ();  	using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  		while (fr_f.Read ()) {  			if (fields_ == "") {  				fields_ += "(" + fr_f [0].ToString ();  			}  			else {  				fields_ += "'" + fr_f [0].ToString ();  			}  		}  		fields_ += ")";  		fr_f.Dispose ();  	}  	fcon_f.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_PRIMARY_KEY,The following statement contains a magic number: fcon_f.Parameters [0].Value = fr [2].ToString ();  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "";  						dll_command += fr [0].ToString ();  						if (is_reserv (fr [1].ToString ().Trim ())) {  							dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  						}  						else {  							dll_command += fr [1].ToString ().Trim ();  						}  						dll_command += fr [2].ToString ();  						if (is_reserv (fr [3].ToString ().Trim ())) {  							dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  						}  						else {  							dll_command += fr [3].ToString ().Trim ();  						}  						dll_command += fr [4].ToString ();  						com_foreign_key.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "";  						dll_command += fr [0].ToString ();  						if (is_reserv (fr [1].ToString ().Trim ())) {  							dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  						}  						else {  							dll_command += fr [1].ToString ().Trim ();  						}  						dll_command += fr [2].ToString ();  						if (is_reserv (fr [3].ToString ().Trim ())) {  							dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  						}  						else {  							dll_command += fr [3].ToString ().Trim ();  						}  						dll_command += fr [4].ToString ();  						com_foreign_key.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "";  						dll_command += fr [0].ToString ();  						if (is_reserv (fr [1].ToString ().Trim ())) {  							dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  						}  						else {  							dll_command += fr [1].ToString ().Trim ();  						}  						dll_command += fr [2].ToString ();  						if (is_reserv (fr [3].ToString ().Trim ())) {  							dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  						}  						else {  							dll_command += fr [3].ToString ().Trim ();  						}  						dll_command += fr [4].ToString ();  						com_foreign_key.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "";  						dll_command += fr [0].ToString ();  						if (is_reserv (fr [1].ToString ().Trim ())) {  							dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  						}  						else {  							dll_command += fr [1].ToString ().Trim ();  						}  						dll_command += fr [2].ToString ();  						if (is_reserv (fr [3].ToString ().Trim ())) {  							dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  						}  						else {  							dll_command += fr [3].ToString ().Trim ();  						}  						dll_command += fr [4].ToString ();  						com_foreign_key.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "";  						dll_command += fr [0].ToString ();  						if (is_reserv (fr [1].ToString ().Trim ())) {  							dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  						}  						else {  							dll_command += fr [1].ToString ().Trim ();  						}  						dll_command += fr [2].ToString ();  						if (is_reserv (fr [3].ToString ().Trim ())) {  							dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  						}  						else {  							dll_command += fr [3].ToString ().Trim ();  						}  						dll_command += fr [4].ToString ();  						com_foreign_key.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "";  					dll_command += fr [0].ToString ();  					if (is_reserv (fr [1].ToString ().Trim ())) {  						dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  					}  					else {  						dll_command += fr [1].ToString ().Trim ();  					}  					dll_command += fr [2].ToString ();  					if (is_reserv (fr [3].ToString ().Trim ())) {  						dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  					}  					else {  						dll_command += fr [3].ToString ().Trim ();  					}  					dll_command += fr [4].ToString ();  					com_foreign_key.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "";  					dll_command += fr [0].ToString ();  					if (is_reserv (fr [1].ToString ().Trim ())) {  						dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  					}  					else {  						dll_command += fr [1].ToString ().Trim ();  					}  					dll_command += fr [2].ToString ();  					if (is_reserv (fr [3].ToString ().Trim ())) {  						dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  					}  					else {  						dll_command += fr [3].ToString ().Trim ();  					}  					dll_command += fr [4].ToString ();  					com_foreign_key.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "";  					dll_command += fr [0].ToString ();  					if (is_reserv (fr [1].ToString ().Trim ())) {  						dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  					}  					else {  						dll_command += fr [1].ToString ().Trim ();  					}  					dll_command += fr [2].ToString ();  					if (is_reserv (fr [3].ToString ().Trim ())) {  						dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  					}  					else {  						dll_command += fr [3].ToString ().Trim ();  					}  					dll_command += fr [4].ToString ();  					com_foreign_key.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "";  					dll_command += fr [0].ToString ();  					if (is_reserv (fr [1].ToString ().Trim ())) {  						dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  					}  					else {  						dll_command += fr [1].ToString ().Trim ();  					}  					dll_command += fr [2].ToString ();  					if (is_reserv (fr [3].ToString ().Trim ())) {  						dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  					}  					else {  						dll_command += fr [3].ToString ().Trim ();  					}  					dll_command += fr [4].ToString ();  					com_foreign_key.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "";  					dll_command += fr [0].ToString ();  					if (is_reserv (fr [1].ToString ().Trim ())) {  						dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  					}  					else {  						dll_command += fr [1].ToString ().Trim ();  					}  					dll_command += fr [2].ToString ();  					if (is_reserv (fr [3].ToString ().Trim ())) {  						dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  					}  					else {  						dll_command += fr [3].ToString ().Trim ();  					}  					dll_command += fr [4].ToString ();  					com_foreign_key.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "";  				dll_command += fr [0].ToString ();  				if (is_reserv (fr [1].ToString ().Trim ())) {  					dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  				}  				else {  					dll_command += fr [1].ToString ().Trim ();  				}  				dll_command += fr [2].ToString ();  				if (is_reserv (fr [3].ToString ().Trim ())) {  					dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  				}  				else {  					dll_command += fr [3].ToString ().Trim ();  				}  				dll_command += fr [4].ToString ();  				com_foreign_key.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "";  				dll_command += fr [0].ToString ();  				if (is_reserv (fr [1].ToString ().Trim ())) {  					dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  				}  				else {  					dll_command += fr [1].ToString ().Trim ();  				}  				dll_command += fr [2].ToString ();  				if (is_reserv (fr [3].ToString ().Trim ())) {  					dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  				}  				else {  					dll_command += fr [3].ToString ().Trim ();  				}  				dll_command += fr [4].ToString ();  				com_foreign_key.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "";  				dll_command += fr [0].ToString ();  				if (is_reserv (fr [1].ToString ().Trim ())) {  					dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  				}  				else {  					dll_command += fr [1].ToString ().Trim ();  				}  				dll_command += fr [2].ToString ();  				if (is_reserv (fr [3].ToString ().Trim ())) {  					dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  				}  				else {  					dll_command += fr [3].ToString ().Trim ();  				}  				dll_command += fr [4].ToString ();  				com_foreign_key.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "";  				dll_command += fr [0].ToString ();  				if (is_reserv (fr [1].ToString ().Trim ())) {  					dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  				}  				else {  					dll_command += fr [1].ToString ().Trim ();  				}  				dll_command += fr [2].ToString ();  				if (is_reserv (fr [3].ToString ().Trim ())) {  					dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  				}  				else {  					dll_command += fr [3].ToString ().Trim ();  				}  				dll_command += fr [4].ToString ();  				com_foreign_key.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "";  				dll_command += fr [0].ToString ();  				if (is_reserv (fr [1].ToString ().Trim ())) {  					dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  				}  				else {  					dll_command += fr [1].ToString ().Trim ();  				}  				dll_command += fr [2].ToString ();  				if (is_reserv (fr [3].ToString ().Trim ())) {  					dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  				}  				else {  					dll_command += fr [3].ToString ().Trim ();  				}  				dll_command += fr [4].ToString ();  				com_foreign_key.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "";  			dll_command += fr [0].ToString ();  			if (is_reserv (fr [1].ToString ().Trim ())) {  				dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  			}  			else {  				dll_command += fr [1].ToString ().Trim ();  			}  			dll_command += fr [2].ToString ();  			if (is_reserv (fr [3].ToString ().Trim ())) {  				dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  			}  			else {  				dll_command += fr [3].ToString ().Trim ();  			}  			dll_command += fr [4].ToString ();  			com_foreign_key.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "";  			dll_command += fr [0].ToString ();  			if (is_reserv (fr [1].ToString ().Trim ())) {  				dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  			}  			else {  				dll_command += fr [1].ToString ().Trim ();  			}  			dll_command += fr [2].ToString ();  			if (is_reserv (fr [3].ToString ().Trim ())) {  				dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  			}  			else {  				dll_command += fr [3].ToString ().Trim ();  			}  			dll_command += fr [4].ToString ();  			com_foreign_key.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "";  			dll_command += fr [0].ToString ();  			if (is_reserv (fr [1].ToString ().Trim ())) {  				dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  			}  			else {  				dll_command += fr [1].ToString ().Trim ();  			}  			dll_command += fr [2].ToString ();  			if (is_reserv (fr [3].ToString ().Trim ())) {  				dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  			}  			else {  				dll_command += fr [3].ToString ().Trim ();  			}  			dll_command += fr [4].ToString ();  			com_foreign_key.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "";  			dll_command += fr [0].ToString ();  			if (is_reserv (fr [1].ToString ().Trim ())) {  				dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  			}  			else {  				dll_command += fr [1].ToString ().Trim ();  			}  			dll_command += fr [2].ToString ();  			if (is_reserv (fr [3].ToString ().Trim ())) {  				dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  			}  			else {  				dll_command += fr [3].ToString ().Trim ();  			}  			dll_command += fr [4].ToString ();  			com_foreign_key.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_foreign_key' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "";  			dll_command += fr [0].ToString ();  			if (is_reserv (fr [1].ToString ().Trim ())) {  				dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  			}  			else {  				dll_command += fr [1].ToString ().Trim ();  			}  			dll_command += fr [2].ToString ();  			if (is_reserv (fr [3].ToString ().Trim ())) {  				dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  			}  			else {  				dll_command += fr [3].ToString ().Trim ();  			}  			dll_command += fr [4].ToString ();  			com_foreign_key.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "";  		dll_command += fr [0].ToString ();  		if (is_reserv (fr [1].ToString ().Trim ())) {  			dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  		}  		else {  			dll_command += fr [1].ToString ().Trim ();  		}  		dll_command += fr [2].ToString ();  		if (is_reserv (fr [3].ToString ().Trim ())) {  			dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  		}  		else {  			dll_command += fr [3].ToString ().Trim ();  		}  		dll_command += fr [4].ToString ();  		com_foreign_key.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "";  		dll_command += fr [0].ToString ();  		if (is_reserv (fr [1].ToString ().Trim ())) {  			dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  		}  		else {  			dll_command += fr [1].ToString ().Trim ();  		}  		dll_command += fr [2].ToString ();  		if (is_reserv (fr [3].ToString ().Trim ())) {  			dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  		}  		else {  			dll_command += fr [3].ToString ().Trim ();  		}  		dll_command += fr [4].ToString ();  		com_foreign_key.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "";  		dll_command += fr [0].ToString ();  		if (is_reserv (fr [1].ToString ().Trim ())) {  			dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  		}  		else {  			dll_command += fr [1].ToString ().Trim ();  		}  		dll_command += fr [2].ToString ();  		if (is_reserv (fr [3].ToString ().Trim ())) {  			dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  		}  		else {  			dll_command += fr [3].ToString ().Trim ();  		}  		dll_command += fr [4].ToString ();  		com_foreign_key.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "";  		dll_command += fr [0].ToString ();  		if (is_reserv (fr [1].ToString ().Trim ())) {  			dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  		}  		else {  			dll_command += fr [1].ToString ().Trim ();  		}  		dll_command += fr [2].ToString ();  		if (is_reserv (fr [3].ToString ().Trim ())) {  			dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  		}  		else {  			dll_command += fr [3].ToString ().Trim ();  		}  		dll_command += fr [4].ToString ();  		com_foreign_key.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "";  		dll_command += fr [0].ToString ();  		if (is_reserv (fr [1].ToString ().Trim ())) {  			dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  		}  		else {  			dll_command += fr [1].ToString ().Trim ();  		}  		dll_command += fr [2].ToString ();  		if (is_reserv (fr [3].ToString ().Trim ())) {  			dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  		}  		else {  			dll_command += fr [3].ToString ().Trim ();  		}  		dll_command += fr [4].ToString ();  		com_foreign_key.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "";  	dll_command += fr [0].ToString ();  	if (is_reserv (fr [1].ToString ().Trim ())) {  		dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  	}  	else {  		dll_command += fr [1].ToString ().Trim ();  	}  	dll_command += fr [2].ToString ();  	if (is_reserv (fr [3].ToString ().Trim ())) {  		dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  	}  	else {  		dll_command += fr [3].ToString ().Trim ();  	}  	dll_command += fr [4].ToString ();  	com_foreign_key.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "";  	dll_command += fr [0].ToString ();  	if (is_reserv (fr [1].ToString ().Trim ())) {  		dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  	}  	else {  		dll_command += fr [1].ToString ().Trim ();  	}  	dll_command += fr [2].ToString ();  	if (is_reserv (fr [3].ToString ().Trim ())) {  		dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  	}  	else {  		dll_command += fr [3].ToString ().Trim ();  	}  	dll_command += fr [4].ToString ();  	com_foreign_key.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "";  	dll_command += fr [0].ToString ();  	if (is_reserv (fr [1].ToString ().Trim ())) {  		dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  	}  	else {  		dll_command += fr [1].ToString ().Trim ();  	}  	dll_command += fr [2].ToString ();  	if (is_reserv (fr [3].ToString ().Trim ())) {  		dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  	}  	else {  		dll_command += fr [3].ToString ().Trim ();  	}  	dll_command += fr [4].ToString ();  	com_foreign_key.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "";  	dll_command += fr [0].ToString ();  	if (is_reserv (fr [1].ToString ().Trim ())) {  		dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  	}  	else {  		dll_command += fr [1].ToString ().Trim ();  	}  	dll_command += fr [2].ToString ();  	if (is_reserv (fr [3].ToString ().Trim ())) {  		dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  	}  	else {  		dll_command += fr [3].ToString ().Trim ();  	}  	dll_command += fr [4].ToString ();  	com_foreign_key.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "";  	dll_command += fr [0].ToString ();  	if (is_reserv (fr [1].ToString ().Trim ())) {  		dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  	}  	else {  		dll_command += fr [1].ToString ().Trim ();  	}  	dll_command += fr [2].ToString ();  	if (is_reserv (fr [3].ToString ().Trim ())) {  		dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  	}  	else {  		dll_command += fr [3].ToString ().Trim ();  	}  	dll_command += fr [4].ToString ();  	com_foreign_key.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: dll_command += fr [2].ToString ();  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: if (is_reserv (fr [3].ToString ().Trim ())) {  	dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  }  else {  	dll_command += fr [3].ToString ().Trim ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: if (is_reserv (fr [3].ToString ().Trim ())) {  	dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  }  else {  	dll_command += fr [3].ToString ().Trim ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: if (is_reserv (fr [3].ToString ().Trim ())) {  	dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  }  else {  	dll_command += fr [3].ToString ().Trim ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: dll_command += "\"" + fr [3].ToString ().Trim () + "\"";  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: dll_command += fr [3].ToString ().Trim ();  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_FOREIGN_KEY,The following statement contains a magic number: dll_command += fr [4].ToString ();  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_INDEXES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_index' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "";  						dll_command += fr [0].ToString ();  						if (is_reserv (fr [1].ToString ().Trim ())) {  							dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  						}  						else {  							dll_command += fr [1].ToString ().Trim ();  						}  						//соостав индекса  						string fields_ = "";  						using (FbCommand fcon_f = new FbCommand (sql_index_f' fb' ft)) {  							fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_f.Parameters [0].Value = fr [2].ToString ();  							using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  								while (fr_f.Read ()) {  									if (fields_ == "") {  										fields_ += "(" + fr_f [0].ToString ();  									}  									else {  										fields_ += "'" + fr_f [0].ToString ();  									}  								}  								fields_ += ")";  								fr_f.Dispose ();  							}  							fcon_f.Dispose ();  						}  						dll_command += " " + fields_;  						com_indexes.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_INDEXES,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (sql_index' fb' ft)) {  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						string dll_command = "";  						dll_command += fr [0].ToString ();  						if (is_reserv (fr [1].ToString ().Trim ())) {  							dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  						}  						else {  							dll_command += fr [1].ToString ().Trim ();  						}  						//соостав индекса  						string fields_ = "";  						using (FbCommand fcon_f = new FbCommand (sql_index_f' fb' ft)) {  							fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  							fcon_f.Parameters [0].Value = fr [2].ToString ();  							using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  								while (fr_f.Read ()) {  									if (fields_ == "") {  										fields_ += "(" + fr_f [0].ToString ();  									}  									else {  										fields_ += "'" + fr_f [0].ToString ();  									}  								}  								fields_ += ")";  								fr_f.Dispose ();  							}  							fcon_f.Dispose ();  						}  						dll_command += " " + fields_;  						com_indexes.Add (dll_command);  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_INDEXES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_index' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "";  					dll_command += fr [0].ToString ();  					if (is_reserv (fr [1].ToString ().Trim ())) {  						dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  					}  					else {  						dll_command += fr [1].ToString ().Trim ();  					}  					//соостав индекса  					string fields_ = "";  					using (FbCommand fcon_f = new FbCommand (sql_index_f' fb' ft)) {  						fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_f.Parameters [0].Value = fr [2].ToString ();  						using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  							while (fr_f.Read ()) {  								if (fields_ == "") {  									fields_ += "(" + fr_f [0].ToString ();  								}  								else {  									fields_ += "'" + fr_f [0].ToString ();  								}  							}  							fields_ += ")";  							fr_f.Dispose ();  						}  						fcon_f.Dispose ();  					}  					dll_command += " " + fields_;  					com_indexes.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_INDEXES,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (sql_index' fb' ft)) {  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					string dll_command = "";  					dll_command += fr [0].ToString ();  					if (is_reserv (fr [1].ToString ().Trim ())) {  						dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  					}  					else {  						dll_command += fr [1].ToString ().Trim ();  					}  					//соостав индекса  					string fields_ = "";  					using (FbCommand fcon_f = new FbCommand (sql_index_f' fb' ft)) {  						fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  						fcon_f.Parameters [0].Value = fr [2].ToString ();  						using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  							while (fr_f.Read ()) {  								if (fields_ == "") {  									fields_ += "(" + fr_f [0].ToString ();  								}  								else {  									fields_ += "'" + fr_f [0].ToString ();  								}  							}  							fields_ += ")";  							fr_f.Dispose ();  						}  						fcon_f.Dispose ();  					}  					dll_command += " " + fields_;  					com_indexes.Add (dll_command);  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_INDEXES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_index' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "";  				dll_command += fr [0].ToString ();  				if (is_reserv (fr [1].ToString ().Trim ())) {  					dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  				}  				else {  					dll_command += fr [1].ToString ().Trim ();  				}  				//соостав индекса  				string fields_ = "";  				using (FbCommand fcon_f = new FbCommand (sql_index_f' fb' ft)) {  					fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_f.Parameters [0].Value = fr [2].ToString ();  					using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  						while (fr_f.Read ()) {  							if (fields_ == "") {  								fields_ += "(" + fr_f [0].ToString ();  							}  							else {  								fields_ += "'" + fr_f [0].ToString ();  							}  						}  						fields_ += ")";  						fr_f.Dispose ();  					}  					fcon_f.Dispose ();  				}  				dll_command += " " + fields_;  				com_indexes.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_INDEXES,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (sql_index' fb' ft)) {  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				string dll_command = "";  				dll_command += fr [0].ToString ();  				if (is_reserv (fr [1].ToString ().Trim ())) {  					dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  				}  				else {  					dll_command += fr [1].ToString ().Trim ();  				}  				//соостав индекса  				string fields_ = "";  				using (FbCommand fcon_f = new FbCommand (sql_index_f' fb' ft)) {  					fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  					fcon_f.Parameters [0].Value = fr [2].ToString ();  					using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  						while (fr_f.Read ()) {  							if (fields_ == "") {  								fields_ += "(" + fr_f [0].ToString ();  							}  							else {  								fields_ += "'" + fr_f [0].ToString ();  							}  						}  						fields_ += ")";  						fr_f.Dispose ();  					}  					fcon_f.Dispose ();  				}  				dll_command += " " + fields_;  				com_indexes.Add (dll_command);  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_INDEXES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_index' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "";  			dll_command += fr [0].ToString ();  			if (is_reserv (fr [1].ToString ().Trim ())) {  				dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  			}  			else {  				dll_command += fr [1].ToString ().Trim ();  			}  			//соостав индекса  			string fields_ = "";  			using (FbCommand fcon_f = new FbCommand (sql_index_f' fb' ft)) {  				fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_f.Parameters [0].Value = fr [2].ToString ();  				using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  					while (fr_f.Read ()) {  						if (fields_ == "") {  							fields_ += "(" + fr_f [0].ToString ();  						}  						else {  							fields_ += "'" + fr_f [0].ToString ();  						}  					}  					fields_ += ")";  					fr_f.Dispose ();  				}  				fcon_f.Dispose ();  			}  			dll_command += " " + fields_;  			com_indexes.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_INDEXES,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (sql_index' fb' ft)) {  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			string dll_command = "";  			dll_command += fr [0].ToString ();  			if (is_reserv (fr [1].ToString ().Trim ())) {  				dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  			}  			else {  				dll_command += fr [1].ToString ().Trim ();  			}  			//соостав индекса  			string fields_ = "";  			using (FbCommand fcon_f = new FbCommand (sql_index_f' fb' ft)) {  				fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  				fcon_f.Parameters [0].Value = fr [2].ToString ();  				using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  					while (fr_f.Read ()) {  						if (fields_ == "") {  							fields_ += "(" + fr_f [0].ToString ();  						}  						else {  							fields_ += "'" + fr_f [0].ToString ();  						}  					}  					fields_ += ")";  					fr_f.Dispose ();  				}  				fcon_f.Dispose ();  			}  			dll_command += " " + fields_;  			com_indexes.Add (dll_command);  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_INDEXES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "";  		dll_command += fr [0].ToString ();  		if (is_reserv (fr [1].ToString ().Trim ())) {  			dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  		}  		else {  			dll_command += fr [1].ToString ().Trim ();  		}  		//соостав индекса  		string fields_ = "";  		using (FbCommand fcon_f = new FbCommand (sql_index_f' fb' ft)) {  			fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_f.Parameters [0].Value = fr [2].ToString ();  			using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  				while (fr_f.Read ()) {  					if (fields_ == "") {  						fields_ += "(" + fr_f [0].ToString ();  					}  					else {  						fields_ += "'" + fr_f [0].ToString ();  					}  				}  				fields_ += ")";  				fr_f.Dispose ();  			}  			fcon_f.Dispose ();  		}  		dll_command += " " + fields_;  		com_indexes.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_INDEXES,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		string dll_command = "";  		dll_command += fr [0].ToString ();  		if (is_reserv (fr [1].ToString ().Trim ())) {  			dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  		}  		else {  			dll_command += fr [1].ToString ().Trim ();  		}  		//соостав индекса  		string fields_ = "";  		using (FbCommand fcon_f = new FbCommand (sql_index_f' fb' ft)) {  			fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  			fcon_f.Parameters [0].Value = fr [2].ToString ();  			using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  				while (fr_f.Read ()) {  					if (fields_ == "") {  						fields_ += "(" + fr_f [0].ToString ();  					}  					else {  						fields_ += "'" + fr_f [0].ToString ();  					}  				}  				fields_ += ")";  				fr_f.Dispose ();  			}  			fcon_f.Dispose ();  		}  		dll_command += " " + fields_;  		com_indexes.Add (dll_command);  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_INDEXES,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "";  	dll_command += fr [0].ToString ();  	if (is_reserv (fr [1].ToString ().Trim ())) {  		dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  	}  	else {  		dll_command += fr [1].ToString ().Trim ();  	}  	//соостав индекса  	string fields_ = "";  	using (FbCommand fcon_f = new FbCommand (sql_index_f' fb' ft)) {  		fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_f.Parameters [0].Value = fr [2].ToString ();  		using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  			while (fr_f.Read ()) {  				if (fields_ == "") {  					fields_ += "(" + fr_f [0].ToString ();  				}  				else {  					fields_ += "'" + fr_f [0].ToString ();  				}  			}  			fields_ += ")";  			fr_f.Dispose ();  		}  		fcon_f.Dispose ();  	}  	dll_command += " " + fields_;  	com_indexes.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_INDEXES,The following statement contains a magic number: while (fr.Read ()) {  	string dll_command = "";  	dll_command += fr [0].ToString ();  	if (is_reserv (fr [1].ToString ().Trim ())) {  		dll_command += "\"" + fr [1].ToString ().Trim () + "\"";  	}  	else {  		dll_command += fr [1].ToString ().Trim ();  	}  	//соостав индекса  	string fields_ = "";  	using (FbCommand fcon_f = new FbCommand (sql_index_f' fb' ft)) {  		fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  		fcon_f.Parameters [0].Value = fr [2].ToString ();  		using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  			while (fr_f.Read ()) {  				if (fields_ == "") {  					fields_ += "(" + fr_f [0].ToString ();  				}  				else {  					fields_ += "'" + fr_f [0].ToString ();  				}  			}  			fields_ += ")";  			fr_f.Dispose ();  		}  		fcon_f.Dispose ();  	}  	dll_command += " " + fields_;  	com_indexes.Add (dll_command);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_INDEXES,The following statement contains a magic number: using (FbCommand fcon_f = new FbCommand (sql_index_f' fb' ft)) {  	fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_f.Parameters [0].Value = fr [2].ToString ();  	using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  		while (fr_f.Read ()) {  			if (fields_ == "") {  				fields_ += "(" + fr_f [0].ToString ();  			}  			else {  				fields_ += "'" + fr_f [0].ToString ();  			}  		}  		fields_ += ")";  		fr_f.Dispose ();  	}  	fcon_f.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_INDEXES,The following statement contains a magic number: using (FbCommand fcon_f = new FbCommand (sql_index_f' fb' ft)) {  	fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  	fcon_f.Parameters [0].Value = fr [2].ToString ();  	using (FbDataReader fr_f = fcon_f.ExecuteReader ()) {  		while (fr_f.Read ()) {  			if (fields_ == "") {  				fields_ += "(" + fr_f [0].ToString ();  			}  			else {  				fields_ += "'" + fr_f [0].ToString ();  			}  		}  		fields_ += ")";  		fr_f.Dispose ();  	}  	fcon_f.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_INDEXES,The following statement contains a magic number: fcon_f.Parameters.Add ("@a"' FbDbType.VarChar' 31);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_INDEXES,The following statement contains a magic number: fcon_f.Parameters [0].Value = fr [2].ToString ();  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,execute_com,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_new.ConnectionString)) {  	string last_com = "";  	try {  		fb.Open ();  		int i = 0;  		int j = com.Count;  		using (FbTransaction ft = fb.BeginTransaction ()) {  			foreach (string cmd in com) {  				last_com = cmd;  				i++;  				p_cur = (int)(((float)i / (float)j) * 100);  				p_text = i.ToString () + "/" + j.ToString ();  				using (FbCommand fcon = new FbCommand (cmd' fb' ft)) {  					try {  						fcon.ExecuteNonQuery ();  					}  					catch (FbException ex) {  						sb.AppendLine ("**********");  						sb.AppendLine (ex.Message);  						sb.AppendLine ("**********");  						sb.AppendLine (cmd);  					}  					fcon.Dispose ();  				}  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("EXECUTE COM");  		sb.AppendLine (ex.Message);  		sb.AppendLine ("**********Command");  		sb.AppendLine (last_com);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,execute_com,The following statement contains a magic number: try {  	fb.Open ();  	int i = 0;  	int j = com.Count;  	using (FbTransaction ft = fb.BeginTransaction ()) {  		foreach (string cmd in com) {  			last_com = cmd;  			i++;  			p_cur = (int)(((float)i / (float)j) * 100);  			p_text = i.ToString () + "/" + j.ToString ();  			using (FbCommand fcon = new FbCommand (cmd' fb' ft)) {  				try {  					fcon.ExecuteNonQuery ();  				}  				catch (FbException ex) {  					sb.AppendLine ("**********");  					sb.AppendLine (ex.Message);  					sb.AppendLine ("**********");  					sb.AppendLine (cmd);  				}  				fcon.Dispose ();  			}  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("EXECUTE COM");  	sb.AppendLine (ex.Message);  	sb.AppendLine ("**********Command");  	sb.AppendLine (last_com);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,execute_com,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	foreach (string cmd in com) {  		last_com = cmd;  		i++;  		p_cur = (int)(((float)i / (float)j) * 100);  		p_text = i.ToString () + "/" + j.ToString ();  		using (FbCommand fcon = new FbCommand (cmd' fb' ft)) {  			try {  				fcon.ExecuteNonQuery ();  			}  			catch (FbException ex) {  				sb.AppendLine ("**********");  				sb.AppendLine (ex.Message);  				sb.AppendLine ("**********");  				sb.AppendLine (cmd);  			}  			fcon.Dispose ();  		}  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,execute_com,The following statement contains a magic number: foreach (string cmd in com) {  	last_com = cmd;  	i++;  	p_cur = (int)(((float)i / (float)j) * 100);  	p_text = i.ToString () + "/" + j.ToString ();  	using (FbCommand fcon = new FbCommand (cmd' fb' ft)) {  		try {  			fcon.ExecuteNonQuery ();  		}  		catch (FbException ex) {  			sb.AppendLine ("**********");  			sb.AppendLine (ex.Message);  			sb.AppendLine ("**********");  			sb.AppendLine (cmd);  		}  		fcon.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,execute_com,The following statement contains a magic number: p_cur = (int)(((float)i / (float)j) * 100);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_data,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		int i_ = 0;  		int j_ = tables_.Count;  		foreach (string t_ in tables_) {  			i_++;  			p_text = i_.ToString () + "/" + j_.ToString () + " " + t_;  			//прогресс таблиц  			p_cur = (int)(((float)i_ / (float)j_) * 100);  			using (FbTransaction ft = fb.BeginTransaction ()) {  				using (FbCommand fcon = new FbCommand ("Select * from " + t_' fb' ft)) {  					switch (t_.Trim ().ToUpper ()) {  					case "DELETED":  						fcon.CommandText += " where Date_Deleted >= cast('NOW' as date) - 180";  						break;  					case "ERR_LOG":  						fcon.CommandText += " where id_err_log is null";  						break;  					case "BACKUP_LOG":  						fcon.CommandText += " where id_BACKUP_LOG is null";  						break;  					case "SHADOWGUARD":  						fcon.CommandText += " where id_SHADOW is null";  						break;  					case "USER_ACTIVITY":  						fcon.CommandText += " where id_user_activity is null";  						break;  					case "MESSAGES":  						fcon.CommandText += " where lastdate >= cast('NOW' as date) - 100";  						break;  					case "SCHEDULER":  						fcon.CommandText += " where id_status is null";  						break;  					case "USER_CONNECTIONS":  						fcon.CommandText += " where ID_USER_CONNECTIONS is null";  						break;  					case "REPORT_REPLICATION":  						fcon.CommandText += " where DATE_CREATE >= cast('NOW' as date) - 30";  						break;  					}  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							var sqlinsert = "insert into " + t_ + " values(";  							for (int t = 0; t <= fr.FieldCount - 1; t++) {  								if (sqlinsert != "insert into " + t_ + " values(") {  									sqlinsert += "'";  								}  								if (fr [t] == DBNull.Value) {  									sqlinsert += "null";  								}  								else {  									if (fr [t].GetType ().ToString ().ToUpper () == "SYSTEM.DOUBLE") {  										sqlinsert += fr [t].ToString ().Replace ("'"' ".");  									}  									else  										//заменяем все ' на ''  										sqlinsert += "'" + fr [t].ToString ().Replace ("'"' "''").Replace (" 0:00:00"' " ") + "'";  								}  							}  							sqlinsert += ");";  							q_data.Enqueue (sqlinsert);  							//добавляем INSERT                                          							if (q_data.Count >= 100000) {  								//запускаем создание записей на базе  								using (Task t_load = new Task (go_load)) {  									t_load.Start ();  									t_load.Wait ();  									t_load.Dispose ();  									q_data.Clear ();  								}  							}  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  				ft.Commit ();  				ft.Dispose ();  			}  		}  		//и в конце запустим еще раз  		using (Task t_load = new Task (go_load)) {  			t_load.Start ();  			t_load.Wait ();  			t_load.Dispose ();  			q_data.Clear ();  		}  		p_text = "Анализ данных завершен";  		//конец анализа  		p_cur = 100;  		is_close_analize = true;  		//флаг' что анализ данных завершен  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_data,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		int i_ = 0;  		int j_ = tables_.Count;  		foreach (string t_ in tables_) {  			i_++;  			p_text = i_.ToString () + "/" + j_.ToString () + " " + t_;  			//прогресс таблиц  			p_cur = (int)(((float)i_ / (float)j_) * 100);  			using (FbTransaction ft = fb.BeginTransaction ()) {  				using (FbCommand fcon = new FbCommand ("Select * from " + t_' fb' ft)) {  					switch (t_.Trim ().ToUpper ()) {  					case "DELETED":  						fcon.CommandText += " where Date_Deleted >= cast('NOW' as date) - 180";  						break;  					case "ERR_LOG":  						fcon.CommandText += " where id_err_log is null";  						break;  					case "BACKUP_LOG":  						fcon.CommandText += " where id_BACKUP_LOG is null";  						break;  					case "SHADOWGUARD":  						fcon.CommandText += " where id_SHADOW is null";  						break;  					case "USER_ACTIVITY":  						fcon.CommandText += " where id_user_activity is null";  						break;  					case "MESSAGES":  						fcon.CommandText += " where lastdate >= cast('NOW' as date) - 100";  						break;  					case "SCHEDULER":  						fcon.CommandText += " where id_status is null";  						break;  					case "USER_CONNECTIONS":  						fcon.CommandText += " where ID_USER_CONNECTIONS is null";  						break;  					case "REPORT_REPLICATION":  						fcon.CommandText += " where DATE_CREATE >= cast('NOW' as date) - 30";  						break;  					}  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							var sqlinsert = "insert into " + t_ + " values(";  							for (int t = 0; t <= fr.FieldCount - 1; t++) {  								if (sqlinsert != "insert into " + t_ + " values(") {  									sqlinsert += "'";  								}  								if (fr [t] == DBNull.Value) {  									sqlinsert += "null";  								}  								else {  									if (fr [t].GetType ().ToString ().ToUpper () == "SYSTEM.DOUBLE") {  										sqlinsert += fr [t].ToString ().Replace ("'"' ".");  									}  									else  										//заменяем все ' на ''  										sqlinsert += "'" + fr [t].ToString ().Replace ("'"' "''").Replace (" 0:00:00"' " ") + "'";  								}  							}  							sqlinsert += ");";  							q_data.Enqueue (sqlinsert);  							//добавляем INSERT                                          							if (q_data.Count >= 100000) {  								//запускаем создание записей на базе  								using (Task t_load = new Task (go_load)) {  									t_load.Start ();  									t_load.Wait ();  									t_load.Dispose ();  									q_data.Clear ();  								}  							}  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  				ft.Commit ();  				ft.Dispose ();  			}  		}  		//и в конце запустим еще раз  		using (Task t_load = new Task (go_load)) {  			t_load.Start ();  			t_load.Wait ();  			t_load.Dispose ();  			q_data.Clear ();  		}  		p_text = "Анализ данных завершен";  		//конец анализа  		p_cur = 100;  		is_close_analize = true;  		//флаг' что анализ данных завершен  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_data,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_old.ConnectionString)) {  	try {  		fb.Open ();  		int i_ = 0;  		int j_ = tables_.Count;  		foreach (string t_ in tables_) {  			i_++;  			p_text = i_.ToString () + "/" + j_.ToString () + " " + t_;  			//прогресс таблиц  			p_cur = (int)(((float)i_ / (float)j_) * 100);  			using (FbTransaction ft = fb.BeginTransaction ()) {  				using (FbCommand fcon = new FbCommand ("Select * from " + t_' fb' ft)) {  					switch (t_.Trim ().ToUpper ()) {  					case "DELETED":  						fcon.CommandText += " where Date_Deleted >= cast('NOW' as date) - 180";  						break;  					case "ERR_LOG":  						fcon.CommandText += " where id_err_log is null";  						break;  					case "BACKUP_LOG":  						fcon.CommandText += " where id_BACKUP_LOG is null";  						break;  					case "SHADOWGUARD":  						fcon.CommandText += " where id_SHADOW is null";  						break;  					case "USER_ACTIVITY":  						fcon.CommandText += " where id_user_activity is null";  						break;  					case "MESSAGES":  						fcon.CommandText += " where lastdate >= cast('NOW' as date) - 100";  						break;  					case "SCHEDULER":  						fcon.CommandText += " where id_status is null";  						break;  					case "USER_CONNECTIONS":  						fcon.CommandText += " where ID_USER_CONNECTIONS is null";  						break;  					case "REPORT_REPLICATION":  						fcon.CommandText += " where DATE_CREATE >= cast('NOW' as date) - 30";  						break;  					}  					using (FbDataReader fr = fcon.ExecuteReader ()) {  						while (fr.Read ()) {  							var sqlinsert = "insert into " + t_ + " values(";  							for (int t = 0; t <= fr.FieldCount - 1; t++) {  								if (sqlinsert != "insert into " + t_ + " values(") {  									sqlinsert += "'";  								}  								if (fr [t] == DBNull.Value) {  									sqlinsert += "null";  								}  								else {  									if (fr [t].GetType ().ToString ().ToUpper () == "SYSTEM.DOUBLE") {  										sqlinsert += fr [t].ToString ().Replace ("'"' ".");  									}  									else  										//заменяем все ' на ''  										sqlinsert += "'" + fr [t].ToString ().Replace ("'"' "''").Replace (" 0:00:00"' " ") + "'";  								}  							}  							sqlinsert += ");";  							q_data.Enqueue (sqlinsert);  							//добавляем INSERT                                          							if (q_data.Count >= 100000) {  								//запускаем создание записей на базе  								using (Task t_load = new Task (go_load)) {  									t_load.Start ();  									t_load.Wait ();  									t_load.Dispose ();  									q_data.Clear ();  								}  							}  						}  						fr.Dispose ();  					}  					fcon.Dispose ();  				}  				ft.Commit ();  				ft.Dispose ();  			}  		}  		//и в конце запустим еще раз  		using (Task t_load = new Task (go_load)) {  			t_load.Start ();  			t_load.Wait ();  			t_load.Dispose ();  			q_data.Clear ();  		}  		p_text = "Анализ данных завершен";  		//конец анализа  		p_cur = 100;  		is_close_analize = true;  		//флаг' что анализ данных завершен  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_data,The following statement contains a magic number: try {  	fb.Open ();  	int i_ = 0;  	int j_ = tables_.Count;  	foreach (string t_ in tables_) {  		i_++;  		p_text = i_.ToString () + "/" + j_.ToString () + " " + t_;  		//прогресс таблиц  		p_cur = (int)(((float)i_ / (float)j_) * 100);  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand ("Select * from " + t_' fb' ft)) {  				switch (t_.Trim ().ToUpper ()) {  				case "DELETED":  					fcon.CommandText += " where Date_Deleted >= cast('NOW' as date) - 180";  					break;  				case "ERR_LOG":  					fcon.CommandText += " where id_err_log is null";  					break;  				case "BACKUP_LOG":  					fcon.CommandText += " where id_BACKUP_LOG is null";  					break;  				case "SHADOWGUARD":  					fcon.CommandText += " where id_SHADOW is null";  					break;  				case "USER_ACTIVITY":  					fcon.CommandText += " where id_user_activity is null";  					break;  				case "MESSAGES":  					fcon.CommandText += " where lastdate >= cast('NOW' as date) - 100";  					break;  				case "SCHEDULER":  					fcon.CommandText += " where id_status is null";  					break;  				case "USER_CONNECTIONS":  					fcon.CommandText += " where ID_USER_CONNECTIONS is null";  					break;  				case "REPORT_REPLICATION":  					fcon.CommandText += " where DATE_CREATE >= cast('NOW' as date) - 30";  					break;  				}  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						var sqlinsert = "insert into " + t_ + " values(";  						for (int t = 0; t <= fr.FieldCount - 1; t++) {  							if (sqlinsert != "insert into " + t_ + " values(") {  								sqlinsert += "'";  							}  							if (fr [t] == DBNull.Value) {  								sqlinsert += "null";  							}  							else {  								if (fr [t].GetType ().ToString ().ToUpper () == "SYSTEM.DOUBLE") {  									sqlinsert += fr [t].ToString ().Replace ("'"' ".");  								}  								else  									//заменяем все ' на ''  									sqlinsert += "'" + fr [t].ToString ().Replace ("'"' "''").Replace (" 0:00:00"' " ") + "'";  							}  						}  						sqlinsert += ");";  						q_data.Enqueue (sqlinsert);  						//добавляем INSERT                                          						if (q_data.Count >= 100000) {  							//запускаем создание записей на базе  							using (Task t_load = new Task (go_load)) {  								t_load.Start ();  								t_load.Wait ();  								t_load.Dispose ();  								q_data.Clear ();  							}  						}  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	//и в конце запустим еще раз  	using (Task t_load = new Task (go_load)) {  		t_load.Start ();  		t_load.Wait ();  		t_load.Dispose ();  		q_data.Clear ();  	}  	p_text = "Анализ данных завершен";  	//конец анализа  	p_cur = 100;  	is_close_analize = true;  	//флаг' что анализ данных завершен  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_data,The following statement contains a magic number: try {  	fb.Open ();  	int i_ = 0;  	int j_ = tables_.Count;  	foreach (string t_ in tables_) {  		i_++;  		p_text = i_.ToString () + "/" + j_.ToString () + " " + t_;  		//прогресс таблиц  		p_cur = (int)(((float)i_ / (float)j_) * 100);  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand ("Select * from " + t_' fb' ft)) {  				switch (t_.Trim ().ToUpper ()) {  				case "DELETED":  					fcon.CommandText += " where Date_Deleted >= cast('NOW' as date) - 180";  					break;  				case "ERR_LOG":  					fcon.CommandText += " where id_err_log is null";  					break;  				case "BACKUP_LOG":  					fcon.CommandText += " where id_BACKUP_LOG is null";  					break;  				case "SHADOWGUARD":  					fcon.CommandText += " where id_SHADOW is null";  					break;  				case "USER_ACTIVITY":  					fcon.CommandText += " where id_user_activity is null";  					break;  				case "MESSAGES":  					fcon.CommandText += " where lastdate >= cast('NOW' as date) - 100";  					break;  				case "SCHEDULER":  					fcon.CommandText += " where id_status is null";  					break;  				case "USER_CONNECTIONS":  					fcon.CommandText += " where ID_USER_CONNECTIONS is null";  					break;  				case "REPORT_REPLICATION":  					fcon.CommandText += " where DATE_CREATE >= cast('NOW' as date) - 30";  					break;  				}  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						var sqlinsert = "insert into " + t_ + " values(";  						for (int t = 0; t <= fr.FieldCount - 1; t++) {  							if (sqlinsert != "insert into " + t_ + " values(") {  								sqlinsert += "'";  							}  							if (fr [t] == DBNull.Value) {  								sqlinsert += "null";  							}  							else {  								if (fr [t].GetType ().ToString ().ToUpper () == "SYSTEM.DOUBLE") {  									sqlinsert += fr [t].ToString ().Replace ("'"' ".");  								}  								else  									//заменяем все ' на ''  									sqlinsert += "'" + fr [t].ToString ().Replace ("'"' "''").Replace (" 0:00:00"' " ") + "'";  							}  						}  						sqlinsert += ");";  						q_data.Enqueue (sqlinsert);  						//добавляем INSERT                                          						if (q_data.Count >= 100000) {  							//запускаем создание записей на базе  							using (Task t_load = new Task (go_load)) {  								t_load.Start ();  								t_load.Wait ();  								t_load.Dispose ();  								q_data.Clear ();  							}  						}  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	//и в конце запустим еще раз  	using (Task t_load = new Task (go_load)) {  		t_load.Start ();  		t_load.Wait ();  		t_load.Dispose ();  		q_data.Clear ();  	}  	p_text = "Анализ данных завершен";  	//конец анализа  	p_cur = 100;  	is_close_analize = true;  	//флаг' что анализ данных завершен  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_data,The following statement contains a magic number: try {  	fb.Open ();  	int i_ = 0;  	int j_ = tables_.Count;  	foreach (string t_ in tables_) {  		i_++;  		p_text = i_.ToString () + "/" + j_.ToString () + " " + t_;  		//прогресс таблиц  		p_cur = (int)(((float)i_ / (float)j_) * 100);  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand ("Select * from " + t_' fb' ft)) {  				switch (t_.Trim ().ToUpper ()) {  				case "DELETED":  					fcon.CommandText += " where Date_Deleted >= cast('NOW' as date) - 180";  					break;  				case "ERR_LOG":  					fcon.CommandText += " where id_err_log is null";  					break;  				case "BACKUP_LOG":  					fcon.CommandText += " where id_BACKUP_LOG is null";  					break;  				case "SHADOWGUARD":  					fcon.CommandText += " where id_SHADOW is null";  					break;  				case "USER_ACTIVITY":  					fcon.CommandText += " where id_user_activity is null";  					break;  				case "MESSAGES":  					fcon.CommandText += " where lastdate >= cast('NOW' as date) - 100";  					break;  				case "SCHEDULER":  					fcon.CommandText += " where id_status is null";  					break;  				case "USER_CONNECTIONS":  					fcon.CommandText += " where ID_USER_CONNECTIONS is null";  					break;  				case "REPORT_REPLICATION":  					fcon.CommandText += " where DATE_CREATE >= cast('NOW' as date) - 30";  					break;  				}  				using (FbDataReader fr = fcon.ExecuteReader ()) {  					while (fr.Read ()) {  						var sqlinsert = "insert into " + t_ + " values(";  						for (int t = 0; t <= fr.FieldCount - 1; t++) {  							if (sqlinsert != "insert into " + t_ + " values(") {  								sqlinsert += "'";  							}  							if (fr [t] == DBNull.Value) {  								sqlinsert += "null";  							}  							else {  								if (fr [t].GetType ().ToString ().ToUpper () == "SYSTEM.DOUBLE") {  									sqlinsert += fr [t].ToString ().Replace ("'"' ".");  								}  								else  									//заменяем все ' на ''  									sqlinsert += "'" + fr [t].ToString ().Replace ("'"' "''").Replace (" 0:00:00"' " ") + "'";  							}  						}  						sqlinsert += ");";  						q_data.Enqueue (sqlinsert);  						//добавляем INSERT                                          						if (q_data.Count >= 100000) {  							//запускаем создание записей на базе  							using (Task t_load = new Task (go_load)) {  								t_load.Start ();  								t_load.Wait ();  								t_load.Dispose ();  								q_data.Clear ();  							}  						}  					}  					fr.Dispose ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	//и в конце запустим еще раз  	using (Task t_load = new Task (go_load)) {  		t_load.Start ();  		t_load.Wait ();  		t_load.Dispose ();  		q_data.Clear ();  	}  	p_text = "Анализ данных завершен";  	//конец анализа  	p_cur = 100;  	is_close_analize = true;  	//флаг' что анализ данных завершен  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_data,The following statement contains a magic number: foreach (string t_ in tables_) {  	i_++;  	p_text = i_.ToString () + "/" + j_.ToString () + " " + t_;  	//прогресс таблиц  	p_cur = (int)(((float)i_ / (float)j_) * 100);  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand ("Select * from " + t_' fb' ft)) {  			switch (t_.Trim ().ToUpper ()) {  			case "DELETED":  				fcon.CommandText += " where Date_Deleted >= cast('NOW' as date) - 180";  				break;  			case "ERR_LOG":  				fcon.CommandText += " where id_err_log is null";  				break;  			case "BACKUP_LOG":  				fcon.CommandText += " where id_BACKUP_LOG is null";  				break;  			case "SHADOWGUARD":  				fcon.CommandText += " where id_SHADOW is null";  				break;  			case "USER_ACTIVITY":  				fcon.CommandText += " where id_user_activity is null";  				break;  			case "MESSAGES":  				fcon.CommandText += " where lastdate >= cast('NOW' as date) - 100";  				break;  			case "SCHEDULER":  				fcon.CommandText += " where id_status is null";  				break;  			case "USER_CONNECTIONS":  				fcon.CommandText += " where ID_USER_CONNECTIONS is null";  				break;  			case "REPORT_REPLICATION":  				fcon.CommandText += " where DATE_CREATE >= cast('NOW' as date) - 30";  				break;  			}  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					var sqlinsert = "insert into " + t_ + " values(";  					for (int t = 0; t <= fr.FieldCount - 1; t++) {  						if (sqlinsert != "insert into " + t_ + " values(") {  							sqlinsert += "'";  						}  						if (fr [t] == DBNull.Value) {  							sqlinsert += "null";  						}  						else {  							if (fr [t].GetType ().ToString ().ToUpper () == "SYSTEM.DOUBLE") {  								sqlinsert += fr [t].ToString ().Replace ("'"' ".");  							}  							else  								//заменяем все ' на ''  								sqlinsert += "'" + fr [t].ToString ().Replace ("'"' "''").Replace (" 0:00:00"' " ") + "'";  						}  					}  					sqlinsert += ");";  					q_data.Enqueue (sqlinsert);  					//добавляем INSERT                                          					if (q_data.Count >= 100000) {  						//запускаем создание записей на базе  						using (Task t_load = new Task (go_load)) {  							t_load.Start ();  							t_load.Wait ();  							t_load.Dispose ();  							q_data.Clear ();  						}  					}  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_data,The following statement contains a magic number: foreach (string t_ in tables_) {  	i_++;  	p_text = i_.ToString () + "/" + j_.ToString () + " " + t_;  	//прогресс таблиц  	p_cur = (int)(((float)i_ / (float)j_) * 100);  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand ("Select * from " + t_' fb' ft)) {  			switch (t_.Trim ().ToUpper ()) {  			case "DELETED":  				fcon.CommandText += " where Date_Deleted >= cast('NOW' as date) - 180";  				break;  			case "ERR_LOG":  				fcon.CommandText += " where id_err_log is null";  				break;  			case "BACKUP_LOG":  				fcon.CommandText += " where id_BACKUP_LOG is null";  				break;  			case "SHADOWGUARD":  				fcon.CommandText += " where id_SHADOW is null";  				break;  			case "USER_ACTIVITY":  				fcon.CommandText += " where id_user_activity is null";  				break;  			case "MESSAGES":  				fcon.CommandText += " where lastdate >= cast('NOW' as date) - 100";  				break;  			case "SCHEDULER":  				fcon.CommandText += " where id_status is null";  				break;  			case "USER_CONNECTIONS":  				fcon.CommandText += " where ID_USER_CONNECTIONS is null";  				break;  			case "REPORT_REPLICATION":  				fcon.CommandText += " where DATE_CREATE >= cast('NOW' as date) - 30";  				break;  			}  			using (FbDataReader fr = fcon.ExecuteReader ()) {  				while (fr.Read ()) {  					var sqlinsert = "insert into " + t_ + " values(";  					for (int t = 0; t <= fr.FieldCount - 1; t++) {  						if (sqlinsert != "insert into " + t_ + " values(") {  							sqlinsert += "'";  						}  						if (fr [t] == DBNull.Value) {  							sqlinsert += "null";  						}  						else {  							if (fr [t].GetType ().ToString ().ToUpper () == "SYSTEM.DOUBLE") {  								sqlinsert += fr [t].ToString ().Replace ("'"' ".");  							}  							else  								//заменяем все ' на ''  								sqlinsert += "'" + fr [t].ToString ().Replace ("'"' "''").Replace (" 0:00:00"' " ") + "'";  						}  					}  					sqlinsert += ");";  					q_data.Enqueue (sqlinsert);  					//добавляем INSERT                                          					if (q_data.Count >= 100000) {  						//запускаем создание записей на базе  						using (Task t_load = new Task (go_load)) {  							t_load.Start ();  							t_load.Wait ();  							t_load.Dispose ();  							q_data.Clear ();  						}  					}  				}  				fr.Dispose ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_data,The following statement contains a magic number: p_cur = (int)(((float)i_ / (float)j_) * 100);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_data,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand ("Select * from " + t_' fb' ft)) {  		switch (t_.Trim ().ToUpper ()) {  		case "DELETED":  			fcon.CommandText += " where Date_Deleted >= cast('NOW' as date) - 180";  			break;  		case "ERR_LOG":  			fcon.CommandText += " where id_err_log is null";  			break;  		case "BACKUP_LOG":  			fcon.CommandText += " where id_BACKUP_LOG is null";  			break;  		case "SHADOWGUARD":  			fcon.CommandText += " where id_SHADOW is null";  			break;  		case "USER_ACTIVITY":  			fcon.CommandText += " where id_user_activity is null";  			break;  		case "MESSAGES":  			fcon.CommandText += " where lastdate >= cast('NOW' as date) - 100";  			break;  		case "SCHEDULER":  			fcon.CommandText += " where id_status is null";  			break;  		case "USER_CONNECTIONS":  			fcon.CommandText += " where ID_USER_CONNECTIONS is null";  			break;  		case "REPORT_REPLICATION":  			fcon.CommandText += " where DATE_CREATE >= cast('NOW' as date) - 30";  			break;  		}  		using (FbDataReader fr = fcon.ExecuteReader ()) {  			while (fr.Read ()) {  				var sqlinsert = "insert into " + t_ + " values(";  				for (int t = 0; t <= fr.FieldCount - 1; t++) {  					if (sqlinsert != "insert into " + t_ + " values(") {  						sqlinsert += "'";  					}  					if (fr [t] == DBNull.Value) {  						sqlinsert += "null";  					}  					else {  						if (fr [t].GetType ().ToString ().ToUpper () == "SYSTEM.DOUBLE") {  							sqlinsert += fr [t].ToString ().Replace ("'"' ".");  						}  						else  							//заменяем все ' на ''  							sqlinsert += "'" + fr [t].ToString ().Replace ("'"' "''").Replace (" 0:00:00"' " ") + "'";  					}  				}  				sqlinsert += ");";  				q_data.Enqueue (sqlinsert);  				//добавляем INSERT                                          				if (q_data.Count >= 100000) {  					//запускаем создание записей на базе  					using (Task t_load = new Task (go_load)) {  						t_load.Start ();  						t_load.Wait ();  						t_load.Dispose ();  						q_data.Clear ();  					}  				}  			}  			fr.Dispose ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_data,The following statement contains a magic number: using (FbCommand fcon = new FbCommand ("Select * from " + t_' fb' ft)) {  	switch (t_.Trim ().ToUpper ()) {  	case "DELETED":  		fcon.CommandText += " where Date_Deleted >= cast('NOW' as date) - 180";  		break;  	case "ERR_LOG":  		fcon.CommandText += " where id_err_log is null";  		break;  	case "BACKUP_LOG":  		fcon.CommandText += " where id_BACKUP_LOG is null";  		break;  	case "SHADOWGUARD":  		fcon.CommandText += " where id_SHADOW is null";  		break;  	case "USER_ACTIVITY":  		fcon.CommandText += " where id_user_activity is null";  		break;  	case "MESSAGES":  		fcon.CommandText += " where lastdate >= cast('NOW' as date) - 100";  		break;  	case "SCHEDULER":  		fcon.CommandText += " where id_status is null";  		break;  	case "USER_CONNECTIONS":  		fcon.CommandText += " where ID_USER_CONNECTIONS is null";  		break;  	case "REPORT_REPLICATION":  		fcon.CommandText += " where DATE_CREATE >= cast('NOW' as date) - 30";  		break;  	}  	using (FbDataReader fr = fcon.ExecuteReader ()) {  		while (fr.Read ()) {  			var sqlinsert = "insert into " + t_ + " values(";  			for (int t = 0; t <= fr.FieldCount - 1; t++) {  				if (sqlinsert != "insert into " + t_ + " values(") {  					sqlinsert += "'";  				}  				if (fr [t] == DBNull.Value) {  					sqlinsert += "null";  				}  				else {  					if (fr [t].GetType ().ToString ().ToUpper () == "SYSTEM.DOUBLE") {  						sqlinsert += fr [t].ToString ().Replace ("'"' ".");  					}  					else  						//заменяем все ' на ''  						sqlinsert += "'" + fr [t].ToString ().Replace ("'"' "''").Replace (" 0:00:00"' " ") + "'";  				}  			}  			sqlinsert += ");";  			q_data.Enqueue (sqlinsert);  			//добавляем INSERT                                          			if (q_data.Count >= 100000) {  				//запускаем создание записей на базе  				using (Task t_load = new Task (go_load)) {  					t_load.Start ();  					t_load.Wait ();  					t_load.Dispose ();  					q_data.Clear ();  				}  			}  		}  		fr.Dispose ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_data,The following statement contains a magic number: using (FbDataReader fr = fcon.ExecuteReader ()) {  	while (fr.Read ()) {  		var sqlinsert = "insert into " + t_ + " values(";  		for (int t = 0; t <= fr.FieldCount - 1; t++) {  			if (sqlinsert != "insert into " + t_ + " values(") {  				sqlinsert += "'";  			}  			if (fr [t] == DBNull.Value) {  				sqlinsert += "null";  			}  			else {  				if (fr [t].GetType ().ToString ().ToUpper () == "SYSTEM.DOUBLE") {  					sqlinsert += fr [t].ToString ().Replace ("'"' ".");  				}  				else  					//заменяем все ' на ''  					sqlinsert += "'" + fr [t].ToString ().Replace ("'"' "''").Replace (" 0:00:00"' " ") + "'";  			}  		}  		sqlinsert += ");";  		q_data.Enqueue (sqlinsert);  		//добавляем INSERT                                          		if (q_data.Count >= 100000) {  			//запускаем создание записей на базе  			using (Task t_load = new Task (go_load)) {  				t_load.Start ();  				t_load.Wait ();  				t_load.Dispose ();  				q_data.Clear ();  			}  		}  	}  	fr.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_data,The following statement contains a magic number: while (fr.Read ()) {  	var sqlinsert = "insert into " + t_ + " values(";  	for (int t = 0; t <= fr.FieldCount - 1; t++) {  		if (sqlinsert != "insert into " + t_ + " values(") {  			sqlinsert += "'";  		}  		if (fr [t] == DBNull.Value) {  			sqlinsert += "null";  		}  		else {  			if (fr [t].GetType ().ToString ().ToUpper () == "SYSTEM.DOUBLE") {  				sqlinsert += fr [t].ToString ().Replace ("'"' ".");  			}  			else  				//заменяем все ' на ''  				sqlinsert += "'" + fr [t].ToString ().Replace ("'"' "''").Replace (" 0:00:00"' " ") + "'";  		}  	}  	sqlinsert += ");";  	q_data.Enqueue (sqlinsert);  	//добавляем INSERT                                          	if (q_data.Count >= 100000) {  		//запускаем создание записей на базе  		using (Task t_load = new Task (go_load)) {  			t_load.Start ();  			t_load.Wait ();  			t_load.Dispose ();  			q_data.Clear ();  		}  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_data,The following statement contains a magic number: if (q_data.Count >= 100000) {  	//запускаем создание записей на базе  	using (Task t_load = new Task (go_load)) {  		t_load.Start ();  		t_load.Wait ();  		t_load.Dispose ();  		q_data.Clear ();  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_data,The following statement contains a magic number: p_cur = 100;  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_load,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_new.ConnectionString)) {  	try {  		fb.Open ();  		int _i = 0;  		int _j = q_data.Count;  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (""' fb' ft)) {  				while (q_data.Count != 0) {  					_i++;  					p_cur_2 = (int)(((float)_i / (float)_j) * 100);  					p_text_2 = p_cur_2.ToString () + @"%";  					fcon.CommandText = q_data.Dequeue ();  					fcon.ExecuteNonQuery ();  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("");  		sb.AppendLine (ex.Message);  	}  	finally {  		fb.Close ();  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_load,The following statement contains a magic number: try {  	fb.Open ();  	int _i = 0;  	int _j = q_data.Count;  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (""' fb' ft)) {  			while (q_data.Count != 0) {  				_i++;  				p_cur_2 = (int)(((float)_i / (float)_j) * 100);  				p_text_2 = p_cur_2.ToString () + @"%";  				fcon.CommandText = q_data.Dequeue ();  				fcon.ExecuteNonQuery ();  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("");  	sb.AppendLine (ex.Message);  }  finally {  	fb.Close ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_load,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (""' fb' ft)) {  		while (q_data.Count != 0) {  			_i++;  			p_cur_2 = (int)(((float)_i / (float)_j) * 100);  			p_text_2 = p_cur_2.ToString () + @"%";  			fcon.CommandText = q_data.Dequeue ();  			fcon.ExecuteNonQuery ();  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_load,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (""' fb' ft)) {  	while (q_data.Count != 0) {  		_i++;  		p_cur_2 = (int)(((float)_i / (float)_j) * 100);  		p_text_2 = p_cur_2.ToString () + @"%";  		fcon.CommandText = q_data.Dequeue ();  		fcon.ExecuteNonQuery ();  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_load,The following statement contains a magic number: while (q_data.Count != 0) {  	_i++;  	p_cur_2 = (int)(((float)_i / (float)_j) * 100);  	p_text_2 = p_cur_2.ToString () + @"%";  	fcon.CommandText = q_data.Dequeue ();  	fcon.ExecuteNonQuery ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_load,The following statement contains a magic number: p_cur_2 = (int)(((float)_i / (float)_j) * 100);  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,COPY_DATA,The following statement contains a magic number: using (FbConnection fb = new FbConnection (fc_new.ConnectionString)) {  	try {  		fb.Open ();  		using (FbTransaction ft = fb.BeginTransaction ()) {  			using (FbCommand fcon = new FbCommand (""' fb' ft)) {  				foreach (string cmd in com2) {  					i++;  					p_cur = (int)(((float)i / (float)j) * 100);  					p_text = table_name + " " + i.ToString () + "/" + j.ToString ();  					fcon.CommandText = cmd;  					try {  						fcon.ExecuteNonQuery ();  					}  					catch (FbException ex2) {  						sb.AppendLine ("**********");  						sb.AppendLine ("ERROR DATA");  						sb.AppendLine ("**********");  						sb.AppendLine (cmd);  						sb.AppendLine ("");  						sb.AppendLine (ex2.Message);  						sb.AppendLine ("**********");  					}  				}  				fcon.Dispose ();  			}  			ft.Commit ();  			ft.Dispose ();  		}  	}  	catch (FbException ex) {  		sb.AppendLine ("DATA - " + table_name);  		sb.AppendLine (ex.Message);  	}  	fb.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,COPY_DATA,The following statement contains a magic number: try {  	fb.Open ();  	using (FbTransaction ft = fb.BeginTransaction ()) {  		using (FbCommand fcon = new FbCommand (""' fb' ft)) {  			foreach (string cmd in com2) {  				i++;  				p_cur = (int)(((float)i / (float)j) * 100);  				p_text = table_name + " " + i.ToString () + "/" + j.ToString ();  				fcon.CommandText = cmd;  				try {  					fcon.ExecuteNonQuery ();  				}  				catch (FbException ex2) {  					sb.AppendLine ("**********");  					sb.AppendLine ("ERROR DATA");  					sb.AppendLine ("**********");  					sb.AppendLine (cmd);  					sb.AppendLine ("");  					sb.AppendLine (ex2.Message);  					sb.AppendLine ("**********");  				}  			}  			fcon.Dispose ();  		}  		ft.Commit ();  		ft.Dispose ();  	}  }  catch (FbException ex) {  	sb.AppendLine ("DATA - " + table_name);  	sb.AppendLine (ex.Message);  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,COPY_DATA,The following statement contains a magic number: using (FbTransaction ft = fb.BeginTransaction ()) {  	using (FbCommand fcon = new FbCommand (""' fb' ft)) {  		foreach (string cmd in com2) {  			i++;  			p_cur = (int)(((float)i / (float)j) * 100);  			p_text = table_name + " " + i.ToString () + "/" + j.ToString ();  			fcon.CommandText = cmd;  			try {  				fcon.ExecuteNonQuery ();  			}  			catch (FbException ex2) {  				sb.AppendLine ("**********");  				sb.AppendLine ("ERROR DATA");  				sb.AppendLine ("**********");  				sb.AppendLine (cmd);  				sb.AppendLine ("");  				sb.AppendLine (ex2.Message);  				sb.AppendLine ("**********");  			}  		}  		fcon.Dispose ();  	}  	ft.Commit ();  	ft.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,COPY_DATA,The following statement contains a magic number: using (FbCommand fcon = new FbCommand (""' fb' ft)) {  	foreach (string cmd in com2) {  		i++;  		p_cur = (int)(((float)i / (float)j) * 100);  		p_text = table_name + " " + i.ToString () + "/" + j.ToString ();  		fcon.CommandText = cmd;  		try {  			fcon.ExecuteNonQuery ();  		}  		catch (FbException ex2) {  			sb.AppendLine ("**********");  			sb.AppendLine ("ERROR DATA");  			sb.AppendLine ("**********");  			sb.AppendLine (cmd);  			sb.AppendLine ("");  			sb.AppendLine (ex2.Message);  			sb.AppendLine ("**********");  		}  	}  	fcon.Dispose ();  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,COPY_DATA,The following statement contains a magic number: foreach (string cmd in com2) {  	i++;  	p_cur = (int)(((float)i / (float)j) * 100);  	p_text = table_name + " " + i.ToString () + "/" + j.ToString ();  	fcon.CommandText = cmd;  	try {  		fcon.ExecuteNonQuery ();  	}  	catch (FbException ex2) {  		sb.AppendLine ("**********");  		sb.AppendLine ("ERROR DATA");  		sb.AppendLine ("**********");  		sb.AppendLine (cmd);  		sb.AppendLine ("");  		sb.AppendLine (ex2.Message);  		sb.AppendLine ("**********");  	}  }  
Magic Number,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,COPY_DATA,The following statement contains a magic number: p_cur = (int)(((float)i / (float)j) * 100);  
Missing Default,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,b_next_Click,The following switch statement is missing a default case: switch (i) {  case 3:  	if (this.is_convert.Checked) {  		if (!File.Exists (this.t_database.Text)) {  			is_ok = false;  			MessageBox.Show ("Файла не существует\nпроверте правильность пути"' "Файл не найден"' MessageBoxButtons.OK' MessageBoxIcon.Error);  		}  	}  	if (this.is_install.Checked && is_ok) {  		//проверим  		//есть ли установленный сервер  FB25  		is_ok = check_sysdba (this.t_sysdba.Text);  	}  	break;  }  
Missing Default,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,set_tab,The following switch statement is missing a default case: switch (j) {  case 1:  	this.tabControl1.SelectedIndex = j - 1;  	this.b_prev.Enabled = false;  	this.b_next.Enabled = true;  	this.button3.Enabled = true;  	break;  case 2:  	this.tabControl1.SelectedIndex = j - 1;  	this.b_prev.Enabled = true;  	this.b_next.Enabled = true;  	this.button3.Enabled = true;  	break;  case 3:  	this.tabControl1.SelectedIndex = j - 1;  	this.b_prev.Enabled = false;  	this.b_next.Enabled = false;  	this.button3.Enabled = false;  	break;  case 4:  	this.tabControl1.SelectedIndex = j - 1;  	this.b_prev.Enabled = false;  	this.b_next.Text = "Завершить";  	this.b_next.Enabled = true;  	this.button3.Visible = false;  	this.richTextBox1.Clear ();  	if (sb.Length > 0) {  		try {  			using (StreamWriter outfile = new StreamWriter (File.Create (temp_folder + @"\error.log")' Encoding.Default)) {  				sb.Replace ("{"' "{{");  				sb.Replace ("}"' "}}");  				outfile.Write (sb.ToString ()' Encoding.Default);  			}  			this.richTextBox1.AppendText (File.ReadAllText (temp_folder + @"\error.log"' Encoding.Default));  		}  		catch (Exception ex) {  			MessageBox.Show (ex.Message);  		}  		this.image_bad.Image = dataPump.det.Properties.Resources.l_fatal;  	}  	else {  		this.richTextBox1.Text = "Конвертация прошла успешно";  		this.image_bad.Image = dataPump.det.Properties.Resources.l_done;  	}  	this.richTextBox1.Visible = true;  	this.l_error.Visible = true;  	this.image_bad.Visible = true;  	break;  }  
Missing Default,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS_PROTOTYPE,The following switch statement is missing a default case: switch (fr [3].ToString ().Trim ()) {  case "1":  	dll_command += " before insert ";  	break;  case "2":  	dll_command += " after insert ";  	break;  case "3":  	dll_command += " before update ";  	break;  case "4":  	dll_command += " after update ";  	break;  case "5":  	dll_command += " before delete ";  	break;  case "6":  	dll_command += " after delete ";  	break;  case "17":  	dll_command += " before insert or update ";  	break;  case "25":  	dll_command += " before insert or delete";  	break;  case "113":  	dll_command += " before insert or update or delete ";  	break;  case "27":  	dll_command += " before update or delete ";  	break;  case "18":  	dll_command += " after insert or update ";  	break;  case "26":  	dll_command += " after insert or delete";  	break;  case "114":  	dll_command += " after insert or update or delete ";  	break;  case "28":  	dll_command += " after update or delete ";  	break;  }  
Missing Default,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,m_TRIGGERS,The following switch statement is missing a default case: switch (fr [3].ToString ().Trim ()) {  case "1":  	dll_command += " before insert ";  	break;  case "2":  	dll_command += " after insert ";  	break;  case "3":  	dll_command += " before update ";  	break;  case "4":  	dll_command += " after update ";  	break;  case "5":  	dll_command += " before delete ";  	break;  case "6":  	dll_command += " after delete ";  	break;  case "17":  	dll_command += " before insert or update ";  	break;  case "25":  	dll_command += " before insert or delete";  	break;  case "113":  	dll_command += " before insert or update or delete ";  	break;  case "27":  	dll_command += " before update or delete ";  	break;  case "18":  	dll_command += " after insert or update ";  	break;  case "26":  	dll_command += " after insert or delete";  	break;  case "114":  	dll_command += " after insert or update or delete ";  	break;  case "28":  	dll_command += " after update or delete ";  	break;  }  
Missing Default,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,go_data,The following switch statement is missing a default case: switch (t_.Trim ().ToUpper ()) {  case "DELETED":  	fcon.CommandText += " where Date_Deleted >= cast('NOW' as date) - 180";  	break;  case "ERR_LOG":  	fcon.CommandText += " where id_err_log is null";  	break;  case "BACKUP_LOG":  	fcon.CommandText += " where id_BACKUP_LOG is null";  	break;  case "SHADOWGUARD":  	fcon.CommandText += " where id_SHADOW is null";  	break;  case "USER_ACTIVITY":  	fcon.CommandText += " where id_user_activity is null";  	break;  case "MESSAGES":  	fcon.CommandText += " where lastdate >= cast('NOW' as date) - 100";  	break;  case "SCHEDULER":  	fcon.CommandText += " where id_status is null";  	break;  case "USER_CONNECTIONS":  	fcon.CommandText += " where ID_USER_CONNECTIONS is null";  	break;  case "REPORT_REPLICATION":  	fcon.CommandText += " where DATE_CREATE >= cast('NOW' as date) - 30";  	break;  }  
Missing Default,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,data_count,The following switch statement is missing a default case: switch (table_name.Trim ().ToUpper ()) {  case "DELETED":  	fcon.CommandText += " where Date_Deleted >= cast('NOW' as date) - 180";  	break;  case "ERR_LOG":  	fcon.CommandText += " where id_err_log is null";  	break;  case "BACKUP_LOG":  	fcon.CommandText += " where id_BACKUP_LOG is null";  	break;  case "SHADOWGUARD":  	fcon.CommandText += " where id_SHADOW is null";  	break;  case "USER_ACTIVITY":  	fcon.CommandText += " where id_user_activity is null";  	break;  case "MESSAGES":  	fcon.CommandText += " where lastdate >= cast('NOW' as date) - 100";  	break;  case "SCHEDULER":  	fcon.CommandText += " where id_status is null";  	break;  case "USER_CONNECTIONS":  	fcon.CommandText += " where ID_USER_CONNECTIONS is null";  	break;  case "REPORT_REPLICATION":  	fcon.CommandText += " where DATE_CREATE >= cast('NOW' as date) - 30";  	break;  }  
Missing Default,dataPump.det,F99,C:\repos\nigihayami_dataPump.det\dataPump.det\F99.cs,PREPARE_DATA,The following switch statement is missing a default case: switch (table_name.Trim ().ToUpper ()) {  case "DELETED":  	fcon.CommandText += " where Date_Deleted >= cast('NOW' as date) - 180";  	break;  case "ERR_LOG":  	fcon.CommandText += " where id_err_log is null";  	break;  case "BACKUP_LOG":  	fcon.CommandText += " where id_BACKUP_LOG is null";  	break;  case "SHADOWGUARD":  	fcon.CommandText += " where id_SHADOW is null";  	break;  case "USER_ACTIVITY":  	fcon.CommandText += " where id_user_activity is null";  	break;  case "MESSAGES":  	fcon.CommandText += " where lastdate >= cast('NOW' as date) - 100";  	break;  case "SCHEDULER":  	fcon.CommandText += " where id_status is null";  	break;  case "USER_CONNECTIONS":  	fcon.CommandText += " where ID_USER_CONNECTIONS is null";  	break;  case "REPORT_REPLICATION":  	fcon.CommandText += " where DATE_CREATE >= cast('NOW' as date) - 30";  	break;  }  
