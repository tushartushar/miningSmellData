Implementation smell,Namespace,Class,File,Method,Description
Long Statement,RestBucks.Tests,IntegrationSmokeTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\IntegrationSmokeTests.cs,AppCanCreateAndDeleteOrder,The length of the statement  "      Assert.That(getOrderResponse.StatusCode' Is.EqualTo(HttpStatusCode.OK)' string.Format("order at {0} not found"' orderPath)); " is 124.
Long Statement,RestBucks.Tests,IntegrationSmokeTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\IntegrationSmokeTests.cs,CreatedOrder,The length of the statement  "                                       with.Body("<order xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://restbuckson.net\">" " is 155.
Long Statement,RestBucks.Tests.Domain,GivenACanceledOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Domain\GivenACanceledOrder.cs,SetUp,The length of the statement  "      representation = OrderRepresentationMapper.Map(order' appHelper.Container.Resolve<ResourceLinker>()' app.Get("/order").Context); " is 128.
Long Statement,RestBucks.Tests.Domain,GivenAnUnpaidOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Domain\GivenAnUnpaidOrder.cs,SetUp,The length of the statement  "      representation = OrderRepresentationMapper.Map(order' appHelper.Container.Resolve<ResourceLinker>()' app.Get("/order").Context); " is 128.
Long Statement,RestBucks.Tests.Domain,GivenAPayedOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Domain\GivenAPayedOrder.cs,SetUp,The length of the statement  "      representation = OrderRepresentationMapper.Map(order' appHelper.Container.Resolve<ResourceLinker>()' app.Get("/order").Context); " is 128.
Long Statement,RestBucks.Tests.Domain,GivenAReadyOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Domain\GivenAReadyOrder.cs,SetUp,The length of the statement  "      representation = OrderRepresentationMapper.Map(order' appHelper.Container.Resolve<ResourceLinker>()' app.Get("/order").Context); " is 128.
Long Statement,RestBucks.Tests.Representations,OrderRepresentationTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Representations\OrderRepresentationTests.cs,CanDeserialize,The length of the statement  "<order xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns=""http://restbuckson.net""> " is 143.
Long Statement,RestBucks.Tests.Resources,WhenUserGETsACancelledOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserGETsACancelledOrder.cs,WithRestbuckJsonAcceptHeaderResponseIsJson,The length of the statement  "      var orderRepo = new RepositoryStub<Order>(new Order { Id = 123' Location = Location.TakeAway' Status = OrderStatus.Canceled }); " is 127.
Long Statement,RestBucks.Tests.Resources,WhenUserGETsACancelledOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserGETsACancelledOrder.cs,WithApplicationXmlAcceptHeaderResponseIsXml,The length of the statement  "      var orderRepo = new RepositoryStub<Order>(new Order { Id = 123' Location = Location.TakeAway' Status = OrderStatus.Canceled }); " is 127.
Long Statement,RestBucks.Tests.Resources,ResourceHandlerTestBase,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\ResourceHandlerTestBase.cs,CreateAppProxy,The length of the statement  "            .GetProperty("ApplicationContainer"' System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance) " is 120.
Long Statement,RestBucks.Tests.Resources,WhenUserGETsMenu,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserGETsMenu.cs,StatusCodeIs200Ok,The length of the statement  "      Assert.That(app.Get("/menu/"' with => with.Header("Accept"' "application/xml")).StatusCode' Is.EqualTo(HttpStatusCode.OK)); " is 123.
Long Statement,RestBucks.Tests.Resources,WhenUserCreatesAnOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserCreatesAnOrder.cs,WhenOrderIsOk_ThenInsertANewOrderWithTheProductsAndPrice,The length of the statement  "      var orderRepresentation = new OrderRepresentation() {Items = {new OrderItemRepresentation() {Name = "latte"' Quantity = 1}}}; " is 125.
Long Statement,RestBucks.Tests.Resources,WhenUserCreatesAnOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserCreatesAnOrder.cs,WhenOrderIsOk_ThenInsertANewOrderWithTheDateTime,The length of the statement  "      var orderRepresentation = new OrderRepresentation() {Items = {new OrderItemRepresentation() {Name = "latte"' Quantity = 1}}}; " is 125.
Long Statement,RestBucks.Tests.Resources,WhenUserCreatesAnOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserCreatesAnOrder.cs,WhenOrderIsOk_ThenResponseHasStatus201AndLocation,The length of the statement  "        new ResourceLinker(Container.Resolve<IRouteCacheProvider>()).BuildUriString(appProxy.Get("/orders").Context' "ReadOrder"' new { orderId = "123" }); " is 147.
Magic Number,RestBucks.Tests,DataInitializer,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataInitializer.cs,InitializeData,The following statement contains a magic number: var coffees = new[] {"Latte"' "Capuccino"' "Espresso"' "Tea"}            .Select(              coffeName =>              new Product {Name = coffeName' Price = (decimal) coffeName.First()/10' Customizations = {milk' size' shots}})            .ToArray();
Magic Number,RestBucks.Tests,DataInitializer,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataInitializer.cs,InitializeData,The following statement contains a magic number: productRepository.MakePersistent(new Product                                           {                                             Name = "Hot Chocolate"'                                             Price = 10.5m'                                             Customizations = {milk' size' whippedCream}                                           });
Magic Number,RestBucks.Tests,IntegrationSmokeTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\IntegrationSmokeTests.cs,GetOrderPath,The following statement contains a magic number: var orderPath = createdResponse.Headers["Location"].Remove(0' 23);
Magic Number,RestBucks.Tests.DataTests,DataTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\DataTests.cs,CanStoreAProduct,The following statement contains a magic number: var product = new Product                        {                          Name = "Coffee 1"'                          Price = 10.4m                        };
Magic Number,RestBucks.Tests.DataTests,DataTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\DataTests.cs,CanStoreAProduct,The following statement contains a magic number: product.Satisfy(p => p.Name == "Coffee 1" && p.Price == 10.4m);
Magic Number,RestBucks.Tests.DataTests,DataTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\DataTests.cs,CanStoreOneCustomizationInTwoProducts,The following statement contains a magic number: productRepository.MakePersistent(new Product                                           {                                             Name = "Coffee 3"'                                             Price = 10.4m'                                             Customizations = {customization}                                           });
Magic Number,RestBucks.Tests.DataTests,DataTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\DataTests.cs,CanStoreOneCustomizationInTwoProducts,The following statement contains a magic number: productRepository.MakePersistent(new Product {Name = "Coffee 4"' Price = 5.4m' Customizations = {customization}});
Magic Number,RestBucks.Tests.DataTests,DataTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\DataTests.cs,CanStoreOneCustomizationInTwoProducts,The following statement contains a magic number: new Repository<Product>(session)            .Retrieve(p => p.Customizations.Any(c => c.Id == customizationId))            .Count().Should().Be.EqualTo(2);
Magic Number,RestBucks.Tests.DataTests,DataTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\DataTests.cs,CanStoreTwoProducts,The following statement contains a magic number: repository.MakePersistent(new Product {Name = "Coffee 3"' Price = 10.4m});
Magic Number,RestBucks.Tests.DataTests,DataTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\DataTests.cs,CanStoreTwoProducts,The following statement contains a magic number: repository.MakePersistent(new Product {Name = "Coffee 4"' Price = 5.4m});
Magic Number,RestBucks.Tests.Data,OrderTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\OrderTests.cs,CanStoreAOrder,The following statement contains a magic number: var product = new Product {Name = "Latte"' Price = 10.4m};
Magic Number,RestBucks.Tests.Data,OrderTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\OrderTests.cs,CanStoreAOrder,The following statement contains a magic number: var order = new Order                      {                        Date = new DateTime(2011' 1' 1)'                        Location = Location.InShop                      };
Magic Number,RestBucks.Tests.Data,OrderTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\OrderTests.cs,CanStoreAOrder,The following statement contains a magic number: order.AddItem(new OrderItem                        {                          Product = product'                          UnitPrice = 10.4m'                          Preferences =                            {                              {"Milk"' "skim"}'                              {"Size"' "small"}                            }                        });
Magic Number,RestBucks.Tests.Data,OrderTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\OrderTests.cs,CanStoreAOrder,The following statement contains a magic number: order.AddItem(new OrderItem                        {                          Product = product'                          UnitPrice = 10.4m'                          Preferences = {{"Shots"' "single"}}                        });
Magic Number,RestBucks.Tests.Data,OrderTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\OrderTests.cs,CanStoreAOrder,The following statement contains a magic number: order.Satisfy(o => o.Location == Location.InShop                             && o.Items.Count() == 2                             && o.Items.Any(i => i.Preferences.ContainsKey("Shots"))                             && o.Items.Any(i => i.Preferences.ContainsKey("Milk") && i.Preferences.ContainsKey("Size")));
Magic Number,RestBucks.Tests.Data,OrderTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\OrderTests.cs,CanStoreAnOrderWithPayment,The following statement contains a magic number: var product = new Product {Name = "Latte"' Price = 10.4m};
Magic Number,RestBucks.Tests.Data,OrderTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\OrderTests.cs,CanStoreAnOrderWithPayment,The following statement contains a magic number: var order = new Order                      {                        Date = new DateTime(2011' 1' 1)'                        Location = Location.InShop'                      };
Magic Number,RestBucks.Tests.Data,OrderTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\OrderTests.cs,CanStoreAnOrderWithPayment,The following statement contains a magic number: order.AddItem(new OrderItem                        {                          Product = product'                          UnitPrice = 10.4m'                          Preferences =                            {                              {"Milk"' "skim"}'                              {"Size"' "small"}                            }                        });
Magic Number,RestBucks.Tests.Data,OrderTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\OrderTests.cs,CanChangeStatus,The following statement contains a magic number: var product = new Product {Name = "Latte"' Price = 10.4m};
Magic Number,RestBucks.Tests.Data,OrderTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\OrderTests.cs,CanChangeStatus,The following statement contains a magic number: var order = new Order                      {                        Date = new DateTime(2011' 1' 1)'                        Location = Location.InShop'                      };
Magic Number,RestBucks.Tests.Data,OrderTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\OrderTests.cs,CanChangeStatus,The following statement contains a magic number: order.AddItem(new OrderItem                        {                          Product = product'                          UnitPrice = 10.4m'                          Preferences =                            {                              {"Milk"' "skim"}'                              {"Size"' "small"}                            }                        });
Magic Number,RestBucks.Tests.Data,OrderTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\OrderTests.cs,VersionNumberGrowOnEachUpdate,The following statement contains a magic number: var product = new Product {Name = "Latte"' Price = 10.4m};
Magic Number,RestBucks.Tests.Data,OrderTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\OrderTests.cs,VersionNumberGrowOnEachUpdate,The following statement contains a magic number: var order = new Order                      {                        Date = new DateTime(2011' 1' 1)'                        Location = Location.InShop'                      };
Magic Number,RestBucks.Tests.Data,OrderTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\DataTests\OrderTests.cs,VersionNumberGrowOnEachUpdate,The following statement contains a magic number: order.AddItem(new OrderItem                        {                          Product = product'                          UnitPrice = 10.4m'                          Preferences =                            {                              {"Milk"' "skim"}'                              {"Size"' "small"}                            }                        });
Magic Number,RestBucks.Tests.Domain,EqualityMemberTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Domain\EqualityMemberTests.cs,WhenComparingPersistedToOtherTransientShouldBeFalse,The following statement contains a magic number: new Product {Id = 123}.Equals(new Product())          .Should().Be.False();
Magic Number,RestBucks.Tests.Domain,EqualityMemberTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Domain\EqualityMemberTests.cs,WhenComparingTwoPersistedWithSameIdThenShouldBeTrue,The following statement contains a magic number: new Product {Id = 123}.Equals(new Product {Id = 123})          .Should().Be.True();
Magic Number,RestBucks.Tests.Domain,EqualityMemberTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Domain\EqualityMemberTests.cs,WhenComparingTwoPersistedWithSameIdThenShouldBeTrue,The following statement contains a magic number: new Product {Id = 123}.Equals(new Product {Id = 123})          .Should().Be.True();
Magic Number,RestBucks.Tests.Domain,EqualityMemberTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Domain\EqualityMemberTests.cs,WhenComparingSameInstanceOfPersistedEntityThenShouldBeTrue,The following statement contains a magic number: var product = new Product {Id = 123};
Magic Number,RestBucks.Tests.Infrastructure,RequestExtensionsTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Infrastructure\RequestExtensionsTests.cs,Base_uri_should_contain_request_port_if_present,The following statement contains a magic number: var request = new Request("method"' new Url {HostName = "host"' Port = 8000' Path = "path"});
Magic Number,RestBucks.Tests.Representations,OrderRepresentationTests,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Representations\OrderRepresentationTests.cs,SerializeOrder,The following statement contains a magic number: var orderRepresentation = new OrderRepresentation                                  {                                    Cost = 100.4m'                                    Location = Location.InShop'                                    Items =                                      {                                        new OrderItemRepresentation                                        {                                          Name = "latte"'                                          Preferences =                                            {                                              {"size"' "large"}'                                              {"milk"' "skim"}                                            }                                        }                                      }                                  };
Magic Number,RestBucks.Tests.Resources,WhenUserGETsACancelledOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserGETsACancelledOrder.cs,WhenOrderIsCancelled_ThenReturn200,The following statement contains a magic number: var orderRepo = new RepositoryStub<Order>(new Order { Id = 123' Status = OrderStatus.Canceled });
Magic Number,RestBucks.Tests.Resources,WhenUserGETsACancelledOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserGETsACancelledOrder.cs,WhenOrderIsNotCancelled_ThenReturn404,The following statement contains a magic number: var orderRepo = new RepositoryStub<Order>(new Order { Id = 123' Status = OrderStatus.Unpaid });
Magic Number,RestBucks.Tests.Resources,WhenUserGETsACancelledOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserGETsACancelledOrder.cs,WhenOrderIsCancelled_ThenReturnItsContent,The following statement contains a magic number: var order = new Order {Id = 123' Location = Location.TakeAway};
Magic Number,RestBucks.Tests.Resources,WhenUserGETsACancelledOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserGETsACancelledOrder.cs,WithRestbuckJsonAcceptHeaderResponseIsJson,The following statement contains a magic number: var orderRepo = new RepositoryStub<Order>(new Order { Id = 123' Location = Location.TakeAway' Status = OrderStatus.Canceled });
Magic Number,RestBucks.Tests.Resources,WhenUserGETsACancelledOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserGETsACancelledOrder.cs,WithApplicationXmlAcceptHeaderResponseIsXml,The following statement contains a magic number: var orderRepo = new RepositoryStub<Order>(new Order { Id = 123' Location = Location.TakeAway' Status = OrderStatus.Canceled });
Magic Number,RestBucks.Tests.Resources,ResourceHandlerTestBase,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\ResourceHandlerTestBase.cs,CreateAppProxy,The following statement contains a magic number: var defaultProductRepository = new RepositoryStub<Product>(          latte' new Product {Version = 1' Name = "Other"' Price = 3.6m});
Magic Number,RestBucks.Tests.Resources,WhenUserPayAnOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserPayAnOrder.cs,WhenOrderExist_ThenCancel,The following statement contains a magic number: var order = new Order {Id = 123};
Magic Number,RestBucks.Tests.Resources,WhenUserGETsAnOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserGETsAnOrder.cs,WhenOrderHasNotChanged_ThenReturn304,The following statement contains a magic number: var orderRepo = new RepositoryStub<Order>(new Order {Version = 1' Id = 123});
Magic Number,RestBucks.Tests.Resources,WhenUserGETsAnOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserGETsAnOrder.cs,WhenOrderHasChanged_ThenReturn200,The following statement contains a magic number: var orderRepo = new RepositoryStub<Order>(new Order {Version = 2' Id = 123});
Magic Number,RestBucks.Tests.Resources,WhenUserGETsAnOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserGETsAnOrder.cs,WhenOrderHasChanged_ThenReturn200,The following statement contains a magic number: var orderRepo = new RepositoryStub<Order>(new Order {Version = 2' Id = 123});
Magic Number,RestBucks.Tests.Resources,WhenUserGETsAnOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserGETsAnOrder.cs,WhenOrderExists_ThenReturnItsContent,The following statement contains a magic number: var order = new Order {Id = 123' Location = Location.TakeAway};
Magic Number,RestBucks.Tests.Resources,WhenUserGETsAnOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserGETsAnOrder.cs,WithRestbuckJsonAcceptHeaderResponseIsJson,The following statement contains a magic number: var order = new Order { Id = 123' Location = Location.TakeAway };
Magic Number,RestBucks.Tests.Resources,WhenUserGETsAnOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserGETsAnOrder.cs,WithApplicationXmlAcceptHeaderResponseIsXml,The following statement contains a magic number: var order = new Order { Id = 123' Location = Location.TakeAway };
Magic Number,RestBucks.Tests.Resources,WhenUserGETsAnOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserGETsAnOrder.cs,WithTextHtmlDefaultToReturningRestbucksXmlRepresentation,The following statement contains a magic number: var order = new Order { Id = 123' Location = Location.TakeAway };
Magic Number,RestBucks.Tests.Resources,WhenUserGETsAnOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserGETsAnOrder.cs,WithNoAcceptHeaderDefaultToReturningRestbucksXmlRepresentation,The following statement contains a magic number: var order = new Order { Id = 123' Location = Location.TakeAway };
Magic Number,RestBucks.Tests.Resources,WhenUserUpdateAnOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserUpdateAnOrder.cs,WhenOrderExist_ThenUpdateLocation,The following statement contains a magic number: var order = new Order {Id = 123' Location = Location.InShop};
Magic Number,RestBucks.Tests.Resources,WhenUserCancelAnOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserCancelAnOrder.cs,WhenOrderExist_ThenCancel,The following statement contains a magic number: var order = new Order { Id = 123 };
Magic Number,RestBucks.Tests.Resources,WhenUserCancelAnOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserCancelAnOrder.cs,WhenOrderExist_ThenCancelAndReturn204,The following statement contains a magic number: var order = new Order { Id = 123 };
Magic Number,RestBucks.Tests.Resources,WhenUserCancelAnOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserCancelAnOrder.cs,ACallToGet_ShouldReturnMovedPermanentlyAndNewLocation,The following statement contains a magic number: var order = new Order { Id = 123 };
Magic Number,RestBucks.Tests.Resources,WhenUserCreatesAnOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserCreatesAnOrder.cs,WhenOrderIsOk_ThenInsertANewOrderWithTheProductsAndPrice,The following statement contains a magic number: order.Satisfy(_ => _.Items.Any(i => i.Product == latte && i.UnitPrice == 2.5m && i.Quantity == 1));
Magic Number,RestBucks.Tests.Resources,WhenUserCreatesAnOrder,D:\research\architectureSmells\repos\horsdal_Restbucks-on-Nancy\RestBucks.Tests\Resources\WhenUserCreatesAnOrder.cs,WhenOrderIsOk_ThenResponseHasStatus201AndLocation,The following statement contains a magic number: orderRepository          .Setup(or => or.MakePersistent(It.IsAny<Order[]>()))          .Callback<Order[]>(o => o.First().Id = 123);
