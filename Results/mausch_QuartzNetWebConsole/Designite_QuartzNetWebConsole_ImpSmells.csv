Implementation smell,Namespace,Class,File,Method,Description
Long Statement,QuartzNetWebConsole,MemoryLogger,C:\repos\mausch_QuartzNetWebConsole\QuartzNetWebConsole\MemoryLogger.cs,JobScheduled,The length of the statement  "            var desc = string.Format("Job {0} scheduled with trigger {1}"' DescribeJob(trigger.JobKey.Group' trigger.JobKey.Name)' Describe(trigger)); " is 138.
Long Statement,QuartzNetWebConsole,MemoryLogger,C:\repos\mausch_QuartzNetWebConsole\QuartzNetWebConsole\MemoryLogger.cs,Describe,The length of the statement  "            return string.Format("{0}.{1} (trigger {2})"' LinkJobGroup(job.Key.Group)' LinkJob(job.Key.Group' job.Key.Name)' Describe(context.Trigger)); " is 140.
Long Statement,QuartzNetWebConsole,Setup,C:\repos\mausch_QuartzNetWebConsole\QuartzNetWebConsole\Setup.cs,Owin,The length of the statement  "                        .Where(x => pathAndQuery.Path.Replace(basePath' "").Split('.')[0].EndsWith(x.Key' StringComparison.InvariantCultureIgnoreCase)) " is 127.
Magic Number,QuartzNetWebConsole.Controllers,LogController,C:\repos\mausch_QuartzNetWebConsole\QuartzNetWebConsole\Controllers\LogController.cs,LogController,The following statement contains a magic number: DefaultPageSize = 25;
Magic Number,QuartzNetWebConsole.Utils,Owin,C:\repos\mausch_QuartzNetWebConsole\QuartzNetWebConsole\Utils\Owin.cs,EvaluateResponse,The following statement contains a magic number: return env => response.Match(                  content: async x => {                      env.SetOwinContentType(contentType: x.ContentType' charset: encoding.BodyName);                      var content = Encoding.UTF8.GetBytes(x.Content);                      env.SetOwinContentLength(content.Length);                      await env.GetOwinResponseBody().WriteAsync(content' 0' content.Length);                  }'                  xdoc: async x => {                      var eval = new Response.ContentResponse(content: x.Content.ToString()' contentType: x.ContentType).EvaluateResponse();                      await eval(env);                  }'                  redirect: async x => {                      env.SetOwinStatusCode(302);                      env.GetOwinResponseHeaders()["Location"] = new[] { x.Location };                      await Task.Yield();                  });
Magic Number,QuartzNetWebConsole.Utils,QueryStringParser,C:\repos\mausch_QuartzNetWebConsole\QuartzNetWebConsole\Utils\QueryStringParser.cs,ParseQueryString,The following statement contains a magic number: foreach (var kv in query) {                  var value = kv.Length < 2 ? "" : kv[1];                  r.Add(kv[0]' value);              }
