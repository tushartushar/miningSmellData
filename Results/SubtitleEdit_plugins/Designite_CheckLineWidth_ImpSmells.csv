Implementation smell,Namespace,Class,File,Method,Description
Long Method,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The method has 193 lines of code.
Long Method,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The method has 328 lines of code.
Complex Method,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SelectIndexAndEnsureVisible,Cyclomatic complexity of the method is 9
Complex Method,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,LoadSubtitle,Cyclomatic complexity of the method is 8
Complex Method,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,Cyclomatic complexity of the method is 45
Complex Method,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,AutoBreakLine,Cyclomatic complexity of the method is 13
Complex Method,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,textBoxText_KeyDown,Cyclomatic complexity of the method is 9
Long Parameter List,Nikse.SubtitleEdit.PluginLogic,IPlugin,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\IPlugin.cs,DoAction,The method has 7 parameters. Parameters: parentForm' subtitle' frameRate' listViewLineSeparatorString' subtitleFileName' videoFileName' rawText
Long Parameter List,Nikse.SubtitleEdit.PluginLogic,CheckLineWidth,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Plugin.cs,DoAction,The method has 7 parameters. Parameters: parentForm' subtitle' frameRate' listViewLineSeparatorString' subtitleFileName' videoFileName' rawText
Long Parameter List,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,PluginForm,The method has 5 parameters. Parameters: subtitle' name' description' parentForm' errorCount
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,InitializeTimestampColumnWidths,The length of the statement  "            //if (_settings != null && _settings.General.ListViewColumnsRememberSize && _settings.General.ListViewNumberWidth > 1 && " is 120.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,InitializeTimestampColumnWidths,The length of the statement  "            //    _settings.General.ListViewStartWidth > 1 && _settings.General.ListViewEndWidth > 1 && _settings.General.ListViewDurationWidth > 1) " is 136.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SubtitleListView_DrawSubItem,The length of the statement  "                    TextRenderer.DrawText(e.Graphics' e.Item.SubItems[e.ColumnIndex].Text' _subtitleFont' new Point(e.Bounds.Left + 3' e.Bounds.Top + 2)' e.Item.ForeColor' TextFormatFlags.NoPrefix); " is 178.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,AutoSizeAllColumns,The length of the statement  "            int length = Columns[ColumnIndexNumber].Width + Columns[ColumnIndexStart].Width + Columns[ColumnIndexEnd].Width + Columns[ColumnIndexDuration].Width; " is 149.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,AutoSizeAllColumns,The length of the statement  "                //if (_settings != null && _settings.General.ListViewColumnsRememberSize && _settings.General.ListViewNumberWidth > 1 && " is 120.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,AutoSizeAllColumns,The length of the statement  "                //    _settings.General.ListViewStartWidth > 1 && _settings.General.ListViewEndWidth > 1 && _settings.General.ListViewDurationWidth > 1) " is 136.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowAlternateTextColumn,The length of the statement  "                int length = Columns[ColumnIndexNumber].Width + Columns[ColumnIndexStart].Width + Columns[ColumnIndexEnd].Width + Columns[ColumnIndexDuration].Width; " is 149.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,Add,The length of the statement  "            //    subItem = new ListViewItem.ListViewSubItem(item' string.Format("{0}'{1:00}"' paragraph.Duration.Seconds' Logic.SubtitleFormats.SubtitleFormat.MillisecondsToFramesMaxFrameRate(paragraph.Duration.Milliseconds))); " is 216.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,Add,The length of the statement  "                subItem = new ListViewItem.ListViewSubItem(item' string.Format("{0}'{1:000}"' paragraph.Duration.Seconds' paragraph.Duration.Milliseconds)); " is 140.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SetTimeAndText,The length of the statement  "                //    item.SubItems[ColumnIndexDuration].Text = string.Format("{0}'{1:00}"' paragraph.Duration.Seconds' Logic.SubtitleFormats.SubtitleFormat.MillisecondsToFramesMaxFrameRate(paragraph.Duration.Milliseconds)); " is 208.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SetTimeAndText,The length of the statement  "                    item.SubItems[ColumnIndexDuration].Text = string.Format("{0}'{1:000}"' paragraph.Duration.Seconds' paragraph.Duration.Milliseconds); " is 132.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowExtraColumn,The length of the statement  "                int length = Columns[ColumnIndexNumber].Width + Columns[ColumnIndexStart].Width + Columns[ColumnIndexEnd].Width + Columns[ColumnIndexDuration].Width; " is 149.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SetDuration,The length of the statement  "                //    item.SubItems[ColumnIndexDuration].Text = string.Format("{0}'{1:00}"' paragraph.Duration.Seconds' Logic.SubtitleFormats.SubtitleFormat.MillisecondsToFramesMaxFrameRate(paragraph.Duration.Milliseconds)); " is 208.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SetDuration,The length of the statement  "                    item.SubItems[ColumnIndexDuration].Text = string.Format("{0}'{1:000}"' paragraph.Duration.Seconds' paragraph.Duration.Milliseconds); " is 132.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,UpdateFrames,The length of the statement  "            //            item.SubItems[ColumnIndexDuration].Text = string.Format("{0}'{1:00}"' p.Duration.Seconds' Logic.SubtitleFormats.SubtitleFormat.MillisecondsToFramesMaxFrameRate(p.Duration.Milliseconds)); " is 200.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SetStartTime,The length of the statement  "                //    item.SubItems[ColumnIndexDuration].Text = string.Format("{0}'{1:00}"' paragraph.Duration.Seconds' Logic.SubtitleFormats.SubtitleFormat.MillisecondsToFramesMaxFrameRate(paragraph.Duration.Milliseconds)); " is 208.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SetStartTime,The length of the statement  "                    item.SubItems[ColumnIndexDuration].Text = string.Format("{0}'{1:000}"' paragraph.Duration.Seconds' paragraph.Duration.Milliseconds); " is 132.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SetStartTimeAndDuration,The length of the statement  "                //    item.SubItems[ColumnIndexDuration].Text = string.Format("{0}'{1:00}"' paragraph.Duration.Seconds' Logic.SubtitleFormats.SubtitleFormat.MillisecondsToFramesMaxFrameRate(paragraph.Duration.Milliseconds)); " is 208.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SetStartTimeAndDuration,The length of the statement  "                    item.SubItems[ColumnIndexDuration].Text = string.Format("{0}'{1:000}"' paragraph.Duration.Seconds' paragraph.Duration.Milliseconds); " is 132.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowAllColumns,The length of the statement  "            //if (_settings != null && _settings.General.ListViewColumnsRememberSize && _settings.General.ListViewNumberWidth > 1 && " is 120.
Long Statement,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowAllColumns,The length of the statement  "            //    _settings.General.ListViewStartWidth > 1 && _settings.General.ListViewEndWidth > 1 && _settings.General.ListViewDurationWidth > 1) " is 136.
Long Statement,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The length of the statement  "            this.dataGridView1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 149.
Long Statement,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The length of the statement  "            this.buttonCancel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 151.
Long Statement,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The length of the statement  "            this.buttonOK.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,ReadLine,The length of the statement  "                        _paragraph.Text += RemoveBadChars(line).TrimEnd().Replace(Environment.NewLine + Environment.NewLine' Environment.NewLine); " is 122.
Long Statement,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,ReadLine,The length of the statement  "                        _paragraph.Text += RemoveBadChars(line).TrimEnd().Replace(Environment.NewLine + Environment.NewLine' Environment.NewLine); " is 122.
Long Statement,Nikse.SubtitleEdit.PluginLogic,TimeCode,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\TimeCode.cs,ToString,The length of the statement  "            string s = string.Format("{0:00}:{1:00}:{2:00}'{3:000}"' _time.Hours' _time.Minutes' _time.Seconds' _time.Milliseconds); " is 120.
Long Statement,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,CanBreak,The length of the statement  "            if (s2.EndsWith("? -"' StringComparison.Ordinal) || s2.EndsWith("! -"' StringComparison.Ordinal) || s2.EndsWith(". -"' StringComparison.Ordinal)) " is 145.
Long Statement,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The length of the statement  "                    if (arr0.StartsWith("-") && arr[1].TrimStart().StartsWith("-") && (arr0.EndsWith(".") || arr0.EndsWith("!") || arr0.EndsWith("?") || arr0.EndsWith("--"' StringComparison.Ordinal) || arr0.EndsWith("–"))) " is 202.
Long Statement,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The length of the statement  "                if (splitPos != maximumLength + 1 || s[maximumLength] != ' ') // allow for maxlength+1 char to be space (does not count) " is 120.
Long Statement,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The length of the statement  "                        if (@".!?' ".Contains(s[mid + j]) && !IsPartOfNumber(s' mid + j) && s.Length > mid + j + 2 && CanBreak(s' mid + j' language)) " is 125.
Long Statement,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The length of the statement  "                        if (@".!?' ".Contains(s[mid - j]) && !IsPartOfNumber(s' mid - j) && s.Length > mid + j + 2 && CanBreak(s' mid - j' language)) " is 125.
Long Statement,Nikse.SubtitleEdit.PluginLogic,CheckLineWidth,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Plugin.cs,DoAction,The length of the statement  "            using (var form = new PluginForm(sub' (this as IPlugin).Name' (this as IPlugin).Description' parentForm' srt.ErrorCount)) " is 121.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,ShowLineLengths,The length of the statement  "            var lines = Utilities.RemoveHtmlTags(_subtitle.Paragraphs[i].Text' true).Replace(Environment.NewLine' "\n").Split('\n'); " is 120.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,ShowLineLengths,The length of the statement  "                subtitleListView1.SetAlternateText(i' sb.ToString().TrimEnd('/').Trim() + " - " + (maxWidth - numericUpDown1.Value) + " pixels too long!!!"); " is 141.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,GetSettingsFileName,The length of the statement  "                path = Path.Combine(Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)' "Subtitle Edit")' "Plugins"); " is 132.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,AutoBreakLine,The length of the statement  "                       (arr0.Length > 1 && (".?!)]".Contains(arr0[arr0.Length - 1]) || arr0.EndsWith("--"' StringComparison.Ordinal) || arr0.EndsWith('–')))) " is 134.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The length of the statement  "            this.buttonCancel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 151.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The length of the statement  "            this.buttonOK.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The length of the statement  "            this.groupBox1.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 142.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The length of the statement  "            this.groupBox3.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 142.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The length of the statement  "            this.textBoxCustomCharNotFound.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 161.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The length of the statement  "            this.textBoxText.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 149.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The length of the statement  "            this.labelText.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 147.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The length of the statement  "            this.buttonAutoBreak.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 153.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The length of the statement  "            this.labelErrorCount.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 153.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The length of the statement  "            this.subtitleListView1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 153.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The length of the statement  "            this.subtitleListView1.Font = new System.Drawing.Font("Tahoma"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 153.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SelectIndexAndEnsureVisible,The conditional expression  "item.Text == p.Number.ToString(CultureInfo.InvariantCulture) &&                      item.SubItems[ColumnIndexStart].Text == p.StartTime.ToString() &&                      item.SubItems[ColumnIndexEnd].Text == p.EndTime.ToString() &&                      item.SubItems[ColumnIndexText].Text == p.Text"  is complex.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,LoadSubtitle,The conditional expression  "_expecting == ExpectingLine.Text && i + 1 < lines.Count &&                      _paragraph != null && !string.IsNullOrEmpty(_paragraph.Text) && Utilities.IsInteger(line) &&                      RegexTimeCodes.IsMatch(lines[i + 1])"  is complex.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The conditional expression  "arr0.StartsWith("-") && arr[1].TrimStart().StartsWith("-") && (arr0.EndsWith(".") || arr0.EndsWith("!") || arr0.EndsWith("?") || arr0.EndsWith("--"' StringComparison.Ordinal) || arr0.EndsWith("–"))"  is complex.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The conditional expression  "@".!?' ".Contains(s[mid + j]) && !IsPartOfNumber(s' mid + j) && s.Length > mid + j + 2 && CanBreak(s' mid + j' language)"  is complex.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The conditional expression  "@".!?' ".Contains(s[mid - j]) && !IsPartOfNumber(s' mid - j) && s.Length > mid + j + 2 && CanBreak(s' mid - j' language)"  is complex.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,AutoBreakLine,The conditional expression  "!line0.EndsWith(".") &&                      !line0.EndsWith("!") &&                      !line0.EndsWith("?") &&                      !line0.EndsWith(":") &&                      !line0.EndsWith("♪") &&                      !line0.EndsWith("♫") &&                      !line0.EndsWith(".\"") &&                      !line0.EndsWith("!\"") &&                      !line0.EndsWith("?\"") &&                      !line0.EndsWith(":\"") &&                      !line0.EndsWith(":\"") &&                      !line0.EndsWith("♪</i>") &&                      !line0.EndsWith("♫</i>") &&                      !line0.EndsWith(".</i>") &&                      !line0.EndsWith("!</i>") &&                      !line0.EndsWith("?</i>") &&                      !line0.EndsWith(".</font>") &&                      !line0.EndsWith("!</font>") &&                      !line0.EndsWith("?</font>") &&                      !line0.EndsWith(".</b>")"  is complex.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,AutoBreakLine,The conditional expression  "arr0.StartsWith('-') && noTagLines[1].TrimStart().StartsWith('-') &&                         (arr0.Length > 1 && (".?!)]".Contains(arr0[arr0.Length - 1]) || arr0.EndsWith("--"' StringComparison.Ordinal) || arr0.EndsWith('–')))"  is complex.
Empty Catch Block,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,PluginForm_FormClosing,The method has an empty catch block.
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,InitializeTimestampColumnWidths,The following statement contains a magic number: {                  Graphics graphics = parentForm.CreateGraphics();                  SizeF timestampSizeF = graphics.MeasureString("00:00:33'527"' Font);                  int timestampWidth = (int)(timestampSizeF.Width + 0.5) + 11;                  Columns[ColumnIndexStart].Width = timestampWidth;                  Columns[ColumnIndexEnd].Width = timestampWidth;                  Columns[ColumnIndexDuration].Width = (int)(timestampWidth * 0.8);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,InitializeTimestampColumnWidths,The following statement contains a magic number: {                  Graphics graphics = parentForm.CreateGraphics();                  SizeF timestampSizeF = graphics.MeasureString("00:00:33'527"' Font);                  int timestampWidth = (int)(timestampSizeF.Width + 0.5) + 11;                  Columns[ColumnIndexStart].Width = timestampWidth;                  Columns[ColumnIndexEnd].Width = timestampWidth;                  Columns[ColumnIndexDuration].Width = (int)(timestampWidth * 0.8);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,InitializeTimestampColumnWidths,The following statement contains a magic number: {                  Graphics graphics = parentForm.CreateGraphics();                  SizeF timestampSizeF = graphics.MeasureString("00:00:33'527"' Font);                  int timestampWidth = (int)(timestampSizeF.Width + 0.5) + 11;                  Columns[ColumnIndexStart].Width = timestampWidth;                  Columns[ColumnIndexEnd].Width = timestampWidth;                  Columns[ColumnIndexDuration].Width = (int)(timestampWidth * 0.8);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SubtitleListView,The following statement contains a magic number: Columns.AddRange(new[]              {                  new ColumnHeader { Text="#"' Width=55 }'                  new ColumnHeader { Width = 80 }'                  new ColumnHeader { Width = 80 }'                  new ColumnHeader { Width= 55 }'                  new ColumnHeader { Width = -2 } // -2 = as rest of space (300)              });
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SubtitleListView,The following statement contains a magic number: Columns.AddRange(new[]              {                  new ColumnHeader { Text="#"' Width=55 }'                  new ColumnHeader { Width = 80 }'                  new ColumnHeader { Width = 80 }'                  new ColumnHeader { Width= 55 }'                  new ColumnHeader { Width = -2 } // -2 = as rest of space (300)              });
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SubtitleListView,The following statement contains a magic number: Columns.AddRange(new[]              {                  new ColumnHeader { Text="#"' Width=55 }'                  new ColumnHeader { Width = 80 }'                  new ColumnHeader { Width = 80 }'                  new ColumnHeader { Width= 55 }'                  new ColumnHeader { Width = -2 } // -2 = as rest of space (300)              });
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SubtitleListView,The following statement contains a magic number: Columns.AddRange(new[]              {                  new ColumnHeader { Text="#"' Width=55 }'                  new ColumnHeader { Width = 80 }'                  new ColumnHeader { Width = 80 }'                  new ColumnHeader { Width= 55 }'                  new ColumnHeader { Width = -2 } // -2 = as rest of space (300)              });
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SubtitleListView,The following statement contains a magic number: Columns.AddRange(new[]              {                  new ColumnHeader { Text="#"' Width=55 }'                  new ColumnHeader { Width = 80 }'                  new ColumnHeader { Width = 80 }'                  new ColumnHeader { Width= 55 }'                  new ColumnHeader { Width = -2 } // -2 = as rest of space (300)              });
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SubtitleListView_DrawSubItem,The following statement contains a magic number: using (var sf = new StringFormat())              {                  switch (e.Header.TextAlign)                  {                      case HorizontalAlignment.Center:                          sf.Alignment = StringAlignment.Center;                          break;                      case HorizontalAlignment.Right:                          sf.Alignment = StringAlignment.Far;                          break;                  }                    if (e.Item.Selected)                  {                      Rectangle rect = e.Bounds;                      //if (Configuration.Settings != null)                      //{                      //    if (backgroundColor == BackColor)                      //        backgroundColor = Configuration.Settings.Tools.ListViewUnfocusedSelectedColor;                      //    else                      //    {                      //        int r = backgroundColor.R - 39;                      //        int g = backgroundColor.G - 39;                      //        int b = backgroundColor.B - 39;                      //        if (r < 0)                      //            r = 0;                      //        if (g < 0)                      //            g = 0;                      //        if (b < 0)                      //            b = 0;                      //        backgroundColor = Color.FromArgb(backgroundColor.A' r' g' b);                      //    }                      //    SolidBrush sb = new SolidBrush(backgroundColor);                      //    e.Graphics.FillRectangle(sb' rect);                      //}                      //else                      {                          e.Graphics.FillRectangle(Brushes.LightBlue' rect);                      }                      //rect = new Rectangle(e.Bounds.Left + 4' e.Bounds.Top+2' e.Bounds.Width - 3' e.Bounds.Height);                      TextRenderer.DrawText(e.Graphics' e.Item.SubItems[e.ColumnIndex].Text' _subtitleFont' new Point(e.Bounds.Left + 3' e.Bounds.Top + 2)' e.Item.ForeColor' TextFormatFlags.NoPrefix);                  }                  else                  {                      e.DrawDefault = true;                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SubtitleListView_DrawSubItem,The following statement contains a magic number: using (var sf = new StringFormat())              {                  switch (e.Header.TextAlign)                  {                      case HorizontalAlignment.Center:                          sf.Alignment = StringAlignment.Center;                          break;                      case HorizontalAlignment.Right:                          sf.Alignment = StringAlignment.Far;                          break;                  }                    if (e.Item.Selected)                  {                      Rectangle rect = e.Bounds;                      //if (Configuration.Settings != null)                      //{                      //    if (backgroundColor == BackColor)                      //        backgroundColor = Configuration.Settings.Tools.ListViewUnfocusedSelectedColor;                      //    else                      //    {                      //        int r = backgroundColor.R - 39;                      //        int g = backgroundColor.G - 39;                      //        int b = backgroundColor.B - 39;                      //        if (r < 0)                      //            r = 0;                      //        if (g < 0)                      //            g = 0;                      //        if (b < 0)                      //            b = 0;                      //        backgroundColor = Color.FromArgb(backgroundColor.A' r' g' b);                      //    }                      //    SolidBrush sb = new SolidBrush(backgroundColor);                      //    e.Graphics.FillRectangle(sb' rect);                      //}                      //else                      {                          e.Graphics.FillRectangle(Brushes.LightBlue' rect);                      }                      //rect = new Rectangle(e.Bounds.Left + 4' e.Bounds.Top+2' e.Bounds.Width - 3' e.Bounds.Height);                      TextRenderer.DrawText(e.Graphics' e.Item.SubItems[e.ColumnIndex].Text' _subtitleFont' new Point(e.Bounds.Left + 3' e.Bounds.Top + 2)' e.Item.ForeColor' TextFormatFlags.NoPrefix);                  }                  else                  {                      e.DrawDefault = true;                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,AutoSizeAllColumns,The following statement contains a magic number: Columns[ColumnIndexNumber].Width = 55;
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,AutoSizeAllColumns,The following statement contains a magic number: if (IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  //if (_settings != null && _settings.General.ListViewColumnsRememberSize && _settings.General.ListViewNumberWidth > 1 &&                  //    _settings.General.ListViewStartWidth > 1 && _settings.General.ListViewEndWidth > 1 && _settings.General.ListViewDurationWidth > 1)                  //{                  //    int restWidth = lengthAvailable - 15 - Columns[ColumnIndexText].Width;                  //    if (restWidth > 0)                  //        Columns[ColumnIndexTextAlternate].Width = restWidth;                  //}                  //else                  {                      int restWidth = (lengthAvailable / 2) - 15;                      Columns[ColumnIndexText].Width = restWidth;                      Columns[ColumnIndexTextAlternate].Width = restWidth;                  }              }              else if (!IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 23;                  Columns[ColumnIndexText].Width = restWidth;              }              else if (!IsAlternateTextColumnVisible && IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.6);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.4);              }              else              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexTextAlternate].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.2);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,AutoSizeAllColumns,The following statement contains a magic number: if (IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  //if (_settings != null && _settings.General.ListViewColumnsRememberSize && _settings.General.ListViewNumberWidth > 1 &&                  //    _settings.General.ListViewStartWidth > 1 && _settings.General.ListViewEndWidth > 1 && _settings.General.ListViewDurationWidth > 1)                  //{                  //    int restWidth = lengthAvailable - 15 - Columns[ColumnIndexText].Width;                  //    if (restWidth > 0)                  //        Columns[ColumnIndexTextAlternate].Width = restWidth;                  //}                  //else                  {                      int restWidth = (lengthAvailable / 2) - 15;                      Columns[ColumnIndexText].Width = restWidth;                      Columns[ColumnIndexTextAlternate].Width = restWidth;                  }              }              else if (!IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 23;                  Columns[ColumnIndexText].Width = restWidth;              }              else if (!IsAlternateTextColumnVisible && IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.6);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.4);              }              else              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexTextAlternate].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.2);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,AutoSizeAllColumns,The following statement contains a magic number: if (IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  //if (_settings != null && _settings.General.ListViewColumnsRememberSize && _settings.General.ListViewNumberWidth > 1 &&                  //    _settings.General.ListViewStartWidth > 1 && _settings.General.ListViewEndWidth > 1 && _settings.General.ListViewDurationWidth > 1)                  //{                  //    int restWidth = lengthAvailable - 15 - Columns[ColumnIndexText].Width;                  //    if (restWidth > 0)                  //        Columns[ColumnIndexTextAlternate].Width = restWidth;                  //}                  //else                  {                      int restWidth = (lengthAvailable / 2) - 15;                      Columns[ColumnIndexText].Width = restWidth;                      Columns[ColumnIndexTextAlternate].Width = restWidth;                  }              }              else if (!IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 23;                  Columns[ColumnIndexText].Width = restWidth;              }              else if (!IsAlternateTextColumnVisible && IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.6);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.4);              }              else              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexTextAlternate].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.2);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,AutoSizeAllColumns,The following statement contains a magic number: if (IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  //if (_settings != null && _settings.General.ListViewColumnsRememberSize && _settings.General.ListViewNumberWidth > 1 &&                  //    _settings.General.ListViewStartWidth > 1 && _settings.General.ListViewEndWidth > 1 && _settings.General.ListViewDurationWidth > 1)                  //{                  //    int restWidth = lengthAvailable - 15 - Columns[ColumnIndexText].Width;                  //    if (restWidth > 0)                  //        Columns[ColumnIndexTextAlternate].Width = restWidth;                  //}                  //else                  {                      int restWidth = (lengthAvailable / 2) - 15;                      Columns[ColumnIndexText].Width = restWidth;                      Columns[ColumnIndexTextAlternate].Width = restWidth;                  }              }              else if (!IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 23;                  Columns[ColumnIndexText].Width = restWidth;              }              else if (!IsAlternateTextColumnVisible && IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.6);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.4);              }              else              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexTextAlternate].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.2);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,AutoSizeAllColumns,The following statement contains a magic number: if (IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  //if (_settings != null && _settings.General.ListViewColumnsRememberSize && _settings.General.ListViewNumberWidth > 1 &&                  //    _settings.General.ListViewStartWidth > 1 && _settings.General.ListViewEndWidth > 1 && _settings.General.ListViewDurationWidth > 1)                  //{                  //    int restWidth = lengthAvailable - 15 - Columns[ColumnIndexText].Width;                  //    if (restWidth > 0)                  //        Columns[ColumnIndexTextAlternate].Width = restWidth;                  //}                  //else                  {                      int restWidth = (lengthAvailable / 2) - 15;                      Columns[ColumnIndexText].Width = restWidth;                      Columns[ColumnIndexTextAlternate].Width = restWidth;                  }              }              else if (!IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 23;                  Columns[ColumnIndexText].Width = restWidth;              }              else if (!IsAlternateTextColumnVisible && IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.6);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.4);              }              else              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexTextAlternate].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.2);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,AutoSizeAllColumns,The following statement contains a magic number: if (IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  //if (_settings != null && _settings.General.ListViewColumnsRememberSize && _settings.General.ListViewNumberWidth > 1 &&                  //    _settings.General.ListViewStartWidth > 1 && _settings.General.ListViewEndWidth > 1 && _settings.General.ListViewDurationWidth > 1)                  //{                  //    int restWidth = lengthAvailable - 15 - Columns[ColumnIndexText].Width;                  //    if (restWidth > 0)                  //        Columns[ColumnIndexTextAlternate].Width = restWidth;                  //}                  //else                  {                      int restWidth = (lengthAvailable / 2) - 15;                      Columns[ColumnIndexText].Width = restWidth;                      Columns[ColumnIndexTextAlternate].Width = restWidth;                  }              }              else if (!IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 23;                  Columns[ColumnIndexText].Width = restWidth;              }              else if (!IsAlternateTextColumnVisible && IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.6);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.4);              }              else              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexTextAlternate].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.2);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,AutoSizeAllColumns,The following statement contains a magic number: if (IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  //if (_settings != null && _settings.General.ListViewColumnsRememberSize && _settings.General.ListViewNumberWidth > 1 &&                  //    _settings.General.ListViewStartWidth > 1 && _settings.General.ListViewEndWidth > 1 && _settings.General.ListViewDurationWidth > 1)                  //{                  //    int restWidth = lengthAvailable - 15 - Columns[ColumnIndexText].Width;                  //    if (restWidth > 0)                  //        Columns[ColumnIndexTextAlternate].Width = restWidth;                  //}                  //else                  {                      int restWidth = (lengthAvailable / 2) - 15;                      Columns[ColumnIndexText].Width = restWidth;                      Columns[ColumnIndexTextAlternate].Width = restWidth;                  }              }              else if (!IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 23;                  Columns[ColumnIndexText].Width = restWidth;              }              else if (!IsAlternateTextColumnVisible && IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.6);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.4);              }              else              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexTextAlternate].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.2);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,AutoSizeAllColumns,The following statement contains a magic number: if (IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  //if (_settings != null && _settings.General.ListViewColumnsRememberSize && _settings.General.ListViewNumberWidth > 1 &&                  //    _settings.General.ListViewStartWidth > 1 && _settings.General.ListViewEndWidth > 1 && _settings.General.ListViewDurationWidth > 1)                  //{                  //    int restWidth = lengthAvailable - 15 - Columns[ColumnIndexText].Width;                  //    if (restWidth > 0)                  //        Columns[ColumnIndexTextAlternate].Width = restWidth;                  //}                  //else                  {                      int restWidth = (lengthAvailable / 2) - 15;                      Columns[ColumnIndexText].Width = restWidth;                      Columns[ColumnIndexTextAlternate].Width = restWidth;                  }              }              else if (!IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 23;                  Columns[ColumnIndexText].Width = restWidth;              }              else if (!IsAlternateTextColumnVisible && IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.6);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.4);              }              else              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexTextAlternate].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.2);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,AutoSizeAllColumns,The following statement contains a magic number: if (IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  //if (_settings != null && _settings.General.ListViewColumnsRememberSize && _settings.General.ListViewNumberWidth > 1 &&                  //    _settings.General.ListViewStartWidth > 1 && _settings.General.ListViewEndWidth > 1 && _settings.General.ListViewDurationWidth > 1)                  //{                  //    int restWidth = lengthAvailable - 15 - Columns[ColumnIndexText].Width;                  //    if (restWidth > 0)                  //        Columns[ColumnIndexTextAlternate].Width = restWidth;                  //}                  //else                  {                      int restWidth = (lengthAvailable / 2) - 15;                      Columns[ColumnIndexText].Width = restWidth;                      Columns[ColumnIndexTextAlternate].Width = restWidth;                  }              }              else if (!IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 23;                  Columns[ColumnIndexText].Width = restWidth;              }              else if (!IsAlternateTextColumnVisible && IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.6);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.4);              }              else              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexTextAlternate].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.2);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,AutoSizeAllColumns,The following statement contains a magic number: if (IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  //if (_settings != null && _settings.General.ListViewColumnsRememberSize && _settings.General.ListViewNumberWidth > 1 &&                  //    _settings.General.ListViewStartWidth > 1 && _settings.General.ListViewEndWidth > 1 && _settings.General.ListViewDurationWidth > 1)                  //{                  //    int restWidth = lengthAvailable - 15 - Columns[ColumnIndexText].Width;                  //    if (restWidth > 0)                  //        Columns[ColumnIndexTextAlternate].Width = restWidth;                  //}                  //else                  {                      int restWidth = (lengthAvailable / 2) - 15;                      Columns[ColumnIndexText].Width = restWidth;                      Columns[ColumnIndexTextAlternate].Width = restWidth;                  }              }              else if (!IsAlternateTextColumnVisible && !IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 23;                  Columns[ColumnIndexText].Width = restWidth;              }              else if (!IsAlternateTextColumnVisible && IsExtraColumnVisible)              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.6);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.4);              }              else              {                  int restWidth = lengthAvailable - 15;                  Columns[ColumnIndexText].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexTextAlternate].Width = (int)(restWidth * 0.4);                  Columns[ColumnIndexExtra].Width = (int)(restWidth * 0.2);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowAlternateTextColumn,The following statement contains a magic number: if (!IsAlternateTextColumnVisible)              {                  ColumnIndexExtra = ColumnIndexTextAlternate + 1;                  if (IsExtraColumnVisible)                  {                      Columns.Insert(ColumnIndexTextAlternate' new ColumnHeader { Text = text' Width = -2 });                  }                  else                  {                      Columns.Add(new ColumnHeader { Text = text' Width = -2 });                  }                    int length = Columns[ColumnIndexNumber].Width + Columns[ColumnIndexStart].Width + Columns[ColumnIndexEnd].Width + Columns[ColumnIndexDuration].Width;                  int lengthAvailable = Width - length;                  Columns[ColumnIndexText].Width = (lengthAvailable / 2) - 15;                  Columns[ColumnIndexTextAlternate].Width = -2;                    IsAlternateTextColumnVisible = true;              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowAlternateTextColumn,The following statement contains a magic number: if (!IsAlternateTextColumnVisible)              {                  ColumnIndexExtra = ColumnIndexTextAlternate + 1;                  if (IsExtraColumnVisible)                  {                      Columns.Insert(ColumnIndexTextAlternate' new ColumnHeader { Text = text' Width = -2 });                  }                  else                  {                      Columns.Add(new ColumnHeader { Text = text' Width = -2 });                  }                    int length = Columns[ColumnIndexNumber].Width + Columns[ColumnIndexStart].Width + Columns[ColumnIndexEnd].Width + Columns[ColumnIndexDuration].Width;                  int lengthAvailable = Width - length;                  Columns[ColumnIndexText].Width = (lengthAvailable / 2) - 15;                  Columns[ColumnIndexTextAlternate].Width = -2;                    IsAlternateTextColumnVisible = true;              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowAlternateTextColumn,The following statement contains a magic number: if (!IsAlternateTextColumnVisible)              {                  ColumnIndexExtra = ColumnIndexTextAlternate + 1;                  if (IsExtraColumnVisible)                  {                      Columns.Insert(ColumnIndexTextAlternate' new ColumnHeader { Text = text' Width = -2 });                  }                  else                  {                      Columns.Add(new ColumnHeader { Text = text' Width = -2 });                  }                    int length = Columns[ColumnIndexNumber].Width + Columns[ColumnIndexStart].Width + Columns[ColumnIndexEnd].Width + Columns[ColumnIndexDuration].Width;                  int lengthAvailable = Width - length;                  Columns[ColumnIndexText].Width = (lengthAvailable / 2) - 15;                  Columns[ColumnIndexTextAlternate].Width = -2;                    IsAlternateTextColumnVisible = true;              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowAlternateTextColumn,The following statement contains a magic number: if (!IsAlternateTextColumnVisible)              {                  ColumnIndexExtra = ColumnIndexTextAlternate + 1;                  if (IsExtraColumnVisible)                  {                      Columns.Insert(ColumnIndexTextAlternate' new ColumnHeader { Text = text' Width = -2 });                  }                  else                  {                      Columns.Add(new ColumnHeader { Text = text' Width = -2 });                  }                    int length = Columns[ColumnIndexNumber].Width + Columns[ColumnIndexStart].Width + Columns[ColumnIndexEnd].Width + Columns[ColumnIndexDuration].Width;                  int lengthAvailable = Width - length;                  Columns[ColumnIndexText].Width = (lengthAvailable / 2) - 15;                  Columns[ColumnIndexTextAlternate].Width = -2;                    IsAlternateTextColumnVisible = true;              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowAlternateTextColumn,The following statement contains a magic number: if (!IsAlternateTextColumnVisible)              {                  ColumnIndexExtra = ColumnIndexTextAlternate + 1;                  if (IsExtraColumnVisible)                  {                      Columns.Insert(ColumnIndexTextAlternate' new ColumnHeader { Text = text' Width = -2 });                  }                  else                  {                      Columns.Add(new ColumnHeader { Text = text' Width = -2 });                  }                    int length = Columns[ColumnIndexNumber].Width + Columns[ColumnIndexStart].Width + Columns[ColumnIndexEnd].Width + Columns[ColumnIndexDuration].Width;                  int lengthAvailable = Width - length;                  Columns[ColumnIndexText].Width = (lengthAvailable / 2) - 15;                  Columns[ColumnIndexTextAlternate].Width = -2;                    IsAlternateTextColumnVisible = true;              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SubtitleListViewResize,The following statement contains a magic number: Columns[Columns.Count - 1].Width = Width - (width + 25);
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,GetFirstVisibleItem,The following statement contains a magic number: foreach (ListViewItem item in Items)              {                  if (ClientRectangle.Contains(new Rectangle(item.Bounds.Left' item.Bounds.Top' item.Bounds.Height' 10)))                  {                      return item;                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SelectIndexAndEnsureVisible,The following statement contains a magic number: int bottomIndex = TopItem.Index + ((Height - 25) / 16);
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SelectIndexAndEnsureVisible,The following statement contains a magic number: int bottomIndex = TopItem.Index + ((Height - 25) / 16);
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SelectIndexAndEnsureVisible,The following statement contains a magic number: int itemsBeforeAfterCount = ((bottomIndex - TopItem.Index) / 2) - 1;
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowExtraColumn,The following statement contains a magic number: if (!IsExtraColumnVisible)              {                  if (IsAlternateTextColumnVisible)                      ColumnIndexExtra = ColumnIndexTextAlternate + 1;                  else                      ColumnIndexExtra = ColumnIndexTextAlternate;                    Columns.Add(new ColumnHeader { Text = title' Width = 80 });                    int length = Columns[ColumnIndexNumber].Width + Columns[ColumnIndexStart].Width + Columns[ColumnIndexEnd].Width + Columns[ColumnIndexDuration].Width;                  int lengthAvailable = Width - length;                    if (IsAlternateTextColumnVisible)                  {                      int part = lengthAvailable / 5;                      Columns[ColumnIndexText].Width = part * 2;                      Columns[ColumnIndexTextAlternate].Width = part * 2;                      Columns[ColumnIndexTextAlternate].Width = part;                  }                  else                  {                      int part = lengthAvailable / 6;                      Columns[ColumnIndexText].Width = part * 4;                      Columns[ColumnIndexTextAlternate].Width = part * 2;                  }                  IsExtraColumnVisible = true;              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowExtraColumn,The following statement contains a magic number: if (!IsExtraColumnVisible)              {                  if (IsAlternateTextColumnVisible)                      ColumnIndexExtra = ColumnIndexTextAlternate + 1;                  else                      ColumnIndexExtra = ColumnIndexTextAlternate;                    Columns.Add(new ColumnHeader { Text = title' Width = 80 });                    int length = Columns[ColumnIndexNumber].Width + Columns[ColumnIndexStart].Width + Columns[ColumnIndexEnd].Width + Columns[ColumnIndexDuration].Width;                  int lengthAvailable = Width - length;                    if (IsAlternateTextColumnVisible)                  {                      int part = lengthAvailable / 5;                      Columns[ColumnIndexText].Width = part * 2;                      Columns[ColumnIndexTextAlternate].Width = part * 2;                      Columns[ColumnIndexTextAlternate].Width = part;                  }                  else                  {                      int part = lengthAvailable / 6;                      Columns[ColumnIndexText].Width = part * 4;                      Columns[ColumnIndexTextAlternate].Width = part * 2;                  }                  IsExtraColumnVisible = true;              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowExtraColumn,The following statement contains a magic number: if (!IsExtraColumnVisible)              {                  if (IsAlternateTextColumnVisible)                      ColumnIndexExtra = ColumnIndexTextAlternate + 1;                  else                      ColumnIndexExtra = ColumnIndexTextAlternate;                    Columns.Add(new ColumnHeader { Text = title' Width = 80 });                    int length = Columns[ColumnIndexNumber].Width + Columns[ColumnIndexStart].Width + Columns[ColumnIndexEnd].Width + Columns[ColumnIndexDuration].Width;                  int lengthAvailable = Width - length;                    if (IsAlternateTextColumnVisible)                  {                      int part = lengthAvailable / 5;                      Columns[ColumnIndexText].Width = part * 2;                      Columns[ColumnIndexTextAlternate].Width = part * 2;                      Columns[ColumnIndexTextAlternate].Width = part;                  }                  else                  {                      int part = lengthAvailable / 6;                      Columns[ColumnIndexText].Width = part * 4;                      Columns[ColumnIndexTextAlternate].Width = part * 2;                  }                  IsExtraColumnVisible = true;              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowExtraColumn,The following statement contains a magic number: if (!IsExtraColumnVisible)              {                  if (IsAlternateTextColumnVisible)                      ColumnIndexExtra = ColumnIndexTextAlternate + 1;                  else                      ColumnIndexExtra = ColumnIndexTextAlternate;                    Columns.Add(new ColumnHeader { Text = title' Width = 80 });                    int length = Columns[ColumnIndexNumber].Width + Columns[ColumnIndexStart].Width + Columns[ColumnIndexEnd].Width + Columns[ColumnIndexDuration].Width;                  int lengthAvailable = Width - length;                    if (IsAlternateTextColumnVisible)                  {                      int part = lengthAvailable / 5;                      Columns[ColumnIndexText].Width = part * 2;                      Columns[ColumnIndexTextAlternate].Width = part * 2;                      Columns[ColumnIndexTextAlternate].Width = part;                  }                  else                  {                      int part = lengthAvailable / 6;                      Columns[ColumnIndexText].Width = part * 4;                      Columns[ColumnIndexTextAlternate].Width = part * 2;                  }                  IsExtraColumnVisible = true;              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowExtraColumn,The following statement contains a magic number: if (!IsExtraColumnVisible)              {                  if (IsAlternateTextColumnVisible)                      ColumnIndexExtra = ColumnIndexTextAlternate + 1;                  else                      ColumnIndexExtra = ColumnIndexTextAlternate;                    Columns.Add(new ColumnHeader { Text = title' Width = 80 });                    int length = Columns[ColumnIndexNumber].Width + Columns[ColumnIndexStart].Width + Columns[ColumnIndexEnd].Width + Columns[ColumnIndexDuration].Width;                  int lengthAvailable = Width - length;                    if (IsAlternateTextColumnVisible)                  {                      int part = lengthAvailable / 5;                      Columns[ColumnIndexText].Width = part * 2;                      Columns[ColumnIndexTextAlternate].Width = part * 2;                      Columns[ColumnIndexTextAlternate].Width = part;                  }                  else                  {                      int part = lengthAvailable / 6;                      Columns[ColumnIndexText].Width = part * 4;                      Columns[ColumnIndexTextAlternate].Width = part * 2;                  }                  IsExtraColumnVisible = true;              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowExtraColumn,The following statement contains a magic number: if (!IsExtraColumnVisible)              {                  if (IsAlternateTextColumnVisible)                      ColumnIndexExtra = ColumnIndexTextAlternate + 1;                  else                      ColumnIndexExtra = ColumnIndexTextAlternate;                    Columns.Add(new ColumnHeader { Text = title' Width = 80 });                    int length = Columns[ColumnIndexNumber].Width + Columns[ColumnIndexStart].Width + Columns[ColumnIndexEnd].Width + Columns[ColumnIndexDuration].Width;                  int lengthAvailable = Width - length;                    if (IsAlternateTextColumnVisible)                  {                      int part = lengthAvailable / 5;                      Columns[ColumnIndexText].Width = part * 2;                      Columns[ColumnIndexTextAlternate].Width = part * 2;                      Columns[ColumnIndexTextAlternate].Width = part;                  }                  else                  {                      int part = lengthAvailable / 6;                      Columns[ColumnIndexText].Width = part * 4;                      Columns[ColumnIndexTextAlternate].Width = part * 2;                  }                  IsExtraColumnVisible = true;              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowExtraColumn,The following statement contains a magic number: if (!IsExtraColumnVisible)              {                  if (IsAlternateTextColumnVisible)                      ColumnIndexExtra = ColumnIndexTextAlternate + 1;                  else                      ColumnIndexExtra = ColumnIndexTextAlternate;                    Columns.Add(new ColumnHeader { Text = title' Width = 80 });                    int length = Columns[ColumnIndexNumber].Width + Columns[ColumnIndexStart].Width + Columns[ColumnIndexEnd].Width + Columns[ColumnIndexDuration].Width;                  int lengthAvailable = Width - length;                    if (IsAlternateTextColumnVisible)                  {                      int part = lengthAvailable / 5;                      Columns[ColumnIndexText].Width = part * 2;                      Columns[ColumnIndexTextAlternate].Width = part * 2;                      Columns[ColumnIndexTextAlternate].Width = part;                  }                  else                  {                      int part = lengthAvailable / 6;                      Columns[ColumnIndexText].Width = part * 4;                      Columns[ColumnIndexTextAlternate].Width = part * 2;                  }                  IsExtraColumnVisible = true;              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowAllColumns,The following statement contains a magic number: Columns[ColumnIndexNumber].Width = 45;
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowAllColumns,The following statement contains a magic number: Columns[ColumnIndexEnd].Width = 80;
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowAllColumns,The following statement contains a magic number: Columns[ColumnIndexDuration].Width = 55;
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowAllColumns,The following statement contains a magic number: if (IsAlternateTextColumnVisible)              {                  Columns[ColumnIndexText].Width = 250;                  Columns[ColumnIndexTextAlternate].Width = -2;              }              else              {                  Columns[ColumnIndexText].Width = -2;              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowAllColumns,The following statement contains a magic number: if (IsAlternateTextColumnVisible)              {                  Columns[ColumnIndexText].Width = 250;                  Columns[ColumnIndexTextAlternate].Width = -2;              }              else              {                  Columns[ColumnIndexText].Width = -2;              }
Magic Number,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,ShowAllColumns,The following statement contains a magic number: if (IsAlternateTextColumnVisible)              {                  Columns[ColumnIndexText].Width = 250;                  Columns[ColumnIndexTextAlternate].Width = -2;              }              else              {                  Columns[ColumnIndexText].Width = -2;              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Location = new System.Drawing.Point(12' 38);
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Location = new System.Drawing.Point(12' 38);
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(263' 342);
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(263' 342);
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Location = new System.Drawing.Point(175' 386);
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Location = new System.Drawing.Point(175' 386);
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Size = new System.Drawing.Size(101' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Size = new System.Drawing.Size(101' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.TabIndex = 3;
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Location = new System.Drawing.Point(68' 386);
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Location = new System.Drawing.Point(68' 386);
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Size = new System.Drawing.Size(101' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Size = new System.Drawing.Size(101' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.TabIndex = 4;
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(74' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(74' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 5;
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(288' 421);
Magic Number,Nikse.SubtitleEdit.PluginLogic,CustomCharList,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\CustomCharList.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(288' 421);
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,LoadSubtitle,The following statement contains a magic number: if (_errorCount < 100 && doRenum)              {                  subtitle.Renumber(1);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: if (line.Length > 30 && line[29] == ' ')                  line = line.Substring(0' 29);
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: if (line.Length > 30 && line[29] == ' ')                  line = line.Substring(0' 29);
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: if (line.Length > 30 && line[29] == ' ')                  line = line.Substring(0' 29);
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: if (line.Length >= 29 && ":;".Contains(line[8].ToString()))                  line = line.Substring(0' 8) + ''' + line.Substring(8 + 1);
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: if (line.Length >= 29 && ":;".Contains(line[8].ToString()))                  line = line.Substring(0' 8) + ''' + line.Substring(8 + 1);
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: if (line.Length >= 29 && ":;".Contains(line[8].ToString()))                  line = line.Substring(0' 8) + ''' + line.Substring(8 + 1);
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: if (line.Length >= 29 && ":;".Contains(line[8].ToString()))                  line = line.Substring(0' 8) + ''' + line.Substring(8 + 1);
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: if (line.Length >= 29 && line.Length <= 30 && ":;".Contains(line[25].ToString()))                  line = line.Substring(0' 25) + ''' + line.Substring(25 + 1);
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: if (line.Length >= 29 && line.Length <= 30 && ":;".Contains(line[25].ToString()))                  line = line.Substring(0' 25) + ''' + line.Substring(25 + 1);
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: if (line.Length >= 29 && line.Length <= 30 && ":;".Contains(line[25].ToString()))                  line = line.Substring(0' 25) + ''' + line.Substring(25 + 1);
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: if (line.Length >= 29 && line.Length <= 30 && ":;".Contains(line[25].ToString()))                  line = line.Substring(0' 25) + ''' + line.Substring(25 + 1);
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: if (line.Length >= 29 && line.Length <= 30 && ":;".Contains(line[25].ToString()))                  line = line.Substring(0' 25) + ''' + line.Substring(25 + 1);
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: if (RegexTimeCodes.IsMatch(line) || RegexTimeCodes2.IsMatch(line))              {                  string[] parts = line.Replace("-->"' ":").Replace(" "' string.Empty).Split(':'' ''');                  try                  {                      int startHours = int.Parse(parts[0]);                      int startMinutes = int.Parse(parts[1]);                      int startSeconds = int.Parse(parts[2]);                      int startMilliseconds = int.Parse(parts[3]);                        int endHours = int.Parse(parts[4]);                      int endMinutes = int.Parse(parts[5]);                      int endSeconds = int.Parse(parts[6]);                      int endMilliseconds = int.Parse(parts[7]);                        paragraph.StartTime = new TimeCode(startHours' startMinutes' startSeconds' startMilliseconds);                      paragraph.EndTime = new TimeCode(endHours' endMinutes' endSeconds' endMilliseconds);                      return true;                  }                  catch                  {                      return false;                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: if (RegexTimeCodes.IsMatch(line) || RegexTimeCodes2.IsMatch(line))              {                  string[] parts = line.Replace("-->"' ":").Replace(" "' string.Empty).Split(':'' ''');                  try                  {                      int startHours = int.Parse(parts[0]);                      int startMinutes = int.Parse(parts[1]);                      int startSeconds = int.Parse(parts[2]);                      int startMilliseconds = int.Parse(parts[3]);                        int endHours = int.Parse(parts[4]);                      int endMinutes = int.Parse(parts[5]);                      int endSeconds = int.Parse(parts[6]);                      int endMilliseconds = int.Parse(parts[7]);                        paragraph.StartTime = new TimeCode(startHours' startMinutes' startSeconds' startMilliseconds);                      paragraph.EndTime = new TimeCode(endHours' endMinutes' endSeconds' endMilliseconds);                      return true;                  }                  catch                  {                      return false;                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: if (RegexTimeCodes.IsMatch(line) || RegexTimeCodes2.IsMatch(line))              {                  string[] parts = line.Replace("-->"' ":").Replace(" "' string.Empty).Split(':'' ''');                  try                  {                      int startHours = int.Parse(parts[0]);                      int startMinutes = int.Parse(parts[1]);                      int startSeconds = int.Parse(parts[2]);                      int startMilliseconds = int.Parse(parts[3]);                        int endHours = int.Parse(parts[4]);                      int endMinutes = int.Parse(parts[5]);                      int endSeconds = int.Parse(parts[6]);                      int endMilliseconds = int.Parse(parts[7]);                        paragraph.StartTime = new TimeCode(startHours' startMinutes' startSeconds' startMilliseconds);                      paragraph.EndTime = new TimeCode(endHours' endMinutes' endSeconds' endMilliseconds);                      return true;                  }                  catch                  {                      return false;                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: if (RegexTimeCodes.IsMatch(line) || RegexTimeCodes2.IsMatch(line))              {                  string[] parts = line.Replace("-->"' ":").Replace(" "' string.Empty).Split(':'' ''');                  try                  {                      int startHours = int.Parse(parts[0]);                      int startMinutes = int.Parse(parts[1]);                      int startSeconds = int.Parse(parts[2]);                      int startMilliseconds = int.Parse(parts[3]);                        int endHours = int.Parse(parts[4]);                      int endMinutes = int.Parse(parts[5]);                      int endSeconds = int.Parse(parts[6]);                      int endMilliseconds = int.Parse(parts[7]);                        paragraph.StartTime = new TimeCode(startHours' startMinutes' startSeconds' startMilliseconds);                      paragraph.EndTime = new TimeCode(endHours' endMinutes' endSeconds' endMilliseconds);                      return true;                  }                  catch                  {                      return false;                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: if (RegexTimeCodes.IsMatch(line) || RegexTimeCodes2.IsMatch(line))              {                  string[] parts = line.Replace("-->"' ":").Replace(" "' string.Empty).Split(':'' ''');                  try                  {                      int startHours = int.Parse(parts[0]);                      int startMinutes = int.Parse(parts[1]);                      int startSeconds = int.Parse(parts[2]);                      int startMilliseconds = int.Parse(parts[3]);                        int endHours = int.Parse(parts[4]);                      int endMinutes = int.Parse(parts[5]);                      int endSeconds = int.Parse(parts[6]);                      int endMilliseconds = int.Parse(parts[7]);                        paragraph.StartTime = new TimeCode(startHours' startMinutes' startSeconds' startMilliseconds);                      paragraph.EndTime = new TimeCode(endHours' endMinutes' endSeconds' endMilliseconds);                      return true;                  }                  catch                  {                      return false;                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: if (RegexTimeCodes.IsMatch(line) || RegexTimeCodes2.IsMatch(line))              {                  string[] parts = line.Replace("-->"' ":").Replace(" "' string.Empty).Split(':'' ''');                  try                  {                      int startHours = int.Parse(parts[0]);                      int startMinutes = int.Parse(parts[1]);                      int startSeconds = int.Parse(parts[2]);                      int startMilliseconds = int.Parse(parts[3]);                        int endHours = int.Parse(parts[4]);                      int endMinutes = int.Parse(parts[5]);                      int endSeconds = int.Parse(parts[6]);                      int endMilliseconds = int.Parse(parts[7]);                        paragraph.StartTime = new TimeCode(startHours' startMinutes' startSeconds' startMilliseconds);                      paragraph.EndTime = new TimeCode(endHours' endMinutes' endSeconds' endMilliseconds);                      return true;                  }                  catch                  {                      return false;                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,RemoveHtmlFontTag,The following statement contains a magic number: while (idx >= 0)              {                  var endIdx = s.IndexOf('>'' idx + 5);                  if (endIdx < 5)                      break;                  s = s.Remove(idx' endIdx - idx + 1);                  idx = s.IndexOf("<font"' idx' StringComparison.OrdinalIgnoreCase);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,RemoveHtmlFontTag,The following statement contains a magic number: while (idx >= 0)              {                  var endIdx = s.IndexOf('>'' idx + 5);                  if (endIdx < 5)                      break;                  s = s.Remove(idx' endIdx - idx + 1);                  idx = s.IndexOf("<font"' idx' StringComparison.OrdinalIgnoreCase);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,RemoveParagraphTag,The following statement contains a magic number: while (idx >= 0)              {                  var endIdx = s.IndexOf('>'' idx + 2);                  if (endIdx < 2)                      break;                  s = s.Remove(idx' endIdx - idx + 1);                  idx = s.IndexOf("<p"' idx' StringComparison.OrdinalIgnoreCase);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,RemoveParagraphTag,The following statement contains a magic number: while (idx >= 0)              {                  var endIdx = s.IndexOf('>'' idx + 2);                  if (endIdx < 2)                      break;                  s = s.Remove(idx' endIdx - idx + 1);                  idx = s.IndexOf("<p"' idx' StringComparison.OrdinalIgnoreCase);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,IsPartOfNumber,The following statement contains a magic number: if (position + 2 > s.Length)                  return false;
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The following statement contains a magic number: return AutoBreakLine(p' 43' 10' "en");
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The following statement contains a magic number: return AutoBreakLine(p' 43' 10' "en");
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The following statement contains a magic number: if (text == null || text.Length < 3)                  return text;
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The following statement contains a magic number: if (text.Contains("-") && text.Contains(Environment.NewLine))              {                  string dialogS = RemoveHtmlTags(text);                  var arr = dialogS.Replace(Environment.NewLine' "\n").Split('\n');                  if (arr.Length == 2)                  {                      string arr0 = arr[0].Trim().TrimEnd('"').TrimEnd('\'').TrimEnd();                      if (arr0.StartsWith("-") && arr[1].TrimStart().StartsWith("-") && (arr0.EndsWith(".") || arr0.EndsWith("!") || arr0.EndsWith("?") || arr0.EndsWith("--"' StringComparison.Ordinal) || arr0.EndsWith("–")))                          return text;                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The following statement contains a magic number: int mid = s.Length / 2;
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The following statement contains a magic number: if (splitPos == -1 && s.Contains(" - "))              {                  for (int j = 0; j <= (maximumLength / 2) + 5; j++)                  {                      if (mid + j + 4 < s.Length)                      {                          if (s[mid + j] == '-' && s[mid + j + 1] == ' ' && s[mid + j - 1] == ' ')                          {                              string rest = s.Substring(mid + j + 1).TrimStart();                              if (rest.Length > 0 && char.IsUpper(rest[0]))                              {                                  splitPos = mid + j;                                  break;                              }                          }                      }                      if (mid - (j + 1) > 4)                      {                          if (s[mid - j] == '-' && s[mid - j + 1] == ' ' && s[mid - j - 1] == ' ')                          {                              string rest = s.Substring(mid - j + 1).TrimStart();                              if (rest.Length > 0 && char.IsUpper(rest[0]))                              {                                  if (mid - j > 5 && s[mid - j - 1] == ' ' && @"!?.".Contains(s[mid - j - 2].ToString()))                                  {                                      splitPos = mid - j;                                      break;                                  }                              }                          }                      }                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The following statement contains a magic number: if (splitPos == -1 && s.Contains(" - "))              {                  for (int j = 0; j <= (maximumLength / 2) + 5; j++)                  {                      if (mid + j + 4 < s.Length)                      {                          if (s[mid + j] == '-' && s[mid + j + 1] == ' ' && s[mid + j - 1] == ' ')                          {                              string rest = s.Substring(mid + j + 1).TrimStart();                              if (rest.Length > 0 && char.IsUpper(rest[0]))                              {                                  splitPos = mid + j;                                  break;                              }                          }                      }                      if (mid - (j + 1) > 4)                      {                          if (s[mid - j] == '-' && s[mid - j + 1] == ' ' && s[mid - j - 1] == ' ')                          {                              string rest = s.Substring(mid - j + 1).TrimStart();                              if (rest.Length > 0 && char.IsUpper(rest[0]))                              {                                  if (mid - j > 5 && s[mid - j - 1] == ' ' && @"!?.".Contains(s[mid - j - 2].ToString()))                                  {                                      splitPos = mid - j;                                      break;                                  }                              }                          }                      }                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The following statement contains a magic number: if (splitPos == -1 && s.Contains(" - "))              {                  for (int j = 0; j <= (maximumLength / 2) + 5; j++)                  {                      if (mid + j + 4 < s.Length)                      {                          if (s[mid + j] == '-' && s[mid + j + 1] == ' ' && s[mid + j - 1] == ' ')                          {                              string rest = s.Substring(mid + j + 1).TrimStart();                              if (rest.Length > 0 && char.IsUpper(rest[0]))                              {                                  splitPos = mid + j;                                  break;                              }                          }                      }                      if (mid - (j + 1) > 4)                      {                          if (s[mid - j] == '-' && s[mid - j + 1] == ' ' && s[mid - j - 1] == ' ')                          {                              string rest = s.Substring(mid - j + 1).TrimStart();                              if (rest.Length > 0 && char.IsUpper(rest[0]))                              {                                  if (mid - j > 5 && s[mid - j - 1] == ' ' && @"!?.".Contains(s[mid - j - 2].ToString()))                                  {                                      splitPos = mid - j;                                      break;                                  }                              }                          }                      }                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The following statement contains a magic number: if (splitPos == -1 && s.Contains(" - "))              {                  for (int j = 0; j <= (maximumLength / 2) + 5; j++)                  {                      if (mid + j + 4 < s.Length)                      {                          if (s[mid + j] == '-' && s[mid + j + 1] == ' ' && s[mid + j - 1] == ' ')                          {                              string rest = s.Substring(mid + j + 1).TrimStart();                              if (rest.Length > 0 && char.IsUpper(rest[0]))                              {                                  splitPos = mid + j;                                  break;                              }                          }                      }                      if (mid - (j + 1) > 4)                      {                          if (s[mid - j] == '-' && s[mid - j + 1] == ' ' && s[mid - j - 1] == ' ')                          {                              string rest = s.Substring(mid - j + 1).TrimStart();                              if (rest.Length > 0 && char.IsUpper(rest[0]))                              {                                  if (mid - j > 5 && s[mid - j - 1] == ' ' && @"!?.".Contains(s[mid - j - 2].ToString()))                                  {                                      splitPos = mid - j;                                      break;                                  }                              }                          }                      }                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The following statement contains a magic number: if (splitPos == -1 && s.Contains(" - "))              {                  for (int j = 0; j <= (maximumLength / 2) + 5; j++)                  {                      if (mid + j + 4 < s.Length)                      {                          if (s[mid + j] == '-' && s[mid + j + 1] == ' ' && s[mid + j - 1] == ' ')                          {                              string rest = s.Substring(mid + j + 1).TrimStart();                              if (rest.Length > 0 && char.IsUpper(rest[0]))                              {                                  splitPos = mid + j;                                  break;                              }                          }                      }                      if (mid - (j + 1) > 4)                      {                          if (s[mid - j] == '-' && s[mid - j + 1] == ' ' && s[mid - j - 1] == ' ')                          {                              string rest = s.Substring(mid - j + 1).TrimStart();                              if (rest.Length > 0 && char.IsUpper(rest[0]))                              {                                  if (mid - j > 5 && s[mid - j - 1] == ' ' && @"!?.".Contains(s[mid - j - 2].ToString()))                                  {                                      splitPos = mid - j;                                      break;                                  }                              }                          }                      }                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The following statement contains a magic number: if (splitPos == -1 && s.Contains(" - "))              {                  for (int j = 0; j <= (maximumLength / 2) + 5; j++)                  {                      if (mid + j + 4 < s.Length)                      {                          if (s[mid + j] == '-' && s[mid + j + 1] == ' ' && s[mid + j - 1] == ' ')                          {                              string rest = s.Substring(mid + j + 1).TrimStart();                              if (rest.Length > 0 && char.IsUpper(rest[0]))                              {                                  splitPos = mid + j;                                  break;                              }                          }                      }                      if (mid - (j + 1) > 4)                      {                          if (s[mid - j] == '-' && s[mid - j + 1] == ' ' && s[mid - j - 1] == ' ')                          {                              string rest = s.Substring(mid - j + 1).TrimStart();                              if (rest.Length > 0 && char.IsUpper(rest[0]))                              {                                  if (mid - j > 5 && s[mid - j - 1] == ' ' && @"!?.".Contains(s[mid - j - 2].ToString()))                                  {                                      splitPos = mid - j;                                      break;                                  }                              }                          }                      }                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The following statement contains a magic number: if (splitPos == -1)              {                  for (int j = 0; j < 15; j++)                  {                      if (mid + j + 1 < s.Length && mid + j > 0)                      {                          if (@".!?".Contains(s[mid + j].ToString()) && !IsPartOfNumber(s' mid + j) && CanBreak(s' mid + j + 1' language))                          {                              splitPos = mid + j + 1;                              if (@".!?0123456789".Contains(s[splitPos].ToString()))                              { // do not break double/tripple end lines like "!!!" or "..."                                  splitPos++;                                  if (@".!?0123456789".Contains(s[mid + j + 1]))                                      splitPos++;                              }                              break;                          }                          if (@".!?".Contains(s[mid - j]) && !IsPartOfNumber(s' mid - j) && CanBreak(s' mid - j' language))                          {                              splitPos = mid - j;                              splitPos++;                              break;                          }                      }                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The following statement contains a magic number: if (splitPos == -1)              {                  for (int j = 0; j < 25; j++)                  {                      if (mid + j + 1 < s.Length && mid + j > 0)                      {                          if (@".!?' ".Contains(s[mid + j]) && !IsPartOfNumber(s' mid + j) && s.Length > mid + j + 2 && CanBreak(s' mid + j' language))                          {                              splitPos = mid + j;                              if (@" .!?".Contains(s[mid + j + 1]))                              {                                  splitPos++;                                  if (@" .!?".Contains(s[mid + j + 2]))                                      splitPos++;                              }                              break;                          }                          if (@".!?' ".Contains(s[mid - j]) && !IsPartOfNumber(s' mid - j) && s.Length > mid + j + 2 && CanBreak(s' mid - j' language))                          {                              splitPos = mid - j;                              if (@".!?".Contains(s[splitPos]))                                  splitPos--;                              if (@".!?".Contains(s[splitPos]))                                  splitPos--;                              if (@".!?".Contains(s[splitPos]))                                  splitPos--;                              break;                          }                      }                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The following statement contains a magic number: if (splitPos == -1)              {                  for (int j = 0; j < 25; j++)                  {                      if (mid + j + 1 < s.Length && mid + j > 0)                      {                          if (@".!?' ".Contains(s[mid + j]) && !IsPartOfNumber(s' mid + j) && s.Length > mid + j + 2 && CanBreak(s' mid + j' language))                          {                              splitPos = mid + j;                              if (@" .!?".Contains(s[mid + j + 1]))                              {                                  splitPos++;                                  if (@" .!?".Contains(s[mid + j + 2]))                                      splitPos++;                              }                              break;                          }                          if (@".!?' ".Contains(s[mid - j]) && !IsPartOfNumber(s' mid - j) && s.Length > mid + j + 2 && CanBreak(s' mid - j' language))                          {                              splitPos = mid - j;                              if (@".!?".Contains(s[splitPos]))                                  splitPos--;                              if (@".!?".Contains(s[splitPos]))                                  splitPos--;                              if (@".!?".Contains(s[splitPos]))                                  splitPos--;                              break;                          }                      }                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The following statement contains a magic number: if (splitPos == -1)              {                  for (int j = 0; j < 25; j++)                  {                      if (mid + j + 1 < s.Length && mid + j > 0)                      {                          if (@".!?' ".Contains(s[mid + j]) && !IsPartOfNumber(s' mid + j) && s.Length > mid + j + 2 && CanBreak(s' mid + j' language))                          {                              splitPos = mid + j;                              if (@" .!?".Contains(s[mid + j + 1]))                              {                                  splitPos++;                                  if (@" .!?".Contains(s[mid + j + 2]))                                      splitPos++;                              }                              break;                          }                          if (@".!?' ".Contains(s[mid - j]) && !IsPartOfNumber(s' mid - j) && s.Length > mid + j + 2 && CanBreak(s' mid - j' language))                          {                              splitPos = mid - j;                              if (@".!?".Contains(s[splitPos]))                                  splitPos--;                              if (@".!?".Contains(s[splitPos]))                                  splitPos--;                              if (@".!?".Contains(s[splitPos]))                                  splitPos--;                              break;                          }                      }                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The following statement contains a magic number: if (splitPos == -1)              {                  for (int j = 0; j < 25; j++)                  {                      if (mid + j + 1 < s.Length && mid + j > 0)                      {                          if (@".!?' ".Contains(s[mid + j]) && !IsPartOfNumber(s' mid + j) && s.Length > mid + j + 2 && CanBreak(s' mid + j' language))                          {                              splitPos = mid + j;                              if (@" .!?".Contains(s[mid + j + 1]))                              {                                  splitPos++;                                  if (@" .!?".Contains(s[mid + j + 2]))                                      splitPos++;                              }                              break;                          }                          if (@".!?' ".Contains(s[mid - j]) && !IsPartOfNumber(s' mid - j) && s.Length > mid + j + 2 && CanBreak(s' mid - j' language))                          {                              splitPos = mid - j;                              if (@".!?".Contains(s[splitPos]))                                  splitPos--;                              if (@".!?".Contains(s[splitPos]))                                  splitPos--;                              if (@".!?".Contains(s[splitPos]))                                  splitPos--;                              break;                          }                      }                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,Utilities,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\Utilities.cs,AutoBreakLine,The following statement contains a magic number: if (splitPos < s.Length - 2)                  s = s.Substring(0' splitPos) + Environment.NewLine + s.Substring(splitPos);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,LoadSettingsIfThereIs,The following statement contains a magic number: fontDialog1.Font = new Font("Tahoma"' 9' FontStyle.Regular);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,ShowLineLengths,The following statement contains a magic number: if (maxWidth > numericUpDown1.Value)              {                  subtitleListView1.SetAlternateText(i' sb.ToString().TrimEnd('/').Trim() + " - " + (maxWidth - numericUpDown1.Value) + " pixels too long!!!");                  subtitleListView1.SetBackgroundColor(i' Color.FromArgb(255' 180' 150));                  _tooLongCount++;              }              else              {                  subtitleListView1.SetAlternateText(i' sb.ToString().TrimEnd('/').Trim());                  subtitleListView1.SetBackgroundColor(i' DefaultBackColor);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,ShowLineLengths,The following statement contains a magic number: if (maxWidth > numericUpDown1.Value)              {                  subtitleListView1.SetAlternateText(i' sb.ToString().TrimEnd('/').Trim() + " - " + (maxWidth - numericUpDown1.Value) + " pixels too long!!!");                  subtitleListView1.SetBackgroundColor(i' Color.FromArgb(255' 180' 150));                  _tooLongCount++;              }              else              {                  subtitleListView1.SetAlternateText(i' sb.ToString().TrimEnd('/').Trim());                  subtitleListView1.SetBackgroundColor(i' DefaultBackColor);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,ShowLineLengths,The following statement contains a magic number: if (maxWidth > numericUpDown1.Value)              {                  subtitleListView1.SetAlternateText(i' sb.ToString().TrimEnd('/').Trim() + " - " + (maxWidth - numericUpDown1.Value) + " pixels too long!!!");                  subtitleListView1.SetBackgroundColor(i' Color.FromArgb(255' 180' 150));                  _tooLongCount++;              }              else              {                  subtitleListView1.SetAlternateText(i' sb.ToString().TrimEnd('/').Trim());                  subtitleListView1.SetBackgroundColor(i' DefaultBackColor);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,GetSettingsFileName,The following statement contains a magic number: if (path.StartsWith("file:\\"))                  path = path.Remove(0' 6);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,textBoxText_TextChanged,The following statement contains a magic number: if (Utilities.GetNumberOfLines(textBoxText.Text) > 3)                  textBoxText.ScrollBars = ScrollBars.Vertical;              else                  textBoxText.ScrollBars = ScrollBars.None;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,AutoBreakLine,The following statement contains a magic number: if (text == null || text.Length < 3 || Utilities.GetNumberOfLines(text) > 2)                  return text;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,AutoBreakLine,The following statement contains a magic number: if (text == null || text.Length < 3 || Utilities.GetNumberOfLines(text) > 2)                  return text;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,AutoBreakLine,The following statement contains a magic number: if (Utilities.GetNumberOfLines(text) == 2 && numericUpDown1.Value > CalcWidth(text.Replace(Environment.NewLine' " ")))              {                  var line0 = text.Replace(Environment.NewLine' "\n").Replace('\r'' '\n').Split('\n')[0].TrimEnd();                  if (!line0.EndsWith(".") &&                      !line0.EndsWith("!") &&                      !line0.EndsWith("?") &&                      !line0.EndsWith(":") &&                      !line0.EndsWith("♪") &&                      !line0.EndsWith("♫") &&                      !line0.EndsWith(".\"") &&                      !line0.EndsWith("!\"") &&                      !line0.EndsWith("?\"") &&                      !line0.EndsWith(":\"") &&                      !line0.EndsWith(":\"") &&                      !line0.EndsWith("♪</i>") &&                      !line0.EndsWith("♫</i>") &&                      !line0.EndsWith(".</i>") &&                      !line0.EndsWith("!</i>") &&                      !line0.EndsWith("?</i>") &&                      !line0.EndsWith(".</font>") &&                      !line0.EndsWith("!</font>") &&                      !line0.EndsWith("?</font>") &&                      !line0.EndsWith(".</b>"))                  {                      return text.Replace(Environment.NewLine' " ").Replace("  "' " ").Trim();                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,AutoBreakLine,The following statement contains a magic number: if (noTagText.Contains('-') && noTagText.Contains(Environment.NewLine' StringComparison.Ordinal))              {                  var noTagLines = noTagText.Replace(Environment.NewLine' "\n").Replace('\r'' '\n').Split('\n');                  if (noTagLines.Length == 2)                  {                      var arr0 = noTagLines[0].Trim().TrimEnd('"'' '\'').TrimEnd();                      if (arr0.StartsWith('-') && noTagLines[1].TrimStart().StartsWith('-') &&                         (arr0.Length > 1 && (".?!)]".Contains(arr0[arr0.Length - 1]) || arr0.EndsWith("--"' StringComparison.Ordinal) || arr0.EndsWith('–'))))                          return text;                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Location = new System.Drawing.Point(923' 565);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Location = new System.Drawing.Point(923' 565);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Size = new System.Drawing.Size(101' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Size = new System.Drawing.Size(101' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.TabIndex = 5;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Location = new System.Drawing.Point(816' 565);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Location = new System.Drawing.Point(816' 565);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Size = new System.Drawing.Size(101' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Size = new System.Drawing.Size(101' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.TabIndex = 4;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(7' 12);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(7' 12);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(1017' 202);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(1017' 202);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.TabIndex = 3;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox3.Location = new System.Drawing.Point(328' 10);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox3.Location = new System.Drawing.Point(328' 10);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox3.Size = new System.Drawing.Size(683' 175);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox3.Size = new System.Drawing.Size(683' 175);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxCustomCharNotFound.Location = new System.Drawing.Point(9' 97);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxCustomCharNotFound.Location = new System.Drawing.Point(9' 97);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxCustomCharNotFound.Size = new System.Drawing.Size(668' 72);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxCustomCharNotFound.Size = new System.Drawing.Size(668' 72);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxCustomCharNotFound.TabIndex = 3;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelCustomCharNotFound.Location = new System.Drawing.Point(6' 80);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelCustomCharNotFound.Location = new System.Drawing.Point(6' 80);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelCustomCharNotFound.Size = new System.Drawing.Size(133' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelCustomCharNotFound.Size = new System.Drawing.Size(133' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelCustomCharNotFound.TabIndex = 2;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelLongestLine.Location = new System.Drawing.Point(6' 51);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelLongestLine.Location = new System.Drawing.Point(6' 51);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelLongestLine.Size = new System.Drawing.Size(87' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelLongestLine.Size = new System.Drawing.Size(87' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelStatus.Location = new System.Drawing.Point(6' 24);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelStatus.Location = new System.Drawing.Point(6' 24);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelStatus.Size = new System.Drawing.Size(59' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelStatus.Size = new System.Drawing.Size(59' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Location = new System.Drawing.Point(6' 10);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Location = new System.Drawing.Point(6' 10);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Size = new System.Drawing.Size(316' 175);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Size = new System.Drawing.Size(316' 175);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseCustom.Location = new System.Drawing.Point(7' 119);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseCustom.Location = new System.Drawing.Point(7' 119);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseCustom.Size = new System.Drawing.Size(150' 17);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseCustom.Size = new System.Drawing.Size(150' 17);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseCustom.TabIndex = 6;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseFont.Location = new System.Drawing.Point(7' 54);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseFont.Location = new System.Drawing.Point(7' 54);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseFont.Size = new System.Drawing.Size(65' 17);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseFont.Size = new System.Drawing.Size(65' 17);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonUseFont.TabIndex = 3;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(182' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(182' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(33' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(33' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 2;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDown1.Location = new System.Drawing.Point(131' 20);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDown1.Location = new System.Drawing.Point(131' 20);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDown1.Maximum = new decimal(new int[] {              500'              0'              0'              0});
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDown1.Size = new System.Drawing.Size(45' 20);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDown1.Size = new System.Drawing.Size(45' 20);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDown1.Value = new decimal(new int[] {              180'              0'              0'              0});
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(6' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(6' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(119' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(119' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelFont.Location = new System.Drawing.Point(149' 79);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelFont.Location = new System.Drawing.Point(149' 79);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelFont.Size = new System.Drawing.Size(50' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelFont.Size = new System.Drawing.Size(50' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelFont.TabIndex = 5;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonEditCustomCharWidthList.Location = new System.Drawing.Point(36' 142);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonEditCustomCharWidthList.Location = new System.Drawing.Point(36' 142);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonEditCustomCharWidthList.Size = new System.Drawing.Size(106' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonEditCustomCharWidthList.Size = new System.Drawing.Size(106' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonEditCustomCharWidthList.TabIndex = 7;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonChooseFont.Location = new System.Drawing.Point(36' 76);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonChooseFont.Location = new System.Drawing.Point(36' 76);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonChooseFont.Size = new System.Drawing.Size(106' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonChooseFont.Size = new System.Drawing.Size(106' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonChooseFont.TabIndex = 4;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxText.Location = new System.Drawing.Point(232' 536);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxText.Location = new System.Drawing.Point(232' 536);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxText.Size = new System.Drawing.Size(361' 52);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxText.Size = new System.Drawing.Size(361' 52);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxText.TabIndex = 2;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelText.Location = new System.Drawing.Point(198' 539);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelText.Location = new System.Drawing.Point(198' 539);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelText.Size = new System.Drawing.Size(28' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelText.Size = new System.Drawing.Size(28' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonAutoBreak.Location = new System.Drawing.Point(599' 536);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonAutoBreak.Location = new System.Drawing.Point(599' 536);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonAutoBreak.Size = new System.Drawing.Size(193' 21);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonAutoBreak.Size = new System.Drawing.Size(193' 21);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonAutoBreak.TabIndex = 3;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelErrorCount.Location = new System.Drawing.Point(4' 575);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelErrorCount.Location = new System.Drawing.Point(4' 575);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelErrorCount.Size = new System.Drawing.Size(65' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelErrorCount.Size = new System.Drawing.Size(65' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelErrorCount.TabIndex = 6;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.timer1.Interval = 200;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.subtitleListView1.Location = new System.Drawing.Point(7' 233);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.subtitleListView1.Location = new System.Drawing.Point(7' 233);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.subtitleListView1.Size = new System.Drawing.Size(1017' 297);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.subtitleListView1.Size = new System.Drawing.Size(1017' 297);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.subtitleListView1.SubtitleFontSize = 8;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(1036' 595);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(1036' 595);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(834' 583);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(834' 583);
Missing Default,Nikse.SubtitleEdit.PluginLogic.Controls,SubtitleListView,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Controls\SubtitleListView.cs,SubtitleListView_DrawSubItem,The following switch statement is missing a default case: switch (e.Header.TextAlign)                  {                      case HorizontalAlignment.Center:                          sf.Alignment = StringAlignment.Center;                          break;                      case HorizontalAlignment.Right:                          sf.Alignment = StringAlignment.Far;                          break;                  }
Missing Default,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\CheckLineWidth\DLL\Logic\SubRip.cs,ReadLine,The following switch statement is missing a default case: switch (_expecting)              {                  case ExpectingLine.Number:                      if (Utilities.IsInteger(line))                      {                          _paragraph.Number = int.Parse(line);                          _expecting = ExpectingLine.TimeCodes;                      }                      else if (line.Trim().Length > 0)                      {                          _errorCount++;                      }                      break;                    case ExpectingLine.TimeCodes:                      if (TryReadTimeCodesLine(line' _paragraph))                      {                          _paragraph.Text = string.Empty;                          _expecting = ExpectingLine.Text;                      }                      else if (line.Trim().Length > 0)                      {                          _errorCount++;                          _expecting = ExpectingLine.Number; // lets go to next paragraph                      }                      break;                    case ExpectingLine.Text:                      if (line.Trim().Length > 0)                      {                          if (_paragraph.Text.Length > 0)                              _paragraph.Text += Environment.NewLine;                          _paragraph.Text += RemoveBadChars(line).TrimEnd().Replace(Environment.NewLine + Environment.NewLine' Environment.NewLine);                      }                      else if (IsText(next))                      {                          if (_paragraph.Text.Length > 0)                              _paragraph.Text += Environment.NewLine;                          _paragraph.Text += RemoveBadChars(line).TrimEnd().Replace(Environment.NewLine + Environment.NewLine' Environment.NewLine);                      }                      else if (string.IsNullOrEmpty(line) && string.IsNullOrEmpty(_paragraph.Text))                      {                          _paragraph.Text = string.Empty;                          if (!string.IsNullOrEmpty(next) && (Utilities.IsInteger(next) || RegexTimeCodes.IsMatch(next)))                          {                              subtitle.Paragraphs.Add(_paragraph);                              _paragraph = new Paragraph();                              _expecting = ExpectingLine.Number;                          }                      }                      else                      {                          subtitle.Paragraphs.Add(_paragraph);                          _paragraph = new Paragraph();                          _expecting = ExpectingLine.Number;                      }                      break;              }
