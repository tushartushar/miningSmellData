Implementation smell,Namespace,Class,File,Method,Description
Long Method,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The method has 307 lines of code.
Complex Method,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,GeneratePreview,Cyclomatic complexity of the method is 8
Complex Method,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,LoadSubtitle,Cyclomatic complexity of the method is 9
Long Parameter List,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,AddFixToListView,The method has 5 parameters. Parameters: p' before' after' containsMood' containsNarrator
Long Parameter List,Nikse.SubtitleEdit.PluginLogic,HI2UC,C:\repos\SubtitleEdit_plugins\HI2UC\Plugin.cs,DoAction,The method has 7 parameters. Parameters: parentForm' srtText' frame' uiLineBreak' file' videFile' rawText
Long Parameter List,Nikse.SubtitleEdit.PluginLogic,IPlugin,C:\repos\SubtitleEdit_plugins\Plugin-Shared\IPlugin.cs,DoAction,The method has 7 parameters. Parameters: parentForm' srtText' frameRate' UILineBreak' file' videoFile' rawText
Long Parameter List,Nikse.SubtitleEdit.PluginLogic,StringUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StringUtils.cs,CheckForBrackets,The method has 5 parameters. Parameters: text' bracketType' nextIdx' sub' idx
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,listViewFixes_Resize,The length of the statement  "            var newWidth = (listViewFixes.Width - (listViewFixes.Columns[0].Width + listViewFixes.Columns[1].Width + listViewFixes.Columns[2].Width)) / 2; " is 142.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The length of the statement  "            this.labelDesc.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 147.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The length of the statement  "            this.btn_Cancel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 149.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The length of the statement  "            this.buttonConvert.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 152.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The length of the statement  "            this.toolTip1.SetToolTip(this.checkBoxNames' "This will change the Narrator Text\r\nEx: Harry: Hello! -> HARRY: Hello!"); " is 121.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The length of the statement  "            this.comboBoxStyle.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 148.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The length of the statement  "            this.label2.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 141.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The length of the statement  "            this.linkLabel1.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 148.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The length of the statement  "            this.groupBox1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 145.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The length of the statement  "            this.buttonApply.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 150.
Long Statement,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The length of the statement  "            this.checkBoxSingleLineNarrator.CheckedChanged += new System.EventHandler(this.checkBoxSingleLineNarrator_CheckedChanged); " is 122.
Long Statement,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,IsUrl,The length of the statement  "            if (allLower.StartsWith("http://"' StringComparison.Ordinal) || allLower.StartsWith("https://"' StringComparison.Ordinal) || " is 124.
Long Statement,Nikse.SubtitleEdit.PluginLogic,StringExtensions,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StringExtensions.cs,ContainsLetter,The length of the statement  "                    if (uc == UnicodeCategory.LowercaseLetter || uc == UnicodeCategory.UppercaseLetter || uc == UnicodeCategory.TitlecaseLetter || uc == UnicodeCategory.ModifierLetter || uc == UnicodeCategory.OtherLetter) " is 201.
Long Statement,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,ReadLine,The length of the statement  "                        _paragraph.Text += StringUtils.RemoveBadChars(line).TrimEnd().Replace(Environment.NewLine + Environment.NewLine' Environment.NewLine); " is 134.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic,HearingImpaired,C:\repos\SubtitleEdit_plugins\HI2UC\Models\HearingImpaired.cs,IsQualifiedNarrator,The conditional expression  "noTagCapturedText.StartsWith("http"' StringComparison.OrdinalIgnoreCase) ||                  noTagCapturedText.EndsWith("improved by"' StringComparison.OrdinalIgnoreCase) ||                  noTagCapturedText.EndsWith("corrected by"' StringComparison.OrdinalIgnoreCase) ||                  noTagCapturedText.EndsWith("https"' StringComparison.OrdinalIgnoreCase) ||                  noTagCapturedText.EndsWith("http"' StringComparison.OrdinalIgnoreCase)"  is complex.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,IsUrl,The conditional expression  "string.IsNullOrWhiteSpace(text) || text.Length < 6 || !text.Contains('.') || text.Contains(' ')"  is complex.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,IsUrl,The conditional expression  "allLower.StartsWith("http://"' StringComparison.Ordinal) || allLower.StartsWith("https://"' StringComparison.Ordinal) ||                  allLower.StartsWith("www."' StringComparison.Ordinal) || allLower.EndsWith(".org"' StringComparison.Ordinal) ||                  allLower.EndsWith(".com"' StringComparison.Ordinal) || allLower.EndsWith(".net"' StringComparison.Ordinal)"  is complex.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic,StringExtensions,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StringExtensions.cs,FixExtraSpaces,The conditional expression  "(ch == '\n' || ch == '\r') && i + 1 < s.Length && s[i + 1] == 0x20"  is complex.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic,StringExtensions,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StringExtensions.cs,FixExtraSpaces,The conditional expression  "ch == 0x20 && i + 1 < s.Length && (s[i + 1] == '\n' || s[i + 1] == '\r')"  is complex.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic,StringExtensions,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StringExtensions.cs,ContainsLetter,The conditional expression  "uc == UnicodeCategory.LowercaseLetter || uc == UnicodeCategory.UppercaseLetter || uc == UnicodeCategory.TitlecaseLetter || uc == UnicodeCategory.ModifierLetter || uc == UnicodeCategory.OtherLetter"  is complex.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,LoadSubtitle,The conditional expression  "_expecting == ExpectingLine.Text && i + 1 < lines.Count &&                      _paragraph != null && !string.IsNullOrEmpty(_paragraph.Text) && StringUtils.IsInteger(line) &&                      RegexTimeCodes.IsMatch(lines[i + 1])"  is complex.
Empty Catch Block,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,TryReadTimeCodesLine,The method has an empty catch block.
Magic Number,Nikse.SubtitleEdit.PluginLogic,HearingImpaired,C:\repos\SubtitleEdit_plugins\HI2UC\Models\HearingImpaired.cs,MoodsToUppercase,The following statement contains a magic number: do              {                  int endIdx = text.IndexOf(moodEndChar' idx + 1); // ] or )                  // There most be at lease one chars inside brackets.                  if (endIdx < idx + 2)                  {                      break;                  }                  string moodText = text.Substring(idx' endIdx - idx + 1);                  moodText = Customize(moodText);                  text = text.Remove(idx' endIdx - idx + 1).Insert(idx' moodText);                  idx = text.IndexOf(moodStartChar' endIdx + 1); // ( or [              }              while (idx >= 0);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,PluginForm,The following statement contains a magic number: Resize += delegate              {                  listViewFixes.Columns[listViewFixes.Columns.Count - 1].Width = -2;              };
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,AddFixToListView,The following statement contains a magic number: if (idx > 2)              {                  string firstLine = after.Substring(0' idx).Trim();                  string secondLine = after.Substring(idx + Environment.NewLine.Length).Trim();                  int idx1 = firstLine.IndexOf(':');                  int idx2 = secondLine.IndexOf(':');                  if (idx1 > 0xE || idx2 > 0xE)                  {                      item.BackColor = Color.Pink;                  }              }              else              {                  if (after.IndexOf(':') > 0xE)                      item.BackColor = Color.Pink;              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,listViewFixes_Resize,The following statement contains a magic number: var newWidth = (listViewFixes.Width - (listViewFixes.Columns[0].Width + listViewFixes.Columns[1].Width + listViewFixes.Columns[2].Width)) / 2;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,listViewFixes_Resize,The following statement contains a magic number: var newWidth = (listViewFixes.Width - (listViewFixes.Columns[0].Width + listViewFixes.Columns[1].Width + listViewFixes.Columns[2].Width)) / 2;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,listViewFixes_Resize,The following statement contains a magic number: listViewFixes.Columns[3].Width = newWidth;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,listViewFixes_Resize,The following statement contains a magic number: listViewFixes.Columns[4].Width = newWidth;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelDesc.Location = new System.Drawing.Point(12' 524);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelDesc.Location = new System.Drawing.Point(12' 524);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelDesc.Size = new System.Drawing.Size(83' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelDesc.Size = new System.Drawing.Size(83' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.labelDesc.TabIndex = 6;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.btn_Cancel.Location = new System.Drawing.Point(806' 527);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.btn_Cancel.Location = new System.Drawing.Point(806' 527);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.btn_Cancel.Size = new System.Drawing.Size(100' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.btn_Cancel.Size = new System.Drawing.Size(100' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonConvert.Location = new System.Drawing.Point(700' 527);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonConvert.Location = new System.Drawing.Point(700' 527);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonConvert.Size = new System.Drawing.Size(100' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonConvert.Size = new System.Drawing.Size(100' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.listViewFixes.Location = new System.Drawing.Point(3' 16);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.listViewFixes.Location = new System.Drawing.Point(3' 16);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.listViewFixes.Size = new System.Drawing.Size(891' 446);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.listViewFixes.Size = new System.Drawing.Size(891' 446);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.columnHeader4.Width = 45;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.columnHeader1.Width = 50;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.columnHeader5.Width = 81;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.columnHeader2.Width = 371;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.columnHeader3.Width = 341;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.contextMenuStrip1.Size = new System.Drawing.Size(153' 114);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.contextMenuStrip1.Size = new System.Drawing.Size(153' 114);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkAllToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkAllToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.uncheckAllToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.uncheckAllToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.invertCheckToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.invertCheckToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.copyToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.copyToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.deleteLineToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.deleteLineToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxNames.Location = new System.Drawing.Point(15' 10);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxNames.Location = new System.Drawing.Point(15' 10);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxNames.Size = new System.Drawing.Size(206' 17);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxNames.Size = new System.Drawing.Size(206' 17);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxNames.TabIndex = 3;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxStyle.Location = new System.Drawing.Point(756' 38);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxStyle.Location = new System.Drawing.Point(756' 38);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxStyle.MaxDropDownItems = 5;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxStyle.Size = new System.Drawing.Size(153' 21);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxStyle.Size = new System.Drawing.Size(153' 21);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxStyle.TabIndex = 2;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(752' 21);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(752' 21);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(131' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(131' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 4;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Location = new System.Drawing.Point(12' 540);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Location = new System.Drawing.Point(12' 540);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Size = new System.Drawing.Size(236' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Size = new System.Drawing.Size(236' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.TabIndex = 7;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(12' 56);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(12' 56);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(897' 465);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(897' 465);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.TabIndex = 5;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonApply.Location = new System.Drawing.Point(594' 527);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonApply.Location = new System.Drawing.Point(594' 527);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonApply.Size = new System.Drawing.Size(100' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonApply.Size = new System.Drawing.Size(100' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonApply.TabIndex = 8;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveSpaces.Location = new System.Drawing.Point(15' 33);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveSpaces.Location = new System.Drawing.Point(15' 33);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveSpaces.Size = new System.Drawing.Size(229' 17);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveSpaces.Size = new System.Drawing.Size(229' 17);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxRemoveSpaces.TabIndex = 9;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMoods.Location = new System.Drawing.Point(260' 10);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMoods.Location = new System.Drawing.Point(260' 10);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMoods.Size = new System.Drawing.Size(189' 17);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMoods.Size = new System.Drawing.Size(189' 17);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMoods.TabIndex = 10;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxSingleLineNarrator.Location = new System.Drawing.Point(260' 33);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxSingleLineNarrator.Location = new System.Drawing.Point(260' 33);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxSingleLineNarrator.Size = new System.Drawing.Size(226' 17);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxSingleLineNarrator.Size = new System.Drawing.Size(226' 17);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxSingleLineNarrator.TabIndex = 11;
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(918' 562);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(918' 562);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(711' 425);
Magic Number,Nikse.SubtitleEdit.PluginLogic,PluginForm,C:\repos\SubtitleEdit_plugins\HI2UC\PluginForm.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(711' 425);
Magic Number,Nikse.SubtitleEdit.PluginLogic,HI2UC,C:\repos\SubtitleEdit_plugins\HI2UC\Plugin.cs,HI2UC,The following statement contains a magic number: try              {                  // seem to throw when culture is cs-CZ - Czech (Czech Republic)                  // TODO: Fix                  Version = Convert.ToDecimal(assemblyName.Version.ToString(2));              }              catch              {                  Version = 3.7M;              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,RemoveTags,The following statement contains a magic number: if (s == null || s.Length < 3)                  return s;
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,IsUrl,The following statement contains a magic number: if (string.IsNullOrWhiteSpace(text) || text.Length < 6 || !text.Contains('.') || text.Contains(' '))                  return false;
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,FixUpperTags,The following statement contains a magic number: while (idx >= 0)              {                  var endIdx = text.IndexOf('>'' idx + 2);                  if (endIdx < idx)                      break;                  var tag = text.Substring(idx' endIdx - idx).ToLowerInvariant();                  text = text.Remove(idx' endIdx - idx).Insert(idx' tag);                  idx = text.IndexOfAny(UppercaseTags' StringComparison.Ordinal);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,RemoveHtmlColorTags,The following statement contains a magic number: if (startIndex >= 0 && s.IndexOf("face=\""' StringComparison.OrdinalIgnoreCase) > 5)              {                  while (startIndex >= 0)                  {                      var endIndex = s.IndexOf('>'' startIndex + 5);                      if (endIndex < startIndex)                      {                          break;                      }                        var fontTag = s.Substring(startIndex' endIndex - startIndex + 1);                      fontTag = StripColorAnnotation(fontTag);                        var countStart = StringUtils.CountTagInText(s' "<font");                      var countEnd = StringUtils.CountTagInText(s' "</font>");                      var mod = countStart + countEnd % 2;                      if (mod != 0 && countEnd > countStart)                      {                          while (--mod >= 0)                          {                              var idx = s.IndexOf("</font>"' StringComparison.InvariantCultureIgnoreCase);                              s = s.Remove(idx' 7);                          }                      }                        if (fontTag.Length > 6)                      {                          s = s.Remove(startIndex' endIndex - startIndex + 1);                          s = s.Insert(startIndex' fontTag);                          startIndex = s.IndexOf("<font"' startIndex + 6);                      }                      // s.IndexOf("<font"' StringComparison.OrdinalIgnoreCase);                      startIndex = s.IndexOf("<font"' startIndex + 8);                  }              }              else              {                  s = RemoveOpenCloseTags(s' TagFont);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,RemoveHtmlColorTags,The following statement contains a magic number: if (startIndex >= 0 && s.IndexOf("face=\""' StringComparison.OrdinalIgnoreCase) > 5)              {                  while (startIndex >= 0)                  {                      var endIndex = s.IndexOf('>'' startIndex + 5);                      if (endIndex < startIndex)                      {                          break;                      }                        var fontTag = s.Substring(startIndex' endIndex - startIndex + 1);                      fontTag = StripColorAnnotation(fontTag);                        var countStart = StringUtils.CountTagInText(s' "<font");                      var countEnd = StringUtils.CountTagInText(s' "</font>");                      var mod = countStart + countEnd % 2;                      if (mod != 0 && countEnd > countStart)                      {                          while (--mod >= 0)                          {                              var idx = s.IndexOf("</font>"' StringComparison.InvariantCultureIgnoreCase);                              s = s.Remove(idx' 7);                          }                      }                        if (fontTag.Length > 6)                      {                          s = s.Remove(startIndex' endIndex - startIndex + 1);                          s = s.Insert(startIndex' fontTag);                          startIndex = s.IndexOf("<font"' startIndex + 6);                      }                      // s.IndexOf("<font"' StringComparison.OrdinalIgnoreCase);                      startIndex = s.IndexOf("<font"' startIndex + 8);                  }              }              else              {                  s = RemoveOpenCloseTags(s' TagFont);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,RemoveHtmlColorTags,The following statement contains a magic number: if (startIndex >= 0 && s.IndexOf("face=\""' StringComparison.OrdinalIgnoreCase) > 5)              {                  while (startIndex >= 0)                  {                      var endIndex = s.IndexOf('>'' startIndex + 5);                      if (endIndex < startIndex)                      {                          break;                      }                        var fontTag = s.Substring(startIndex' endIndex - startIndex + 1);                      fontTag = StripColorAnnotation(fontTag);                        var countStart = StringUtils.CountTagInText(s' "<font");                      var countEnd = StringUtils.CountTagInText(s' "</font>");                      var mod = countStart + countEnd % 2;                      if (mod != 0 && countEnd > countStart)                      {                          while (--mod >= 0)                          {                              var idx = s.IndexOf("</font>"' StringComparison.InvariantCultureIgnoreCase);                              s = s.Remove(idx' 7);                          }                      }                        if (fontTag.Length > 6)                      {                          s = s.Remove(startIndex' endIndex - startIndex + 1);                          s = s.Insert(startIndex' fontTag);                          startIndex = s.IndexOf("<font"' startIndex + 6);                      }                      // s.IndexOf("<font"' StringComparison.OrdinalIgnoreCase);                      startIndex = s.IndexOf("<font"' startIndex + 8);                  }              }              else              {                  s = RemoveOpenCloseTags(s' TagFont);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,RemoveHtmlColorTags,The following statement contains a magic number: if (startIndex >= 0 && s.IndexOf("face=\""' StringComparison.OrdinalIgnoreCase) > 5)              {                  while (startIndex >= 0)                  {                      var endIndex = s.IndexOf('>'' startIndex + 5);                      if (endIndex < startIndex)                      {                          break;                      }                        var fontTag = s.Substring(startIndex' endIndex - startIndex + 1);                      fontTag = StripColorAnnotation(fontTag);                        var countStart = StringUtils.CountTagInText(s' "<font");                      var countEnd = StringUtils.CountTagInText(s' "</font>");                      var mod = countStart + countEnd % 2;                      if (mod != 0 && countEnd > countStart)                      {                          while (--mod >= 0)                          {                              var idx = s.IndexOf("</font>"' StringComparison.InvariantCultureIgnoreCase);                              s = s.Remove(idx' 7);                          }                      }                        if (fontTag.Length > 6)                      {                          s = s.Remove(startIndex' endIndex - startIndex + 1);                          s = s.Insert(startIndex' fontTag);                          startIndex = s.IndexOf("<font"' startIndex + 6);                      }                      // s.IndexOf("<font"' StringComparison.OrdinalIgnoreCase);                      startIndex = s.IndexOf("<font"' startIndex + 8);                  }              }              else              {                  s = RemoveOpenCloseTags(s' TagFont);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,RemoveHtmlColorTags,The following statement contains a magic number: if (startIndex >= 0 && s.IndexOf("face=\""' StringComparison.OrdinalIgnoreCase) > 5)              {                  while (startIndex >= 0)                  {                      var endIndex = s.IndexOf('>'' startIndex + 5);                      if (endIndex < startIndex)                      {                          break;                      }                        var fontTag = s.Substring(startIndex' endIndex - startIndex + 1);                      fontTag = StripColorAnnotation(fontTag);                        var countStart = StringUtils.CountTagInText(s' "<font");                      var countEnd = StringUtils.CountTagInText(s' "</font>");                      var mod = countStart + countEnd % 2;                      if (mod != 0 && countEnd > countStart)                      {                          while (--mod >= 0)                          {                              var idx = s.IndexOf("</font>"' StringComparison.InvariantCultureIgnoreCase);                              s = s.Remove(idx' 7);                          }                      }                        if (fontTag.Length > 6)                      {                          s = s.Remove(startIndex' endIndex - startIndex + 1);                          s = s.Insert(startIndex' fontTag);                          startIndex = s.IndexOf("<font"' startIndex + 6);                      }                      // s.IndexOf("<font"' StringComparison.OrdinalIgnoreCase);                      startIndex = s.IndexOf("<font"' startIndex + 8);                  }              }              else              {                  s = RemoveOpenCloseTags(s' TagFont);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,RemoveHtmlColorTags,The following statement contains a magic number: if (startIndex >= 0 && s.IndexOf("face=\""' StringComparison.OrdinalIgnoreCase) > 5)              {                  while (startIndex >= 0)                  {                      var endIndex = s.IndexOf('>'' startIndex + 5);                      if (endIndex < startIndex)                      {                          break;                      }                        var fontTag = s.Substring(startIndex' endIndex - startIndex + 1);                      fontTag = StripColorAnnotation(fontTag);                        var countStart = StringUtils.CountTagInText(s' "<font");                      var countEnd = StringUtils.CountTagInText(s' "</font>");                      var mod = countStart + countEnd % 2;                      if (mod != 0 && countEnd > countStart)                      {                          while (--mod >= 0)                          {                              var idx = s.IndexOf("</font>"' StringComparison.InvariantCultureIgnoreCase);                              s = s.Remove(idx' 7);                          }                      }                        if (fontTag.Length > 6)                      {                          s = s.Remove(startIndex' endIndex - startIndex + 1);                          s = s.Insert(startIndex' fontTag);                          startIndex = s.IndexOf("<font"' startIndex + 6);                      }                      // s.IndexOf("<font"' StringComparison.OrdinalIgnoreCase);                      startIndex = s.IndexOf("<font"' startIndex + 8);                  }              }              else              {                  s = RemoveOpenCloseTags(s' TagFont);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,RemoveHtmlColorTags,The following statement contains a magic number: if (startIndex >= 0 && s.IndexOf("face=\""' StringComparison.OrdinalIgnoreCase) > 5)              {                  while (startIndex >= 0)                  {                      var endIndex = s.IndexOf('>'' startIndex + 5);                      if (endIndex < startIndex)                      {                          break;                      }                        var fontTag = s.Substring(startIndex' endIndex - startIndex + 1);                      fontTag = StripColorAnnotation(fontTag);                        var countStart = StringUtils.CountTagInText(s' "<font");                      var countEnd = StringUtils.CountTagInText(s' "</font>");                      var mod = countStart + countEnd % 2;                      if (mod != 0 && countEnd > countStart)                      {                          while (--mod >= 0)                          {                              var idx = s.IndexOf("</font>"' StringComparison.InvariantCultureIgnoreCase);                              s = s.Remove(idx' 7);                          }                      }                        if (fontTag.Length > 6)                      {                          s = s.Remove(startIndex' endIndex - startIndex + 1);                          s = s.Insert(startIndex' fontTag);                          startIndex = s.IndexOf("<font"' startIndex + 6);                      }                      // s.IndexOf("<font"' StringComparison.OrdinalIgnoreCase);                      startIndex = s.IndexOf("<font"' startIndex + 8);                  }              }              else              {                  s = RemoveOpenCloseTags(s' TagFont);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,StripColorAnnotation,The following statement contains a magic number: int colorEnd = fontTag.IndexOf('\"'' colorStart + 7);
Magic Number,Nikse.SubtitleEdit.PluginLogic,Options,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\Options.cs,Options,The following statement contains a magic number: Frame = 23.976;
Magic Number,Nikse.SubtitleEdit.PluginLogic,StringExtensions,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StringExtensions.cs,FixExtraSpaces,The following statement contains a magic number: for (int i = len - 1; i >= 0; i--)              {                  char ch = s[i];                  if (k < 2)                  {                      if (ch == 0x20)                      {                          k = i + 1;                      }                  }                  else if (ch != 0x20)                  {                      // Two or more white-spaces found!                      if (k - (i + 1) > 1)                      {                          // Keep only one white-space.                          s = s.Remove(i + 1' k - (i + 2));                      }                        // No white-space after/before line break.                      if ((ch == '\n' || ch == '\r') && i + 1 < s.Length && s[i + 1] == 0x20)                      {                          s = s.Remove(i + 1' 1);                      }                      // Reset remove length.                      k = -1;                  }                  if (ch == 0x20 && i + 1 < s.Length && (s[i + 1] == '\n' || s[i + 1] == '\r'))                  {                      s = s.Remove(i' 1);                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,StringExtensions,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StringExtensions.cs,FixExtraSpaces,The following statement contains a magic number: for (int i = len - 1; i >= 0; i--)              {                  char ch = s[i];                  if (k < 2)                  {                      if (ch == 0x20)                      {                          k = i + 1;                      }                  }                  else if (ch != 0x20)                  {                      // Two or more white-spaces found!                      if (k - (i + 1) > 1)                      {                          // Keep only one white-space.                          s = s.Remove(i + 1' k - (i + 2));                      }                        // No white-space after/before line break.                      if ((ch == '\n' || ch == '\r') && i + 1 < s.Length && s[i + 1] == 0x20)                      {                          s = s.Remove(i + 1' 1);                      }                      // Reset remove length.                      k = -1;                  }                  if (ch == 0x20 && i + 1 < s.Length && (s[i + 1] == '\n' || s[i + 1] == '\r'))                  {                      s = s.Remove(i' 1);                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,StripableText,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StripableText.cs,StripableText,The following statement contains a magic number: if (text.Length > 0 && ("<{" + stripStartCharacters).Contains(text[0]))              {                  int beginLength;                  do                  {                      beginLength = text.Length;                        while (text.Length > 0 && stripStartCharacters.Contains(text[0]))                      {                          Pre += text[0];                          text = text.Remove(0' 1);                      }                        // ASS/SSA codes like {\an9}                      int endIndex = text.IndexOf('}');                      if (endIndex > 0 && text.StartsWith("{\\"' StringComparison.Ordinal))                      {                          int nextStartIndex = text.IndexOf('{'' 2);                          if (nextStartIndex == -1 || nextStartIndex > endIndex)                          {                              endIndex++;                              Pre += text.Substring(0' endIndex);                              text = text.Remove(0' endIndex);                          }                      }                        // tags like <i> or <font face="Segoe Print" color="#ff0000">                      endIndex = text.IndexOf('>');                      if (text.StartsWith('<') && endIndex >= 2)                      {                          endIndex++;                          Pre += text.Substring(0' endIndex);                          text = text.Remove(0' endIndex);                      }                  }                  while (text.Length < beginLength);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,StripableText,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StripableText.cs,StripableText,The following statement contains a magic number: if (text.Length > 0 && ("<{" + stripStartCharacters).Contains(text[0]))              {                  int beginLength;                  do                  {                      beginLength = text.Length;                        while (text.Length > 0 && stripStartCharacters.Contains(text[0]))                      {                          Pre += text[0];                          text = text.Remove(0' 1);                      }                        // ASS/SSA codes like {\an9}                      int endIndex = text.IndexOf('}');                      if (endIndex > 0 && text.StartsWith("{\\"' StringComparison.Ordinal))                      {                          int nextStartIndex = text.IndexOf('{'' 2);                          if (nextStartIndex == -1 || nextStartIndex > endIndex)                          {                              endIndex++;                              Pre += text.Substring(0' endIndex);                              text = text.Remove(0' endIndex);                          }                      }                        // tags like <i> or <font face="Segoe Print" color="#ff0000">                      endIndex = text.IndexOf('>');                      if (text.StartsWith('<') && endIndex >= 2)                      {                          endIndex++;                          Pre += text.Substring(0' endIndex);                          text = text.Remove(0' endIndex);                      }                  }                  while (text.Length < beginLength);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,StripableText,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StripableText.cs,StripableText,The following statement contains a magic number: if (text.Length > 0 && (">" + stripEndCharacters).Contains(text[text.Length - 1]))              {                  int beginLength;                  do                  {                      beginLength = text.Length;                        while (text.Length > 0 && stripEndCharacters.Contains(text[text.Length - 1]))                      {                          Post = text[text.Length - 1] + Post;                          text = text.Substring(0' text.Length - 1);                      }                        if (text.EndsWith('>'))                      {                          // tags </i> </b> </u>                          if (text.EndsWith("</i>"' StringComparison.OrdinalIgnoreCase) ||                              text.EndsWith("</b>"' StringComparison.OrdinalIgnoreCase) ||                              text.EndsWith("</u>"' StringComparison.OrdinalIgnoreCase))                          {                              Post = text.Substring(text.Length - 4) + Post;                              text = text.Substring(0' text.Length - 4);                          }                            // tag </font>                          if (text.EndsWith("</font>"' StringComparison.OrdinalIgnoreCase))                          {                              Post = text.Substring(text.Length - 7) + Post;                              text = text.Substring(0' text.Length - 7);                          }                      }                  }                  while (text.Length < beginLength);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,StripableText,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StripableText.cs,StripableText,The following statement contains a magic number: if (text.Length > 0 && (">" + stripEndCharacters).Contains(text[text.Length - 1]))              {                  int beginLength;                  do                  {                      beginLength = text.Length;                        while (text.Length > 0 && stripEndCharacters.Contains(text[text.Length - 1]))                      {                          Post = text[text.Length - 1] + Post;                          text = text.Substring(0' text.Length - 1);                      }                        if (text.EndsWith('>'))                      {                          // tags </i> </b> </u>                          if (text.EndsWith("</i>"' StringComparison.OrdinalIgnoreCase) ||                              text.EndsWith("</b>"' StringComparison.OrdinalIgnoreCase) ||                              text.EndsWith("</u>"' StringComparison.OrdinalIgnoreCase))                          {                              Post = text.Substring(text.Length - 4) + Post;                              text = text.Substring(0' text.Length - 4);                          }                            // tag </font>                          if (text.EndsWith("</font>"' StringComparison.OrdinalIgnoreCase))                          {                              Post = text.Substring(text.Length - 7) + Post;                              text = text.Substring(0' text.Length - 7);                          }                      }                  }                  while (text.Length < beginLength);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,StripableText,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StripableText.cs,StripableText,The following statement contains a magic number: if (text.Length > 0 && (">" + stripEndCharacters).Contains(text[text.Length - 1]))              {                  int beginLength;                  do                  {                      beginLength = text.Length;                        while (text.Length > 0 && stripEndCharacters.Contains(text[text.Length - 1]))                      {                          Post = text[text.Length - 1] + Post;                          text = text.Substring(0' text.Length - 1);                      }                        if (text.EndsWith('>'))                      {                          // tags </i> </b> </u>                          if (text.EndsWith("</i>"' StringComparison.OrdinalIgnoreCase) ||                              text.EndsWith("</b>"' StringComparison.OrdinalIgnoreCase) ||                              text.EndsWith("</u>"' StringComparison.OrdinalIgnoreCase))                          {                              Post = text.Substring(text.Length - 4) + Post;                              text = text.Substring(0' text.Length - 4);                          }                            // tag </font>                          if (text.EndsWith("</font>"' StringComparison.OrdinalIgnoreCase))                          {                              Post = text.Substring(text.Length - 7) + Post;                              text = text.Substring(0' text.Length - 7);                          }                      }                  }                  while (text.Length < beginLength);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,StripableText,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StripableText.cs,StripableText,The following statement contains a magic number: if (text.Length > 0 && (">" + stripEndCharacters).Contains(text[text.Length - 1]))              {                  int beginLength;                  do                  {                      beginLength = text.Length;                        while (text.Length > 0 && stripEndCharacters.Contains(text[text.Length - 1]))                      {                          Post = text[text.Length - 1] + Post;                          text = text.Substring(0' text.Length - 1);                      }                        if (text.EndsWith('>'))                      {                          // tags </i> </b> </u>                          if (text.EndsWith("</i>"' StringComparison.OrdinalIgnoreCase) ||                              text.EndsWith("</b>"' StringComparison.OrdinalIgnoreCase) ||                              text.EndsWith("</u>"' StringComparison.OrdinalIgnoreCase))                          {                              Post = text.Substring(text.Length - 4) + Post;                              text = text.Substring(0' text.Length - 4);                          }                            // tag </font>                          if (text.EndsWith("</font>"' StringComparison.OrdinalIgnoreCase))                          {                              Post = text.Substring(text.Length - 7) + Post;                              text = text.Substring(0' text.Length - 7);                          }                      }                  }                  while (text.Length < beginLength);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,LoadSubtitle,The following statement contains a magic number: if (_errorCount < 100)                  if (doRenum)                      subtitle.Renumber();
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: try              {                  int startHours = int.Parse(parts[0]);                  int startMinutes = int.Parse(parts[1]);                  int startSeconds = int.Parse(parts[2]);                  int startMilliseconds = int.Parse(parts[3]);                    int endHours = int.Parse(parts[4]);                  int endMinutes = int.Parse(parts[5]);                  int endSeconds = int.Parse(parts[6]);                  int endMilliseconds = int.Parse(parts[7]);                    paragraph.StartTime = new TimeCode(startHours' startMinutes' startSeconds' startMilliseconds);                  paragraph.EndTime = new TimeCode(endHours' endMinutes' endSeconds' endMilliseconds);                  return true;              }              catch              {              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: try              {                  int startHours = int.Parse(parts[0]);                  int startMinutes = int.Parse(parts[1]);                  int startSeconds = int.Parse(parts[2]);                  int startMilliseconds = int.Parse(parts[3]);                    int endHours = int.Parse(parts[4]);                  int endMinutes = int.Parse(parts[5]);                  int endSeconds = int.Parse(parts[6]);                  int endMilliseconds = int.Parse(parts[7]);                    paragraph.StartTime = new TimeCode(startHours' startMinutes' startSeconds' startMilliseconds);                  paragraph.EndTime = new TimeCode(endHours' endMinutes' endSeconds' endMilliseconds);                  return true;              }              catch              {              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: try              {                  int startHours = int.Parse(parts[0]);                  int startMinutes = int.Parse(parts[1]);                  int startSeconds = int.Parse(parts[2]);                  int startMilliseconds = int.Parse(parts[3]);                    int endHours = int.Parse(parts[4]);                  int endMinutes = int.Parse(parts[5]);                  int endSeconds = int.Parse(parts[6]);                  int endMilliseconds = int.Parse(parts[7]);                    paragraph.StartTime = new TimeCode(startHours' startMinutes' startSeconds' startMilliseconds);                  paragraph.EndTime = new TimeCode(endHours' endMinutes' endSeconds' endMilliseconds);                  return true;              }              catch              {              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: try              {                  int startHours = int.Parse(parts[0]);                  int startMinutes = int.Parse(parts[1]);                  int startSeconds = int.Parse(parts[2]);                  int startMilliseconds = int.Parse(parts[3]);                    int endHours = int.Parse(parts[4]);                  int endMinutes = int.Parse(parts[5]);                  int endSeconds = int.Parse(parts[6]);                  int endMilliseconds = int.Parse(parts[7]);                    paragraph.StartTime = new TimeCode(startHours' startMinutes' startSeconds' startMilliseconds);                  paragraph.EndTime = new TimeCode(endHours' endMinutes' endSeconds' endMilliseconds);                  return true;              }              catch              {              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: try              {                  int startHours = int.Parse(parts[0]);                  int startMinutes = int.Parse(parts[1]);                  int startSeconds = int.Parse(parts[2]);                  int startMilliseconds = int.Parse(parts[3]);                    int endHours = int.Parse(parts[4]);                  int endMinutes = int.Parse(parts[5]);                  int endSeconds = int.Parse(parts[6]);                  int endMilliseconds = int.Parse(parts[7]);                    paragraph.StartTime = new TimeCode(startHours' startMinutes' startSeconds' startMilliseconds);                  paragraph.EndTime = new TimeCode(endHours' endMinutes' endSeconds' endMilliseconds);                  return true;              }              catch              {              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: try              {                  int startHours = int.Parse(parts[0]);                  int startMinutes = int.Parse(parts[1]);                  int startSeconds = int.Parse(parts[2]);                  int startMilliseconds = int.Parse(parts[3]);                    int endHours = int.Parse(parts[4]);                  int endMinutes = int.Parse(parts[5]);                  int endSeconds = int.Parse(parts[6]);                  int endMilliseconds = int.Parse(parts[7]);                    paragraph.StartTime = new TimeCode(startHours' startMinutes' startSeconds' startMilliseconds);                  paragraph.EndTime = new TimeCode(endHours' endMinutes' endSeconds' endMilliseconds);                  return true;              }              catch              {              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,TimeCode,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\TimeCode.cs,TimeCode,The following statement contains a magic number: _totalMilliseconds = hour * 60 * 60 * BaseUnit + minute * 60 * BaseUnit + seconds * BaseUnit + milliseconds;
Magic Number,Nikse.SubtitleEdit.PluginLogic,TimeCode,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\TimeCode.cs,TimeCode,The following statement contains a magic number: _totalMilliseconds = hour * 60 * 60 * BaseUnit + minute * 60 * BaseUnit + seconds * BaseUnit + milliseconds;
Magic Number,Nikse.SubtitleEdit.PluginLogic,TimeCode,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\TimeCode.cs,TimeCode,The following statement contains a magic number: _totalMilliseconds = hour * 60 * 60 * BaseUnit + minute * 60 * BaseUnit + seconds * BaseUnit + milliseconds;
Magic Number,Nikse.SubtitleEdit.PluginLogic,TimeCode,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\TimeCode.cs,ToString,The following statement contains a magic number: var s = $"{(ts.Hours + ts.Days * 24):00}:{ts.Minutes:00}:{ts.Seconds:00}'{ts.Milliseconds:000}";
Magic Number,Nikse.SubtitleEdit.PluginLogic,StringUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StringUtils.cs,CheckForBrackets,The following statement contains a magic number: for (int i = nextIdx; i < sub.Paragraphs.Count; i++)              {                  var nextText = sub.Paragraphs[nextIdx].Text;                  idx = nextText.IndexOf('(');                  var close = nextText.IndexOf(')'' idx);                  if (idx > -1 && close > idx)                  {                      doFix = true;                      break;                  }                    // do not keep looking... just exit                  if (nextIdx + 3 == i)                      break;              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,StringUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StringUtils.cs,IsBetweenNumbers,The following statement contains a magic number: if (text.Length <= 2 || pos + 1 >= text.Length || pos - 1 < 0)                  return false;
Missing Default,Nikse.SubtitleEdit.PluginLogic,HearingImpaired,C:\repos\SubtitleEdit_plugins\HI2UC\Models\HearingImpaired.cs,Customize,The following switch statement is missing a default case: switch (Config.Style)              {                  case HIStyle.UpperLowerCase:                      if (_sb == null)                      {                          _sb = _lazySb.Value;                      }                      else                      {                          _sb.Clear();                      }                      bool isUpperTime = true;                      // TODO: Use StringInfo to fix issue with unicode chars?!                      foreach (char myChar in strippedText)                      {                          if (!char.IsLetter(myChar))                          {                              _sb.Append(myChar);                          }                          else                          {                              _sb.Append(isUpperTime ? char.ToUpper(myChar) : char.ToLower(myChar));                              isUpperTime = !isUpperTime;                          }                      }                      strippedText = _sb.ToString();                      break;                  case HIStyle.TitleCase:                      // "foobar foobar" to (Foobar Foobar)                      strippedText = RegexFirstChar.Replace(strippedText.ToLower()' x => x.Value.ToUpper());                      break;                  case HIStyle.UpperCase:                      strippedText = strippedText.ToUpper();                      break;                  case HIStyle.LowerCase:                      strippedText = strippedText.ToLower();                      break;              }
Missing Default,Nikse.SubtitleEdit.PluginLogic,Configuration<TConfig>,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\Configuration.cs,LoadConfiguration,The following switch statement is missing a default case: switch (xmlReader.NodeType)                      {                          case XmlNodeType.Element:                                // this is the name of the property that the value will be set                              string localName = xmlReader.LocalName;                              PropertyInfo propInfo = type.GetProperty(localName' _bindingFlags);                                // propperty not defined                              if (propInfo == null)                              {                                  continue;                              }                                // if property is defined try read next xml node which                              // we are expecting the value of the property                              xmlReader.Read();                                if (xmlReader.NodeType == XmlNodeType.Text)                              {                                  Debug.WriteLine(xmlReader.ValueType);                                  Debug.WriteLine(xmlReader.Value);                                    object value = null;                                  if (!propInfo.PropertyType.IsEnum)                                  {                                      value = Convert.ChangeType(xmlReader.Value' propInfo.PropertyType);                                  }                                  else                                  {                                      // special parse for enums type                                      if (Enum.IsDefined(propInfo.PropertyType' xmlReader.Value))                                      {                                          value = Enum.Parse(propInfo.PropertyType' xmlReader.Value);                                      }                                  }                                    propInfo.SetValue(obj' value' null);                              }                              else                              {                                  // NOTE: ALREADY INITIALIZED WITH DEFAULT!                                  // Type propType = propInfo.PropertyType;                                  // object defaultValue = default(propType);                                  // propInfo.SetValue(obj' defaultValue' null);                              }                                break;                            case XmlNodeType.Attribute:                              Debug.WriteLine(xmlReader.ValueType);                              Debug.WriteLine(xmlReader.Value);                              break;                      }
Missing Default,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,ReadLine,The following switch statement is missing a default case: switch (_expecting)              {                  case ExpectingLine.Number:                      if (StringUtils.IsInteger(line))                      {                          _paragraph.Number = int.Parse(line);                          _expecting = ExpectingLine.TimeCodes;                      }                      else if (line.Trim().Length > 0)                      {                          _errorCount++;                      }                      break;                    case ExpectingLine.TimeCodes:                      if (TryReadTimeCodesLine(line' _paragraph))                      {                          _paragraph.Text = string.Empty;                          _expecting = ExpectingLine.Text;                      }                      else if (line.Trim().Length > 0)                      {                          _errorCount++;                          _expecting = ExpectingLine.Number; // lets go to next paragraph                      }                      break;                    case ExpectingLine.Text:                      if (!string.IsNullOrWhiteSpace(line) || IsText(next))                      {                          if (_paragraph.Text.Length > 0)                              _paragraph.Text += Environment.NewLine;                          _paragraph.Text += StringUtils.RemoveBadChars(line).TrimEnd().Replace(Environment.NewLine + Environment.NewLine' Environment.NewLine);                      }                      else if (string.IsNullOrEmpty(line) && string.IsNullOrEmpty(_paragraph.Text))                      {                          _paragraph.Text = string.Empty;                          if (!string.IsNullOrEmpty(next) && (StringUtils.IsInteger(next) || RegexTimeCodes.IsMatch(next)))                          {                              subtitle.Paragraphs.Add(_paragraph);                              _paragraph = new Paragraph();                              _expecting = ExpectingLine.Number;                          }                      }                      else                      {                          subtitle.Paragraphs.Add(_paragraph);                          _paragraph = new Paragraph();                          _expecting = ExpectingLine.Number;                      }                      break;              }
