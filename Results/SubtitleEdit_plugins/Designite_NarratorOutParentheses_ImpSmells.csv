Implementation smell,Namespace,Class,File,Method,Description
Long Method,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The method has 113 lines of code.
Long Method,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The method has 214 lines of code.
Complex Method,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,GeneratePreview,Cyclomatic complexity of the method is 8
Complex Method,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,LoadSubtitle,Cyclomatic complexity of the method is 9
Long Parameter List,Nikse.SubtitleEdit.PluginLogic,NarratorOutParentheses,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\Plugin.cs,DoAction,The method has 7 parameters. Parameters: parentForm' content' frameRate' uiLineBreak' fileName' videoFileName' rawText
Long Parameter List,Nikse.SubtitleEdit.PluginLogic,IPlugin,C:\repos\SubtitleEdit_plugins\Plugin-Shared\IPlugin.cs,DoAction,The method has 7 parameters. Parameters: parentForm' srtText' frameRate' UILineBreak' file' videoFile' rawText
Long Parameter List,Nikse.SubtitleEdit.PluginLogic,StringUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StringUtils.cs,CheckForBrackets,The method has 5 parameters. Parameters: text' bracketType' nextIdx' sub' idx
Long Statement,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The length of the statement  "            this.listBox1.Font = new System.Drawing.Font("Microsoft Sans Serif"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 158.
Long Statement,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,AddHyphenOnBothLine,The length of the statement  "                addHyphen = ((idx >= 0 && !StringUtils.IsBetweenNumbers(line' idx)) && (preLine == null || EndLineChars.IndexOf(preLine[preLine.Length - 1]) >= 0)) ? true : false; " is 163.
Long Statement,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,AddHyphenOnBothLine,The length of the statement  "                addHyphen = (idx >= 0 && !Utilities.IsBetweenNumbers(noTagLine' idx)) && (endLineChars.IndexOf(noTagLine[noTagLine.Length - 1]) >= 0) ? true : false; " is 149.
Long Statement,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The length of the statement  "            this.listViewFixes.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 149.
Long Statement,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The length of the statement  "            this.groupBox1.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 142.
Long Statement,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The length of the statement  "            this.buttonOK.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 147.
Long Statement,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The length of the statement  "            this.buttonCancel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 151.
Long Statement,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The length of the statement  "            this.buttonApply.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 150.
Long Statement,Nikse.SubtitleEdit.PluginLogic,NameList,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\NameList.cs,AddNameToList,The length of the statement  "            //var normalCase = Regex.Replace(name.ToLowerInvariant()' "\\b\\w"' x => x.Value.ToUpperInvariant()' RegexOptions.Compiled); " is 124.
Long Statement,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,IsUrl,The length of the statement  "            if (allLower.StartsWith("http://"' StringComparison.Ordinal) || allLower.StartsWith("https://"' StringComparison.Ordinal) || " is 124.
Long Statement,Nikse.SubtitleEdit.PluginLogic,StringExtensions,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StringExtensions.cs,ContainsLetter,The length of the statement  "                    if (uc == UnicodeCategory.LowercaseLetter || uc == UnicodeCategory.UppercaseLetter || uc == UnicodeCategory.TitlecaseLetter || uc == UnicodeCategory.ModifierLetter || uc == UnicodeCategory.OtherLetter) " is 201.
Long Statement,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,ReadLine,The length of the statement  "                        _paragraph.Text += StringUtils.RemoveBadChars(line).TrimEnd().Replace(Environment.NewLine + Environment.NewLine' Environment.NewLine); " is 134.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,IsUrl,The conditional expression  "string.IsNullOrWhiteSpace(text) || text.Length < 6 || !text.Contains('.') || text.Contains(' ')"  is complex.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,IsUrl,The conditional expression  "allLower.StartsWith("http://"' StringComparison.Ordinal) || allLower.StartsWith("https://"' StringComparison.Ordinal) ||                  allLower.StartsWith("www."' StringComparison.Ordinal) || allLower.EndsWith(".org"' StringComparison.Ordinal) ||                  allLower.EndsWith(".com"' StringComparison.Ordinal) || allLower.EndsWith(".net"' StringComparison.Ordinal)"  is complex.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic,StringExtensions,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StringExtensions.cs,FixExtraSpaces,The conditional expression  "(ch == '\n' || ch == '\r') && i + 1 < s.Length && s[i + 1] == 0x20"  is complex.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic,StringExtensions,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StringExtensions.cs,FixExtraSpaces,The conditional expression  "ch == 0x20 && i + 1 < s.Length && (s[i + 1] == '\n' || s[i + 1] == '\r')"  is complex.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic,StringExtensions,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StringExtensions.cs,ContainsLetter,The conditional expression  "uc == UnicodeCategory.LowercaseLetter || uc == UnicodeCategory.UppercaseLetter || uc == UnicodeCategory.TitlecaseLetter || uc == UnicodeCategory.ModifierLetter || uc == UnicodeCategory.OtherLetter"  is complex.
Complex Conditional,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,LoadSubtitle,The conditional expression  "_expecting == ExpectingLine.Text && i + 1 < lines.Count &&                      _paragraph != null && !string.IsNullOrEmpty(_paragraph.Text) && StringUtils.IsInteger(line) &&                      RegexTimeCodes.IsMatch(lines[i + 1])"  is complex.
Empty Catch Block,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,buttonAddToIgnore_Click,The method has an empty catch block.
Empty Catch Block,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,TryReadTimeCodesLine,The method has an empty catch block.
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,TryAddToListBox,The following statement contains a magic number: if (name.Length > 2)              {                  // For listbox                  name = System.Text.RegularExpressions.Regex.Replace(name' "\\b(\\w)"' (x) => x.Value.ToUpperInvariant());              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.ItemHeight = 16;
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.Location = new System.Drawing.Point(13' 38);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.Location = new System.Drawing.Point(13' 38);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.Size = new System.Drawing.Size(306' 196);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.listBox1.Size = new System.Drawing.Size(306' 196);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToList.Location = new System.Drawing.Point(142' 240);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToList.Location = new System.Drawing.Point(142' 240);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToList.Size = new System.Drawing.Size(90' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToList.Size = new System.Drawing.Size(90' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToList.TabIndex = 2;
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(13' 19);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(13' 19);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(71' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(71' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 4;
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(12' 296);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(12' 296);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(307' 66);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(307' 66);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.TabIndex = 5;
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(13' 280);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(13' 280);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(53' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(53' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 6;
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToIgnore.Location = new System.Drawing.Point(13' 240);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToIgnore.Location = new System.Drawing.Point(13' 240);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToIgnore.Size = new System.Drawing.Size(123' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToIgnore.Size = new System.Drawing.Size(123' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonAddToIgnore.TabIndex = 7;
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Location = new System.Drawing.Point(244' 382);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Location = new System.Drawing.Point(244' 382);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Size = new System.Drawing.Size(75' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Size = new System.Drawing.Size(75' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.TabIndex = 8;
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Location = new System.Drawing.Point(163' 382);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Location = new System.Drawing.Point(163' 382);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.TabIndex = 9;
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(332' 417);
Magic Number,Nikse.SubtitleEdit.PluginLogic,GetNames,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\GetNames.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(332' 417);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,MainForm,The following statement contains a magic number: Resize += delegate              {                  listViewFixes.Columns[listViewFixes.Columns.Count - 1].Width = -2;              };
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,MainForm,The following statement contains a magic number: listViewFixes.SizeChanged += delegate              {                  var width = listViewFixes.Width / 2 - 100;                  columnHeaderActual.Width = width;                  columnHeaderAfter.Width = width;              };
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,MainForm,The following statement contains a magic number: listViewFixes.SizeChanged += delegate              {                  var width = listViewFixes.Width / 2 - 100;                  columnHeaderActual.Width = width;                  columnHeaderAfter.Width = width;              };
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,AddHyphenOnBothLine,The following statement contains a magic number: if (addHyphen && (noTagLines[0].Length > 2 && noTagLines[1].Length > 2))              {                  if (noTagLines[0][0] != '-')                      text = "- " + text;                    if (noTagLines[1][0] != '-')                      text = text.Insert(text.IndexOf(Environment.NewLine) + 2' "- ");              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,AddHyphenOnBothLine,The following statement contains a magic number: if (addHyphen && (noTagLines[0].Length > 2 && noTagLines[1].Length > 2))              {                  if (noTagLines[0][0] != '-')                      text = "- " + text;                    if (noTagLines[1][0] != '-')                      text = text.Insert(text.IndexOf(Environment.NewLine) + 2' "- ");              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,AddHyphenOnBothLine,The following statement contains a magic number: if (addHyphen && (noTagLines[0].Length > 2 && noTagLines[1].Length > 2))              {                  if (noTagLines[0][0] != '-')                      text = "- " + text;                    if (noTagLines[1][0] != '-')                      text = text.Insert(text.IndexOf(Environment.NewLine) + 2' "- ");              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.listViewFixes.Location = new System.Drawing.Point(8' 100);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.listViewFixes.Location = new System.Drawing.Point(8' 100);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.listViewFixes.Size = new System.Drawing.Size(950' 354);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.listViewFixes.Size = new System.Drawing.Size(950' 354);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.columnHeaderApply.Width = 45;
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.columnHeaderLine.Width = 50;
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.columnHeaderActual.Width = 425;
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.columnHeaderAfter.Width = 420;
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.contextMenuStrip1.Size = new System.Drawing.Size(153' 114);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.contextMenuStrip1.Size = new System.Drawing.Size(153' 114);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.checkAllToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.checkAllToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.uncheckAllToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.uncheckAllToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.invertCheckToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.invertCheckToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.copyToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.copyToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(8' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(8' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(950' 81);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(950' 81);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.TabIndex = 2;
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetNames.Location = new System.Drawing.Point(847' 52);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetNames.Location = new System.Drawing.Point(847' 52);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetNames.Size = new System.Drawing.Size(97' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetNames.Size = new System.Drawing.Size(97' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonGetNames.TabIndex = 3;
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonToNarrator.Location = new System.Drawing.Point(197' 45);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonToNarrator.Location = new System.Drawing.Point(197' 45);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonToNarrator.Size = new System.Drawing.Size(52' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonToNarrator.Size = new System.Drawing.Size(52' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonToNarrator.TabIndex = 2;
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 31);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 31);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(56' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(56' 13);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxName.Location = new System.Drawing.Point(15' 47);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxName.Location = new System.Drawing.Point(15' 47);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxName.Size = new System.Drawing.Size(176' 20);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.textBoxName.Size = new System.Drawing.Size(176' 20);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Location = new System.Drawing.Point(746' 460);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Location = new System.Drawing.Point(746' 460);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Size = new System.Drawing.Size(103' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.Size = new System.Drawing.Size(103' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonOK.TabIndex = 3;
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Location = new System.Drawing.Point(855' 460);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Location = new System.Drawing.Point(855' 460);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Size = new System.Drawing.Size(103' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Size = new System.Drawing.Size(103' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.TabIndex = 3;
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonApply.Location = new System.Drawing.Point(637' 460);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonApply.Location = new System.Drawing.Point(637' 460);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonApply.Size = new System.Drawing.Size(103' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonApply.Size = new System.Drawing.Size(103' 23);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.buttonApply.TabIndex = 3;
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(970' 491);
Magic Number,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(970' 491);
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,RemoveTags,The following statement contains a magic number: if (s == null || s.Length < 3)                  return s;
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,IsUrl,The following statement contains a magic number: if (string.IsNullOrWhiteSpace(text) || text.Length < 6 || !text.Contains('.') || text.Contains(' '))                  return false;
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,FixUpperTags,The following statement contains a magic number: while (idx >= 0)              {                  var endIdx = text.IndexOf('>'' idx + 2);                  if (endIdx < idx)                      break;                  var tag = text.Substring(idx' endIdx - idx).ToLowerInvariant();                  text = text.Remove(idx' endIdx - idx).Insert(idx' tag);                  idx = text.IndexOfAny(UppercaseTags' StringComparison.Ordinal);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,RemoveHtmlColorTags,The following statement contains a magic number: if (startIndex >= 0 && s.IndexOf("face=\""' StringComparison.OrdinalIgnoreCase) > 5)              {                  while (startIndex >= 0)                  {                      var endIndex = s.IndexOf('>'' startIndex + 5);                      if (endIndex < startIndex)                      {                          break;                      }                        var fontTag = s.Substring(startIndex' endIndex - startIndex + 1);                      fontTag = StripColorAnnotation(fontTag);                        var countStart = StringUtils.CountTagInText(s' "<font");                      var countEnd = StringUtils.CountTagInText(s' "</font>");                      var mod = countStart + countEnd % 2;                      if (mod != 0 && countEnd > countStart)                      {                          while (--mod >= 0)                          {                              var idx = s.IndexOf("</font>"' StringComparison.InvariantCultureIgnoreCase);                              s = s.Remove(idx' 7);                          }                      }                        if (fontTag.Length > 6)                      {                          s = s.Remove(startIndex' endIndex - startIndex + 1);                          s = s.Insert(startIndex' fontTag);                          startIndex = s.IndexOf("<font"' startIndex + 6);                      }                      // s.IndexOf("<font"' StringComparison.OrdinalIgnoreCase);                      startIndex = s.IndexOf("<font"' startIndex + 8);                  }              }              else              {                  s = RemoveOpenCloseTags(s' TagFont);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,RemoveHtmlColorTags,The following statement contains a magic number: if (startIndex >= 0 && s.IndexOf("face=\""' StringComparison.OrdinalIgnoreCase) > 5)              {                  while (startIndex >= 0)                  {                      var endIndex = s.IndexOf('>'' startIndex + 5);                      if (endIndex < startIndex)                      {                          break;                      }                        var fontTag = s.Substring(startIndex' endIndex - startIndex + 1);                      fontTag = StripColorAnnotation(fontTag);                        var countStart = StringUtils.CountTagInText(s' "<font");                      var countEnd = StringUtils.CountTagInText(s' "</font>");                      var mod = countStart + countEnd % 2;                      if (mod != 0 && countEnd > countStart)                      {                          while (--mod >= 0)                          {                              var idx = s.IndexOf("</font>"' StringComparison.InvariantCultureIgnoreCase);                              s = s.Remove(idx' 7);                          }                      }                        if (fontTag.Length > 6)                      {                          s = s.Remove(startIndex' endIndex - startIndex + 1);                          s = s.Insert(startIndex' fontTag);                          startIndex = s.IndexOf("<font"' startIndex + 6);                      }                      // s.IndexOf("<font"' StringComparison.OrdinalIgnoreCase);                      startIndex = s.IndexOf("<font"' startIndex + 8);                  }              }              else              {                  s = RemoveOpenCloseTags(s' TagFont);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,RemoveHtmlColorTags,The following statement contains a magic number: if (startIndex >= 0 && s.IndexOf("face=\""' StringComparison.OrdinalIgnoreCase) > 5)              {                  while (startIndex >= 0)                  {                      var endIndex = s.IndexOf('>'' startIndex + 5);                      if (endIndex < startIndex)                      {                          break;                      }                        var fontTag = s.Substring(startIndex' endIndex - startIndex + 1);                      fontTag = StripColorAnnotation(fontTag);                        var countStart = StringUtils.CountTagInText(s' "<font");                      var countEnd = StringUtils.CountTagInText(s' "</font>");                      var mod = countStart + countEnd % 2;                      if (mod != 0 && countEnd > countStart)                      {                          while (--mod >= 0)                          {                              var idx = s.IndexOf("</font>"' StringComparison.InvariantCultureIgnoreCase);                              s = s.Remove(idx' 7);                          }                      }                        if (fontTag.Length > 6)                      {                          s = s.Remove(startIndex' endIndex - startIndex + 1);                          s = s.Insert(startIndex' fontTag);                          startIndex = s.IndexOf("<font"' startIndex + 6);                      }                      // s.IndexOf("<font"' StringComparison.OrdinalIgnoreCase);                      startIndex = s.IndexOf("<font"' startIndex + 8);                  }              }              else              {                  s = RemoveOpenCloseTags(s' TagFont);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,RemoveHtmlColorTags,The following statement contains a magic number: if (startIndex >= 0 && s.IndexOf("face=\""' StringComparison.OrdinalIgnoreCase) > 5)              {                  while (startIndex >= 0)                  {                      var endIndex = s.IndexOf('>'' startIndex + 5);                      if (endIndex < startIndex)                      {                          break;                      }                        var fontTag = s.Substring(startIndex' endIndex - startIndex + 1);                      fontTag = StripColorAnnotation(fontTag);                        var countStart = StringUtils.CountTagInText(s' "<font");                      var countEnd = StringUtils.CountTagInText(s' "</font>");                      var mod = countStart + countEnd % 2;                      if (mod != 0 && countEnd > countStart)                      {                          while (--mod >= 0)                          {                              var idx = s.IndexOf("</font>"' StringComparison.InvariantCultureIgnoreCase);                              s = s.Remove(idx' 7);                          }                      }                        if (fontTag.Length > 6)                      {                          s = s.Remove(startIndex' endIndex - startIndex + 1);                          s = s.Insert(startIndex' fontTag);                          startIndex = s.IndexOf("<font"' startIndex + 6);                      }                      // s.IndexOf("<font"' StringComparison.OrdinalIgnoreCase);                      startIndex = s.IndexOf("<font"' startIndex + 8);                  }              }              else              {                  s = RemoveOpenCloseTags(s' TagFont);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,RemoveHtmlColorTags,The following statement contains a magic number: if (startIndex >= 0 && s.IndexOf("face=\""' StringComparison.OrdinalIgnoreCase) > 5)              {                  while (startIndex >= 0)                  {                      var endIndex = s.IndexOf('>'' startIndex + 5);                      if (endIndex < startIndex)                      {                          break;                      }                        var fontTag = s.Substring(startIndex' endIndex - startIndex + 1);                      fontTag = StripColorAnnotation(fontTag);                        var countStart = StringUtils.CountTagInText(s' "<font");                      var countEnd = StringUtils.CountTagInText(s' "</font>");                      var mod = countStart + countEnd % 2;                      if (mod != 0 && countEnd > countStart)                      {                          while (--mod >= 0)                          {                              var idx = s.IndexOf("</font>"' StringComparison.InvariantCultureIgnoreCase);                              s = s.Remove(idx' 7);                          }                      }                        if (fontTag.Length > 6)                      {                          s = s.Remove(startIndex' endIndex - startIndex + 1);                          s = s.Insert(startIndex' fontTag);                          startIndex = s.IndexOf("<font"' startIndex + 6);                      }                      // s.IndexOf("<font"' StringComparison.OrdinalIgnoreCase);                      startIndex = s.IndexOf("<font"' startIndex + 8);                  }              }              else              {                  s = RemoveOpenCloseTags(s' TagFont);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,RemoveHtmlColorTags,The following statement contains a magic number: if (startIndex >= 0 && s.IndexOf("face=\""' StringComparison.OrdinalIgnoreCase) > 5)              {                  while (startIndex >= 0)                  {                      var endIndex = s.IndexOf('>'' startIndex + 5);                      if (endIndex < startIndex)                      {                          break;                      }                        var fontTag = s.Substring(startIndex' endIndex - startIndex + 1);                      fontTag = StripColorAnnotation(fontTag);                        var countStart = StringUtils.CountTagInText(s' "<font");                      var countEnd = StringUtils.CountTagInText(s' "</font>");                      var mod = countStart + countEnd % 2;                      if (mod != 0 && countEnd > countStart)                      {                          while (--mod >= 0)                          {                              var idx = s.IndexOf("</font>"' StringComparison.InvariantCultureIgnoreCase);                              s = s.Remove(idx' 7);                          }                      }                        if (fontTag.Length > 6)                      {                          s = s.Remove(startIndex' endIndex - startIndex + 1);                          s = s.Insert(startIndex' fontTag);                          startIndex = s.IndexOf("<font"' startIndex + 6);                      }                      // s.IndexOf("<font"' StringComparison.OrdinalIgnoreCase);                      startIndex = s.IndexOf("<font"' startIndex + 8);                  }              }              else              {                  s = RemoveOpenCloseTags(s' TagFont);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,RemoveHtmlColorTags,The following statement contains a magic number: if (startIndex >= 0 && s.IndexOf("face=\""' StringComparison.OrdinalIgnoreCase) > 5)              {                  while (startIndex >= 0)                  {                      var endIndex = s.IndexOf('>'' startIndex + 5);                      if (endIndex < startIndex)                      {                          break;                      }                        var fontTag = s.Substring(startIndex' endIndex - startIndex + 1);                      fontTag = StripColorAnnotation(fontTag);                        var countStart = StringUtils.CountTagInText(s' "<font");                      var countEnd = StringUtils.CountTagInText(s' "</font>");                      var mod = countStart + countEnd % 2;                      if (mod != 0 && countEnd > countStart)                      {                          while (--mod >= 0)                          {                              var idx = s.IndexOf("</font>"' StringComparison.InvariantCultureIgnoreCase);                              s = s.Remove(idx' 7);                          }                      }                        if (fontTag.Length > 6)                      {                          s = s.Remove(startIndex' endIndex - startIndex + 1);                          s = s.Insert(startIndex' fontTag);                          startIndex = s.IndexOf("<font"' startIndex + 6);                      }                      // s.IndexOf("<font"' StringComparison.OrdinalIgnoreCase);                      startIndex = s.IndexOf("<font"' startIndex + 8);                  }              }              else              {                  s = RemoveOpenCloseTags(s' TagFont);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,HtmlUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\HtmlUtils.cs,StripColorAnnotation,The following statement contains a magic number: int colorEnd = fontTag.IndexOf('\"'' colorStart + 7);
Magic Number,Nikse.SubtitleEdit.PluginLogic,Options,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\Options.cs,Options,The following statement contains a magic number: Frame = 23.976;
Magic Number,Nikse.SubtitleEdit.PluginLogic,StringExtensions,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StringExtensions.cs,FixExtraSpaces,The following statement contains a magic number: for (int i = len - 1; i >= 0; i--)              {                  char ch = s[i];                  if (k < 2)                  {                      if (ch == 0x20)                      {                          k = i + 1;                      }                  }                  else if (ch != 0x20)                  {                      // Two or more white-spaces found!                      if (k - (i + 1) > 1)                      {                          // Keep only one white-space.                          s = s.Remove(i + 1' k - (i + 2));                      }                        // No white-space after/before line break.                      if ((ch == '\n' || ch == '\r') && i + 1 < s.Length && s[i + 1] == 0x20)                      {                          s = s.Remove(i + 1' 1);                      }                      // Reset remove length.                      k = -1;                  }                  if (ch == 0x20 && i + 1 < s.Length && (s[i + 1] == '\n' || s[i + 1] == '\r'))                  {                      s = s.Remove(i' 1);                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,StringExtensions,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StringExtensions.cs,FixExtraSpaces,The following statement contains a magic number: for (int i = len - 1; i >= 0; i--)              {                  char ch = s[i];                  if (k < 2)                  {                      if (ch == 0x20)                      {                          k = i + 1;                      }                  }                  else if (ch != 0x20)                  {                      // Two or more white-spaces found!                      if (k - (i + 1) > 1)                      {                          // Keep only one white-space.                          s = s.Remove(i + 1' k - (i + 2));                      }                        // No white-space after/before line break.                      if ((ch == '\n' || ch == '\r') && i + 1 < s.Length && s[i + 1] == 0x20)                      {                          s = s.Remove(i + 1' 1);                      }                      // Reset remove length.                      k = -1;                  }                  if (ch == 0x20 && i + 1 < s.Length && (s[i + 1] == '\n' || s[i + 1] == '\r'))                  {                      s = s.Remove(i' 1);                  }              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,StripableText,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StripableText.cs,StripableText,The following statement contains a magic number: if (text.Length > 0 && ("<{" + stripStartCharacters).Contains(text[0]))              {                  int beginLength;                  do                  {                      beginLength = text.Length;                        while (text.Length > 0 && stripStartCharacters.Contains(text[0]))                      {                          Pre += text[0];                          text = text.Remove(0' 1);                      }                        // ASS/SSA codes like {\an9}                      int endIndex = text.IndexOf('}');                      if (endIndex > 0 && text.StartsWith("{\\"' StringComparison.Ordinal))                      {                          int nextStartIndex = text.IndexOf('{'' 2);                          if (nextStartIndex == -1 || nextStartIndex > endIndex)                          {                              endIndex++;                              Pre += text.Substring(0' endIndex);                              text = text.Remove(0' endIndex);                          }                      }                        // tags like <i> or <font face="Segoe Print" color="#ff0000">                      endIndex = text.IndexOf('>');                      if (text.StartsWith('<') && endIndex >= 2)                      {                          endIndex++;                          Pre += text.Substring(0' endIndex);                          text = text.Remove(0' endIndex);                      }                  }                  while (text.Length < beginLength);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,StripableText,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StripableText.cs,StripableText,The following statement contains a magic number: if (text.Length > 0 && ("<{" + stripStartCharacters).Contains(text[0]))              {                  int beginLength;                  do                  {                      beginLength = text.Length;                        while (text.Length > 0 && stripStartCharacters.Contains(text[0]))                      {                          Pre += text[0];                          text = text.Remove(0' 1);                      }                        // ASS/SSA codes like {\an9}                      int endIndex = text.IndexOf('}');                      if (endIndex > 0 && text.StartsWith("{\\"' StringComparison.Ordinal))                      {                          int nextStartIndex = text.IndexOf('{'' 2);                          if (nextStartIndex == -1 || nextStartIndex > endIndex)                          {                              endIndex++;                              Pre += text.Substring(0' endIndex);                              text = text.Remove(0' endIndex);                          }                      }                        // tags like <i> or <font face="Segoe Print" color="#ff0000">                      endIndex = text.IndexOf('>');                      if (text.StartsWith('<') && endIndex >= 2)                      {                          endIndex++;                          Pre += text.Substring(0' endIndex);                          text = text.Remove(0' endIndex);                      }                  }                  while (text.Length < beginLength);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,StripableText,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StripableText.cs,StripableText,The following statement contains a magic number: if (text.Length > 0 && (">" + stripEndCharacters).Contains(text[text.Length - 1]))              {                  int beginLength;                  do                  {                      beginLength = text.Length;                        while (text.Length > 0 && stripEndCharacters.Contains(text[text.Length - 1]))                      {                          Post = text[text.Length - 1] + Post;                          text = text.Substring(0' text.Length - 1);                      }                        if (text.EndsWith('>'))                      {                          // tags </i> </b> </u>                          if (text.EndsWith("</i>"' StringComparison.OrdinalIgnoreCase) ||                              text.EndsWith("</b>"' StringComparison.OrdinalIgnoreCase) ||                              text.EndsWith("</u>"' StringComparison.OrdinalIgnoreCase))                          {                              Post = text.Substring(text.Length - 4) + Post;                              text = text.Substring(0' text.Length - 4);                          }                            // tag </font>                          if (text.EndsWith("</font>"' StringComparison.OrdinalIgnoreCase))                          {                              Post = text.Substring(text.Length - 7) + Post;                              text = text.Substring(0' text.Length - 7);                          }                      }                  }                  while (text.Length < beginLength);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,StripableText,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StripableText.cs,StripableText,The following statement contains a magic number: if (text.Length > 0 && (">" + stripEndCharacters).Contains(text[text.Length - 1]))              {                  int beginLength;                  do                  {                      beginLength = text.Length;                        while (text.Length > 0 && stripEndCharacters.Contains(text[text.Length - 1]))                      {                          Post = text[text.Length - 1] + Post;                          text = text.Substring(0' text.Length - 1);                      }                        if (text.EndsWith('>'))                      {                          // tags </i> </b> </u>                          if (text.EndsWith("</i>"' StringComparison.OrdinalIgnoreCase) ||                              text.EndsWith("</b>"' StringComparison.OrdinalIgnoreCase) ||                              text.EndsWith("</u>"' StringComparison.OrdinalIgnoreCase))                          {                              Post = text.Substring(text.Length - 4) + Post;                              text = text.Substring(0' text.Length - 4);                          }                            // tag </font>                          if (text.EndsWith("</font>"' StringComparison.OrdinalIgnoreCase))                          {                              Post = text.Substring(text.Length - 7) + Post;                              text = text.Substring(0' text.Length - 7);                          }                      }                  }                  while (text.Length < beginLength);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,StripableText,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StripableText.cs,StripableText,The following statement contains a magic number: if (text.Length > 0 && (">" + stripEndCharacters).Contains(text[text.Length - 1]))              {                  int beginLength;                  do                  {                      beginLength = text.Length;                        while (text.Length > 0 && stripEndCharacters.Contains(text[text.Length - 1]))                      {                          Post = text[text.Length - 1] + Post;                          text = text.Substring(0' text.Length - 1);                      }                        if (text.EndsWith('>'))                      {                          // tags </i> </b> </u>                          if (text.EndsWith("</i>"' StringComparison.OrdinalIgnoreCase) ||                              text.EndsWith("</b>"' StringComparison.OrdinalIgnoreCase) ||                              text.EndsWith("</u>"' StringComparison.OrdinalIgnoreCase))                          {                              Post = text.Substring(text.Length - 4) + Post;                              text = text.Substring(0' text.Length - 4);                          }                            // tag </font>                          if (text.EndsWith("</font>"' StringComparison.OrdinalIgnoreCase))                          {                              Post = text.Substring(text.Length - 7) + Post;                              text = text.Substring(0' text.Length - 7);                          }                      }                  }                  while (text.Length < beginLength);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,StripableText,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StripableText.cs,StripableText,The following statement contains a magic number: if (text.Length > 0 && (">" + stripEndCharacters).Contains(text[text.Length - 1]))              {                  int beginLength;                  do                  {                      beginLength = text.Length;                        while (text.Length > 0 && stripEndCharacters.Contains(text[text.Length - 1]))                      {                          Post = text[text.Length - 1] + Post;                          text = text.Substring(0' text.Length - 1);                      }                        if (text.EndsWith('>'))                      {                          // tags </i> </b> </u>                          if (text.EndsWith("</i>"' StringComparison.OrdinalIgnoreCase) ||                              text.EndsWith("</b>"' StringComparison.OrdinalIgnoreCase) ||                              text.EndsWith("</u>"' StringComparison.OrdinalIgnoreCase))                          {                              Post = text.Substring(text.Length - 4) + Post;                              text = text.Substring(0' text.Length - 4);                          }                            // tag </font>                          if (text.EndsWith("</font>"' StringComparison.OrdinalIgnoreCase))                          {                              Post = text.Substring(text.Length - 7) + Post;                              text = text.Substring(0' text.Length - 7);                          }                      }                  }                  while (text.Length < beginLength);              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,LoadSubtitle,The following statement contains a magic number: if (_errorCount < 100)                  if (doRenum)                      subtitle.Renumber();
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: try              {                  int startHours = int.Parse(parts[0]);                  int startMinutes = int.Parse(parts[1]);                  int startSeconds = int.Parse(parts[2]);                  int startMilliseconds = int.Parse(parts[3]);                    int endHours = int.Parse(parts[4]);                  int endMinutes = int.Parse(parts[5]);                  int endSeconds = int.Parse(parts[6]);                  int endMilliseconds = int.Parse(parts[7]);                    paragraph.StartTime = new TimeCode(startHours' startMinutes' startSeconds' startMilliseconds);                  paragraph.EndTime = new TimeCode(endHours' endMinutes' endSeconds' endMilliseconds);                  return true;              }              catch              {              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: try              {                  int startHours = int.Parse(parts[0]);                  int startMinutes = int.Parse(parts[1]);                  int startSeconds = int.Parse(parts[2]);                  int startMilliseconds = int.Parse(parts[3]);                    int endHours = int.Parse(parts[4]);                  int endMinutes = int.Parse(parts[5]);                  int endSeconds = int.Parse(parts[6]);                  int endMilliseconds = int.Parse(parts[7]);                    paragraph.StartTime = new TimeCode(startHours' startMinutes' startSeconds' startMilliseconds);                  paragraph.EndTime = new TimeCode(endHours' endMinutes' endSeconds' endMilliseconds);                  return true;              }              catch              {              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: try              {                  int startHours = int.Parse(parts[0]);                  int startMinutes = int.Parse(parts[1]);                  int startSeconds = int.Parse(parts[2]);                  int startMilliseconds = int.Parse(parts[3]);                    int endHours = int.Parse(parts[4]);                  int endMinutes = int.Parse(parts[5]);                  int endSeconds = int.Parse(parts[6]);                  int endMilliseconds = int.Parse(parts[7]);                    paragraph.StartTime = new TimeCode(startHours' startMinutes' startSeconds' startMilliseconds);                  paragraph.EndTime = new TimeCode(endHours' endMinutes' endSeconds' endMilliseconds);                  return true;              }              catch              {              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: try              {                  int startHours = int.Parse(parts[0]);                  int startMinutes = int.Parse(parts[1]);                  int startSeconds = int.Parse(parts[2]);                  int startMilliseconds = int.Parse(parts[3]);                    int endHours = int.Parse(parts[4]);                  int endMinutes = int.Parse(parts[5]);                  int endSeconds = int.Parse(parts[6]);                  int endMilliseconds = int.Parse(parts[7]);                    paragraph.StartTime = new TimeCode(startHours' startMinutes' startSeconds' startMilliseconds);                  paragraph.EndTime = new TimeCode(endHours' endMinutes' endSeconds' endMilliseconds);                  return true;              }              catch              {              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: try              {                  int startHours = int.Parse(parts[0]);                  int startMinutes = int.Parse(parts[1]);                  int startSeconds = int.Parse(parts[2]);                  int startMilliseconds = int.Parse(parts[3]);                    int endHours = int.Parse(parts[4]);                  int endMinutes = int.Parse(parts[5]);                  int endSeconds = int.Parse(parts[6]);                  int endMilliseconds = int.Parse(parts[7]);                    paragraph.StartTime = new TimeCode(startHours' startMinutes' startSeconds' startMilliseconds);                  paragraph.EndTime = new TimeCode(endHours' endMinutes' endSeconds' endMilliseconds);                  return true;              }              catch              {              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,TryReadTimeCodesLine,The following statement contains a magic number: try              {                  int startHours = int.Parse(parts[0]);                  int startMinutes = int.Parse(parts[1]);                  int startSeconds = int.Parse(parts[2]);                  int startMilliseconds = int.Parse(parts[3]);                    int endHours = int.Parse(parts[4]);                  int endMinutes = int.Parse(parts[5]);                  int endSeconds = int.Parse(parts[6]);                  int endMilliseconds = int.Parse(parts[7]);                    paragraph.StartTime = new TimeCode(startHours' startMinutes' startSeconds' startMilliseconds);                  paragraph.EndTime = new TimeCode(endHours' endMinutes' endSeconds' endMilliseconds);                  return true;              }              catch              {              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,TimeCode,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\TimeCode.cs,TimeCode,The following statement contains a magic number: _totalMilliseconds = hour * 60 * 60 * BaseUnit + minute * 60 * BaseUnit + seconds * BaseUnit + milliseconds;
Magic Number,Nikse.SubtitleEdit.PluginLogic,TimeCode,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\TimeCode.cs,TimeCode,The following statement contains a magic number: _totalMilliseconds = hour * 60 * 60 * BaseUnit + minute * 60 * BaseUnit + seconds * BaseUnit + milliseconds;
Magic Number,Nikse.SubtitleEdit.PluginLogic,TimeCode,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\TimeCode.cs,TimeCode,The following statement contains a magic number: _totalMilliseconds = hour * 60 * 60 * BaseUnit + minute * 60 * BaseUnit + seconds * BaseUnit + milliseconds;
Magic Number,Nikse.SubtitleEdit.PluginLogic,TimeCode,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\TimeCode.cs,ToString,The following statement contains a magic number: var s = $"{(ts.Hours + ts.Days * 24):00}:{ts.Minutes:00}:{ts.Seconds:00}'{ts.Milliseconds:000}";
Magic Number,Nikse.SubtitleEdit.PluginLogic,StringUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StringUtils.cs,CheckForBrackets,The following statement contains a magic number: for (int i = nextIdx; i < sub.Paragraphs.Count; i++)              {                  var nextText = sub.Paragraphs[nextIdx].Text;                  idx = nextText.IndexOf('(');                  var close = nextText.IndexOf(')'' idx);                  if (idx > -1 && close > idx)                  {                      doFix = true;                      break;                  }                    // do not keep looking... just exit                  if (nextIdx + 3 == i)                      break;              }
Magic Number,Nikse.SubtitleEdit.PluginLogic,StringUtils,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Helpers\StringUtils.cs,IsBetweenNumbers,The following statement contains a magic number: if (text.Length <= 2 || pos + 1 >= text.Length || pos - 1 < 0)                  return false;
Missing Default,Nikse.SubtitleEdit.PluginLogic,MainForm,C:\repos\SubtitleEdit_plugins\NarratorOutParentheses\MainForm.cs,checkAllToolStripMenuItem_Click,The following switch statement is missing a default case: switch (clickedItem.Text)              {                  case "Check all": // Check all                      foreach (ListViewItem item in listViewFixes.Items)                          item.Checked = true;                      break;                  case "Uncheck all": // Uncheck all                      foreach (ListViewItem item in listViewFixes.Items)                          item.Checked = false;                      break;                  case "Invert check": // Invert check                      foreach (ListViewItem item in listViewFixes.Items)                          item.Checked = !item.Checked;                      break;                  case "Copy": // Copy                      Clipboard.SetText(listViewFixes.SelectedItems[0].Tag.ToString());                      break;              }
Missing Default,Nikse.SubtitleEdit.PluginLogic,Configuration<TConfig>,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\Configuration.cs,LoadConfiguration,The following switch statement is missing a default case: switch (xmlReader.NodeType)                      {                          case XmlNodeType.Element:                                // this is the name of the property that the value will be set                              string localName = xmlReader.LocalName;                              PropertyInfo propInfo = type.GetProperty(localName' _bindingFlags);                                // propperty not defined                              if (propInfo == null)                              {                                  continue;                              }                                // if property is defined try read next xml node which                              // we are expecting the value of the property                              xmlReader.Read();                                if (xmlReader.NodeType == XmlNodeType.Text)                              {                                  Debug.WriteLine(xmlReader.ValueType);                                  Debug.WriteLine(xmlReader.Value);                                    object value = null;                                  if (!propInfo.PropertyType.IsEnum)                                  {                                      value = Convert.ChangeType(xmlReader.Value' propInfo.PropertyType);                                  }                                  else                                  {                                      // special parse for enums type                                      if (Enum.IsDefined(propInfo.PropertyType' xmlReader.Value))                                      {                                          value = Enum.Parse(propInfo.PropertyType' xmlReader.Value);                                      }                                  }                                    propInfo.SetValue(obj' value' null);                              }                              else                              {                                  // NOTE: ALREADY INITIALIZED WITH DEFAULT!                                  // Type propType = propInfo.PropertyType;                                  // object defaultValue = default(propType);                                  // propInfo.SetValue(obj' defaultValue' null);                              }                                break;                            case XmlNodeType.Attribute:                              Debug.WriteLine(xmlReader.ValueType);                              Debug.WriteLine(xmlReader.Value);                              break;                      }
Missing Default,Nikse.SubtitleEdit.PluginLogic,SubRip,C:\repos\SubtitleEdit_plugins\Plugin-Shared\Models\SubRip.cs,ReadLine,The following switch statement is missing a default case: switch (_expecting)              {                  case ExpectingLine.Number:                      if (StringUtils.IsInteger(line))                      {                          _paragraph.Number = int.Parse(line);                          _expecting = ExpectingLine.TimeCodes;                      }                      else if (line.Trim().Length > 0)                      {                          _errorCount++;                      }                      break;                    case ExpectingLine.TimeCodes:                      if (TryReadTimeCodesLine(line' _paragraph))                      {                          _paragraph.Text = string.Empty;                          _expecting = ExpectingLine.Text;                      }                      else if (line.Trim().Length > 0)                      {                          _errorCount++;                          _expecting = ExpectingLine.Number; // lets go to next paragraph                      }                      break;                    case ExpectingLine.Text:                      if (!string.IsNullOrWhiteSpace(line) || IsText(next))                      {                          if (_paragraph.Text.Length > 0)                              _paragraph.Text += Environment.NewLine;                          _paragraph.Text += StringUtils.RemoveBadChars(line).TrimEnd().Replace(Environment.NewLine + Environment.NewLine' Environment.NewLine);                      }                      else if (string.IsNullOrEmpty(line) && string.IsNullOrEmpty(_paragraph.Text))                      {                          _paragraph.Text = string.Empty;                          if (!string.IsNullOrEmpty(next) && (StringUtils.IsInteger(next) || RegexTimeCodes.IsMatch(next)))                          {                              subtitle.Paragraphs.Add(_paragraph);                              _paragraph = new Paragraph();                              _expecting = ExpectingLine.Number;                          }                      }                      else                      {                          subtitle.Paragraphs.Add(_paragraph);                          _paragraph = new Paragraph();                          _expecting = ExpectingLine.Number;                      }                      break;              }
