Implementation smell,Namespace,Class,File,Method,Description
Long Method,Box.V2.Request,HttpRequestHandler,C:\repos\box_box-windows-sdk-v2\Box.V2\Request\HttpRequestHandler.cs,ExecuteAsync,The method has 115 lines of code.
Complex Method,Box.V2.Config,BoxConfig,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\BoxConfig.cs,CreateFromJsonString,Cyclomatic complexity of the method is 9
Long Parameter List,Box.V2.Auth,OAuthSession,C:\repos\box_box-windows-sdk-v2\Box.V2\Models\OAuthSession.cs,OAuthSession,The method has 5 parameters. Parameters: access_token' refresh_token' expires_in' token_type' authVersion
Long Parameter List,Box.V2,BoxClient,C:\repos\box_box-windows-sdk-v2\Box.V2\BoxClient.cs,BoxClient,The method has 7 parameters. Parameters: boxConfig' boxConverter' requestHandler' boxService' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxCollaborationWhitelistManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxCollaborationWhitelistManager.cs,BoxCollaborationWhitelistManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxCollectionsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxCollectionsManager.cs,BoxCollectionsManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxCollectionsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxCollectionsManager.cs,GetCollectionItemsAsync,The method has 5 parameters. Parameters: collectionId' limit' offset' fields' autoPaginate
Long Parameter List,Box.V2.Managers,BoxDevicePinManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxDevicePinManager.cs,BoxDevicePinManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxDevicePinManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxDevicePinManager.cs,GetEnterpriseDevicePinsAsync,The method has 5 parameters. Parameters: enterpriseId' marker' limit' direction' autoPaginate
Long Parameter List,Box.V2.Managers,BoxEventsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxEventsManager.cs,BoxEventsManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxEventsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxEventsManager.cs,EnterpriseEventsAsync,The method has 5 parameters. Parameters: limit' streamPosition' eventTypes' createdAfter' createdBefore
Long Parameter List,Box.V2.Managers,BoxEventsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxEventsManager.cs,LongPollUserEvents,The method has 6 parameters. Parameters: streamPosition' newEventsCallback' cancellationToken' streamType' dedupeEvents' retryTimeoutOverride
Long Parameter List,Box.V2.Managers,BoxGroupsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxGroupsManager.cs,BoxGroupsManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxGroupsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxGroupsManager.cs,GetCollaborationsForGroupAsync,The method has 5 parameters. Parameters: groupId' limit' offset' fields' autoPaginate
Long Parameter List,Box.V2.Managers,BoxGroupsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxGroupsManager.cs,GetAllGroupMembershipsForGroupAsync,The method has 5 parameters. Parameters: groupId' limit' offset' fields' autoPaginate
Long Parameter List,Box.V2.Managers,BoxGroupsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxGroupsManager.cs,GetAllGroupMembershipsForUserAsync,The method has 5 parameters. Parameters: userId' limit' offset' fields' autoPaginate
Long Parameter List,Box.V2.Managers,BoxMetadataManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxMetadataManager.cs,BoxMetadataManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxMetadataManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxMetadataManager.cs,UpdateMetadata,The method has 5 parameters. Parameters: hostUri' id' updates' scope' template
Long Parameter List,Box.V2.Managers,BoxMetadataManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxMetadataManager.cs,CreateMetadata,The method has 5 parameters. Parameters: hostUri' id' metadata' scope' template
Long Parameter List,Box.V2.Managers,BoxRetentionPoliciesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxRetentionPoliciesManager.cs,BoxRetentionPoliciesManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxRetentionPoliciesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxRetentionPoliciesManager.cs,GetRetentionPoliciesAsync,The method has 7 parameters. Parameters: policyName' policyType' createdByUserId' fields' limit' marker' autoPaginate
Long Parameter List,Box.V2.Managers,BoxRetentionPoliciesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxRetentionPoliciesManager.cs,GetRetentionPolicyAssignmentsAsync,The method has 6 parameters. Parameters: retentionPolicyId' type' fields' limit' marker' autoPaginate
Long Parameter List,Box.V2.Managers,BoxSharedItemsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxSharedItemsManager.cs,BoxSharedItemsManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxTasksManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxTasksManager.cs,BoxTasksManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxTermsOfServiceManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxTermsOfServiceManager.cs,BoxTermsOfServiceManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxWebhooksManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxWebhooksManager.cs,BoxWebhooksManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxWebhooksManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxWebhooksManager.cs,VerifyWebhook,The method has 6 parameters. Parameters: deliveryTimestamp' signaturePrimary' signatureSecondary' payload' primaryWebhookKey' secondaryWebhookKey
Long Parameter List,Box.V2.Managers,BoxLegalHoldPoliciesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxLegalHoldPoliciesManager.cs,BoxLegalHoldPoliciesManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxLegalHoldPoliciesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxLegalHoldPoliciesManager.cs,GetListLegalHoldPoliciesAsync,The method has 5 parameters. Parameters: policyName' fields' limit' marker' autoPaginate
Long Parameter List,Box.V2.Managers,BoxLegalHoldPoliciesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxLegalHoldPoliciesManager.cs,GetAssignmentsAsync,The method has 7 parameters. Parameters: legalHoldPolicyId' fields' assignToType' assignToId' limit' marker' autoPaginate
Long Parameter List,Box.V2.Managers,BoxLegalHoldPoliciesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxLegalHoldPoliciesManager.cs,GetFileVersionLegalHoldsAsync,The method has 5 parameters. Parameters: policyId' fields' limit' marker' autoPaginate
Long Parameter List,Box.V2.Managers,BoxRecentItemsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxRecentItemsManager.cs,BoxRecentItemsManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxWebLinksManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxWebLinksManager.cs,BoxWebLinksManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxCommentsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxCommentsManager.cs,BoxCommentsManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,BoxFilesManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,DownloadStreamAsync,The method has 5 parameters. Parameters: id' versionId' timeout' startOffsetInBytes' endOffsetInBytes
Long Parameter List,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,UploadAsync,The method has 7 parameters. Parameters: fileRequest' stream' fields' timeout' contentMD5' setStreamPositionToZero' uploadUri
Long Parameter List,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,UploadNewVersionAsync,The method has 9 parameters. Parameters: fileName' fileId' stream' etag' fields' timeout' contentMD5' setStreamPositionToZero' uploadUri
Long Parameter List,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,UploadPartAsync,The method has 6 parameters. Parameters: uploadPartUri' sha' partStartOffsetInBytes' sizeOfOriginalFileInBytes' stream' timeout
Long Parameter List,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,UploadFileVersionUsingSessionAsync,The method has 5 parameters. Parameters: stream' fileId' fileName' timeout' progress
Long Parameter List,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,UploadUsingSessionAsync,The method has 5 parameters. Parameters: stream' fileName' folderId' timeout' progress
Long Parameter List,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,UploadSessionAsync,The method has 5 parameters. Parameters: stream' uploadFileSession' timeout' progress' callingMethod
Long Parameter List,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,UploadPartsInSessionAsync,The method has 7 parameters. Parameters: uploadPartsUri' numberOfParts' partSize' stream' fileSize' timeout' progress
Long Parameter List,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,GetThumbnailAsync,The method has 7 parameters. Parameters: id' minHeight' minWidth' maxHeight' maxWidth' throttle' handleRetry
Long Parameter List,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,GetFilePreviewAsync,The method has 7 parameters. Parameters: id' page' maxWidth' minWidth' maxHeight' minHeight' handleRetry
Long Parameter List,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,GetPreviewResponseAsync,The method has 7 parameters. Parameters: id' page' maxWidth' minWidth' maxHeight' minHeight' handleRetry
Long Parameter List,Box.V2.Managers,BoxFoldersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFoldersManager.cs,BoxFoldersManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxFoldersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFoldersManager.cs,GetFolderItemsAsync,The method has 5 parameters. Parameters: id' limit' offset' fields' autoPaginate
Long Parameter List,Box.V2.Managers,BoxUsersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxUsersManager.cs,BoxUsersManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxUsersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxUsersManager.cs,GetEnterpriseUsersAsync,The method has 7 parameters. Parameters: filterTerm' offset' limit' fields' userType' externalAppUserId' autoPaginate
Long Parameter List,Box.V2.Managers,BoxCollaborationsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxCollaborationsManager.cs,BoxCollaborationsManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxResourceManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxResourceManager.cs,BoxResourceManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxSearchManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxSearchManager.cs,BoxSearchManager,The method has 6 parameters. Parameters: config' service' converter' auth' asUser' suppressNotifications
Long Parameter List,Box.V2.Managers,BoxSearchManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxSearchManager.cs,SearchAsync,The method has 18 parameters. Parameters: keyword' limit' offset' fields' scope' fileExtensions' createdAtRangeFromDate' createdAtRangeToDate' updatedAtRangeFromDate' updatedAtRangeToDate' sizeRangeLowerBoundBytes' sizeRangeUpperBoundBytes' ownerUserIds' ancestorFolderIds' contentTypes' type' trashContent' mdFilters
Long Parameter List,Box.V2.Utility,LRUCache<K;V>,C:\repos\box_box-windows-sdk-v2\Box.V2\Utility\LRUCache.cs,LRUCache,The method has 5 parameters. Parameters: capacity' hours' minutes' seconds' refreshEntries
Long Parameter List,Box.V2.Utility,Retry,C:\repos\box_box-windows-sdk-v2\Box.V2\Utility\Retry.cs,Execute,The method has 6 parameters. Parameters: action' retryInterval' retryCount' executeOnEveryException' executeBeforeFinalException' exceptionTypesToHandle
Long Parameter List,Box.V2.Utility,Retry,C:\repos\box_box-windows-sdk-v2\Box.V2\Utility\Retry.cs,Execute,The method has 6 parameters. Parameters: action' retryInterval' retryCount' executeOnEveryException' executeBeforeFinalException' exceptionTypesToHandle
Long Parameter List,Box.V2.Utility,Retry,C:\repos\box_box-windows-sdk-v2\Box.V2\Utility\Retry.cs,ExecuteAsync,The method has 6 parameters. Parameters: action' retryInterval' retryCount' executeOnEveryException' executeBeforeFinalException' exceptionTypesToHandle
Long Parameter List,Box.V2.Utility,Retry,C:\repos\box_box-windows-sdk-v2\Box.V2\Utility\Retry.cs,ExecuteAsync,The method has 6 parameters. Parameters: action' retryInterval' retryCount' executeOnEveryException' executeBeforeFinalException' exceptionTypesToHandle
Long Parameter List,Box.V2.Config,BoxConfig,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\BoxConfig.cs,BoxConfig,The method has 6 parameters. Parameters: clientId' clientSecret' enterpriseId' jwtPrivateKey' jwtPrivateKeyPassword' jwtPublicKeyId
Long Identifier,Box.V2.Managers,BoxTermsOfServiceManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxTermsOfServiceManager.cs,CreateBoxTermsOfServiceUserStatusesAsync,The length of the parameter termsOfServicesUserStatusesRequest is 34.
Long Identifier,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,CreateNewVersionUploadSessionAsync,The length of the parameter uploadNewVersionSessionRequest is 30.
Long Identifier,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,UploadFileVersionUsingSessionAsync,The length of the parameter uploadNewVersionSessionRequest is 30.
Long Identifier,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,GetRepresentationsAsync,The length of the parameter RepresentationRequestRetryTime is 30.
Long Identifier,Box.V2.Models,BoxFileVersionLegalHold,C:\repos\box_box-windows-sdk-v2\Box.V2\Models\BoxFileVersionLegalHold.cs,,The length of the parameter FieldLegalHoldPolicyAssignments is 31.
Long Identifier,Box.V2.Models,BoxFolder,C:\repos\box_box-windows-sdk-v2\Box.V2\Models\BoxFolder.cs,,The length of the parameter FieldAllowedSharedLinkAccessLevels is 34.
Long Identifier,Box.V2.Models,BoxUser,C:\repos\box_box-windows-sdk-v2\Box.V2\Models\BoxUser.cs,,The length of the parameter FieldIsExemptFromLoginVerification is 34.
Long Identifier,Box.V2.Config,Constants,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\Constants.cs,,The length of the parameter FilesNewVersionUploadSessionString is 34.
Long Identifier,Box.V2.Config,Constants,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\Constants.cs,,The length of the parameter RetentionPolicyAssignmentsString is 32.
Long Identifier,Box.V2.Config,Constants,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\Constants.cs,,The length of the parameter CollaborationWhitelistEntryString is 33.
Long Identifier,Box.V2.Config,Constants,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\Constants.cs,,The length of the parameter CollaborationWhitelistTargetEntryString is 39.
Long Identifier,Box.V2.Config,Constants,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\Constants.cs,,The length of the parameter TermsOfServiceUserStatusesString is 32.
Long Identifier,Box.V2.Config,Constants,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\Constants.cs,,The length of the parameter LegalHoldPolicyAssignmentsString is 32.
Long Identifier,Box.V2.Config,Constants,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\Constants.cs,,The length of the parameter FilesNewVersionUploadSessionEndpointString is 42.
Long Identifier,Box.V2.Config,Constants,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\Constants.cs,,The length of the parameter FilesPreflightCheckNewVersionString is 35.
Long Identifier,Box.V2.Config,Constants,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\Constants.cs,,The length of the parameter MetadataTemplatesEndpointString is 31.
Long Identifier,Box.V2.Config,Constants,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\Constants.cs,,The length of the parameter LegalHoldPoliciesEndpointString is 31.
Long Identifier,Box.V2.Config,Constants,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\Constants.cs,,The length of the parameter LegalHoldPolicyAssignmentsEndpointString is 40.
Long Identifier,Box.V2.Config,Constants,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\Constants.cs,,The length of the parameter RetentionPolicyAssignmentsEndpointString is 40.
Long Identifier,Box.V2.Config,Constants,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\Constants.cs,,The length of the parameter EnterpriseMetadataTemplatesPathString is 37.
Long Identifier,Box.V2.Config,Constants,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\Constants.cs,,The length of the parameter GroupMembershipForUserPathString is 32.
Long Identifier,Box.V2.Config,Constants,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\Constants.cs,,The length of the parameter GetEnterpriseDevicePinsPathString is 33.
Long Identifier,Box.V2.Config,Constants,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\Constants.cs,,The length of the parameter LegalHoldPolicyAssignmentsPathString is 36.
Long Identifier,Box.V2.Config,Constants,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\Constants.cs,,The length of the parameter TypeCollabWhitelistTargetEntry is 30.
Long Identifier,Box.V2.Config,Constants,C:\repos\box_box-windows-sdk-v2\Box.V2\Config\Constants.cs,,The length of the parameter TypeTermsOfServiceUserStatuses is 30.
Long Statement,Box.V2.Auth,AuthRepository,C:\repos\box_box-windows-sdk-v2\Box.V2\Auth\AuthRepository.cs,ExchangeAuthCode,The length of the statement  "            IBoxResponse<OAuthSession> boxResponse = await _service.ToResponseAsync<OAuthSession>(boxRequest).ConfigureAwait(false); " is 120.
Long Statement,Box.V2.Auth,AuthRepository,C:\repos\box_box-windows-sdk-v2\Box.V2\Auth\AuthRepository.cs,ExchangeRefreshToken,The length of the statement  "            IBoxResponse<OAuthSession> boxResponse = await _service.ToResponseAsync<OAuthSession>(boxRequest).ConfigureAwait(false); " is 120.
Long Statement,Box.V2,BoxClient,C:\repos\box_box-windows-sdk-v2\Box.V2\BoxClient.cs,InitManagers,The length of the statement  "            CollaborationsManager = new BoxCollaborationsManager(Config' _service' _converter' Auth' _asUser' _suppressNotifications); " is 122.
Long Statement,Box.V2,BoxClient,C:\repos\box_box-windows-sdk-v2\Box.V2\BoxClient.cs,InitManagers,The length of the statement  "            RetentionPoliciesManager = new BoxRetentionPoliciesManager(Config' _service' _converter' Auth' _asUser' _suppressNotifications); " is 128.
Long Statement,Box.V2,BoxClient,C:\repos\box_box-windows-sdk-v2\Box.V2\BoxClient.cs,InitManagers,The length of the statement  "            LegalHoldPoliciesManager = new BoxLegalHoldPoliciesManager(Config' _service' _converter' Auth' _asUser' _suppressNotifications); " is 128.
Long Statement,Box.V2,BoxClient,C:\repos\box_box-windows-sdk-v2\Box.V2\BoxClient.cs,InitManagers,The length of the statement  "            CollaborationWhitelistManager = new BoxCollaborationWhitelistManager(Config' _service' _converter' Auth' _asUser' _suppressNotifications); " is 138.
Long Statement,Box.V2,BoxClient,C:\repos\box_box-windows-sdk-v2\Box.V2\BoxClient.cs,InitManagers,The length of the statement  "            TermsOfServiceManager = new BoxTermsOfServiceManager(Config' _service' _converter' Auth' _asUser' _suppressNotifications); " is 122.
Long Statement,Box.V2,BoxClient,C:\repos\box_box-windows-sdk-v2\Box.V2\BoxClient.cs,AddResourcePlugin,The length of the statement  "            ResourcePlugins.Register<T>(() => (T)Activator.CreateInstance(typeof(T)' Config' _service' _converter' Auth' _asUser' _suppressNotifications)); " is 143.
Long Statement,Box.V2.JWTAuth,BoxJWTAuth,C:\repos\box_box-windows-sdk-v2\Box.V2\JWTAuth\BoxJWTAuth.cs,AdminClient,The length of the statement  "            var adminClient = new BoxClient(this.boxConfig' authRepo' asUser: asUser' suppressNotifications: suppressNotifications); " is 120.
Long Statement,Box.V2.JWTAuth,RSAUtilities,C:\repos\box_box-windows-sdk-v2\Box.V2\JWTAuth\RSAUtilities.cs,CreateRSAProvider,The length of the statement  "            //     https://blogs.msdn.microsoft.com/winsdk/2009/11/16/opps-system-security-cryptography-cryptographicexception-the-system-cannot-find-the-file-specified/ " is 157.
Long Statement,Box.V2.Extensions,BoxResponseExtensions,C:\repos\box_box-windows-sdk-v2\Box.V2\Extensions\BoxResponseExtensions.cs,ParseResults,The length of the statement  "                        var err = new BoxError() { Code = response.StatusCode.ToString()' Description = "Forbidden"' Message = errorMsg.ToString() }; " is 125.
Long Statement,Box.V2.Extensions,BoxResponseExtensions,C:\repos\box_box-windows-sdk-v2\Box.V2\Extensions\BoxResponseExtensions.cs,ParseResults,The length of the statement  "                        throw new BoxException(response.ContentString' response.Error) { StatusCode = response.StatusCode' ResponseHeaders = response.Headers }; " is 136.
Long Statement,Box.V2.Extensions,BoxResponseExtensions,C:\repos\box_box-windows-sdk-v2\Box.V2\Extensions\BoxResponseExtensions.cs,ParseResults,The length of the statement  "                                        BoxPreflightCheckConflictError<BoxFile> err = converter.Parse<BoxPreflightCheckConflictError<BoxFile>>(response.ContentString); " is 127.
Long Statement,Box.V2.Extensions,BoxResponseExtensions,C:\repos\box_box-windows-sdk-v2\Box.V2\Extensions\BoxResponseExtensions.cs,ParseResults,The length of the statement  "                                        exToThrow = new BoxPreflightCheckConflictException<BoxFile>(response.ContentString' err) { StatusCode = response.StatusCode' ResponseHeaders = response.Headers }; " is 162.
Long Statement,Box.V2.Extensions,BoxResponseExtensions,C:\repos\box_box-windows-sdk-v2\Box.V2\Extensions\BoxResponseExtensions.cs,ParseResults,The length of the statement  "                                        exToThrow = new BoxConflictException<T>(response.ContentString' error) { StatusCode = response.StatusCode' ResponseHeaders = response.Headers }; " is 144.
Long Statement,Box.V2.Extensions,BoxResponseExtensions,C:\repos\box_box-windows-sdk-v2\Box.V2\Extensions\BoxResponseExtensions.cs,ParseResults,The length of the statement  "                            new BoxException(response.ContentString' response.Error) { StatusCode = response.StatusCode' ResponseHeaders = response.Headers } : " is 131.
Long Statement,Box.V2.Extensions,BoxResponseExtensions,C:\repos\box_box-windows-sdk-v2\Box.V2\Extensions\BoxResponseExtensions.cs,ParseResults,The length of the statement  "                    throw new BoxException(response.ContentString) { StatusCode = response.StatusCode' ResponseHeaders = response.Headers }; " is 120.
Long Statement,Box.V2.Managers,BoxCollaborationWhitelistManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxCollaborationWhitelistManager.cs,AddCollaborationWhitelistEntryAsync,The length of the statement  "            IBoxResponse<BoxCollaborationWhitelistEntry> response = await ToResponseAsync<BoxCollaborationWhitelistEntry>(request).ConfigureAwait(false); " is 141.
Long Statement,Box.V2.Managers,BoxCollaborationWhitelistManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxCollaborationWhitelistManager.cs,GetCollaborationWhitelistEntryAsync,The length of the statement  "            IBoxResponse<BoxCollaborationWhitelistEntry> response = await ToResponseAsync<BoxCollaborationWhitelistEntry>(request).ConfigureAwait(false); " is 141.
Long Statement,Box.V2.Managers,BoxCollaborationWhitelistManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxCollaborationWhitelistManager.cs,DeleteCollaborationWhitelistEntryAsync,The length of the statement  "            IBoxResponse<BoxCollaborationWhitelistEntry> response = await ToResponseAsync<BoxCollaborationWhitelistEntry>(request).ConfigureAwait(false); " is 141.
Long Statement,Box.V2.Managers,BoxCollaborationWhitelistManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxCollaborationWhitelistManager.cs,AddCollaborationWhitelistExemptUserAsync,The length of the statement  "            IBoxResponse<BoxCollaborationWhitelistTargetEntry> response = await ToResponseAsync<BoxCollaborationWhitelistTargetEntry>(request).ConfigureAwait(false); " is 153.
Long Statement,Box.V2.Managers,BoxCollaborationWhitelistManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxCollaborationWhitelistManager.cs,GetCollaborationWhitelistExemptUserAsync,The length of the statement  "            IBoxResponse<BoxCollaborationWhitelistTargetEntry> response = await ToResponseAsync<BoxCollaborationWhitelistTargetEntry>(request).ConfigureAwait(false); " is 153.
Long Statement,Box.V2.Managers,BoxCollaborationWhitelistManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxCollaborationWhitelistManager.cs,DeleteCollaborationWhitelistExemptUserAsync,The length of the statement  "            IBoxResponse<BoxCollaborationWhitelistTargetEntry> response = await ToResponseAsync<BoxCollaborationWhitelistTargetEntry>(request).ConfigureAwait(false); " is 153.
Long Statement,Box.V2.Managers,BoxCollectionsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxCollectionsManager.cs,GetCollectionsAsync,The length of the statement  "            IBoxResponse<BoxCollection<BoxCollectionItem>> response = await ToResponseAsync<BoxCollection<BoxCollectionItem>>(request).ConfigureAwait(false); " is 145.
Long Statement,Box.V2.Managers,BoxCollectionsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxCollectionsManager.cs,GetCollectionItemsAsync,The length of the statement  "            BoxRequest request = new BoxRequest(_config.CollectionsEndpointUri' string.Format(Constants.ItemsPathString' collectionId)) " is 123.
Long Statement,Box.V2.Managers,BoxCollectionsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxCollectionsManager.cs,GetCollectionItemsAsync,The length of the statement  "                IBoxResponse<BoxCollection<BoxItem>> response = await ToResponseAsync<BoxCollection<BoxItem>>(request).ConfigureAwait(false); " is 125.
Long Statement,Box.V2.Managers,BoxDevicePinManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxDevicePinManager.cs,GetEnterpriseDevicePinsAsync,The length of the statement  "            BoxRequest request = new BoxRequest(_config.EnterprisesUri' string.Format(Constants.GetEnterpriseDevicePinsPathString' enterpriseId)) " is 133.
Long Statement,Box.V2.Managers,BoxDevicePinManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxDevicePinManager.cs,GetEnterpriseDevicePinsAsync,The length of the statement  "                IBoxResponse<BoxCollectionMarkerBased<BoxDevicePin>> response = await ToResponseAsync<BoxCollectionMarkerBased<BoxDevicePin>>(request).ConfigureAwait(false); " is 157.
Long Statement,Box.V2.Managers,BoxEventsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxEventsManager.cs,EnterpriseEventsAsync,The length of the statement  "            IBoxResponse<BoxEventCollection<BoxEnterpriseEvent>> response = await ToResponseAsync<BoxEventCollection<BoxEnterpriseEvent>>(request).ConfigureAwait(false); " is 157.
Long Statement,Box.V2.Managers,BoxEventsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxEventsManager.cs,UserEventsAsync,The length of the statement  "            IBoxResponse<BoxEventCollection<BoxEnterpriseEvent>> response = await ToResponseAsync<BoxEventCollection<BoxEnterpriseEvent>>(request).ConfigureAwait(false); " is 157.
Long Statement,Box.V2.Managers,BoxEventsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxEventsManager.cs,LongPollUserEvents,The length of the statement  "                IBoxResponse<BoxLongPollInfoCollection<BoxLongPollInfo>> optionsResponse = await ToResponseAsync<BoxLongPollInfoCollection<BoxLongPollInfo>>(optionsRequest).ConfigureAwait(false); " is 179.
Long Statement,Box.V2.Managers,BoxEventsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxEventsManager.cs,LongPollUserEvents,The length of the statement  "                        IBoxResponse<BoxLongPollMessage> pollResponse = await ToResponseAsync<BoxLongPollMessage>(pollRequest).ConfigureAwait(false); " is 125.
Long Statement,Box.V2.Managers,BoxEventsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxEventsManager.cs,LongPollUserEvents,The length of the statement  "                                newEvents = await UserEventsAsync(streamType: streamType' streamPosition: nextStreamPosition' dedupeEvents: dedupeEvents).ConfigureAwait(false); " is 144.
Long Statement,Box.V2.Managers,BoxGroupsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxGroupsManager.cs,GetAllGroupsAsync,The length of the statement  "                IBoxResponse<BoxCollection<BoxGroup>> response = await ToResponseAsync<BoxCollection<BoxGroup>>(request).ConfigureAwait(false); " is 127.
Long Statement,Box.V2.Managers,BoxGroupsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxGroupsManager.cs,GetAllGroupMembershipsForGroupAsync,The length of the statement  "            BoxRequest request = new BoxRequest(_config.GroupsEndpointUri' string.Format(Constants.GroupMembershipPathString' groupId)) " is 123.
Long Statement,Box.V2.Managers,BoxGroupsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxGroupsManager.cs,GetAllGroupMembershipsForGroupAsync,The length of the statement  "                IBoxResponse<BoxCollection<BoxGroupMembership>> response = await ToResponseAsync<BoxCollection<BoxGroupMembership>>(request).ConfigureAwait(false); " is 147.
Long Statement,Box.V2.Managers,BoxGroupsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxGroupsManager.cs,GetAllGroupMembershipsForUserAsync,The length of the statement  "            BoxRequest request = new BoxRequest(_config.UserEndpointUri' string.Format(Constants.GroupMembershipPathString' userId)) " is 120.
Long Statement,Box.V2.Managers,BoxGroupsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxGroupsManager.cs,GetAllGroupMembershipsForUserAsync,The length of the statement  "                IBoxResponse<BoxCollection<BoxGroupMembership>> response = await ToResponseAsync<BoxCollection<BoxGroupMembership>>(request).ConfigureAwait(false); " is 147.
Long Statement,Box.V2.Managers,BoxMetadataManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxMetadataManager.cs,GetMetadataTemplate,The length of the statement  "            BoxRequest request = new BoxRequest(_config.MetadataTemplatesUri' string.Format(Constants.MetadataTemplatesPathString' scope' template)); " is 137.
Long Statement,Box.V2.Managers,BoxMetadataManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxMetadataManager.cs,UpdateMetadataTemplate,The length of the statement  "            BoxRequest request = new BoxRequest(_config.MetadataTemplatesUri' string.Format(Constants.MetadataTemplatesPathString' scope' template)) " is 136.
Long Statement,Box.V2.Managers,BoxMetadataManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxMetadataManager.cs,GetAllFileMetadataTemplatesAsync,The length of the statement  "            BoxRequest request = new BoxRequest(_config.FilesEndpointUri' string.Format(Constants.AllFileMetadataPathString' fileId)); " is 122.
Long Statement,Box.V2.Managers,BoxMetadataManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxMetadataManager.cs,GetAllFileMetadataTemplatesAsync,The length of the statement  "            IBoxResponse<BoxMetadataTemplateCollection<Dictionary<string' object>>> response = await ToResponseAsync<BoxMetadataTemplateCollection<Dictionary<string' object>>>(request).ConfigureAwait(false); " is 195.
Long Statement,Box.V2.Managers,BoxMetadataManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxMetadataManager.cs,GetAllFolderMetadataTemplatesAsync,The length of the statement  "            BoxRequest request = new BoxRequest(_config.FoldersEndpointUri' string.Format(Constants.AllFolderMetadataPathString' folderId)); " is 128.
Long Statement,Box.V2.Managers,BoxMetadataManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxMetadataManager.cs,GetAllFolderMetadataTemplatesAsync,The length of the statement  "            IBoxResponse<BoxMetadataTemplateCollection<Dictionary<string' object>>> response = await ToResponseAsync<BoxMetadataTemplateCollection<Dictionary<string' object>>>(request).ConfigureAwait(false); " is 195.
Long Statement,Box.V2.Managers,BoxMetadataManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxMetadataManager.cs,GetEnterpriseMetadataAsync,The length of the statement  "            BoxRequest request = new BoxRequest(_config.MetadataTemplatesUri' string.Format(Constants.EnterpriseMetadataTemplatesPathString' scope)); " is 137.
Long Statement,Box.V2.Managers,BoxMetadataManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxMetadataManager.cs,GetEnterpriseMetadataAsync,The length of the statement  "            IBoxResponse<BoxEnterpriseMetadataTemplateCollection<BoxMetadataTemplate>> response = await ToResponseAsync<BoxEnterpriseMetadataTemplateCollection<BoxMetadataTemplate>>(request).ConfigureAwait(false); " is 201.
Long Statement,Box.V2.Managers,BoxMetadataManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxMetadataManager.cs,UpdateMetadata,The length of the statement  "            IBoxResponse<Dictionary<string' object>> response = await ToResponseAsync<Dictionary<string' object>>(request).ConfigureAwait(false); " is 133.
Long Statement,Box.V2.Managers,BoxMetadataManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxMetadataManager.cs,CreateMetadata,The length of the statement  "            IBoxResponse<Dictionary<string' object>> response = await ToResponseAsync<Dictionary<string' object>>(request).ConfigureAwait(false); " is 133.
Long Statement,Box.V2.Managers,BoxMetadataManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxMetadataManager.cs,GetMetadata,The length of the statement  "            IBoxResponse<Dictionary<string' object>> response = await ToResponseAsync<Dictionary<string' object>>(request).ConfigureAwait(false); " is 133.
Long Statement,Box.V2.Managers,BoxMetadataManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxMetadataManager.cs,DeleteMetadata,The length of the statement  "            IBoxResponse<Dictionary<string' object>> response = await ToResponseAsync<Dictionary<string' object>>(request).ConfigureAwait(false); " is 133.
Long Statement,Box.V2.Managers,BoxRetentionPoliciesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxRetentionPoliciesManager.cs,GetRetentionPoliciesAsync,The length of the statement  "                IBoxResponse<BoxCollectionMarkerBased<BoxRetentionPolicy>> response = await ToResponseAsync<BoxCollectionMarkerBased<BoxRetentionPolicy>>(request).ConfigureAwait(false); " is 169.
Long Statement,Box.V2.Managers,BoxRetentionPoliciesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxRetentionPoliciesManager.cs,GetRetentionPolicyAssignmentsAsync,The length of the statement  "            BoxRequest request = new BoxRequest(_config.RetentionPoliciesEndpointUri' string.Format(Constants.RetentionPolicyAssignmentsEndpointString' retentionPolicyId)) " is 159.
Long Statement,Box.V2.Managers,BoxRetentionPoliciesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxRetentionPoliciesManager.cs,GetRetentionPolicyAssignmentsAsync,The length of the statement  "                IBoxResponse<BoxCollectionMarkerBased<BoxRetentionPolicyAssignment>> response = await ToResponseAsync<BoxCollectionMarkerBased<BoxRetentionPolicyAssignment>>(request).ConfigureAwait(false); " is 189.
Long Statement,Box.V2.Managers,BoxRetentionPoliciesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxRetentionPoliciesManager.cs,CreateRetentionPolicyAssignmentAsync,The length of the statement  "            IBoxResponse<BoxRetentionPolicyAssignment> response = await ToResponseAsync<BoxRetentionPolicyAssignment>(request).ConfigureAwait(false); " is 137.
Long Statement,Box.V2.Managers,BoxRetentionPoliciesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxRetentionPoliciesManager.cs,GetRetentionPolicyAssignmentAsync,The length of the statement  "            IBoxResponse<BoxRetentionPolicyAssignment> response = await ToResponseAsync<BoxRetentionPolicyAssignment>(request).ConfigureAwait(false); " is 137.
Long Statement,Box.V2.Managers,BoxSharedItemsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxSharedItemsManager.cs,SharedItemsAsync,The length of the statement  "                .Header("BoxApi"' string.Format("shared_link={0}{1}"' sharedLink' (string.IsNullOrEmpty(sharedLinkPassword) ? "" : ("&shared_link_password=" + sharedLinkPassword)))); " is 166.
Long Statement,Box.V2.Managers,BoxTasksManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxTasksManager.cs,CreateTaskAssignmentAsync,The length of the statement  "            if (string.IsNullOrEmpty(taskAssignmentRequest.AssignTo.Login) && string.IsNullOrEmpty(taskAssignmentRequest.AssignTo.Id)) " is 122.
Long Statement,Box.V2.Managers,BoxTasksManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxTasksManager.cs,CreateTaskAssignmentAsync,The length of the statement  "                throw new ArgumentException("At least one of Id or Login is required in this object."' "taskAssignmentRequest.AssignTo"); " is 121.
Long Statement,Box.V2.Managers,BoxTasksManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxTasksManager.cs,GetAssignmentsAsync,The length of the statement  "            BoxRequest request = new BoxRequest(_config.TasksEndpointUri' string.Format(Constants.TaskAssignmentsPathString' taskId)) " is 121.
Long Statement,Box.V2.Managers,BoxTasksManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxTasksManager.cs,GetAssignmentsAsync,The length of the statement  "            IBoxResponse<BoxCollection<BoxTaskAssignment>> response = await ToResponseAsync<BoxCollection<BoxTaskAssignment>>(request).ConfigureAwait(false); " is 145.
Long Statement,Box.V2.Managers,BoxTermsOfServiceManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxTermsOfServiceManager.cs,GetTermsOfServicesAsync,The length of the statement  "            IBoxResponse<BoxTermsOfServiceCollection<BoxTermsOfService>> response = await ToResponseAsync<BoxTermsOfServiceCollection<BoxTermsOfService>>(request).ConfigureAwait(false); " is 173.
Long Statement,Box.V2.Managers,BoxTermsOfServiceManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxTermsOfServiceManager.cs,GetTermsOfServiceUserStatusesAsync,The length of the statement  "            IBoxResponse<BoxTermsOfServiceUserStatusesCollection<BoxTermsOfServiceUserStatuses>> response = await ToResponseAsync<BoxTermsOfServiceUserStatusesCollection<BoxTermsOfServiceUserStatuses>>(request).ConfigureAwait(false); " is 221.
Long Statement,Box.V2.Managers,BoxTermsOfServiceManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxTermsOfServiceManager.cs,CreateBoxTermsOfServiceUserStatusesAsync,The length of the statement  "            IBoxResponse<BoxTermsOfServiceUserStatuses> response = await ToResponseAsync<BoxTermsOfServiceUserStatuses>(request).ConfigureAwait(false); " is 139.
Long Statement,Box.V2.Managers,BoxTermsOfServiceManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxTermsOfServiceManager.cs,UpdateTermsofServiceUserStatusesAsync,The length of the statement  "            IBoxResponse<BoxTermsOfServiceUserStatuses> response = await ToResponseAsync<BoxTermsOfServiceUserStatuses>(request).ConfigureAwait(false); " is 139.
Long Statement,Box.V2.Managers,BoxWebhooksManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxWebhooksManager.cs,GetWebhooksAsync,The length of the statement  "                IBoxResponse<BoxCollectionMarkerBased<BoxWebhook>> response = await ToResponseAsync<BoxCollectionMarkerBased<BoxWebhook>>(request).ConfigureAwait(false); " is 153.
Long Statement,Box.V2.Managers,BoxLegalHoldPoliciesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxLegalHoldPoliciesManager.cs,GetListLegalHoldPoliciesAsync,The length of the statement  "                IBoxResponse<BoxCollectionMarkerBased<BoxLegalHoldPolicy>> response = await ToResponseAsync<BoxCollectionMarkerBased<BoxLegalHoldPolicy>>(request).ConfigureAwait(false); " is 169.
Long Statement,Box.V2.Managers,BoxLegalHoldPoliciesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxLegalHoldPoliciesManager.cs,GetAssignmentAsync,The length of the statement  "            IBoxResponse<BoxLegalHoldPolicyAssignment> response = await ToResponseAsync<BoxLegalHoldPolicyAssignment>(request).ConfigureAwait(false); " is 137.
Long Statement,Box.V2.Managers,BoxLegalHoldPoliciesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxLegalHoldPoliciesManager.cs,GetAssignmentsAsync,The length of the statement  "            BoxRequest request = new BoxRequest(_config.LegalHoldPoliciesEndpointUri' string.Format(Constants.LegalHoldPolicyAssignmentsPathString' legalHoldPolicyId)) " is 155.
Long Statement,Box.V2.Managers,BoxLegalHoldPoliciesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxLegalHoldPoliciesManager.cs,GetAssignmentsAsync,The length of the statement  "                IBoxResponse<BoxCollectionMarkerBased<BoxLegalHoldPolicyAssignment>> response = await ToResponseAsync<BoxCollectionMarkerBased<BoxLegalHoldPolicyAssignment>>(request).ConfigureAwait(false); " is 189.
Long Statement,Box.V2.Managers,BoxLegalHoldPoliciesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxLegalHoldPoliciesManager.cs,CreateAssignmentAsync,The length of the statement  "            IBoxResponse<BoxLegalHoldPolicyAssignment> response = await ToResponseAsync<BoxLegalHoldPolicyAssignment>(request).ConfigureAwait(false); " is 137.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,DownloadStreamAsync,The length of the statement  "            BoxRequest request = new BoxRequest(_config.FilesEndpointUri' string.Format(Constants.ContentPathString' id)) { Timeout = timeout } " is 131.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,GetDownloadUriAsync,The length of the statement  "            BoxRequest request = new BoxRequest(_config.FilesEndpointUri' string.Format(Constants.ContentPathString' id)) { FollowRedirect = false } " is 136.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,PreflightCheckNewVersion,The length of the statement  "                throw new ArgumentException("Size in bytes must be greater than zero (otherwise preflight check for new version would always succeed)"' "sizeinBytes"); " is 151.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,UploadAsync,The length of the statement  "            IBoxResponse<BoxCollection<BoxFile>> response = await ToResponseAsync<BoxCollection<BoxFile>>(request).ConfigureAwait(false); " is 125.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,CreateUploadSessionAsync,The length of the statement  "            IBoxResponse<BoxFileUploadSession> response = await ToResponseAsync<BoxFileUploadSession>(request).ConfigureAwait(false); " is 121.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,CreateNewVersionUploadSessionAsync,The length of the statement  "            IBoxResponse<BoxFileUploadSession> response = await ToResponseAsync<BoxFileUploadSession>(request).ConfigureAwait(false); " is 121.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,UploadNewVersionAsync,The length of the statement  "            IBoxResponse<BoxCollection<BoxFile>> response = await ToResponseAsync<BoxCollection<BoxFile>>(request).ConfigureAwait(false); " is 125.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,UploadPartAsync,The length of the statement  "                .Header(Constants.RequestParameters.ContentRange' "bytes " + partStartOffsetInBytes + "-" + (partStartOffsetInBytes + stream.Length - 1) + "/" + sizeOfOriginalFileInBytes) " is 171.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,GetSessionUploadStatusAsync,The length of the statement  "            IBoxResponse<BoxSessionUploadStatus> response = await ToResponseAsync<BoxSessionUploadStatus>(request).ConfigureAwait(false); " is 125.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,ViewVersionsAsync,The length of the statement  "            IBoxResponse<BoxCollection<BoxFileVersion>> response = await ToResponseAsync<BoxCollection<BoxFileVersion>>(request).ConfigureAwait(false); " is 139.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,DeleteUploadSessionAsync,The length of the statement  "            IBoxResponse<BoxFileUploadSession> response = await ToResponseAsync<BoxFileUploadSession>(request).ConfigureAwait(false); " is 121.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,GetCollaborationsAsync,The length of the statement  "            IBoxResponse<BoxCollection<BoxCollaboration>> response = await ToResponseAsync<BoxCollection<BoxCollaboration>>(request).ConfigureAwait(false); " is 143.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,GetCommentsAsync,The length of the statement  "            IBoxResponse<BoxCollection<BoxComment>> response = await ToResponseAsync<BoxCollection<BoxComment>>(request).ConfigureAwait(false); " is 131.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,GetFilePreviewAsync,The length of the statement  "            IBoxResponse<Stream> response = await GetPreviewResponseAsync(id' page' maxWidth' minWidth' maxHeight' minHeight' handleRetry); " is 127.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,GetFileTasks,The length of the statement  "            IBoxResponse<BoxCollection<BoxTask>> response = await ToResponseAsync<BoxCollection<BoxTask>>(request).ConfigureAwait(false); " is 125.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,GetWatermarkAsync,The length of the statement  "            IBoxResponse<BoxWatermarkResponse> response = await ToResponseAsync<BoxWatermarkResponse>(request).ConfigureAwait(false); " is 121.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,ApplyWatermarkAsync,The length of the statement  "                applyWatermarkRequest = new BoxApplyWatermarkRequest() { Watermark = new BoxWatermarkRequest() { Imprint = "default" } }; " is 121.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,ApplyWatermarkAsync,The length of the statement  "            IBoxResponse<BoxWatermarkResponse> response = await ToResponseAsync<BoxWatermarkResponse>(request).ConfigureAwait(false); " is 121.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,RemoveWatermarkAsync,The length of the statement  "            IBoxResponse<BoxWatermarkResponse> response = await ToResponseAsync<BoxWatermarkResponse>(request).ConfigureAwait(false); " is 121.
Long Statement,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,DeleteOldVersionAsync,The length of the statement  "            BoxRequest request = new BoxRequest(_config.FilesEndpointUri' string.Format(Constants.DeleteOldVersionPathString' id' versionId)) " is 129.
Long Statement,Box.V2.Managers,BoxFoldersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFoldersManager.cs,GetFolderItemsAsync,The length of the statement  "                IBoxResponse<BoxCollection<BoxItem>> response = await ToResponseAsync<BoxCollection<BoxItem>>(request).ConfigureAwait(false); " is 125.
Long Statement,Box.V2.Managers,BoxFoldersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFoldersManager.cs,CopyAsync,The length of the statement  "            BoxRequest request = new BoxRequest(_config.FoldersEndpointUri' string.Format(Constants.CopyPathString' folderRequest.Id)) " is 122.
Long Statement,Box.V2.Managers,BoxFoldersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFoldersManager.cs,GetCollaborationsAsync,The length of the statement  "            IBoxResponse<BoxCollection<BoxCollaboration>> response = await ToResponseAsync<BoxCollection<BoxCollaboration>>(request).ConfigureAwait(false); " is 143.
Long Statement,Box.V2.Managers,BoxFoldersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFoldersManager.cs,GetTrashItemsAsync,The length of the statement  "                IBoxResponse<BoxCollection<BoxItem>> response = await ToResponseAsync<BoxCollection<BoxItem>>(request).ConfigureAwait(false); " is 125.
Long Statement,Box.V2.Managers,BoxFoldersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFoldersManager.cs,GetTrashItemsAsync,The length of the statement  "            IBoxResponse<BoxCollection<BoxItem>> response = await ToResponseAsync<BoxCollection<BoxItem>>(request).ConfigureAwait(false); " is 125.
Long Statement,Box.V2.Managers,BoxFoldersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFoldersManager.cs,GetWatermarkAsync,The length of the statement  "            IBoxResponse<BoxWatermarkResponse> response = await ToResponseAsync<BoxWatermarkResponse>(request).ConfigureAwait(false); " is 121.
Long Statement,Box.V2.Managers,BoxFoldersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFoldersManager.cs,ApplyWatermarkAsync,The length of the statement  "                applyWatermarkRequest = new BoxApplyWatermarkRequest() { Watermark = new BoxWatermarkRequest() { Imprint = "default" } }; " is 121.
Long Statement,Box.V2.Managers,BoxFoldersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFoldersManager.cs,ApplyWatermarkAsync,The length of the statement  "            IBoxResponse<BoxWatermarkResponse> response = await ToResponseAsync<BoxWatermarkResponse>(request).ConfigureAwait(false); " is 121.
Long Statement,Box.V2.Managers,BoxFoldersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFoldersManager.cs,RemoveWatermarkAsync,The length of the statement  "            IBoxResponse<BoxWatermarkResponse> response = await ToResponseAsync<BoxWatermarkResponse>(request).ConfigureAwait(false); " is 121.
Long Statement,Box.V2.Managers,BoxUsersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxUsersManager.cs,GetEnterpriseUsersAsync,The length of the statement  "            if (limit == 0 || limit > 1000) throw new ArgumentOutOfRangeException("limit"' "limit must be within the range 1 <= limit <= 1000"); " is 132.
Long Statement,Box.V2.Managers,BoxUsersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxUsersManager.cs,GetEnterpriseUsersAsync,The length of the statement  "                IBoxResponse<BoxCollection<BoxUser>> response = await ToResponseAsync<BoxCollection<BoxUser>>(request).ConfigureAwait(false); " is 125.
Long Statement,Box.V2.Managers,BoxUsersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxUsersManager.cs,DeleteEmailAliasAsync,The length of the statement  "            BoxRequest request = new BoxRequest(_config.UserEndpointUri' string.Format(Constants.DeleteEmailAliasPathString' userId' emailAliasId)) " is 135.
Long Statement,Box.V2.Managers,BoxUsersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxUsersManager.cs,GetEmailAliasesAsync,The length of the statement  "            BoxRequest request = new BoxRequest(_config.UserEndpointUri' string.Format(Constants.UserEmailAliasesPathString' userId)). " is 122.
Long Statement,Box.V2.Managers,BoxUsersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxUsersManager.cs,GetEmailAliasesAsync,The length of the statement  "            IBoxResponse<BoxCollection<BoxEmailAlias>> response = await ToResponseAsync<BoxCollection<BoxEmailAlias>>(request).ConfigureAwait(false); " is 137.
Long Statement,Box.V2.Managers,BoxUsersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxUsersManager.cs,AddEmailAliasAsync,The length of the statement  "            BoxRequest request = new BoxRequest(_config.UserEndpointUri' string.Format(Constants.UserEmailAliasesPathString' userId)). " is 122.
Long Statement,Box.V2.Managers,BoxUsersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxUsersManager.cs,MoveUserFolderAsync,The length of the statement  "            BoxRequest request = new BoxRequest(_config.UserEndpointUri' string.Format(Constants.MoveUserFolderPathString' userId' folderId)) " is 129.
Long Statement,Box.V2.Managers,BoxUsersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxUsersManager.cs,GetMembershipsForUserAsync,The length of the statement  "            BoxRequest request = new BoxRequest(_config.UserEndpointUri' string.Format(Constants.GroupMembershipForUserPathString' userId)) " is 127.
Long Statement,Box.V2.Managers,BoxUsersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxUsersManager.cs,GetMembershipsForUserAsync,The length of the statement  "                IBoxResponse<BoxCollection<BoxGroupMembership>> response = await ToResponseAsync<BoxCollection<BoxGroupMembership>>(request).ConfigureAwait(false); " is 147.
Long Statement,Box.V2.Managers,BoxCollaborationsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxCollaborationsManager.cs,GetPendingCollaborationAsync,The length of the statement  "            IBoxResponse<BoxCollection<BoxCollaboration>> response = await ToResponseAsync<BoxCollection<BoxCollaboration>>(request).ConfigureAwait(false); " is 143.
Long Statement,Box.V2.Managers,BoxSearchManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxSearchManager.cs,SearchAsync,The length of the statement  "            IBoxResponse<BoxCollection<BoxItem>> response = await ToResponseAsync<BoxCollection<BoxItem>>(request).ConfigureAwait(false); " is 125.
Long Statement,Box.V2.Utility,Retry,C:\repos\box_box-windows-sdk-v2\Box.V2\Utility\Retry.cs,Execute,The length of the statement  "                    if (exceptionTypesToHandle != null && exceptionTypesToHandle.Any() && !exceptionTypesToHandle.Any(type => ex.IsOfTypeOrInherits(type))) " is 135.
Long Statement,Box.V2.Utility,Retry,C:\repos\box_box-windows-sdk-v2\Box.V2\Utility\Retry.cs,ExecuteAsync,The length of the statement  "            await ExecuteAsync(async () => await task' retryInterval' retryCount' executeOnEveryException' executeBeforeFinalException' exceptionTypesToHandle); " is 148.
Long Statement,Box.V2.Utility,Retry,C:\repos\box_box-windows-sdk-v2\Box.V2\Utility\Retry.cs,ValidateTypeParameter,The length of the statement  "                var typesThatAreNotExcpetions = exceptionTypesToHandle.Where(type => IsOfTypeOrInHerits(type' typeof(Exception)) == false).ToList(); " is 132.
Long Statement,Box.V2.Utility,Retry,C:\repos\box_box-windows-sdk-v2\Box.V2\Utility\Retry.cs,ValidateTypeParameter,The length of the statement  "                        $"All types should be of base type exception. Found {typesThatAreNotExcpetions.Count} type(s) that are not exceptions: {notExceptionsMessage}"' " is 143.
Long Statement,Box.V2.Request,HttpRequestHandler,C:\repos\box_box-windows-sdk-v2\Box.V2\Request\HttpRequestHandler.cs,ExecuteAsync,The length of the statement  "                        Debug.WriteLine("HttpCode : {0}. Waiting for {1} seconds to retry request. RequestUri: {2}"' response.StatusCode' delay.Seconds' httpRequest.RequestUri); " is 153.
Long Statement,Box.V2.Request,ClientFactory,C:\repos\box_box-windows-sdk-v2\Box.V2\Request\HttpRequestHandler.cs,CreateClient,The length of the statement  "                HttpClientHandler handler = new HttpClientHandler() { AutomaticDecompression = DecompressionMethods.Deflate | DecompressionMethods.GZip }; " is 138.
Complex Conditional,Box.V2.Request,HttpRequestHandler,C:\repos\box_box-windows-sdk-v2\Box.V2\Request\HttpRequestHandler.cs,ExecuteAsync,The conditional expression  "((response.StatusCode == TooManyRequests && !isMultiPartRequest)                          ||                          (response.StatusCode == HttpStatusCode.Accepted && retryAfterHeader != null))                           && numRetries-- > 0"  is complex.
Empty Catch Block,Box.V2.Extensions,BoxResponseExtensions,C:\repos\box_box-windows-sdk-v2\Box.V2\Extensions\BoxResponseExtensions.cs,BuildPagesCount,The method has an empty catch block.
Magic Number,Box.V2.Auth.Token,ActorTokenBuilder,C:\repos\box_box-windows-sdk-v2\Box.V2\Auth\Token\ActorTokenBuilder.cs,Build,The following statement contains a magic number: var exp = Helper.ConvertToUnixTimestamp(DateTime.UtcNow.AddSeconds(30));
Magic Number,Box.V2.JWTAuth,BoxJWTAuth,C:\repos\box_box-windows-sdk-v2\Box.V2\JWTAuth\BoxJWTAuth.cs,Session,The following statement contains a magic number: return new OAuthSession(token' null' 3600' TOKEN_TYPE);
Magic Number,Box.V2.JWTAuth,BoxJWTAuth,C:\repos\box_box-windows-sdk-v2\Box.V2\JWTAuth\BoxJWTAuth.cs,ConstructJWTAssertion,The following statement contains a magic number: byte[] randomNumber = new byte[64];
Magic Number,Box.V2.JWTAuth,BoxJWTAuth,C:\repos\box_box-windows-sdk-v2\Box.V2\JWTAuth\BoxJWTAuth.cs,ConstructJWTAssertion,The following statement contains a magic number: var payload = new JwtPayload(this.boxConfig.ClientId' AUTH_URL' claims' null' DateTime.UtcNow.AddSeconds(30));
Magic Number,Box.V2.Managers,BoxGroupsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxGroupsManager.cs,GetAllGroupsAsync,The following statement contains a magic number: if (autoPaginate)              {                  if (!limit.HasValue)                  {                      limit = 100;                      request.Param("limit"' limit.ToString());                        }                  if (!offset.HasValue)                      request.Param("offset"' "0");                    return await AutoPaginateLimitOffset<BoxGroup>(request' limit.Value);              }              else              {                  IBoxResponse<BoxCollection<BoxGroup>> response = await ToResponseAsync<BoxCollection<BoxGroup>>(request).ConfigureAwait(false);                  return response.ResponseObject;              }
Magic Number,Box.V2.Managers,BoxGroupsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxGroupsManager.cs,GetCollaborationsForGroupAsync,The following statement contains a magic number: if (autoPaginate)              {                  if (!limit.HasValue)                  {                      limit = 100;                      request.Param("limit"' limit.ToString());                  }                  if(!offset.HasValue)                      request.Param("offset"' "0");                    return await AutoPaginateLimitOffset<BoxCollaboration>(request' limit.Value);              }              else              {                  var response = await ToResponseAsync<BoxCollection<BoxCollaboration>>(request).ConfigureAwait(false);                  return response.ResponseObject;              }
Magic Number,Box.V2.Managers,BoxGroupsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxGroupsManager.cs,GetAllGroupMembershipsForGroupAsync,The following statement contains a magic number: if (autoPaginate)              {                  if (!limit.HasValue)                  {                      limit = 100;                      request.Param("limit"' limit.ToString());                  }                  if (!offset.HasValue)                      request.Param("offset"' "0");                    return await AutoPaginateLimitOffset<BoxGroupMembership>(request' limit.Value);              }              else              {                  IBoxResponse<BoxCollection<BoxGroupMembership>> response = await ToResponseAsync<BoxCollection<BoxGroupMembership>>(request).ConfigureAwait(false);                  return response.ResponseObject;              }
Magic Number,Box.V2.Managers,BoxGroupsManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxGroupsManager.cs,GetAllGroupMembershipsForUserAsync,The following statement contains a magic number: if (autoPaginate)              {                  if (!limit.HasValue)                  {                      limit = 100;                      request.Param("limit"' limit.ToString());                  }                  if (!offset.HasValue)                      request.Param("offset"' "0");                    return await AutoPaginateLimitOffset<BoxGroupMembership>(request' limit.Value);              }              else              {                  IBoxResponse<BoxCollection<BoxGroupMembership>> response = await ToResponseAsync<BoxCollection<BoxGroupMembership>>(request).ConfigureAwait(false);                  return response.ResponseObject;              }
Magic Number,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,GetSessionUploadedPartsAsync,The following statement contains a magic number: if (autoPaginate)              {                  if (!limit.HasValue)                  {                      limit = 100;                      request.Param("limit"' limit.ToString());                  }                    if (!offset.HasValue)                      request.Param("offset"' "0");                    return await AutoPaginateLimitOffset<BoxSessionPartInfo>(request' limit.Value);              }              else              {                  var response = await ToResponseAsync<BoxCollection<BoxSessionPartInfo>>(request).ConfigureAwait(false);                    return response.ResponseObject;              }
Magic Number,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,UploadSessionAsync,The following statement contains a magic number: const int retryCount = 5;
Magic Number,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,UploadSessionAsync,The following statement contains a magic number: var retryInterval = allSessionPartsList.Count * 100;
Magic Number,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,UploadPartsInSessionAsync,The following statement contains a magic number: const int retryMaxCount = 5;
Magic Number,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,UploadPartsInSessionAsync,The following statement contains a magic number: const int retryMaxInterval = 10;
Magic Number,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,UploadPartsInSessionAsync,The following statement contains a magic number: using (SemaphoreSlim concurrencySemaphore = new SemaphoreSlim(maxTaskNum))              {                  var postTaskTasks = new List<Task>();                  int taskCompleted = 0;                    var tasks = new List<Task<BoxUploadPartResponse>>();                  for (var i = 0; i < numberOfParts; i++)                  {                      await concurrencySemaphore.WaitAsync();                        // Split file as per part size                      var partOffset = partSize * i;                        // Retry                      var uploadPartWithRetryTask = Retry.ExecuteAsync(async () =>                      {                          // Release the memory when done                          using (var partFileStream = UploadUsingSessionInternal.GetFilePart(stream' partSize'                                      partOffset))                          {                              var sha = Helper.GetSha1Hash(partFileStream);                              partFileStream.Position = 0;                              var uploadPartResponse = await UploadPartAsync(                                  uploadPartsUri' sha' partOffset' fileSize' partFileStream'                                  timeout);                                return uploadPartResponse;                          }                      }' TimeSpan.FromSeconds(retryMaxInterval)' retryMaxCount);                        // Have each task notify the Semaphore when it completes so that it decrements the number of tasks currently running.                      postTaskTasks.Add(uploadPartWithRetryTask.ContinueWith(tsk =>                          {                              concurrencySemaphore.Release();                              ++taskCompleted;                              if (progress != null)                              {                                  var boxProgress = new BoxProgress()                                  {                                      progress = taskCompleted * 100 / numberOfParts                                  };                                    progress.Report(boxProgress);                              }                          }                      ));                        tasks.Add(uploadPartWithRetryTask);                  }                    var results = await Task.WhenAll(tasks);                  ret.AddRange(results.Select(elem => elem.Part));              }
Magic Number,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,GetTimeDelay,The following statement contains a magic number: if (headers != null && headers.RetryAfter != null && int.TryParse(headers.RetryAfter.ToString()' out timeToWait))                  return timeToWait * 1000;
Magic Number,Box.V2.Managers,BoxFilesManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,GetRepresentationsAsync,The following statement contains a magic number: while (response.StatusCode == HttpStatusCode.Accepted && representationRequest.HandleRetry)              {                  const int RepresentationRequestRetryTime = 3000;                  await Task.Delay(RepresentationRequestRetryTime);                  response = await ToResponseAsync<BoxFile>(request).ConfigureAwait(false);              }
Magic Number,Box.V2.Managers,UploadUsingSessionInternal,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,GetFilePart,The following statement contains a magic number: const int bufferSize = 4096;
Magic Number,Box.V2.Managers,UploadUsingSessionInternal,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxFilesManager.cs,GetFilePart,The following statement contains a magic number: do              {                  bytesRead = stream.Read(buffer' 0' 4096);                  if (bytesRead > 0)                  {                      long bytesToWrite = bytesRead;                      bool shouldBreak = false;                      if (partStream.Length + bytesRead >= partSize)                      {                          bytesToWrite = partSize - partStream.Length;                          shouldBreak = true;                      }                        partStream.Write(buffer' 0' Convert.ToInt32(bytesToWrite));                        if (shouldBreak)                      {                          break;                      }                  }              } while (bytesRead > 0);
Magic Number,Box.V2.Managers,BoxUsersManager,C:\repos\box_box-windows-sdk-v2\Box.V2\Managers\BoxUsersManager.cs,GetEnterpriseUsersAsync,The following statement contains a magic number: if (limit == 0 || limit > 1000) throw new ArgumentOutOfRangeException("limit"' "limit must be within the range 1 <= limit <= 1000");
Magic Number,Box.V2.Models.Request,BoxFileVersionRetentionRequest,C:\repos\box_box-windows-sdk-v2\Box.V2\Models\Request\BoxFileVersionRetentionRequest.cs,BoxFileVersionRetentionRequest,The following statement contains a magic number: this.Limit = 100;
Magic Number,Box.V2.Utility,Helper,C:\repos\box_box-windows-sdk-v2\Box.V2\Utility\Helper.cs,ConvertToUnixTimestamp,The following statement contains a magic number: DateTime origin = new DateTime(1970' 1' 1' 0' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Box.V2.Utility,Helper,C:\repos\box_box-windows-sdk-v2\Box.V2\Utility\Helper.cs,ParseQueryString,The following statement contains a magic number: return pairs                  .Select(o => o.Split('='))                  .Where(items => items.Count() == 2)                  .ToDictionary(pair => Uri.UnescapeDataString(pair[ 0 ])'                      pair => Uri.UnescapeDataString(pair[ 1 ]));
Magic Number,Box.V2.Utility,LRUCache<K;V>,C:\repos\box_box-windows-sdk-v2\Box.V2\Utility\LRUCache.cs,LRUCache,The following statement contains a magic number: if (this._ttl > TimeSpan.Zero)              {                  this._timer = new Timer(                      Purge'                      null'                      (int)this._ttl.TotalMilliseconds'                      5000); // 5 seconds              }
Magic Number,Box.V2.Request,HttpRequestHandler,C:\repos\box_box-windows-sdk-v2\Box.V2\Request\HttpRequestHandler.cs,ExecuteAsync,The following statement contains a magic number: var numRetries = 3;
Magic Number,Box.V2.Request,HttpRequestHandler,C:\repos\box_box-windows-sdk-v2\Box.V2\Request\HttpRequestHandler.cs,ExecuteAsync,The following statement contains a magic number: try              {                  // TODO: yhu@ better handling of different request                  var isMultiPartRequest = request.GetType() == typeof(BoxMultiPartRequest);                  var isBinaryRequest = request.GetType() == typeof(BoxBinaryRequest);                    while (true)                  {                      HttpRequestMessage httpRequest = null;                        if (isMultiPartRequest)                      {                          httpRequest = BuildMultiPartRequest(request as BoxMultiPartRequest);                      }                      else if (isBinaryRequest)                      {                          httpRequest = BuildBinaryRequest(request as BoxBinaryRequest);                      }                      else                      {                          httpRequest = BuildRequest(request);                      }                        // Add headers                      foreach (var kvp in request.HttpHeaders)                      {                          // They could not be added to the headers directly                          if (kvp.Key == Constants.RequestParameters.ContentMD5                              || kvp.Key == Constants.RequestParameters.ContentRange)                          {                              httpRequest.Content.Headers.Add(kvp.Key' kvp.Value);                          }                          else                          {                              httpRequest.Headers.TryAddWithoutValidation(kvp.Key' kvp.Value);                          }                      }                        // If we are retrieving a stream' we should return without reading the entire response                      HttpCompletionOption completionOption = isStream ?                          HttpCompletionOption.ResponseHeadersRead :                          HttpCompletionOption.ResponseContentRead;                        Debug.WriteLine(string.Format("RequestUri: {0}"' httpRequest.RequestUri));                        HttpClient client = GetClient(request);                        // Not disposing the reponse since it will affect stream response                       var response = await client.SendAsync(httpRequest' completionOption).ConfigureAwait(false);                        //need to wait for Retry-After seconds and then retry request                      var retryAfterHeader = response.Headers.RetryAfter;                        // If we get a 429 error code and this is not a multi part request (meaning a file upload' which cannot be retried                      // because the stream cannot be reset) and we haven't exceeded the number of allowed retries' then retry the request.                      // If we get a 202 code and has a retry-after header' we will retry after                      if (                          ((response.StatusCode == TooManyRequests && !isMultiPartRequest)                          ||                          (response.StatusCode == HttpStatusCode.Accepted && retryAfterHeader != null))                           && numRetries-- > 0)                      {                          TimeSpan delay = TimeSpan.FromSeconds(2);                          if (retryAfterHeader.Delta.HasValue)                          {                              delay = retryAfterHeader.Delta.Value;                          }                            Debug.WriteLine("HttpCode : {0}. Waiting for {1} seconds to retry request. RequestUri: {2}"' response.StatusCode' delay.Seconds' httpRequest.RequestUri);                            await Task.Delay(delay);                      }                      else                      {                          BoxResponse<T> boxResponse = new BoxResponse<T>();                          boxResponse.Headers = response.Headers;                            // Translate the status codes that interest us                           boxResponse.StatusCode = response.StatusCode;                          switch (response.StatusCode)                          {                              case HttpStatusCode.OK:                              case HttpStatusCode.Created:                              case HttpStatusCode.NoContent:                              case HttpStatusCode.Found:                              case HttpStatusCode.PartialContent: // Download with range                                  boxResponse.Status = ResponseStatus.Success;                                  break;                              case HttpStatusCode.Accepted:                                  boxResponse.Status = ResponseStatus.Pending;                                  break;                              case HttpStatusCode.Unauthorized:                                  boxResponse.Status = ResponseStatus.Unauthorized;                                  break;                              case HttpStatusCode.Forbidden:                                  boxResponse.Status = ResponseStatus.Forbidden;                                  break;                              case TooManyRequests:                                  boxResponse.Status = ResponseStatus.TooManyRequests;                                  break;                              default:                                  boxResponse.Status = ResponseStatus.Error;                                  break;                          }                            if (isStream && boxResponse.Status == ResponseStatus.Success)                          {                              var resObj = await response.Content.ReadAsStreamAsync().ConfigureAwait(false);                              boxResponse.ResponseObject = resObj as T;                          }                          else                          {                              boxResponse.ContentString = await response.Content.ReadAsStringAsync().ConfigureAwait(false);                          }                            return boxResponse;                      }                  }              }              catch (Exception ex)              {                  Debug.WriteLine(string.Format("Exception: {0}"' ex.Message));                  throw;              }
Missing Default,Box.V2.Converter,BoxItemConverter,C:\repos\box_box-windows-sdk-v2\Box.V2\Converter\BoxItemConverter.cs,Create,The following switch statement is missing a default case: switch (jObject[ItemType].ToString())                  {                      case Constants.TypeFile:                          return new BoxFile();                      case Constants.TypeFolder:                          return new BoxFolder();                      case Constants.TypeWebLink:                          return new BoxWebLink();                      case Constants.TypeRetentionPolicy:                          return new BoxRetentionPolicy();                      case Constants.TypeRetentionPolicyAssignment:                          return new BoxRetentionPolicyAssignment();                      case Constants.TypeFileVersionRetention:                          return new BoxFileVersionRetention();                      case Constants.TypeComment:                          return new BoxComment();                      case Constants.TypeFileVersion:                          return new BoxFileVersion();                      case Constants.TypeGroup:                          return new BoxGroup();                      case Constants.TypeGroupMembership:                          return new BoxGroupMembership();                      case Constants.TypeUser:                          return new BoxUser();                      case Constants.TypeEnterprise:                          return new BoxEnterprise();                      case Constants.TypeCollaboration:                          return new BoxCollaboration();                      case Constants.TypeLock:                          return new BoxFileLock();                      case Constants.TypeInvite:                          return new BoxUserInvite();                      case Constants.TypeWebhook:                          return new BoxWebhook();                      case Constants.TypeTask:                          return new BoxTask();                      case Constants.TypeEmailAlias:                          return new BoxEmailAlias();                      case Constants.TypeTaskAssignment:                          return new BoxTaskAssignment();                      case Constants.TypeCollection:                          return new BoxCollectionItem();                      case Constants.TypeDevicePin:                          return new BoxDevicePin();                      case Constants.TypeLegalHoldPolicy:                          return new BoxLegalHoldPolicy();                      case Constants.TypeLegalHoldPolicyAssignment:                          return new BoxLegalHoldPolicyAssignment();                      case Constants.TypeUploadSession:                          return new BoxFileUploadSession();                      case Constants.TypeRecentItem:                          return new BoxRecentItem();                      case Constants.TypeCollabWhitelistEntry:                          return new BoxCollaborationWhitelistEntry();                      case Constants.TypeCollabWhitelistTargetEntry:                          return new BoxCollaborationWhitelistTargetEntry();                      case Constants.TypeMetadataTemplate:                          return new BoxMetadataTemplate();                      case Constants.TypeTermsOfService:                          return new BoxTermsOfService();                      case Constants.TypeTermsOfServiceUserStatuses:                          return new BoxTermsOfServiceUserStatuses();                  }
Missing Default,Box.V2.Converter,BoxItemConverter,C:\repos\box_box-windows-sdk-v2\Box.V2\Converter\BoxItemConverter.cs,Create,The following switch statement is missing a default case: switch (jObject[EventSourceItemType].ToString())                  {                      case Constants.TypeFile:                          return new BoxFileEventSource();                      case Constants.TypeFolder:                          return new BoxFolderEventSource();                  }
