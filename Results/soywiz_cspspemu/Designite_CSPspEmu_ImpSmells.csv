Implementation smell,Namespace,Class,File,Method,Description
Long Method,CSPspEmu,Program,C:\repos\soywiz_cspspemu\CSPspEmu\Program.cs,Main,The method has 284 lines of code.
Complex Method,CSPspEmu.AutoTests,AutoTestsProgram,C:\repos\soywiz_cspspemu\CSPspEmu\AutoTests\AutoTestsProgram.cs,RunFile,Cyclomatic complexity of the method is 8
Complex Method,CSPspEmu.AutoTests,AutoTestsProgram,C:\repos\soywiz_cspspemu\CSPspEmu\AutoTests\AutoTestsProgram.cs,InternalMain,Cyclomatic complexity of the method is 8
Long Parameter List,CSPspEmu,PspEmulator,C:\repos\soywiz_cspspemu\CSPspEmu\PspEmulator.cs,StartAndLoad,The method has 5 parameters. Parameters: File' TraceSyscalls' ShowMenus' TrackCallStack' EnableMpeg
Long Parameter List,CSPspEmu.AutoTests,AutoTestsProgram,C:\repos\soywiz_cspspemu\CSPspEmu\AutoTests\AutoTestsProgram.cs,RunExecutableAndGetOutput,The method has 5 parameters. Parameters: runTestsViewOut' pspAutoTestsFolder' fileName' capturedOutput' fileNameBase
Long Parameter List,CSPspEmu.AutoTests,AutoTestsProgram,C:\repos\soywiz_cspspemu\CSPspEmu\AutoTests\AutoTestsProgram.cs,RunFile,The method has 5 parameters. Parameters: runTestsViewOut' pspAutoTestsFolder' fileNameExecutable' fileNameExpected' fileNameBase
Long Statement,CSPspEmu,Program,C:\repos\soywiz_cspspemu\CSPspEmu\Program.cs,_MainData,The length of the statement  "            //new Bitmap(TextureOut.Width' TextureOut.Height).SetChannelsDataInterleaved(TextureOut.GetDataFromGpu()' BitmapChannelList.RGBA).Save(@"c:\temp\test.out.png"); " is 160.
Long Statement,CSPspEmu,Program,C:\repos\soywiz_cspspemu\CSPspEmu\Program.cs,Main,The length of the statement  "                        "   /associate                       - Associates extensions with the program. Requires be launched with administrative rights."); " is 130.
Long Statement,CSPspEmu,PspEmulator,C:\repos\soywiz_cspspemu\CSPspEmu\PspEmulator.cs,Start,The length of the statement  "            //	Console.WriteLine("Thread: {0}' {1}"' thread.ThreadState' (thread.ThreadState == System.Diagnostics.ThreadState.Wait) ?  thread.WaitReason.ToString() : ""); " is 159.
Long Statement,CSPspEmu,PspEmulator,C:\repos\soywiz_cspspemu\CSPspEmu\PspEmulator.cs,ShowDebugInformation,The length of the statement  "            foreach (var Pair in CpuProcessor.GlobalInstructionStats.OrderBy(Pair => Pair.Key)) Console.WriteLine("{0} -> {1}"' Pair.Key' Pair.Value); " is 138.
Magic Number,CSPspEmu,Program,C:\repos\soywiz_cspspemu\CSPspEmu\Program.cs,Main,The following statement contains a magic number: int runTestsTimeout = 60;
Magic Number,CSPspEmu,PspEmulator,C:\repos\soywiz_cspspemu\CSPspEmu\PspEmulator.cs,Start,The following statement contains a magic number: try              {                  // Creates a temporal context.                  //PspEmulatorContext = new PspEmulatorContext(PspConfig);                    // Creates a new context.                  CreateNewContextAndRemoveOldOne();                    CallbackOnInit?.Invoke();                  // GUI Thread.                  Thread.CurrentThread.Name = "GuiThread";                    GuiConfig.ShowMenus = ShowMenus;                  GuiConfig.AutoLoad = AutoLoad;                  GuiConfig.DefaultDisplayScale = ShowMenus ? 1 : 2;                  //ContextInitialized.WaitOne();                    new GuiRunner(this).Start();                    PspRunner.StopSynchronized();              }              catch (Exception Exception)              {                  Console.Error.WriteLine(Exception);              }              finally              {                  StoredConfig.Save();              }
Magic Number,CSPspEmu.AutoTests,AutoTestsProgram,C:\repos\soywiz_cspspemu\CSPspEmu\AutoTests\AutoTestsProgram.cs,RunFile,The following statement contains a magic number: for (var n = 0; n < 10; n++)              {                  var imageReferenceFile = $"{fileNameBase}.reference.{n}.png";                  var imageOutputFile = $"{fileNameBase}.lastoutput.{n}.png";                  if (File.Exists(imageReferenceFile))                  {                      if (File.Exists(imageOutputFile))                      {                          var referenceBitmap = new Bitmap(imageReferenceFile);                          var outputBitmap = new Bitmap(imageOutputFile);                          if (referenceBitmap.Size == outputBitmap.Size)                          {                              var compareResult = BitmapUtils.CompareBitmaps(referenceBitmap' outputBitmap' 0.01);                                if (compareResult.Equal)                              {                                  Console.Error.WriteLine(                                      "Files '{0}:{1}' and '{2}:{3}' have different contents {4}/{5} different pixels {6}%"'                                      imageReferenceFile' referenceBitmap.Size' imageOutputFile' outputBitmap.Size'                                      compareResult.DifferentPixelCount' compareResult.TotalPixelCount'                                      compareResult.PixelTotalDifferencePercentage                                  );                                  hadAnError = true;                              }                          }                          else                          {                              Console.Error.WriteLine(                                  "Files '{0}:{1}' and '{2}:{3}' have different sizes"'                                  imageReferenceFile' referenceBitmap.Size' imageOutputFile' outputBitmap.Size                              );                              hadAnError = true;                          }                      }                      else                      {                          Console.Error.WriteLine(                              "File '{0}' exists' but not exists '{1}'"'                              imageReferenceFile' imageOutputFile                          );                          hadAnError = true;                      }                  }              }
Magic Number,CSPspEmu.AutoTests,AutoTestsProgram,C:\repos\soywiz_cspspemu\CSPspEmu\AutoTests\AutoTestsProgram.cs,RunFile,The following statement contains a magic number: for (var n = 0; n < 10; n++)              {                  var imageReferenceFile = $"{fileNameBase}.reference.{n}.png";                  var imageOutputFile = $"{fileNameBase}.lastoutput.{n}.png";                  if (File.Exists(imageReferenceFile))                  {                      if (File.Exists(imageOutputFile))                      {                          var referenceBitmap = new Bitmap(imageReferenceFile);                          var outputBitmap = new Bitmap(imageOutputFile);                          if (referenceBitmap.Size == outputBitmap.Size)                          {                              var compareResult = BitmapUtils.CompareBitmaps(referenceBitmap' outputBitmap' 0.01);                                if (compareResult.Equal)                              {                                  Console.Error.WriteLine(                                      "Files '{0}:{1}' and '{2}:{3}' have different contents {4}/{5} different pixels {6}%"'                                      imageReferenceFile' referenceBitmap.Size' imageOutputFile' outputBitmap.Size'                                      compareResult.DifferentPixelCount' compareResult.TotalPixelCount'                                      compareResult.PixelTotalDifferencePercentage                                  );                                  hadAnError = true;                              }                          }                          else                          {                              Console.Error.WriteLine(                                  "Files '{0}:{1}' and '{2}:{3}' have different sizes"'                                  imageReferenceFile' referenceBitmap.Size' imageOutputFile' outputBitmap.Size                              );                              hadAnError = true;                          }                      }                      else                      {                          Console.Error.WriteLine(                              "File '{0}' exists' but not exists '{1}'"'                              imageReferenceFile' imageOutputFile                          );                          hadAnError = true;                      }                  }              }
Magic Number,CSPspEmu.AutoTests,AutoTestsProgram,C:\repos\soywiz_cspspemu\CSPspEmu\AutoTests\AutoTestsProgram.cs,InternalMain,The following statement contains a magic number: if (Debugger.IsAttached)              {                  try                  {                      Console.SetWindowSize(160' 60);                      Console.SetBufferSize(160' 2000);                  }                  catch (Exception e)                  {                      Console.WriteLine(e);                  }              }
Magic Number,CSPspEmu.AutoTests,AutoTestsProgram,C:\repos\soywiz_cspspemu\CSPspEmu\AutoTests\AutoTestsProgram.cs,InternalMain,The following statement contains a magic number: if (Debugger.IsAttached)              {                  try                  {                      Console.SetWindowSize(160' 60);                      Console.SetBufferSize(160' 2000);                  }                  catch (Exception e)                  {                      Console.WriteLine(e);                  }              }
Magic Number,CSPspEmu.AutoTests,AutoTestsProgram,C:\repos\soywiz_cspspemu\CSPspEmu\AutoTests\AutoTestsProgram.cs,InternalMain,The following statement contains a magic number: if (Debugger.IsAttached)              {                  try                  {                      Console.SetWindowSize(160' 60);                      Console.SetBufferSize(160' 2000);                  }                  catch (Exception e)                  {                      Console.WriteLine(e);                  }              }
Magic Number,CSPspEmu.AutoTests,AutoTestsProgram,C:\repos\soywiz_cspspemu\CSPspEmu\AutoTests\AutoTestsProgram.cs,InternalMain,The following statement contains a magic number: if (Debugger.IsAttached)              {                  try                  {                      Console.SetWindowSize(160' 60);                      Console.SetBufferSize(160' 2000);                  }                  catch (Exception e)                  {                      Console.WriteLine(e);                  }              }
