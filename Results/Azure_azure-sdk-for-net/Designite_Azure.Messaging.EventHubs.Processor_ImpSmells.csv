Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Azure.Messaging.EventHubs.Core,ConnectionStringParser,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Core\ConnectionStringParser.cs,Parse,Cyclomatic complexity of the method is 12
Complex Method,Azure.Messaging.EventHubs.Authorization,SharedAccessSignature,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Authorization\SharedAccessSignature.cs,ParseSignature,Cyclomatic complexity of the method is 13
Long Parameter List,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,EventProcessorClient,The method has 5 parameters. Parameters: checkpointStore' consumerGroup' connectionString' eventHubName' clientOptions
Long Parameter List,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,EventProcessorClient,The method has 6 parameters. Parameters: checkpointStore' consumerGroup' fullyQualifiedNamespace' eventHubName' credential' clientOptions
Long Parameter List,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,EventProcessorClient,The method has 6 parameters. Parameters: storageManager' consumerGroup' fullyQualifiedNamespace' eventHubName' connectionFactory' clientOptions
Long Parameter List,Azure.Messaging.EventHubs.Processor,Checkpoint,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Processor\Checkpoint.cs,Checkpoint,The method has 6 parameters. Parameters: fullyQualifiedNamespace' eventHubName' consumerGroup' partitionId' offset' sequenceNumber
Long Parameter List,Azure.Messaging.EventHubs.Processor,PartitionOwnership,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Processor\PartitionOwnership.cs,PartitionOwnership,The method has 7 parameters. Parameters: fullyQualifiedNamespace' eventHubName' consumerGroup' ownerIdentifier' partitionId' lastModifiedTime' eTag
Long Parameter List,Azure.Messaging.EventHubs.Authorization,SharedAccessSignature,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Authorization\SharedAccessSignature.cs,SharedAccessSignature,The method has 5 parameters. Parameters: eventHubResource' sharedAccessKeyName' sharedAccessKey' value' signatureExpiration
Long Identifier,Azure.Messaging.EventHubs.Authorization,SharedAccessSignature,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Authorization\SharedAccessSignature.cs,,The length of the parameter SignedResourceFullIdentifierToken is 33.
Long Identifier,Azure.Messaging.EventHubs.Authorization,SharedAccessSignature,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Authorization\SharedAccessSignature.cs,,The length of the parameter DefaultSignatureValidityDuration is 32.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,StartProcessingAsync,The length of the statement  "                                throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' Resources.CannotStartEventProcessorWithoutHandler' nameof(ProcessEventAsync))); " is 157.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,StartProcessingAsync,The length of the statement  "                                throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' Resources.CannotStartEventProcessorWithoutHandler' nameof(ProcessErrorAsync))); " is 157.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,StopProcessingAsync,The length of the statement  "                            .Select(partitionId => StopPartitionProcessingIfRunningAsync(partitionId' ProcessingStoppedReason.Shutdown' CancellationToken.None))) " is 133.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,RunAsync,The length of the statement  "                // Some previously owned partitions might have had their ownership expired or might have been stolen' so we need to stop " is 120.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,RunAsync,The length of the statement  "                    .Select(partitionId => StopPartitionProcessingIfRunningAsync(partitionId' ProcessingStoppedReason.OwnershipLost' cancellationToken))) " is 133.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,RunAsync,The length of the statement  "                            await StopPartitionProcessingIfRunningAsync(kvp.Key' ProcessingStoppedReason.Shutdown' cancellationToken).ConfigureAwait(false); " is 128.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,RunAsync,The length of the statement  "                    completeOwnershipList = (await StorageManager.ListOwnershipAsync(FullyQualifiedNamespace' EventHubName' ConsumerGroup' cancellationToken) " is 137.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,RunAsync,The length of the statement  "                // Filter the complete ownership list to obtain only the ones that are still active.  The expiration time defaults to 30 seconds' " is 129.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,RunAsync,The length of the statement  "                // Active ownership list may be null if complete ownership list retrieval has failed.  There's no point in continuing the current " is 129.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,RunAsync,The length of the statement  "                        var claimedOwnership = await FindAndClaimOwnershipAsync(partitionIds' completeOwnershipList' activeOwnership' cancellationToken).ConfigureAwait(false); " is 151.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,FindAndClaimOwnershipAsync,The length of the statement  "            // Create a partition distribution dictionary from the active ownership list we have' mapping an owner's identifier to the amount of " is 132.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,FindAndClaimOwnershipAsync,The length of the statement  "            // partitions it owns.  When an event processor goes down and it has only expired ownership' it will not be taken into consideration " is 132.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,FindAndClaimOwnershipAsync,The length of the statement  "            // The minimum owned partitions count is the minimum amount of partitions every event processor needs to own when the distribution " is 130.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,FindAndClaimOwnershipAsync,The length of the statement  "            // is balanced.  If n = minimumOwnedPartitionsCount' a balanced distribution will only have processors that own n or n + 1 partitions " is 133.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,FindAndClaimOwnershipAsync,The length of the statement  "            // each.  We can guarantee the partition distribution has at least one key' which corresponds to this event processor instance' even " is 132.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,FindAndClaimOwnershipAsync,The length of the statement  "            // The first one is when we are below the minimum amount of owned partitions.  There's nothing more to check' as we need to claim more " is 134.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,FindAndClaimOwnershipAsync,The length of the statement  "            // The second case is a bit tricky.  Sometimes the claim must be performed by an event processor that already has reached the minimum " is 133.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,FindAndClaimOwnershipAsync,The length of the statement  "            // amount of ownership.  This may happen' for instance' when we have 13 partitions and 3 processors' each of them owning 4 partitions. " is 134.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,FindAndClaimOwnershipAsync,The length of the statement  "            // The minimum amount of partitions per processor is' in fact' 4' but in this example we still have 1 orphan partition to claim.  To " is 132.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,FindAndClaimOwnershipAsync,The length of the statement  "            // avoid overlooking this kind of situation' we may want to claim an ownership when we have exactly the minimum amount of ownership' " is 132.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,FindAndClaimOwnershipAsync,The length of the statement  "                // Only try to steal partitions if there are no unclaimed partitions left.  At first' only processors that have exceeded the " is 124.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,FindAndClaimOwnershipAsync,The length of the statement  "                // Here's the important part.  If there are no processors that have exceeded the maximum owned partition count allowed' we may " is 126.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,FindAndClaimOwnershipAsync,The length of the statement  "                // need to steal from the processors that have exactly the maximum amount.  If this instance is below the minimum count' then " is 125.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,FindAndClaimOwnershipAsync,The length of the statement  "                // we have no choice as we need to enforce balancing.  Otherwise' leave it as it is because the distribution wouldn't change. " is 125.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,StartPartitionProcessingAsync,The length of the statement  "                availableCheckpoints = await StorageManager.ListCheckpointsAsync(FullyQualifiedNamespace' EventHubName' ConsumerGroup' cancellationToken).ConfigureAwait(false); " is 160.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,ClaimOwnershipAsync,The length of the statement  "            // We need the eTag from the most recent ownership of this partition' even if it's expired.  We want to keep the offset and " is 123.
Long Statement,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,ClaimOwnershipAsync,The length of the statement  "                claimedOwnership = await StorageManager.ClaimOwnershipAsync(new List<PartitionOwnership> { newOwnership }' cancellationToken).ConfigureAwait(false); " is 148.
Long Statement,Azure.Messaging.EventHubs.Processor,BlobsCheckpointStore,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\Storage\BlobsCheckpointStore.cs,ListOwnershipAsync,The length of the statement  "            var prefix = string.Format(OwnershipPrefix' fullyQualifiedNamespace.ToLower()' eventHubName.ToLower()' consumerGroup.ToLower()); " is 128.
Long Statement,Azure.Messaging.EventHubs.Processor,BlobsCheckpointStore,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\Storage\BlobsCheckpointStore.cs,ListOwnershipAsync,The length of the statement  "                await foreach (BlobItem blob in ContainerClient.GetBlobsAsync(traits: BlobTraits.Metadata' prefix: prefix' cancellationToken: listOwnershipToken).ConfigureAwait(false)) " is 168.
Long Statement,Azure.Messaging.EventHubs.Processor,BlobsCheckpointStore,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\Storage\BlobsCheckpointStore.cs,ClaimOwnershipAsync,The length of the statement  "                var blobName = string.Format(OwnershipPrefix + ownership.PartitionId' ownership.FullyQualifiedNamespace.ToLower()' ownership.EventHubName.ToLower()' ownership.ConsumerGroup.ToLower()); " is 184.
Long Statement,Azure.Messaging.EventHubs.Processor,BlobsCheckpointStore,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\Storage\BlobsCheckpointStore.cs,ClaimOwnershipAsync,The length of the statement  "                                return await blobClient.UploadAsync(blobContent' metadata: metadata' conditions: blobRequestConditions' cancellationToken: uploadToken).ConfigureAwait(false); " is 158.
Long Statement,Azure.Messaging.EventHubs.Processor,BlobsCheckpointStore,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\Storage\BlobsCheckpointStore.cs,ClaimOwnershipAsync,The length of the statement  "                catch (RequestFailedException ex) when (ex.ErrorCode == BlobErrorCode.ContainerNotFound || ex.ErrorCode == BlobErrorCode.BlobNotFound) " is 134.
Long Statement,Azure.Messaging.EventHubs.Processor,BlobsCheckpointStore,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\Storage\BlobsCheckpointStore.cs,ListCheckpointsAsync,The length of the statement  "            var prefix = string.Format(CheckpointPrefix' fullyQualifiedNamespace.ToLower()' eventHubName.ToLower()' consumerGroup.ToLower()); " is 129.
Long Statement,Azure.Messaging.EventHubs.Processor,BlobsCheckpointStore,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\Storage\BlobsCheckpointStore.cs,ListCheckpointsAsync,The length of the statement  "                await foreach (BlobItem blob in ContainerClient.GetBlobsAsync(traits: BlobTraits.Metadata' prefix: prefix' cancellationToken: listCheckpointsToken).ConfigureAwait(false)) " is 170.
Long Statement,Azure.Messaging.EventHubs.Processor,BlobsCheckpointStore,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\Storage\BlobsCheckpointStore.cs,UpdateCheckpointAsync,The length of the statement  "            var blobName = string.Format(CheckpointPrefix + checkpoint.PartitionId' checkpoint.FullyQualifiedNamespace.ToLower()' checkpoint.EventHubName.ToLower()' checkpoint.ConsumerGroup.ToLower()); " is 189.
Long Statement,Azure.Messaging.EventHubs.Processor,BlobsCheckpointStore,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\Storage\BlobsCheckpointStore.cs,UpdateCheckpointAsync,The length of the statement  "                // TODO: Add log  - "Checkpoint with partition id = '{ checkpoint.PartitionId }' could not be updated because specified container does not exist." " is 146.
Long Statement,Azure.Messaging.EventHubs.Processor,BlobsCheckpointStore,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\Storage\BlobsCheckpointStore.cs,ApplyRetryPolicy,The length of the statement  "                    using var linkedTokenSource = CancellationTokenSource.CreateLinkedTokenSource(cancellationToken' timeoutTokenSource.Token); " is 123.
Long Statement,Azure.Core,Argument,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Core\Argument.cs,AssertNotEmptyOrWhiteSpace,The length of the statement  "                throw new ArgumentException($"The argument '{argumentName}' may not be empty or white-space' though it may be null."' argumentName); " is 132.
Long Statement,Azure.Core,Argument,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Core\Argument.cs,AssertNotTooLong,The length of the statement  "                throw new ArgumentOutOfRangeException(argumentName' $"The argument '{argumentName}' cannot exceed {maximumLength} characters."); " is 128.
Long Statement,Azure.Core,Argument,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Core\Argument.cs,AssertNotNegative,The length of the statement  "                throw new ArgumentOutOfRangeException(argumentName' $"Argument {argumentName} must be a non-negative timespan value. The provided value was {argumentValue}."); " is 159.
Long Statement,Azure.Core,Argument,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Core\Argument.cs,AssertAtLeast,The length of the statement  "                throw new ArgumentOutOfRangeException(argumentName' $"The value supplied must be greater than or equal to {minimumValue}."); " is 124.
Long Statement,Azure.Core,Argument,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Core\Argument.cs,AssertNotDisposed,The length of the statement  "                throw new ObjectDisposedException(targetName' string.Format(CultureInfo.CurrentCulture' Resources.ClosedInstanceCannotPerformOperation' targetName)); " is 149.
Long Statement,Azure.Core,Argument,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Core\Argument.cs,AssertNotClosed,The length of the statement  "                throw new EventHubsClientClosedException(targetName' string.Format(CultureInfo.CurrentCulture' Resources.ClosedInstanceCannotPerformOperation' targetName)); " is 156.
Long Statement,Azure.Messaging.EventHubs.Core,BasicRetryPolicy,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Core\BasicRetryPolicy.cs,CalculateRetryDelay,The length of the statement  "                EventHubsRetryMode.Fixed => CalculateFixedDelay(Options.Delay.TotalSeconds' baseJitterSeconds' RandomNumberGenerator.Value)' " is 124.
Long Statement,Azure.Messaging.EventHubs.Core,BasicRetryPolicy,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Core\BasicRetryPolicy.cs,CalculateRetryDelay,The length of the statement  "                EventHubsRetryMode.Exponential => CalculateExponentialDelay(attemptCount' Options.Delay.TotalSeconds' baseJitterSeconds' RandomNumberGenerator.Value)' " is 150.
Long Statement,Azure.Messaging.EventHubs.Core,BasicRetryPolicy,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Core\BasicRetryPolicy.cs,CalculateRetryDelay,The length of the statement  "                _ => throw new NotSupportedException(string.Format(CultureInfo.CurrentCulture' Resources.UnknownRetryMode' Options.Mode.ToString()))' " is 133.
Long Statement,Azure.Messaging.EventHubs.Diagnostics,EventDataInstrumentation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Diagnostics\EventDataInstrumentation.cs,TryExtractDiagnosticId,The length of the statement  "            if (eventData.Properties.TryGetValue(DiagnosticProperty.DiagnosticIdAttribute' out var objectId) && objectId is string stringId) " is 128.
Long Statement,Azure.Messaging.EventHubs.Authorization,SharedAccessSignature,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Authorization\SharedAccessSignature.cs,BuildSignature,The length of the statement  "                var signature = Convert.ToBase64String(hmac.ComputeHash(Encoding.UTF8.GetBytes($"{ encodedAudience }\n{ expiration }"))); " is 121.
Complex Conditional,Azure.Messaging.EventHubs.Core,BasicRetryPolicy,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Core\BasicRetryPolicy.cs,CalculateRetryDelay,The conditional expression  "(Options.MaximumRetries <= 0)                  || (Options.Delay == TimeSpan.Zero)                  || (Options.MaximumDelay == TimeSpan.Zero)                  || (attemptCount > Options.MaximumRetries)                  || (!ShouldRetryException(lastException))"  is complex.
Virtual Method Call from Constructor,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,EventProcessorClient,The constructor "EventProcessorClient" calls a virtual method "CreateStorageManager".
Virtual Method Call from Constructor,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,EventProcessorClient,The constructor "EventProcessorClient" calls a virtual method "CreateStorageManager".
Empty Catch Block,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,StopProcessingAsync,The method has an empty catch block.
Empty Catch Block,Azure.Messaging.EventHubs,EventProcessorClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\EventProcessorClient.cs,StopPartitionProcessingIfRunningAsync,The method has an empty catch block.
Empty Catch Block,Azure.Messaging.EventHubs.Processor,BlobsCheckpointStore,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\src\Storage\BlobsCheckpointStore.cs,ClaimOwnershipAsync,The method has an empty catch block.
Magic Number,Azure.Core.Pipeline,ActivityExtensions,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\src\Shared\DiagnosticScope.cs,SetW3CFormat,The following statement contains a magic number: s_setIdFormatMethod.Invoke(activity' new object[]{ 2 /* ActivityIdFormat.W3C */});
Magic Number,Azure.Core.Pipeline,ActivityExtensions,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\src\Shared\DiagnosticScope.cs,IsW3CFormat,The following statement contains a magic number: return (int)result == 2 /* ActivityIdFormat.W3C */;
