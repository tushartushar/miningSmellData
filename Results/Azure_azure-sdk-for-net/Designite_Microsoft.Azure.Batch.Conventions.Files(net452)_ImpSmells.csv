Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Microsoft.Azure.Batch.Conventions.Files.Utilities,ContainerNameUtils,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.Conventions.Files\src\Utilities\ContainerNameUtils.cs,,The length of the parameter MaxJobIdLengthInMungedContainerName is 35.
Long Identifier,Microsoft.Azure.Batch.Conventions.Files.Utilities,ContainerNameUtils,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.Conventions.Files\src\Utilities\ContainerNameUtils.cs,,The length of the parameter ForbiddenLeadingTrailingContainerNameChars is 42.
Long Statement,Microsoft.Azure.Batch.Conventions.Files,CloudJobExtensions,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.Conventions.Files\src\CloudJobExtensions.cs,PrepareOutputStorageAsync,The length of the statement  "            await jobOutputContainer.CreateIfNotExistsAsync(BlobContainerPublicAccessType.Off' null' null' cancellationToken).ConfigureAwait(false); " is 136.
Long Statement,Microsoft.Azure.Batch.Conventions.Files,StoragePath,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.Conventions.Files\src\StoragePath.cs,GetOutputAsync,The length of the statement  "            var blob = await _jobOutputContainer.GetBlobReferenceFromServerAsync(BlobName(kind' filePath)' null' null' null' cancellationToken).ConfigureAwait(false); " is 154.
Long Statement,Microsoft.Azure.Batch.Conventions.Files.Utilities,ContainerNameUtils,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.Conventions.Files\src\Utilities\ContainerNameUtils.cs,GetUnprefixedSafeContainerName,The length of the statement  "            jobId = jobId.ToLowerInvariant();  // it's safe to do this early as job ids cannot differ only by case' so the lower case job id is still a unique identifier " is 157.
Long Statement,Microsoft.Azure.Batch.Conventions.Files.Utilities,UrlUtils,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.Conventions.Files\src\Utilities\UrlUtils.cs,GetUrlValueSegment,The length of the statement  "            var containerSegmentIndex = segments.FindIndex(s => String.Equals(containerSegment' s' StringComparison.OrdinalIgnoreCase)); " is 124.
Empty Catch Block,Microsoft.Azure.Batch.Conventions.Files.Utilities,BlobUtils,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.Conventions.Files\src\Utilities\BlobUtils.cs,EnsureExistsAsync,The method has an empty catch block.
Magic Number,Microsoft.Azure.Batch.Conventions.Files.Utilities,ContainerNameUtils,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.Conventions.Files\src\Utilities\ContainerNameUtils.cs,ToHex,The following statement contains a magic number: var sb = new StringBuilder(bytes.Length * 2);
