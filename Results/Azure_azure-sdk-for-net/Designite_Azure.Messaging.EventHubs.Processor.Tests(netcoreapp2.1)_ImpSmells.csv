Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Azure.Messaging.EventHubs.Tests,EventDataExtensions,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\EventDataExtensions.cs,IsEquivalentTo,Cyclomatic complexity of the method is 13
Complex Method,Azure.Core.Tests,ClientDiagnosticListener,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\ClientDiagnosticListener.cs,OnNext,Cyclomatic complexity of the method is 9
Long Parameter List,Azure.Messaging.EventHubs.Processor.Tests,MockEventData,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Diagnostics\DiagnosticsTests.cs,MockEventData,The method has 7 parameters. Parameters: eventBody' properties' systemProperties' sequenceNumber' offset' enqueuedTime' partitionKey
Long Parameter List,Azure.Messaging.EventHubs.Processor.Tests,EventProcessorManager,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\EventProcessorManager.cs,EventProcessorManager,The method has 8 parameters. Parameters: consumerGroup' connectionString' partitionManager' clientOptions' onInitialize' onStop' onProcessEvent' onProcessError
Long Parameter List,Azure.Messaging.EventHubs.Processor.Tests,ShortWaitTimeMock,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\EventProcessorManager.cs,ShortWaitTimeMock,The method has 6 parameters. Parameters: partitionManager' consumerGroup' fullyQualifiedNamespace' eventHubName' connectionFactory' clientOptions
Long Parameter List,Azure.Messaging.EventHubs.Processor.Tests,MockPartitionOwnership,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\PartitionOwnershipExtensionsTests.cs,MockPartitionOwnership,The method has 7 parameters. Parameters: fullyQualifiedNamespace' eventHubName' consumerGroup' ownerIdentifier' partitionId' lastModifiedTime' eTag
Long Parameter List,Azure.Core.Testing,SyncAsyncPolicyTestBase,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\SyncAsyncPolicyTestBase.cs,SendRequestAsync,The method has 5 parameters. Parameters: transport' requestAction' policy' responseClassifier' bufferResponse
Long Parameter List,Azure.Core.Testing,SyncAsyncPolicyTestBase,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\SyncAsyncPolicyTestBase.cs,SendGetRequest,The method has 5 parameters. Parameters: transport' policy' responseClassifier' bufferResponse' uri
Long Identifier,Azure.Messaging.EventHubs.Processor.Tests,StorageScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\StorageScope.cs,,The length of the parameter InvalidContainerCharactersExpression is 36.
Long Identifier,Azure.Messaging.EventHubs.Tests,LiveResourceManager,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\LiveResourceManager.cs,,The length of the parameter RetryExponentialBackoffSeconds is 30.
Long Identifier,Azure.Messaging.EventHubs.Tests,TestCategory,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\TestCategory.cs,,The length of the parameter DisallowVisualStudioLiveUnitTesting is 35.
Long Identifier,Azure.Messaging.EventHubs.Tests,TestEnvironment,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\TestEnvironment.cs,,The length of the parameter EventHubsResourceGroupInstance is 30.
Long Identifier,Azure.Messaging.EventHubs.Tests,TestEnvironment,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\TestEnvironment.cs,,The length of the parameter FullyQualifiedNamespaceInstance is 31.
Long Identifier,Azure.Messaging.EventHubs.Tests,TestEnvironment,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\TestEnvironment.cs,,The length of the parameter EventHubsDefaultSharedAccessKey is 31.
Long Identifier,Azure.Core.Testing,ClientTestBase,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\ClientTestBase.cs,,The length of the parameter s_diagnosticScopeValidatingInterceptor is 38.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,BlobPartitionManagerCanListOwnership,The length of the statement  "                Assert.That(async () => await checkpointStore.ListOwnershipAsync("namespace"' "eventHubName"' "consumerGroup"' default)' Throws.Nothing); " is 137.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,BlobPartitionManagerCanListCheckpoints,The length of the statement  "                Assert.That(async () => await checkpointStore.ListCheckpointsAsync("namespace"' "eventHubName"' "consumerGroup"' default)' Throws.Nothing); " is 139.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,ListOwnershipAsyncReturnsEmptyIEnumerableWhenThereAreNoOwnership,The length of the statement  "                IEnumerable<PartitionOwnership> ownership = await checkpointStore.ListOwnershipAsync("namespace"' "eventHubName"' "consumerGroup"' default); " is 140.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,ListCheckpointAsyncReturnsEmptyIEnumerableWhenThereAreNoCheckpoints,The length of the statement  "                IEnumerable<Checkpoint> checkpoints = await checkpointStore.ListCheckpointsAsync("namespace"' "eventHubName"' "consumerGroup"' default); " is 136.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,FirstOwnershipClaimSucceeds,The length of the statement  "                IEnumerable<PartitionOwnership> storedOwnershipList = await checkpointStore.ListOwnershipAsync("namespace"' "eventHubName"' "consumerGroup"' default); " is 150.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckReturnedEtagContainsSingleQuotes,The length of the statement  "                IEnumerable<PartitionOwnership> storedOwnershipList = await checkpointStore.ListOwnershipAsync("namespace"' "eventHubName"' "consumerGroup"' default); " is 150.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,OwnershipClaimFailsWhenETagIsInvalid,The length of the statement  "                IEnumerable<PartitionOwnership> storedOwnershipList = await checkpointStore.ListOwnershipAsync("namespace"' "eventHubName"' "consumerGroup"' default); " is 150.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,OwnershipClaimFailsWhenETagExistsAndOwnershipDoesNotExist,The length of the statement  "                IEnumerable<PartitionOwnership> storedOwnershipList = await checkpointStore.ListOwnershipAsync("namespace"' "eventHubName"' "consumerGroup"' default); " is 150.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,OwnershipClaimSucceedsWhenETagIsValid,The length of the statement  "                IEnumerable<PartitionOwnership> storedOwnershipList = await checkpointStore.ListOwnershipAsync("namespace"' "eventHubName"' "consumerGroup"' default); " is 150.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,ClaimOwnershipAsyncCanClaimMultipleOwnership,The length of the statement  "                IEnumerable<PartitionOwnership> storedOwnershipList = await checkpointStore.ListOwnershipAsync("namespace"' "eventHubName"' "consumerGroup"' default); " is 150.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,ClaimOwnershipAsyncCanClaimMultipleOwnership,The length of the statement  "                    Assert.That(ownership.IsEquivalentTo(ownershipList[index])' Is.True' $"Ownership of partition '{ ownership.PartitionId }' should be equivalent."); " is 146.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,ClaimOwnershipAsyncReturnsOnlyTheSuccessfullyClaimedOwnership,The length of the statement  "                IEnumerable<PartitionOwnership> claimedOwnershipList = await checkpointStore.ClaimOwnershipAsync(ownershipList' default); " is 121.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,ClaimOwnershipAsyncReturnsOnlyTheSuccessfullyClaimedOwnership,The length of the statement  "                IEnumerable<PartitionOwnership> expectedOwnership = ownershipList.Where(ownership => int.Parse(ownership.PartitionId) % 2 == 1); " is 128.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,ClaimOwnershipAsyncReturnsOnlyTheSuccessfullyClaimedOwnership,The length of the statement  "                    Assert.That(ownership.IsEquivalentTo(expectedOwnership.ElementAt(index))' Is.True' $"Ownership of partition '{ ownership.PartitionId }' should be equivalent."); " is 160.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,OwnershipClaimDoesNotInterfereWithOtherConsumerGroups,The length of the statement  "                Assert.That(async () => await checkpointStore.ClaimOwnershipAsync(ownershipList' default)' Throws.InstanceOf<RequestFailedException>()); " is 136.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,OwnershipClaimDoesNotInterfereWithOtherConsumerGroups,The length of the statement  "                IEnumerable<PartitionOwnership> storedOwnershipList = await checkpointStore.ListOwnershipAsync("namespace"' "eventHubName"' "consumerGroup1"' default); " is 151.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,OwnershipClaimDoesNotInterfereWithOtherEventHubs,The length of the statement  "                Assert.That(async () => await checkpointStore.ClaimOwnershipAsync(ownershipList' default)' Throws.InstanceOf<RequestFailedException>()); " is 136.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,OwnershipClaimDoesNotInterfereWithOtherEventHubs,The length of the statement  "                IEnumerable<PartitionOwnership> storedOwnershipList = await checkpointStore.ListOwnershipAsync("namespace"' "eventHubName1"' "consumerGroup"' default); " is 151.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,OwnershipClaimDoesNotInterfereWithOtherNamespaces,The length of the statement  "                Assert.That(async () => await checkpointStore.ClaimOwnershipAsync(ownershipList' default)' Throws.InstanceOf<RequestFailedException>()); " is 136.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,OwnershipClaimDoesNotInterfereWithOtherNamespaces,The length of the statement  "                var storedOwnershipList = await checkpointStore.ListOwnershipAsync("namespace1"' "eventHubName"' "consumerGroup"' default); " is 123.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,ListOwnershipFailsWhenContainerDoesNotExist,The length of the statement  "                Assert.That(async () => await checkpointStore.ListOwnershipAsync("namespace"' "eventHubName"' "consumerGroup"' default)' Throws.InstanceOf<RequestFailedException>()); " is 166.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,ListCheckpointsFailsWhenContainerDoesNotExist,The length of the statement  "                Assert.That(async () => await checkpointStore.ListCheckpointsAsync("namespace"' "eventHubName"' "consumerGroup"' default)' Throws.InstanceOf<RequestFailedException>()); " is 168.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateFailsWhenContainerDoesNotExist,The length of the statement  "                    ("namespace"' "eventHubName"' "consumerGroup"' "partitionId"' offset: 10' sequenceNumber: 20)' default)' Throws.InstanceOf<RequestFailedException>()); " is 150.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherConsumerGroups,The length of the statement  "                IEnumerable<Checkpoint> storedCheckpointsList1 = await checkpointStore.ListCheckpointsAsync("namespace"' "eventHubName"' "consumerGroup1"' default); " is 148.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherConsumerGroups,The length of the statement  "                IEnumerable<Checkpoint> storedCheckpointsList2 = await checkpointStore.ListCheckpointsAsync("namespace"' "eventHubName"' "consumerGroup2"' default); " is 148.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherEventHubs,The length of the statement  "                IEnumerable<Checkpoint> storedCheckpointsList1 = await checkpointStore.ListCheckpointsAsync("namespace"' "eventHubName1"' "consumerGroup"' default); " is 148.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherEventHubs,The length of the statement  "                IEnumerable<Checkpoint> storedCheckpointsList2 = await checkpointStore.ListCheckpointsAsync("namespace"' "eventHubName2"' "consumerGroup"' default); " is 148.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherNamespaces,The length of the statement  "                IEnumerable<Checkpoint> storedCheckpointsList1 = await checkpointStore.ListCheckpointsAsync("namespace1"' "eventHubName"' "consumerGroup"' default); " is 148.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherNamespaces,The length of the statement  "                IEnumerable<Checkpoint> storedCheckpointsList2 = await checkpointStore.ListCheckpointsAsync("namespace2"' "eventHubName"' "consumerGroup"' default); " is 148.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherPartitions,The length of the statement  "                IEnumerable<Checkpoint> storedCheckpointsList = await checkpointStore.ListCheckpointsAsync("namespace"' "eventHubName"' "consumerGroup"' default); " is 146.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,DiagnosticsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Diagnostics\DiagnosticsTests.cs,CheckpointManagerCreatesScope,The length of the statement  "            var eventProcessor = new Mock<EventProcessorClient>(Mock.Of<PartitionManager>()' "cg"' endpoint.Host' eventHubName' fakeFactory' null); " is 135.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,DiagnosticsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Diagnostics\DiagnosticsTests.cs,PartitionPumpCreatesScopeForEventProcessing,The length of the statement  "            //var connectionMock = new Mock<EventHubConnection>("namespace"' "eventHubName"' Mock.Of<TokenCredential>()' new EventHubConnectionOptions()); " is 142.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,DiagnosticsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Diagnostics\DiagnosticsTests.cs,PartitionPumpCreatesScopeForEventProcessing,The length of the statement  "            //connectionMock.Setup(c => c.CreateTransportConsumer("cg"' "pid"' It.IsAny<EventPosition>()' It.IsAny<EventHubsRetryPolicy>()' It.IsAny<bool>()' It.IsAny<long?>()' It.IsAny<uint?>())).Returns(consumerMock.Object); " is 214.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,DiagnosticsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Diagnostics\DiagnosticsTests.cs,PartitionPumpCreatesScopeForEventProcessing,The length of the statement  "            var manager = new PartitionPump(connectionMock.Object' "cg"' new PartitionContext("eventHubName"' "pid")' EventPosition.Earliest' processEventAsync' new EventProcessorClientOptions()); " is 184.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,DiagnosticsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Diagnostics\DiagnosticsTests.cs,PartitionPumpCreatesScopeForEventProcessing,The length of the statement  "            // TODO: figure out why an exception is being thrown. The problem has always existed' but now the Pump won't swallow exceptions " is 127.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,DiagnosticsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Diagnostics\DiagnosticsTests.cs,PartitionPumpCreatesScopeForEventProcessing,The length of the statement  "            //Assert.That(scope.Activity.Tags' Has.One.EqualTo(new KeyValuePair<string' string>(DiagnosticProperty.KindAttribute' DiagnosticProperty.ServerKind))' "The activities tag should be server."); " is 191.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,EventProcessorManager,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\EventProcessorManager.cs,WaitStabilization,The length of the statement  "                    .Where(ownership => DateTimeOffset.UtcNow.Subtract(ownership.LastModifiedTime.Value) < ShortWaitTimeMock.ShortOwnershipExpiration) " is 130.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,EventProcessorManager,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\EventProcessorManager.cs,WaitStabilization,The length of the statement  "                    // Wait a load balance update cycle before the next verification.  Give up if the whole process takes more than 1 minute. " is 121.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorage,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorage.cs,UpdateCheckpointAsync,The length of the statement  "                var key = (checkpoint.FullyQualifiedNamespace' checkpoint.EventHubName' checkpoint.ConsumerGroup' checkpoint.PartitionId); " is 122.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,ListOwnershipAsyncReturnsEmptyIEnumerableWhenThereAreNoOwnership,The length of the statement  "            IEnumerable<PartitionOwnership> ownership = await partitionManager.ListOwnershipAsync("namespace"' "eventHubName"' "consumerGroup"); " is 132.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,FirstOwnershipClaimSucceeds,The length of the statement  "            IEnumerable<PartitionOwnership> storedOwnership = await partitionManager.ListOwnershipAsync("namespace"' "eventHubName"' "consumerGroup"); " is 138.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,OwnershipClaimFailsWhenETagIsInvalid,The length of the statement  "            IEnumerable<PartitionOwnership> storedOwnership = await partitionManager.ListOwnershipAsync("namespace"' "eventHubName"' "consumerGroup"); " is 138.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,OwnershipClaimSucceedsWhenETagIsValid,The length of the statement  "            IEnumerable<PartitionOwnership> storedOwnership = await partitionManager.ListOwnershipAsync("namespace"' "eventHubName"' "consumerGroup"); " is 138.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,ClaimOwnershipAsyncCanClaimMultipleOwnership,The length of the statement  "            IEnumerable<PartitionOwnership> storedOwnership = await partitionManager.ListOwnershipAsync("namespace"' "eventHubName"' "consumerGroup"); " is 138.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,ClaimOwnershipAsyncReturnsOnlyTheSuccessfullyClaimedOwnership,The length of the statement  "            Assert.That(claimedOwnership.OrderBy(ownership => int.Parse(ownership.PartitionId)).SequenceEqual(ownershipList.Where(ownership => int.Parse(ownership.PartitionId) % 2 == 1))' Is.True); " is 185.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,OwnershipClaimDoesNotInterfereWithOtherConsumerGroups,The length of the statement  "            IEnumerable<PartitionOwnership> storedOwnership1 = await partitionManager.ListOwnershipAsync("namespace"' "eventHubName"' "consumerGroup1"); " is 140.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,OwnershipClaimDoesNotInterfereWithOtherConsumerGroups,The length of the statement  "            IEnumerable<PartitionOwnership> storedOwnership2 = await partitionManager.ListOwnershipAsync("namespace"' "eventHubName"' "consumerGroup2"); " is 140.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,OwnershipClaimDoesNotInterfereWithOtherEventHubs,The length of the statement  "            IEnumerable<PartitionOwnership> storedOwnership1 = await partitionManager.ListOwnershipAsync("namespace"' "eventHubName1"' "consumerGroup"); " is 140.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,OwnershipClaimDoesNotInterfereWithOtherEventHubs,The length of the statement  "            IEnumerable<PartitionOwnership> storedOwnership2 = await partitionManager.ListOwnershipAsync("namespace"' "eventHubName2"' "consumerGroup"); " is 140.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,OwnershipClaimDoesNotInterfereWithOtherNamespaces,The length of the statement  "            IEnumerable<PartitionOwnership> storedOwnership1 = await partitionManager.ListOwnershipAsync("namespace1"' "eventHubName"' "consumerGroup"); " is 140.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,OwnershipClaimDoesNotInterfereWithOtherNamespaces,The length of the statement  "            IEnumerable<PartitionOwnership> storedOwnership2 = await partitionManager.ListOwnershipAsync("namespace2"' "eventHubName"' "consumerGroup"); " is 140.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherConsumerGroups,The length of the statement  "            IEnumerable<Checkpoint> storedCheckpointsList1 = await partitionManager.ListCheckpointsAsync("namespace"' "eventHubName"' "consumerGroup1"); " is 140.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherConsumerGroups,The length of the statement  "            IEnumerable<Checkpoint> storedCheckpointsList2 = await partitionManager.ListCheckpointsAsync("namespace"' "eventHubName"' "consumerGroup2"); " is 140.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherEventHubs,The length of the statement  "            IEnumerable<Checkpoint> storedCheckpointsList1 = await partitionManager.ListCheckpointsAsync("namespace"' "eventHubName1"' "consumerGroup"); " is 140.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherEventHubs,The length of the statement  "            IEnumerable<Checkpoint> storedCheckpointsList2 = await partitionManager.ListCheckpointsAsync("namespace"' "eventHubName2"' "consumerGroup"); " is 140.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherNamespaces,The length of the statement  "            IEnumerable<Checkpoint> storedCheckpointsList1 = await partitionManager.ListCheckpointsAsync("namespace1"' "eventHubName"' "consumerGroup"); " is 140.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherNamespaces,The length of the statement  "            IEnumerable<Checkpoint> storedCheckpointsList2 = await partitionManager.ListCheckpointsAsync("namespace2"' "eventHubName"' "consumerGroup"); " is 140.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherPartitions,The length of the statement  "            IEnumerable<Checkpoint> storedCheckpointsList = await partitionManager.ListCheckpointsAsync("namespace"' "eventHubName"' "consumerGroup"); " is 138.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,PartitionOwnershipExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\PartitionOwnershipExtensionsTests.cs,IsEquivalentToDetectsFullyQualifiedNamespace,The length of the statement  "            var first = new MockPartitionOwnership("namespace1"' "eventHubName"' "consumerGroup"' "ownerIdentifier"' "partitionId"); " is 120.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,PartitionOwnershipExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\PartitionOwnershipExtensionsTests.cs,IsEquivalentToDetectsFullyQualifiedNamespace,The length of the statement  "            var second = new MockPartitionOwnership("namespace2"' "eventHubName"' "consumerGroup"' "ownerIdentifier"' "partitionId"); " is 121.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,PartitionOwnershipExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\PartitionOwnershipExtensionsTests.cs,IsEquivalentToDetectsEventHubName,The length of the statement  "            var first = new MockPartitionOwnership("namespace"' "eventHubName1"' "consumerGroup"' "ownerIdentifier"' "partitionId"); " is 120.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,PartitionOwnershipExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\PartitionOwnershipExtensionsTests.cs,IsEquivalentToDetectsEventHubName,The length of the statement  "            var second = new MockPartitionOwnership("namespace"' "eventHubName2"' "consumerGroup"' "ownerIdentifier"' "partitionId"); " is 121.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,PartitionOwnershipExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\PartitionOwnershipExtensionsTests.cs,IsEquivalentToDetectsConsumerGroup,The length of the statement  "            var first = new MockPartitionOwnership("namespace"' "eventHubName"' "consumerGroup1"' "ownerIdentifier"' "partitionId"); " is 120.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,PartitionOwnershipExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\PartitionOwnershipExtensionsTests.cs,IsEquivalentToDetectsConsumerGroup,The length of the statement  "            var second = new MockPartitionOwnership("namespace"' "eventHubName"' "consumerGroup2"' "ownerIdentifier"' "partitionId"); " is 121.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,PartitionOwnershipExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\PartitionOwnershipExtensionsTests.cs,IsEquivalentToDetectsOwnerIdentifier,The length of the statement  "            var first = new MockPartitionOwnership("namespace"' "eventHubName"' "consumerGroup"' "ownerIdentifier1"' "partitionId"); " is 120.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,PartitionOwnershipExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\PartitionOwnershipExtensionsTests.cs,IsEquivalentToDetectsOwnerIdentifier,The length of the statement  "            var second = new MockPartitionOwnership("namespace"' "eventHubName"' "consumerGroup"' "ownerIdentifier2"' "partitionId"); " is 121.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,PartitionOwnershipExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\PartitionOwnershipExtensionsTests.cs,IsEquivalentToDetectsPartitionId,The length of the statement  "            var first = new MockPartitionOwnership("namespace"' "eventHubName"' "consumerGroup"' "ownerIdentifier"' "partitionId1"); " is 120.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,PartitionOwnershipExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\PartitionOwnershipExtensionsTests.cs,IsEquivalentToDetectsPartitionId,The length of the statement  "            var second = new MockPartitionOwnership("namespace"' "eventHubName"' "consumerGroup"' "ownerIdentifier"' "partitionId2"); " is 121.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,PartitionOwnershipExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\PartitionOwnershipExtensionsTests.cs,IsEquivalentToDetectsLastModifiedTime,The length of the statement  "            var first = new MockPartitionOwnership("namespace"' "eventHubName"' "consumerGroup"' "ownerIdentifier"' "partitionId"' lastModifiedTime: DateTimeOffset.Parse("1975-04-04T00:00:00Z")); " is 183.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,PartitionOwnershipExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\PartitionOwnershipExtensionsTests.cs,IsEquivalentToDetectsLastModifiedTime,The length of the statement  "            var second = new MockPartitionOwnership("namespace"' "eventHubName"' "consumerGroup"' "ownerIdentifier"' "partitionId"' lastModifiedTime: DateTimeOffset.Parse("1975-04-04T01:00:00Z")); " is 184.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,PartitionOwnershipExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\PartitionOwnershipExtensionsTests.cs,IsEquivalentToDetectsLastModifiedTime,The length of the statement  "            var third = new MockPartitionOwnership("namespace"' "eventHubName"' "consumerGroup"' "ownerIdentifier"' "partitionId"' lastModifiedTime: null); " is 143.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,PartitionOwnershipExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\PartitionOwnershipExtensionsTests.cs,IsEquivalentToDetectsETag,The length of the statement  "            var first = new MockPartitionOwnership("namespace"' "eventHubName"' "consumerGroup"' "ownerIdentifier"' "partitionId"' eTag: "eTag1"); " is 134.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,PartitionOwnershipExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\PartitionOwnershipExtensionsTests.cs,IsEquivalentToDetectsETag,The length of the statement  "            var second = new MockPartitionOwnership("namespace"' "eventHubName"' "consumerGroup"' "ownerIdentifier"' "partitionId"' eTag: "eTag2"); " is 135.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,PartitionOwnershipExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\PartitionOwnershipExtensionsTests.cs,IsEquivalentToDetectsEqualPartitionOwnership,The length of the statement  "            var first = new MockPartitionOwnership("namespace"' "eventHubName"' "consumerGroup"' "ownerIdentifier"' "partitionId"' DateTimeOffset.Parse("1975-04-04T00:00:00Z")' "eTag"); " is 173.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,PartitionOwnershipExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\PartitionOwnershipExtensionsTests.cs,IsEquivalentToDetectsEqualPartitionOwnership,The length of the statement  "            var second = new MockPartitionOwnership("namespace"' "eventHubName"' "consumerGroup"' "ownerIdentifier"' "partitionId"' DateTimeOffset.Parse("1975-04-04T00:00:00Z")' "eTag"); " is 174.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,StorageScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\StorageScope.cs,DisposeAsync,The length of the statement  "            var client = new StorageManagementClient(new TokenCredentials(token)) { SubscriptionId = TestEnvironment.EventHubsSubscription }; " is 129.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,StorageScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\StorageScope.cs,DisposeAsync,The length of the statement  "                await ResourceManager.CreateRetryPolicy().ExecuteAsync(() => client.BlobContainers.DeleteAsync(resourceGroup' storageAccount' ContainerName)); " is 142.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,StorageScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\StorageScope.cs,CreateAsync,The length of the statement  "            using (var client = new StorageManagementClient(new TokenCredentials(token)) { SubscriptionId = TestEnvironment.EventHubsSubscription }) " is 136.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,StorageScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\StorageScope.cs,CreateAsync,The length of the statement  "                BlobContainer container = await ResourceManager.CreateRetryPolicy().ExecuteAsync(() => client.BlobContainers.CreateAsync(resourceGroup' storageAccount' CreateName()' PublicAccess.None)); " is 186.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,StorageScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\StorageScope.cs,CreateStorageAccountAsync,The length of the statement  "                var parameters = new StorageAccountCreateParameters(sku' Kind.BlobStorage' location: location' tags: ResourceManager.GenerateTags()' accessTier: AccessTier.Hot); " is 161.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,StorageScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\StorageScope.cs,CreateStorageAccountAsync,The length of the statement  "                StorageAccount storageAccount = await ResourceManager.CreateRetryPolicy<StorageAccount>().ExecuteAsync(() => client.StorageAccounts.CreateAsync(resourceGroup' CreateName()' parameters)); " is 186.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,StorageScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\StorageScope.cs,CreateStorageAccountAsync,The length of the statement  "                StorageAccountListKeysResult storageKeys = await ResourceManager.CreateRetryPolicy<StorageAccountListKeysResult>().ExecuteAsync(() => client.StorageAccounts.ListKeysAsync(resourceGroup' storageAccount.Name)); " is 208.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,StorageScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\StorageScope.cs,CreateStorageAccountAsync,The length of the statement  "                return new StorageProperties(storageAccount.Name' $"DefaultEndpointsProtocol=https;AccountName={ storageAccount.Name };AccountKey={ storageKeys.Keys[0].Value };EndpointSuffix=core.windows.net"); " is 194.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,StorageScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\StorageScope.cs,DeleteStorageAccountAsync,The length of the statement  "                await ResourceManager.CreateRetryPolicy().ExecuteAsync(() => client.StorageAccounts.DeleteAsync(resourceGroup' accountName)); " is 125.
Long Statement,Azure.Messaging.EventHubs.Processor.Tests,SamplesLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Samples\SamplesLiveTests.cs,SmokeTestASample,The length of the statement  "                Assert.That(async () => await sample.RunAsync(eventHubsConnectionString' eventHubScope.EventHubName' storageConnectionString' storageScope.ContainerName)' Throws.Nothing); " is 171.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,StartAsyncCallsPartitionProcessorInitializeAsync,The length of the statement  "                        Assert.That(initializeCalls.TryGetValue(partitionId' out var calls)' Is.True' $"{ partitionId }: InitializeAsync should have been called."); " is 140.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,StopAsyncCallsPartitionProcessorCloseAsyncWithShutdownReason,The length of the statement  "                        Assert.That(closeCalls.TryGetValue(partitionId' out var calls)' Is.True' $"{ partitionId }: CloseAsync should have been called."); " is 130.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,StopAsyncCallsPartitionProcessorCloseAsyncWithShutdownReason,The length of the statement  "                        Assert.That(stopReasons.TryGetValue(partitionId' out ProcessingStoppedReason reason)' Is.True' $"{ partitionId }: processing stopped reason should have been set."); " is 164.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,StopAsyncCallsPartitionProcessorCloseAsyncWithShutdownReason,The length of the statement  "                        Assert.That(reason' Is.EqualTo(ProcessingStoppedReason.Shutdown)' $"{ partitionId }: unexpected processing stopped reason."); " is 125.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,PartitionProcessorProcessEventsAsyncReceivesAllEvents,The length of the statement  "                        Assert.That(allReceivedEvents.TryGetValue(partitionId' out List<EventData> partitionReceivedEvents)' Is.True' $"{ partitionId }: there should have been a set of events received."); " is 180.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,PartitionProcessorProcessEventsAsyncReceivesAllEvents,The length of the statement  "                        Assert.That(partitionReceivedEvents.Count' Is.EqualTo(expectedEvents[partitionId].Count)' $"{ partitionId }: amount of received events should match."); " is 151.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,PartitionProcessorProcessEventsAsyncReceivesAllEvents,The length of the statement  "                            Assert.That(receivedEvent.IsEquivalentTo(expectedEvents[partitionId][index])' Is.True' $"{ partitionId }: the received event at index { index } did not match the sent set of events."); " is 184.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,PartitionProcessorCanCreateACheckpoint,The length of the statement  "                    await using (var consumer = new EventHubConsumerClient(EventHubConsumerClient.DefaultConsumerGroupName' connectionString)) " is 122.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,PartitionProcessorCanCreateACheckpoint,The length of the statement  "                    IEnumerable<PartitionOwnership> ownershipEnumerable = await partitionManager.ListOwnershipAsync(connection.FullyQualifiedNamespace' connection.EventHubName' EventHubConsumerClient.DefaultConsumerGroupName); " is 206.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,EventProcessorWaitsMaximumWaitTimeForEvents,The length of the statement  "                            Assert.That(elapsedTime' Is.GreaterThan(maximumWaitTimeInSecs - 0.1)' $"{ partitionId }: elapsed time between indexes { index - 1 } and { index } was too short."); " is 163.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,EventProcessorWaitsMaximumWaitTimeForEvents,The length of the statement  "                            Assert.That(elapsedTime' Is.LessThan(maximumWaitTimeInSecs + 5)' $"{ partitionId }: elapsed time between indexes { index - 1 } and { index } was too long."); " is 157.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientOptionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientOptionsTests.cs,CloneProducesACopy,The length of the statement  "            Assert.That(clone.TrackLastEnqueuedEventProperties' Is.EqualTo(options.TrackLastEnqueuedEventProperties)' "The tracking of last event information of the clone should match."); " is 175.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientOptionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientOptionsTests.cs,CloneProducesACopy,The length of the statement  "            Assert.That(clone.MaximumWaitTime' Is.EqualTo(options.MaximumWaitTime)' "The maximum wait time of the clone should match."); " is 124.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientOptionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientOptionsTests.cs,CloneProducesACopy,The length of the statement  "            Assert.That(clone.ConnectionOptions.TransportType' Is.EqualTo(options.ConnectionOptions.TransportType)' "The connection options of the clone should copy properties."); " is 167.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientOptionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientOptionsTests.cs,CloneProducesACopy,The length of the statement  "            Assert.That(clone.ConnectionOptions' Is.Not.SameAs(options.ConnectionOptions)' "The connection options of the clone should be a copy' not the same instance."); " is 159.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientOptionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientOptionsTests.cs,CloneProducesACopy,The length of the statement  "            Assert.That(clone.RetryOptions.IsEquivalentTo(options.RetryOptions)' Is.True' "The retry options of the clone should be considered equal."); " is 140.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientOptionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientOptionsTests.cs,CloneProducesACopy,The length of the statement  "            Assert.That(clone.RetryOptions' Is.Not.SameAs(options.RetryOptions)' "The retry options of the clone should be a copy' not the same instance."); " is 144.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientOptionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientOptionsTests.cs,MaximumWaitTimeIsValidated,The length of the statement  "            Assert.That(() => options.MaximumWaitTime = TimeSpan.FromMilliseconds(timeSpanDelta)' Throws.InstanceOf<ArgumentOutOfRangeException>()); " is 136.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorCreatesDefaultOptionsCases,The length of the statement  "            yield return new object[] { new EventProcessorClient(Mock.Of<BlobContainerClient>()' "consumerGroup"' connectionString)' "connection string with default options" }; " is 164.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorCreatesDefaultOptionsCases,The length of the statement  "            yield return new object[] { new EventProcessorClient(Mock.Of<BlobContainerClient>()' "consumerGroup"' connectionString' default(EventProcessorClientOptions))' "connection string with explicit null options" }; " is 208.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorCreatesDefaultOptionsCases,The length of the statement  "            yield return new object[] { new EventProcessorClient(Mock.Of<BlobContainerClient>()' "consumerGroup"' "namespace"' "hub"' credential.Object)' "namespace with default options" }; " is 177.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorCreatesDefaultOptionsCases,The length of the statement  "            yield return new object[] { new EventProcessorClient(Mock.Of<BlobContainerClient>()' "consumerGroup"' "namespace"' "hub"' credential.Object' default(EventProcessorClientOptions))' "namespace with explicit null options" }; " is 221.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorValidatesTheConsumerGroup,The length of the statement  "            Assert.That(() => new EventProcessorClient(Mock.Of<BlobContainerClient>()' consumerGroup' "dummyConnection"' new EventProcessorClientOptions())' Throws.InstanceOf<ArgumentException>()' "The connection string constructor should validate the consumer group."); " is 258.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorValidatesTheConsumerGroup,The length of the statement  "            Assert.That(() => new EventProcessorClient(Mock.Of<BlobContainerClient>()' consumerGroup' "dummyNamespace"' "dummyEventHub"' credential.Object' new EventProcessorClientOptions())' Throws.InstanceOf<ArgumentException>()' "The namespace constructor should validate the consumer group."); " is 285.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorValidatesTheBlobContainerClient,The length of the statement  "            var fakeConnection = "Endpoint=sb://not-real.servicebus.windows.net/;SharedAccessKeyName=DummyKey;SharedAccessKey=[not_real];EntityPath=fake"; " is 142.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorValidatesTheBlobContainerClient,The length of the statement  "            Assert.That(() => new EventProcessorClient(null' "consumerGroup"' fakeConnection' new EventProcessorClientOptions())' Throws.InstanceOf<ArgumentNullException>()' "The connection string constructor should validate the blob container client."); " is 242.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorValidatesTheBlobContainerClient,The length of the statement  "            Assert.That(() => new EventProcessorClient(null' "consumerGroup"' "dummyNamespace"' "dummyEventHub"' credential.Object' new EventProcessorClientOptions())' Throws.InstanceOf<ArgumentNullException>()' "The namespace constructor should validate the blob container client."); " is 272.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorValidatesTheConnectionString,The length of the statement  "            Assert.That(() => new EventProcessorClient(Mock.Of<BlobContainerClient>()' EventHubConsumerClient.DefaultConsumerGroupName' connectionString)' Throws.InstanceOf<ArgumentException>()' "The constructor without options should ensure a connection string."); " is 253.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorValidatesTheConnectionString,The length of the statement  "            Assert.That(() => new EventProcessorClient(Mock.Of<BlobContainerClient>()' EventHubConsumerClient.DefaultConsumerGroupName' connectionString' "dummy"' new EventProcessorClientOptions())' Throws.InstanceOf<ArgumentException>()' "The constructor with options should ensure a connection string."); " is 294.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorValidatesTheNamespace,The length of the statement  "            Assert.That(() => new EventProcessorClient(Mock.Of<BlobContainerClient>()' EventHubConsumerClient.DefaultConsumerGroupName' constructorArgument' "dummy"' credential.Object)' Throws.InstanceOf<ArgumentException>()); " is 214.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorValidatesTheEventHub,The length of the statement  "            Assert.That(() => new EventProcessorClient(Mock.Of<BlobContainerClient>()' EventHubConsumerClient.DefaultConsumerGroupName' "namespace"' constructorArgument' credential.Object)' Throws.InstanceOf<ArgumentException>()); " is 218.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorValidatesTheCredential,The length of the statement  "            Assert.That(() => new EventProcessorClient(Mock.Of<BlobContainerClient>()' EventHubConsumerClient.DefaultConsumerGroupName' "namespace"' "hubName"' default(TokenCredential))' Throws.ArgumentNullException); " is 205.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConnectionStringConstructorSetsTheRetryPolicy,The length of the statement  "            var options = new EventProcessorClientOptions { RetryOptions = new EventHubsRetryOptions { CustomRetryPolicy = expected } }; " is 124.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConnectionStringConstructorSetsTheRetryPolicy,The length of the statement  "            var processor = new EventProcessorClient(Mock.Of<BlobContainerClient>()' EventHubConsumerClient.DefaultConsumerGroupName' connectionString' options); " is 149.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,NamespaceConstructorSetsTheRetryPolicy,The length of the statement  "            var options = new EventProcessorClientOptions { RetryOptions = new EventHubsRetryOptions { CustomRetryPolicy = expected } }; " is 124.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,NamespaceConstructorSetsTheRetryPolicy,The length of the statement  "            var processor = new EventProcessorClient(Mock.Of<BlobContainerClient>()' EventHubConsumerClient.DefaultConsumerGroupName' "namespace"' "hubName"' credential.Object' options); " is 174.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorCreatesDefaultOptions,The length of the statement  "            Assert.That(consumerOptions' Is.Not.Null' $"The { constructorDescription } constructor should have set the processing consumer options."); " is 138.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorCreatesDefaultOptions,The length of the statement  "            Assert.That(readOptions' Is.Not.Null' $"The { constructorDescription } constructor should have set the processing read event options."); " is 136.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorCreatesDefaultOptions,The length of the statement  "            Assert.That(readOptions.TrackLastEnqueuedEventProperties' Is.EqualTo(defaultOptions.TrackLastEnqueuedEventProperties)' $"The { constructorDescription } constructor should default tracking of last event information."); " is 217.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorCreatesDefaultOptions,The length of the statement  "            Assert.That(readOptions.MaximumWaitTime' Is.EqualTo(defaultOptions.MaximumWaitTime)' $"The { constructorDescription } constructor should have set the correct maximum wait time."); " is 179.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorCreatesDefaultOptions,The length of the statement  "            Assert.That(consumerOptions.RetryOptions.IsEquivalentTo(defaultOptions.RetryOptions)' Is.True' $"The { constructorDescription } constructor should have set the correct retry options."); " is 185.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConstructorCreatesDefaultOptions,The length of the statement  "            Assert.That(connectionOptions.TransportType' Is.EqualTo(defaultOptions.ConnectionOptions.TransportType)' $"The { constructorDescription } constructor should have a default set of connection options."); " is 201.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConnectionStringConstructorCreatesTheProcessingConsumerOptions,The length of the statement  "            var eventProcessor = new EventProcessorClient(Mock.Of<BlobContainerClient>()' "consumerGroup"' "Endpoint=sb://somehost.com;SharedAccessKeyName=ABC;SharedAccessKey=123;EntityPath=somehub"' options); " is 197.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConnectionStringConstructorCreatesTheProcessingConsumerOptions,The length of the statement  "            Assert.That(consumerOptions.RetryOptions.IsEquivalentTo(options.RetryOptions)' Is.True' "The retry options of the processing consumer options should be considered equal."); " is 172.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConnectionStringConstructorCreatesTheProcessingConsumerOptions,The length of the statement  "            Assert.That(consumerOptions.RetryOptions' Is.Not.SameAs(options.RetryOptions)' "The constructor should have cloned the retry options."); " is 136.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,NamespaceConstructorCreatesTheProcessingConsumerOptions,The length of the statement  "            var eventProcessor = new EventProcessorClient(Mock.Of<BlobContainerClient>()' "consumerGroup"' "namespace"' "hub"' credential.Object' options); " is 143.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,NamespaceConstructorCreatesTheProcessingConsumerOptions,The length of the statement  "            Assert.That(consumerOptions.RetryOptions.IsEquivalentTo(options.RetryOptions)' Is.True' "The retry options of the processing consumer options should be considered equal."); " is 172.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,NamespaceConstructorCreatesTheProcessingConsumerOptions,The length of the statement  "            Assert.That(consumerOptions.RetryOptions' Is.Not.SameAs(options.RetryOptions)' "The constructor should have cloned the retry options."); " is 136.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConnectionStringConstructorCreatesTheProcessingReadEventOptions,The length of the statement  "            var eventProcessor = new EventProcessorClient(Mock.Of<BlobContainerClient>()' "consumerGroup"' "Endpoint=sb://somehost.com;SharedAccessKeyName=ABC;SharedAccessKey=123;EntityPath=somehub"' options); " is 197.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConnectionStringConstructorCreatesTheProcessingReadEventOptions,The length of the statement  "            Assert.That(readOptions.TrackLastEnqueuedEventProperties' Is.EqualTo(options.TrackLastEnqueuedEventProperties)' "The tracking of last event information of the processing read event options should match."); " is 205.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConnectionStringConstructorCreatesTheProcessingReadEventOptions,The length of the statement  "            Assert.That(readOptions.MaximumWaitTime' Is.EqualTo(options.MaximumWaitTime)' "The constructor should have set the correct maximum wait time."); " is 144.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,NamespaceConstructorCreatesTheProcessingReadEventOptions,The length of the statement  "            var eventProcessor = new EventProcessorClient(Mock.Of<BlobContainerClient>()' "consumerGroup"' "namespace"' "hub"' credential.Object' options); " is 143.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,NamespaceConstructorCreatesTheProcessingReadEventOptions,The length of the statement  "            Assert.That(readOptions.TrackLastEnqueuedEventProperties' Is.EqualTo(options.TrackLastEnqueuedEventProperties)' "The tracking of last event information of the processing read event options should match."); " is 205.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,NamespaceConstructorCreatesTheProcessingReadEventOptions,The length of the statement  "            Assert.That(readOptions.MaximumWaitTime' Is.EqualTo(options.MaximumWaitTime)' "The constructor should have set the correct maximum wait time."); " is 144.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConnectionStringConstructorClonesTheConnectionOptions,The length of the statement  "            var eventProcessor = new EventProcessorClient(Mock.Of<BlobContainerClient>()' "consumerGroup"' "Endpoint=sb://somehost.com;SharedAccessKeyName=ABC;SharedAccessKey=123;EntityPath=somehub"' options); " is 197.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConnectionStringConstructorClonesTheConnectionOptions,The length of the statement  "            Assert.That(connectionOptions.TransportType' Is.EqualTo(expectedTransportType)' $"The connection options should have been cloned."); " is 132.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,NamespaceConstructorClonesTheConnectionOptions,The length of the statement  "            var eventProcessor = new EventProcessorClient(Mock.Of<BlobContainerClient>()' "consumerGroup"' "namespace"' "hub"' credential.Object' options); " is 143.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,NamespaceConstructorClonesTheConnectionOptions,The length of the statement  "            Assert.That(connectionOptions.TransportType' Is.EqualTo(expectedTransportType)' $"The connection options should have been cloned."); " is 132.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConnectionStringConstructorSetsTheIdentifier,The length of the statement  "            var eventProcessor = new EventProcessorClient(Mock.Of<BlobContainerClient>()' "consumerGroup"' "Endpoint=sb://somehost.com;SharedAccessKeyName=ABC;SharedAccessKey=123;EntityPath=somehub"' options); " is 197.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,NamespaceConstructorSetsTheIdentifier,The length of the statement  "            var eventProcessor = new EventProcessorClient(Mock.Of<BlobContainerClient>()' "consumerGroup"' "namespace"' "hub"' credential.Object' options); " is 143.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConnectionStringConstructorCreatesTheIdentifierWhenNotSpecified,The length of the statement  "            var eventProcessor = new EventProcessorClient(Mock.Of<BlobContainerClient>()' "consumerGroup"' "Endpoint=sb://somehost.com;SharedAccessKeyName=ABC;SharedAccessKey=123;EntityPath=somehub"' options); " is 197.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,NamespaceConstructorCreatesTheIdentifierWhenNotSpecified,The length of the statement  "            var eventProcessor = new EventProcessorClient(Mock.Of<BlobContainerClient>()' "consumerGroup"' "namespace"' "hub"' credential.Object' options); " is 143.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConnectionStringConstructorCopiesTheIdentifier,The length of the statement  "            var eventProcessor = new EventProcessorClient(Mock.Of<BlobContainerClient>()' "consumerGroup"' "Endpoint=sb://somehost.com;SharedAccessKeyName=ABC;SharedAccessKey=123;EntityPath=somehub"' clientOptions); " is 203.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,NamespaceConstructorCopiesTheIdentifier,The length of the statement  "            var eventProcessor = new EventProcessorClient(Mock.Of<BlobContainerClient>()' "consumerGroup"' "namespace"' "hub"' credential.Object' clientOptions); " is 149.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,StartAsyncValidatesProcessEventsAsync,The length of the statement  "            var processor = new EventProcessorClient(Mock.Of<PartitionManager>()' "consumerGroup"' "namespace"' "eventHub"' () => new MockConnection()' default); " is 149.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,StartAsyncValidatesProcessEventsAsync,The length of the statement  "            Assert.That(async () => await processor.StartProcessingAsync()' Throws.InstanceOf<InvalidOperationException>().And.Message.Contains(nameof(EventProcessorClient.ProcessEventAsync))); " is 181.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,StartAsyncValidatesProcessExceptionAsync,The length of the statement  "            var processor = new EventProcessorClient(Mock.Of<PartitionManager>()' "consumerGroup"' "namespace"' "eventHub"' () => new MockConnection()' default); " is 149.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,StartAsyncValidatesProcessExceptionAsync,The length of the statement  "            Assert.That(async () => await processor.StartProcessingAsync()' Throws.InstanceOf<InvalidOperationException>().And.Message.Contains(nameof(EventProcessorClient.ProcessErrorAsync))); " is 181.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,StartAsyncStartsTheEventProcessorWhenProcessingHandlerPropertiesAreSet,The length of the statement  "            var mockProcessor = new Mock<EventProcessorClient>(Mock.Of<PartitionManager>()' "consumerGroup"' "namespace"' "eventHub"' Mock.Of<Func<EventHubConnection>>()' default); " is 168.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,HandlerPropertiesCannotBeSetWhenEventProcessorIsRunning,The length of the statement  "            var processor = new EventProcessorClient(Mock.Of<PartitionManager>()' "consumerGroup"' "namespace"' "eventHub"' () => new MockConnection()' default); " is 149.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,HandlerPropertiesCannotBeSetWhenEventProcessorIsRunning,The length of the statement  "            Assert.That(() => processor.PartitionInitializingAsync += eventArgs => Task.CompletedTask' Throws.InstanceOf<InvalidOperationException>()); " is 139.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,HandlerPropertiesCannotBeSetWhenEventProcessorIsRunning,The length of the statement  "            Assert.That(() => processor.PartitionClosingAsync += eventArgs => Task.CompletedTask' Throws.InstanceOf<InvalidOperationException>()); " is 134.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,HandlerPropertiesCannotBeSetWhenEventProcessorIsRunning,The length of the statement  "            Assert.That(() => processor.ProcessEventAsync += eventArgs => Task.CompletedTask' Throws.InstanceOf<InvalidOperationException>()); " is 130.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,HandlerPropertiesCannotBeSetWhenEventProcessorIsRunning,The length of the statement  "            Assert.That(() => processor.ProcessErrorAsync += eventArgs => Task.CompletedTask' Throws.InstanceOf<InvalidOperationException>()); " is 130.
Long Statement,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,HandlerPropertiesCanBeSetAfterEventProcessorHasStopped,The length of the statement  "            var processor = new EventProcessorClient(Mock.Of<PartitionManager>()' "consumerGroup"' "namespace"' "eventHub"' () => new MockConnection()' default); " is 149.
Long Statement,Azure.Messaging.EventHubs.Tests,EventHubScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\EventHubScope.cs,DisposeAsync,The length of the statement  "            var client = new EventHubManagementClient(new TokenCredentials(token)) { SubscriptionId = TestEnvironment.EventHubsSubscription }; " is 130.
Long Statement,Azure.Messaging.EventHubs.Tests,EventHubScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\EventHubScope.cs,DisposeAsync,The length of the statement  "                await ResourceManager.CreateRetryPolicy().ExecuteAsync(() => client.EventHubs.DeleteAsync(resourceGroup' eventHubNamespace' EventHubName)); " is 139.
Long Statement,Azure.Messaging.EventHubs.Tests,EventHubScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\EventHubScope.cs,CreateAsync,The length of the statement  "            using (var client = new EventHubManagementClient(new TokenCredentials(token)) { SubscriptionId = TestEnvironment.EventHubsSubscription }) " is 137.
Long Statement,Azure.Messaging.EventHubs.Tests,EventHubScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\EventHubScope.cs,CreateAsync,The length of the statement  "                eventHub = await ResourceManager.CreateRetryPolicy<Eventhub>().ExecuteAsync(() => client.EventHubs.CreateOrUpdateAsync(resourceGroup' eventHubNamespace' CreateName()' eventHub)); " is 178.
Long Statement,Azure.Messaging.EventHubs.Tests,EventHubScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\EventHubScope.cs,CreateAsync,The length of the statement  "                        return consumerPolicy.ExecuteAsync(() => client.ConsumerGroups.CreateOrUpdateAsync(resourceGroup' eventHubNamespace' eventHub.Name' groupName' group)); " is 151.
Long Statement,Azure.Messaging.EventHubs.Tests,EventHubScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\EventHubScope.cs,CreateNamespaceAsync,The length of the statement  "                var eventHubsNamespace = new EHNamespace(sku: new Sku("Standard"' "Standard"' 12)' tags: ResourceManager.GenerateTags()' isAutoInflateEnabled: true' maximumThroughputUnits: 20' location: location); " is 197.
Long Statement,Azure.Messaging.EventHubs.Tests,EventHubScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\EventHubScope.cs,CreateNamespaceAsync,The length of the statement  "                eventHubsNamespace = await ResourceManager.CreateRetryPolicy<EHNamespace>().ExecuteAsync(() => client.Namespaces.CreateOrUpdateAsync(resourceGroup' CreateName()' eventHubsNamespace)); " is 183.
Long Statement,Azure.Messaging.EventHubs.Tests,EventHubScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\EventHubScope.cs,CreateNamespaceAsync,The length of the statement  "                AccessKeys accessKey = await ResourceManager.CreateRetryPolicy<AccessKeys>().ExecuteAsync(() => client.Namespaces.ListKeysAsync(resourceGroup' eventHubsNamespace.Name' TestEnvironment.EventHubsDefaultSharedAccessKey)); " is 218.
Long Statement,Azure.Messaging.EventHubs.Tests,EventHubScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\EventHubScope.cs,DeleteNamespaceAsync,The length of the statement  "                await ResourceManager.CreateRetryPolicy().ExecuteAsync(() => client.Namespaces.DeleteAsync(resourceGroup' namespaceName)); " is 122.
Long Statement,Azure.Messaging.EventHubs.Tests,LiveResourceManager,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\LiveResourceManager.cs,QueryResourceGroupLocationAsync,The length of the statement  "            using (var client = new ResourceManagementClient(new TokenCredentials(accessToken)) { SubscriptionId = subscriptionId }) " is 120.
Long Statement,Azure.Messaging.EventHubs.Tests,LiveResourceManager,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\LiveResourceManager.cs,QueryResourceGroupLocationAsync,The length of the statement  "                ResourceGroup resourceGroup = await CreateRetryPolicy<ResourceGroup>().ExecuteAsync(() => client.ResourceGroups.GetAsync(resourceGroupName)); " is 141.
Long Statement,Azure.Messaging.EventHubs.Tests,TestEnvironment,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\TestEnvironment.cs,ReadAndVerifyEnvironmentVariable,The length of the statement  "                throw new InvalidOperationException($"The environment variable '{ variableName }' was not found or was not populated."); " is 120.
Long Statement,Azure.Core.Testing,AsyncValidatingStream,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\AsyncValidatingStream.cs,Validate,The length of the statement  "                throw new InvalidOperationException("All stream calls were expected to be " + (_isAsync ? "async" : "sync") + " but were " + (isAsync ? "async" : "sync")); " is 155.
Long Statement,Azure.Core.Testing,ClientTestBase,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\ClientTestBase.cs,InstrumentClient,The length of the statement  "                        ClientValidation<TClient>.ValidationException = new InvalidOperationException($"Client type contains public non-virtual async method {methodInfo.Name}"); " is 153.
Long Statement,Azure.Core.Testing,DiagnosticScopeValidatingInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\DiagnosticScopeValidatingInterceptor.cs,Intercept,The length of the statement  "                bool strict = !invocation.Method.GetCustomAttributes(true).Any(a => a.GetType().FullName == "Azure.Core.ForwardsClientCallsAttribute"); " is 135.
Long Statement,Azure.Core.Testing,DiagnosticScopeValidatingInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\DiagnosticScopeValidatingInterceptor.cs,Intercept,The length of the statement  "                        MethodInfo getResultMethod = getAwaiterMethod.ReturnType.GetMethod("GetResult"' BindingFlags.Instance | BindingFlags.Public); " is 125.
Long Statement,Azure.Core.Testing,DiagnosticScopeValidatingInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\DiagnosticScopeValidatingInterceptor.cs,Intercept,The length of the statement  "                            (string Key' object Value' DiagnosticListener Listener) e = diagnosticListener.Events.FirstOrDefault(e => e.Key == expectedEvent); " is 130.
Long Statement,Azure.Core.Testing,DiagnosticScopeValidatingInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\DiagnosticScopeValidatingInterceptor.cs,Intercept,The length of the statement  "                                throw new InvalidOperationException($"Expected diagnostic event not fired {expectedEvent} {Environment.NewLine}    fired events {string.Join("' "' diagnosticListener.Events)} {Environment.NewLine}    You may have forgotten to set your operationId to {expectedEvent} in {methodName} or applied the Azure.Core.ForwardsClientCallsAttribute to {methodName}."); " is 356.
Long Statement,Azure.Core.Testing,DiagnosticScopeValidatingInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\DiagnosticScopeValidatingInterceptor.cs,Intercept,The length of the statement  "                                throw new InvalidOperationException($"{e.Key} event was written into wrong DiagnosticSource {e.Listener.Name}' expected: {ns}"); " is 128.
Long Statement,Azure.Core.Testing,EnumValuesAttribute,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\EnumValuesAttribute.cs,GetMembersImpl,The length of the statement  "                    if (property.PropertyType == type && property.CanRead && !property.CanWrite && Includes(property.Name) && !Excludes(property.Name)) " is 131.
Long Statement,Azure.Core.Testing,UseSyncMethodsInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\UseSyncMethodsInterceptor.cs,Intercept,The length of the statement  "                throw new InvalidOperationException($"Unable to find a method with name {nonAsyncMethodName} and {string.Join<Type>("'"' parameterTypes)} parameters. " " is 151.
Long Statement,Azure.Core.Tests,ClientDiagnosticListener,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\ClientDiagnosticListener.cs,AssertScopeStarted,The length of the statement  "                                throw new InvalidOperationException($"Attribute {expectedAttribute} not found' existing attributes: {string.Join("'"' producedDiagnosticScope.Activity.Tags)}"); " is 160.
Complex Conditional,Azure.Messaging.EventHubs.Tests,EventDataExtensions,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\EventDataExtensions.cs,IsEquivalentTo,The conditional expression  "(instance.Offset != other.Offset)                      || (instance.EnqueuedTime != other.EnqueuedTime)                      || (instance.PartitionKey != other.PartitionKey)                      || (instance.SequenceNumber != other.SequenceNumber)"  is complex.
Complex Conditional,Azure.Core.Testing,EnumValuesAttribute,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\EnumValuesAttribute.cs,GetMembersImpl,The conditional expression  "property.PropertyType == type && property.CanRead && !property.CanWrite && Includes(property.Name) && !Excludes(property.Name)"  is complex.
Complex Conditional,Azure.Core.Testing,EnumValuesAttribute,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\EnumValuesAttribute.cs,GetMembersImpl,The conditional expression  "field.FieldType == type && (field.IsInitOnly || field.IsLiteral) && Includes(field.Name) && !Excludes(field.Name)"  is complex.
Complex Conditional,Azure.Core.Pipeline,TestFrameworkContentTypeUtilities,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\src\Shared\ContentTypeUtilities.cs,TryGetTextEncoding,The conditional expression  "contentType.StartsWith(textContentTypePrefix' StringComparison.OrdinalIgnoreCase) ||                  contentType.EndsWith(jsonSuffix' StringComparison.OrdinalIgnoreCase) ||                  contentType.EndsWith(xmlSuffix' StringComparison.OrdinalIgnoreCase) ||                  contentType.EndsWith(urlEncodedSuffix' StringComparison.OrdinalIgnoreCase)"  is complex.
Empty Catch Block,Azure.Messaging.EventHubs.Processor.Tests,StorageScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\StorageScope.cs,DisposeAsync,The method has an empty catch block.
Empty Catch Block,Azure.Messaging.EventHubs.Processor.Tests,TestRunFixture,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\TestRunFixture.cs,Teardown,The method has an empty catch block.
Empty Catch Block,Azure.Messaging.EventHubs.Processor.Tests,TestRunFixture,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\TestRunFixture.cs,Teardown,The method has an empty catch block.
Empty Catch Block,Azure.Messaging.EventHubs.Tests,EventHubScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\EventHubScope.cs,DisposeAsync,The method has an empty catch block.
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,BlobPartitionManagerCanUpdateCheckpoint,The following statement contains a magic number: var checkpoint = new Checkpoint("namespace"' "eventHubName"' "consumerGroup"' "partitionId"' 10' 20);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,BlobPartitionManagerCanUpdateCheckpoint,The following statement contains a magic number: var checkpoint = new Checkpoint("namespace"' "eventHubName"' "consumerGroup"' "partitionId"' 10' 20);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,OwnershipClaimSetsLastModifiedTimeAndETag,The following statement contains a magic number: Assert.That(ownership.LastModifiedTime.Value' Is.GreaterThan(DateTimeOffset.UtcNow.Subtract(TimeSpan.FromSeconds(5))));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,ClaimOwnershipAsyncCanClaimMultipleOwnership,The following statement contains a magic number: var ownershipCount = 5;
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,ClaimOwnershipAsyncReturnsOnlyTheSuccessfullyClaimedOwnership,The following statement contains a magic number: var ownershipCount = 5;
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,ClaimOwnershipAsyncReturnsOnlyTheSuccessfullyClaimedOwnership,The following statement contains a magic number: var expectedClaimedCount = ownershipCount / 2;
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,ClaimOwnershipAsyncReturnsOnlyTheSuccessfullyClaimedOwnership,The following statement contains a magic number: ownershipList.Add(                          new PartitionOwnership                          (                              "namespace"'                              "eventHubName"'                              "consumerGroup"'                              "ownerIdentifier"'                              partitionId: $"{i}"'                              eTag: i % 2 == 1 ? eTags[i] : null                          ));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,ClaimOwnershipAsyncReturnsOnlyTheSuccessfullyClaimedOwnership,The following statement contains a magic number: IEnumerable<PartitionOwnership> expectedOwnership = ownershipList.Where(ownership => int.Parse(ownership.PartitionId) % 2 == 1);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateFailsWhenContainerDoesNotExist,The following statement contains a magic number: Assert.That(async () => await checkpointStore.UpdateCheckpointAsync(new Checkpoint                      ("namespace"' "eventHubName"' "consumerGroup"' "partitionId"' offset: 10' sequenceNumber: 20)' default)' Throws.InstanceOf<RequestFailedException>());
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateFailsWhenContainerDoesNotExist,The following statement contains a magic number: Assert.That(async () => await checkpointStore.UpdateCheckpointAsync(new Checkpoint                      ("namespace"' "eventHubName"' "consumerGroup"' "partitionId"' offset: 10' sequenceNumber: 20)' default)' Throws.InstanceOf<RequestFailedException>());
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherConsumerGroups,The following statement contains a magic number: await checkpointStore.UpdateCheckpointAsync(new Checkpoint                      ("namespace"' "eventHubName"' "consumerGroup1"' "partitionId"' 10' 20)' default);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherConsumerGroups,The following statement contains a magic number: await checkpointStore.UpdateCheckpointAsync(new Checkpoint                      ("namespace"' "eventHubName"' "consumerGroup1"' "partitionId"' 10' 20)' default);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherConsumerGroups,The following statement contains a magic number: await checkpointStore.UpdateCheckpointAsync(new Checkpoint                      ("namespace"' "eventHubName"' "consumerGroup2"' "partitionId"' 10' 20)' default);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherConsumerGroups,The following statement contains a magic number: await checkpointStore.UpdateCheckpointAsync(new Checkpoint                      ("namespace"' "eventHubName"' "consumerGroup2"' "partitionId"' 10' 20)' default);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherEventHubs,The following statement contains a magic number: await checkpointStore.UpdateCheckpointAsync(new Checkpoint                      ("namespace"' "eventHubName1"' "consumerGroup"' "partitionId"' 10' 20)' default);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherEventHubs,The following statement contains a magic number: await checkpointStore.UpdateCheckpointAsync(new Checkpoint                      ("namespace"' "eventHubName1"' "consumerGroup"' "partitionId"' 10' 20)' default);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherEventHubs,The following statement contains a magic number: await checkpointStore.UpdateCheckpointAsync(new Checkpoint                      ("namespace"' "eventHubName2"' "consumerGroup"' "partitionId"' 10' 20)' default);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherEventHubs,The following statement contains a magic number: await checkpointStore.UpdateCheckpointAsync(new Checkpoint                      ("namespace"' "eventHubName2"' "consumerGroup"' "partitionId"' 10' 20)' default);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherNamespaces,The following statement contains a magic number: await checkpointStore.UpdateCheckpointAsync(new Checkpoint                      ("namespace1"' "eventHubName"' "consumerGroup"' "partitionId"' 10' 20)' default);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherNamespaces,The following statement contains a magic number: await checkpointStore.UpdateCheckpointAsync(new Checkpoint                      ("namespace1"' "eventHubName"' "consumerGroup"' "partitionId"' 10' 20)' default);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherNamespaces,The following statement contains a magic number: await checkpointStore.UpdateCheckpointAsync(new Checkpoint                      ("namespace2"' "eventHubName"' "consumerGroup"' "partitionId"' 10' 20)' default);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherNamespaces,The following statement contains a magic number: await checkpointStore.UpdateCheckpointAsync(new Checkpoint                      ("namespace2"' "eventHubName"' "consumerGroup"' "partitionId"' 10' 20)' default);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherPartitions,The following statement contains a magic number: await checkpointStore.UpdateCheckpointAsync(new Checkpoint                      ("namespace"' "eventHubName"' "consumerGroup"' "partitionId1"' 10' 20)' default);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherPartitions,The following statement contains a magic number: await checkpointStore.UpdateCheckpointAsync(new Checkpoint                      ("namespace"' "eventHubName"' "consumerGroup"' "partitionId1"' 10' 20)' default);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherPartitions,The following statement contains a magic number: await checkpointStore.UpdateCheckpointAsync(new Checkpoint                      ("namespace"' "eventHubName"' "consumerGroup"' "partitionId2"' 10' 20)' default);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherPartitions,The following statement contains a magic number: await checkpointStore.UpdateCheckpointAsync(new Checkpoint                      ("namespace"' "eventHubName"' "consumerGroup"' "partitionId2"' 10' 20)' default);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,BlobsCheckpointStoreLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\BlobsCheckpointStore\BlobsCheckpointStoreLiveTests.cs,CheckpointUpdateDoesNotInterfereWithOtherPartitions,The following statement contains a magic number: Assert.That(storedCheckpointsList.Count' Is.EqualTo(2));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,EventProcessorManager,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\EventProcessorManager.cs,EventProcessorManager,The following statement contains a magic number: ClientOptions.MaximumWaitTime = TimeSpan.FromSeconds(2);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,EventProcessorManager,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\EventProcessorManager.cs,WaitStabilization,The following statement contains a magic number: consecutiveStabilizedStatus < 10
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,ClaimOwnershipAsyncCanClaimMultipleOwnership,The following statement contains a magic number: var ownershipCount = 5;
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,ClaimOwnershipAsyncReturnsOnlyTheSuccessfullyClaimedOwnership,The following statement contains a magic number: var ownershipCount = 5;
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,ClaimOwnershipAsyncReturnsOnlyTheSuccessfullyClaimedOwnership,The following statement contains a magic number: var expectedClaimedCount = ownershipCount / 2;
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,ClaimOwnershipAsyncReturnsOnlyTheSuccessfullyClaimedOwnership,The following statement contains a magic number: ownershipList.Add(                      new PartitionOwnership                      (                          "namespace"'                          "eventHubName"'                          "consumerGroup"'                          "ownerIdentifier"'                          $"{ i }"'                          eTag: i % 2 == 1 ? eTags[i] : null                      ));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,ClaimOwnershipAsyncReturnsOnlyTheSuccessfullyClaimedOwnership,The following statement contains a magic number: Assert.That(claimedOwnership.OrderBy(ownership => int.Parse(ownership.PartitionId)).SequenceEqual(ownershipList.Where(ownership => int.Parse(ownership.PartitionId) % 2 == 1))' Is.True);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherConsumerGroups,The following statement contains a magic number: await partitionManager.UpdateCheckpointAsync(new Checkpoint                  ("namespace"' "eventHubName"' "consumerGroup1"' "partitionId"' 10' 20));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherConsumerGroups,The following statement contains a magic number: await partitionManager.UpdateCheckpointAsync(new Checkpoint                  ("namespace"' "eventHubName"' "consumerGroup1"' "partitionId"' 10' 20));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherConsumerGroups,The following statement contains a magic number: await partitionManager.UpdateCheckpointAsync(new Checkpoint                  ("namespace"' "eventHubName"' "consumerGroup2"' "partitionId"' 10' 20));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherConsumerGroups,The following statement contains a magic number: await partitionManager.UpdateCheckpointAsync(new Checkpoint                  ("namespace"' "eventHubName"' "consumerGroup2"' "partitionId"' 10' 20));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherEventHubs,The following statement contains a magic number: await partitionManager.UpdateCheckpointAsync(new Checkpoint                  ("namespace"' "eventHubName1"' "consumerGroup"' "partitionId"' 10' 20));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherEventHubs,The following statement contains a magic number: await partitionManager.UpdateCheckpointAsync(new Checkpoint                  ("namespace"' "eventHubName1"' "consumerGroup"' "partitionId"' 10' 20));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherEventHubs,The following statement contains a magic number: await partitionManager.UpdateCheckpointAsync(new Checkpoint                  ("namespace"' "eventHubName2"' "consumerGroup"' "partitionId"' 10' 20));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherEventHubs,The following statement contains a magic number: await partitionManager.UpdateCheckpointAsync(new Checkpoint                  ("namespace"' "eventHubName2"' "consumerGroup"' "partitionId"' 10' 20));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherNamespaces,The following statement contains a magic number: await partitionManager.UpdateCheckpointAsync(new Checkpoint                  ("namespace1"' "eventHubName"' "consumerGroup"' "partitionId"' 10' 20));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherNamespaces,The following statement contains a magic number: await partitionManager.UpdateCheckpointAsync(new Checkpoint                  ("namespace1"' "eventHubName"' "consumerGroup"' "partitionId"' 10' 20));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherNamespaces,The following statement contains a magic number: await partitionManager.UpdateCheckpointAsync(new Checkpoint                  ("namespace2"' "eventHubName"' "consumerGroup"' "partitionId"' 10' 20));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherNamespaces,The following statement contains a magic number: await partitionManager.UpdateCheckpointAsync(new Checkpoint                  ("namespace2"' "eventHubName"' "consumerGroup"' "partitionId"' 10' 20));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherPartitions,The following statement contains a magic number: await partitionManager.UpdateCheckpointAsync(new Checkpoint                  ("namespace"' "eventHubName"' "consumerGroup"' "partitionId1"' 10' 20));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherPartitions,The following statement contains a magic number: await partitionManager.UpdateCheckpointAsync(new Checkpoint                  ("namespace"' "eventHubName"' "consumerGroup"' "partitionId1"' 10' 20));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherPartitions,The following statement contains a magic number: await partitionManager.UpdateCheckpointAsync(new Checkpoint                  ("namespace"' "eventHubName"' "consumerGroup"' "partitionId2"' 10' 20));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherPartitions,The following statement contains a magic number: await partitionManager.UpdateCheckpointAsync(new Checkpoint                  ("namespace"' "eventHubName"' "consumerGroup"' "partitionId2"' 10' 20));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,MockCheckPointStorageTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\MockCheckPointStorageTests.cs,CheckpointUpdateDoesNotInterfereWithOtherPartitions,The following statement contains a magic number: Assert.That(storedCheckpointsList.Count' Is.EqualTo(2));
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,StorageScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\StorageScope.cs,CreateAsync,The following statement contains a magic number: caller = (caller.Length < 16) ? caller : caller.Substring(0' 15);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,StorageScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\StorageScope.cs,CreateAsync,The following statement contains a magic number: caller = (caller.Length < 16) ? caller : caller.Substring(0' 15);
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,StorageScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\StorageScope.cs,CreateAsync,The following statement contains a magic number: string CreateName() => $"{ Guid.NewGuid().ToString("D").Substring(0' 13) }-{ caller }";
Magic Number,Azure.Messaging.EventHubs.Processor.Tests,StorageScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\Infrastructure\StorageScope.cs,CreateStorageAccountAsync,The following statement contains a magic number: static string CreateName() => $"neteventhubs{ Guid.NewGuid().ToString("N").Substring(0' 12) }";
Magic Number,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,EventProcessorCanStartAgainAfterStopping,The following statement contains a magic number: var expectedEventsCount = 20;
Magic Number,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,EventProcessorCanStartAgainAfterStopping,The following statement contains a magic number: i < 2
Magic Number,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,EventProcessorCanReceiveFromCheckpointedEventPosition,The following statement contains a magic number: var expectedEventsCount = 20;
Magic Number,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,EventProcessorCanReceiveFromCheckpointedEventPosition,The following statement contains a magic number: var dummyEventsCount = 30;
Magic Number,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,PartitionProcessorCanCreateACheckpoint,The following statement contains a magic number: var dummyEventsCount = 10;
Magic Number,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,EventProcessorCanReceiveFromSpecifiedInitialEventPosition,The following statement contains a magic number: var expectedEventsCount = 20;
Magic Number,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,EventProcessorCanReceiveFromSpecifiedInitialEventPosition,The following statement contains a magic number: i < 30
Magic Number,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,EventProcessorCanReceiveFromSpecifiedInitialEventPosition,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,EventProcessorWaitsMaximumWaitTimeForEvents,The following statement contains a magic number: Assert.That(elapsedTime' Is.GreaterThan(maximumWaitTimeInSecs - 0.1)' $"{ partitionId }: elapsed time between indexes { index - 1 } and { index } was too short.");
Magic Number,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,EventProcessorWaitsMaximumWaitTimeForEvents,The following statement contains a magic number: Assert.That(elapsedTime' Is.LessThan(maximumWaitTimeInSecs + 5)' $"{ partitionId }: elapsed time between indexes { index - 1 } and { index } was too long.");
Magic Number,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,LoadBalancingIsEnforcedWhenDistributionIsUneven,The following statement contains a magic number: var partitions = 10;
Magic Number,Azure.Messaging.EventHubs.Tests,EventProcessorClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientLiveTests.cs,LoadBalancingIsEnforcedWhenDistributionIsUneven,The following statement contains a magic number: var minimumOwnedPartitionsCount = partitions / 2;
Magic Number,Azure.Messaging.EventHubs.Tests,EventProcessorClientOptionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientOptionsTests.cs,CloneProducesACopy,The following statement contains a magic number: var options = new EventProcessorClientOptions              {                  Identifier = Guid.NewGuid().ToString()'                  TrackLastEnqueuedEventProperties = false'                  MaximumWaitTime = TimeSpan.FromMinutes(65)'                  RetryOptions = new EventHubsRetryOptions { TryTimeout = TimeSpan.FromMinutes(1)' Delay = TimeSpan.FromMinutes(4) }'                  ConnectionOptions = new EventHubConnectionOptions { TransportType = EventHubsTransportType.AmqpWebSockets }              };
Magic Number,Azure.Messaging.EventHubs.Tests,EventProcessorClientOptionsTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientOptionsTests.cs,CloneProducesACopy,The following statement contains a magic number: var options = new EventProcessorClientOptions              {                  Identifier = Guid.NewGuid().ToString()'                  TrackLastEnqueuedEventProperties = false'                  MaximumWaitTime = TimeSpan.FromMinutes(65)'                  RetryOptions = new EventHubsRetryOptions { TryTimeout = TimeSpan.FromMinutes(1)' Delay = TimeSpan.FromMinutes(4) }'                  ConnectionOptions = new EventHubConnectionOptions { TransportType = EventHubsTransportType.AmqpWebSockets }              };
Magic Number,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConnectionStringConstructorCreatesTheProcessingConsumerOptions,The following statement contains a magic number: var options = new EventProcessorClientOptions              {                  RetryOptions = new EventHubsRetryOptions { TryTimeout = TimeSpan.FromMinutes(1)' Delay = TimeSpan.FromMinutes(4) }              };
Magic Number,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,NamespaceConstructorCreatesTheProcessingConsumerOptions,The following statement contains a magic number: var options = new EventProcessorClientOptions              {                  RetryOptions = new EventHubsRetryOptions { TryTimeout = TimeSpan.FromMinutes(1)' Delay = TimeSpan.FromMinutes(4) }              };
Magic Number,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,ConnectionStringConstructorCreatesTheProcessingReadEventOptions,The following statement contains a magic number: var options = new EventProcessorClientOptions              {                  TrackLastEnqueuedEventProperties = false'                  MaximumWaitTime = TimeSpan.FromMinutes(65)              };
Magic Number,Azure.Messaging.EventHubs.Tests,EventProcessorClientTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\tests\EventProcessorClient\EventProcessorClientTests.cs,NamespaceConstructorCreatesTheProcessingReadEventOptions,The following statement contains a magic number: var options = new EventProcessorClientOptions              {                  TrackLastEnqueuedEventProperties = false'                  MaximumWaitTime = TimeSpan.FromMinutes(65)              };
Magic Number,Azure.Messaging.EventHubs.Tests,EventHubScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\EventHubScope.cs,CreateAsync,The following statement contains a magic number: caller = (caller.Length < 16) ? caller : caller.Substring(0' 15);
Magic Number,Azure.Messaging.EventHubs.Tests,EventHubScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\EventHubScope.cs,CreateAsync,The following statement contains a magic number: caller = (caller.Length < 16) ? caller : caller.Substring(0' 15);
Magic Number,Azure.Messaging.EventHubs.Tests,EventHubScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\EventHubScope.cs,CreateAsync,The following statement contains a magic number: string CreateName() => $"{ Guid.NewGuid().ToString("D").Substring(0' 13) }-{ caller }";
Magic Number,Azure.Messaging.EventHubs.Tests,EventHubScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\EventHubScope.cs,CreateNamespaceAsync,The following statement contains a magic number: var eventHubsNamespace = new EHNamespace(sku: new Sku("Standard"' "Standard"' 12)' tags: ResourceManager.GenerateTags()' isAutoInflateEnabled: true' maximumThroughputUnits: 20' location: location);
Magic Number,Azure.Messaging.EventHubs.Tests,EventHubScope,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Shared\src\Testing\EventHubScope.cs,CreateNamespaceAsync,The following statement contains a magic number: var eventHubsNamespace = new EHNamespace(sku: new Sku("Standard"' "Standard"' 12)' tags: ResourceManager.GenerateTags()' isAutoInflateEnabled: true' maximumThroughputUnits: 20' location: location);
Magic Number,Azure.Core.Testing,DiagnosticScopeValidatingInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\DiagnosticScopeValidatingInterceptor.cs,Intercept,The following statement contains a magic number: var expectedEventPrefix = declaringType.FullName + "." + methodName.Substring(0' methodName.Length - 5);
Magic Number,Azure.Core.Testing,RandomExtensions,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\RandomExtensions.cs,NewGuid,The following statement contains a magic number: var bytes = new byte[16];
Magic Number,Azure.Core.Testing,TestRetryHelper,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\TestRetryHelper.cs,RetryAsync,The following statement contains a magic number: delay = TimeSpan.FromSeconds(5);
