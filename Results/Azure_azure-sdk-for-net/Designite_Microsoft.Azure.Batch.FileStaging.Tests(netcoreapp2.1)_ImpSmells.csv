Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Batch.FileStaging.Tests,FileStagingIntegrationTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\FileStagingIntegrationTests.cs,AddTasksSimpleTestAsync,The method has 10 parameters. Parameters: batchCli' testName' taskCount' parallelOptions' resultHandlerFunc' storageCredentials' localFilesToStage' fileStagingArtifacts' timeout' useJobOperations
Long Identifier,Batch.FileStaging.Tests,FileStagingIntegrationTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\FileStagingIntegrationTests.cs,CanBulkAddTasksWithFilesToStage,The length of the parameter expectedFinalFileStagingArtifactsCount is 38.
Long Identifier,Batch.FileStaging.Tests,FileStagingIntegrationTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\FileStagingIntegrationTests.cs,CanBulkAddTasksWithFilesToStage,The length of the parameter expectedInitialFileStagingArtifactsCount is 40.
Long Identifier,Batch.FileStaging.Tests,TestConfiguration,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\TestCommon.cs,,The length of the parameter BatchAccountKeyEnvironmentSettingName is 37.
Long Identifier,Batch.FileStaging.Tests,TestConfiguration,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\TestCommon.cs,,The length of the parameter BatchAccountNameEnvironmentSettingName is 38.
Long Identifier,Batch.FileStaging.Tests,TestConfiguration,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\TestCommon.cs,,The length of the parameter BatchAccountUrlEnvironmentSettingName is 37.
Long Identifier,Batch.FileStaging.Tests,TestConfiguration,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\TestCommon.cs,,The length of the parameter StorageAccountKeyEnvironmentSettingName is 39.
Long Identifier,Batch.FileStaging.Tests,TestConfiguration,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\TestCommon.cs,,The length of the parameter StorageAccountNameEnvironmentSettingName is 40.
Long Identifier,Batch.FileStaging.Tests,TestConfiguration,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\TestCommon.cs,,The length of the parameter StorageAccountBlobEndpointEnvironmentSettingName is 48.
Long Statement,Batch.FileStaging.Tests,FileStagingIntegrationTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\FileStagingIntegrationTests.cs,CanBulkAddTasksWithFilesToStage,The length of the statement  "            ConcurrentBag<ConcurrentDictionary<Type' IFileStagingArtifact>> artifacts = new ConcurrentBag<ConcurrentDictionary<Type' IFileStagingArtifact>>(); " is 146.
Long Statement,Batch.FileStaging.Tests,FileStagingUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\FileStagingUnitTests.cs,StagingStorageAccount_EmptyStorageAccountName_ThrowsArgumentOutofRange,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => { new StagingStorageAccount(storageAccount: " "' storageAccountKey: "key"' blobEndpoint: "blob"); }); " is 150.
Long Statement,Batch.FileStaging.Tests,FileStagingUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\FileStagingUnitTests.cs,StagingStorageAccount_EmptyStorageAccountKey_ThrowsArgumentOutofRange,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => { new StagingStorageAccount(storageAccount: "account"' storageAccountKey: " "' blobEndpoint: "blob"); }); " is 154.
Long Statement,Batch.FileStaging.Tests,FileStagingUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\FileStagingUnitTests.cs,StagingStorageAccount_EmptyStorageAccountBlobEndpoint_ThrowsArgumentOutofRange,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => { new StagingStorageAccount(storageAccount: "account"' storageAccountKey: "key"' blobEndpoint: ""); }); " is 152.
Long Statement,Batch.FileStaging.Tests.Fixtures,PoolFixture,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\Fixtures\PoolFixture.cs,WaitForPoolAllocation,The length of the statement  "            TestUtilities.WaitForPoolToReachStateAsync(client' poolId' AllocationState.Steady' computeNodeAllocationTimeout).Wait(); " is 120.
Long Statement,Batch.FileStaging.Tests.Fixtures,PoolFixture,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\Fixtures\PoolFixture.cs,WaitForPoolAllocation,The length of the statement  "                    throw new Exception("CreatePool: Timed out waiting for compute nodes in pool to reach idle state.  Timeout: " + computeNodeSteadyTimeout.ToString()); " is 149.
Long Statement,Batch.FileStaging.Tests.IntegrationTestUtilities,TestUtilities,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\IntegrationTestUtilities\TestUtilities.cs,OpenBatchClient,The length of the statement  "            //TODO: To avoid including this test assembly via "InternalsVisibleTo" we resort to some reflection trickery... maybe this property " is 131.
Long Statement,Batch.FileStaging.Tests.IntegrationTestUtilities,TestUtilities,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\IntegrationTestUtilities\TestUtilities.cs,GetStorageCredentialsFromEnvironment,The length of the statement  "            StagingStorageAccount storageStagingCredentials = new StagingStorageAccount(storageAccountName' storageAccountKey' storageAccountBlobEndpoint); " is 143.
Long Statement,Batch.FileStaging.Tests.IntegrationTestUtilities,TestUtilities,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\IntegrationTestUtilities\TestUtilities.cs,DeleteJobIfExistsAsync,The length of the statement  "                    throw; //re-throw in the case where we tried to delete the job and got an exception with a status code which wasn't 409 or 404 " is 126.
Long Statement,Batch.FileStaging.Tests.IntegrationTestUtilities,TestUtilities,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\IntegrationTestUtilities\TestUtilities.cs,DeleteJobScheduleIfExistsAsync,The length of the statement  "                    throw; //re-throw in the case where we tried to delete the job and got an exception with a status code which wasn't 409 or 404 " is 126.
Long Statement,Batch.FileStaging.Tests.IntegrationTestUtilities,TestUtilities,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\IntegrationTestUtilities\TestUtilities.cs,DeletePoolIfExistsAsync,The length of the statement  "                    throw; //re-throw in the case where we tried to delete the job and got an exception with a status code which wasn't 409 or 404 " is 126.
Long Statement,Batch.FileStaging.Tests.IntegrationTestUtilities,TestUtilities,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\IntegrationTestUtilities\TestUtilities.cs,DeleteCertificateIfExistsAsync,The length of the statement  "                    throw; //re-throw in the case where we tried to delete the cert and got an exception with a status code which wasn't 409 or 404 " is 127.
Empty Catch Block,Batch.FileStaging.Tests.Fixtures,PoolFixture,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\Fixtures\PoolFixture.cs,Dispose,The method has an empty catch block.
Magic Number,Batch.FileStaging.Tests,FileStagingIntegrationTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\FileStagingIntegrationTests.cs,CanAddTaskWithFilesToStage,The following statement contains a magic number: taskStateMonitor.WaitAll(                          boundJob.ListTasks()'                          Microsoft.Azure.Batch.Common.TaskState.Completed'                          TimeSpan.FromMinutes(10)'                          controlParams: null'                          additionalBehaviors: new[]                          {                                  // spam/logging interceptor                                  new Microsoft.Azure.Batch.Protocol.RequestInterceptor((x) =>                                  {                                      this.testOutputHelper.WriteLine("Issuing request type: " + x.GetType().ToString());                                        try                                      {                                          // print out the compute node states... we are actually waiting on the compute nodes                                          List<ComputeNode> allComputeNodes = boundPool.ListComputeNodes().ToList();                                            this.testOutputHelper.WriteLine("    #compute nodes: " + allComputeNodes.Count);                                            allComputeNodes.ForEach(                                              (icn) =>                                              {                                                  this.testOutputHelper.WriteLine("  computeNode.id: " + icn.Id + "' state: " + icn.State);                                              });                                      }                                      catch (Exception ex)                                      {                                          // there is a race between the pool-life-job and the end of the job.. and the ListComputeNodes above                                          Assert.True(false' "SampleWithFilesAndPool probably can ignore this if its pool not found: " + ex.ToString());                                      }                                  })                          });
Magic Number,Batch.FileStaging.Tests,FileStagingIntegrationTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\FileStagingIntegrationTests.cs,CanBulkAddTasksWithFilesToStage,The following statement contains a magic number: const int taskCount = 499;
Magic Number,Batch.FileStaging.Tests,FileStagingIntegrationTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\FileStagingIntegrationTests.cs,CanBulkAddTasksWithFilesToStage,The following statement contains a magic number: await this.AddTasksSimpleTestAsync(                          batchCli'                          testName'                          taskCount'                          parallelOptions: new BatchClientParallelOptions() { MaxDegreeOfParallelism = 2 }'                          resultHandlerFunc: null'                          storageCredentials: storageCredentials'                          localFilesToStage: localFilesToStage'                          fileStagingArtifacts: artifacts'                          useJobOperations: useJobOperations).ConfigureAwait(false);
Magic Number,Batch.FileStaging.Tests,FileStagingIntegrationTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\FileStagingIntegrationTests.cs,CanBulkAddTasksWithFilesToStage,The following statement contains a magic number: const int expectedFinalFileStagingArtifactsCount = taskCount / 100 + 1;
Magic Number,Batch.FileStaging.Tests.Fixtures,PoolFixture,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\Fixtures\PoolFixture.cs,WaitForPoolAllocation,The following statement contains a magic number: TimeSpan computeNodeAllocationTimeout = TimeSpan.FromMinutes(10);
Magic Number,Batch.FileStaging.Tests.Fixtures,PoolFixture,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\Fixtures\PoolFixture.cs,WaitForPoolAllocation,The following statement contains a magic number: TimeSpan computeNodeSteadyTimeout = TimeSpan.FromMinutes(25);
Magic Number,Batch.FileStaging.Tests.Fixtures,PoolFixture,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\Fixtures\PoolFixture.cs,WaitForPoolAllocation,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromSeconds(10));
Magic Number,Batch.FileStaging.Tests.IntegrationTestUtilities,TestUtilities,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\IntegrationTestUtilities\TestUtilities.cs,OpenBatchClient,The following statement contains a magic number: client.CustomBehaviors.Add(RetryPolicyProvider.LinearRetryProvider(TimeSpan.FromSeconds(3)' 5));
Magic Number,Batch.FileStaging.Tests.IntegrationTestUtilities,TestUtilities,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\IntegrationTestUtilities\TestUtilities.cs,OpenBatchClient,The following statement contains a magic number: client.CustomBehaviors.Add(RetryPolicyProvider.LinearRetryProvider(TimeSpan.FromSeconds(3)' 5));
Magic Number,Batch.FileStaging.Tests.IntegrationTestUtilities,TestUtilities,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch.FileStaging\tests\IntegrationTestUtilities\TestUtilities.cs,RefreshBasedPollingWithTimeoutAsync,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(10)).ConfigureAwait(continueOnCapturedContext: false);
