Implementation smell,Namespace,Class,File,Method,Description
Long Method,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,PropertyUnitTests,The method has 168 lines of code.
Complex Method,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,BatchRequestCancellationViaInterceptorTestAsync,Cyclomatic complexity of the method is 9
Complex Method,Azure.Batch.Unit.Tests.TestUtilities,ObjectComparer,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\ObjectComparer.cs,CheckEquality,Cyclomatic complexity of the method is 10
Complex Method,Azure.Batch.Unit.Tests.TestUtilities,ObjectFactory,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\ObjectFactory.cs,GenerateNew,Cyclomatic complexity of the method is 15
Long Parameter List,Azure.Batch.Unit.Tests.TestUtilities,ComparisonRule,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\ComparisonRule.cs,ComparisonRule,The method has 5 parameters. Parameters: type1' type2' comparer' type1PropertyName' type2PropertyName
Long Parameter List,Azure.Batch.Unit.Tests.TestUtilities,ComparisonRule,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\ComparisonRule.cs,Create,The method has 5 parameters. Parameters: type1' type2' comparer' type1PropertyName' type2PropertyName
Long Identifier,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,BatchRequestCancellationViaInterceptorTestAsync,The length of the parameter clientRequestTimeoutViaCustomToken is 34.
Long Identifier,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,BatchRequestCancellationViaInterceptorTestAsync,The length of the parameter clientRequestTimeoutViaTimeout is 30.
Long Identifier,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,BatchRequestCancellationViaInterceptorTestAsync,The length of the parameter timeoutViaCancellationTokenValue is 32.
Long Identifier,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,BatchRequestCancellationViaInterceptorTestAsync,The length of the parameter expectedCustomTokenTimeoutToHitFirst is 36.
Long Identifier,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,BatchRequestCancellationViaParameterTestAsync,The length of the parameter clientRequestTimeoutViaCustomToken is 34.
Long Identifier,Azure.Batch.Unit.Tests,ComputeNodeUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ComputeNodeUnitTests.cs,TestComputeNodeCertificateReferencesAreReadOnly,The length of the parameter computeNodeCertificateReference is 31.
Long Identifier,Azure.Batch.Unit.Tests,InterceptorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\InterceptorUnitTests.cs,TestSetBatchRequestServerTimeoutHelperAsync,The length of the parameter expectedServerTimeoutInSeconds is 30.
Long Identifier,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,TestRandomBoundPrepReleaseTaskExecutionInformationProperties,The length of the parameter boundJobPrepReleaseExecutionInfo is 32.
Long Identifier,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,,The length of the parameter proxyPropertyToObjectModelMapping is 33.
Long Identifier,Azure.Batch.Unit.Tests.TestUtilities,ObjectComparer,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\ObjectComparer.cs,ObjectComparer,The length of the parameter shouldThrowOnPropertyReadException is 34.
Long Identifier,Azure.Batch.Unit.Tests.TestUtilities,ObjectComparer,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\ObjectComparer.cs,,The length of the parameter shouldSwallowPropertyReadException is 34.
Long Identifier,Azure.Batch.Unit.Tests.TestUtilities,ObjectFactory,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\ObjectFactory.cs,ObjectFactory,The length of the parameter typeConstructionSpecifications is 30.
Long Identifier,Azure.Batch.Unit.Tests.TestUtilities,ObjectFactory,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\ObjectFactory.cs,,The length of the parameter typeConstructionSpecifications is 30.
Long Statement,Azure.Batch.Unit.Tests,AddTaskCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\AddTaskCollectionUnitTests.cs,AddTaskCollectionNoHandlerThrows,The length of the statement  "                BatchClientException exception = await Assert.ThrowsAsync<BatchClientException>(() => batchCli.JobOperations.AddTaskAsync(dummyJobId' new List<CloudTask> { task })); " is 165.
Long Statement,Azure.Batch.Unit.Tests,AddTaskCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\AddTaskCollectionUnitTests.cs,AddTaskCollectionNoHandlerThrows,The length of the statement  "                string expectedString = string.Format(BatchErrorMessages.GeneralBehaviorMissing' typeof (AddTaskCollectionResultHandler)); " is 122.
Long Statement,Azure.Batch.Unit.Tests,AddTaskCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\AddTaskCollectionUnitTests.cs,AddTaskCollectionNullTaskThrows,The length of the statement  "                ArgumentNullException exception = await Assert.ThrowsAsync<ArgumentNullException>(() => batchCli.JobOperations.AddTaskAsync(dummyJobId' new List<CloudTask> { null })); " is 167.
Long Statement,Azure.Batch.Unit.Tests,AddTaskCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\AddTaskCollectionUnitTests.cs,ExceptionOnRestOperationIsWrappedInParallelOperationsException,The length of the statement  "            ParallelOperationsException exception = await IssueAddTaskCollectionAndAssertExceptionIsExpectedAsync<ParallelOperationsException>( " is 131.
Long Statement,Azure.Batch.Unit.Tests,AddTaskCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\AddTaskCollectionUnitTests.cs,ExceptionOnSomeRestOperationsAllWrappedInParallelOperationsException,The length of the statement  "            ParallelOperationsException exception = await IssueAddTaskCollectionAndAssertExceptionIsExpectedAsync<ParallelOperationsException>( " is 131.
Long Statement,Azure.Batch.Unit.Tests,AddTaskCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\AddTaskCollectionUnitTests.cs,ExceptionOnClientError_ResultingExceptionContainsDetails,The length of the statement  "                Assert.Equal("Addition of a task failed with unexpected status code. Details: TaskId=baz' Status=ClientError' Error.Code=badness' Error.Message=Test value' Error.Values=[key=value]"' " is 182.
Long Statement,Azure.Batch.Unit.Tests,AddTaskCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\AddTaskCollectionUnitTests.cs,AddExceptionGeneratingBehavior,The length of the statement  "                            return Task.FromResult(new AzureOperationResponse<Protocol.Models.TaskAddCollectionResult' Protocol.Models.TaskAddCollectionHeaders>() " is 134.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,GetPoolWithApplicationReferencesTest,The length of the statement  "                        var request = (Protocol.BatchRequest<Models.PoolGetOptions' AzureOperationResponse<Models.CloudPool' Models.PoolGetHeaders>>)baseRequest; " is 137.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,GetPoolWithApplicationReferencesTest,The length of the statement  "                Microsoft.Azure.Batch.CloudPool cloudPool = client.PoolOperations.GetPool("pool-id"' additionalBehaviors: new List<BatchClientBehavior> { interceptor }); " is 153.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,UpdateAPoolWithNewApplicationPackages,The length of the statement  "                Microsoft.Azure.Batch.CloudPool cloudPool = client.PoolOperations.GetPool("pool-id"' additionalBehaviors: new List<BatchClientBehavior> { interceptor }); " is 153.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,UpdateAPoolWithNewApplicationPackages,The length of the statement  "                        request.ServiceRequestFunc = token => Task.FromResult(new AzureOperationHeaderResponse<Models.PoolUpdatePropertiesHeaders>() { Response = new HttpResponseMessage(HttpStatusCode.NoContent) }); " is 191.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,CreateJobWithApplicationReferencesTest,The length of the statement  "                Assert.Equal(cloudJob.PoolInformation.AutoPoolSpecification.PoolSpecification.ApplicationPackageReferences.First().ApplicationId' applicationId); " is 145.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,CreateJobWithApplicationReferencesTest,The length of the statement  "                Assert.Equal(cloudJob.PoolInformation.AutoPoolSpecification.PoolSpecification.ApplicationPackageReferences.First().Version' version); " is 133.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,CreateJobScheduleWithApplicationPackageReferences,The length of the statement  "                                (Protocol.BatchRequest<Models.JobScheduleGetOptions' AzureOperationResponse<Models.CloudJobSchedule' Models.JobScheduleGetHeaders>>)baseRequest; " is 144.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,CreateJobScheduleWithApplicationPackageReferences,The length of the statement  "                Microsoft.Azure.Batch.CloudJobSchedule cloudJobSchedule = await client.JobScheduleOperations.GetJobScheduleAsync(jobId' additionalBehaviors: new List<BatchClientBehavior> { interceptor }); " is 188.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,CreateJobScheduleWithApplicationPackageReferences,The length of the statement  "                Assert.Equal(cloudJobSchedule.JobSpecification.PoolInformation.AutoPoolSpecification.PoolSpecification.ApplicationPackageReferences.First().ApplicationId' applicationId); " is 170.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,CreateJobScheduleWithApplicationPackageReferences,The length of the statement  "                Assert.Equal(cloudJobSchedule.JobSpecification.PoolInformation.AutoPoolSpecification.PoolSpecification.ApplicationPackageReferences.First().Version' version); " is 158.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,GetPoolWithApplicationPackageReferences,The length of the statement  "                    var request = (Protocol.BatchRequest<Models.PoolGetOptions' AzureOperationResponse<Models.CloudPool' Models.PoolGetHeaders>>)baseRequest; " is 137.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,GetPoolWithApplicationPackageReferences,The length of the statement  "                var pool = await client.PoolOperations.GetPoolAsync(poolName' additionalBehaviors: new List<BatchClientBehavior> { interceptor }); " is 130.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,GetJobScheduleWithApplicationPackageReferences,The length of the statement  "                    var request = (Protocol.BatchRequest<Models.JobScheduleGetOptions' AzureOperationResponse<Models.CloudJobSchedule' Models.JobScheduleGetHeaders>>)baseRequest; " is 158.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,GetJobScheduleWithApplicationPackageReferences,The length of the statement  "                Microsoft.Azure.Batch.CloudJobSchedule jobSchedule = await client.JobScheduleOperations.GetJobScheduleAsync("test"' additionalBehaviors: new List<BatchClientBehavior> { interceptor }); " is 184.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,GetJobScheduleWithApplicationPackageReferences,The length of the statement  "                Microsoft.Azure.Batch.ApplicationPackageReference apr = jobSchedule.JobSpecification.PoolInformation.AutoPoolSpecification.PoolSpecification.ApplicationPackageReferences.First(); " is 178.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,CreateCloudTaskWithApplicationPackageReferences,The length of the statement  "                var job = client.JobOperations.GetJob(jobId' additionalBehaviors: InterceptorFactory.CreateGetJobRequestInterceptor(returnFakeJob)); " is 132.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,CreateCloudTaskWithApplicationPackageReferences,The length of the statement  "                var verifyAPRs = ClientUnitTestCommon.SimulateServiceResponse<Models.TaskAddParameter' Models.TaskAddOptions' AzureOperationHeaderResponse<Models.TaskAddHeaders>>( " is 163.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,GetJobManagerTaskWithApplicationPackageReferences,The length of the statement  "                var job = client.JobOperations.GetJob(jobId' additionalBehaviors: InterceptorFactory.CreateGetJobRequestInterceptor(protoJob)); " is 127.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,CheckIfGetApplicationPackageReferencesIsReadableButNotWritableOnABoundPool,The length of the statement  "                        var request = (Protocol.BatchRequest<Models.PoolGetOptions' AzureOperationResponse<Models.CloudPool' Models.PoolGetHeaders>>)baseRequest; " is 137.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,CheckIfGetApplicationPackageReferencesIsReadableButNotWritableOnABoundPool,The length of the statement  "                Microsoft.Azure.Batch.CloudPool cloudPool = client.PoolOperations.GetPool("pool-id"' additionalBehaviors: new List<BatchClientBehavior> { interceptor }); " is 153.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,CheckIfGetApplicationPackageReferencesIsReadableButNotWritableOnABoundPool,The length of the statement  "                Assert.Throws<InvalidOperationException>(() => cloudPool.ApplicationPackageReferences.First().ApplicationId = applicationId); " is 125.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageUnitTests.cs,CheckListApplicationSummariesIsReturningAValidList,The length of the statement  "                        var request = (Protocol.BatchRequest<Models.ApplicationListOptions' AzureOperationResponse<IPage<Models.ApplicationSummary>' Models.ApplicationListHeaders>>)baseRequest; " is 169.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageUnitTests.cs,CheckListApplicationSummariesIsReturningAValidList,The length of the statement  "                IPagedEnumerable<Microsoft.Azure.Batch.ApplicationSummary> applicationSummaries = client.ApplicationOperations.ListApplicationSummaries(additionalBehaviors: new List<BatchClientBehavior> { interceptor }); " is 204.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageUnitTests.cs,GetApplicationSummaryAsyncTest,The length of the statement  "                        var request = (Protocol.BatchRequest<Models.ApplicationGetOptions' AzureOperationResponse<Models.ApplicationSummary' Models.ApplicationGetHeaders>>)baseRequest; " is 160.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageUnitTests.cs,GetApplicationSummaryAsyncTest,The length of the statement  "                Microsoft.Azure.Batch.ApplicationSummary applicationSummary = client.ApplicationOperations.GetApplicationSummaryAsync(applicationId' additionalBehaviors: new List<BatchClientBehavior> { interceptor }).Result; " is 208.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageUnitTests.cs,GetApplicationSummaryTest,The length of the statement  "                    var request = (Protocol.BatchRequest<Models.ApplicationGetOptions' AzureOperationResponse<Models.ApplicationSummary' Models.ApplicationGetHeaders>>)baseRequest; " is 160.
Long Statement,Azure.Batch.Unit.Tests,ApplicationPackageUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageUnitTests.cs,GetApplicationSummaryTest,The length of the statement  "                Microsoft.Azure.Batch.ApplicationSummary applicationSummary = client.ApplicationOperations.GetApplicationSummary(applicationId' additionalBehaviors: new List<BatchClientBehavior> { interceptor }); " is 196.
Long Statement,Azure.Batch.Unit.Tests,BatchClientUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchClientUnitTest.cs,BatchAuthTokenIsSentToTheService_ClientCreatedWithFuncToken,The length of the statement  "            using (var restClient = new BatchServiceClient(tokenCredentials' fakeHttpClientHandler) { BatchUrl = @"https://foo.microsoft.test" }) " is 133.
Long Statement,Azure.Batch.Unit.Tests,BatchClientUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchClientUnitTest.cs,AuthTokenIsBeingSentOnEveryCallToTheService,The length of the statement  "                new FakeHttpClientHandler(req => new HttpResponseMessage(HttpStatusCode.Accepted))) { BatchUrl = @"https://foo.microsoft.test" }) " is 129.
Long Statement,Azure.Batch.Unit.Tests,BatchClientUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchClientUnitTest.cs,BatchAuthTokenIsSentToTheService_ClientCreatedWithToken,The length of the statement  "            using (var restClient = new BatchServiceClient(tokenCredentials' fakeHttpClientHandler) { BatchUrl = @"https://foo.microsoft.test" }) " is 133.
Long Statement,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,TestBatchClientDefaultHttpClientTimeoutInfinite,The length of the statement  "            Protocol.BatchServiceClient restClient = (Protocol.BatchServiceClient)typeof(ProtocolLayer).GetField("_client"' BindingFlags.NonPublic | BindingFlags.Instance).GetValue(batchClient.ProtocolLayer); " is 196.
Long Statement,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,TestDefaultBatchRequestTimeoutSet,The length of the statement  "                                return Task.FromResult(new AzureOperationResponse<Protocol.Models.CloudJob' Protocol.Models.JobGetHeaders>() { Body = new Protocol.Models.CloudJob() }); " is 152.
Long Statement,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,TestCancellationViaParameterForLists,The length of the statement  "                        await this.BatchRequestCancellationViaParameterTestAsync(moveNextAsyncMethod' pagedEnumerator' TimeSpan.FromSeconds(0)); " is 120.
Long Statement,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,TestBatchRequestCannotBeModifiedAfterExecutionStarted,The length of the statement  "                CloudPool pool = batchClient.PoolOperations.CreatePool("dummy"' "small"' default(CloudServiceConfiguration)' targetDedicatedComputeNodes: 0); " is 141.
Long Statement,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,BatchRequestCancellationViaInterceptorTestAsync,The length of the statement  "                    // Set the interceptor to catch the request before it really goes to the Batch service and hook the cancellation token to find when it times out " is 144.
Long Statement,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,BatchRequestCancellationViaInterceptorTestAsync,The length of the statement  "                            return new AzureOperationResponse<Protocol.Models.CloudJob' Protocol.Models.JobGetHeaders>() { Body = new Protocol.Models.CloudJob() }; " is 135.
Long Statement,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,BatchRequestCancellationViaInterceptorTestAsync,The length of the statement  "                    await Assert.ThrowsAsync<OperationCanceledException>(async () => await client.JobOperations.GetJobAsync("dummy"' additionalBehaviors: new List<BatchClientBehavior> { requestInterceptor })); " is 189.
Long Statement,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,BatchRequestCancellationViaInterceptorTestAsync,The length of the statement  "                    Assert.True(Math.Abs(clientRequestTimeoutViaCustomToken.Value.TotalSeconds - cancellationDuration.Value.TotalSeconds) < TimeTolerance' " is 134.
Long Statement,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,BatchRequestCancellationViaInterceptorTestAsync,The length of the statement  "                        string.Format("Expected timeout: {0}' Observed timeout: {1}"' clientRequestTimeoutViaCustomToken' cancellationDuration)); " is 121.
Long Statement,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,BatchRequestCancellationViaInterceptorTestAsync,The length of the statement  "                    Assert.True(Math.Abs(clientRequestTimeoutViaTimeout.Value.TotalSeconds - cancellationDuration.Value.TotalSeconds) < TimeTolerance' " is 130.
Long Statement,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,BatchRequestCancellationViaParameterTestAsync,The length of the statement  "            using (CancellationTokenSource cancellationTokenSource = new CancellationTokenSource(clientRequestTimeoutViaCustomToken.Value)) " is 127.
Long Statement,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,BatchRequestCancellationViaParameterTestAsync,The length of the statement  "                Assert.True(Math.Abs(clientRequestTimeoutViaCustomToken.Value.TotalSeconds - e.CancellationDuration.TotalSeconds) < TimeTolerance' " is 130.
Long Statement,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,BatchRequestCancellationViaParameterTestAsync,The length of the statement  "                    string.Format("Expected timeout: {0}' Observed timeout: {1}"' clientRequestTimeoutViaCustomToken' e.CancellationDuration)); " is 123.
Long Statement,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,DiscoverListMethods,The length of the statement  "                if (method.ReturnType.GetTypeInfo().IsGenericType && method.ReturnType.GetGenericTypeDefinition() == typeof (IPagedEnumerable<>)) " is 129.
Long Statement,Azure.Batch.Unit.Tests,BindingStateConstraintUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BindingStateConstraintUnitTests.cs,Pool_WhenReturnedFromServer_HasExpectedUnboundProperties,The length of the statement  "                CloudPool cloudPool = client.PoolOperations.CreatePool(cloudPoolId' virtualMachineSize' new CloudServiceConfiguration(osFamily)); " is 129.
Long Statement,Azure.Batch.Unit.Tests,BindingStateConstraintUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BindingStateConstraintUnitTests.cs,Pool_WhenReturnedFromServer_HasExpectedBoundProperties,The length of the statement  "                CloudPool boundPool = client.PoolOperations.GetPool(string.Empty' additionalBehaviors: InterceptorFactory.CreateGetPoolRequestInterceptor(protoPool)); " is 150.
Long Statement,Azure.Batch.Unit.Tests,BindingStateConstraintUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BindingStateConstraintUnitTests.cs,CloudJobSchedule_WhenReturnedFromServer_HasExpectedBoundProperties,The length of the statement  "                Assert.Equal(jobScheduleId' boundJobSchedule.Id); // reading is allowed from a jobSchedule that is returned from the server. " is 124.
Long Statement,Azure.Batch.Unit.Tests,BindingStateConstraintUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BindingStateConstraintUnitTests.cs,CloudJob_WhenSendingToTheServer_HasExpectedUnboundProperties,The length of the statement  "                CloudJob cloudJob = client.JobOperations.CreateJob(jobId' new PoolInformation { AutoPoolSpecification = new AutoPoolSpecification { KeepAlive = false }}); " is 154.
Long Statement,Azure.Batch.Unit.Tests,BindingStateConstraintUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BindingStateConstraintUnitTests.cs,CloudJob_WhenSendingToTheServer_HasExpectedUnboundProperties,The length of the statement  "                Assert.Throws<InvalidOperationException>(() => { cloudJob.JobManagerTask.AuthenticationTokenSettings = authenticationTokenSettings; }); " is 135.
Long Statement,Azure.Batch.Unit.Tests,BindingStateConstraintUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BindingStateConstraintUnitTests.cs,CloudJob_WhenReturnedFromServer_HasExpectedBoundProperties,The length of the statement  "                        ApplicationPackageReferences = new [] { new Models.ApplicationPackageReference(){ ApplicationId = applicationId' Version = applicationVersion } } " is 145.
Long Statement,Azure.Batch.Unit.Tests,BindingStateConstraintUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BindingStateConstraintUnitTests.cs,CloudJob_WhenReturnedFromServer_HasExpectedBoundProperties,The length of the statement  "                CloudJob boundJob = client.JobOperations.GetJob(jobId' additionalBehaviors: InterceptorFactory.CreateGetJobRequestInterceptor(protoJob)); " is 137.
Long Statement,Azure.Batch.Unit.Tests,BindingStateConstraintUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BindingStateConstraintUnitTests.cs,CloudJob_WhenReturnedFromServer_HasExpectedBoundProperties,The length of the statement  "                Assert.Throws<InvalidOperationException>(() => boundJob.JobManagerTask.ApplicationPackageReferences = new List<ApplicationPackageReference>()); " is 143.
Long Statement,Azure.Batch.Unit.Tests,BindingStateConstraintUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BindingStateConstraintUnitTests.cs,CloudTask_WhenReturnedFromServer_HasExpectedBoundProperties,The length of the statement  "                        ExitCodeRanges = new List<Models.ExitCodeRangeMapping>() { new Models.ExitCodeRangeMapping(exitCodeRangeStart' exitCodeRangeEnd' terminateExitOption) }' " is 152.
Long Statement,Azure.Batch.Unit.Tests,BindingStateConstraintUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BindingStateConstraintUnitTests.cs,CloudTask_WhenReturnedFromServer_HasExpectedBoundProperties,The length of the statement  "                // These need to be compared as strings because they are different types but we are interested in the values being the same. " is 124.
Long Statement,Azure.Batch.Unit.Tests,BindingStateConstraintUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BindingStateConstraintUnitTests.cs,CloudTask_WhenReturnedFromServer_HasExpectedBoundProperties,The length of the statement  "                Assert.Throws<InvalidOperationException>(() => boundTask.DependsOn = new TaskDependencies(new List<string>()' new List<TaskIdRange>())); " is 136.
Long Statement,Azure.Batch.Unit.Tests,BindingStateConstraintUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BindingStateConstraintUnitTests.cs,CloudTask_WhenReturnedFromServer_HasExpectedBoundProperties,The length of the statement  "                Assert.Throws<InvalidOperationException>(() => boundTask.ExitConditions.Default = new ExitOptions() { JobAction = JobAction.Terminate }); " is 137.
Long Statement,Azure.Batch.Unit.Tests,BindingStateConstraintUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BindingStateConstraintUnitTests.cs,AssertPatchableJobPropertiesCanBeWritten,The length of the statement  "            Assert.Equal(osFamily' boundJob.PoolInformation.AutoPoolSpecification.PoolSpecification.CloudServiceConfiguration.OSFamily); " is 124.
Long Statement,Azure.Batch.Unit.Tests,CommitAndRefreshUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\CommitAndRefreshUnitTests.cs,UnboundJobScheduleCommitAndRefreshWorks,The length of the statement  "                await jobSchedule.RefreshAsync(additionalBehaviors: InterceptorFactory.CreateGetJobScheduleRequestInterceptor(protoJobSchedule)); " is 129.
Long Statement,Azure.Batch.Unit.Tests,CommitAndRefreshUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\CommitAndRefreshUnitTests.cs,UnboundCertificateCommitAndRefreshWorks,The length of the statement  "                await certificate.RefreshAsync(additionalBehaviors: InterceptorFactory.CreateGetCertificateRequestInterceptor(protoCertificate)); " is 129.
Long Statement,Azure.Batch.Unit.Tests,ComputeNodeUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ComputeNodeUnitTests.cs,TestComputeNodeCertificateReferencesAreReadOnly,The length of the statement  "                Assert.Throws<InvalidOperationException>(() => { computeNodeCertificateReference.StoreLocation = CertStoreLocation.CurrentUser; }); " is 131.
Long Statement,Azure.Batch.Unit.Tests,ComputeNodeUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ComputeNodeUnitTests.cs,TestComputeNodeCertificateReferencesAreReadOnly,The length of the statement  "                Assert.Throws<InvalidOperationException>(() => { computeNodeCertificateReference.Visibility = CertificateVisibility.None; }); " is 125.
Long Statement,Azure.Batch.Unit.Tests,ConcurrentChangeTrackedListUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ConcurrentChangeTrackedListUnitTests.cs,ConcurrentChangeTrackedComplexTypeListReadOnly,The length of the statement  "            var list = new ConcurrentChangeTrackedModifiableList<DummyComplexType>(new List<DummyComplexType> { new DummyComplexType() }); " is 126.
Long Statement,Azure.Batch.Unit.Tests,EnumUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\EnumUnitTests.cs,TestHandcodedEnumsMatchSwaggerGeneratedEnums,The length of the statement  "            List<Type> enumTypes = arbitraryHandcraftedEnum.Assembly.GetTypes().Where(t => t.GetTypeInfo().IsEnum && t.Namespace == handcraftedEnumNamespace).ToList(); " is 155.
Long Statement,Azure.Batch.Unit.Tests,EnumUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\EnumUnitTests.cs,TestHandcodedEnumsMatchSwaggerGeneratedEnums,The length of the statement  "            List<Type> generatedEnumTypes = arbitraryGeneratedEnum.Assembly.GetTypes().Where(t => t.GetTypeInfo().IsEnum && t.Namespace == generatedEnumNamespace).ToList(); " is 160.
Long Statement,Azure.Batch.Unit.Tests,EnumUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\EnumUnitTests.cs,TestHandcodedEnumsMatchSwaggerGeneratedEnums,The length of the statement  "                handcraftedEnum => generatedEnumTypes.FirstOrDefault(generatedEnum => this.DoEnumTypeMatch(generatedEnum' handcraftedEnum)) == null); " is 133.
Long Statement,Azure.Batch.Unit.Tests,ExceptionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ExceptionUnitTests.cs,GetInnerExceptionText,The length of the statement  "            IEnumerable<string> splitResults = exceptionString.Split(new[] { "Exception #" }' StringSplitOptions.RemoveEmptyEntries); " is 121.
Long Statement,Azure.Batch.Unit.Tests,FileUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\FileUnitTests.cs,CreateBatchClientWithHandler,The length of the statement  "            return BatchClient.Open(new Protocol.BatchServiceClient(new TokenCredentials("xyz")' handler) { BatchUrl = @"https://foo.microsoft.test" }); " is 140.
Long Statement,Azure.Batch.Unit.Tests,GetFileRequestByteRangeTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\GetFileRequestByteRangeTests.cs,VerifyOcpRangeSetWhenDownloadingFileAsync,The length of the statement  "            BatchClientBehavior getFakeNodeFile = CreateFakeNodeFileInterceptor<TPropertiesRequest' TPropertiesOptions' TPropertiesHeaders>(); " is 130.
Long Statement,Azure.Batch.Unit.Tests,HttpClientBehaviorTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\HttpClientBehaviorTests.cs,HttpClient_IncludesContentLengthHeaderOnExpectedHttpVerbs,The length of the statement  "            BatchSharedKeyCredential creds = new BatchSharedKeyCredential(ClientUnitTestCommon.DummyAccountName' ClientUnitTestCommon.DummyAccountKey); " is 139.
Long Statement,Azure.Batch.Unit.Tests,InterceptorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\InterceptorUnitTests.cs,TestSetBatchRequestServerTimeout,The length of the statement  "            await Assert.ThrowsAsync<ArgumentOutOfRangeException>(() => this.TestSetBatchRequestServerTimeoutHelperAsync(TimeSpan.MaxValue' null)); " is 135.
Long Statement,Azure.Batch.Unit.Tests,InterceptorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\InterceptorUnitTests.cs,TestSetBatchRequestServerTimeout,The length of the statement  "            await Assert.ThrowsAsync<ArgumentOutOfRangeException>(() => this.TestSetBatchRequestServerTimeoutHelperAsync(TimeSpan.FromSeconds(-44)' null)); " is 143.
Long Statement,Azure.Batch.Unit.Tests,InterceptorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\InterceptorUnitTests.cs,TestSetBatchRequestServerTimeout,The length of the statement  "            await Assert.ThrowsAsync<ArgumentOutOfRangeException>(() => this.TestSetBatchRequestServerTimeoutHelperAsync(TimeSpan.FromMinutes(-120)' -60)); " is 143.
Long Statement,Azure.Batch.Unit.Tests,InterceptorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\InterceptorUnitTests.cs,TestSetBatchRequestServerTimeout,The length of the statement  "            await Assert.ThrowsAsync<ArgumentOutOfRangeException>(() => this.TestSetBatchRequestServerTimeoutHelperAsync(TimeSpan.MinValue' null)); " is 135.
Long Statement,Azure.Batch.Unit.Tests,InterceptorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\InterceptorUnitTests.cs,TestRequestWhichDoesntSupportFilter,The length of the statement  "                ArgumentException e = await Assert.ThrowsAsync<ArgumentException>(async () => await client.PoolOperations.GetPoolAsync(dummyPoolId' detailLevel' new [] { behavior })); " is 167.
Long Statement,Azure.Batch.Unit.Tests,InterceptorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\InterceptorUnitTests.cs,TestRequestWhichDoesntSupportFilter,The length of the statement  "                Assert.Contains("Type Microsoft.Azure.Batch.Protocol.BatchRequests.PoolGetBatchRequest does not support a filter clause."' e.Message); " is 134.
Long Statement,Azure.Batch.Unit.Tests,InterceptorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\InterceptorUnitTests.cs,TestSetBatchRequestServerTimeoutHelperAsync,The length of the statement  "                batchCli.CustomBehaviors.Add(new Protocol.RequestInterceptor((req) => ConfirmTimeoutWasSetInterceptor(req' expectedClientTimeout' expectedServerTimeoutInSeconds))); " is 164.
Long Statement,Azure.Batch.Unit.Tests,InterceptorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\InterceptorUnitTests.cs,ConfirmTimeoutWasSetInterceptor,The length of the statement  "                    return Task.FromResult(new AzureOperationResponse<Protocol.Models.CloudPool' Protocol.Models.PoolGetHeaders> { Body = new Protocol.Models.CloudPool() }); " is 153.
Long Statement,Azure.Batch.Unit.Tests,JobAutoTerminationUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\JobAutoTerminationUnitTests.cs,UpdateBoundJobWithNewAutoTerminationPropertiesTest,The length of the statement  "                Models.CloudJob protoJob = new Models.CloudJob(id: "id"' onAllTasksComplete: Models.OnAllTasksComplete.NoAction' onTaskFailure: Models.OnTaskFailure.PerformExitOptionsJobAction); " is 178.
Long Statement,Azure.Batch.Unit.Tests,JobAutoTerminationUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\JobAutoTerminationUnitTests.cs,UpdateBoundJobWithNewAutoTerminationPropertiesTest,The length of the statement  "                CloudJob boundJob = await client.JobOperations.GetJobAsync(string.Empty' additionalBehaviors: InterceptorFactory.CreateGetJobRequestInterceptor(protoJob)); " is 155.
Long Statement,Azure.Batch.Unit.Tests,JobAutoTerminationUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\JobAutoTerminationUnitTests.cs,ExitConditionsAreSentOnTask,The length of the statement  "                Models.CloudJob protoJob = new Models.CloudJob(id: jobId' onAllTasksComplete: Models.OnAllTasksComplete.NoAction' onTaskFailure: Models.OnTaskFailure.PerformExitOptionsJobAction); " is 179.
Long Statement,Azure.Batch.Unit.Tests,JobAutoTerminationUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\JobAutoTerminationUnitTests.cs,ExitConditionsAreSentOnTask,The length of the statement  "                var fakeAddTaskResponse = ClientUnitTestCommon.SimulateServiceResponse<Models.TaskAddParameter' Models.TaskAddOptions' AzureOperationHeaderResponse<Models.TaskAddHeaders>>((parameters' options) => " is 196.
Long Statement,Azure.Batch.Unit.Tests,JobAutoTerminationUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\JobAutoTerminationUnitTests.cs,ExitConditionsAreSentOnTask,The length of the statement  "                    Assert.Equal((Models.JobAction?)JobAction.Disable' parameters.ExitConditions.ExitCodeRanges.First().ExitOptions.JobAction); " is 123.
Long Statement,Azure.Batch.Unit.Tests,JobAutoTerminationUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\JobAutoTerminationUnitTests.cs,ExitConditionsAreSentOnTask,The length of the statement  "                    // These need to be compared as strings because they are different types but we are interested in the values being the same. " is 124.
Long Statement,Azure.Batch.Unit.Tests,JobAutoTerminationUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\JobAutoTerminationUnitTests.cs,ExitConditionsAreSentOnTask,The length of the statement  "                    Assert.Equal(DependencyAction.Satisfy.ToString()' parameters.ExitConditions.ExitCodeRanges.First().ExitOptions.DependencyAction.ToString()); " is 140.
Long Statement,Azure.Batch.Unit.Tests,JobAutoTerminationUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\JobAutoTerminationUnitTests.cs,ExitConditionsAreSentOnTask,The length of the statement  "                CloudJob boundJob = await client.JobOperations.GetJobAsync(string.Empty' additionalBehaviors: InterceptorFactory.CreateGetJobRequestInterceptor(protoJob)); " is 155.
Long Statement,Azure.Batch.Unit.Tests,JobAutoTerminationUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\JobAutoTerminationUnitTests.cs,ExitConditionsAreSentOnTask,The length of the statement  "                        new ExitCodeRangeMapping(0' 4' new ExitOptions() { DependencyAction = DependencyAction.Satisfy' JobAction = JobAction.Disable' }) " is 129.
Long Statement,Azure.Batch.Unit.Tests,ODataUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ODataUnitTests.cs,CanUseODataPredicatesOnJobPrepAndReleaseStatusListWithMultiplePages,The length of the statement  "                IEnumerable<JobPreparationAndReleaseTaskExecutionInformation> jobPrepAndReleaseInfo = client.JobOperations.ListJobPreparationAndReleaseTaskStatus( " is 146.
Long Statement,Azure.Batch.Unit.Tests,OptionsUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\OptionsUnitTests.cs,TestOptionsDontMissODataParameters,The length of the statement  "                Assert.True(typeof(Protocol.Models.IOptions).IsAssignableFrom(optionsType)' string.Format("type {0} missing IOptions"' optionsType)); " is 133.
Long Statement,Azure.Batch.Unit.Tests,OptionsUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\OptionsUnitTests.cs,TestOptionsDontMissODataParameters,The length of the statement  "                    Assert.True(typeof(Protocol.Models.IODataFilter).IsAssignableFrom(optionsType)' string.Format("type {0} missing filter"' optionsType)); " is 135.
Long Statement,Azure.Batch.Unit.Tests,OptionsUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\OptionsUnitTests.cs,TestOptionsDontMissODataParameters,The length of the statement  "                    Assert.True(typeof(Protocol.Models.IODataSelect).IsAssignableFrom(optionsType)' string.Format("type {0} missing select"' optionsType)); " is 135.
Long Statement,Azure.Batch.Unit.Tests,OptionsUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\OptionsUnitTests.cs,TestOptionsDontMissODataParameters,The length of the statement  "                    Assert.True(typeof(Protocol.Models.IODataExpand).IsAssignableFrom(optionsType)' string.Format("type {0} missing expand"' optionsType)); " is 135.
Long Statement,Azure.Batch.Unit.Tests,OptionsUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\OptionsUnitTests.cs,TestOptionsDontMissODataParameters,The length of the statement  "                    Assert.True(typeof(Protocol.Models.ITimeoutOptions).IsAssignableFrom(optionsType)' string.Format("type {0} missing timeout"' optionsType)); " is 139.
Long Statement,Azure.Batch.Unit.Tests,PagedCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PagedCollectionUnitTests.cs,ForEachAsyncFuncSupportsCancellation,The length of the statement  "                await Assert.ThrowsAsync<OperationCanceledException>(async () => await seq.ForEachAsync(item => Task.Delay(0)' source.Token)); " is 126.
Long Statement,Azure.Batch.Unit.Tests,PatchUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PatchUnitTests.cs,TestPatchPool_ChangedComplexParameterIsSerialized,The length of the statement  "            var protoPool = new Protocol.Models.CloudPool(id: poolId' startTask: new Protocol.Models.StartTask(commandLine: "Foo")); " is 120.
Long Statement,Azure.Batch.Unit.Tests,PatchUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PatchUnitTests.cs,TestPatchJobSchedule_ThrowsOnNullPropertySet,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => CommonPatchJobScheduleTest(protoJobSchedule' modificationFunction' assertAction)); " is 129.
Long Statement,Azure.Batch.Unit.Tests,PatchUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PatchUnitTests.cs,TestPatchJobSchedule_NewComplexParameterIsSerialized,The length of the statement  "            Action<CloudJobSchedule> modificationFunction = jobSchedule => jobSchedule.JobSpecification = new JobSpecification() { Priority = newPriority }; " is 144.
Long Statement,Azure.Batch.Unit.Tests,PatchUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PatchUnitTests.cs,TestPatchJobSchedule_ChangedCollectionParameterIsSerialized,The length of the statement  "            Action<CloudJobSchedule> modificationFunction = jobSchedule => jobSchedule.Metadata.Add(new MetadataItem("Baz"' "Qux")); " is 120.
Long Statement,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolsListTest,The length of the statement  "                    var request = (Protocol.BatchRequest<Models.PoolListOptions' AzureOperationResponse<IPage<Models.CloudPool>' Models.PoolListHeaders>>)baseRequest; " is 146.
Long Statement,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolsListTest,The length of the statement  "                                            new Models.CloudPool { DisplayName = "foobar"' CloudServiceConfiguration = new Models.CloudServiceConfiguration("3")' AllocationState = Models.AllocationState.Steady}' " is 167.
Long Statement,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolsListTest,The length of the statement  "                IPagedEnumerable<Microsoft.Azure.Batch.CloudPool> asyncPools = client.PoolOperations.ListPools(additionalBehaviors: new List<BatchClientBehavior> { interceptor }); " is 163.
Long Statement,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolTestNonNullProperties,The length of the statement  "                    var request = (Protocol.BatchRequest<Models.PoolGetOptions' AzureOperationResponse<Models.CloudPool' Models.PoolGetHeaders>>)baseRequest; " is 137.
Long Statement,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolTestNonNullProperties,The length of the statement  "                                TaskSchedulingPolicy = new Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy { NodeFillType = Models.ComputeNodeFillType.Pack } " is 136.
Long Statement,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolTestNonNullProperties,The length of the statement  "                var pool = client.PoolOperations.GetPool("batch-test"' additionalBehaviors: new List<BatchClientBehavior> { interceptor }); " is 123.
Long Statement,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolResizeError,The length of the statement  "                    var request = (Protocol.BatchRequest<Models.PoolGetOptions' AzureOperationResponse<Models.CloudPool' Models.PoolGetHeaders>>)baseRequest; " is 137.
Long Statement,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolResizeError,The length of the statement  "                var pool = client.PoolOperations.GetPool("batch-test"' additionalBehaviors: new List<BatchClientBehavior> { interceptor }); " is 123.
Long Statement,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolResizeError,The length of the statement  "                Assert.Equal("Line 1' Col 24: Insufficient data from data set: $RunningTasks wanted 100%' received 0%"' pool.AutoScaleRun.Error.Values.First().Value); " is 150.
Long Statement,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolStartTask,The length of the statement  "                    var request = (Protocol.BatchRequest<Models.PoolGetOptions' AzureOperationResponse<Models.CloudPool' Models.PoolGetHeaders>>)baseRequest; " is 137.
Long Statement,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolStartTask,The length of the statement  "                var pool = client.PoolOperations.GetPool("batch-test"' additionalBehaviors: new List<BatchClientBehavior> { interceptor }); " is 123.
Long Statement,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,ListComputeNodes,The length of the statement  "                    var request = (Protocol.BatchRequest<Models.ComputeNodeListOptions' AzureOperationResponse<IPage<Models.ComputeNode>' Models.ComputeNodeListHeaders>>)baseRequest; " is 162.
Long Statement,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,ListComputeNodes,The length of the statement  "                List<Microsoft.Azure.Batch.ComputeNode> vms = client.PoolOperations.ListComputeNodes("foo"' additionalBehaviors: new List<BatchClientBehavior> { interceptor }).ToList(); " is 169.
Long Statement,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,ComplexValueSet_ValueIsGettable,The length of the statement  "            var accessor = new PropertyAccessor<DummyComplexProperty>(controller' string.Empty' BindingAccess.Read | BindingAccess.Write); " is 126.
Long Statement,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,ComplexValueSet_HasBeenModifiedChanges,The length of the statement  "            var accessor = new PropertyAccessor<DummyComplexProperty>(controller' string.Empty' BindingAccess.Read | BindingAccess.Write); " is 126.
Long Statement,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,ComplexValueChanged_HasBeenModifiedChanges,The length of the statement  "            var accessor = new PropertyAccessor<DummyComplexProperty>(thing' controller' string.Empty' BindingAccess.Read | BindingAccess.Write); " is 133.
Long Statement,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,ComplexPropertyReadOnlySet_ObjectIsReadable,The length of the statement  "            var accessor = new PropertyAccessor<DummyComplexProperty>(property' controller' string.Empty' BindingAccess.Read | BindingAccess.Write); " is 136.
Long Statement,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,ComplexPropertyReadOnlySet_ObjectIsNotWritable,The length of the statement  "            var accessor = new PropertyAccessor<DummyComplexProperty>(property' controller' string.Empty' BindingAccess.Read | BindingAccess.Write); " is 136.
Long Statement,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,ComplexPropertyReadOnlySetAndUnset_ObjectIsReadWritable,The length of the statement  "            var accessor = new PropertyAccessor<DummyComplexProperty>(property' controller' string.Empty' BindingAccess.Read | BindingAccess.Write); " is 136.
Long Statement,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,BuildCertificateReference,The length of the statement  "            Protocol.Models.CertificateReference reference = this.defaultObjectFactory.GenerateNew<Protocol.Models.CertificateReference>(); " is 127.
Long Statement,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,BuildAuthenticationTokenSettings,The length of the statement  "            Protocol.Models.AuthenticationTokenSettings tokenSettings = this.defaultObjectFactory.GenerateNew<Protocol.Models.AuthenticationTokenSettings>(); " is 145.
Long Statement,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,TestRandomBoundPrepReleaseTaskExecutionInformationProperties,The length of the statement  "                    ObjectComparer.CheckEqualityResult result = this.objectComparer.CheckEquality(boundJobPrepReleaseExecutionInfo' jobPrepReleaseExecutionInfo); " is 141.
Long Statement,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,TestIReadOnlyMakesPropertiesReadOnly,The length of the statement  "            //Use reflection to traverse the set of objects in the DLL' find those that implement IReadOnly' and ensure that IReadOnly works for all " is 136.
Long Statement,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,TestIReadOnlyMakesPropertiesReadOnly,The length of the statement  "            List<Type> typesWithIReadOnlyBase = GetTypesWhichImplementInterface(iReadOnlyType.GetTypeInfo().Assembly' iReadOnlyType' requirePublicConstructor: false).ToList(); " is 163.
Long Statement,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,TestIReadOnlyMakesPropertiesReadOnly,The length of the statement  "                        //Note that for value types null is mapped to default(valueType).  See: https://msdn.microsoft.com/en-us/library/xb5dd1f1%28v=vs.110%29.aspx " is 140.
Long Statement,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,TestGetTransportObjectDoesntMissProperties,The length of the statement  "            //Use reflection to traverse the set of objects in the DLL' find those that implement ITransportObjectProvider' ensure that GetTransportObject works for all " is 156.
Long Statement,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,TestGetTransportObjectDoesntMissProperties,The length of the statement  "            IEnumerable<Type> types = GetTypesWhichImplementInterface(iTransportObjectProviderType.GetTypeInfo().Assembly' iTransportObjectProviderType' requirePublicConstructor: false); " is 174.
Long Statement,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,TestGetTransportObjectDoesntMissProperties,The length of the statement  "                    //object protocolObject = concreteInterfaceType.GetMethod("GetTransportObject").Invoke(o' BindingFlags.Instance | BindingFlags.NonPublic' null' null' null); " is 156.
Long Statement,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,TestAutoPoolSpecificationUnboundConstraints,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => autoPoolSpecification.PoolLifetimeOption = PoolLifetimeOption.JobSchedule); " is 122.
Long Statement,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,TestAutoPoolSpecificationUnboundConstraints,The length of the statement  "            InvalidOperationException e = Assert.Throws<InvalidOperationException>(() => autoPoolSpecification.PoolSpecification = new PoolSpecification()); " is 144.
Long Statement,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,TestAutoPoolSpecificationUnboundConstraints,The length of the statement  "            Assert.Equal(poolLifetimeOption' UtilitiesInternal.MapEnum<Protocol.Models.PoolLifetimeOption' PoolLifetimeOption>(protoAutoPoolSpecification.PoolLifetimeOption)); " is 163.
Long Statement,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,TestAutoPoolSpecificationBoundConstraints,The length of the statement  "            Assert.Equal(UtilitiesInternal.MapEnum<Protocol.Models.PoolLifetimeOption' PoolLifetimeOption>(protoAutoPoolSpecification.PoolLifetimeOption)' autoPoolSpecification.PoolLifetimeOption); " is 185.
Long Statement,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,TestAutoPoolSpecificationBoundConstraints,The length of the statement  "            Assert.Equal(protoAutoPoolSpecification.Pool.CloudServiceConfiguration.OsFamily' autoPoolSpecification.PoolSpecification.CloudServiceConfiguration.OSFamily); " is 157.
Long Statement,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,TestAutoPoolSpecificationBoundConstraints,The length of the statement  "            Assert.Equal(protoAutoPoolSpecification.Pool.StartTask.CommandLine' autoPoolSpecification.PoolSpecification.StartTask.CommandLine); " is 131.
Long Statement,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,LinearRetryThrowsOnInvalidMaxRetry,The length of the statement  "            ArgumentOutOfRangeException e = Assert.Throws<ArgumentOutOfRangeException>(() => { new LinearRetry(interval' maxRetries); }); " is 125.
Long Statement,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,LinearRetryThrowsOnInvalidInterval,The length of the statement  "            ArgumentOutOfRangeException e = Assert.Throws<ArgumentOutOfRangeException>(() => { new LinearRetry(interval' maxRetries); }); " is 125.
Long Statement,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,ExponentialRetryThrowsOnInvalidMaxRetry,The length of the statement  "            ArgumentOutOfRangeException e = Assert.Throws<ArgumentOutOfRangeException>(() => { new ExponentialRetry(interval' maxRetries); }); " is 130.
Long Statement,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,ExponentialRetryThrowsOnInvalidInterval,The length of the statement  "            ArgumentOutOfRangeException e = Assert.Throws<ArgumentOutOfRangeException>(() => { new ExponentialRetry(interval' maxRetries); }); " is 130.
Long Statement,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,BatchRequestRetriesExecutedWithAggregateException,The length of the statement  "            InvalidOperationException e = await Assert.ThrowsAsync<InvalidOperationException>(async () => { await executeRequestTask; }); " is 125.
Long Statement,Azure.Batch.Unit.Tests,StaticAnalysisUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\StaticAnalysisUnitTests.cs,DotWaitAndDotResultAreNeverUsed,The length of the statement  "            //(?<!this\\.?)\\.Result(\\.|;|\\s|') -- matches .Result followed by a .' ;' whitespace' or ' which is not prefixed immediately by "this." " is 138.
Long Statement,Azure.Batch.Unit.Tests,StaticAnalysisUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\StaticAnalysisUnitTests.cs,DotWaitAndDotResultAreNeverUsed,The length of the statement  "                this.testOutputHelper.WriteLine("Found .Wait or .Result in {0} at {1} -- {2}"' parserResult.File' parserResult.LineNumber' parserResult.Match); " is 143.
Long Statement,Azure.Batch.Unit.Tests,StreamUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\StreamUnitTests.cs,DownloadingAHugeNodeFileDoesNotThrowOutOfMemoryException,The length of the statement  "                    NodeFile file = new ComputeNodeFile(batchCli.PoolOperations' poolId' vmName' protoFile' new List<BatchClientBehavior>()); " is 121.
Long Statement,Azure.Batch.Unit.Tests,SynchronousMethodExceptionBehaviorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\SynchronousMethodExceptionBehaviorUnitTests.cs,SynchronousMethodsCompatibilityHandlerThrownAggregateIsWrapped,The length of the statement  "                AggregateException outerAggregate = Assert.Throws<AggregateException>(() => batchClient.JobOperations.GetJob(dummyJobId)); " is 122.
Long Statement,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,CannotSetUsesTaskDependenciesFromABoundCloudJob,The length of the statement  "                        var request = (Protocol.BatchRequest<Models.JobGetOptions' AzureOperationResponse<Models.CloudJob' Models.JobGetHeaders>>)baseRequest; " is 134.
Long Statement,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,CanReadUsesTaskDependenciesFromABoundCloudJobScheduleTest,The length of the statement  "                            var request = (Protocol.BatchRequest<Models.JobScheduleGetOptions' AzureOperationResponse<Models.CloudJobSchedule' Models.JobScheduleGetHeaders>>)baseRequest; " is 158.
Long Statement,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,CanReadUsesTaskDependenciesFromABoundCloudJobScheduleTest,The length of the statement  "                                        Body = new Protocol.Models.CloudJobSchedule(jobId' schedule: new Protocol.Models.Schedule()' jobSpecification: new Protocol.Models.JobSpecification(){ UsesTaskDependencies = true }) " is 181.
Long Statement,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,CanReadUsesTaskDependenciesFromABoundCloudJobScheduleTest,The length of the statement  "                Microsoft.Azure.Batch.CloudJobSchedule unboundCloudJob = client.JobScheduleOperations.GetJobSchedule(jobId' additionalBehaviors: new List<BatchClientBehavior> { interceptor }); " is 176.
Long Statement,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,CannotModifyUsesTaskDependenciesOnAJobScheduleAfterItHasBeenCommitted,The length of the statement  "                                    var response = new AzureOperationHeaderResponse<Models.JobScheduleAddHeaders> { Response = new HttpResponseMessage(HttpStatusCode.Created) }; " is 141.
Long Statement,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,CannotModifyUsesTaskDependenciesOnAJobScheduleAfterItHasBeenCommitted,The length of the statement  "                Microsoft.Azure.Batch.JobSpecification jobSpec = new Microsoft.Azure.Batch.JobSpecification(poolInformation: null) { UsesTaskDependencies = usesTaskDependencies }; " is 163.
Long Statement,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy,The length of the statement  "                var returnFakeJob = ClientUnitTestCommon.SimulateServiceResponse<Models.JobGetOptions' AzureOperationResponse<Models.CloudJob' Models.JobGetHeaders>>(_ => " is 154.
Long Statement,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy,The length of the statement  "                var verifyTaskDependencies = ClientUnitTestCommon.SimulateServiceResponse<Models.TaskAddParameter' Models.TaskAddOptions' AzureOperationHeaderResponse<Models.TaskAddHeaders>>((parameters' options) => " is 199.
Long Statement,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy,The length of the statement  "                        DependsOn = new Microsoft.Azure.Batch.TaskDependencies(new[] { j.ToString() }' new[] { new Microsoft.Azure.Batch.TaskIdRange(5' 15) })' " is 135.
Long Statement,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly,The length of the statement  "                var returnFakeTasks = ClientUnitTestCommon.SimulateServiceResponse<Models.TaskListOptions' AzureOperationResponse<IPage<Models.CloudTask>' Models.TaskListHeaders>>(_ => " is 168.
Long Statement,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,CannotModifyDependenciesOfABoundTask,The length of the statement  "                var returnFakeTasks = ClientUnitTestCommon.SimulateServiceResponse<Models.TaskGetOptions' AzureOperationResponse<Models.CloudTask' Models.TaskGetHeaders>>(_ => " is 159.
Long Statement,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray,The length of the statement  "            var tasks = Enumerable.Range(1' 4).Select(i => new Microsoft.Azure.Batch.CloudTask("frame" + i' "cmd /c hostname")).ToArray(); " is 126.
Long Statement,Azure.Batch.Unit.Tests,UtilitiesInternalUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\UtilitiesInternalUnitTests.cs,IModifiableCollectionFromExistingCollectionIsNotChanged,The length of the statement  "            ConcurrentChangeTrackedModifiableList<MetadataItem> result = UtilitiesInternal.CollectionToThreadSafeCollectionIModifiable( " is 123.
Long Statement,Azure.Batch.Unit.Tests,UtilitiesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\UtilitiesUnitTests.cs,TaskStateMonitorCancellation,The length of the statement  "                IEnumerable<CloudTask> taskList = protocolTasks.Select(protoTask => CreateBoundCloudTask(batchCli' dummyJobId' protoTask)); " is 123.
Long Statement,Azure.Batch.Unit.Tests,UtilitiesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\UtilitiesUnitTests.cs,TaskStateMonitorTimedOut_ThrowsTimeoutException,The length of the statement  "                IEnumerable<CloudTask> taskList = protocolTasks.Select(protoTask => CreateBoundCloudTask(batchCli' dummyJobId' protoTask)); " is 123.
Long Statement,Azure.Batch.Unit.Tests,UtilitiesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\UtilitiesUnitTests.cs,TaskStateMonitorCancelled_ThrowsCancellationException,The length of the statement  "                IEnumerable<CloudTask> taskList = protocolTasks.Select(protoTask => CreateBoundCloudTask(batchCli' dummyJobId' protoTask)); " is 123.
Long Statement,Azure.Batch.Unit.Tests.TestUtilities,ComparisonRule,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\ComparisonRule.cs,Flip,The length of the statement  "            return new ComparisonRule(this.Type2' this.Type1' (o1' o2) => this.Comparer(o2' o1)' this.Type2PropertyName' this.Type1PropertyName); " is 133.
Long Statement,Azure.Batch.Unit.Tests.TestUtilities,InterceptorFactory,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\InterceptorFactory.cs,CreateGetJobRequestInterceptor,The length of the statement  "            return CreateGetRequestInterceptor<Protocol.Models.JobGetOptions' Protocol.Models.CloudJob' Protocol.Models.JobGetHeaders>(jobToReturn' getHeaders); " is 148.
Long Statement,Azure.Batch.Unit.Tests.TestUtilities,InterceptorFactory,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\InterceptorFactory.cs,CreateGetTaskRequestInterceptor,The length of the statement  "            return CreateGetRequestInterceptor<Protocol.Models.TaskGetOptions' Protocol.Models.CloudTask' Protocol.Models.TaskGetHeaders>(TaskToReturn); " is 140.
Long Statement,Azure.Batch.Unit.Tests.TestUtilities,InterceptorFactory,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\InterceptorFactory.cs,CreateGetPoolRequestInterceptor,The length of the statement  "            return CreateGetRequestInterceptor<Protocol.Models.PoolGetOptions' Protocol.Models.CloudPool' Protocol.Models.PoolGetHeaders>(poolToReturn); " is 140.
Long Statement,Azure.Batch.Unit.Tests.TestUtilities,InterceptorFactory,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\InterceptorFactory.cs,CreateGetComputeNodeRequestInterceptor,The length of the statement  "            return CreateGetRequestInterceptor<Protocol.Models.ComputeNodeGetOptions' Protocol.Models.ComputeNode' Protocol.Models.ComputeNodeGetHeaders>(nodeToReturn); " is 156.
Long Statement,Azure.Batch.Unit.Tests.TestUtilities,InterceptorFactory,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\InterceptorFactory.cs,CreateGetJobScheduleRequestInterceptor,The length of the statement  "            return CreateGetRequestInterceptor<Protocol.Models.JobScheduleGetOptions' Protocol.Models.CloudJobSchedule' Protocol.Models.JobScheduleGetHeaders>(jobScheduleToReturn); " is 168.
Long Statement,Azure.Batch.Unit.Tests.TestUtilities,InterceptorFactory,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\InterceptorFactory.cs,CreateGetCertificateRequestInterceptor,The length of the statement  "            return CreateGetRequestInterceptor<Protocol.Models.CertificateGetOptions' Protocol.Models.Certificate' Protocol.Models.CertificateGetHeaders>(certificateToReturn); " is 163.
Long Statement,Azure.Batch.Unit.Tests.TestUtilities,InterceptorFactory,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\InterceptorFactory.cs,CreateAddTaskCollectionInterceptor,The length of the statement  "                    responseFactory: () => new AzureOperationResponse<Protocol.Models.TaskAddCollectionResult' Protocol.Models.TaskAddCollectionHeaders>() " is 134.
Long Statement,Azure.Batch.Unit.Tests.TestUtilities,ObjectComparer,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\ObjectComparer.cs,GetPropertyMappingOrNull,The length of the statement  "            return this.propertyMappings.Select(m => m.FindMatch(type' propertyName)).SingleOrDefault(str => !string.IsNullOrEmpty(str)); " is 125.
Long Statement,Azure.Batch.Unit.Tests.TestUtilities,ObjectFactory,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\ObjectFactory.cs,CreateInstance,The length of the statement  "                ConstructorInfo constructorInfo = constructorInfoCollection.FirstOrDefault(constructor => !constructor.GetParameters().Any()) ?? " is 128.
Long Statement,Azure.Batch.Unit.Tests.TestUtilities,SourceParser,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\SourceParser.cs,Parse,The length of the statement  "            Regex fileNameExcludeRegex = string.IsNullOrEmpty(this.FileNameExcludePattern) ? null : new Regex(this.FileNameExcludePattern); " is 127.
Empty Catch Block,Azure.Batch.Unit.Tests,ConcurrentChangeTrackedListUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ConcurrentChangeTrackedListUnitTests.cs,Bug1910530_ConcurrentChangeTrackedListThreadsafeTest,The method has an empty catch block.
Magic Number,Azure.Batch.Unit.Tests,AddTaskCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\AddTaskCollectionUnitTests.cs,OperationCanceledExceptionRestOperations_OnlyOneIsSeen,The following statement contains a magic number: const int operationCount = 2;
Magic Number,Azure.Batch.Unit.Tests,AddTaskCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\AddTaskCollectionUnitTests.cs,ExceptionOnSomeRestOperationsAllWrappedInParallelOperationsException,The following statement contains a magic number: const int operationCount = 4;
Magic Number,Azure.Batch.Unit.Tests,AddTaskCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\AddTaskCollectionUnitTests.cs,ExceptionOnSomeRestOperationsAllWrappedInParallelOperationsException,The following statement contains a magic number: const int modFactor = 2;
Magic Number,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,GetPoolWithApplicationReferencesTest,The following statement contains a magic number: Protocol.RequestInterceptor interceptor = new Protocol.RequestInterceptor(                      baseRequest =>                      {                          var request = (Protocol.BatchRequest<Models.PoolGetOptions' AzureOperationResponse<Models.CloudPool' Models.PoolGetHeaders>>)baseRequest;                            request.ServiceRequestFunc = (token) =>                          {                              var response = new AzureOperationResponse<Models.CloudPool' Models.PoolGetHeaders>                              {                                  Body = new Models.CloudPool                                  {                                      ApplicationPackageReferences = new[]                                      {                                              new Protocol.Models.ApplicationPackageReference                                              {                                                   ApplicationId = applicationId'                                                   Version = version                                              }                                      }'                                      CurrentDedicatedNodes = 4'                                      CloudServiceConfiguration = new Models.CloudServiceConfiguration(osFamily: "4"' osVersion: "3")'                                      Id = "pool-id"                                  }'                              };                                return Task.FromResult(response);                          };                      });
Magic Number,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,UpdateAPoolWithNewApplicationPackages,The following statement contains a magic number: Protocol.RequestInterceptor interceptor = new Protocol.RequestInterceptor(                      baseRequest =>                      {                          Protocol.BatchRequests.PoolGetBatchRequest request = (Protocol.BatchRequests.PoolGetBatchRequest)baseRequest;                            request.ServiceRequestFunc = (token) =>                          {                              var response = new AzureOperationResponse<Models.CloudPool' Models.PoolGetHeaders>                              {                                  Body = new Protocol.Models.CloudPool                                  {                                      CurrentDedicatedNodes = 4'                                      CloudServiceConfiguration = new Models.CloudServiceConfiguration(osFamily)'                                      Id = poolId                                  }                              };                              return Task.FromResult(response);                          };                      });
Magic Number,Azure.Batch.Unit.Tests,ApplicationPackageReferencesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageReferencesUnitTests.cs,CreateJobScheduleWithApplicationPackageReferences,The following statement contains a magic number: Protocol.RequestInterceptor interceptor = new Protocol.RequestInterceptor(                      baseRequest =>                          {                              var request =                                  (Protocol.BatchRequest<Models.JobScheduleGetOptions' AzureOperationResponse<Models.CloudJobSchedule' Models.JobScheduleGetHeaders>>)baseRequest;                                request.ServiceRequestFunc = (token) =>                                  {                                      var response = new AzureOperationResponse<Models.CloudJobSchedule' Models.JobScheduleGetHeaders>                                      {                                          Body = new Models.CloudJobSchedule                                          {                                              JobSpecification = new Protocol.Models.JobSpecification                                              {                                                  PoolInfo = new Models.PoolInformation                                                   {                                                      AutoPoolSpecification = new Models.AutoPoolSpecification                                                      {                                                          Pool = new Models.PoolSpecification                                                           {                                                              ApplicationPackageReferences = new[]                                                              {                                                                  new Protocol.Models.ApplicationPackageReference                                                                  {                                                                          ApplicationId = applicationId'                                                                          Version = version'                                                                  }                                                              }'                                                              MaxTasksPerNode = 4                                                           }                                                      }                                                    }                                               }                                          }                                      };                                      return Task.FromResult(response);                                  };                          });
Magic Number,Azure.Batch.Unit.Tests,ApplicationPackageUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageUnitTests.cs,IfListApplicationSummariesReturnsNoSkipToken_ThenNoFurtherCallsAreMade,The following statement contains a magic number: Assert.Equal(3' results.Count);
Magic Number,Azure.Batch.Unit.Tests,ApplicationPackageUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageUnitTests.cs,IfListApplicationSummariesReturnsNoSkipToken_ThenNoFurtherCallsAreMade,The following statement contains a magic number: Assert.Equal("app3"' results[2].Id);
Magic Number,Azure.Batch.Unit.Tests,ApplicationPackageUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageUnitTests.cs,IfListApplicationSummariesReturnsASkipToken_ThenFurtherCallsAreMadeUntilItDoesnt,The following statement contains a magic number: Assert.Equal(3' requests.Count);
Magic Number,Azure.Batch.Unit.Tests,ApplicationPackageUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageUnitTests.cs,IfListApplicationSummariesReturnsASkipToken_ThenFurtherCallsAreMadeUntilItDoesnt,The following statement contains a magic number: Assert.Equal(5' results.Count);
Magic Number,Azure.Batch.Unit.Tests,ApplicationPackageUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ApplicationPackageUnitTests.cs,IfListApplicationSummariesReturnsASkipToken_ThenFurtherCallsAreMadeUntilItDoesnt,The following statement contains a magic number: Assert.Equal("app5"' results[4].Id);
Magic Number,Azure.Batch.Unit.Tests,BatchClientUnitTest,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchClientUnitTest.cs,AuthTokenIsBeingSentOnEveryCallToTheService,The following statement contains a magic number: Assert.Equal(2' count);
Magic Number,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,TestBatchRequestUserTokenAndTimeoutSetUserTokenWins,The following statement contains a magic number: await this.BatchRequestCancellationViaInterceptorTestAsync(TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(10));
Magic Number,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,TestBatchRequestUserTokenAndTimeoutSetTimeoutWins,The following statement contains a magic number: await this.BatchRequestCancellationViaInterceptorTestAsync(TimeSpan.FromSeconds(10)' TimeSpan.FromSeconds(1));
Magic Number,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,TestBatchRequestTimeoutCancellationWithRetries,The following statement contains a magic number: const int maxRetries = 3;
Magic Number,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,TestBatchRequestTimeoutCancellationWithRetries,The following statement contains a magic number: TimeSpan retryInterval = TimeSpan.FromSeconds(.1);
Magic Number,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,TestBatchRequestUserTokenCancellationWithRetries,The following statement contains a magic number: const int maxRetries = 3;
Magic Number,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,TestBatchRequestUserTokenCancellationWithRetries,The following statement contains a magic number: TimeSpan retryInterval = TimeSpan.FromSeconds(.1);
Magic Number,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,TestBatchExceptionCreatedWithRetryAfterDuration,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(10)' batchException.RequestInformation.RetryAfter);
Magic Number,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,TestBatchExceptionCreatedWithRetryAfterDateTime,The following statement contains a magic number: DateTime retryAfter = DateTime.UtcNow.Add(TimeSpan.FromSeconds(10));
Magic Number,Azure.Batch.Unit.Tests,BatchRequestUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BatchRequestUnitTests.cs,TestBatchExceptionCreatedWithRetryAfterDateTime,The following statement contains a magic number: Assert.True(batchException.RequestInformation.RetryAfter <= TimeSpan.FromSeconds(10));
Magic Number,Azure.Batch.Unit.Tests,BindingStateConstraintUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BindingStateConstraintUnitTests.cs,Pool_WhenReturnedFromServer_HasExpectedUnboundProperties,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => cloudPool.ResizeTimeout = TimeSpan.FromSeconds(10));
Magic Number,Azure.Batch.Unit.Tests,BindingStateConstraintUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BindingStateConstraintUnitTests.cs,Pool_WhenReturnedFromServer_HasExpectedUnboundProperties,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => cloudPool.TargetDedicatedComputeNodes = 5);
Magic Number,Azure.Batch.Unit.Tests,BindingStateConstraintUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BindingStateConstraintUnitTests.cs,CloudTask_WhenReturnedFromServer_HasExpectedBoundProperties,The following statement contains a magic number: const int exitCodeRangeEnd = 4;
Magic Number,Azure.Batch.Unit.Tests,BindingStateConstraintUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BindingStateConstraintUnitTests.cs,AssertPatchableJobPropertiesCanBeWritten,The following statement contains a magic number: boundJob.Constraints = new JobConstraints(maxWallClockTime' 2);
Magic Number,Azure.Batch.Unit.Tests,BindingStateConstraintUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\BindingStateConstraintUnitTests.cs,AssertPatchableJobPropertiesCanBeWritten,The following statement contains a magic number: Assert.Equal(2' boundJob.Constraints.MaxTaskRetryCount);
Magic Number,Azure.Batch.Unit.Tests,ConcurrentChangeTrackedListUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ConcurrentChangeTrackedListUnitTests.cs,Bug1910530_ConcurrentChangeTrackedListThreadsafeTest,The following statement contains a magic number: Parallel.For(0' 100' new ParallelOptions() { MaxDegreeOfParallelism = 10 }' (i) =>                  {                      int randomInt;                      lock (randLock)                      {                          randomInt = rand.Next(0' 2);                      }                        if (randomInt == 0)                      {                          addAction();                      }                      else                      {                          removeAction();                      }                  });
Magic Number,Azure.Batch.Unit.Tests,ConcurrentChangeTrackedListUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ConcurrentChangeTrackedListUnitTests.cs,Bug1910530_ConcurrentChangeTrackedListThreadsafeTest,The following statement contains a magic number: Parallel.For(0' 100' new ParallelOptions() { MaxDegreeOfParallelism = 10 }' (i) =>                  {                      int randomInt;                      lock (randLock)                      {                          randomInt = rand.Next(0' 2);                      }                        if (randomInt == 0)                      {                          addAction();                      }                      else                      {                          removeAction();                      }                  });
Magic Number,Azure.Batch.Unit.Tests,ConcurrentChangeTrackedListUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ConcurrentChangeTrackedListUnitTests.cs,Bug1910530_ConcurrentChangeTrackedListThreadsafeTest,The following statement contains a magic number: Parallel.For(0' 100' new ParallelOptions() { MaxDegreeOfParallelism = 10 }' (i) =>                  {                      int randomInt;                      lock (randLock)                      {                          randomInt = rand.Next(0' 2);                      }                        if (randomInt == 0)                      {                          addAction();                      }                      else                      {                          removeAction();                      }                  });
Magic Number,Azure.Batch.Unit.Tests,ConcurrentChangeTrackedListUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\ConcurrentChangeTrackedListUnitTests.cs,ConcurrentChangeTrackedListBasicListFunctionality,The following statement contains a magic number: Assert.Equal(2' list.Count);
Magic Number,Azure.Batch.Unit.Tests,GetFileRequestByteRangeTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\GetFileRequestByteRangeTests.cs,VerifyOcpRangeSetWhenDownloadingFileAsync,The following statement contains a magic number: const int startRange = 100;
Magic Number,Azure.Batch.Unit.Tests,GetFileRequestByteRangeTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\GetFileRequestByteRangeTests.cs,VerifyOcpRangeSetWhenDownloadingFileAsync,The following statement contains a magic number: const int endRange = 200;
Magic Number,Azure.Batch.Unit.Tests,GetFileRequestByteRangeTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\GetFileRequestByteRangeTests.cs,SetFakeProtocolNodeFileHeaders,The following statement contains a magic number: nodeFile.ContentLength = 100;
Magic Number,Azure.Batch.Unit.Tests,HttpClientBehaviorTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\HttpClientBehaviorTests.cs,AcceptAndAssertAsync,The following statement contains a magic number: ctx.Response.StatusCode = 200;
Magic Number,Azure.Batch.Unit.Tests,InterceptorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\InterceptorUnitTests.cs,TestSetBatchRequestServerTimeout,The following statement contains a magic number: await this.TestSetBatchRequestServerTimeoutHelperAsync(null' 45);
Magic Number,Azure.Batch.Unit.Tests,InterceptorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\InterceptorUnitTests.cs,TestSetBatchRequestServerTimeout,The following statement contains a magic number: await this.TestSetBatchRequestServerTimeoutHelperAsync(TimeSpan.FromMilliseconds(14020)' null);
Magic Number,Azure.Batch.Unit.Tests,InterceptorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\InterceptorUnitTests.cs,TestSetBatchRequestServerTimeout,The following statement contains a magic number: await this.TestSetBatchRequestServerTimeoutHelperAsync(TimeSpan.FromMinutes(1)' 22);
Magic Number,Azure.Batch.Unit.Tests,InterceptorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\InterceptorUnitTests.cs,TestSetBatchRequestServerTimeout,The following statement contains a magic number: await this.TestSetBatchRequestServerTimeoutHelperAsync(null' -15);
Magic Number,Azure.Batch.Unit.Tests,InterceptorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\InterceptorUnitTests.cs,TestSetBatchRequestServerTimeout,The following statement contains a magic number: await Assert.ThrowsAsync<ArgumentOutOfRangeException>(() => this.TestSetBatchRequestServerTimeoutHelperAsync(TimeSpan.FromSeconds(-44)' null));
Magic Number,Azure.Batch.Unit.Tests,InterceptorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\InterceptorUnitTests.cs,TestSetBatchRequestServerTimeout,The following statement contains a magic number: await Assert.ThrowsAsync<ArgumentOutOfRangeException>(() => this.TestSetBatchRequestServerTimeoutHelperAsync(TimeSpan.FromMinutes(-120)' -60));
Magic Number,Azure.Batch.Unit.Tests,InterceptorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\InterceptorUnitTests.cs,TestSetBatchRequestServerTimeout,The following statement contains a magic number: await Assert.ThrowsAsync<ArgumentOutOfRangeException>(() => this.TestSetBatchRequestServerTimeoutHelperAsync(TimeSpan.FromMinutes(-120)' -60));
Magic Number,Azure.Batch.Unit.Tests,JobAutoTerminationUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\JobAutoTerminationUnitTests.cs,ExitConditionsAreSentOnTask,The following statement contains a magic number: var fakeAddTaskResponse = ClientUnitTestCommon.SimulateServiceResponse<Models.TaskAddParameter' Models.TaskAddOptions' AzureOperationHeaderResponse<Models.TaskAddHeaders>>((parameters' options) =>                  {                      Assert.Equal((Models.JobAction?)JobAction.Terminate' parameters.ExitConditions.DefaultProperty.JobAction);                      Assert.Equal(0' parameters.ExitConditions.ExitCodeRanges.First().Start);                      Assert.Equal(4' parameters.ExitConditions.ExitCodeRanges.First().End);                      Assert.Equal((Models.JobAction?)JobAction.Disable' parameters.ExitConditions.ExitCodeRanges.First().ExitOptions.JobAction);                      // These need to be compared as strings because they are different types but we are interested in the values being the same.                      Assert.Equal(DependencyAction.Satisfy.ToString()' parameters.ExitConditions.ExitCodeRanges.First().ExitOptions.DependencyAction.ToString());                      Assert.Equal(3' parameters.ExitConditions.ExitCodes.First().Code);                      Assert.Equal((Models.JobAction?)JobAction.None' parameters.ExitConditions.ExitCodes.First().ExitOptions.JobAction);                      Assert.Equal((Models.JobAction?)JobAction.Terminate' parameters.ExitConditions.FileUploadError.JobAction);                        return new AzureOperationHeaderResponse<Models.TaskAddHeaders>()                      {                          Response = new HttpResponseMessage(HttpStatusCode.Accepted)                      };                  });
Magic Number,Azure.Batch.Unit.Tests,JobAutoTerminationUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\JobAutoTerminationUnitTests.cs,ExitConditionsAreSentOnTask,The following statement contains a magic number: var fakeAddTaskResponse = ClientUnitTestCommon.SimulateServiceResponse<Models.TaskAddParameter' Models.TaskAddOptions' AzureOperationHeaderResponse<Models.TaskAddHeaders>>((parameters' options) =>                  {                      Assert.Equal((Models.JobAction?)JobAction.Terminate' parameters.ExitConditions.DefaultProperty.JobAction);                      Assert.Equal(0' parameters.ExitConditions.ExitCodeRanges.First().Start);                      Assert.Equal(4' parameters.ExitConditions.ExitCodeRanges.First().End);                      Assert.Equal((Models.JobAction?)JobAction.Disable' parameters.ExitConditions.ExitCodeRanges.First().ExitOptions.JobAction);                      // These need to be compared as strings because they are different types but we are interested in the values being the same.                      Assert.Equal(DependencyAction.Satisfy.ToString()' parameters.ExitConditions.ExitCodeRanges.First().ExitOptions.DependencyAction.ToString());                      Assert.Equal(3' parameters.ExitConditions.ExitCodes.First().Code);                      Assert.Equal((Models.JobAction?)JobAction.None' parameters.ExitConditions.ExitCodes.First().ExitOptions.JobAction);                      Assert.Equal((Models.JobAction?)JobAction.Terminate' parameters.ExitConditions.FileUploadError.JobAction);                        return new AzureOperationHeaderResponse<Models.TaskAddHeaders>()                      {                          Response = new HttpResponseMessage(HttpStatusCode.Accepted)                      };                  });
Magic Number,Azure.Batch.Unit.Tests,JobAutoTerminationUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\JobAutoTerminationUnitTests.cs,ExitConditionsAreSentOnTask,The following statement contains a magic number: cloudTask.ExitConditions = new ExitConditions()                  {                      Default = new ExitOptions() { JobAction = JobAction.Terminate }'                      ExitCodeRanges = new List<ExitCodeRangeMapping>()                      {                          new ExitCodeRangeMapping(0' 4' new ExitOptions() { DependencyAction = DependencyAction.Satisfy' JobAction = JobAction.Disable' })                      }'                      ExitCodes = new List<ExitCodeMapping>()                      {                          new ExitCodeMapping(3' new ExitOptions() {JobAction = JobAction.None})                      }'                      PreProcessingError = new ExitOptions() { JobAction = JobAction.Terminate }'                      FileUploadError = new ExitOptions() { JobAction = JobAction.Terminate }                  };
Magic Number,Azure.Batch.Unit.Tests,JobAutoTerminationUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\JobAutoTerminationUnitTests.cs,ExitConditionsAreSentOnTask,The following statement contains a magic number: cloudTask.ExitConditions = new ExitConditions()                  {                      Default = new ExitOptions() { JobAction = JobAction.Terminate }'                      ExitCodeRanges = new List<ExitCodeRangeMapping>()                      {                          new ExitCodeRangeMapping(0' 4' new ExitOptions() { DependencyAction = DependencyAction.Satisfy' JobAction = JobAction.Disable' })                      }'                      ExitCodes = new List<ExitCodeMapping>()                      {                          new ExitCodeMapping(3' new ExitOptions() {JobAction = JobAction.None})                      }'                      PreProcessingError = new ExitOptions() { JobAction = JobAction.Terminate }'                      FileUploadError = new ExitOptions() { JobAction = JobAction.Terminate }                  };
Magic Number,Azure.Batch.Unit.Tests,PagedCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PagedCollectionUnitTests.cs,ForEachAsyncVisitsEveryMemberOfTheSequence,The following statement contains a magic number: Assert.Equal(26' visited.Count);
Magic Number,Azure.Batch.Unit.Tests,PagedCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PagedCollectionUnitTests.cs,ForEachAsyncVisitsEveryMemberOfTheSequence_SyncDelegateOverload,The following statement contains a magic number: Assert.Equal(26' visited.Count);
Magic Number,Azure.Batch.Unit.Tests,PagedCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PagedCollectionUnitTests.cs,ToListAsyncCollectsAllElementsOfSequence,The following statement contains a magic number: var seq = new PagedAlphabet(4' 10);
Magic Number,Azure.Batch.Unit.Tests,PagedCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PagedCollectionUnitTests.cs,ToListAsyncCollectsAllElementsOfSequence,The following statement contains a magic number: var seq = new PagedAlphabet(4' 10);
Magic Number,Azure.Batch.Unit.Tests,PagedCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PagedCollectionUnitTests.cs,ToListAsyncCollectsAllElementsOfSequence,The following statement contains a magic number: Assert.Equal(10' list.Count);
Magic Number,Azure.Batch.Unit.Tests,PagedCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PagedCollectionUnitTests.cs,ToListAsyncCorrectlyHandlesEmptyCollections,The following statement contains a magic number: var seq = new PagedAlphabet(4' 0);
Magic Number,Azure.Batch.Unit.Tests,PagedCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PagedCollectionUnitTests.cs,ToListAsyncSupportsCancellation,The following statement contains a magic number: PagedAlphabet seq = new PagedAlphabet(4' 10);
Magic Number,Azure.Batch.Unit.Tests,PagedCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PagedCollectionUnitTests.cs,ToListAsyncSupportsCancellation,The following statement contains a magic number: PagedAlphabet seq = new PagedAlphabet(4' 10);
Magic Number,Azure.Batch.Unit.Tests,PagedCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PagedCollectionUnitTests.cs,ForEachAsyncActionSupportsCancellation,The following statement contains a magic number: PagedAlphabet seq = new PagedAlphabet(4' 10);
Magic Number,Azure.Batch.Unit.Tests,PagedCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PagedCollectionUnitTests.cs,ForEachAsyncActionSupportsCancellation,The following statement contains a magic number: PagedAlphabet seq = new PagedAlphabet(4' 10);
Magic Number,Azure.Batch.Unit.Tests,PagedCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PagedCollectionUnitTests.cs,ForEachAsyncFuncSupportsCancellation,The following statement contains a magic number: PagedAlphabet seq = new PagedAlphabet(4' 10);
Magic Number,Azure.Batch.Unit.Tests,PagedCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PagedCollectionUnitTests.cs,ForEachAsyncFuncSupportsCancellation,The following statement contains a magic number: PagedAlphabet seq = new PagedAlphabet(4' 10);
Magic Number,Azure.Batch.Unit.Tests,PatchUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PatchUnitTests.cs,TestPatchJob_NewSimpleParameterIsSerialized,The following statement contains a magic number: const int newPriority = 5;
Magic Number,Azure.Batch.Unit.Tests,PatchUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PatchUnitTests.cs,TestPatchJob_ChangedCollectionParameterIsSerialized,The following statement contains a magic number: Action<Protocol.Models.JobPatchParameter> assertAction = patchParameters =>                  {                      Assert.Null(patchParameters.Priority);                      Assert.Null(patchParameters.Constraints);                      Assert.Null(patchParameters.PoolInfo);                      Assert.Null(patchParameters.OnAllTasksComplete);                        Assert.NotNull(patchParameters.Metadata);                      Assert.Equal(2' patchParameters.Metadata.Count);                  };
Magic Number,Azure.Batch.Unit.Tests,PatchUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PatchUnitTests.cs,TestPatchJob_ChangedComplexParameterIsSerialized,The following statement contains a magic number: TimeSpan newMaxWallClock = TimeSpan.FromSeconds(20);
Magic Number,Azure.Batch.Unit.Tests,PatchUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PatchUnitTests.cs,TestPatchJob_ChangedComplexParameterIsSerialized,The following statement contains a magic number: var protoJob = new Protocol.Models.CloudJob(                  id: jobId'                  constraints: new Protocol.Models.JobConstraints(maxWallClockTime: TimeSpan.FromSeconds(10)));
Magic Number,Azure.Batch.Unit.Tests,PatchUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PatchUnitTests.cs,TestPatchJob_UnchangedEntitiesAreIgnored,The following statement contains a magic number: var protoJob = new Protocol.Models.CloudJob(                  id: jobId'                  constraints: new Protocol.Models.JobConstraints(maxWallClockTime: TimeSpan.FromSeconds(10))'                  metadata: new List<Protocol.Models.MetadataItem>() { new Protocol.Models.MetadataItem() }'                  poolInfo: new Protocol.Models.PoolInformation(poolId: "Test"));
Magic Number,Azure.Batch.Unit.Tests,PatchUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PatchUnitTests.cs,TestPatchPool_ChangedCollectionParameterIsSerialized,The following statement contains a magic number: Action<Protocol.Models.PoolPatchParameter> assertAction = patchParameters =>              {                  Assert.Null(patchParameters.StartTask);                  Assert.Null(patchParameters.ApplicationPackageReferences);                  Assert.Null(patchParameters.CertificateReferences);                    Assert.NotNull(patchParameters.Metadata);                  Assert.Equal(2' patchParameters.Metadata.Count);              };
Magic Number,Azure.Batch.Unit.Tests,PatchUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PatchUnitTests.cs,TestPatchJobSchedule_NewComplexParameterIsSerialized,The following statement contains a magic number: const int newPriority = 5;
Magic Number,Azure.Batch.Unit.Tests,PatchUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PatchUnitTests.cs,TestPatchJobSchedule_ChangedCollectionParameterIsSerialized,The following statement contains a magic number: Action<Protocol.Models.JobSchedulePatchParameter> assertAction = patchParameters =>              {                  Assert.Null(patchParameters.JobSpecification);                  Assert.Null(patchParameters.Schedule);                    Assert.NotNull(patchParameters.Metadata);                  Assert.Equal(2' patchParameters.Metadata.Count);              };
Magic Number,Azure.Batch.Unit.Tests,PatchUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PatchUnitTests.cs,TestPatchJobSchedule_ChangedComplexParameterIsSerialized,The following statement contains a magic number: TimeSpan newStartWindow = TimeSpan.FromSeconds(20);
Magic Number,Azure.Batch.Unit.Tests,PatchUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PatchUnitTests.cs,TestPatchJobSchedule_ChangedComplexParameterIsSerialized,The following statement contains a magic number: var protoJobSchedule = new Protocol.Models.CloudJobSchedule(                  id: jobScheduleId'                  schedule: new Protocol.Models.Schedule(startWindow: TimeSpan.FromSeconds(10)));
Magic Number,Azure.Batch.Unit.Tests,PatchUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PatchUnitTests.cs,TestPatchJobSchedule_UnchangedPropertiesAreIgnored,The following statement contains a magic number: var protoJobSchedule = new Protocol.Models.CloudJobSchedule(                  id: jobScheduleId'                  schedule: new Protocol.Models.Schedule(startWindow: TimeSpan.FromSeconds(10))'                  metadata: new List<Protocol.Models.MetadataItem>() { new Protocol.Models.MetadataItem() }'                  jobSpecification: new Protocol.Models.JobSpecification(                      poolInfo: new Protocol.Models.PoolInformation(poolId: "Test")));
Magic Number,Azure.Batch.Unit.Tests,PatchUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PatchUnitTests.cs,CommonPatchJobTest,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => job.Priority = 5);
Magic Number,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolsListTest,The following statement contains a magic number: Assert.Equal(2' pools.Count);
Magic Number,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolTestNonNullProperties,The following statement contains a magic number: Protocol.RequestInterceptor interceptor = new Protocol.RequestInterceptor(baseRequest =>                  {                      var request = (Protocol.BatchRequest<Models.PoolGetOptions' AzureOperationResponse<Models.CloudPool' Models.PoolGetHeaders>>)baseRequest;                        request.ServiceRequestFunc = async (token) =>                      {                          var response = new AzureOperationResponse<Models.CloudPool' Models.PoolGetHeaders>                          {                              Body = new Models.CloudPool                              {                                  AllocationState = Models.AllocationState.Steady'                                  AllocationStateTransitionTime = dateTimeMinusAnHour'                                  AutoScaleFormula = string.Empty'                                  AutoScaleRun = new Models.AutoScaleRun()'                                  DisplayName = "batch-test"'                                  CertificateReferences = new[]                                                      {                                                          new Models.CertificateReference                                                              {                                                                  StoreLocation = Models.CertificateStoreLocation.CurrentUser'                                                                  StoreName = "My"'                                                                  Thumbprint = string.Empty'                                                                  ThumbprintAlgorithm = "sha1"'                                                                  Visibility = new List<Models.CertificateVisibility>()                                                                      {                                                                          Models.CertificateVisibility.RemoteUser'                                                                          Models.CertificateVisibility.StartTask'                                                                          Models.CertificateVisibility.Task                                                                      }                                                              }                                                      }'                                  CreationTime = dateTimeMinusAnHour'                                  CloudServiceConfiguration = new Models.CloudServiceConfiguration(osFamily: "4"' osVersion: "*")'                                  CurrentDedicatedNodes = 3'                                  ETag = "eTag=0x8D250D98B5D78AA"'                                  EnableAutoScale = false'                                  LastModified = currentDateTime'                                  MaxTasksPerNode = 4'                                  ResizeTimeout = new TimeSpan()'                                  State = Models.PoolState.Active'                                  StateTransitionTime = currentDateTime'                                  TargetDedicatedNodes = 3'                                  Url = "testbatch://batch-test.windows-int.net/pools/batch-test"'                                  TaskSchedulingPolicy = new Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy { NodeFillType = Models.ComputeNodeFillType.Pack }                              }                          };                                                    var task = Task.FromResult(response);                          return await task;                      };                  });
Magic Number,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolTestNonNullProperties,The following statement contains a magic number: Protocol.RequestInterceptor interceptor = new Protocol.RequestInterceptor(baseRequest =>                  {                      var request = (Protocol.BatchRequest<Models.PoolGetOptions' AzureOperationResponse<Models.CloudPool' Models.PoolGetHeaders>>)baseRequest;                        request.ServiceRequestFunc = async (token) =>                      {                          var response = new AzureOperationResponse<Models.CloudPool' Models.PoolGetHeaders>                          {                              Body = new Models.CloudPool                              {                                  AllocationState = Models.AllocationState.Steady'                                  AllocationStateTransitionTime = dateTimeMinusAnHour'                                  AutoScaleFormula = string.Empty'                                  AutoScaleRun = new Models.AutoScaleRun()'                                  DisplayName = "batch-test"'                                  CertificateReferences = new[]                                                      {                                                          new Models.CertificateReference                                                              {                                                                  StoreLocation = Models.CertificateStoreLocation.CurrentUser'                                                                  StoreName = "My"'                                                                  Thumbprint = string.Empty'                                                                  ThumbprintAlgorithm = "sha1"'                                                                  Visibility = new List<Models.CertificateVisibility>()                                                                      {                                                                          Models.CertificateVisibility.RemoteUser'                                                                          Models.CertificateVisibility.StartTask'                                                                          Models.CertificateVisibility.Task                                                                      }                                                              }                                                      }'                                  CreationTime = dateTimeMinusAnHour'                                  CloudServiceConfiguration = new Models.CloudServiceConfiguration(osFamily: "4"' osVersion: "*")'                                  CurrentDedicatedNodes = 3'                                  ETag = "eTag=0x8D250D98B5D78AA"'                                  EnableAutoScale = false'                                  LastModified = currentDateTime'                                  MaxTasksPerNode = 4'                                  ResizeTimeout = new TimeSpan()'                                  State = Models.PoolState.Active'                                  StateTransitionTime = currentDateTime'                                  TargetDedicatedNodes = 3'                                  Url = "testbatch://batch-test.windows-int.net/pools/batch-test"'                                  TaskSchedulingPolicy = new Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy { NodeFillType = Models.ComputeNodeFillType.Pack }                              }                          };                                                    var task = Task.FromResult(response);                          return await task;                      };                  });
Magic Number,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolTestNonNullProperties,The following statement contains a magic number: Protocol.RequestInterceptor interceptor = new Protocol.RequestInterceptor(baseRequest =>                  {                      var request = (Protocol.BatchRequest<Models.PoolGetOptions' AzureOperationResponse<Models.CloudPool' Models.PoolGetHeaders>>)baseRequest;                        request.ServiceRequestFunc = async (token) =>                      {                          var response = new AzureOperationResponse<Models.CloudPool' Models.PoolGetHeaders>                          {                              Body = new Models.CloudPool                              {                                  AllocationState = Models.AllocationState.Steady'                                  AllocationStateTransitionTime = dateTimeMinusAnHour'                                  AutoScaleFormula = string.Empty'                                  AutoScaleRun = new Models.AutoScaleRun()'                                  DisplayName = "batch-test"'                                  CertificateReferences = new[]                                                      {                                                          new Models.CertificateReference                                                              {                                                                  StoreLocation = Models.CertificateStoreLocation.CurrentUser'                                                                  StoreName = "My"'                                                                  Thumbprint = string.Empty'                                                                  ThumbprintAlgorithm = "sha1"'                                                                  Visibility = new List<Models.CertificateVisibility>()                                                                      {                                                                          Models.CertificateVisibility.RemoteUser'                                                                          Models.CertificateVisibility.StartTask'                                                                          Models.CertificateVisibility.Task                                                                      }                                                              }                                                      }'                                  CreationTime = dateTimeMinusAnHour'                                  CloudServiceConfiguration = new Models.CloudServiceConfiguration(osFamily: "4"' osVersion: "*")'                                  CurrentDedicatedNodes = 3'                                  ETag = "eTag=0x8D250D98B5D78AA"'                                  EnableAutoScale = false'                                  LastModified = currentDateTime'                                  MaxTasksPerNode = 4'                                  ResizeTimeout = new TimeSpan()'                                  State = Models.PoolState.Active'                                  StateTransitionTime = currentDateTime'                                  TargetDedicatedNodes = 3'                                  Url = "testbatch://batch-test.windows-int.net/pools/batch-test"'                                  TaskSchedulingPolicy = new Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy { NodeFillType = Models.ComputeNodeFillType.Pack }                              }                          };                                                    var task = Task.FromResult(response);                          return await task;                      };                  });
Magic Number,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolTestNonNullProperties,The following statement contains a magic number: Assert.Equal(3' pool.CurrentDedicatedComputeNodes);
Magic Number,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolTestNonNullProperties,The following statement contains a magic number: Assert.Equal(4' pool.MaxTasksPerComputeNode);
Magic Number,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolTestNonNullProperties,The following statement contains a magic number: Assert.Equal(3' pool.TargetDedicatedComputeNodes);
Magic Number,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolStartTask,The following statement contains a magic number: var startTask = new Protocol.Models.StartTask                                  {                                      CommandLine = "-start"'                                      EnvironmentSettings = new[] { new Models.EnvironmentSetting { Name = "windows"' Value = "foo" } }'                                      MaxTaskRetryCount = 3'                                      UserIdentity = new Protocol.Models.UserIdentity(                                          autoUser: new Protocol.Models.AutoUserSpecification(elevationLevel: Protocol.Models.ElevationLevel.NonAdmin))'                                      WaitForSuccess = false                                  };
Magic Number,Azure.Batch.Unit.Tests,PoolUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PoolUnitTests.cs,GetPoolStartTask,The following statement contains a magic number: Assert.Equal(3' pool.StartTask.MaxTaskRetryCount);
Magic Number,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,SimpleValueSet_ValueIsGettable,The following statement contains a magic number: accessor.Value = 5;
Magic Number,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,SimpleValueSet_ValueIsGettable,The following statement contains a magic number: Assert.Equal(5' accessor.Value);
Magic Number,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,SimpleValueSet_HasBeenModifiedChanges,The following statement contains a magic number: accessor.Value = 5;
Magic Number,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,PropertyWithBindingAccessNone_ValueNotReadableOrWritable,The following statement contains a magic number: InvalidOperationException e = Assert.Throws<InvalidOperationException>(() => accessor.Value = 5);
Magic Number,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,BindingAccessRead,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => accessor.Value = 5);
Magic Number,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,HasBeenModifiedNotSetAfterConstruction,The following statement contains a magic number: var accessor = new PropertyAccessor<int>(7' controller' string.Empty' BindingAccess.Read);
Magic Number,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,HasBeenModifiedNotSetAfterConstruction,The following statement contains a magic number: Assert.Equal(7' accessor.Value);
Magic Number,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,SimplePropertyReadOnlySet_ObjectIsReadable,The following statement contains a magic number: var accessor = new PropertyAccessor<int>(8' controller' string.Empty' BindingAccess.Read | BindingAccess.Write);
Magic Number,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,SimplePropertyReadOnlySet_ObjectIsReadable,The following statement contains a magic number: Assert.Equal(8' accessor.Value);
Magic Number,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,SimplePropertyReadOnlySet_ObjectIsNotWritable,The following statement contains a magic number: var accessor = new PropertyAccessor<int>(8' controller' string.Empty' BindingAccess.Read | BindingAccess.Write);
Magic Number,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,SimplePropertyReadOnlySet_ObjectIsNotWritable,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => accessor.Value = 10);
Magic Number,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,SimplePropertyReadOnlySetAndUnset_ObjectIsReadWritable,The following statement contains a magic number: var accessor = new PropertyAccessor<int>(8' controller' string.Empty' BindingAccess.Read | BindingAccess.Write);
Magic Number,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,SimplePropertyReadOnlySetAndUnset_ObjectIsReadWritable,The following statement contains a magic number: accessor.Value = 10;
Magic Number,Azure.Batch.Unit.Tests,PropertyAccessorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyAccessorUnitTests.cs,SimplePropertyReadOnlySetAndUnset_ObjectIsReadWritable,The following statement contains a magic number: Assert.Equal(10' accessor.Value);
Magic Number,Azure.Batch.Unit.Tests,PropertyCollectionUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyManagementUnitTests.cs,HasBeenModifiedAggregates,The following statement contains a magic number: collection.DummyProperty.Value = 5;
Magic Number,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,TestGetTransportObjectDoesntMissProperties,The following statement contains a magic number: const int objectsToValidate = 100;
Magic Number,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,TestAutoPoolSpecificationUnboundConstraints,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => poolSpecification.MaxTasksPerComputeNode = 4);
Magic Number,Azure.Batch.Unit.Tests,PropertyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\PropertyUnitTests.cs,TestAutoPoolSpecificationBoundConstraints,The following statement contains a magic number: autoPoolSpecification.PoolSpecification.ResizeTimeout = TimeSpan.FromSeconds(122);
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,LinearRetryPropertiesSetCorrect,The following statement contains a magic number: TimeSpan interval = TimeSpan.FromSeconds(5);
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,LinearRetryPropertiesSetCorrect,The following statement contains a magic number: const int maxRetries = 10;
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,LinearRetryRetriesOnNonBatchException,The following statement contains a magic number: TimeSpan interval = TimeSpan.FromSeconds(5);
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,LinearRetryRetriesOnNonBatchException,The following statement contains a magic number: const int maxRetries = 10;
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,LinearRetryRetriesOnBatchException,The following statement contains a magic number: TimeSpan interval = TimeSpan.FromSeconds(5);
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,LinearRetryRetriesOnBatchException,The following statement contains a magic number: const int maxRetries = 10;
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,LinearRetryAbortsRetriesAfterMaxRetryCount,The following statement contains a magic number: TimeSpan interval = TimeSpan.FromSeconds(5);
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,LinearRetryAbortsRetriesAfterMaxRetryCount,The following statement contains a magic number: const int maxRetries = 5;
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,LinearRetryThrowsOnInvalidMaxRetry,The following statement contains a magic number: TimeSpan interval = TimeSpan.FromSeconds(5);
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,LinearRetryThrowsOnInvalidInterval,The following statement contains a magic number: TimeSpan interval = TimeSpan.FromSeconds(-3);
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,LinearRetryDoesNotRetryOnValidationExceptions,The following statement contains a magic number: const int maxRetries = 3;
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,LinearRetryHonorsRetryAfter,The following statement contains a magic number: TimeSpan interval = TimeSpan.FromSeconds(60);
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,LinearRetryHonorsRetryAfter,The following statement contains a magic number: TimeSpan retryAfter = TimeSpan.FromSeconds(10);
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,LinearRetryHonorsRetryAfter,The following statement contains a magic number: const int maxRetries = 10;
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,LinearRetryHonorsRetryAfter,The following statement contains a magic number: RequestInformation reqInfo = new RequestInformation()              {                  HttpStatusCode = (HttpStatusCode)429'                  RetryAfter = retryAfter              };
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,ExponentialRetryPropertiesSetCorrect,The following statement contains a magic number: TimeSpan interval = TimeSpan.FromSeconds(5);
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,ExponentialRetryPropertiesSetCorrect,The following statement contains a magic number: const int maxRetries = 10;
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,ExponentialRetryRetriesOnNonBatchException,The following statement contains a magic number: TimeSpan interval = TimeSpan.FromSeconds(5);
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,ExponentialRetryRetriesOnNonBatchException,The following statement contains a magic number: const int maxRetries = 10;
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,ExponentialRetryRetriesOnBatchException,The following statement contains a magic number: TimeSpan interval = TimeSpan.FromSeconds(5);
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,ExponentialRetryRetriesOnBatchException,The following statement contains a magic number: const int maxRetries = 10;
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,ExponentialRetryAbortsRetriesAfterMaxRetryCount,The following statement contains a magic number: const int delayInSeconds = 3;
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,ExponentialRetryAbortsRetriesAfterMaxRetryCount,The following statement contains a magic number: const int maxRetries = 5;
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,ExponentialRetryAbortsRetriesAfterMaxRetryCount,The following statement contains a magic number: TimeSpan expectedDelay = TimeSpan.FromSeconds(Math.Pow(2' requestCount) * delayInSeconds);
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,ExponentialRetryThrowsOnInvalidMaxRetry,The following statement contains a magic number: TimeSpan interval = TimeSpan.FromSeconds(5);
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,ExponentialRetryThrowsOnInvalidInterval,The following statement contains a magic number: TimeSpan interval = TimeSpan.FromSeconds(-3);
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,ExponentialRetryDoesNotRetryOnValidationExceptions,The following statement contains a magic number: const int maxRetries = 3;
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,ExponentialRetryHonorsRetryAfter,The following statement contains a magic number: TimeSpan interval = TimeSpan.FromSeconds(60);
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,ExponentialRetryHonorsRetryAfter,The following statement contains a magic number: TimeSpan retryAfter = TimeSpan.FromSeconds(10);
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,ExponentialRetryHonorsRetryAfter,The following statement contains a magic number: const int maxRetries = 10;
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,ExponentialRetryHonorsRetryAfter,The following statement contains a magic number: RequestInformation reqInfo = new RequestInformation()              {                  HttpStatusCode = (HttpStatusCode)429'                  RetryAfter = retryAfter              };
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,BatchRequestRetriesExecutedWithNonBatchException,The following statement contains a magic number: TimeSpan deltaBackoff = TimeSpan.FromMilliseconds(100);
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,BatchRequestRetriesExecutedWithNonBatchException,The following statement contains a magic number: const int maxRetries = 5;
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,BatchRequestRetriesExecutedWithAggregateException,The following statement contains a magic number: const int maxRetries = 5;
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,BatchRequestRetryStackTracePreserved,The following statement contains a magic number: IRetryPolicy policy = new ExponentialRetry(TimeSpan.FromSeconds(0)' 3);
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,BatchRequestRetryPolicyNoExceptionNoRetries,The following statement contains a magic number: const int maxRetries = 5;
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,BatchRequestSetClientRequestIdOnRetries,The following statement contains a magic number: const int maxRetries = 5;
Magic Number,Azure.Batch.Unit.Tests,RetryPolicyUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\RetryPolicyUnitTests.cs,ListJobSchedulesWithRetry,The following statement contains a magic number: const int maxRetries = 3;
Magic Number,Azure.Batch.Unit.Tests,StaticAnalysisUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\StaticAnalysisUnitTests.cs,ExceptionsThrownDirectlyByRestProxyDontChange,The following statement contains a magic number: const int expectedExceptionCount = 100;
Magic Number,Azure.Batch.Unit.Tests,StaticAnalysisUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\StaticAnalysisUnitTests.cs,ExceptionsThrownDirectlyByObjectModelDontChange,The following statement contains a magic number: const int expectedExceptionCount = 50;
Magic Number,Azure.Batch.Unit.Tests,SynchronousMethodExceptionBehaviorUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\SynchronousMethodExceptionBehaviorUnitTests.cs,SynchronousMethodsCompatibilityHandlerThrownAggregateIsWrapped,The following statement contains a magic number: Assert.Equal(2' innerAggregate.InnerExceptions.Count);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy,The following statement contains a magic number: var verifyTaskDependencies = ClientUnitTestCommon.SimulateServiceResponse<Models.TaskAddParameter' Models.TaskAddOptions' AzureOperationHeaderResponse<Models.TaskAddHeaders>>((parameters' options) =>                      {                          Assert.Equal((Int32.Parse(parameters.Id) - 10).ToString()' parameters.DependsOn.TaskIds.Single());                          Assert.Equal(5' parameters.DependsOn.TaskIdRanges.Single().Start);                          Assert.Equal(15' parameters.DependsOn.TaskIdRanges.Single().End);                            return new AzureOperationHeaderResponse<Models.TaskAddHeaders>()                          {                              Response = new HttpResponseMessage(HttpStatusCode.Accepted)                          };                      });
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy,The following statement contains a magic number: var verifyTaskDependencies = ClientUnitTestCommon.SimulateServiceResponse<Models.TaskAddParameter' Models.TaskAddOptions' AzureOperationHeaderResponse<Models.TaskAddHeaders>>((parameters' options) =>                      {                          Assert.Equal((Int32.Parse(parameters.Id) - 10).ToString()' parameters.DependsOn.TaskIds.Single());                          Assert.Equal(5' parameters.DependsOn.TaskIdRanges.Single().Start);                          Assert.Equal(15' parameters.DependsOn.TaskIdRanges.Single().End);                            return new AzureOperationHeaderResponse<Models.TaskAddHeaders>()                          {                              Response = new HttpResponseMessage(HttpStatusCode.Accepted)                          };                      });
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy,The following statement contains a magic number: var verifyTaskDependencies = ClientUnitTestCommon.SimulateServiceResponse<Models.TaskAddParameter' Models.TaskAddOptions' AzureOperationHeaderResponse<Models.TaskAddHeaders>>((parameters' options) =>                      {                          Assert.Equal((Int32.Parse(parameters.Id) - 10).ToString()' parameters.DependsOn.TaskIds.Single());                          Assert.Equal(5' parameters.DependsOn.TaskIdRanges.Single().Start);                          Assert.Equal(15' parameters.DependsOn.TaskIdRanges.Single().End);                            return new AzureOperationHeaderResponse<Models.TaskAddHeaders>()                          {                              Response = new HttpResponseMessage(HttpStatusCode.Accepted)                          };                      });
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy,The following statement contains a magic number: var taskWithDependencies = new Microsoft.Azure.Batch.CloudTask((10 + j).ToString()' "cmd /c hostname")                      {                          DependsOn = new Microsoft.Azure.Batch.TaskDependencies(new[] { j.ToString() }' new[] { new Microsoft.Azure.Batch.TaskIdRange(5' 15) })'                      };
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy,The following statement contains a magic number: var taskWithDependencies = new Microsoft.Azure.Batch.CloudTask((10 + j).ToString()' "cmd /c hostname")                      {                          DependsOn = new Microsoft.Azure.Batch.TaskDependencies(new[] { j.ToString() }' new[] { new Microsoft.Azure.Batch.TaskIdRange(5' 15) })'                      };
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy,The following statement contains a magic number: var taskWithDependencies = new Microsoft.Azure.Batch.CloudTask((10 + j).ToString()' "cmd /c hostname")                      {                          DependsOn = new Microsoft.Azure.Batch.TaskDependencies(new[] { j.ToString() }' new[] { new Microsoft.Azure.Batch.TaskIdRange(5' 15) })'                      };
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,WhenAddingTasksWithDependenciesToAJob_TheDependenciesAreCorrectlyIncludedInTheRestProxy,The following statement contains a magic number: j < 5
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly,The following statement contains a magic number: var returnFakeTasks = ClientUnitTestCommon.SimulateServiceResponse<Models.TaskListOptions' AzureOperationResponse<IPage<Models.CloudTask>' Models.TaskListHeaders>>(_ =>                      new AzureOperationResponse<IPage<Models.CloudTask>' Models.TaskListHeaders>                      {                          Body = new FakePage<Models.CloudTask>(new []                          {                              new Protocol.Models.CloudTask                              {                                  DependsOn = new Protocol.Models.TaskDependencies                                  {                                      TaskIdRanges = new[] { new Protocol.Models.TaskIdRange(5' 15) }'                                      TaskIds = new List<string> { "5" }                                  }'                                  Id = "5"'                                  State = Models.TaskState.Active'                              }                          })                      });
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly,The following statement contains a magic number: var returnFakeTasks = ClientUnitTestCommon.SimulateServiceResponse<Models.TaskListOptions' AzureOperationResponse<IPage<Models.CloudTask>' Models.TaskListHeaders>>(_ =>                      new AzureOperationResponse<IPage<Models.CloudTask>' Models.TaskListHeaders>                      {                          Body = new FakePage<Models.CloudTask>(new []                          {                              new Protocol.Models.CloudTask                              {                                  DependsOn = new Protocol.Models.TaskDependencies                                  {                                      TaskIdRanges = new[] { new Protocol.Models.TaskIdRange(5' 15) }'                                      TaskIds = new List<string> { "5" }                                  }'                                  Id = "5"'                                  State = Models.TaskState.Active'                              }                          })                      });
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly,The following statement contains a magic number: Assert.Equal(5' taskDependencies.TaskIdRanges.Single().Start);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,WhenATaskIsRetrievedFromTheService_ItsDependenciesAreSurfacedCorrectly,The following statement contains a magic number: Assert.Equal(15' taskDependencies.TaskIdRanges.Single().End);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,CannotModifyDependenciesOfABoundTask,The following statement contains a magic number: var returnFakeTasks = ClientUnitTestCommon.SimulateServiceResponse<Models.TaskGetOptions' AzureOperationResponse<Models.CloudTask' Models.TaskGetHeaders>>(_ =>                      new AzureOperationResponse<Models.CloudTask' Models.TaskGetHeaders>                      {                          Body = new Protocol.Models.CloudTask                          {                              DependsOn = new Protocol.Models.TaskDependencies                              {                                  TaskIdRanges = new[] { new Protocol.Models.TaskIdRange(5' 15) }'                                  TaskIds = new List<string> { "5" }                              }'                              Id = "5"'                              State = Models.TaskState.Active'                          }                      });
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,CannotModifyDependenciesOfABoundTask,The following statement contains a magic number: var returnFakeTasks = ClientUnitTestCommon.SimulateServiceResponse<Models.TaskGetOptions' AzureOperationResponse<Models.CloudTask' Models.TaskGetHeaders>>(_ =>                      new AzureOperationResponse<Models.CloudTask' Models.TaskGetHeaders>                      {                          Body = new Protocol.Models.CloudTask                          {                              DependsOn = new Protocol.Models.TaskDependencies                              {                                  TaskIdRanges = new[] { new Protocol.Models.TaskIdRange(5' 15) }'                                  TaskIds = new List<string> { "5" }                              }'                              Id = "5"'                              State = Models.TaskState.Active'                          }                      });
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,TaskDependenciesCanSuccessfullyStoreTaskIds,The following statement contains a magic number: Assert.Equal(2' taskDependencies.TaskIds.Count);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,TaskDependenciesCanSuccessfullyStoreTaskIdRanges,The following statement contains a magic number: IList<Microsoft.Azure.Batch.TaskIdRange> taskIdRanges = new List<Microsoft.Azure.Batch.TaskIdRange>              {                  new Microsoft.Azure.Batch.TaskIdRange(1' 5)'                  new Microsoft.Azure.Batch.TaskIdRange(8' 8)'              };
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,TaskDependenciesCanSuccessfullyStoreTaskIdRanges,The following statement contains a magic number: IList<Microsoft.Azure.Batch.TaskIdRange> taskIdRanges = new List<Microsoft.Azure.Batch.TaskIdRange>              {                  new Microsoft.Azure.Batch.TaskIdRange(1' 5)'                  new Microsoft.Azure.Batch.TaskIdRange(8' 8)'              };
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,TaskDependenciesCanSuccessfullyStoreTaskIdRanges,The following statement contains a magic number: IList<Microsoft.Azure.Batch.TaskIdRange> taskIdRanges = new List<Microsoft.Azure.Batch.TaskIdRange>              {                  new Microsoft.Azure.Batch.TaskIdRange(1' 5)'                  new Microsoft.Azure.Batch.TaskIdRange(8' 8)'              };
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,TaskDependenciesCanSuccessfullyStoreTaskIdRanges,The following statement contains a magic number: Assert.Equal(2' taskDependencies.TaskIdRanges.Count);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,TaskDependenciesCanSuccessfullyStoreTaskIdRanges,The following statement contains a magic number: Assert.Equal(5' taskDependencies.TaskIdRanges[0].End);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,TaskDependenciesCanSuccessfullyStoreTaskIdRanges,The following statement contains a magic number: Assert.Equal(8' taskDependencies.TaskIdRanges[1].Start);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,TaskDependenciesCanSuccessfullyStoreTaskIdRanges,The following statement contains a magic number: Assert.Equal(8' taskDependencies.TaskIdRanges[1].End);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Literals,The following statement contains a magic number: Assert.Equal(3' taskDependencies.TaskIds.Count);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Literals,The following statement contains a magic number: Assert.Equal("everybodystask"' taskDependencies.TaskIds[2]);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Sequence,The following statement contains a magic number: var taskIds = Enumerable.Range(1' 4).Select(i => "frame" + i);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Sequence,The following statement contains a magic number: Assert.Equal(4' taskDependencies.TaskIds.Count);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_Sequence,The following statement contains a magic number: Assert.Equal("frame4"' taskDependencies.TaskIds[3]);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_ExplicitArray,The following statement contains a magic number: var taskIds = Enumerable.Range(1' 4).Select(i => "frame" + i).ToArray();
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_ExplicitArray,The following statement contains a magic number: Assert.Equal(4' taskDependencies.TaskIds.Count);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnMultipleIdsCanBeExpressedUsingAFactoryMethod_ExplicitArray,The following statement contains a magic number: Assert.Equal("frame4"' taskDependencies.TaskIds[3]);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Literals,The following statement contains a magic number: Assert.Equal(3' taskDependencies.TaskIds.Count);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Literals,The following statement contains a magic number: Assert.Equal("everybodystask"' taskDependencies.TaskIds[2]);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Sequence,The following statement contains a magic number: var tasks = Enumerable.Range(1' 4).Select(i => new Microsoft.Azure.Batch.CloudTask("frame" + i' "cmd /c hostname"));
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Sequence,The following statement contains a magic number: Assert.Equal(4' taskDependencies.TaskIds.Count);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_Sequence,The following statement contains a magic number: Assert.Equal("frame4"' taskDependencies.TaskIds[3]);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray,The following statement contains a magic number: var tasks = Enumerable.Range(1' 4).Select(i => new Microsoft.Azure.Batch.CloudTask("frame" + i' "cmd /c hostname")).ToArray();
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray,The following statement contains a magic number: Assert.Equal(4' taskDependencies.TaskIds.Count);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnMultipleTasksCanBeExpressedUsingAFactoryMethod_ExplicitArray,The following statement contains a magic number: Assert.Equal("frame4"' taskDependencies.TaskIds[3]);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod,The following statement contains a magic number: var taskDependencies = Microsoft.Azure.Batch.TaskDependencies.OnIdRange(10' 15);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod,The following statement contains a magic number: var taskDependencies = Microsoft.Azure.Batch.TaskDependencies.OnIdRange(10' 15);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod,The following statement contains a magic number: Assert.Equal(10' taskDependencies.TaskIdRanges[0].Start);
Magic Number,Azure.Batch.Unit.Tests,TaskDependenciesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskDependenciesUnitTests.cs,ADependencyOnASingleIdRangeCanBeExpressedUsingAFactoryMethod,The following statement contains a magic number: Assert.Equal(15' taskDependencies.TaskIdRanges[0].End);
Magic Number,Azure.Batch.Unit.Tests,TaskIdRangeUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskIdRangeUnitTests.cs,TaskIdRangePropertiesAreValuesPassedToConstructor,The following statement contains a magic number: var range = new TaskIdRange(123' 456);
Magic Number,Azure.Batch.Unit.Tests,TaskIdRangeUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskIdRangeUnitTests.cs,TaskIdRangePropertiesAreValuesPassedToConstructor,The following statement contains a magic number: var range = new TaskIdRange(123' 456);
Magic Number,Azure.Batch.Unit.Tests,TaskIdRangeUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskIdRangeUnitTests.cs,TaskIdRangePropertiesAreValuesPassedToConstructor,The following statement contains a magic number: Assert.Equal(123' range.Start);
Magic Number,Azure.Batch.Unit.Tests,TaskIdRangeUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskIdRangeUnitTests.cs,TaskIdRangePropertiesAreValuesPassedToConstructor,The following statement contains a magic number: Assert.Equal(456' range.End);
Magic Number,Azure.Batch.Unit.Tests,TaskIdRangeUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskIdRangeUnitTests.cs,StartAndEndCanBeTheSame,The following statement contains a magic number: var range = new TaskIdRange(8' 8);
Magic Number,Azure.Batch.Unit.Tests,TaskIdRangeUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskIdRangeUnitTests.cs,StartAndEndCanBeTheSame,The following statement contains a magic number: var range = new TaskIdRange(8' 8);
Magic Number,Azure.Batch.Unit.Tests,TaskIdRangeUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskIdRangeUnitTests.cs,StartAndEndCanBeTheSame,The following statement contains a magic number: Assert.Equal(8' range.Start);
Magic Number,Azure.Batch.Unit.Tests,TaskIdRangeUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskIdRangeUnitTests.cs,StartAndEndCanBeTheSame,The following statement contains a magic number: Assert.Equal(8' range.End);
Magic Number,Azure.Batch.Unit.Tests,TaskIdRangeUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskIdRangeUnitTests.cs,NegativeStartIsNotAllowed,The following statement contains a magic number: var ex = Assert.Throws<ArgumentOutOfRangeException>(() => new TaskIdRange(-1' 5));
Magic Number,Azure.Batch.Unit.Tests,TaskIdRangeUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TaskIdRangeUnitTests.cs,EndCannotBeLessThanStart,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => new TaskIdRange(5' 1));
Magic Number,Azure.Batch.Unit.Tests,UtilitiesInternalUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\UtilitiesInternalUnitTests.cs,TestStartTaskTaskCertificateVisibilityToList,The following statement contains a magic number: Assert.Equal(2' visibilityList.Count());
Magic Number,Azure.Batch.Unit.Tests,UtilitiesInternalUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\UtilitiesInternalUnitTests.cs,TestStreamToStringDoesntReadWholeStream,The following statement contains a magic number: const int bytesToSkip = 4;
Magic Number,Azure.Batch.Unit.Tests,UtilitiesUnitTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\UtilitiesUnitTests.cs,TaskStateMonitorCancellation,The following statement contains a magic number: TimeSpan timeout = TimeSpan.FromSeconds(.5);
Magic Number,Azure.Batch.Unit.Tests.TestUtilities,ObjectFactory,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\batch\Microsoft.Azure.Batch\tests\UnitTests\TestUtilities\ObjectFactory.cs,RandomBool,The following statement contains a magic number: int randomInt = this.random.Next(2);
