Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Azure.Security.KeyVault.Secrets,SecretModelFactory,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretModelFactory.cs,SecretProperties,The method has 9 parameters. Parameters: id' vaultUri' name' version' managed' keyId' createdOn' updatedOn' recoveryLevel
Long Parameter List,Azure.Security.KeyVault.Secrets,SecretModelFactory,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretModelFactory.cs,DeletedSecret,The method has 5 parameters. Parameters: properties' value' recoveryId' deletedOn' scheduledPurgeDate
Long Parameter List,Azure.Security.KeyVault,KeyVaultPipeline,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultPipeline.cs,GetPageAsync,The method has 5 parameters. Parameters: firstPageUri' nextLink' itemFactory' operationName' cancellationToken
Long Parameter List,Azure.Security.KeyVault,KeyVaultPipeline,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultPipeline.cs,GetPage,The method has 5 parameters. Parameters: firstPageUri' nextLink' itemFactory' operationName' cancellationToken
Long Parameter List,Azure.Security.KeyVault,KeyVaultPipeline,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultPipeline.cs,SendRequestAsync,The method has 5 parameters. Parameters: method' content' resultFactory' cancellationToken' path
Long Parameter List,Azure.Security.KeyVault,KeyVaultPipeline,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultPipeline.cs,SendRequest,The method has 5 parameters. Parameters: method' content' resultFactory' cancellationToken' path
Long Identifier,Azure.Security.KeyVault.Secrets,DeletedSecret,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\DeletedSecret.cs,,The length of the parameter ScheduledPurgeDatePropertyName is 30.
Long Identifier,Azure.Security.KeyVault.Secrets,DeletedSecret,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\DeletedSecret.cs,,The length of the parameter s_scheduledPurgeDatePropertyNameBytes is 37.
Long Identifier,Azure.Security.KeyVault.Secrets,SecretProperties,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretProperties.cs,,The length of the parameter s_contentTypePropertyNameBytes is 30.
Long Statement,Azure.Security.KeyVault.Secrets,DeleteSecretOperation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\DeleteSecretOperation.cs,UpdateStatus,The length of the statement  "                using DiagnosticScope scope = _pipeline.CreateScope("Azure.Security.KeyVault.Secrets.DeleteSecretOperation.UpdateStatus"); " is 122.
Long Statement,Azure.Security.KeyVault.Secrets,DeleteSecretOperation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\DeleteSecretOperation.cs,UpdateStatusAsync,The length of the statement  "                using DiagnosticScope scope = _pipeline.CreateScope("Azure.Security.KeyVault.Secrets.DeleteSecretOperation.UpdateStatus"); " is 122.
Long Statement,Azure.Security.KeyVault.Secrets,DeleteSecretOperation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\DeleteSecretOperation.cs,UpdateStatusAsync,The length of the statement  "                    _response = await _pipeline.GetResponseAsync(RequestMethod.Get' cancellationToken' SecretClient.DeletedSecretsPath' _value.Name).ConfigureAwait(false); " is 151.
Long Statement,Azure.Security.KeyVault.Secrets,ObjectId,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\ObjectId.cs,ParseId,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.InvariantCulture' "Invalid ObjectIdentifier: {0}. Bad number of segments: {1}"' id' Id.Segments.Length)); " is 159.
Long Statement,Azure.Security.KeyVault.Secrets,ObjectId,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\ObjectId.cs,ParseId,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.InvariantCulture' "Invalid ObjectIdentifier: {0}. segment [1] should be '{1}/'' found '{2}'"' id' collection' Id.Segments[1])); " is 181.
Long Statement,Azure.Security.KeyVault.Secrets,RecoverDeletedSecretOperation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\RecoverDeletedSecretOperation.cs,UpdateStatus,The length of the statement  "                using DiagnosticScope scope = _pipeline.CreateScope("Azure.Security.KeyVault.Secrets.RecoverDeletedSecretOperation.UpdateStatus"); " is 130.
Long Statement,Azure.Security.KeyVault.Secrets,RecoverDeletedSecretOperation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\RecoverDeletedSecretOperation.cs,UpdateStatus,The length of the statement  "                    _response = _pipeline.GetResponse(RequestMethod.Get' cancellationToken' SecretClient.SecretsPath' _value.Name' "/"' _value.Version); " is 132.
Long Statement,Azure.Security.KeyVault.Secrets,RecoverDeletedSecretOperation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\RecoverDeletedSecretOperation.cs,UpdateStatusAsync,The length of the statement  "                using DiagnosticScope scope = _pipeline.CreateScope("Azure.Security.KeyVault.Secrets.RecoverDeletedSecretOperation.UpdateStatus"); " is 130.
Long Statement,Azure.Security.KeyVault.Secrets,RecoverDeletedSecretOperation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\RecoverDeletedSecretOperation.cs,UpdateStatusAsync,The length of the statement  "                    _response = await _pipeline.GetResponseAsync(RequestMethod.Get' cancellationToken' SecretClient.SecretsPath' _value.Name' "/"' _value.Version).ConfigureAwait(false); " is 165.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,GetSecretAsync,The length of the statement  "                return await _pipeline.SendRequestAsync(RequestMethod.Get' () => new KeyVaultSecret()' cancellationToken' SecretsPath' name' "/"' version).ConfigureAwait(false); " is 161.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,GetSecret,The length of the statement  "                return _pipeline.SendRequest(RequestMethod.Get' () => new KeyVaultSecret()' cancellationToken' SecretsPath' name' "/"' version); " is 128.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,GetPropertiesOfSecretVersionsAsync,The length of the statement  "            return PageResponseEnumerator.CreateAsyncEnumerable(nextLink => _pipeline.GetPageAsync(firstPageUri' nextLink' () => new SecretProperties()' "Azure.Security.KeyVault.Secrets.SecretClient.GetPropertiesOfSecretVersions"' cancellationToken)); " is 239.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,GetPropertiesOfSecretVersions,The length of the statement  "            return PageResponseEnumerator.CreateEnumerable(nextLink => _pipeline.GetPage(firstPageUri' nextLink' () => new SecretProperties()' "Azure.Security.KeyVault.Secrets.SecretClient.GetPropertiesOfSecretVersions"' cancellationToken)); " is 229.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,GetPropertiesOfSecretsAsync,The length of the statement  "            return PageResponseEnumerator.CreateAsyncEnumerable(nextLink => _pipeline.GetPageAsync(firstPageUri' nextLink' () => new SecretProperties()' "Azure.Security.KeyVault.Secrets.SecretClient.GetPropertiesOfSecrets"' cancellationToken)); " is 232.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,GetPropertiesOfSecrets,The length of the statement  "            return PageResponseEnumerator.CreateEnumerable(nextLink => _pipeline.GetPage(firstPageUri' nextLink' () => new SecretProperties()' "Azure.Security.KeyVault.Secrets.SecretClient.GetPropertiesOfSecrets"' cancellationToken)); " is 222.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,UpdateSecretPropertiesAsync,The length of the statement  "            using DiagnosticScope scope = _pipeline.CreateScope("Azure.Security.KeyVault.Secrets.SecretClient.UpdateSecretProperties"); " is 123.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,UpdateSecretPropertiesAsync,The length of the statement  "                return await _pipeline.SendRequestAsync(RequestMethod.Patch' properties' () => new SecretProperties()' cancellationToken' SecretsPath' properties.Name' "/"' properties.Version).ConfigureAwait(false); " is 199.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,UpdateSecretProperties,The length of the statement  "            using DiagnosticScope scope = _pipeline.CreateScope("Azure.Security.KeyVault.Secrets.SecretClient.UpdateSecretProperties"); " is 123.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,UpdateSecretProperties,The length of the statement  "                return _pipeline.SendRequest(RequestMethod.Patch' properties' () => new SecretProperties()' cancellationToken' SecretsPath' properties.Name' "/"' properties.Version); " is 166.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,SetSecretAsync,The length of the statement  "                return await _pipeline.SendRequestAsync(RequestMethod.Put' secret' () => new KeyVaultSecret()' cancellationToken' SecretsPath' secret.Name).ConfigureAwait(false); " is 162.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,SetSecret,The length of the statement  "                return _pipeline.SendRequest(RequestMethod.Put' secret' () => new KeyVaultSecret()' cancellationToken' SecretsPath' secret.Name); " is 129.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,StartDeleteSecretAsync,The length of the statement  "                Response<DeletedSecret> response = await _pipeline.SendRequestAsync(RequestMethod.Delete' () => new DeletedSecret()' cancellationToken' SecretsPath' name).ConfigureAwait(false); " is 177.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,StartDeleteSecret,The length of the statement  "                Response<DeletedSecret> response = _pipeline.SendRequest(RequestMethod.Delete' () => new DeletedSecret()' cancellationToken' SecretsPath' name); " is 144.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,GetDeletedSecretAsync,The length of the statement  "                return await _pipeline.SendRequestAsync(RequestMethod.Get' () => new DeletedSecret()' cancellationToken' DeletedSecretsPath' name).ConfigureAwait(false); " is 153.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,GetDeletedSecret,The length of the statement  "                return _pipeline.SendRequest(RequestMethod.Get' () => new DeletedSecret()' cancellationToken' DeletedSecretsPath' name); " is 120.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,GetDeletedSecretsAsync,The length of the statement  "            return PageResponseEnumerator.CreateAsyncEnumerable(nextLink => _pipeline.GetPageAsync(firstPageUri' nextLink' () => new DeletedSecret()' "Azure.Security.KeyVault.Secrets.SecretClient.GetDeletedSecrets"' cancellationToken)); " is 224.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,GetDeletedSecrets,The length of the statement  "            return PageResponseEnumerator.CreateEnumerable(nextLink => _pipeline.GetPage(firstPageUri' nextLink' () => new DeletedSecret()' "Azure.Security.KeyVault.Secrets.SecretClient.GetDeletedSecrets"' cancellationToken)); " is 214.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,StartRecoverDeletedSecretAsync,The length of the statement  "            using DiagnosticScope scope = _pipeline.CreateScope("Azure.Security.KeyVault.Secrets.SecretClient.StartRecoverDeletedSecret"); " is 126.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,StartRecoverDeletedSecretAsync,The length of the statement  "                Response<SecretProperties> response = await _pipeline.SendRequestAsync(RequestMethod.Post' () => new SecretProperties()' cancellationToken' DeletedSecretsPath' name' "/recover").ConfigureAwait(false); " is 200.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,StartRecoverDeletedSecret,The length of the statement  "            using DiagnosticScope scope = _pipeline.CreateScope("Azure.Security.KeyVault.Secrets.SecretClient.StartRecoverDeletedSecret"); " is 126.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,StartRecoverDeletedSecret,The length of the statement  "                Response<SecretProperties> response = _pipeline.SendRequest(RequestMethod.Post' () => new SecretProperties()' cancellationToken' DeletedSecretsPath' name' "/recover"); " is 167.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,PurgeDeletedSecretAsync,The length of the statement  "                return await _pipeline.SendRequestAsync(RequestMethod.Delete' cancellationToken' DeletedSecretsPath' name).ConfigureAwait(false); " is 129.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,BackupSecretAsync,The length of the statement  "                Response<SecretBackup> backup = await _pipeline.SendRequestAsync(RequestMethod.Post' () => new SecretBackup()' cancellationToken' SecretsPath' name' "/backup").ConfigureAwait(false); " is 182.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,BackupSecret,The length of the statement  "                Response<SecretBackup> backup = _pipeline.SendRequest(RequestMethod.Post' () => new SecretBackup()' cancellationToken' SecretsPath' name' "/backup"); " is 149.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,RestoreSecretBackupAsync,The length of the statement  "            using DiagnosticScope scope = _pipeline.CreateScope("Azure.Security.KeyVault.Secrets.SecretClient.RestoreSecretBackup"); " is 120.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,RestoreSecretBackupAsync,The length of the statement  "                return await _pipeline.SendRequestAsync(RequestMethod.Post' new SecretBackup { Value = backup }' () => new SecretProperties()' cancellationToken' SecretsPath' "restore").ConfigureAwait(false); " is 192.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,RestoreSecretBackup,The length of the statement  "            using DiagnosticScope scope = _pipeline.CreateScope("Azure.Security.KeyVault.Secrets.SecretClient.RestoreSecretBackup"); " is 120.
Long Statement,Azure.Security.KeyVault.Secrets,SecretClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClient.cs,RestoreSecretBackup,The length of the statement  "                return _pipeline.SendRequest(RequestMethod.Post' new SecretBackup { Value = backup }' () => new SecretProperties()' cancellationToken' SecretsPath' "restore"); " is 159.
Long Statement,Microsoft.Extensions.Azure,SecretClientBuilderExtensions,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretClientBuilderExtensions.cs,AddSecretClient,The length of the statement  "            return builder.RegisterClientFactory<SecretClient' SecretClientOptions>((options' cred) => new SecretClient(vaultUri' cred' options)); " is 134.
Long Statement,Azure.Security.KeyVault,Base64Url,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\Base64Url.cs,Decode,The length of the statement  "            str = new StringBuilder(str).Replace('-'' '+').Replace('_'' '/').Append('='' (str.Length % 4 == 0) ? 0 : 4 - (str.Length % 4)).ToString(); " is 138.
Long Statement,Azure.Security.KeyVault,Base64Url,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\Base64Url.cs,Encode,The length of the statement  "            return new StringBuilder(Convert.ToBase64String(bytes)).Replace('+'' '-').Replace('/'' '_').Replace("="' "").ToString(); " is 120.
Long Statement,Azure.Security.KeyVault,ChallengeBasedAuthenticationPolicy,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\ChallengeBasedAuthenticationPolicy.cs,AuthenticateRequestAsync,The length of the statement  "                        await _credential.GetTokenAsync(new TokenRequestContext(_challenge.Scopes)' message.CancellationToken).ConfigureAwait(false) : " is 126.
Long Statement,Azure.Security.KeyVault,AuthenticationChallenge,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\ChallengeBasedAuthenticationPolicy.cs,GetChallengeFromResponse,The length of the statement  "                if (response.Headers.TryGetValue("WWW-Authenticate"' out string challengeValue) && challengeValue.StartsWith(BearerChallengePrefix' StringComparison.OrdinalIgnoreCase)) " is 168.
Long Statement,Azure.Security.KeyVault,KeyVaultIdentifier,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultIdentifier.cs,Parse,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.InvariantCulture' "Invalid ObjectIdentifier: {0}. segment [1] should be '{1}/'' found '{2}'"' id' collection' identifier.Collection)); " is 188.
Long Statement,Azure.Security.KeyVault,KeyVaultIdentifier,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultIdentifier.cs,Parse,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.InvariantCulture' "Invalid ObjectIdentifier: {0}. Bad number of segments: {1}"' id' id.Segments.Length)); " is 159.
Complex Conditional,Azure.Core.Pipeline,ContentTypeUtilities,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\src\Shared\ContentTypeUtilities.cs,TryGetTextEncoding,The conditional expression  "contentType.StartsWith(textContentTypePrefix' StringComparison.OrdinalIgnoreCase) ||                  contentType.EndsWith(jsonSuffix' StringComparison.OrdinalIgnoreCase) ||                  contentType.EndsWith(xmlSuffix' StringComparison.OrdinalIgnoreCase) ||                  contentType.EndsWith(urlEncodedSuffix' StringComparison.OrdinalIgnoreCase)"  is complex.
Magic Number,Azure.Security.KeyVault.Secrets,DeleteSecretOperation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\DeleteSecretOperation.cs,CheckCompletedAsync,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 403: // Access denied but proof the secret was deleted.                      return true;                    case 404:                      return false;                    default:                      throw await response.CreateRequestFailedExceptionAsync().ConfigureAwait(false);              }
Magic Number,Azure.Security.KeyVault.Secrets,DeleteSecretOperation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\DeleteSecretOperation.cs,CheckCompletedAsync,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 403: // Access denied but proof the secret was deleted.                      return true;                    case 404:                      return false;                    default:                      throw await response.CreateRequestFailedExceptionAsync().ConfigureAwait(false);              }
Magic Number,Azure.Security.KeyVault.Secrets,DeleteSecretOperation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\DeleteSecretOperation.cs,CheckCompletedAsync,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 403: // Access denied but proof the secret was deleted.                      return true;                    case 404:                      return false;                    default:                      throw await response.CreateRequestFailedExceptionAsync().ConfigureAwait(false);              }
Magic Number,Azure.Security.KeyVault.Secrets,DeleteSecretOperation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\DeleteSecretOperation.cs,CheckCompleted,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 403: // Access denied but proof the secret was deleted.                      return true;                    case 404:                      return false;                    default:                      throw response.CreateRequestFailedException();              }
Magic Number,Azure.Security.KeyVault.Secrets,DeleteSecretOperation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\DeleteSecretOperation.cs,CheckCompleted,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 403: // Access denied but proof the secret was deleted.                      return true;                    case 404:                      return false;                    default:                      throw response.CreateRequestFailedException();              }
Magic Number,Azure.Security.KeyVault.Secrets,DeleteSecretOperation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\DeleteSecretOperation.cs,CheckCompleted,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 403: // Access denied but proof the secret was deleted.                      return true;                    case 404:                      return false;                    default:                      throw response.CreateRequestFailedException();              }
Magic Number,Azure.Security.KeyVault.Secrets,ObjectId,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\ObjectId.cs,ParseId,The following statement contains a magic number: Id.Segments.Length != 3 && Id.Segments.Length != 4
Magic Number,Azure.Security.KeyVault.Secrets,ObjectId,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\ObjectId.cs,ParseId,The following statement contains a magic number: Id.Segments.Length != 3 && Id.Segments.Length != 4
Magic Number,Azure.Security.KeyVault.Secrets,ObjectId,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\ObjectId.cs,ParseId,The following statement contains a magic number: Name = Id.Segments[2].Trim('/');
Magic Number,Azure.Security.KeyVault.Secrets,ObjectId,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\ObjectId.cs,ParseId,The following statement contains a magic number: Version = (Id.Segments.Length == 4) ? Id.Segments[3].TrimEnd('/') : null;
Magic Number,Azure.Security.KeyVault.Secrets,ObjectId,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\ObjectId.cs,ParseId,The following statement contains a magic number: Version = (Id.Segments.Length == 4) ? Id.Segments[3].TrimEnd('/') : null;
Magic Number,Azure.Security.KeyVault.Secrets,RecoverDeletedSecretOperation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\RecoverDeletedSecretOperation.cs,CheckCompletedAsync,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 403: // Access denied but proof the secret was recovered.                      return true;                    case 404:                      return false;                    default:                      throw await response.CreateRequestFailedExceptionAsync().ConfigureAwait(false);              }
Magic Number,Azure.Security.KeyVault.Secrets,RecoverDeletedSecretOperation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\RecoverDeletedSecretOperation.cs,CheckCompletedAsync,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 403: // Access denied but proof the secret was recovered.                      return true;                    case 404:                      return false;                    default:                      throw await response.CreateRequestFailedExceptionAsync().ConfigureAwait(false);              }
Magic Number,Azure.Security.KeyVault.Secrets,RecoverDeletedSecretOperation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\RecoverDeletedSecretOperation.cs,CheckCompletedAsync,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 403: // Access denied but proof the secret was recovered.                      return true;                    case 404:                      return false;                    default:                      throw await response.CreateRequestFailedExceptionAsync().ConfigureAwait(false);              }
Magic Number,Azure.Security.KeyVault.Secrets,RecoverDeletedSecretOperation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\RecoverDeletedSecretOperation.cs,CheckCompleted,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 403: // Access denied but proof the secret was recovered.                      return true;                    case 404:                      return false;                    default:                      throw response.CreateRequestFailedException();              }
Magic Number,Azure.Security.KeyVault.Secrets,RecoverDeletedSecretOperation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\RecoverDeletedSecretOperation.cs,CheckCompleted,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 403: // Access denied but proof the secret was recovered.                      return true;                    case 404:                      return false;                    default:                      throw response.CreateRequestFailedException();              }
Magic Number,Azure.Security.KeyVault.Secrets,RecoverDeletedSecretOperation,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\RecoverDeletedSecretOperation.cs,CheckCompleted,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 403: // Access denied but proof the secret was recovered.                      return true;                    case 404:                      return false;                    default:                      throw response.CreateRequestFailedException();              }
Magic Number,Azure.Security.KeyVault,Base64Url,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\Base64Url.cs,Decode,The following statement contains a magic number: str = new StringBuilder(str).Replace('-'' '+').Replace('_'' '/').Append('='' (str.Length % 4 == 0) ? 0 : 4 - (str.Length % 4)).ToString();
Magic Number,Azure.Security.KeyVault,Base64Url,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\Base64Url.cs,Decode,The following statement contains a magic number: str = new StringBuilder(str).Replace('-'' '+').Replace('_'' '/').Append('='' (str.Length % 4 == 0) ? 0 : 4 - (str.Length % 4)).ToString();
Magic Number,Azure.Security.KeyVault,Base64Url,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\Base64Url.cs,Decode,The following statement contains a magic number: str = new StringBuilder(str).Replace('-'' '+').Replace('_'' '/').Append('='' (str.Length % 4 == 0) ? 0 : 4 - (str.Length % 4)).ToString();
Magic Number,Azure.Security.KeyVault,ChallengeBasedAuthenticationPolicy,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\ChallengeBasedAuthenticationPolicy.cs,ProcessCoreAsync,The following statement contains a magic number: message.Response.Status == 401
Magic Number,Azure.Security.KeyVault,ChallengeBasedAuthenticationPolicy,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\ChallengeBasedAuthenticationPolicy.cs,AuthenticateRequestAsync,The following statement contains a magic number: _refreshOn = token.ExpiresOn - TimeSpan.FromMinutes(2);
Magic Number,Azure.Security.KeyVault,AuthenticationChallenge,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\ChallengeBasedAuthenticationPolicy.cs,ParseBearerChallengeHeaderValue,The following statement contains a magic number: pair.Length == 2
Magic Number,Azure.Security.KeyVault,KeyVaultIdentifier,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultIdentifier.cs,Parse,The following statement contains a magic number: id.Segments.Length != 3 && id.Segments.Length != 4
Magic Number,Azure.Security.KeyVault,KeyVaultIdentifier,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultIdentifier.cs,Parse,The following statement contains a magic number: id.Segments.Length != 3 && id.Segments.Length != 4
Magic Number,Azure.Security.KeyVault,KeyVaultIdentifier,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultIdentifier.cs,Parse,The following statement contains a magic number: KeyVaultIdentifier identifier = new KeyVaultIdentifier              {                    Id = id'                  VaultUri = new Uri($"{id.Scheme}://{id.Authority}")'                  Collection = id.Segments[1].Trim('/')'                  Name = id.Segments[2].Trim('/')'                  Version = (id.Segments.Length == 4) ? id.Segments[3].TrimEnd('/') : null              };
Magic Number,Azure.Security.KeyVault,KeyVaultIdentifier,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultIdentifier.cs,Parse,The following statement contains a magic number: KeyVaultIdentifier identifier = new KeyVaultIdentifier              {                    Id = id'                  VaultUri = new Uri($"{id.Scheme}://{id.Authority}")'                  Collection = id.Segments[1].Trim('/')'                  Name = id.Segments[2].Trim('/')'                  Version = (id.Segments.Length == 4) ? id.Segments[3].TrimEnd('/') : null              };
Magic Number,Azure.Security.KeyVault,KeyVaultIdentifier,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultIdentifier.cs,Parse,The following statement contains a magic number: KeyVaultIdentifier identifier = new KeyVaultIdentifier              {                    Id = id'                  VaultUri = new Uri($"{id.Scheme}://{id.Authority}")'                  Collection = id.Segments[1].Trim('/')'                  Name = id.Segments[2].Trim('/')'                  Version = (id.Segments.Length == 4) ? id.Segments[3].TrimEnd('/') : null              };
Magic Number,Azure.Security.KeyVault,KeyVaultPipeline,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultPipeline.cs,SendRequestAsync,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 201:                  case 202:                  case 204:                      return response;                  default:                      throw await response.CreateRequestFailedExceptionAsync().ConfigureAwait(false);              }
Magic Number,Azure.Security.KeyVault,KeyVaultPipeline,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultPipeline.cs,SendRequestAsync,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 201:                  case 202:                  case 204:                      return response;                  default:                      throw await response.CreateRequestFailedExceptionAsync().ConfigureAwait(false);              }
Magic Number,Azure.Security.KeyVault,KeyVaultPipeline,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultPipeline.cs,SendRequestAsync,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 201:                  case 202:                  case 204:                      return response;                  default:                      throw await response.CreateRequestFailedExceptionAsync().ConfigureAwait(false);              }
Magic Number,Azure.Security.KeyVault,KeyVaultPipeline,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultPipeline.cs,SendRequestAsync,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 201:                  case 202:                  case 204:                      return response;                  default:                      throw await response.CreateRequestFailedExceptionAsync().ConfigureAwait(false);              }
Magic Number,Azure.Security.KeyVault,KeyVaultPipeline,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultPipeline.cs,SendRequest,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 201:                  case 202:                  case 204:                      return response;                  default:                      throw response.CreateRequestFailedException();              }
Magic Number,Azure.Security.KeyVault,KeyVaultPipeline,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultPipeline.cs,SendRequest,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 201:                  case 202:                  case 204:                      return response;                  default:                      throw response.CreateRequestFailedException();              }
Magic Number,Azure.Security.KeyVault,KeyVaultPipeline,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultPipeline.cs,SendRequest,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 201:                  case 202:                  case 204:                      return response;                  default:                      throw response.CreateRequestFailedException();              }
Magic Number,Azure.Security.KeyVault,KeyVaultPipeline,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultPipeline.cs,SendRequest,The following statement contains a magic number: switch (response.Status)              {                  case 200:                  case 201:                  case 202:                  case 204:                      return response;                  default:                      throw response.CreateRequestFailedException();              }
Magic Number,Azure.Core.Pipeline,ActivityExtensions,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\src\Shared\DiagnosticScope.cs,SetW3CFormat,The following statement contains a magic number: s_setIdFormatMethod.Invoke(activity' new object[]{ 2 /* ActivityIdFormat.W3C */});
Magic Number,Azure.Core.Pipeline,ActivityExtensions,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\src\Shared\DiagnosticScope.cs,IsW3CFormat,The following statement contains a magic number: return (int)result == 2 /* ActivityIdFormat.W3C */;
Missing Default,Azure.Security.KeyVault.Secrets,SecretAttributes,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretAttributes.cs,ReadProperties,The following switch statement is missing a default case: switch (prop.Name)                  {                      case EnabledPropertyName:                          Enabled = prop.Value.GetBoolean();                          break;                        case NotBeforePropertyName:                          NotBefore = DateTimeOffset.FromUnixTimeSeconds(prop.Value.GetInt64());                          break;                        case ExpiresPropertyName:                          ExpiresOn = DateTimeOffset.FromUnixTimeSeconds(prop.Value.GetInt64());                          break;                        case CreatedPropertyName:                          CreatedOn = DateTimeOffset.FromUnixTimeSeconds(prop.Value.GetInt64());                          break;                        case UpdatedPropertyName:                          UpdatedOn = DateTimeOffset.FromUnixTimeSeconds(prop.Value.GetInt64());                          break;                        case RecoveryLevelPropertyName:                          RecoveryLevel = prop.Value.GetString();                          break;                  }
Missing Default,Azure.Security.KeyVault.Secrets,SecretProperties,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Secrets\src\SecretProperties.cs,ReadProperty,The following switch statement is missing a default case: switch (prop.Name)              {                  case IdPropertyName:                      _identifier.ParseId("secrets"' prop.Value.GetString());                      break;                    case ContentTypePropertyName:                      ContentType = prop.Value.GetString();                      break;                    case KidPropertyName:                      _keyId = prop.Value.GetString();                      break;                    case ManagedPropertyName:                      Managed = prop.Value.GetBoolean();                      break;                    case AttributesPropertyName:                      _attributes.ReadProperties(prop.Value);                      break;                    case TagsPropertyName:                      foreach (JsonProperty tag in prop.Value.EnumerateObject())                      {                          Tags[tag.Name] = tag.Value.GetString();                      }                      break;              }
Missing Default,Azure.Security.KeyVault,KeyVaultPage<T>,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Shared\src\KeyVaultPage.cs,ReadProperties,The following switch statement is missing a default case: switch (prop.Name)                  {                      case "value":                          JsonElement value = prop.Value;                          if (value.ValueKind != JsonValueKind.Null)                          {                              _items = new T[value.GetArrayLength()];                                int i = 0;                                foreach (JsonElement elem in value.EnumerateArray())                              {                                  _items[i] = _itemFactory();                                    _items[i].ReadProperties(elem);                                    i++;                              }                          }                          break;                        case "nextLink":                          var nextLinkUrl = prop.Value.GetString();                          if (!string.IsNullOrEmpty(nextLinkUrl))                          {                              NextLink = new Uri(nextLinkUrl);                          }                          break;                  }
