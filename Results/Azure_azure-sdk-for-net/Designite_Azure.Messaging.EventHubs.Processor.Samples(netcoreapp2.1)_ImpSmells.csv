Implementation smell,Namespace,Class,File,Method,Description
Long Method,Azure.Messaging.EventHubs.Samples,Sample01_ConsumeEventsWithEventProcessor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Sample01_ConsumeEventsWithEventProcessor.cs,RunAsync,The method has 132 lines of code.
Complex Method,Azure.Messaging.EventHubs.Processor.Samples,Program,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Program.cs,Main,Cyclomatic complexity of the method is 8
Complex Method,Azure.Messaging.EventHubs.Processor.Samples,Program,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Program.cs,ParseArguments,Cyclomatic complexity of the method is 9
Long Statement,Azure.Messaging.EventHubs.Processor.Samples,Program,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Program.cs,Main,The length of the statement  "                Console.Write("Please provide the connection string for the Event Hubs namespace that you'd like to use and then press Enter: "); " is 129.
Long Statement,Azure.Messaging.EventHubs.Processor.Samples,Program,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Program.cs,Main,The length of the statement  "                Console.Write("Please provide the connection string for the Azure storage account that you'd like to use and then press Enter: "); " is 130.
Long Statement,Azure.Messaging.EventHubs.Processor.Samples,Program,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Program.cs,Main,The length of the statement  "                await samples[choice.Value].RunAsync(parsedArgs.EventHubsConnectionString' parsedArgs.EventHub' parsedArgs.StorageConnectionString' parsedArgs.BlobContainer); " is 158.
Long Statement,Azure.Messaging.EventHubs.Processor.Samples,Program,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Program.cs,DisplayHelp,The length of the statement  "            var storageSample = "DefaultEndpointsProtocol=https;AccountName=NotReal;AccountKey=[FAKE];EndpointSuffix=core.windows.net"; " is 123.
Long Statement,Azure.Messaging.EventHubs.Processor.Samples,Program,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Program.cs,DisplayHelp,The length of the statement  "            Console.WriteLine("This executable allows for running the Azure Event Hubs Blob Checkpoint Store library samples.  Because"); " is 125.
Long Statement,Azure.Messaging.EventHubs.Processor.Samples,Program,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Program.cs,DisplayHelp,The length of the statement  "            Console.WriteLine("the samples run against live Azure services' they require an Event Hubs namespace' an Event Hub' an"); " is 121.
Long Statement,Azure.Messaging.EventHubs.Processor.Samples,Program,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Program.cs,DisplayHelp,The length of the statement  "            Console.WriteLine($"\tAzure.Messaging.EventHubs.Processor.Samples.exe { CommandLineArguments.ArgumentPrefix }{ nameof(CommandLineArguments.EventHubsConnectionString) } \"{ eventHubsSample }\" { CommandLineArguments.ArgumentPrefix }{ nameof(CommandLineArguments.EventHub) } \"SomeHub\" { CommandLineArguments.ArgumentPrefix }{ nameof(CommandLineArguments.StorageConnectionString) } \"{ storageSample }\" { CommandLineArguments.ArgumentPrefix }{ nameof(CommandLineArguments.BlobContainer) } \"Checkpoints\""); " is 507.
Long Statement,Azure.Messaging.EventHubs.Processor.Samples,Program,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Program.cs,DisplayHelp,The length of the statement  "            Console.WriteLine($"\tAzure.Messaging.EventHubs.Processor.Samples.exe \"{ eventHubsSample}\" \"SomeHub\" \"{ storageSample }\" \"Checkpoints\""); " is 145.
Long Statement,Azure.Messaging.EventHubs.Processor.Samples,Program,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Program.cs,DisplayHelp,The length of the statement  "            Console.WriteLine($"\tAzure.Messaging.EventHubs.Processor.Samples.exe { CommandLineArguments.ArgumentPrefix }{ nameof(CommandLineArguments.Help) }"); " is 149.
Long Statement,Azure.Messaging.EventHubs.Processor.Samples,Program,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Program.cs,ParseArguments,The length of the statement  "            if ((args.Length >= 4) && (!args[0].StartsWith(CommandLineArguments.ArgumentPrefix)) && (!args[1].StartsWith(CommandLineArguments.ArgumentPrefix))) " is 147.
Long Statement,Azure.Messaging.EventHubs.Processor.Samples,Program,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Program.cs,ParseArguments,The length of the statement  "                if (args[index].Equals($"{ CommandLineArguments.ArgumentPrefix }{ nameof(CommandLineArguments.Help) }"' StringComparison.OrdinalIgnoreCase)) " is 140.
Long Statement,Azure.Messaging.EventHubs.Processor.Samples,Program,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Program.cs,ParseArguments,The length of the statement  "                if (args[index].Equals($"{ CommandLineArguments.ArgumentPrefix }{ nameof(CommandLineArguments.EventHubsConnectionString) }"' StringComparison.OrdinalIgnoreCase)) " is 161.
Long Statement,Azure.Messaging.EventHubs.Processor.Samples,Program,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Program.cs,ParseArguments,The length of the statement  "                else if (args[index].Equals($"--{ nameof(CommandLineArguments.StorageConnectionString) }"' StringComparison.OrdinalIgnoreCase)) " is 127.
Long Statement,Azure.Messaging.EventHubs.Samples,Sample01_ConsumeEventsWithEventProcessor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Sample01_ConsumeEventsWithEventProcessor.cs,RunAsync,The length of the statement  "            // These handler delegates are invoked for each event or error that occurs during operation of the event processor.  For " is 120.
Long Statement,Azure.Messaging.EventHubs.Samples,Sample01_ConsumeEventsWithEventProcessor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Sample01_ConsumeEventsWithEventProcessor.cs,RunAsync,The length of the statement  "            // a given partition' only a single event will be dispatched for processing at a time so that the order of events within a " is 122.
Long Statement,Azure.Messaging.EventHubs.Samples,Sample01_ConsumeEventsWithEventProcessor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Sample01_ConsumeEventsWithEventProcessor.cs,RunAsync,The length of the statement  "            // partition is preserved.  Partitions' however' are processed concurrently.  As a result' your handlers are potentially processing " is 131.
Long Statement,Azure.Messaging.EventHubs.Samples,Sample01_ConsumeEventsWithEventProcessor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Sample01_ConsumeEventsWithEventProcessor.cs,RunAsync,The length of the statement  "            // Let's finally create our event processor.  We're using the default consumer group that was created with the Event Hub. " is 121.
Long Statement,Azure.Messaging.EventHubs.Samples,Sample01_ConsumeEventsWithEventProcessor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Sample01_ConsumeEventsWithEventProcessor.cs,RunAsync,The length of the statement  "            var eventProcessor = new EventProcessorClient(containerClient' EventHubConsumerClient.DefaultConsumerGroupName' connectionString' eventHubName' eventProcessorOptions); " is 167.
Long Statement,Azure.Messaging.EventHubs.Samples,Sample01_ConsumeEventsWithEventProcessor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Sample01_ConsumeEventsWithEventProcessor.cs,RunAsync,The length of the statement  "                Console.WriteLine($"\tPartition '{ eventArgs.PartitionId }': partition processing has stopped. Reason: { eventArgs.Reason }."); " is 127.
Long Statement,Azure.Messaging.EventHubs.Samples,Sample01_ConsumeEventsWithEventProcessor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Sample01_ConsumeEventsWithEventProcessor.cs,RunAsync,The length of the statement  "                // It's important to notice that this method is called even when no event is received after the maximum wait time' which " is 120.
Long Statement,Azure.Messaging.EventHubs.Samples,Sample01_ConsumeEventsWithEventProcessor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Sample01_ConsumeEventsWithEventProcessor.cs,RunAsync,The length of the statement  "                Console.WriteLine($"\tPartition '{ eventArgs.PartitionId }': an unhandled exception was encountered. This was not expected to happen."); " is 136.
Long Statement,Azure.Messaging.EventHubs.Samples,Sample01_ConsumeEventsWithEventProcessor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Sample01_ConsumeEventsWithEventProcessor.cs,RunAsync,The length of the statement  "            // as there's a 10 seconds interval between claims.  To be sure that we do not block forever in case the event processor " is 120.
Magic Number,Azure.Messaging.EventHubs.Processor.Samples,Program,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Program.cs,ParseArguments,The following statement contains a magic number: return new CommandLineArguments                  {                      EventHubsConnectionString = args[0]'                      EventHub = args[1]'                      StorageConnectionString = args[2]'                      BlobContainer = args[3]                  };
Magic Number,Azure.Messaging.EventHubs.Processor.Samples,Program,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Program.cs,ParseArguments,The following statement contains a magic number: return new CommandLineArguments                  {                      EventHubsConnectionString = args[0]'                      EventHub = args[1]'                      StorageConnectionString = args[2]'                      BlobContainer = args[3]                  };
Magic Number,Azure.Messaging.EventHubs.Processor.Samples,Program,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Program.cs,ParseArguments,The following statement contains a magic number: (args.Length >= 4) && (!args[0].StartsWith(CommandLineArguments.ArgumentPrefix)) && (!args[1].StartsWith(CommandLineArguments.ArgumentPrefix))
Magic Number,Azure.Messaging.EventHubs.Samples,Sample01_ConsumeEventsWithEventProcessor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Sample01_ConsumeEventsWithEventProcessor.cs,RunAsync,The following statement contains a magic number: cancellationSource.CancelAfter(TimeSpan.FromSeconds(400));
Magic Number,Azure.Messaging.EventHubs.Samples,Sample01_ConsumeEventsWithEventProcessor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Sample01_ConsumeEventsWithEventProcessor.cs,RunAsync,The following statement contains a magic number: await Task.Delay(500' cancellationSource.Token);
Magic Number,Azure.Messaging.EventHubs.Samples,Sample01_ConsumeEventsWithEventProcessor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Sample01_ConsumeEventsWithEventProcessor.cs,RunAsync,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Azure.Messaging.EventHubs.Samples,Sample01_ConsumeEventsWithEventProcessor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Sample01_ConsumeEventsWithEventProcessor.cs,RunAsync,The following statement contains a magic number: int amountOfSets = 10;
Magic Number,Azure.Messaging.EventHubs.Samples,Sample01_ConsumeEventsWithEventProcessor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Sample01_ConsumeEventsWithEventProcessor.cs,RunAsync,The following statement contains a magic number: int eventsPerSet = 2;
Magic Number,Azure.Messaging.EventHubs.Samples,Sample01_ConsumeEventsWithEventProcessor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\eventhub\Azure.Messaging.EventHubs.Processor\samples\Sample01_ConsumeEventsWithEventProcessor.cs,RunAsync,The following statement contains a magic number: await Task.Delay(500);
