Implementation smell,Namespace,Class,File,Method,Description
Long Method,Azure.Security.KeyVault.Certificates.Tests,CertificatePolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificatePolicyTests.cs,DeserializesSerializesRoundtrip,The method has 106 lines of code.
Complex Method,Azure.Security.KeyVault.Certificates.Samples,GetCertificates,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\samples\Sample2_GetCertificates.cs,GetCertificatesSync,Cyclomatic complexity of the method is 8
Complex Method,Azure.Core.Testing,RecordEntry,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\RecordEntry.cs,Deserialize,Cyclomatic complexity of the method is 8
Complex Method,Azure.Core.Tests,ClientDiagnosticListener,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\ClientDiagnosticListener.cs,OnNext,Cyclomatic complexity of the method is 9
Long Parameter List,Azure.Core.Testing,SyncAsyncPolicyTestBase,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\SyncAsyncPolicyTestBase.cs,SendRequestAsync,The method has 5 parameters. Parameters: transport' requestAction' policy' responseClassifier' bufferResponse
Long Parameter List,Azure.Core.Testing,SyncAsyncPolicyTestBase,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\SyncAsyncPolicyTestBase.cs,SendGetRequest,The method has 5 parameters. Parameters: transport' policy' responseClassifier' bufferResponse' uri
Long Identifier,Azure.Security.KeyVault.Certificates.Tests,CertificatesTestBase,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificatesTestBase.cs,,The length of the parameter AzureKeyVaultUrlEnvironmentVariable is 35.
Long Identifier,Azure.Core.Testing,ClientTestBase,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\ClientTestBase.cs,,The length of the parameter s_diagnosticScopeValidatingInterceptor is 38.
Long Statement,Azure.Security.KeyVault.Certificates.Tests,CertificateClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificateClientLiveTests.cs,StartCreateCertificateError,The length of the statement  "            RequestFailedException ex = Assert.ThrowsAsync<RequestFailedException>(() => Client.StartCreateCertificateAsync(certName' certificatePolicy)); " is 142.
Long Statement,Azure.Security.KeyVault.Certificates.Tests,CertificateClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificateClientLiveTests.cs,VerifyUnexpectedCancelCertificateOperation,The length of the statement  "                // Calling through the CertificateClient directly won't affect the CertificateOperation' so subsequent status updates should throw. " is 131.
Long Statement,Azure.Security.KeyVault.Certificates.Tests,CertificateClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificateClientLiveTests.cs,VerifyUnexpectedDeleteCertificateOperation,The length of the statement  "                // Calling through the CertificateClient directly won't affect the CertificateOperation' so subsequent status updates should throw. " is 131.
Long Statement,Azure.Security.KeyVault.Certificates.Tests,CertificateClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificateClientLiveTests.cs,VerifyCertificateOperationError,The length of the statement  "                InvalidOperationException ex = Assert.Throws<InvalidOperationException>(() => { KeyVaultCertificateWithPolicy cert = operation.Value; }); " is 137.
Long Statement,Azure.Security.KeyVault.Certificates.Tests,CertificateClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificateClientLiveTests.cs,VerifyCertificateGetWithPolicyInProgress,The length of the statement  "            KeyVaultCertificate certificate = await Client.GetCertificateVersionAsync(certName' certificateWithPolicy.Properties.Version); " is 126.
Long Statement,Azure.Security.KeyVault.Certificates.Tests,CertificateClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificateClientLiveTests.cs,VerifyGetCertificateCompleted,The length of the statement  "            KeyVaultCertificate certificate = await Client.GetCertificateVersionAsync(certName' certificateWithPolicy.Properties.Version); " is 126.
Long Statement,Azure.Security.KeyVault.Certificates.Tests,CertificateIssuerTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificateIssuerTests.cs,InitializedAdministrators,The length of the statement  "            Assert.AreEqual(@"{""provider"":""provider""'""credentials"":{""account_id"":""accountId""}'""org_details"":{""admin_details"":[{""email"":""email@domain.tld""}]}}"' json.ToString()); " is 183.
Long Statement,Azure.Security.KeyVault.Certificates.Tests,CertificatePolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificatePolicyTests.cs,CertificatePolicyWithSubjectAlternativeNamesValidation,The length of the statement  "            ArgumentException ex = Assert.Throws<ArgumentNullException>(() => new CertificatePolicy(null' (SubjectAlternativeNames)null)); " is 126.
Long Statement,Azure.Security.KeyVault.Certificates.Tests,SubjectAlternativeNamesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\SubjectAlternativeNamesTests.cs,GetSubjectAlternativeNames,The length of the statement  "            yield return new object[] { new SubjectAlternativeNames { DnsNames = { "www.example.com" }' Emails = { } }' @"{""dns_names"":[""www.example.com""]}" }; " is 151.
Long Statement,Azure.Security.KeyVault.Certificates.Tests,SubjectAlternativeNamesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\SubjectAlternativeNamesTests.cs,GetSubjectAlternativeNames,The length of the statement  "            yield return new object[] { new SubjectAlternativeNames { DnsNames = { }' Emails = { "webmaster@example.com" } }' @"{""emails"":[""webmaster@example.com""]}" }; " is 160.
Long Statement,Azure.Security.KeyVault.Certificates.Tests,SubjectAlternativeNamesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\SubjectAlternativeNamesTests.cs,GetSubjectAlternativeNames,The length of the statement  "            yield return new object[] { new SubjectAlternativeNames { DnsNames = { }' UserPrincipalNames = { "webmaster@example.com" } }' @"{""upns"":[""webmaster@example.com""]}" }; " is 170.
Long Statement,Azure.Security.KeyVault.Certificates.Tests,SubjectAlternativeNamesTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\SubjectAlternativeNamesTests.cs,GetSubjectAlternativeNames,The length of the statement  "                @"{""dns_names"":[""example.com""'""www.example.com""]'""emails"":[""webmaster@example.com""]'""upns"":[""webmaster@example.com""]}"' " is 133.
Long Statement,Azure.Security.KeyVault.Certificates.Samples,HelloWorld,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\samples\Sample1_HelloWorld.cs,HelloWorldSync,The length of the statement  "            Debug.WriteLine($"Certificate was returned with name {certificate.Name} which expires {certificate.Properties.ExpiresOn}"); " is 123.
Long Statement,Azure.Security.KeyVault.Certificates.Samples,HelloWorld,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\samples\Sample1_HelloWorld.cs,HelloWorldAsync,The length of the statement  "            // Next' let's wait on the certificate operation to complete. Note that certificate creation can last an indeterministic " is 120.
Long Statement,Azure.Security.KeyVault.Certificates.Samples,HelloWorld,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\samples\Sample1_HelloWorld.cs,HelloWorldAsync,The length of the statement  "            Debug.WriteLine($"Certificate was returned with name {certificate.Name} which expires {certificate.Properties.ExpiresOn}"); " is 123.
Long Statement,Azure.Security.KeyVault.Certificates.Samples,HelloWorld,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\samples\Sample1_HelloWorld.cs,HelloWorldAsync,The length of the statement  "            // Creating a certificate with the same name and policy as the compromised certificate will create another version of the " is 121.
Long Statement,Azure.Security.KeyVault.Certificates.Samples,GetCertificates,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\samples\Sample2_GetCertificates.cs,GetCertificatesSync,The length of the statement  "                Debug.WriteLine($"Certificate is returned with name {cert.Name} and thumbprint {BitConverter.ToString(cert.X509Thumbprint)}"); " is 126.
Long Statement,Azure.Security.KeyVault.Certificates.Samples,GetCertificates,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\samples\Sample2_GetCertificates.cs,GetCertificatesAsync,The length of the statement  "            // Instantiate a certificate client that will be used to call the service. Notice that the client is using default Azure " is 120.
Long Statement,Azure.Security.KeyVault.Certificates.Samples,GetCertificates,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\samples\Sample2_GetCertificates.cs,GetCertificatesAsync,The length of the statement  "            // Next' let's wait on the certificate operation to complete. Note that certificate creation can last an indeterministic " is 120.
Long Statement,Azure.Security.KeyVault.Certificates.Samples,GetCertificates,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\samples\Sample2_GetCertificates.cs,GetCertificatesAsync,The length of the statement  "                Debug.WriteLine($"Certificate is returned with name {cert.Name} and thumbprint {BitConverter.ToString(cert.X509Thumbprint)}"); " is 126.
Long Statement,Azure.Security.KeyVault.Certificates.Samples,GetCertificates,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\samples\Sample2_GetCertificates.cs,GetCertificatesAsync,The length of the statement  "            // We need to create a new version of a certificate. Creating a certificate with the same name will create another version of the certificate " is 141.
Long Statement,Azure.Security.KeyVault.Certificates.Samples,Snippets,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\samples\SampleSnippets.cs,CreateClient,The length of the statement  "            // Create a new certificate client using the default credential from Azure.Identity using environment variables previously set' " is 127.
Long Statement,Azure.Security.KeyVault.Certificates.Samples,Snippets,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\samples\SampleSnippets.cs,RetrieveCertificate,The length of the statement  "            KeyVaultCertificate certificate = client.GetCertificateVersion(certificateWithPolicy.Name' certificateWithPolicy.Properties.Version); " is 133.
Long Statement,Azure.Core.Testing,AsyncValidatingStream,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\AsyncValidatingStream.cs,Validate,The length of the statement  "                throw new InvalidOperationException("All stream calls were expected to be " + (_isAsync ? "async" : "sync") + " but were " + (isAsync ? "async" : "sync")); " is 155.
Long Statement,Azure.Core.Testing,ClientTestBase,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\ClientTestBase.cs,InstrumentClient,The length of the statement  "                        ClientValidation<TClient>.ValidationException = new InvalidOperationException($"Client type contains public non-virtual async method {methodInfo.Name}"); " is 153.
Long Statement,Azure.Core.Testing,DiagnosticScopeValidatingInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\DiagnosticScopeValidatingInterceptor.cs,Intercept,The length of the statement  "                bool strict = !invocation.Method.GetCustomAttributes(true).Any(a => a.GetType().FullName == "Azure.Core.ForwardsClientCallsAttribute"); " is 135.
Long Statement,Azure.Core.Testing,DiagnosticScopeValidatingInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\DiagnosticScopeValidatingInterceptor.cs,Intercept,The length of the statement  "                        MethodInfo getResultMethod = getAwaiterMethod.ReturnType.GetMethod("GetResult"' BindingFlags.Instance | BindingFlags.Public); " is 125.
Long Statement,Azure.Core.Testing,DiagnosticScopeValidatingInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\DiagnosticScopeValidatingInterceptor.cs,Intercept,The length of the statement  "                            (string Key' object Value' DiagnosticListener Listener) e = diagnosticListener.Events.FirstOrDefault(e => e.Key == expectedEvent); " is 130.
Long Statement,Azure.Core.Testing,DiagnosticScopeValidatingInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\DiagnosticScopeValidatingInterceptor.cs,Intercept,The length of the statement  "                                throw new InvalidOperationException($"Expected diagnostic event not fired {expectedEvent} {Environment.NewLine}    fired events {string.Join("' "' diagnosticListener.Events)} {Environment.NewLine}    You may have forgotten to set your operationId to {expectedEvent} in {methodName} or applied the Azure.Core.ForwardsClientCallsAttribute to {methodName}."); " is 356.
Long Statement,Azure.Core.Testing,DiagnosticScopeValidatingInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\DiagnosticScopeValidatingInterceptor.cs,Intercept,The length of the statement  "                                throw new InvalidOperationException($"{e.Key} event was written into wrong DiagnosticSource {e.Listener.Name}' expected: {ns}"); " is 128.
Long Statement,Azure.Core.Testing,EnumValuesAttribute,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\EnumValuesAttribute.cs,GetMembersImpl,The length of the statement  "                    if (property.PropertyType == type && property.CanRead && !property.CanWrite && Includes(property.Name) && !Excludes(property.Name)) " is 131.
Long Statement,Azure.Core.Testing,RecordMatcher,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\RecordMatcher.cs,IsEquivalentResponse,The length of the statement  "            IEnumerable<KeyValuePair<string' string[]>> entryHeaders = entry.ResponseHeaders.Where(h => !VolatileResponseHeaders.Contains(h.Key)); " is 134.
Long Statement,Azure.Core.Testing,RecordMatcher,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\RecordMatcher.cs,IsEquivalentResponse,The length of the statement  "            IEnumerable<KeyValuePair<string' string[]>> otherEntryHeaders = otherEntry.ResponseHeaders.Where(h => !VolatileResponseHeaders.Contains(h.Key)); " is 144.
Long Statement,Azure.Core.Testing,RecordMatcher,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\RecordMatcher.cs,CompareHeaderDictionaries,The length of the statement  "                        descriptionBuilder?.AppendLine($"    <{header.Key}> values differ' request <{JoinHeaderValues(header.Value)}>' record <{JoinHeaderValues(values)}>"); " is 149.
Long Statement,Azure.Core.Testing,RecordTransport,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\RecordTransport.cs,CreateEntry,The length of the statement  "            if (!request.Headers.TryGetValue("Content-Length"' out _) && request.Content != null && request.Content.TryComputeLength(out long computedLength)) " is 146.
Long Statement,Azure.Core.Testing,UseSyncMethodsInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\UseSyncMethodsInterceptor.cs,Intercept,The length of the statement  "                throw new InvalidOperationException($"Unable to find a method with name {nonAsyncMethodName} and {string.Join<Type>("'"' parameterTypes)} parameters. " " is 151.
Long Statement,Azure.Core.Tests,ClientDiagnosticListener,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\ClientDiagnosticListener.cs,AssertScopeStarted,The length of the statement  "                                throw new InvalidOperationException($"Attribute {expectedAttribute} not found' existing attributes: {string.Join("'"' producedDiagnosticScope.Activity.Tags)}"); " is 160.
Complex Conditional,Azure.Core.Testing,EnumValuesAttribute,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\EnumValuesAttribute.cs,GetMembersImpl,The conditional expression  "property.PropertyType == type && property.CanRead && !property.CanWrite && Includes(property.Name) && !Excludes(property.Name)"  is complex.
Complex Conditional,Azure.Core.Testing,EnumValuesAttribute,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\EnumValuesAttribute.cs,GetMembersImpl,The conditional expression  "field.FieldType == type && (field.IsInitOnly || field.IsLiteral) && Includes(field.Name) && !Excludes(field.Name)"  is complex.
Complex Conditional,Azure.Core.Pipeline,TestFrameworkContentTypeUtilities,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\src\Shared\ContentTypeUtilities.cs,TryGetTextEncoding,The conditional expression  "contentType.StartsWith(textContentTypePrefix' StringComparison.OrdinalIgnoreCase) ||                  contentType.EndsWith(jsonSuffix' StringComparison.OrdinalIgnoreCase) ||                  contentType.EndsWith(xmlSuffix' StringComparison.OrdinalIgnoreCase) ||                  contentType.EndsWith(urlEncodedSuffix' StringComparison.OrdinalIgnoreCase)"  is complex.
Empty Catch Block,Azure.Security.KeyVault.Certificates.Tests,CertificatesTestBase,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificatesTestBase.cs,CleanupCertificate,The method has an empty catch block.
Empty Catch Block,Azure.Security.KeyVault.Certificates.Tests,CertificatesTestBase,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificatesTestBase.cs,CleanupCertificate,The method has an empty catch block.
Empty Catch Block,Azure.Security.KeyVault.Certificates.Tests,CertificatesTestBase,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificatesTestBase.cs,CleanupCertificate,The method has an empty catch block.
Empty Catch Block,Azure.Core.Testing,RecordEntry,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\RecordEntry.cs,SerializeBody,The method has an empty catch block.
Empty Catch Block,Azure.Core.Testing,TestRecording,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\TestRecording.cs,TestRecording,The method has an empty catch block.
Magic Number,Azure.Security.KeyVault.Certificates.Tests,CertificateClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificateClientLiveTests.cs,StartCreateCertificateError,The following statement contains a magic number: Assert.AreEqual(400' ex.Status);
Magic Number,Azure.Security.KeyVault.Certificates.Tests,CertificateClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificateClientLiveTests.cs,VerifyCancelCertificateOperation,The following statement contains a magic number: Assert.AreEqual(200' operation.GetRawResponse().Status);
Magic Number,Azure.Security.KeyVault.Certificates.Tests,CertificateClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificateClientLiveTests.cs,VerifyUnexpectedCancelCertificateOperation,The following statement contains a magic number: Assert.AreEqual(200' operation.GetRawResponse().Status);
Magic Number,Azure.Security.KeyVault.Certificates.Tests,CertificateClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificateClientLiveTests.cs,VerifyDeleteCertificateOperation,The following statement contains a magic number: Assert.AreEqual(404' operation.GetRawResponse().Status);
Magic Number,Azure.Security.KeyVault.Certificates.Tests,CertificateClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificateClientLiveTests.cs,VerifyUnexpectedDeleteCertificateOperation,The following statement contains a magic number: Assert.AreEqual(404' operation.GetRawResponse().Status);
Magic Number,Azure.Security.KeyVault.Certificates.Tests,CertificateClientLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificateClientLiveTests.cs,VerifyCertificateOperationError,The following statement contains a magic number: Assert.AreEqual(200' operation.GetRawResponse().Status);
Magic Number,Azure.Security.KeyVault.Certificates.Tests,CertificatePolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificatePolicyTests.cs,DeserializesSerializesRoundtrip,The following statement contains a magic number: Assert.AreEqual(2048' policy.KeySize);
Magic Number,Azure.Security.KeyVault.Certificates.Tests,CertificatePolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificatePolicyTests.cs,DeserializesSerializesRoundtrip,The following statement contains a magic number: Assert.AreEqual(297' policy.ValidityInMonths);
Magic Number,Azure.Security.KeyVault.Certificates.Tests,CertificatePolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificatePolicyTests.cs,DeserializesSerializesRoundtrip,The following statement contains a magic number: Assert.AreEqual(80' policy.LifetimeActions[0].LifetimePercentage);
Magic Number,Azure.Security.KeyVault.Certificates.Tests,CertificatePolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificatePolicyTests.cs,DeserializesSerializesRoundtrip,The following statement contains a magic number: Assert.AreEqual(DateTimeOffset.FromUnixTimeSeconds(1482188947)' policy.CreatedOn);
Magic Number,Azure.Security.KeyVault.Certificates.Tests,CertificatePolicyTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\CertificatePolicyTests.cs,DeserializesSerializesRoundtrip,The following statement contains a magic number: Assert.AreEqual(DateTimeOffset.FromUnixTimeSeconds(1482188947)' policy.UpdatedOn);
Magic Number,Azure.Security.KeyVault.Certificates.Samples,HelloWorld,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\samples\Sample1_HelloWorld.cs,HelloWorldSync,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,Azure.Security.KeyVault.Certificates.Samples,GetCertificates,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\samples\Sample2_GetCertificates.cs,GetCertificatesSync,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,Azure.Security.KeyVault.Certificates.Samples,Snippets,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\samples\SampleSnippets.cs,CreateCertificate,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,Azure.Security.KeyVault.Certificates.Samples,Snippets,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\keyvault\Azure.Security.KeyVault.Certificates\tests\samples\SampleSnippets.cs,DeleteAndPurgeCertificate,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,Azure.Core.Testing,DiagnosticScopeValidatingInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\DiagnosticScopeValidatingInterceptor.cs,Intercept,The following statement contains a magic number: var expectedEventPrefix = declaringType.FullName + "." + methodName.Substring(0' methodName.Length - 5);
Magic Number,Azure.Core.Testing,RandomExtensions,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\RandomExtensions.cs,NewGuid,The following statement contains a magic number: var bytes = new byte[16];
Magic Number,Azure.Core.Testing,TestRetryHelper,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\TestRetryHelper.cs,RetryAsync,The following statement contains a magic number: delay = TimeSpan.FromSeconds(5);
Missing Default,Azure.Core.Testing,TestRecording,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\TestRecording.cs,TestRecording,The following switch statement is missing a default case: switch (Mode)              {                  case RecordedTestMode.Record:                      _session = new RecordSession();                      if (File.Exists(_sessionFile))                      {                          try                          {                              _previousSession = Load();                          }                          catch (Exception)                          {                              // ignore                          }                      }                      break;                  case RecordedTestMode.Playback:                      _session = Load();                      break;              }
