Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.WindowsAzure.Build.Tasks,FilterOutAutoRestLibraries,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\FilterOutAutoRestLibraries.cs,Execute,The method has 146 lines of code.
Complex Method,Microsoft.WindowsAzure.Build.Tasks,FilterOutAutoRestLibraries,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\FilterOutAutoRestLibraries.cs,Execute,Cyclomatic complexity of the method is 16
Long Parameter List,Microsoft.WindowsAzure.Build.Tasks,SdkProjectMetaData,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\SDKCategorizeProjects.cs,SdkProjectMetaData,The method has 5 parameters. Parameters: project' fxMoniker' fullProjectPath' isTargetFxSupported' projectType
Long Identifier,Microsoft.WindowsAzure.Build.Tasks,SDKCategorizeProjects,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\SDKCategorizeProjects.cs,,The length of the parameter _ignoreDirNameForSearchingProjects is 34.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,BuildProjectTemplatesTask,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\BuildProjectTemplatesTask.cs,Execute,The length of the statement  "                string projTemplateBaseDir = Path.Combine(Path.GetDirectoryName(new Uri(System.Reflection.Assembly.GetExecutingAssembly().CodeBase).AbsolutePath)' "projectTemplates"); " is 167.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,BuildProjectTemplatesTask,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\BuildProjectTemplatesTask.cs,Execute,The length of the statement  "                    string zipTemplateFile = Path.GetFullPath(Path.Combine(TemplateBuildOutputDirPath' string.Concat(templateDir' ".zip"))); " is 120.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,FilterOutAutoRestLibraries,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\FilterOutAutoRestLibraries.cs,Execute,The length of the statement  "                nPkgsList = NugetPackagesToPublish.Split(new char[] { ' '' '\t' }' StringSplitOptions.RemoveEmptyEntries).ToList<string>(); " is 123.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,FilterOutAutoRestLibraries,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\FilterOutAutoRestLibraries.cs,Execute,The length of the statement  "                    ITaskItem nProj = SdkNugetPackageInput.Where<ITaskItem>((item) => item.ItemSpec.Equals(projName' StringComparison.OrdinalIgnoreCase)).First<ITaskItem>(); " is 153.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,FilterOutAutoRestLibraries,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\FilterOutAutoRestLibraries.cs,Execute,The length of the statement  "                        throw new System.InvalidOperationException("We are not able to handle more than 1 nuget projects from the same library"); " is 121.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,FilterOutAutoRestLibraries,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\FilterOutAutoRestLibraries.cs,Execute,The length of the statement  "            Log.LogMessage(MessageImportance.High' "We have found {0} non netcore autorest libraries."' nonNetCoreAutoRestLibraries.Count); " is 127.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,FilterOutAutoRestLibraries,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\FilterOutAutoRestLibraries.cs,Execute,The length of the statement  "            Log.LogMessage(MessageImportance.High' "We have found {0} netcore autorest libraries."' netCoreAutoRestLibraries.Count); " is 120.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,PublishSDKNuget,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\PublishSDKNuget.cs,GetNugetPkgs,The length of the statement  "            var foundNugetPkgFiles = dupeFiles.Except<string>(foundSymbolPkgFiles' new ObjectComparer<string>((left' right) => left.Equals(right' StringComparison.OrdinalIgnoreCase))); " is 172.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,PublishSDKNuget,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\PublishSDKNuget.cs,ThrowForNonZeroExitCode,The length of the statement  "                    string exMessage = string.Format("{0}\r\n ExitCode:{1}\r\n {2}\r\n"' status.PublishArgs' status.NugetPublishExitCode.ToString()' status.NugetPublishStatusOutput); " is 162.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,SDKCategorizeProjects,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\SDKCategorizeProjects.cs,Execute,The length of the statement  "            string[] ignoreTokens = IgnoreDirNameForSearchingProjects.Split(new char[] { ' ' }' StringSplitOptions.RemoveEmptyEntries); " is 123.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,SDKCategorizeProjects,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\SDKCategorizeProjects.cs,Execute,The length of the statement  "            var net452SdkProjects = from s in projWithMetaData where (s.IsTargetFxSupported == true && s.FxMoniker == TargetFrameworkMoniker.net452 && s.ProjectType == SdkProjctType.Sdk) select s.ProjectTaskItem; " is 200.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,SDKCategorizeProjects,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\SDKCategorizeProjects.cs,Execute,The length of the statement  "            var netStd14SdkProjects = from s in projWithMetaData where (s.IsTargetFxSupported == true && s.FxMoniker == TargetFrameworkMoniker.netstandard14 && s.ProjectType == SdkProjctType.Sdk) select s.ProjectTaskItem; " is 209.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,SDKCategorizeProjects,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\SDKCategorizeProjects.cs,Execute,The length of the statement  "            var netCore11SdkProjects = from s in projWithMetaData where (s.IsTargetFxSupported == true && s.FxMoniker == TargetFrameworkMoniker.netcoreapp11 && s.ProjectType == SdkProjctType.Sdk) select s.ProjectTaskItem; " is 209.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,SDKCategorizeProjects,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\SDKCategorizeProjects.cs,Execute,The length of the statement  "            var testNetCore11Projects = from s in projWithMetaData where (s.IsTargetFxSupported == true && s.FxMoniker == TargetFrameworkMoniker.netcoreapp11 && s.ProjectType == SdkProjctType.Test) select s.ProjectTaskItem; " is 211.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,SDKCategorizeProjects,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\SDKCategorizeProjects.cs,Execute,The length of the statement  "            var testNet452Projects = from s in projWithMetaData where (s.IsTargetFxSupported == true && s.FxMoniker == TargetFrameworkMoniker.net452 && s.ProjectType == SdkProjctType.Test) select s.ProjectTaskItem; " is 202.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,SDKCategorizeProjects,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\SDKCategorizeProjects.cs,GetProjectData,The length of the statement  "                    var testReference = pkgs.Where<ProjectItem>((p) => p.EvaluatedInclude.Equals("xunit"' StringComparison.OrdinalIgnoreCase)); " is 123.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,SDKCategorizeProjects,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\SDKCategorizeProjects.cs,GetProjectData,The length of the statement  "                    SdkProjectMetaData sp = new SdkProjectMetaData(project: sdkProjMD.ProjectTaskItem' fxMoniker: tfxMoniker' fullProjectPath: sdkProjMD.ProjectTaskItem.ItemSpec' isTargetFxSupported: isFxSupported' projectType: pType); " is 215.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,SDKCategorizeProjects,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\SDKCategorizeProjects.cs,GetMetaData,The length of the statement  "                        var testReference = pkgs.Where<ProjectItem>((p) => p.EvaluatedInclude.Equals("xunit"' StringComparison.OrdinalIgnoreCase)); " is 123.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,SDKCategorizeProjects,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\SDKCategorizeProjects.cs,GetMetaData,The length of the statement  "                        SdkProjectMetaData sp = new SdkProjectMetaData(project: proj' fxMoniker: tfxMoniker' fullProjectPath: proj.ItemSpec' isTargetFxSupported: isFxSupported' projectType: pType); " is 173.
Long Statement,Microsoft.WindowsAzure.Build.Tasks,ValidateStrongNameSignatureTask,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\ValidateStrongNameSignatureTask.cs,Execute,The length of the statement  "                    Log.LogError("The strong name tool (sn.exe) could not be located within the Windows SDK directory structure ({0}))."' WindowsSdkPath); " is 134.
Long Statement,Microsoft.WindowsAzure.Build.Tasks.ExecProcess,NugetExec,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\ExecProcess\NugetExec.cs,Publish,The length of the statement  "                args = string.Format("push {0} -source {1} -NonInteractive -Timeout {2} -SymbolSource {3} -ApiKey {4} "' nupkgPath' PublishSymbolToPath' Constants.NugetDefaults.NUGET_TIMEOUT' PublishSymbolToPath' ApiKey); " is 205.
Long Statement,Microsoft.WindowsAzure.Build.Tasks.ExecProcess,NugetExec,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\ExecProcess\NugetExec.cs,Publish,The length of the statement  "                displayArgs = string.Format("push {0} -source {1} -NonInteractive -Timeout {2} -SymbolSource {3} -ApiKey {4} "' nupkgPath' PublishSymbolToPath' Constants.NugetDefaults.NUGET_TIMEOUT' PublishSymbolToPath' "<ApiKey>"); " is 216.
Long Statement,Microsoft.WindowsAzure.Build.Tasks.ExecProcess,NugetExec,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\ExecProcess\NugetExec.cs,Publish,The length of the statement  "                displayArgs = string.Format("{0} push {1} -source {2} -ApiKey {3} -NonInteractive -Timeout {4}"' NugetExePath' nupkgPath' PublishToPath' "<ApiKey>"' Constants.NugetDefaults.NUGET_TIMEOUT); " is 188.
Long Statement,Microsoft.WindowsAzure.Build.Tasks.ExecProcess,NugetExec,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\ExecProcess\NugetExec.cs,Publish,The length of the statement  "            return new NugetPublishStatus() { NugetPackagePath = nupkgPath' NugetPublishExitCode = exitCode' NugetPublishStatusOutput = output' PublishArgs = displayArgs }; " is 160.
Long Statement,Microsoft.WindowsAzure.Build.Tasks.Utilities,Check,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\Utilities\Check.cs,FileExists,The length of the statement  "                throw new FileNotFoundException(string.Format("'{0}' does not exists. Please check the validity of the path"' filePath)); " is 121.
Long Statement,Microsoft.WindowsAzure.Build.Tasks.Utilities,Check,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\Utilities\Check.cs,DirectoryExists,The length of the statement  "                throw new DirectoryNotFoundException(string.Format("'{0}' does not exists. Please check the validity of the directory path"' dirPath)); " is 135.
Long Statement,Microsoft.WindowsAzure.Build.Tasks.Utilities,ProjectSearchUtility,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\Utilities\ProjectSearchUtility.cs,GetFilteredProjects,The length of the statement  "            IEnumerable<string> filteredProjects = AllProjectList.Except<string>(IgnoredProjectList' new ObjectComparer<string>((left' right) => left.Equals(right' StringComparison.OrdinalIgnoreCase))); " is 190.
Long Statement,Microsoft.WindowsAzure.Build.Tasks.Utilities,ProjectSearchUtility,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\Utilities\ProjectSearchUtility.cs,GetFilteredTestProjects,The length of the statement  "            IEnumerable<string> filteredTestProjects = AllTestProjectList.Except<string>(IgnoredProjectList' new ObjectComparer<string>((left' right) => left.Equals(right' StringComparison.OrdinalIgnoreCase))); " is 198.
Long Statement,Microsoft.WindowsAzure.Build.Tasks.Utilities,ProjectSearchUtility,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\Utilities\ProjectSearchUtility.cs,GetAllSDKProjects,The length of the statement  "            List<string> filteredSDKProjects = GetFilteredProjects().Except<string>(GetFilteredTestProjects()' new ObjectComparer<string>((left' right) => left.Equals(right' StringComparison.OrdinalIgnoreCase)))?.ToList<string>(); " is 218.
Long Statement,Microsoft.WindowsAzure.Build.Tasks.Utilities,ProjectSearchUtility,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\Utilities\ProjectSearchUtility.cs,GetScopedSDKProjects,The length of the statement  "                var filteredProjs = scopedProjects.Except<string>(testProjs' new ObjectComparer<string>((left' right) => left.Equals(right' StringComparison.OrdinalIgnoreCase))); " is 162.
Long Statement,Microsoft.WindowsAzure.Build.Tasks.Utilities,ProjectSearchUtility,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\Utilities\ProjectSearchUtility.cs,GetScopedSDKProjects,The length of the statement  "                filteredProjs = filteredProjs.Except<string>(IgnoredProjectList' new ObjectComparer<string>((left' right) => left.Equals(right' StringComparison.OrdinalIgnoreCase))); " is 166.
Long Statement,Microsoft.WindowsAzure.Build.Tasks.Utilities,ProjectSearchUtility,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\Utilities\ProjectSearchUtility.cs,GetScopedTestProjects,The length of the statement  "                var filteredProjs = testScopedProjects.Except<string>(IgnoredProjectList' new ObjectComparer<string>((left' right) => left.Equals(right' StringComparison.OrdinalIgnoreCase))); " is 175.
Complex Conditional,Microsoft.WindowsAzure.Build.Tasks,ValidateStrongNameSignatureTask,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\ValidateStrongNameSignatureTask.cs,Execute,The conditional expression  "ExpectedDelaySigned && success || !ExpectedDelaySigned && !success"  is complex.
Magic Number,Microsoft.Azure.Build.Tasks,DebugTask,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\DebugTask.cs,Execute,The following statement contains a magic number: ThreadTask.Task waitingTask = ThreadTask.Task.Run(() =>              {                  Console.WriteLine("Press any key to continue or it will continue in {0} seconds"' (Timeoutmiliseconds / 1000));                  Console.ReadLine();              });
Magic Number,Microsoft.WindowsAzure.Build.Tasks.ExecProcess,ShellExec,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\ExecProcess\ShellExec.cs,AnalyzeExitCode,The following statement contains a magic number: if (exitCode == 9999) exitCode = LastExitCode;
Missing Default,Microsoft.WindowsAzure.Build.Tasks,SDKCategorizeProjects,C:\repos\Azure_azure-sdk-for-net\tools\legacy\Microsoft.WindowsAzure.Build.Tasks\Build.Tasks\SDKCategorizeProjects.cs,IsTargetFxSupported,The following switch statement is missing a default case: switch (lcMoniker)              {                  case "net452":                      validMoniker = TargetFrameworkMoniker.net452;                      fxSupported = true;                      break;                    case "netcoreapp1.1":                      validMoniker = TargetFrameworkMoniker.netcoreapp11;                      fxSupported = true;                      break;                    case "netstandard1.4":                      validMoniker = TargetFrameworkMoniker.netstandard14;                      fxSupported = true;                      break;                    case "net46":                      validMoniker = TargetFrameworkMoniker.net46;                      fxSupported = false;                      break;                    case "net461":                      validMoniker = TargetFrameworkMoniker.net461;                      fxSupported = false;                      break;              }
