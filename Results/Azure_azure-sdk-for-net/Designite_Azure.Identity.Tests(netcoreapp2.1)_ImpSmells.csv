Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateUnhandledException,Cyclomatic complexity of the method is 8
Complex Method,Azure.Core.Testing,RecordEntry,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\RecordEntry.cs,Deserialize,Cyclomatic complexity of the method is 8
Complex Method,Azure.Core.Tests,ClientDiagnosticListener,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\ClientDiagnosticListener.cs,OnNext,Cyclomatic complexity of the method is 9
Long Parameter List,Azure.Identity.Tests.Mock,AuthenticationResultFactory,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\Mock\AuthenticationResultFactory.cs,Create,The method has 10 parameters. Parameters: accessToken' isExtendedLifeTimeToken' uniqueId' expiresOn' extendedExpiresOn' tenantId' account' idToken' scopes' correlationId
Long Parameter List,Azure.Identity.Tests.Mock,MockAadIdentityClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\Mock\MockAadIdentityClient.cs,Authenticate,The method has 5 parameters. Parameters: tenantId' clientId' clientSecret' scopes' cancellationToken
Long Parameter List,Azure.Identity.Tests.Mock,MockAadIdentityClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\Mock\MockAadIdentityClient.cs,Authenticate,The method has 5 parameters. Parameters: tenantId' clientId' clientCertificate' scopes' cancellationToken
Long Parameter List,Azure.Identity.Tests.Mock,MockAadIdentityClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\Mock\MockAadIdentityClient.cs,AuthenticateAsync,The method has 5 parameters. Parameters: tenantId' clientId' clientSecret' scopes' cancellationToken
Long Parameter List,Azure.Identity.Tests.Mock,MockAadIdentityClient,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\Mock\MockAadIdentityClient.cs,AuthenticateAsync,The method has 5 parameters. Parameters: tenantId' clientId' clientCertificate' scopes' cancellationToken
Long Parameter List,Azure.Core.Testing,SyncAsyncPolicyTestBase,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\SyncAsyncPolicyTestBase.cs,SendRequestAsync,The method has 5 parameters. Parameters: transport' requestAction' policy' responseClassifier' bufferResponse
Long Parameter List,Azure.Core.Testing,SyncAsyncPolicyTestBase,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\SyncAsyncPolicyTestBase.cs,SendGetRequest,The method has 5 parameters. Parameters: transport' policy' responseClassifier' bufferResponse' uri
Long Identifier,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateCtorWithExcludeOptions,The length of the parameter excludeManagedIdentityCredential is 32.
Long Identifier,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateCtorWithExcludeOptions,The length of the parameter excludeSharedTokenCacheCredential is 33.
Long Identifier,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateCtorWithExcludeOptions,The length of the parameter excludeInteractiveBrowserCredential is 35.
Long Identifier,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateCtorWithExcludeOptions,The length of the parameter managedIdentityCredentialIncluded is 33.
Long Identifier,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateCtorWithExcludeOptions,The length of the parameter sharedTokenCacheCredentialIncluded is 34.
Long Identifier,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateCtorWithExcludeOptions,The length of the parameter interactiveBrowserCredentialIncluded is 36.
Long Identifier,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateAllUnavailable,The length of the parameter excludeManagedIdentityCredential is 32.
Long Identifier,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateAllUnavailable,The length of the parameter excludeSharedTokenCacheCredential is 33.
Long Identifier,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateAllUnavailable,The length of the parameter excludeInteractiveBrowserCredential is 35.
Long Identifier,Azure.Core.Testing,ClientTestBase,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\ClientTestBase.cs,,The length of the parameter s_diagnosticScopeValidatingInterceptor is 38.
Long Statement,Azure.Identity.Tests,AuthorizationCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AuthorizationCodeCredentialTests.cs,AuthenticateWithAuthCodeMockAsync,The length of the statement  "            AuthorizationCodeCredential cred = InstrumentClient(new AuthorizationCodeCredential(tenantId' clientId' clientSecret' authCode' options)); " is 138.
Long Statement,Azure.Identity.Tests,AuthorizationCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AuthorizationCodeCredentialTests.cs,AuthenticateWithAuthCodeMockAsync,The length of the statement  "            AccessToken token = await cred.GetTokenAsync(new TokenRequestContext(new string[] { "https://vault.azure.net/.default" })); " is 123.
Long Statement,Azure.Identity.Tests,AuthorizationCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AuthorizationCodeCredentialTests.cs,AuthenticateWithAuthCodeMockAsync,The length of the statement  "            AccessToken token2 = await cred.GetTokenAsync(new TokenRequestContext(new string[] { "https://managemnt.azure.com/.default" })); " is 128.
Long Statement,Azure.Identity.Tests,AuthorizationCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AuthorizationCodeCredentialTests.cs,CreateAuthorizationResponse,The length of the statement  "    ""refresh_token"": ""eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9-eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ-SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c""' " is 179.
Long Statement,Azure.Identity.Tests,AuthorizationCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AuthorizationCodeCredentialTests.cs,CreateAuthorizationResponse,The length of the statement  "    ""id_token"": ""eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6InU0T2ZORlBId0VCb3NIanRyYXVPYlY4NExuWSJ9.eyJhdWQiOiJFMDFCNUY2NC03OEY1LTRGODgtQjI4Mi03QUUzOUI4QUM0QkQiLCJpc3MiOiJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20vRDEwOUI0NkUtM0E5Ri00NDQwLTg2MjItMjVEQjQxOTg1MDUxL3YyLjAiLCJpYXQiOjE1NjM5OTA0MDEsIm5iZiI6MTU2Mzk5MDQwMSwiZXhwIjoxNTYzOTk0MzAxLCJhaW8iOiJRMVV3TlV4YVNFeG9aak5uUWpSd00zcFRNamRrV2pSTFNVcEdMMVV3TWt0a2FrZDFTRkJVVlZwMmVFODRNMFZ0VXk4Mlp6TjJLM1JrVVVzeVQyVXhNamxJWTNKQ1p6MGlMQ0p1WVcxbElqb2lVMk52ZEhRZ1UyTiIsIm5hbWUiOiJTb21lIFVzZXIiLCJvaWQiOiIyQ0M5QzNBOC0yNTA5LTQyMEYtQjAwQi02RTczQkM1MURDQjUiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJzb21ldXNlckBtaWNyb3NvZnQuY29tIiwic3ViIjoiQ0p6ZFdJaU9pSkdXakY0UVVOS1JFRnBRWFp6IiwidGlkIjoiMjRGRTMxMUYtN0E3MS00RjgzLTkxNkEtOTQ3OEQ0NUMwNDI3IiwidXRpIjoidFFqSTRNaTAzUVVVek9VSTRRVU0wUWtRaUxDSnBjM01pT2lKb2RIUiIsInZlciI6IjIuMCJ9.eVyG1AL8jwnTo3m9mGsV4EDHa_8PN6rRPEN9E3cQzxNoPU9HZTFt1SgOnLB7n1a4J_E3iVoZ3VB5I-NdDBESRdlg1k4XlrWqtisxl3I7pvWVFZKEhwHYYQ_nZITNeCb48LfZNz-Mr4EZeX6oyUymha5tOomikBLLxP78LOTlbGQiFn9AjtV0LtMeoiDf-K9t-kgU-XwsVjCyFKFBQhcyv7zaBEpeA-Kzh3-HG7wZ-geteM5y-JF97nD_rJ8ow1FmvtDYy6MVcwuNTv2YYT8dn8s-SGB4vpNNignlL0QgYh2P2cIrPdhZVc2iQqYTn_FK_UFPqyb_MZSjl1QkXVhgJA""' " is 1195.
Long Statement,Azure.Identity.Tests,AuthorizationCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AuthorizationCodeCredentialTests.cs,CreateAuthorizationResponse,The length of the statement  "    ""client_info"": ""eyJ1aWQiOiIyQ0M5QzNBOC0yNTA5LTQyMEYtQjAwQi02RTczQkM1MURDQjUiLCJ1dGlkIjoiNzJmOTg4YmYtODZmMS00MWFmLTkxYWItMmQ3Y2QwMTFkYjQ3In0"" " is 144.
Long Statement,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateClientSecretCredentialSucceededEvents,The length of the statement  "            var mockAadClient = new MockAadIdentityClient(() => new AccessToken(Guid.NewGuid().ToString()' DateTimeOffset.UtcNow.AddMinutes(10))); " is 134.
Long Statement,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateClientSecretCredentialSucceededEvents,The length of the statement  "            var credential = InstrumentClient(new ClientSecretCredential(Guid.NewGuid().ToString()' Guid.NewGuid().ToString()' Guid.NewGuid().ToString()' CredentialPipeline.GetInstance(null)' mockAadClient)); " is 196.
Long Statement,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateClientCertificateCredentialSucceededEvents,The length of the statement  "            var mockAadClient = new MockAadIdentityClient(() => new AccessToken(Guid.NewGuid().ToString()' DateTimeOffset.UtcNow.AddMinutes(10))); " is 134.
Long Statement,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateClientCertificateCredentialSucceededEvents,The length of the statement  "            var credential = InstrumentClient(new ClientCertificateCredential(Guid.NewGuid().ToString()' Guid.NewGuid().ToString()' new X509Certificate2()' CredentialPipeline.GetInstance(null)' mockAadClient)); " is 198.
Long Statement,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateDeviceCodeCredentialSucceededEvents,The length of the statement  "            var mockMsalClient = new MockMsalPublicClient() { DeviceCodeAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: Guid.NewGuid().ToString()' expiresOn: DateTimeOffset.UtcNow.AddMinutes(10)); } }; " is 219.
Long Statement,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateDeviceCodeCredentialSucceededEvents,The length of the statement  "            var credential = InstrumentClient(new DeviceCodeCredential((_' __) => { return Task.CompletedTask; }' Guid.NewGuid().ToString()' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 184.
Long Statement,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateInteractiveBrowserCredentialSucceededEvents,The length of the statement  "            var mockMsalClient = new MockMsalPublicClient() { InteractiveAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: Guid.NewGuid().ToString()' expiresOn: DateTimeOffset.UtcNow.AddMinutes(10)); } }; " is 220.
Long Statement,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateInteractiveBrowserCredentialSucceededEvents,The length of the statement  "            var credential = InstrumentClient(new InteractiveBrowserCredential(CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 122.
Long Statement,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateSharedTokenCacheCredentialSucceededEvents,The length of the statement  "                SilentAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: Guid.NewGuid().ToString()' expiresOn: DateTimeOffset.UtcNow.AddMinutes(10)); } " is 162.
Long Statement,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateSharedTokenCacheCredentialSucceededEvents,The length of the statement  "            var credential = InstrumentClient(new SharedTokenCacheCredential(null' "mockuser@mockdomain.com"' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 153.
Long Statement,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateClientSecretCredentialFailedEvents,The length of the statement  "            var credential = InstrumentClient(new ClientSecretCredential(Guid.NewGuid().ToString()' Guid.NewGuid().ToString()' Guid.NewGuid().ToString()' CredentialPipeline.GetInstance(null)' mockAadClient)); " is 196.
Long Statement,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateClientCertificateCrededntialFailedEvents,The length of the statement  "            var credential = InstrumentClient(new ClientCertificateCredential(Guid.NewGuid().ToString()' Guid.NewGuid().ToString()' new X509Certificate2()' CredentialPipeline.GetInstance(null)' mockAadClient)); " is 198.
Long Statement,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateDeviceCodeCredentialFailedEvents,The length of the statement  "            var mockMsalClient = new MockMsalPublicClient() { DeviceCodeAuthFactory = (_) => throw new MockClientException(expExMessage) }; " is 127.
Long Statement,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateDeviceCodeCredentialFailedEvents,The length of the statement  "            var credential = InstrumentClient(new DeviceCodeCredential((_' __) => { return Task.CompletedTask; }' Guid.NewGuid().ToString()' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 184.
Long Statement,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateInteractiveBrowserCredentialFailedEvents,The length of the statement  "            var mockMsalClient = new MockMsalPublicClient() { InteractiveAuthFactory = (_) => throw new MockClientException(expExMessage) }; " is 128.
Long Statement,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateInteractiveBrowserCredentialFailedEvents,The length of the statement  "            var credential = InstrumentClient(new InteractiveBrowserCredential(CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 122.
Long Statement,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateSharedTokenCacheCredentialFailedEvents,The length of the statement  "            var credential = InstrumentClient(new SharedTokenCacheCredential(null' "mockuser@mockdomain.com"' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 153.
Long Statement,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,AssertCredentialGetTokenFailedAsync,The length of the statement  "            Assert.CatchAsync<AuthenticationFailedException>(async () => await credential.GetTokenAsync(new TokenRequestContext(expScopes' expParentRequestId)' default)); " is 158.
Long Statement,Azure.Identity.Tests,ChainedTokenCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ChainedTokenCredentialTests.cs,CredentialSequenceValid,The length of the statement  "            var ex = Assert.CatchAsync<AuthenticationFailedException>(async () => await provider.GetTokenAsync(new TokenRequestContext(new string[] { "ScopeD" }))); " is 152.
Long Statement,Azure.Identity.Tests,ChainedTokenCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ChainedTokenCredentialTests.cs,CredentialSequenceValid,The length of the statement  "            CollectionAssert.AllItemsAreInstancesOfType(((AggregateException)ex.InnerException).InnerExceptions' typeof(CredentialUnavailableException)); " is 141.
Long Statement,Azure.Identity.Tests,ChainedTokenCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ChainedTokenCredentialTests.cs,CredentialThrows,The length of the statement  "            Assert.CatchAsync<AuthenticationFailedException>(async () => await provider.GetTokenAsync(new TokenRequestContext(new string[] { "ScopeB" }))); " is 143.
Long Statement,Azure.Identity.Tests,ChainedTokenCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ChainedTokenCredentialTests.cs,CredentialThrows,The length of the statement  "            Assert.CatchAsync<AuthenticationFailedException>(async () => await provider.GetTokenAsync(new TokenRequestContext(new string[] { "ScopeC" }))); " is 143.
Long Statement,Azure.Identity.Tests,ChainedTokenCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ChainedTokenCredentialTests.cs,AllCredentialSkipped,The length of the statement  "            var ex = Assert.CatchAsync<AuthenticationFailedException>(async () => await chain.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 142.
Long Statement,Azure.Identity.Tests,ChainedTokenCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ChainedTokenCredentialTests.cs,AllCredentialSkipped,The length of the statement  "            CollectionAssert.AllItemsAreInstancesOfType(((AggregateException)ex.InnerException).InnerExceptions' typeof(CredentialUnavailableException)); " is 141.
Long Statement,Azure.Identity.Tests,SimpleMockTokenCredential,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ChainedTokenCredentialTests.cs,GetToken,The length of the statement  "                return _scope == requestContext.Scopes[0] ? new AccessToken(_token' DateTimeOffset.MaxValue) : throw new CredentialUnavailableException("unavailable"); " is 151.
Long Statement,Azure.Identity.Tests,SimpleMockTokenCredential,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ChainedTokenCredentialTests.cs,GetTokenAsync,The length of the statement  "                return _scope == requestContext.Scopes[0] ? new AccessToken(_token' DateTimeOffset.MaxValue) : throw new CredentialUnavailableException("unavailable"); " is 151.
Long Statement,Azure.Identity.Tests,ClientCertificateCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientCertificateCredentialTests.cs,VerifyClientCertificateRequestAsync,The length of the statement  "            ClientCertificateCredential credential = InstrumentClient(new ClientCertificateCredential(expectedTenantId' expectedClientId' mockCert' options)); " is 146.
Long Statement,Azure.Identity.Tests,ClientCertificateCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientCertificateCredentialTests.cs,VerifyClientCertificateRequestAsync,The length of the statement  "            Assert.IsTrue(parsedBody.TryGetValue("client_assertion_type"' out string assertionType) && assertionType == "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"); " is 166.
Long Statement,Azure.Identity.Tests,ClientCertificateCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientCertificateCredentialTests.cs,VerifyClientCertificateRequestFailedAsync,The length of the statement  "            response.SetContent($"{{ \"error_code\": \"InvalidSecret\"' \"message\": \"The specified client_secret is incorrect\" }}"); " is 123.
Long Statement,Azure.Identity.Tests,ClientCertificateCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientCertificateCredentialTests.cs,VerifyClientCertificateRequestFailedAsync,The length of the statement  "            ClientCertificateCredential credential = InstrumentClient(new ClientCertificateCredential(expectedTenantId' expectedClientId' mockCert' options)); " is 146.
Long Statement,Azure.Identity.Tests,ClientCertificateCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientCertificateCredentialTests.cs,VerifyClientCertificateRequestFailedAsync,The length of the statement  "            Assert.ThrowsAsync<AuthenticationFailedException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 139.
Long Statement,Azure.Identity.Tests,ClientCertificateCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientCertificateCredentialTests.cs,VerifyClientCertificateCredentialExceptionAsync,The length of the statement  "            ClientCertificateCredential credential = InstrumentClient(new ClientCertificateCredential(expectedTenantId' expectedClientId' mockCert' CredentialPipeline.GetInstance(null)' mockAadClient)); " is 190.
Long Statement,Azure.Identity.Tests,ClientCertificateCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientCertificateCredentialTests.cs,VerifyClientCertificateCredentialExceptionAsync,The length of the statement  "            var ex = Assert.ThrowsAsync<AuthenticationFailedException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 148.
Long Statement,Azure.Identity.Tests,ClientCertificateCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientCertificateCredentialTests.cs,VerifyClientAssertion,The length of the statement  "                Assert.IsTrue(json.RootElement.TryGetProperty("x5t"' out JsonElement x5tProp) && x5tProp.GetString() == Base64Url.HexToBase64Url(clientCertificate.Thumbprint)); " is 160.
Long Statement,Azure.Identity.Tests,ClientCertificateCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientCertificateCredentialTests.cs,VerifyClientAssertion,The length of the statement  "                Assert.IsTrue(json.RootElement.TryGetProperty("aud"' out JsonElement audProp) && audProp.GetString() == $"https://login.microsoftonline.com/{expectedTenantId}/oauth2/v2.0/token"); " is 179.
Long Statement,Azure.Identity.Tests,ClientCertificateCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientCertificateCredentialTests.cs,VerifyClientAssertion,The length of the statement  "                Assert.IsTrue(json.RootElement.TryGetProperty("iss"' out JsonElement issProp) && issProp.GetString() == expectedClientId); " is 122.
Long Statement,Azure.Identity.Tests,ClientCertificateCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientCertificateCredentialTests.cs,VerifyClientAssertion,The length of the statement  "                Assert.IsTrue(json.RootElement.TryGetProperty("sub"' out JsonElement subProp) && subProp.GetString() == expectedClientId); " is 122.
Long Statement,Azure.Identity.Tests,ClientCertificateCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientCertificateCredentialTests.cs,VerifyClientAssertion,The length of the statement  "                Assert.IsTrue(json.RootElement.TryGetProperty("nbf"' out JsonElement nbfProp) && nbfProp.GetInt64() <= DateTimeOffset.UtcNow.ToUnixTimeSeconds()); " is 146.
Long Statement,Azure.Identity.Tests,ClientCertificateCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientCertificateCredentialTests.cs,VerifyClientAssertion,The length of the statement  "                Assert.IsTrue(json.RootElement.TryGetProperty("exp"' out JsonElement expProp) && expProp.GetInt64() > DateTimeOffset.UtcNow.ToUnixTimeSeconds()); " is 145.
Long Statement,Azure.Identity.Tests,ClientCertificateCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientCertificateCredentialTests.cs,VerifyClientAssertion,The length of the statement  "            Assert.IsTrue(clientCertificate.GetRSAPublicKey().VerifyData(Encoding.ASCII.GetBytes(compactHeader + "." + compactPayload)' Base64Url.Decode(encodedSignature)' HashAlgorithmName.SHA256' RSASignaturePadding.Pkcs1)); " is 214.
Long Statement,Azure.Identity.Tests,ClientSecretCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientSecretCredentialTests.cs,VerifyClientSecretCredentialRequestAsync,The length of the statement  "            ClientSecretCredential client = InstrumentClient(new ClientSecretCredential(expectedTenantId' expectedClientId' expectedClientSecret' options)); " is 144.
Long Statement,Azure.Identity.Tests,ClientSecretCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientSecretCredentialTests.cs,VerifyClientSecretCredentialRequestAsync,The length of the statement  "            Assert.IsTrue(parsedBody.TryGetValue("client_secret"' out string actualClientSecret) && actualClientSecret == "secret"); " is 120.
Long Statement,Azure.Identity.Tests,ClientSecretCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientSecretCredentialTests.cs,VerifyClientSecretRequestFailedAsync,The length of the statement  "            response.SetContent($"{{ \"error_code\": \"InvalidSecret\"' \"message\": \"The specified client_secret is incorrect\" }}"); " is 123.
Long Statement,Azure.Identity.Tests,ClientSecretCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientSecretCredentialTests.cs,VerifyClientSecretRequestFailedAsync,The length of the statement  "            ClientSecretCredential client = InstrumentClient(new ClientSecretCredential(expectedTenantId' expectedClientId' expectedClientSecret' options)); " is 144.
Long Statement,Azure.Identity.Tests,ClientSecretCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientSecretCredentialTests.cs,VerifyClientSecretRequestFailedAsync,The length of the statement  "            Assert.ThrowsAsync<AuthenticationFailedException>(async () => await client.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 135.
Long Statement,Azure.Identity.Tests,ClientSecretCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientSecretCredentialTests.cs,VerifyClientSecretCredentialExceptionAsync,The length of the statement  "            ClientSecretCredential credential = InstrumentClient(new ClientSecretCredential(Guid.NewGuid().ToString()' Guid.NewGuid().ToString()' Guid.NewGuid().ToString()' CredentialPipeline.GetInstance(null)' mockAadClient)); " is 215.
Long Statement,Azure.Identity.Tests,ClientSecretCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientSecretCredentialTests.cs,VerifyClientSecretCredentialExceptionAsync,The length of the statement  "            var ex = Assert.ThrowsAsync<AuthenticationFailedException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 148.
Long Statement,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateCtorOptionsPassedToCredentials,The length of the statement  "            credFactory.OnCreateSharedTokenCacheCredential = (tenantId' username' _) => { actTenantId = tenantId; actUsername = username; }; " is 128.
Long Statement,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateCtorWithExcludeOptions,The length of the statement  "            if (excludeEnvironmentCredential && excludeManagedIdentityCredential && excludeSharedTokenCacheCredential && excludeInteractiveBrowserCredential) " is 145.
Long Statement,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateAllUnavailable,The length of the statement  "            if (excludeEnvironmentCredential && excludeManagedIdentityCredential && excludeSharedTokenCacheCredential && excludeInteractiveBrowserCredential) " is 145.
Long Statement,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateAllUnavailable,The length of the statement  "                ((MockExtendedTokenCredential)c).TokenFactory = (context' cancel) => { return new ExtendedAccessToken(new CredentialUnavailableException("EnvironmentCredential Unavailable")); }; " is 178.
Long Statement,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateAllUnavailable,The length of the statement  "                ((MockExtendedTokenCredential)c).TokenFactory = (context' cancel) => { return new ExtendedAccessToken(new CredentialUnavailableException("InteractiveBrowserCredential Unavailable")); }; " is 185.
Long Statement,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateAllUnavailable,The length of the statement  "                ((MockExtendedTokenCredential)c).TokenFactory = (context' cancel) => { return new ExtendedAccessToken(new CredentialUnavailableException("ManagedIdentityCredential Unavailable")); }; " is 182.
Long Statement,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateAllUnavailable,The length of the statement  "                ((MockExtendedTokenCredential)c).TokenFactory = (context' cancel) => { return new ExtendedAccessToken(new CredentialUnavailableException("SharedTokenCacheCredential Unavailable")); }; " is 183.
Long Statement,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateAllUnavailable,The length of the statement  "            var ex = Assert.ThrowsAsync<AuthenticationFailedException>(async () => await cred.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 142.
Long Statement,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateUnhandledException,The length of the statement  "            var ex = Assert.ThrowsAsync<AuthenticationFailedException>(async () => await cred.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 142.
Long Statement,Azure.Identity.Tests,DeviceCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DeviceCodeCredentialTests.cs,AuthenticateWithDeviceCodeMockAsync,The length of the statement  "            var cred = InstrumentClient(new DeviceCodeCredential((code' cancelToken) => VerifyDeviceCode(code' expectedCode)' ClientId' options: options)); " is 143.
Long Statement,Azure.Identity.Tests,DeviceCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DeviceCodeCredentialTests.cs,AuthenticateWithDeviceCodeMockAsync,The length of the statement  "            AccessToken token = await cred.GetTokenAsync(new TokenRequestContext(new string[] { "https://vault.azure.net/.default" })); " is 123.
Long Statement,Azure.Identity.Tests,DeviceCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DeviceCodeCredentialTests.cs,AuthenticateWithDeviceCodeMockAsync2,The length of the statement  "            var cred = InstrumentClient(new DeviceCodeCredential((code' cancelToken) => VerifyDeviceCode(code' expectedCode)' ClientId' options: options)); " is 143.
Long Statement,Azure.Identity.Tests,DeviceCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DeviceCodeCredentialTests.cs,AuthenticateWithDeviceCodeMockAsync2,The length of the statement  "            AccessToken token = await cred.GetTokenAsync(new TokenRequestContext(new string[] { "https://vault.azure.net/.default" })); " is 123.
Long Statement,Azure.Identity.Tests,DeviceCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DeviceCodeCredentialTests.cs,AuthenticateWithDeviceCodeMockVerifyMsalCancellationAsync,The length of the statement  "            var cred = InstrumentClient(new DeviceCodeCredential((code' cancelToken) => VerifyDeviceCodeAndCancel(code' expectedCode' cancelSource)' null' ClientId' options: options)); " is 172.
Long Statement,Azure.Identity.Tests,DeviceCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DeviceCodeCredentialTests.cs,AuthenticateWithDeviceCodeMockVerifyMsalCancellationAsync,The length of the statement  "            var ex = Assert.CatchAsync<OperationCanceledException>(async () => await cred.GetTokenAsync(new TokenRequestContext(new string[] { "https://vault.azure.net/.default" })' cancelSource.Token)); " is 191.
Long Statement,Azure.Identity.Tests,DeviceCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DeviceCodeCredentialTests.cs,AuthenticateWithDeviceCodeMockVerifyCallbackCancellationAsync,The length of the statement  "            var cred = InstrumentClient(new DeviceCodeCredential(VerifyDeviceCodeCallbackCancellationToken' ClientId' options: options)); " is 125.
Long Statement,Azure.Identity.Tests,DeviceCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DeviceCodeCredentialTests.cs,AuthenticateWithDeviceCodeMockVerifyCallbackCancellationAsync,The length of the statement  "            var getTokenTask = cred.GetTokenAsync(new TokenRequestContext(new string[] { "https://vault.azure.net/.default" })' cancelSource.Token); " is 136.
Long Statement,Azure.Identity.Tests,DeviceCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DeviceCodeCredentialTests.cs,AuthenticateWithDeviceCodeCallbackThrowsAsync,The length of the statement  "            var ex = Assert.ThrowsAsync<AuthenticationFailedException>(async () => await cred.GetTokenAsync(new TokenRequestContext(new string[] { "https://vault.azure.net/.default" })' cancelSource.Token)); " is 195.
Long Statement,Azure.Identity.Tests,DeviceCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DeviceCodeCredentialTests.cs,CreateAuthorizationResponse,The length of the statement  "    ""refresh_token"": ""eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9-eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ-SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c""' " is 179.
Long Statement,Azure.Identity.Tests,DeviceCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DeviceCodeCredentialTests.cs,CreateAuthorizationResponse,The length of the statement  "    ""id_token"": ""eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6InU0T2ZORlBId0VCb3NIanRyYXVPYlY4NExuWSJ9.eyJhdWQiOiJFMDFCNUY2NC03OEY1LTRGODgtQjI4Mi03QUUzOUI4QUM0QkQiLCJpc3MiOiJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20vRDEwOUI0NkUtM0E5Ri00NDQwLTg2MjItMjVEQjQxOTg1MDUxL3YyLjAiLCJpYXQiOjE1NjM5OTA0MDEsIm5iZiI6MTU2Mzk5MDQwMSwiZXhwIjoxNTYzOTk0MzAxLCJhaW8iOiJRMVV3TlV4YVNFeG9aak5uUWpSd00zcFRNamRrV2pSTFNVcEdMMVV3TWt0a2FrZDFTRkJVVlZwMmVFODRNMFZ0VXk4Mlp6TjJLM1JrVVVzeVQyVXhNamxJWTNKQ1p6MGlMQ0p1WVcxbElqb2lVMk52ZEhRZ1UyTiIsIm5hbWUiOiJTb21lIFVzZXIiLCJvaWQiOiIyQ0M5QzNBOC0yNTA5LTQyMEYtQjAwQi02RTczQkM1MURDQjUiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJzb21ldXNlckBtaWNyb3NvZnQuY29tIiwic3ViIjoiQ0p6ZFdJaU9pSkdXakY0UVVOS1JFRnBRWFp6IiwidGlkIjoiMjRGRTMxMUYtN0E3MS00RjgzLTkxNkEtOTQ3OEQ0NUMwNDI3IiwidXRpIjoidFFqSTRNaTAzUVVVek9VSTRRVU0wUWtRaUxDSnBjM01pT2lKb2RIUiIsInZlciI6IjIuMCJ9.eVyG1AL8jwnTo3m9mGsV4EDHa_8PN6rRPEN9E3cQzxNoPU9HZTFt1SgOnLB7n1a4J_E3iVoZ3VB5I-NdDBESRdlg1k4XlrWqtisxl3I7pvWVFZKEhwHYYQ_nZITNeCb48LfZNz-Mr4EZeX6oyUymha5tOomikBLLxP78LOTlbGQiFn9AjtV0LtMeoiDf-K9t-kgU-XwsVjCyFKFBQhcyv7zaBEpeA-Kzh3-HG7wZ-geteM5y-JF97nD_rJ8ow1FmvtDYy6MVcwuNTv2YYT8dn8s-SGB4vpNNignlL0QgYh2P2cIrPdhZVc2iQqYTn_FK_UFPqyb_MZSjl1QkXVhgJA""' " is 1195.
Long Statement,Azure.Identity.Tests,DeviceCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DeviceCodeCredentialTests.cs,CreateAuthorizationResponse,The length of the statement  "    ""client_info"": ""eyJ1aWQiOiIyQ0M5QzNBOC0yNTA5LTQyMEYtQjAwQi02RTczQkM1MURDQjUiLCJ1dGlkIjoiNzJmOTg4YmYtODZmMS00MWFmLTkxYWItMmQ3Y2QwMTFkYjQ3In0"" " is 144.
Long Statement,Azure.Identity.Tests,EnvironmentCredentialProviderTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\EnvironmentCredentialProviderTests.cs,EnvironmentCredentialUnavailableException,The length of the statement  "            var ex = Assert.ThrowsAsync<CredentialUnavailableException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 149.
Long Statement,Azure.Identity.Tests,EnvironmentCredentialProviderTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\EnvironmentCredentialProviderTests.cs,EnvironmentCredentialAuthenticationFailedException,The length of the statement  "            ClientSecretCredential innerCred = new ClientSecretCredential(Guid.NewGuid().ToString()' Guid.NewGuid().ToString()' Guid.NewGuid().ToString()' CredentialPipeline.GetInstance(null)' mockAadClient); " is 196.
Long Statement,Azure.Identity.Tests,EnvironmentCredentialProviderTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\EnvironmentCredentialProviderTests.cs,EnvironmentCredentialAuthenticationFailedException,The length of the statement  "            var ex = Assert.ThrowsAsync<AuthenticationFailedException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 148.
Long Statement,Azure.Identity.Tests,EnvironmentCredentialProviderTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\EnvironmentCredentialProviderTests.cs,_credential,The length of the statement  "            return (TokenCredential)typeof(EnvironmentCredential).GetField("_credential"' BindingFlags.NonPublic | BindingFlags.Instance).GetValue(provider); " is 145.
Long Statement,Azure.Identity.Tests,InteractiveBrowserCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\InteractiveBrowserCredentialTests.cs,AuthenticateWithBrowserAsync,The length of the statement  "            AccessToken token = await cred.GetTokenAsync(new TokenRequestContext(new string[] { "https://vault.azure.net/.default" })).ConfigureAwait(false); " is 145.
Long Statement,Azure.Identity.Tests,InteractiveBrowserCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\InteractiveBrowserCredentialTests.cs,AuthenticateBrowserCancellationAsync,The length of the statement  "            ValueTask<AccessToken> getTokenTask = cred.GetTokenAsync(new TokenRequestContext(new string[] { "https://vault.azure.net/.default" })' cancelSource.Token); " is 155.
Long Statement,Azure.Identity.Tests,InteractiveBrowserCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\InteractiveBrowserCredentialTests.cs,AuthenticateWithBrowserSingleTenantAsync,The length of the statement  "            AccessToken token = await cred.GetTokenAsync(new TokenRequestContext(new string[] { "https://vault.azure.net/.default" })).ConfigureAwait(false); " is 145.
Long Statement,Azure.Identity.Tests,InteractiveBrowserCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\InteractiveBrowserCredentialTests.cs,InteractiveBrowserAcquireTokenInteractiveException,The length of the statement  "            var mockMsalClient = new MockMsalPublicClient() { InteractiveAuthFactory = (_) => { throw new MockClientException(expInnerExMessage); } }; " is 138.
Long Statement,Azure.Identity.Tests,InteractiveBrowserCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\InteractiveBrowserCredentialTests.cs,InteractiveBrowserAcquireTokenInteractiveException,The length of the statement  "            var credential = InstrumentClient(new InteractiveBrowserCredential(CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 122.
Long Statement,Azure.Identity.Tests,InteractiveBrowserCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\InteractiveBrowserCredentialTests.cs,InteractiveBrowserAcquireTokenInteractiveException,The length of the statement  "            var ex = Assert.ThrowsAsync<AuthenticationFailedException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 148.
Long Statement,Azure.Identity.Tests,InteractiveBrowserCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\InteractiveBrowserCredentialTests.cs,InteractiveBrowserAcquireTokenSilentException,The length of the statement  "                InteractiveAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: expToken' expiresOn: expExpiresOn); }' " is 127.
Long Statement,Azure.Identity.Tests,InteractiveBrowserCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\InteractiveBrowserCredentialTests.cs,InteractiveBrowserAcquireTokenSilentException,The length of the statement  "            var credential = InstrumentClient(new InteractiveBrowserCredential(CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 122.
Long Statement,Azure.Identity.Tests,InteractiveBrowserCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\InteractiveBrowserCredentialTests.cs,InteractiveBrowserAcquireTokenSilentException,The length of the statement  "            var ex = Assert.ThrowsAsync<AuthenticationFailedException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 148.
Long Statement,Azure.Identity.Tests,InteractiveBrowserCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\InteractiveBrowserCredentialTests.cs,InteractiveBrowserRefreshException,The length of the statement  "                InteractiveAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: expToken' expiresOn: expExpiresOn); }' " is 127.
Long Statement,Azure.Identity.Tests,InteractiveBrowserCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\InteractiveBrowserCredentialTests.cs,InteractiveBrowserRefreshException,The length of the statement  "            var credential = InstrumentClient(new InteractiveBrowserCredential(CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 122.
Long Statement,Azure.Identity.Tests,InteractiveBrowserCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\InteractiveBrowserCredentialTests.cs,InteractiveBrowserRefreshException,The length of the statement  "            var ex = Assert.ThrowsAsync<AuthenticationFailedException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 148.
Long Statement,Azure.Identity.Tests,ManagedIdentityCredentialLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialLiveTests.cs,ResetManagedIdenityClient,The length of the statement  "            typeof(ManagedIdentityCredential).GetField("s_msiType"' BindingFlags.NonPublic | BindingFlags.Static).SetValue(null' 0); " is 120.
Long Statement,Azure.Identity.Tests,ManagedIdentityCredentialLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialLiveTests.cs,ResetManagedIdenityClient,The length of the statement  "            typeof(ManagedIdentityCredential).GetField("s_endpoint"' BindingFlags.NonPublic | BindingFlags.Static).SetValue(null' null); " is 124.
Long Statement,Azure.Identity.Tests,ManagedIdentityCredentialLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialLiveTests.cs,GetSystemTokenLiveAsync,The length of the statement  "            AccessToken token = await credential.GetTokenAsync(new TokenRequestContext(new string[] { "https://management.azure.com//.default" })); " is 135.
Long Statement,Azure.Identity.Tests,ManagedIdentityCredentialLiveTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialLiveTests.cs,GetUserAssignedTokenLiveAsync,The length of the statement  "            AccessToken token = await credential.GetTokenAsync(new TokenRequestContext(new string[] { "https://management.azure.com//.default" })); " is 135.
Long Statement,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,ResetManagedIdenityClient,The length of the statement  "            typeof(ManagedIdentityClient).GetField("s_endpoint"' BindingFlags.NonPublic | BindingFlags.Static).SetValue(null' null); " is 120.
Long Statement,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyImdsUnavailableImmediateFailureMockAsync,The length of the statement  "                Assert.ThrowsAsync<CredentialUnavailableException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 140.
Long Statement,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyImdsAvailableUserCanceledMockAsync,The length of the statement  "                Assert.CatchAsync<OperationCanceledException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default)' cancellationSource.Token)); " is 161.
Long Statement,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyAppServiceMsiRequestMockAsync,The length of the statement  "                response.SetContent($"{{ \"access_token\": \"{expectedToken}\"' \"expires_on\": \"{DateTimeOffset.UtcNow.ToString()}\" }}"); " is 124.
Long Statement,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyAppServiceMsiRequestWithClientIdMockAsync,The length of the statement  "                response.SetContent($"{{ \"access_token\": \"{expectedToken}\"' \"expires_on\": \"{DateTimeOffset.UtcNow.ToString()}\" }}"); " is 124.
Long Statement,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyCloudShellMsiRequestMockAsync,The length of the statement  "                response.SetContent($"{{ \"access_token\": \"{expectedToken}\"' \"expires_on\": {(DateTimeOffset.UtcNow + TimeSpan.FromSeconds(3600)).ToUnixTimeSeconds()} }}"); " is 160.
Long Statement,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyCloudShellMsiRequestWithClientIdMockAsync,The length of the statement  "                response.SetContent($"{{ \"access_token\": \"{expectedToken}\"' \"expires_on\": {(DateTimeOffset.UtcNow + TimeSpan.FromSeconds(3600)).ToUnixTimeSeconds()} }}"); " is 160.
Long Statement,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyMsiUnavailableCredentialException,The length of the statement  "            var credential = InstrumentClient(new ManagedIdentityCredential(null' CredentialPipeline.GetInstance(null)' mockClient)); " is 121.
Long Statement,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyMsiUnavailableCredentialException,The length of the statement  "            var ex = Assert.ThrowsAsync<CredentialUnavailableException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 149.
Long Statement,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyClientGetMsiTypeThrows,The length of the statement  "            var credential = InstrumentClient(new ManagedIdentityCredential(null' CredentialPipeline.GetInstance(null)' mockClient)); " is 121.
Long Statement,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyClientGetMsiTypeThrows,The length of the statement  "            var ex = Assert.ThrowsAsync<AuthenticationFailedException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 148.
Long Statement,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyClientAuthenticateThrows,The length of the statement  "            var mockClient = new MockManagedIdentityClient { MsiTypeFactory = () => MsiType.Imds' TokenFactory = () => throw new MockClientException("message") }; " is 150.
Long Statement,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyClientAuthenticateThrows,The length of the statement  "            var credential = InstrumentClient(new ManagedIdentityCredential(null' CredentialPipeline.GetInstance(null)' mockClient)); " is 121.
Long Statement,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyClientAuthenticateThrows,The length of the statement  "            var ex = Assert.ThrowsAsync<AuthenticationFailedException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 148.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,OneAccountNoTentantNoUsername,The length of the statement  "                SilentAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: expToken' expiresOn: expExpiresOn); } " is 121.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,OneAccountNoTentantNoUsername,The length of the statement  "            var credential = InstrumentClient(new SharedTokenCacheCredential(null' null' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 132.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,OneMatchingAccountUsernameOnly,The length of the statement  "                SilentAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: expToken' expiresOn: expExpiresOn); } " is 121.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,OneMatchingAccountUsernameOnly,The length of the statement  "            var credential = InstrumentClient(new SharedTokenCacheCredential(null' "mockuser@mockdomain.com"' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 153.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,OneMatchingAccountTenantIdOnly,The length of the statement  "                Accounts = new IAccount[] { new MockAccount("mockuser@mockdomain.com"' nonMatchedTenantId)' new MockAccount("fakeuser@fakedomain.com")' new MockAccount("mockuser@mockdomain.com"' tenantId) }' " is 191.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,OneMatchingAccountTenantIdOnly,The length of the statement  "                SilentAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: expToken' expiresOn: expExpiresOn); } " is 121.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,OneMatchingAccountTenantIdOnly,The length of the statement  "            var credential = InstrumentClient(new SharedTokenCacheCredential(tenantId' null' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 136.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,OneMatchingAccountTenantIdAndUsername,The length of the statement  "                Accounts = new IAccount[] { new MockAccount("mockuser@mockdomain.com"' Guid.NewGuid().ToString())' new MockAccount("fakeuser@fakedomain.com")' new MockAccount("mockuser@mockdomain.com"' tenantId) }' " is 198.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,OneMatchingAccountTenantIdAndUsername,The length of the statement  "                SilentAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: expToken' expiresOn: expExpiresOn); } " is 121.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,OneMatchingAccountTenantIdAndUsername,The length of the statement  "            var credential = InstrumentClient(new SharedTokenCacheCredential(tenantId' "mockuser@mockdomain.com"' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 157.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoAccounts,The length of the statement  "                SilentAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: expToken' expiresOn: expExpiresOn); } " is 121.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoAccounts,The length of the statement  "            var credential = InstrumentClient(new SharedTokenCacheCredential(null' null' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 132.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoAccounts,The length of the statement  "            var ex = Assert.ThrowsAsync<CredentialUnavailableException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 149.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoAccounts,The length of the statement  "            var credential2 = InstrumentClient(new SharedTokenCacheCredential(null' "mockuser@mockdomain.com"' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 154.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoAccounts,The length of the statement  "            var ex2 = Assert.ThrowsAsync<CredentialUnavailableException>(async () => await credential2.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 151.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoAccounts,The length of the statement  "            var credential3 = InstrumentClient(new SharedTokenCacheCredential(Guid.NewGuid().ToString()' null' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 154.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoAccounts,The length of the statement  "            var ex3 = Assert.ThrowsAsync<CredentialUnavailableException>(async () => await credential3.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 151.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoAccounts,The length of the statement  "            var credential4= InstrumentClient(new SharedTokenCacheCredential(Guid.NewGuid().ToString()' "mockuser@mockdomain.com"' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 174.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoAccounts,The length of the statement  "            var ex4 = Assert.ThrowsAsync<CredentialUnavailableException>(async () => await credential4.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 151.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleAccountsNoTenantIdOrUsername,The length of the statement  "                Accounts = new IAccount[] { new MockAccount("fakeuser@fakedomain.com"' fakeuserTenantId)' new MockAccount("madeupuser@madeupdomain.com"' madeupuserTenantId) }' " is 159.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleAccountsNoTenantIdOrUsername,The length of the statement  "                SilentAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: expToken' expiresOn: expExpiresOn); } " is 121.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleAccountsNoTenantIdOrUsername,The length of the statement  "            var credential = InstrumentClient(new SharedTokenCacheCredential(null' null' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 132.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleAccountsNoTenantIdOrUsername,The length of the statement  "            var ex = Assert.ThrowsAsync<CredentialUnavailableException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 149.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoMatchingAccountsUsernameOnly,The length of the statement  "                Accounts = new IAccount[] { new MockAccount("fakeuser@fakedomain.com"' fakeuserTenantId)' new MockAccount("madeupuser@madeupdomain.com"' madeupuserTenantId) }' " is 159.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoMatchingAccountsUsernameOnly,The length of the statement  "                SilentAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: expToken' expiresOn: expExpiresOn); } " is 121.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoMatchingAccountsUsernameOnly,The length of the statement  "            var credential = InstrumentClient(new SharedTokenCacheCredential(null' "mockuser@mockdomain.com"' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 153.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoMatchingAccountsUsernameOnly,The length of the statement  "            var ex = Assert.ThrowsAsync<CredentialUnavailableException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 149.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoMatchingAccountsUsernameOnly,The length of the statement  "            Assert.True(ex.Message.StartsWith("No account matching the specified username: mockuser@mockdomain.com was found in the cache.")); " is 130.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoMatchingAccountsTenantIdOnly,The length of the statement  "                Accounts = new IAccount[] { new MockAccount("fakeuser@fakedomain.com"' fakeuserTenantId)' new MockAccount("madeupuser@madeupdomain.com"' madeupuserTenantId) }' " is 159.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoMatchingAccountsTenantIdOnly,The length of the statement  "                SilentAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: expToken' expiresOn: expExpiresOn); } " is 121.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoMatchingAccountsTenantIdOnly,The length of the statement  "            var credential = InstrumentClient(new SharedTokenCacheCredential(tenantId' null' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 136.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoMatchingAccountsTenantIdOnly,The length of the statement  "            var ex = Assert.ThrowsAsync<CredentialUnavailableException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 149.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoMatchingAccountsTenantIdAndUsername,The length of the statement  "                Accounts = new IAccount[] { new MockAccount("fakeuser@fakedomain.com"' fakeuserTenantId)' new MockAccount("madeupuser@madeupdomain.com"' madeupuserTenantId) }' " is 159.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoMatchingAccountsTenantIdAndUsername,The length of the statement  "                SilentAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: expToken' expiresOn: expExpiresOn); } " is 121.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoMatchingAccountsTenantIdAndUsername,The length of the statement  "            var credential = InstrumentClient(new SharedTokenCacheCredential(tenantId' "mockuser@mockdomain.com"' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 157.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoMatchingAccountsTenantIdAndUsername,The length of the statement  "            var ex = Assert.ThrowsAsync<CredentialUnavailableException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 149.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoMatchingAccountsTenantIdAndUsername,The length of the statement  "            Assert.True(ex.Message.StartsWith($"No account matching the specified username: mockuser@mockdomain.com tenantId: {tenantId} was found in the cache.")); " is 152.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleMatchingAccountsUsernameOnly,The length of the statement  "                Accounts = new IAccount[] { new MockAccount("fakeuser@fakedomain.com"' fakeuserTenantId)' new MockAccount("mockuser@mockdomain.com"' mockuserTenantId)' new MockAccount("mockuser@mockdomain.com"' mockuserGuestTenantId) }' " is 220.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleMatchingAccountsUsernameOnly,The length of the statement  "                SilentAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: expToken' expiresOn: expExpiresOn); } " is 121.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleMatchingAccountsUsernameOnly,The length of the statement  "            var credential = InstrumentClient(new SharedTokenCacheCredential(null' "mockuser@mockdomain.com"' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 153.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleMatchingAccountsUsernameOnly,The length of the statement  "            var ex = Assert.ThrowsAsync<CredentialUnavailableException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 149.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleMatchingAccountsUsernameOnly,The length of the statement  "            Assert.True(ex.Message.StartsWith("Multiple accounts matching the specified username: mockuser@mockdomain.com were found in the cache")); " is 137.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleMatchingAccountsTenantIdOnly,The length of the statement  "                Accounts = new IAccount[] { new MockAccount("fakeuser@fakedomain.com"' fakeuserTenantId)' new MockAccount("mockuser@mockdomain.com"' mockuserTenantId)' new MockAccount("mockuser@mockdomain.com"' mockuserGuestTenantId) }' " is 220.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleMatchingAccountsTenantIdOnly,The length of the statement  "                SilentAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: expToken' expiresOn: expExpiresOn); } " is 121.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleMatchingAccountsTenantIdOnly,The length of the statement  "            var credential = InstrumentClient(new SharedTokenCacheCredential(mockuserGuestTenantId' null' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 149.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleMatchingAccountsTenantIdOnly,The length of the statement  "            var ex = Assert.ThrowsAsync<CredentialUnavailableException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 149.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleMatchingAccountsTenantIdOnly,The length of the statement  "            Assert.True(ex.Message.StartsWith($"Multiple accounts matching the specified tenantId: {mockuserGuestTenantId} were found in the cache")); " is 138.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleMatchingAccountsUsernameAndTenantId,The length of the statement  "                Accounts = new IAccount[] { new MockAccount("fakeuser@fakedomain.com"' fakeuserTenantId)' new MockAccount("mockuser@mockdomain.com"' mockuserTenantId)' new MockAccount("mockuser@mockdomain.com"' mockuserTenantId) }' " is 215.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleMatchingAccountsUsernameAndTenantId,The length of the statement  "                SilentAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: expToken' expiresOn: expExpiresOn); } " is 121.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleMatchingAccountsUsernameAndTenantId,The length of the statement  "            var credential = InstrumentClient(new SharedTokenCacheCredential(mockuserTenantId' "mockuser@mockdomain.com"' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 165.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleMatchingAccountsUsernameAndTenantId,The length of the statement  "            var ex = Assert.ThrowsAsync<CredentialUnavailableException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 149.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleMatchingAccountsUsernameAndTenantId,The length of the statement  "            Assert.True(ex.Message.StartsWith($"Multiple accounts matching the specified username: mockuser@mockdomain.com tenantId: {mockuserTenantId} were found in the cache")); " is 167.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleMatchingAccountsUsernameAndTenantId,The length of the statement  "            Assert.True(ex.Message.IndexOf($"username: mockuser@mockdomain.com tenantId: {mockuserTenantId}") != ex.Message.LastIndexOf($"username: mockuser@mockdomain.com tenantId: {mockuserTenantId}")); " is 192.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,UiRequiredException,The length of the statement  "            var credential = InstrumentClient(new SharedTokenCacheCredential(null' "mockuser@mockdomain.com"' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 153.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,UiRequiredException,The length of the statement  "            var ex = Assert.ThrowsAsync<CredentialUnavailableException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 149.
Long Statement,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,UiRequiredException,The length of the statement  "            var expErrorMessage = "Token acquisition failed for user mockuser@mockdomain.com. To fix' re-authenticate through developer tooling supporting Azure single sign on."; " is 166.
Long Statement,Azure.Identity.Tests,TestAccessorExtensions,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\TestAccessorExtensions.cs,_client,The length of the statement  "            return typeof(ClientSecretCredential).GetField("_client"' BindingFlags.Instance | BindingFlags.NonPublic).GetValue(credential) as ClientSecretCredential; " is 153.
Long Statement,Azure.Identity.Tests,TestAccessorExtensions,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\TestAccessorExtensions.cs,_client,The length of the statement  "            typeof(ClientSecretCredential).GetField("_client"' BindingFlags.Instance | BindingFlags.NonPublic).SetValue(credential' client); " is 128.
Long Statement,Azure.Identity.Tests,TestAccessorExtensions,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\TestAccessorExtensions.cs,_client,The length of the statement  "            typeof(InteractiveBrowserCredential).GetField("_client"' BindingFlags.Instance | BindingFlags.NonPublic).SetValue(credential' client); " is 134.
Long Statement,Azure.Identity.Tests,TestAccessorExtensions,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\TestAccessorExtensions.cs,_sources,The length of the statement  "            return typeof(DefaultAzureCredential).GetField("_sources"' BindingFlags.Instance | BindingFlags.NonPublic).GetValue(credential) as IExtendedTokenCredential[]; " is 158.
Long Statement,Azure.Identity.Tests,UsernamePasswordCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\UsernamePasswordCredentialTests.cs,AuthenticateUsernamePasswordLiveAsync,The length of the statement  "            AccessToken token = await cred.GetTokenAsync(new TokenRequestContext(new string[] { "https://vault.azure.net/.default" })); " is 123.
Long Statement,Azure.Identity.Tests,UsernamePasswordCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\UsernamePasswordCredentialTests.cs,VerifyMsalClientExceptionAsync,The length of the statement  "            var mockMsalClient = new MockMsalPublicClient() { UserPassAuthFactory = (_) => { throw new MockClientException(expInnerExMessage); } }; " is 135.
Long Statement,Azure.Identity.Tests,UsernamePasswordCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\UsernamePasswordCredentialTests.cs,VerifyMsalClientExceptionAsync,The length of the statement  "            var credential = InstrumentClient(new UsernamePasswordCredential(username' password' CredentialPipeline.GetInstance(null)' mockMsalClient)); " is 140.
Long Statement,Azure.Identity.Tests,UsernamePasswordCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\UsernamePasswordCredentialTests.cs,VerifyMsalClientExceptionAsync,The length of the statement  "            var ex = Assert.ThrowsAsync<AuthenticationFailedException>(async () => await credential.GetTokenAsync(new TokenRequestContext(MockScopes.Default))); " is 148.
Long Statement,Azure.Identity.Tests.Mock,AuthenticationResultFactory,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\Mock\AuthenticationResultFactory.cs,Create,The length of the statement  "            return new AuthenticationResult(accessToken' isExtendedLifeTimeToken.Value' uniqueId' expiresOn.Value' extendedExpiresOn.Value' tenantId' account' idToken' scopes' correlationId.Value); " is 185.
Long Statement,Azure.Identity.Tests.Mock,MockExtendedTokenCredential,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\Mock\MockExtendedTokenCredential.cs,GetTokenAsync,The length of the statement  "            return new ValueTask<ExtendedAccessToken>(((IExtendedTokenCredential)this).GetToken(requestContext' cancellationToken)); " is 120.
Long Statement,Azure.Core.Testing,AsyncValidatingStream,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\AsyncValidatingStream.cs,Validate,The length of the statement  "                throw new InvalidOperationException("All stream calls were expected to be " + (_isAsync ? "async" : "sync") + " but were " + (isAsync ? "async" : "sync")); " is 155.
Long Statement,Azure.Core.Testing,ClientTestBase,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\ClientTestBase.cs,InstrumentClient,The length of the statement  "                        ClientValidation<TClient>.ValidationException = new InvalidOperationException($"Client type contains public non-virtual async method {methodInfo.Name}"); " is 153.
Long Statement,Azure.Core.Testing,DiagnosticScopeValidatingInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\DiagnosticScopeValidatingInterceptor.cs,Intercept,The length of the statement  "                bool strict = !invocation.Method.GetCustomAttributes(true).Any(a => a.GetType().FullName == "Azure.Core.ForwardsClientCallsAttribute"); " is 135.
Long Statement,Azure.Core.Testing,DiagnosticScopeValidatingInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\DiagnosticScopeValidatingInterceptor.cs,Intercept,The length of the statement  "                        MethodInfo getResultMethod = getAwaiterMethod.ReturnType.GetMethod("GetResult"' BindingFlags.Instance | BindingFlags.Public); " is 125.
Long Statement,Azure.Core.Testing,DiagnosticScopeValidatingInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\DiagnosticScopeValidatingInterceptor.cs,Intercept,The length of the statement  "                            (string Key' object Value' DiagnosticListener Listener) e = diagnosticListener.Events.FirstOrDefault(e => e.Key == expectedEvent); " is 130.
Long Statement,Azure.Core.Testing,DiagnosticScopeValidatingInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\DiagnosticScopeValidatingInterceptor.cs,Intercept,The length of the statement  "                                throw new InvalidOperationException($"Expected diagnostic event not fired {expectedEvent} {Environment.NewLine}    fired events {string.Join("' "' diagnosticListener.Events)} {Environment.NewLine}    You may have forgotten to set your operationId to {expectedEvent} in {methodName} or applied the Azure.Core.ForwardsClientCallsAttribute to {methodName}."); " is 356.
Long Statement,Azure.Core.Testing,DiagnosticScopeValidatingInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\DiagnosticScopeValidatingInterceptor.cs,Intercept,The length of the statement  "                                throw new InvalidOperationException($"{e.Key} event was written into wrong DiagnosticSource {e.Listener.Name}' expected: {ns}"); " is 128.
Long Statement,Azure.Core.Testing,EnumValuesAttribute,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\EnumValuesAttribute.cs,GetMembersImpl,The length of the statement  "                    if (property.PropertyType == type && property.CanRead && !property.CanWrite && Includes(property.Name) && !Excludes(property.Name)) " is 131.
Long Statement,Azure.Core.Testing,RecordMatcher,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\RecordMatcher.cs,IsEquivalentResponse,The length of the statement  "            IEnumerable<KeyValuePair<string' string[]>> entryHeaders = entry.ResponseHeaders.Where(h => !VolatileResponseHeaders.Contains(h.Key)); " is 134.
Long Statement,Azure.Core.Testing,RecordMatcher,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\RecordMatcher.cs,IsEquivalentResponse,The length of the statement  "            IEnumerable<KeyValuePair<string' string[]>> otherEntryHeaders = otherEntry.ResponseHeaders.Where(h => !VolatileResponseHeaders.Contains(h.Key)); " is 144.
Long Statement,Azure.Core.Testing,RecordMatcher,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\RecordMatcher.cs,CompareHeaderDictionaries,The length of the statement  "                        descriptionBuilder?.AppendLine($"    <{header.Key}> values differ' request <{JoinHeaderValues(header.Value)}>' record <{JoinHeaderValues(values)}>"); " is 149.
Long Statement,Azure.Core.Testing,RecordTransport,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\RecordTransport.cs,CreateEntry,The length of the statement  "            if (!request.Headers.TryGetValue("Content-Length"' out _) && request.Content != null && request.Content.TryComputeLength(out long computedLength)) " is 146.
Long Statement,Azure.Core.Testing,UseSyncMethodsInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\UseSyncMethodsInterceptor.cs,Intercept,The length of the statement  "                throw new InvalidOperationException($"Unable to find a method with name {nonAsyncMethodName} and {string.Join<Type>("'"' parameterTypes)} parameters. " " is 151.
Long Statement,Azure.Core.Tests,ClientDiagnosticListener,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\ClientDiagnosticListener.cs,AssertScopeStarted,The length of the statement  "                                throw new InvalidOperationException($"Attribute {expectedAttribute} not found' existing attributes: {string.Join("'"' producedDiagnosticScope.Activity.Tags)}"); " is 160.
Complex Conditional,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateCtorWithExcludeOptions,The conditional expression  "excludeEnvironmentCredential && excludeManagedIdentityCredential && excludeSharedTokenCacheCredential && excludeInteractiveBrowserCredential"  is complex.
Complex Conditional,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateAllUnavailable,The conditional expression  "excludeEnvironmentCredential && excludeManagedIdentityCredential && excludeSharedTokenCacheCredential && excludeInteractiveBrowserCredential"  is complex.
Complex Conditional,Azure.Core.Testing,EnumValuesAttribute,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\EnumValuesAttribute.cs,GetMembersImpl,The conditional expression  "property.PropertyType == type && property.CanRead && !property.CanWrite && Includes(property.Name) && !Excludes(property.Name)"  is complex.
Complex Conditional,Azure.Core.Testing,EnumValuesAttribute,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\EnumValuesAttribute.cs,GetMembersImpl,The conditional expression  "field.FieldType == type && (field.IsInitOnly || field.IsLiteral) && Includes(field.Name) && !Excludes(field.Name)"  is complex.
Complex Conditional,Azure.Core.Pipeline,TestFrameworkContentTypeUtilities,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\src\Shared\ContentTypeUtilities.cs,TryGetTextEncoding,The conditional expression  "contentType.StartsWith(textContentTypePrefix' StringComparison.OrdinalIgnoreCase) ||                  contentType.EndsWith(jsonSuffix' StringComparison.OrdinalIgnoreCase) ||                  contentType.EndsWith(xmlSuffix' StringComparison.OrdinalIgnoreCase) ||                  contentType.EndsWith(urlEncodedSuffix' StringComparison.OrdinalIgnoreCase)"  is complex.
Empty Catch Block,Azure.Core.Testing,RecordEntry,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\RecordEntry.cs,SerializeBody,The method has an empty catch block.
Empty Catch Block,Azure.Core.Testing,TestRecording,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\TestRecording.cs,TestRecording,The method has an empty catch block.
Magic Number,Azure.Identity.Tests,AuthorizationCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AuthorizationCodeCredentialTests.cs,CreateAuthorizationResponse,The following statement contains a magic number: MockResponse response = new MockResponse(200).WithContent(@$"{{      ""token_type"": ""Bearer""'      ""scope"": ""https://vault.azure.net/user_impersonation https://vault.azure.net/.default""'      ""expires_in"": 3600'      ""ext_expires_in"": 3600'      ""access_token"": ""{accessToken}""'      ""refresh_token"": ""eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9-eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ-SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c""'      ""foci"": ""1""'      ""id_token"": ""eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6InU0T2ZORlBId0VCb3NIanRyYXVPYlY4NExuWSJ9.eyJhdWQiOiJFMDFCNUY2NC03OEY1LTRGODgtQjI4Mi03QUUzOUI4QUM0QkQiLCJpc3MiOiJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20vRDEwOUI0NkUtM0E5Ri00NDQwLTg2MjItMjVEQjQxOTg1MDUxL3YyLjAiLCJpYXQiOjE1NjM5OTA0MDEsIm5iZiI6MTU2Mzk5MDQwMSwiZXhwIjoxNTYzOTk0MzAxLCJhaW8iOiJRMVV3TlV4YVNFeG9aak5uUWpSd00zcFRNamRrV2pSTFNVcEdMMVV3TWt0a2FrZDFTRkJVVlZwMmVFODRNMFZ0VXk4Mlp6TjJLM1JrVVVzeVQyVXhNamxJWTNKQ1p6MGlMQ0p1WVcxbElqb2lVMk52ZEhRZ1UyTiIsIm5hbWUiOiJTb21lIFVzZXIiLCJvaWQiOiIyQ0M5QzNBOC0yNTA5LTQyMEYtQjAwQi02RTczQkM1MURDQjUiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJzb21ldXNlckBtaWNyb3NvZnQuY29tIiwic3ViIjoiQ0p6ZFdJaU9pSkdXakY0UVVOS1JFRnBRWFp6IiwidGlkIjoiMjRGRTMxMUYtN0E3MS00RjgzLTkxNkEtOTQ3OEQ0NUMwNDI3IiwidXRpIjoidFFqSTRNaTAzUVVVek9VSTRRVU0wUWtRaUxDSnBjM01pT2lKb2RIUiIsInZlciI6IjIuMCJ9.eVyG1AL8jwnTo3m9mGsV4EDHa_8PN6rRPEN9E3cQzxNoPU9HZTFt1SgOnLB7n1a4J_E3iVoZ3VB5I-NdDBESRdlg1k4XlrWqtisxl3I7pvWVFZKEhwHYYQ_nZITNeCb48LfZNz-Mr4EZeX6oyUymha5tOomikBLLxP78LOTlbGQiFn9AjtV0LtMeoiDf-K9t-kgU-XwsVjCyFKFBQhcyv7zaBEpeA-Kzh3-HG7wZ-geteM5y-JF97nD_rJ8ow1FmvtDYy6MVcwuNTv2YYT8dn8s-SGB4vpNNignlL0QgYh2P2cIrPdhZVc2iQqYTn_FK_UFPqyb_MZSjl1QkXVhgJA""'      ""client_info"": ""eyJ1aWQiOiIyQ0M5QzNBOC0yNTA5LTQyMEYtQjAwQi02RTczQkM1MURDQjUiLCJ1dGlkIjoiNzJmOTg4YmYtODZmMS00MWFmLTkxYWItMmQ3Y2QwMTFkYjQ3In0""  }}");
Magic Number,Azure.Identity.Tests,AuthorizationCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AuthorizationCodeCredentialTests.cs,CreateOpenIdConfigurationResponse,The following statement contains a magic number: return new MockResponse(200).WithContent(@$"{{      ""authorization_endpoint"": ""https://login.microsoftonline.com/{tenantId}/oauth2/v2.0/authorize""'      ""token_endpoint"": ""https://login.microsoftonline.com/{tenantId}/oauth2/v2.0/token""'      ""token_endpoint_auth_methods_supported"": [          ""client_secret_post""'          ""private_key_jwt""'          ""client_secret_basic""      ]'      ""jwks_uri"": ""https://login.microsoftonline.com/{tenantId}/discovery/v2.0/keys""'      ""response_modes_supported"": [          ""query""'          ""fragment""'          ""form_post""      ]'      ""subject_types_supported"": [          ""pairwise""      ]'      ""id_token_signing_alg_values_supported"": [          ""RS256""      ]'      ""http_logout_supported"": true'      ""frontchannel_logout_supported"": true'      ""end_session_endpoint"": ""https://login.microsoftonline.com/{tenantId}/oauth2/v2.0/logout""'      ""response_types_supported"": [          ""code""'          ""id_token""'          ""code id_token""'          ""id_token token""      ]'      ""scopes_supported"": [          ""openid""'          ""profile""'          ""email""'          ""offline_access""      ]'      ""issuer"": ""https://login.microsoftonline.com/{tenantId}/v2.0""'      ""claims_supported"": [          ""sub""'          ""iss""'          ""cloud_instance_name""'          ""cloud_instance_host_name""'          ""cloud_graph_host_name""'          ""msgraph_host""'          ""aud""'          ""exp""'          ""iat""'          ""auth_time""'          ""acr""'          ""nonce""'          ""preferred_username""'          ""name""'          ""tid""'          ""ver""'          ""at_hash""'          ""c_hash""'          ""email""      ]'      ""request_uri_parameter_supported"": false'      ""userinfo_endpoint"": ""https://graph.microsoft.com/oidc/userinfo""'      ""tenant_region_scope"": null'      ""cloud_instance_name"": ""microsoftonline.com""'      ""cloud_graph_host_name"": ""graph.windows.net""'      ""msgraph_host"": ""graph.microsoft.com""'      ""rbac_url"": ""https://pas.windows.net""  }}");
Magic Number,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateClientSecretCredentialSucceededEvents,The following statement contains a magic number: var mockAadClient = new MockAadIdentityClient(() => new AccessToken(Guid.NewGuid().ToString()' DateTimeOffset.UtcNow.AddMinutes(10)));
Magic Number,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateClientCertificateCredentialSucceededEvents,The following statement contains a magic number: var mockAadClient = new MockAadIdentityClient(() => new AccessToken(Guid.NewGuid().ToString()' DateTimeOffset.UtcNow.AddMinutes(10)));
Magic Number,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateDeviceCodeCredentialSucceededEvents,The following statement contains a magic number: var mockMsalClient = new MockMsalPublicClient() { DeviceCodeAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: Guid.NewGuid().ToString()' expiresOn: DateTimeOffset.UtcNow.AddMinutes(10)); } };
Magic Number,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateInteractiveBrowserCredentialSucceededEvents,The following statement contains a magic number: var mockMsalClient = new MockMsalPublicClient() { InteractiveAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: Guid.NewGuid().ToString()' expiresOn: DateTimeOffset.UtcNow.AddMinutes(10)); } };
Magic Number,Azure.Identity.Tests,AzureIdentityEventSourceTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\AzureIdentityEventSourceTests.cs,ValidateSharedTokenCacheCredentialSucceededEvents,The following statement contains a magic number: var mockMsalClient = new MockMsalPublicClient              {                  Accounts = new IAccount[] { new MockAccount("mockuser@mockdomain.com") }'                  SilentAuthFactory = (_) => { return AuthenticationResultFactory.Create(accessToken: Guid.NewGuid().ToString()' expiresOn: DateTimeOffset.UtcNow.AddMinutes(10)); }              };
Magic Number,Azure.Identity.Tests,ClientCertificateCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientCertificateCredentialTests.cs,VerifyClientCertificateRequestAsync,The following statement contains a magic number: var response = new MockResponse(200);
Magic Number,Azure.Identity.Tests,ClientCertificateCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientCertificateCredentialTests.cs,VerifyClientCertificateRequestFailedAsync,The following statement contains a magic number: var response = new MockResponse(400);
Magic Number,Azure.Identity.Tests,ClientCertificateCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientCertificateCredentialTests.cs,VerifyClientAssertion,The following statement contains a magic number: Assert.IsTrue(splitAssertion.Length == 3);
Magic Number,Azure.Identity.Tests,ClientCertificateCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientCertificateCredentialTests.cs,VerifyClientAssertion,The following statement contains a magic number: var encodedSignature = splitAssertion[2];
Magic Number,Azure.Identity.Tests,ClientCertificateCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientCertificateCredentialTests.cs,TryParseFormEncodedBody,The following statement contains a magic number: splitParam.Length != 2
Magic Number,Azure.Identity.Tests,ClientSecretCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientSecretCredentialTests.cs,VerifyClientSecretCredentialRequestAsync,The following statement contains a magic number: var response = new MockResponse(200);
Magic Number,Azure.Identity.Tests,ClientSecretCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientSecretCredentialTests.cs,VerifyClientSecretRequestFailedAsync,The following statement contains a magic number: var response = new MockResponse(400);
Magic Number,Azure.Identity.Tests,ClientSecretCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ClientSecretCredentialTests.cs,TryParseFormEncodedBody,The following statement contains a magic number: splitParam.Length != 2
Magic Number,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateCtorNoOptions,The following statement contains a magic number: Assert.AreEqual(sources.Length' 4);
Magic Number,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateCtorNoOptions,The following statement contains a magic number: Assert.IsInstanceOf(typeof(SharedTokenCacheCredential)' sources[2]);
Magic Number,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateCtorNoOptions,The following statement contains a magic number: Assert.IsNull(sources[3]);
Magic Number,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateCtorIncludedInteractiveParam,The following statement contains a magic number: Assert.AreEqual(sources.Length' 4);
Magic Number,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateCtorIncludedInteractiveParam,The following statement contains a magic number: Assert.IsInstanceOf(typeof(SharedTokenCacheCredential)' sources[2]);
Magic Number,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateCtorIncludedInteractiveParam,The following statement contains a magic number: Assert.IsInstanceOf(typeof(InteractiveBrowserCredential)' sources[3]);
Magic Number,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateUnhandledException,The following statement contains a magic number: credFactory.OnCreateSharedTokenCacheCredential = (tenantId' username' c) =>              {                  ((MockExtendedTokenCredential)c).TokenFactory = (context' cancel) =>                  {                      if (exPossition > 2)                      {                          return new ExtendedAccessToken(new CredentialUnavailableException("SharedTokenCacheCredential Unavailable"));                      }                      else                      {                          return new ExtendedAccessToken(new MockClientException("SharedTokenCacheCredential unhandled exception"));                      }                  };              };
Magic Number,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateUnhandledException,The following statement contains a magic number: exPossition > 2
Magic Number,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateUnhandledException,The following statement contains a magic number: switch (exPossition)              {                  case 0:                      Assert.True(ex.Message.Contains("EnvironmentCredential unhandled exception"));                      break;                  case 1:                      Assert.True(ex.Message.Contains("ManagedIdentityCredential unhandled exception"));                      break;                  case 2:                      Assert.True(ex.Message.Contains("SharedTokenCacheCredential unhandled exception"));                      break;                  case 3:                      Assert.True(ex.Message.Contains("InteractiveBrowserCredential unhandled exception"));                      break;                  default:                      Assert.Fail();                      break;              }
Magic Number,Azure.Identity.Tests,DefaultAzureCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DefaultAzureCredentialTests.cs,ValidateUnhandledException,The following statement contains a magic number: switch (exPossition)              {                  case 0:                      Assert.True(ex.Message.Contains("EnvironmentCredential unhandled exception"));                      break;                  case 1:                      Assert.True(ex.Message.Contains("ManagedIdentityCredential unhandled exception"));                      break;                  case 2:                      Assert.True(ex.Message.Contains("SharedTokenCacheCredential unhandled exception"));                      break;                  case 3:                      Assert.True(ex.Message.Contains("InteractiveBrowserCredential unhandled exception"));                      break;                  default:                      Assert.Fail();                      break;              }
Magic Number,Azure.Identity.Tests,DeviceCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DeviceCodeCredentialTests.cs,VerifyDeviceCodeCallbackCancellationToken,The following statement contains a magic number: await Task.Delay(2000' cancellationToken);
Magic Number,Azure.Identity.Tests,DeviceCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DeviceCodeCredentialTests.cs,AuthenticateWithDeviceCodeMockVerifyCallbackCancellationAsync,The following statement contains a magic number: var cancelSource = new CancellationTokenSource(1000);
Magic Number,Azure.Identity.Tests,DeviceCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DeviceCodeCredentialTests.cs,CreateDeviceCodeResponse,The following statement contains a magic number: MockResponse response = new MockResponse(200).WithContent($@"{{      ""user_code"": ""{code}""'      ""device_code"": ""{code}_{code}""'      ""verification_uri"": ""https://microsoft.com/devicelogin""'      ""expires_in"": 900'      ""interval"": 1'      ""message"": ""{code}""  }}");
Magic Number,Azure.Identity.Tests,DeviceCodeCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\DeviceCodeCredentialTests.cs,CreateAuthorizationResponse,The following statement contains a magic number: MockResponse response = new MockResponse(200).WithContent(@$"{{      ""token_type"": ""Bearer""'      ""scope"": ""https://vault.azure.net/user_impersonation https://vault.azure.net/.default""'      ""expires_in"": 3600'      ""ext_expires_in"": 3600'      ""access_token"": ""{accessToken}""'      ""refresh_token"": ""eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9-eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ-SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c""'      ""foci"": ""1""'      ""id_token"": ""eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6InU0T2ZORlBId0VCb3NIanRyYXVPYlY4NExuWSJ9.eyJhdWQiOiJFMDFCNUY2NC03OEY1LTRGODgtQjI4Mi03QUUzOUI4QUM0QkQiLCJpc3MiOiJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20vRDEwOUI0NkUtM0E5Ri00NDQwLTg2MjItMjVEQjQxOTg1MDUxL3YyLjAiLCJpYXQiOjE1NjM5OTA0MDEsIm5iZiI6MTU2Mzk5MDQwMSwiZXhwIjoxNTYzOTk0MzAxLCJhaW8iOiJRMVV3TlV4YVNFeG9aak5uUWpSd00zcFRNamRrV2pSTFNVcEdMMVV3TWt0a2FrZDFTRkJVVlZwMmVFODRNMFZ0VXk4Mlp6TjJLM1JrVVVzeVQyVXhNamxJWTNKQ1p6MGlMQ0p1WVcxbElqb2lVMk52ZEhRZ1UyTiIsIm5hbWUiOiJTb21lIFVzZXIiLCJvaWQiOiIyQ0M5QzNBOC0yNTA5LTQyMEYtQjAwQi02RTczQkM1MURDQjUiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJzb21ldXNlckBtaWNyb3NvZnQuY29tIiwic3ViIjoiQ0p6ZFdJaU9pSkdXakY0UVVOS1JFRnBRWFp6IiwidGlkIjoiMjRGRTMxMUYtN0E3MS00RjgzLTkxNkEtOTQ3OEQ0NUMwNDI3IiwidXRpIjoidFFqSTRNaTAzUVVVek9VSTRRVU0wUWtRaUxDSnBjM01pT2lKb2RIUiIsInZlciI6IjIuMCJ9.eVyG1AL8jwnTo3m9mGsV4EDHa_8PN6rRPEN9E3cQzxNoPU9HZTFt1SgOnLB7n1a4J_E3iVoZ3VB5I-NdDBESRdlg1k4XlrWqtisxl3I7pvWVFZKEhwHYYQ_nZITNeCb48LfZNz-Mr4EZeX6oyUymha5tOomikBLLxP78LOTlbGQiFn9AjtV0LtMeoiDf-K9t-kgU-XwsVjCyFKFBQhcyv7zaBEpeA-Kzh3-HG7wZ-geteM5y-JF97nD_rJ8ow1FmvtDYy6MVcwuNTv2YYT8dn8s-SGB4vpNNignlL0QgYh2P2cIrPdhZVc2iQqYTn_FK_UFPqyb_MZSjl1QkXVhgJA""'      ""client_info"": ""eyJ1aWQiOiIyQ0M5QzNBOC0yNTA5LTQyMEYtQjAwQi02RTczQkM1MURDQjUiLCJ1dGlkIjoiNzJmOTg4YmYtODZmMS00MWFmLTkxYWItMmQ3Y2QwMTFkYjQ3In0""  }}");
Magic Number,Azure.Identity.Tests,InteractiveBrowserCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\InteractiveBrowserCredentialTests.cs,InteractiveBrowserAcquireTokenSilentException,The following statement contains a magic number: DateTimeOffset expExpiresOn = DateTimeOffset.UtcNow.AddMinutes(5);
Magic Number,Azure.Identity.Tests,InteractiveBrowserCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\InteractiveBrowserCredentialTests.cs,InteractiveBrowserRefreshException,The following statement contains a magic number: DateTimeOffset expExpiresOn = DateTimeOffset.UtcNow.AddMinutes(5);
Magic Number,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyImdsRequestMockAsync,The following statement contains a magic number: var response = new MockResponse(200);
Magic Number,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyImdsRequestWithClientIdMockAsync,The following statement contains a magic number: var response = new MockResponse(200);
Magic Number,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyAppServiceMsiRequestMockAsync,The following statement contains a magic number: var response = new MockResponse(200);
Magic Number,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyAppServiceMsiRequestWithClientIdMockAsync,The following statement contains a magic number: var response = new MockResponse(200);
Magic Number,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyCloudShellMsiRequestMockAsync,The following statement contains a magic number: var response = new MockResponse(200);
Magic Number,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyCloudShellMsiRequestMockAsync,The following statement contains a magic number: response.SetContent($"{{ \"access_token\": \"{expectedToken}\"' \"expires_on\": {(DateTimeOffset.UtcNow + TimeSpan.FromSeconds(3600)).ToUnixTimeSeconds()} }}");
Magic Number,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyCloudShellMsiRequestWithClientIdMockAsync,The following statement contains a magic number: var response = new MockResponse(200);
Magic Number,Azure.Identity.Tests,ManagedIdentityCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\ManagedIdentityCredentialTests.cs,VerifyCloudShellMsiRequestWithClientIdMockAsync,The following statement contains a magic number: response.SetContent($"{{ \"access_token\": \"{expectedToken}\"' \"expires_on\": {(DateTimeOffset.UtcNow + TimeSpan.FromSeconds(3600)).ToUnixTimeSeconds()} }}");
Magic Number,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,OneAccountNoTentantNoUsername,The following statement contains a magic number: DateTimeOffset expExpiresOn = DateTimeOffset.UtcNow.AddMinutes(5);
Magic Number,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,OneMatchingAccountUsernameOnly,The following statement contains a magic number: DateTimeOffset expExpiresOn = DateTimeOffset.UtcNow.AddMinutes(5);
Magic Number,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,OneMatchingAccountTenantIdOnly,The following statement contains a magic number: DateTimeOffset expExpiresOn = DateTimeOffset.UtcNow.AddMinutes(5);
Magic Number,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,OneMatchingAccountTenantIdAndUsername,The following statement contains a magic number: DateTimeOffset expExpiresOn = DateTimeOffset.UtcNow.AddMinutes(5);
Magic Number,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoAccounts,The following statement contains a magic number: DateTimeOffset expExpiresOn = DateTimeOffset.UtcNow.AddMinutes(5);
Magic Number,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleAccountsNoTenantIdOrUsername,The following statement contains a magic number: DateTimeOffset expExpiresOn = DateTimeOffset.UtcNow.AddMinutes(5);
Magic Number,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoMatchingAccountsUsernameOnly,The following statement contains a magic number: DateTimeOffset expExpiresOn = DateTimeOffset.UtcNow.AddMinutes(5);
Magic Number,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoMatchingAccountsTenantIdOnly,The following statement contains a magic number: DateTimeOffset expExpiresOn = DateTimeOffset.UtcNow.AddMinutes(5);
Magic Number,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,NoMatchingAccountsTenantIdAndUsername,The following statement contains a magic number: DateTimeOffset expExpiresOn = DateTimeOffset.UtcNow.AddMinutes(5);
Magic Number,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleMatchingAccountsUsernameOnly,The following statement contains a magic number: DateTimeOffset expExpiresOn = DateTimeOffset.UtcNow.AddMinutes(5);
Magic Number,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleMatchingAccountsTenantIdOnly,The following statement contains a magic number: DateTimeOffset expExpiresOn = DateTimeOffset.UtcNow.AddMinutes(5);
Magic Number,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,MultipleMatchingAccountsUsernameAndTenantId,The following statement contains a magic number: DateTimeOffset expExpiresOn = DateTimeOffset.UtcNow.AddMinutes(5);
Magic Number,Azure.Identity.Tests,SharedTokenCacheCredentialTests,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\SharedTokenCacheCredentialTests.cs,UiRequiredException,The following statement contains a magic number: DateTimeOffset expExpiresOn = DateTimeOffset.UtcNow.AddMinutes(5);
Magic Number,Azure.Identity.Tests.Mock,AuthenticationResultFactory,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\Mock\AuthenticationResultFactory.cs,Create,The following statement contains a magic number: expiresOn ??= DateTime.UtcNow.AddMinutes(5);
Magic Number,Azure.Identity.Tests.Mock,AuthenticationResultFactory,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\identity\Azure.Identity\tests\Mock\AuthenticationResultFactory.cs,Create,The following statement contains a magic number: extendedExpiresOn ??= DateTime.UtcNow.AddMinutes(10);
Magic Number,Azure.Core.Testing,DiagnosticScopeValidatingInterceptor,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\DiagnosticScopeValidatingInterceptor.cs,Intercept,The following statement contains a magic number: var expectedEventPrefix = declaringType.FullName + "." + methodName.Substring(0' methodName.Length - 5);
Magic Number,Azure.Core.Testing,RandomExtensions,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\RandomExtensions.cs,NewGuid,The following statement contains a magic number: var bytes = new byte[16];
Magic Number,Azure.Core.Testing,TestRetryHelper,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\TestRetryHelper.cs,RetryAsync,The following statement contains a magic number: delay = TimeSpan.FromSeconds(5);
Missing Default,Azure.Core.Testing,TestRecording,D:\research\architectureSmells\repos\Azure_azure-sdk-for-net\sdk\core\Azure.Core\tests\TestFramework\TestRecording.cs,TestRecording,The following switch statement is missing a default case: switch (Mode)              {                  case RecordedTestMode.Record:                      _session = new RecordSession();                      if (File.Exists(_sessionFile))                      {                          try                          {                              _previousSession = Load();                          }                          catch (Exception)                          {                              // ignore                          }                      }                      break;                  case RecordedTestMode.Playback:                      _session = Load();                      break;              }
