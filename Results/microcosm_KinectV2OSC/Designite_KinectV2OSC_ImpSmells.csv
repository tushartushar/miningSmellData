Implementation smell,Namespace,Class,File,Method,Description
Long Statement,KinectV2OSC.Model.Drawing,KinectCanvas,D:\research\architectureSmells\repos\microcosm_KinectV2OSC\Model\Drawing\KinectCanvas.cs,PreventDrawingOutsideCanvas,The length of the statement  "            this.drawingGroup.ClipGeometry = new RectangleGeometry(new Rect(0.0' 0.0' this.displaySize.Width' this.displaySize.Height)); " is 124.
Long Statement,KinectV2OSC.Model.Drawing.Renderers,BackgroundRenderer,D:\research\architectureSmells\repos\microcosm_KinectV2OSC\Model\Drawing\Renderers\BackgroundRenderer.cs,Draw,The length of the statement  "            this.drawingContext.DrawRectangle(Brushes.Black' null' new Rect(0.0' 0.0' this.displaySize.Width' this.displaySize.Height)); " is 124.
Magic Number,KinectV2OSC,MainWindow,D:\research\architectureSmells\repos\microcosm_KinectV2OSC\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 6 "..\..\MainWindow.xaml"              ((KinectV2OSC.MainWindow)(target)).Loaded += new System.Windows.RoutedEventHandler(this.MainWindow_Loaded);                            #line default              #line hidden                            #line 7 "..\..\MainWindow.xaml"              ((KinectV2OSC.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainWindow_Closing);                            #line default              #line hidden              return;              case 2:              this.framesBar = ((System.Windows.Controls.Primitives.StatusBar)(target));              return;              case 3:              this.uptimeBar = ((System.Windows.Controls.Primitives.StatusBar)(target));              return;              case 4:              this.oscBar = ((System.Windows.Controls.Primitives.StatusBar)(target));              return;              }
Magic Number,KinectV2OSC,MainWindow,D:\research\architectureSmells\repos\microcosm_KinectV2OSC\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 6 "..\..\MainWindow.xaml"              ((KinectV2OSC.MainWindow)(target)).Loaded += new System.Windows.RoutedEventHandler(this.MainWindow_Loaded);                            #line default              #line hidden                            #line 7 "..\..\MainWindow.xaml"              ((KinectV2OSC.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainWindow_Closing);                            #line default              #line hidden              return;              case 2:              this.framesBar = ((System.Windows.Controls.Primitives.StatusBar)(target));              return;              case 3:              this.uptimeBar = ((System.Windows.Controls.Primitives.StatusBar)(target));              return;              case 4:              this.oscBar = ((System.Windows.Controls.Primitives.StatusBar)(target));              return;              }
Magic Number,KinectV2OSC,MainWindow,D:\research\architectureSmells\repos\microcosm_KinectV2OSC\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 6 "..\..\MainWindow.xaml"              ((KinectV2OSC.MainWindow)(target)).Loaded += new System.Windows.RoutedEventHandler(this.MainWindow_Loaded);                            #line default              #line hidden                            #line 7 "..\..\MainWindow.xaml"              ((KinectV2OSC.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainWindow_Closing);                            #line default              #line hidden              return;              case 2:              this.framesBar = ((System.Windows.Controls.Primitives.StatusBar)(target));              return;              case 3:              this.uptimeBar = ((System.Windows.Controls.Primitives.StatusBar)(target));              return;              case 4:              this.oscBar = ((System.Windows.Controls.Primitives.StatusBar)(target));              return;              }
Missing Default,KinectV2OSC,MainWindow,D:\research\architectureSmells\repos\microcosm_KinectV2OSC\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 6 "..\..\MainWindow.xaml"              ((KinectV2OSC.MainWindow)(target)).Loaded += new System.Windows.RoutedEventHandler(this.MainWindow_Loaded);                            #line default              #line hidden                            #line 7 "..\..\MainWindow.xaml"              ((KinectV2OSC.MainWindow)(target)).Closing += new System.ComponentModel.CancelEventHandler(this.MainWindow_Closing);                            #line default              #line hidden              return;              case 2:              this.framesBar = ((System.Windows.Controls.Primitives.StatusBar)(target));              return;              case 3:              this.uptimeBar = ((System.Windows.Controls.Primitives.StatusBar)(target));              return;              case 4:              this.oscBar = ((System.Windows.Controls.Primitives.StatusBar)(target));              return;              }
Missing Default,KinectV2OSC.Model.Drawing.Renderers,HandsRenderer,D:\research\architectureSmells\repos\microcosm_KinectV2OSC\Model\Drawing\Renderers\HandsRenderer.cs,DrawHand,The following switch statement is missing a default case: switch (handState)              {                  case HandState.Closed:                      drawingContext.DrawEllipse(this.handClosedBrush' null' handPosition' HandSize' HandSize);                      break;                    case HandState.Open:                      drawingContext.DrawEllipse(this.handOpenBrush' null' handPosition' HandSize' HandSize);                      break;                    case HandState.Lasso:                      drawingContext.DrawEllipse(this.handLassoBrush' null' handPosition' HandSize' HandSize);                      break;              }
