Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SimpleHttpServer,HttpProcessor,D:\newReposJune17\jeske_SimpleHttpServer\SimpleHttpServer\HttpProcessor.cs,GetRequest,Cyclomatic complexity of the method is 8
Long Statement,SimpleHttpServer.Models,HttpRequest,D:\newReposJune17\jeske_SimpleHttpServer\SimpleHttpServer\Models\HttpRequest.cs,ToString,The length of the statement  "	return string.Format ("{0} {1} HTTP/1.0\r\n{2}\r\n\r\n{3}"' this.Method' this.Url' string.Join ("\r\n"' this.Headers.Select (x => string.Format ("{0}: {1}"' x.Key' x.Value)))' this.Content); " is 190.
Magic Number,SimpleHttpServer,HttpProcessor,D:\newReposJune17\jeske_SimpleHttpServer\SimpleHttpServer\HttpProcessor.cs,GetRequest,The following statement contains a magic number: if (tokens.Length != 3) {  	throw new Exception ("invalid http request line");  }  
Magic Number,SimpleHttpServer,HttpProcessor,D:\newReposJune17\jeske_SimpleHttpServer\SimpleHttpServer\HttpProcessor.cs,GetRequest,The following statement contains a magic number: if (headers.ContainsKey ("Content-Length")) {  	int totalBytes = Convert.ToInt32 (headers ["Content-Length"]);  	int bytesLeft = totalBytes;  	byte[] bytes = new byte[totalBytes];  	while (bytesLeft > 0) {  		byte[] buffer = new byte[bytesLeft > 1024 ? 1024 : bytesLeft];  		int n = inputStream.Read (buffer' 0' buffer.Length);  		buffer.CopyTo (bytes' totalBytes - bytesLeft);  		bytesLeft -= n;  	}  	content = Encoding.ASCII.GetString (bytes);  }  
Magic Number,SimpleHttpServer,HttpProcessor,D:\newReposJune17\jeske_SimpleHttpServer\SimpleHttpServer\HttpProcessor.cs,GetRequest,The following statement contains a magic number: if (headers.ContainsKey ("Content-Length")) {  	int totalBytes = Convert.ToInt32 (headers ["Content-Length"]);  	int bytesLeft = totalBytes;  	byte[] bytes = new byte[totalBytes];  	while (bytesLeft > 0) {  		byte[] buffer = new byte[bytesLeft > 1024 ? 1024 : bytesLeft];  		int n = inputStream.Read (buffer' 0' buffer.Length);  		buffer.CopyTo (bytes' totalBytes - bytesLeft);  		bytesLeft -= n;  	}  	content = Encoding.ASCII.GetString (bytes);  }  
Magic Number,SimpleHttpServer,HttpProcessor,D:\newReposJune17\jeske_SimpleHttpServer\SimpleHttpServer\HttpProcessor.cs,GetRequest,The following statement contains a magic number: while (bytesLeft > 0) {  	byte[] buffer = new byte[bytesLeft > 1024 ? 1024 : bytesLeft];  	int n = inputStream.Read (buffer' 0' buffer.Length);  	buffer.CopyTo (bytes' totalBytes - bytesLeft);  	bytesLeft -= n;  }  
Magic Number,SimpleHttpServer,HttpProcessor,D:\newReposJune17\jeske_SimpleHttpServer\SimpleHttpServer\HttpProcessor.cs,GetRequest,The following statement contains a magic number: while (bytesLeft > 0) {  	byte[] buffer = new byte[bytesLeft > 1024 ? 1024 : bytesLeft];  	int n = inputStream.Read (buffer' 0' buffer.Length);  	buffer.CopyTo (bytes' totalBytes - bytesLeft);  	bytesLeft -= n;  }  
