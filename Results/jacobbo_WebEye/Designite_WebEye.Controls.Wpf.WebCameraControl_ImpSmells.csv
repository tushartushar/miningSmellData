Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,GetCurrentImage,Cyclomatic complexity of the method is 18
Long Parameter List,WebEye.Controls.Wpf,VideoWindow,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\VideoWindow.cs,CreateWindowEx,The method has 12 parameters.
Long Statement,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,BindToDll,The length of the statement  "	_enumVideoInputDevices = (EnumVideoInputDevicesDelegate)Marshal.GetDelegateForFunctionPointer (pProcPtr' typeof(EnumVideoInputDevicesDelegate)); " is 144.
Long Statement,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,BindToDll,The length of the statement  "	_buildCaptureGraph = (BuildCaptureGraphDelegate)Marshal.GetDelegateForFunctionPointer (pProcPtr' typeof(BuildCaptureGraphDelegate)); " is 132.
Long Statement,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,BindToDll,The length of the statement  "	_addRenderFilter = (AddRenderFilterDelegate)Marshal.GetDelegateForFunctionPointer (pProcPtr' typeof(AddRenderFilterDelegate)); " is 126.
Long Statement,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,BindToDll,The length of the statement  "	_addCaptureFilter = (AddCaptureFilterDelegate)Marshal.GetDelegateForFunctionPointer (pProcPtr' typeof(AddCaptureFilterDelegate)); " is 129.
Long Statement,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,BindToDll,The length of the statement  "	_resetCaptureGraph = (ResetCaptureGraphDelegate)Marshal.GetDelegateForFunctionPointer (pProcPtr' typeof(ResetCaptureGraphDelegate)); " is 132.
Long Statement,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,BindToDll,The length of the statement  "	_getCurrentImage = (GetCurrentImageDelegate)Marshal.GetDelegateForFunctionPointer (pProcPtr' typeof(GetCurrentImageDelegate)); " is 126.
Long Statement,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,BindToDll,The length of the statement  "	_destroyCaptureGraph = (DestroyCaptureGraphDelegate)Marshal.GetDelegateForFunctionPointer (pProcPtr' typeof(DestroyCaptureGraphDelegate)); " is 138.
Long Statement,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,GetCurrentImage,The length of the statement  "		Bitmap image = new Bitmap (biHeader.biWidth' biHeader.biHeight' stride' pixelFormat' (IntPtr)(dibPtr.ToInt64 () + Marshal.SizeOf (biHeader))); " is 142.
Long Statement,WebEye.Controls.Wpf,VideoWindow,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\VideoWindow.cs,BuildWindowCore,The length of the statement  "	_hWnd = CreateWindowEx (0' "Static"' ""' WindowStyles.WS_CHILD | WindowStyles.WS_VISIBLE' 0' 0' clientArea.right - clientArea.left' clientArea.bottom - clientArea.top' hWndParent.Handle' IntPtr.Zero' IntPtr.Zero' IntPtr.Zero); " is 226.
Magic Number,WebEye.Controls.Wpf,WebCameraId,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\WebCameraId.cs,GetHashCode,The following statement contains a magic number: unchecked {  	return (Name.GetHashCode () * 397) ^ DevicePath.GetHashCode ();  }  
Magic Number,WebEye.Controls.Wpf,WebCameraId,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\WebCameraId.cs,GetHashCode,The following statement contains a magic number: return (Name.GetHashCode () * 397) ^ DevicePath.GetHashCode ();  
Magic Number,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,GetCurrentImage,The following statement contains a magic number: try {  	BITMAPINFOHEADER biHeader = (BITMAPINFOHEADER)Marshal.PtrToStructure (dibPtr' typeof(BITMAPINFOHEADER));  	Int32 stride = biHeader.biWidth * (biHeader.biBitCount / 8);  	// The bits in the array are packed together' but each scan line must be  	// padded with zeros to end on a LONG data-type boundary.  	Int32 padding = stride % 4 > 0 ? 4 - stride % 4 : 0;  	stride += padding;  	PixelFormat pixelFormat = PixelFormat.Undefined;  	switch (biHeader.biBitCount) {  	case 1:  		pixelFormat = PixelFormat.Format1bppIndexed;  		break;  	case 4:  		pixelFormat = PixelFormat.Format4bppIndexed;  		break;  	case 8:  		pixelFormat = PixelFormat.Format8bppIndexed;  		break;  	case 16:  		pixelFormat = PixelFormat.Format16bppRgb555;  		break;  	case 24:  		pixelFormat = PixelFormat.Format24bppRgb;  		break;  	case 32:  		pixelFormat = PixelFormat.Format32bppRgb;  		break;  	}  	Bitmap image = new Bitmap (biHeader.biWidth' biHeader.biHeight' stride' pixelFormat' (IntPtr)(dibPtr.ToInt64 () + Marshal.SizeOf (biHeader)));  	image.RotateFlip (RotateFlipType.RotateNoneFlipY);  	return image;  } finally {  	if (dibPtr != IntPtr.Zero) {  		Marshal.FreeCoTaskMem (dibPtr);  	}  }  
Magic Number,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,GetCurrentImage,The following statement contains a magic number: try {  	BITMAPINFOHEADER biHeader = (BITMAPINFOHEADER)Marshal.PtrToStructure (dibPtr' typeof(BITMAPINFOHEADER));  	Int32 stride = biHeader.biWidth * (biHeader.biBitCount / 8);  	// The bits in the array are packed together' but each scan line must be  	// padded with zeros to end on a LONG data-type boundary.  	Int32 padding = stride % 4 > 0 ? 4 - stride % 4 : 0;  	stride += padding;  	PixelFormat pixelFormat = PixelFormat.Undefined;  	switch (biHeader.biBitCount) {  	case 1:  		pixelFormat = PixelFormat.Format1bppIndexed;  		break;  	case 4:  		pixelFormat = PixelFormat.Format4bppIndexed;  		break;  	case 8:  		pixelFormat = PixelFormat.Format8bppIndexed;  		break;  	case 16:  		pixelFormat = PixelFormat.Format16bppRgb555;  		break;  	case 24:  		pixelFormat = PixelFormat.Format24bppRgb;  		break;  	case 32:  		pixelFormat = PixelFormat.Format32bppRgb;  		break;  	}  	Bitmap image = new Bitmap (biHeader.biWidth' biHeader.biHeight' stride' pixelFormat' (IntPtr)(dibPtr.ToInt64 () + Marshal.SizeOf (biHeader)));  	image.RotateFlip (RotateFlipType.RotateNoneFlipY);  	return image;  } finally {  	if (dibPtr != IntPtr.Zero) {  		Marshal.FreeCoTaskMem (dibPtr);  	}  }  
Magic Number,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,GetCurrentImage,The following statement contains a magic number: try {  	BITMAPINFOHEADER biHeader = (BITMAPINFOHEADER)Marshal.PtrToStructure (dibPtr' typeof(BITMAPINFOHEADER));  	Int32 stride = biHeader.biWidth * (biHeader.biBitCount / 8);  	// The bits in the array are packed together' but each scan line must be  	// padded with zeros to end on a LONG data-type boundary.  	Int32 padding = stride % 4 > 0 ? 4 - stride % 4 : 0;  	stride += padding;  	PixelFormat pixelFormat = PixelFormat.Undefined;  	switch (biHeader.biBitCount) {  	case 1:  		pixelFormat = PixelFormat.Format1bppIndexed;  		break;  	case 4:  		pixelFormat = PixelFormat.Format4bppIndexed;  		break;  	case 8:  		pixelFormat = PixelFormat.Format8bppIndexed;  		break;  	case 16:  		pixelFormat = PixelFormat.Format16bppRgb555;  		break;  	case 24:  		pixelFormat = PixelFormat.Format24bppRgb;  		break;  	case 32:  		pixelFormat = PixelFormat.Format32bppRgb;  		break;  	}  	Bitmap image = new Bitmap (biHeader.biWidth' biHeader.biHeight' stride' pixelFormat' (IntPtr)(dibPtr.ToInt64 () + Marshal.SizeOf (biHeader)));  	image.RotateFlip (RotateFlipType.RotateNoneFlipY);  	return image;  } finally {  	if (dibPtr != IntPtr.Zero) {  		Marshal.FreeCoTaskMem (dibPtr);  	}  }  
Magic Number,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,GetCurrentImage,The following statement contains a magic number: try {  	BITMAPINFOHEADER biHeader = (BITMAPINFOHEADER)Marshal.PtrToStructure (dibPtr' typeof(BITMAPINFOHEADER));  	Int32 stride = biHeader.biWidth * (biHeader.biBitCount / 8);  	// The bits in the array are packed together' but each scan line must be  	// padded with zeros to end on a LONG data-type boundary.  	Int32 padding = stride % 4 > 0 ? 4 - stride % 4 : 0;  	stride += padding;  	PixelFormat pixelFormat = PixelFormat.Undefined;  	switch (biHeader.biBitCount) {  	case 1:  		pixelFormat = PixelFormat.Format1bppIndexed;  		break;  	case 4:  		pixelFormat = PixelFormat.Format4bppIndexed;  		break;  	case 8:  		pixelFormat = PixelFormat.Format8bppIndexed;  		break;  	case 16:  		pixelFormat = PixelFormat.Format16bppRgb555;  		break;  	case 24:  		pixelFormat = PixelFormat.Format24bppRgb;  		break;  	case 32:  		pixelFormat = PixelFormat.Format32bppRgb;  		break;  	}  	Bitmap image = new Bitmap (biHeader.biWidth' biHeader.biHeight' stride' pixelFormat' (IntPtr)(dibPtr.ToInt64 () + Marshal.SizeOf (biHeader)));  	image.RotateFlip (RotateFlipType.RotateNoneFlipY);  	return image;  } finally {  	if (dibPtr != IntPtr.Zero) {  		Marshal.FreeCoTaskMem (dibPtr);  	}  }  
Magic Number,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,GetCurrentImage,The following statement contains a magic number: try {  	BITMAPINFOHEADER biHeader = (BITMAPINFOHEADER)Marshal.PtrToStructure (dibPtr' typeof(BITMAPINFOHEADER));  	Int32 stride = biHeader.biWidth * (biHeader.biBitCount / 8);  	// The bits in the array are packed together' but each scan line must be  	// padded with zeros to end on a LONG data-type boundary.  	Int32 padding = stride % 4 > 0 ? 4 - stride % 4 : 0;  	stride += padding;  	PixelFormat pixelFormat = PixelFormat.Undefined;  	switch (biHeader.biBitCount) {  	case 1:  		pixelFormat = PixelFormat.Format1bppIndexed;  		break;  	case 4:  		pixelFormat = PixelFormat.Format4bppIndexed;  		break;  	case 8:  		pixelFormat = PixelFormat.Format8bppIndexed;  		break;  	case 16:  		pixelFormat = PixelFormat.Format16bppRgb555;  		break;  	case 24:  		pixelFormat = PixelFormat.Format24bppRgb;  		break;  	case 32:  		pixelFormat = PixelFormat.Format32bppRgb;  		break;  	}  	Bitmap image = new Bitmap (biHeader.biWidth' biHeader.biHeight' stride' pixelFormat' (IntPtr)(dibPtr.ToInt64 () + Marshal.SizeOf (biHeader)));  	image.RotateFlip (RotateFlipType.RotateNoneFlipY);  	return image;  } finally {  	if (dibPtr != IntPtr.Zero) {  		Marshal.FreeCoTaskMem (dibPtr);  	}  }  
Magic Number,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,GetCurrentImage,The following statement contains a magic number: try {  	BITMAPINFOHEADER biHeader = (BITMAPINFOHEADER)Marshal.PtrToStructure (dibPtr' typeof(BITMAPINFOHEADER));  	Int32 stride = biHeader.biWidth * (biHeader.biBitCount / 8);  	// The bits in the array are packed together' but each scan line must be  	// padded with zeros to end on a LONG data-type boundary.  	Int32 padding = stride % 4 > 0 ? 4 - stride % 4 : 0;  	stride += padding;  	PixelFormat pixelFormat = PixelFormat.Undefined;  	switch (biHeader.biBitCount) {  	case 1:  		pixelFormat = PixelFormat.Format1bppIndexed;  		break;  	case 4:  		pixelFormat = PixelFormat.Format4bppIndexed;  		break;  	case 8:  		pixelFormat = PixelFormat.Format8bppIndexed;  		break;  	case 16:  		pixelFormat = PixelFormat.Format16bppRgb555;  		break;  	case 24:  		pixelFormat = PixelFormat.Format24bppRgb;  		break;  	case 32:  		pixelFormat = PixelFormat.Format32bppRgb;  		break;  	}  	Bitmap image = new Bitmap (biHeader.biWidth' biHeader.biHeight' stride' pixelFormat' (IntPtr)(dibPtr.ToInt64 () + Marshal.SizeOf (biHeader)));  	image.RotateFlip (RotateFlipType.RotateNoneFlipY);  	return image;  } finally {  	if (dibPtr != IntPtr.Zero) {  		Marshal.FreeCoTaskMem (dibPtr);  	}  }  
Magic Number,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,GetCurrentImage,The following statement contains a magic number: try {  	BITMAPINFOHEADER biHeader = (BITMAPINFOHEADER)Marshal.PtrToStructure (dibPtr' typeof(BITMAPINFOHEADER));  	Int32 stride = biHeader.biWidth * (biHeader.biBitCount / 8);  	// The bits in the array are packed together' but each scan line must be  	// padded with zeros to end on a LONG data-type boundary.  	Int32 padding = stride % 4 > 0 ? 4 - stride % 4 : 0;  	stride += padding;  	PixelFormat pixelFormat = PixelFormat.Undefined;  	switch (biHeader.biBitCount) {  	case 1:  		pixelFormat = PixelFormat.Format1bppIndexed;  		break;  	case 4:  		pixelFormat = PixelFormat.Format4bppIndexed;  		break;  	case 8:  		pixelFormat = PixelFormat.Format8bppIndexed;  		break;  	case 16:  		pixelFormat = PixelFormat.Format16bppRgb555;  		break;  	case 24:  		pixelFormat = PixelFormat.Format24bppRgb;  		break;  	case 32:  		pixelFormat = PixelFormat.Format32bppRgb;  		break;  	}  	Bitmap image = new Bitmap (biHeader.biWidth' biHeader.biHeight' stride' pixelFormat' (IntPtr)(dibPtr.ToInt64 () + Marshal.SizeOf (biHeader)));  	image.RotateFlip (RotateFlipType.RotateNoneFlipY);  	return image;  } finally {  	if (dibPtr != IntPtr.Zero) {  		Marshal.FreeCoTaskMem (dibPtr);  	}  }  
Magic Number,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,GetCurrentImage,The following statement contains a magic number: try {  	BITMAPINFOHEADER biHeader = (BITMAPINFOHEADER)Marshal.PtrToStructure (dibPtr' typeof(BITMAPINFOHEADER));  	Int32 stride = biHeader.biWidth * (biHeader.biBitCount / 8);  	// The bits in the array are packed together' but each scan line must be  	// padded with zeros to end on a LONG data-type boundary.  	Int32 padding = stride % 4 > 0 ? 4 - stride % 4 : 0;  	stride += padding;  	PixelFormat pixelFormat = PixelFormat.Undefined;  	switch (biHeader.biBitCount) {  	case 1:  		pixelFormat = PixelFormat.Format1bppIndexed;  		break;  	case 4:  		pixelFormat = PixelFormat.Format4bppIndexed;  		break;  	case 8:  		pixelFormat = PixelFormat.Format8bppIndexed;  		break;  	case 16:  		pixelFormat = PixelFormat.Format16bppRgb555;  		break;  	case 24:  		pixelFormat = PixelFormat.Format24bppRgb;  		break;  	case 32:  		pixelFormat = PixelFormat.Format32bppRgb;  		break;  	}  	Bitmap image = new Bitmap (biHeader.biWidth' biHeader.biHeight' stride' pixelFormat' (IntPtr)(dibPtr.ToInt64 () + Marshal.SizeOf (biHeader)));  	image.RotateFlip (RotateFlipType.RotateNoneFlipY);  	return image;  } finally {  	if (dibPtr != IntPtr.Zero) {  		Marshal.FreeCoTaskMem (dibPtr);  	}  }  
Magic Number,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,GetCurrentImage,The following statement contains a magic number: try {  	BITMAPINFOHEADER biHeader = (BITMAPINFOHEADER)Marshal.PtrToStructure (dibPtr' typeof(BITMAPINFOHEADER));  	Int32 stride = biHeader.biWidth * (biHeader.biBitCount / 8);  	// The bits in the array are packed together' but each scan line must be  	// padded with zeros to end on a LONG data-type boundary.  	Int32 padding = stride % 4 > 0 ? 4 - stride % 4 : 0;  	stride += padding;  	PixelFormat pixelFormat = PixelFormat.Undefined;  	switch (biHeader.biBitCount) {  	case 1:  		pixelFormat = PixelFormat.Format1bppIndexed;  		break;  	case 4:  		pixelFormat = PixelFormat.Format4bppIndexed;  		break;  	case 8:  		pixelFormat = PixelFormat.Format8bppIndexed;  		break;  	case 16:  		pixelFormat = PixelFormat.Format16bppRgb555;  		break;  	case 24:  		pixelFormat = PixelFormat.Format24bppRgb;  		break;  	case 32:  		pixelFormat = PixelFormat.Format32bppRgb;  		break;  	}  	Bitmap image = new Bitmap (biHeader.biWidth' biHeader.biHeight' stride' pixelFormat' (IntPtr)(dibPtr.ToInt64 () + Marshal.SizeOf (biHeader)));  	image.RotateFlip (RotateFlipType.RotateNoneFlipY);  	return image;  } finally {  	if (dibPtr != IntPtr.Zero) {  		Marshal.FreeCoTaskMem (dibPtr);  	}  }  
Magic Number,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,GetCurrentImage,The following statement contains a magic number: switch (biHeader.biBitCount) {  case 1:  	pixelFormat = PixelFormat.Format1bppIndexed;  	break;  case 4:  	pixelFormat = PixelFormat.Format4bppIndexed;  	break;  case 8:  	pixelFormat = PixelFormat.Format8bppIndexed;  	break;  case 16:  	pixelFormat = PixelFormat.Format16bppRgb555;  	break;  case 24:  	pixelFormat = PixelFormat.Format24bppRgb;  	break;  case 32:  	pixelFormat = PixelFormat.Format32bppRgb;  	break;  }  
Magic Number,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,GetCurrentImage,The following statement contains a magic number: switch (biHeader.biBitCount) {  case 1:  	pixelFormat = PixelFormat.Format1bppIndexed;  	break;  case 4:  	pixelFormat = PixelFormat.Format4bppIndexed;  	break;  case 8:  	pixelFormat = PixelFormat.Format8bppIndexed;  	break;  case 16:  	pixelFormat = PixelFormat.Format16bppRgb555;  	break;  case 24:  	pixelFormat = PixelFormat.Format24bppRgb;  	break;  case 32:  	pixelFormat = PixelFormat.Format32bppRgb;  	break;  }  
Magic Number,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,GetCurrentImage,The following statement contains a magic number: switch (biHeader.biBitCount) {  case 1:  	pixelFormat = PixelFormat.Format1bppIndexed;  	break;  case 4:  	pixelFormat = PixelFormat.Format4bppIndexed;  	break;  case 8:  	pixelFormat = PixelFormat.Format8bppIndexed;  	break;  case 16:  	pixelFormat = PixelFormat.Format16bppRgb555;  	break;  case 24:  	pixelFormat = PixelFormat.Format24bppRgb;  	break;  case 32:  	pixelFormat = PixelFormat.Format32bppRgb;  	break;  }  
Magic Number,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,GetCurrentImage,The following statement contains a magic number: switch (biHeader.biBitCount) {  case 1:  	pixelFormat = PixelFormat.Format1bppIndexed;  	break;  case 4:  	pixelFormat = PixelFormat.Format4bppIndexed;  	break;  case 8:  	pixelFormat = PixelFormat.Format8bppIndexed;  	break;  case 16:  	pixelFormat = PixelFormat.Format16bppRgb555;  	break;  case 24:  	pixelFormat = PixelFormat.Format24bppRgb;  	break;  case 32:  	pixelFormat = PixelFormat.Format32bppRgb;  	break;  }  
Magic Number,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,GetCurrentImage,The following statement contains a magic number: switch (biHeader.biBitCount) {  case 1:  	pixelFormat = PixelFormat.Format1bppIndexed;  	break;  case 4:  	pixelFormat = PixelFormat.Format4bppIndexed;  	break;  case 8:  	pixelFormat = PixelFormat.Format8bppIndexed;  	break;  case 16:  	pixelFormat = PixelFormat.Format16bppRgb555;  	break;  case 24:  	pixelFormat = PixelFormat.Format24bppRgb;  	break;  case 32:  	pixelFormat = PixelFormat.Format32bppRgb;  	break;  }  
Missing Default,WebEye.Controls.Wpf,DirectShowProxy,F:\newReposMay17\jacobbo_WebEye\WebCameraControl\WPF\WebCameraControl\DirectShowProxy.cs,GetCurrentImage,The following switch statement is missing a default case: switch (biHeader.biBitCount) {  case 1:  	pixelFormat = PixelFormat.Format1bppIndexed;  	break;  case 4:  	pixelFormat = PixelFormat.Format4bppIndexed;  	break;  case 8:  	pixelFormat = PixelFormat.Format8bppIndexed;  	break;  case 16:  	pixelFormat = PixelFormat.Format16bppRgb555;  	break;  case 24:  	pixelFormat = PixelFormat.Format24bppRgb;  	break;  case 32:  	pixelFormat = PixelFormat.Format32bppRgb;  	break;  }  
