Implementation smell,Namespace,Class,File,Method,Description
Long Method,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,DefaultPageLayoutSettings,The method has 101 lines of code.
Long Method,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetInputOptions,The method has 143 lines of code.
Long Method,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The method has 160 lines of code.
Long Method,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The method has 214 lines of code.
Complex Method,ImageCaptureSample,CaptionOptions,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\CaptionOptions.cs,SetDefaults,Cyclomatic complexity of the method is 19
Complex Method,ImageCaptureSample,CaptionOptions,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\CaptionOptions.cs,CaptionPositionSelector_SelectedIndexChanged,Cyclomatic complexity of the method is 14
Complex Method,ImageCaptureSample,DateTimeFormatOptions,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\DateTimeFormat.cs,DateTimeOrderSelector_SelectedIndexChanged,Cyclomatic complexity of the method is 8
Complex Method,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,ShowSelectionTypeControls,Cyclomatic complexity of the method is 9
Complex Method,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,CaptureType_SelectedIndexChanged,Cyclomatic complexity of the method is 26
Complex Method,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,OutputType_SelectedIndexChanged,Cyclomatic complexity of the method is 12
Complex Method,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,FileFormatsList_SelectedIndexChanged,Cyclomatic complexity of the method is 40
Complex Method,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,PrntrImgPlacement_SelectedIndexChanged,Cyclomatic complexity of the method is 26
Complex Method,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,prntrImgScaling_SelectedIndexChanged,Cyclomatic complexity of the method is 12
Complex Method,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,DefaultPageLayoutSettings,Cyclomatic complexity of the method is 37
Complex Method,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,WatermarkDirectionSelector_SelectedIndexChanged,Cyclomatic complexity of the method is 16
Complex Method,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,ScalingMethodSelector_SelectedIndexChanged,Cyclomatic complexity of the method is 10
Complex Method,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,ColorConvertSelector_SelectedIndexChanged,Cyclomatic complexity of the method is 8
Complex Method,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,ColorSubSelector_SelectedIndexChanged,Cyclomatic complexity of the method is 8
Complex Method,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetInputOptions,Cyclomatic complexity of the method is 34
Complex Method,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,Cyclomatic complexity of the method is 27
Complex Method,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,Cyclomatic complexity of the method is 36
Long Statement,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,DisplayCaptureSelectionResults,The length of the statement  "	var resultsMsg = "Capture Results:" + Environment.NewLine + "   Selection: Top = " + SnagImg.CaptureResults.SelectedArea.StartY + Environment.NewLine + "              Left = " + SnagImg.CaptureResults.SelectedArea.StartX + Environment.NewLine + "            Height = " + SnagImg.CaptureResults.SelectedArea.Height + Environment.NewLine + "             Width = " + SnagImg.CaptureResults.SelectedArea.Width; " is 406.
Long Statement,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,FormatOptionsBttn_Click,The length of the statement  "		var msg = "Additional format options are only" + Environment.NewLine + "available for these file types:" + Environment.NewLine + "   siftBMP" + Environment.NewLine + "   siftGIF" + Environment.NewLine + "   siftJPEG" + Environment.NewLine + "   siftPNG" + Environment.NewLine + "   siftTGA" + Environment.NewLine + "   siftTIFF"; " is 329.
Long Statement,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,EnableCaptionControls,The length of the statement  "	SystemCaptionSettingsBttn.Enabled = enable && (CaptionTimeChkBx.Checked || CaptionUsernameChkBx.Checked || CaptionComputerChkBx.Checked); " is 137.
Long Statement,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,EnableCaptionControls,The length of the statement  "	SystemFontBttn.Enabled = enable && (CaptionTimeChkBx.Checked || CaptionUsernameChkBx.Checked || CaptionComputerChkBx.Checked); " is 126.
Long Statement,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,CaptionComputerChkBx_CheckedChanged,The length of the statement  "	SystemCaptionSettingsBttn.Enabled = CaptionTimeChkBx.Checked || CaptionUsernameChkBx.Checked || CaptionComputerChkBx.Checked; " is 125.
Long Statement,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,CaptionUsernameChkBx_CheckedChanged,The length of the statement  "	SystemCaptionSettingsBttn.Enabled = CaptionTimeChkBx.Checked || CaptionUsernameChkBx.Checked || CaptionComputerChkBx.Checked; " is 125.
Long Statement,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,CaptionTimeChkBx_CheckedChanged,The length of the statement  "	SystemCaptionSettingsBttn.Enabled = CaptionTimeChkBx.Checked || CaptionUsernameChkBx.Checked || CaptionComputerChkBx.Checked; " is 125.
Long Statement,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,ColorSubAddBttn_Click,The length of the statement  "	var newConversion = ColorSubOldBttn.BackColor.ToKnownColor () + subOperation + ColorSubNewBttn.BackColor.ToKnownColor (); " is 121.
Long Statement,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetMiscOptions,The length of the statement  "	SnagImg.HotspotType = HotSpotObjsRadio.Checked ? snagHotspotType.shtLinksAndControls : HotSpotLinksRadio.Checked ? snagHotspotType.shtLinksOnly : snagHotspotType.shtNone; " is 170.
Long Statement,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetInputOptions,The length of the statement  "	AutoScrollChkBx.Checked = SnagImg.Input == snagImageInput.siiCapture || SnagImg.Input == snagImageInput.siiCustomScroll || SnagImg.Input == snagImageInput.siiRegion || SnagImg.Input == snagImageInput.siiWindow; " is 210.
Long Statement,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The length of the statement  "		if (SnagImg.OutputPrinterPageLayoutOptions.ScalingType == snagPrintScale.spsPercentScale && (PrntrPercentTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrPercentTxtBx.Text) < 1)) { " is 186.
Long Statement,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The length of the statement  "		if (Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) > 1000) { " is 124.
Long Statement,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The length of the statement  "		if (Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) > 100) { " is 121.
Long Statement,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The length of the statement  "		if (Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) > 100) { " is 121.
Long Statement,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The length of the statement  "		if (Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) < 1 || Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) > 100) { " is 121.
Long Statement,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The length of the statement  "	if (ScalingMethodSelector.Text != "None" && ScalingMethodSelector.Text != "Height" && Helpers.ConvertToNumeric (ScalingWidthTxtBx.Text) < 1) { " is 142.
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,ClrFxBrightnessTrkBar_Scroll,The following statement contains a magic number: ClrFxBrightnessTxBx.Text = (ClrFxBrightnessTrkBar.Value * 10).ToString ();  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,ClrFxContrastTrkBar_Scroll,The following statement contains a magic number: ClrFxContrastTxtBx.Text = (ClrFxContrastTrkBar.Value * 10).ToString ();  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,ClrFxSaturationTrkBar_Scroll,The following statement contains a magic number: ClrFxSaturationTxtBx.Text = (ClrFxSaturationTrkBar.Value * 10).ToString ();  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,ClrFxDefaultsBttn_Click,The following statement contains a magic number: ClrFxGammaTrkBar.Value = 100;  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,ColorSubAddBttn_Click,The following statement contains a magic number: if (accuracy < 0 || accuracy > 100) {  	MessageBox.Show ("Color accuracy must be between 0 and 100");  	tabFilters.Focus ();  	tabFilters.SelectTab (8);  	ColorSubAccuracyTxtBx.Focus ();  	return;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,ColorSubAddBttn_Click,The following statement contains a magic number: if (accuracy < 0 || accuracy > 100) {  	MessageBox.Show ("Color accuracy must be between 0 and 100");  	tabFilters.Focus ();  	tabFilters.SelectTab (8);  	ColorSubAccuracyTxtBx.Focus ();  	return;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,ColorSubAddBttn_Click,The following statement contains a magic number: tabFilters.SelectTab (8);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (OutputType.Text == "E-mail") {  	if (!EmailPromptChkBx.Checked) {  		if (EmailAddrTxtBx.TextLength < 1) {  			MessageBox.Show ("Please enter the recipients email address");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (4);  			EmailAddrTxtBx.Focus ();  			return false;  		}  		if (EmailNameTxtBx.TextLength < 1) {  			MessageBox.Show ("Please enter the recipients name");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (4);  			EmailNameTxtBx.Focus ();  			return false;  		}  		SnagImg.OutputMailOptions.Address = EmailAddrTxtBx.Text;  		SnagImg.OutputMailOptions.Name = EmailNameTxtBx.Text;  		SnagImg.OutputMailOptions.Subject = EmailMsgTxtBx.Text;  		SnagImg.OutputMailOptions.MessageText = EmailSubjectTxtBx.Text;  	}  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (OutputType.Text == "E-mail") {  	if (!EmailPromptChkBx.Checked) {  		if (EmailAddrTxtBx.TextLength < 1) {  			MessageBox.Show ("Please enter the recipients email address");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (4);  			EmailAddrTxtBx.Focus ();  			return false;  		}  		if (EmailNameTxtBx.TextLength < 1) {  			MessageBox.Show ("Please enter the recipients name");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (4);  			EmailNameTxtBx.Focus ();  			return false;  		}  		SnagImg.OutputMailOptions.Address = EmailAddrTxtBx.Text;  		SnagImg.OutputMailOptions.Name = EmailNameTxtBx.Text;  		SnagImg.OutputMailOptions.Subject = EmailMsgTxtBx.Text;  		SnagImg.OutputMailOptions.MessageText = EmailSubjectTxtBx.Text;  	}  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (!EmailPromptChkBx.Checked) {  	if (EmailAddrTxtBx.TextLength < 1) {  		MessageBox.Show ("Please enter the recipients email address");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (4);  		EmailAddrTxtBx.Focus ();  		return false;  	}  	if (EmailNameTxtBx.TextLength < 1) {  		MessageBox.Show ("Please enter the recipients name");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (4);  		EmailNameTxtBx.Focus ();  		return false;  	}  	SnagImg.OutputMailOptions.Address = EmailAddrTxtBx.Text;  	SnagImg.OutputMailOptions.Name = EmailNameTxtBx.Text;  	SnagImg.OutputMailOptions.Subject = EmailMsgTxtBx.Text;  	SnagImg.OutputMailOptions.MessageText = EmailSubjectTxtBx.Text;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (!EmailPromptChkBx.Checked) {  	if (EmailAddrTxtBx.TextLength < 1) {  		MessageBox.Show ("Please enter the recipients email address");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (4);  		EmailAddrTxtBx.Focus ();  		return false;  	}  	if (EmailNameTxtBx.TextLength < 1) {  		MessageBox.Show ("Please enter the recipients name");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (4);  		EmailNameTxtBx.Focus ();  		return false;  	}  	SnagImg.OutputMailOptions.Address = EmailAddrTxtBx.Text;  	SnagImg.OutputMailOptions.Name = EmailNameTxtBx.Text;  	SnagImg.OutputMailOptions.Subject = EmailMsgTxtBx.Text;  	SnagImg.OutputMailOptions.MessageText = EmailSubjectTxtBx.Text;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (EmailAddrTxtBx.TextLength < 1) {  	MessageBox.Show ("Please enter the recipients email address");  	OutputTabControl.Focus ();  	OutputTabControl.SelectTab (4);  	EmailAddrTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: OutputTabControl.SelectTab (4);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (EmailNameTxtBx.TextLength < 1) {  	MessageBox.Show ("Please enter the recipients name");  	OutputTabControl.Focus ();  	OutputTabControl.SelectTab (4);  	EmailNameTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: OutputTabControl.SelectTab (4);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (OutputType.Text == "Printer") {  	if (PrntrNameTxtBx.TextLength < 1 || PrntrDriverTxtBx.TextLength < 1 || PrntrPortTxtBx.TextLength < 1) {  		MessageBox.Show ("Please select a printer");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (5);  		PrinterSelectBttn.Focus ();  		return false;  	}  	if (SnagImg.OutputPrinterPageLayoutOptions.ScalingType == snagPrintScale.spsPercentScale && (PrntrPercentTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrPercentTxtBx.Text) < 1)) {  		MessageBox.Show ("Please set the printer scaling percent");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (5);  		PrntrPercentTxtBx.Focus ();  		return false;  	}  	if (SnagImg.OutputPrinterPageLayoutOptions.ScalingType == snagPrintScale.spsFixedSize) {  		if (PrntrHeightTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrHeightTxtBx.Text) < 1) {  			MessageBox.Show ("Please set the printer scaling height");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (5);  			PrntrHeightTxtBx.Focus ();  			return false;  		}  		if (PrntrWidthTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrWidthTxtBx.Text) < 1) {  			MessageBox.Show ("Please set the printer scaling width");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (5);  			PrntrWidthTxtBx.Focus ();  			return false;  		}  	}  	SnagImg.OutputPrinterPageLayoutOptions.MarginLeft = Helpers.ConvertToNumeric (MarginLeftTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.MarginRight = Helpers.ConvertToNumeric (MarginRightTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.MarginTop = Helpers.ConvertToNumeric (MarginTopTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.MarginBottom = Helpers.ConvertToNumeric (MarginBottomTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.Scale = Helpers.ConvertToNumeric (PrntrPercentTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.Height = Helpers.ConvertToNumeric (PrntrHeightTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.Width = Helpers.ConvertToNumeric (PrntrWidthTxtBx.Text);  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (OutputType.Text == "Printer") {  	if (PrntrNameTxtBx.TextLength < 1 || PrntrDriverTxtBx.TextLength < 1 || PrntrPortTxtBx.TextLength < 1) {  		MessageBox.Show ("Please select a printer");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (5);  		PrinterSelectBttn.Focus ();  		return false;  	}  	if (SnagImg.OutputPrinterPageLayoutOptions.ScalingType == snagPrintScale.spsPercentScale && (PrntrPercentTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrPercentTxtBx.Text) < 1)) {  		MessageBox.Show ("Please set the printer scaling percent");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (5);  		PrntrPercentTxtBx.Focus ();  		return false;  	}  	if (SnagImg.OutputPrinterPageLayoutOptions.ScalingType == snagPrintScale.spsFixedSize) {  		if (PrntrHeightTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrHeightTxtBx.Text) < 1) {  			MessageBox.Show ("Please set the printer scaling height");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (5);  			PrntrHeightTxtBx.Focus ();  			return false;  		}  		if (PrntrWidthTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrWidthTxtBx.Text) < 1) {  			MessageBox.Show ("Please set the printer scaling width");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (5);  			PrntrWidthTxtBx.Focus ();  			return false;  		}  	}  	SnagImg.OutputPrinterPageLayoutOptions.MarginLeft = Helpers.ConvertToNumeric (MarginLeftTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.MarginRight = Helpers.ConvertToNumeric (MarginRightTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.MarginTop = Helpers.ConvertToNumeric (MarginTopTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.MarginBottom = Helpers.ConvertToNumeric (MarginBottomTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.Scale = Helpers.ConvertToNumeric (PrntrPercentTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.Height = Helpers.ConvertToNumeric (PrntrHeightTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.Width = Helpers.ConvertToNumeric (PrntrWidthTxtBx.Text);  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (OutputType.Text == "Printer") {  	if (PrntrNameTxtBx.TextLength < 1 || PrntrDriverTxtBx.TextLength < 1 || PrntrPortTxtBx.TextLength < 1) {  		MessageBox.Show ("Please select a printer");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (5);  		PrinterSelectBttn.Focus ();  		return false;  	}  	if (SnagImg.OutputPrinterPageLayoutOptions.ScalingType == snagPrintScale.spsPercentScale && (PrntrPercentTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrPercentTxtBx.Text) < 1)) {  		MessageBox.Show ("Please set the printer scaling percent");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (5);  		PrntrPercentTxtBx.Focus ();  		return false;  	}  	if (SnagImg.OutputPrinterPageLayoutOptions.ScalingType == snagPrintScale.spsFixedSize) {  		if (PrntrHeightTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrHeightTxtBx.Text) < 1) {  			MessageBox.Show ("Please set the printer scaling height");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (5);  			PrntrHeightTxtBx.Focus ();  			return false;  		}  		if (PrntrWidthTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrWidthTxtBx.Text) < 1) {  			MessageBox.Show ("Please set the printer scaling width");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (5);  			PrntrWidthTxtBx.Focus ();  			return false;  		}  	}  	SnagImg.OutputPrinterPageLayoutOptions.MarginLeft = Helpers.ConvertToNumeric (MarginLeftTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.MarginRight = Helpers.ConvertToNumeric (MarginRightTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.MarginTop = Helpers.ConvertToNumeric (MarginTopTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.MarginBottom = Helpers.ConvertToNumeric (MarginBottomTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.Scale = Helpers.ConvertToNumeric (PrntrPercentTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.Height = Helpers.ConvertToNumeric (PrntrHeightTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.Width = Helpers.ConvertToNumeric (PrntrWidthTxtBx.Text);  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (OutputType.Text == "Printer") {  	if (PrntrNameTxtBx.TextLength < 1 || PrntrDriverTxtBx.TextLength < 1 || PrntrPortTxtBx.TextLength < 1) {  		MessageBox.Show ("Please select a printer");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (5);  		PrinterSelectBttn.Focus ();  		return false;  	}  	if (SnagImg.OutputPrinterPageLayoutOptions.ScalingType == snagPrintScale.spsPercentScale && (PrntrPercentTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrPercentTxtBx.Text) < 1)) {  		MessageBox.Show ("Please set the printer scaling percent");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (5);  		PrntrPercentTxtBx.Focus ();  		return false;  	}  	if (SnagImg.OutputPrinterPageLayoutOptions.ScalingType == snagPrintScale.spsFixedSize) {  		if (PrntrHeightTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrHeightTxtBx.Text) < 1) {  			MessageBox.Show ("Please set the printer scaling height");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (5);  			PrntrHeightTxtBx.Focus ();  			return false;  		}  		if (PrntrWidthTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrWidthTxtBx.Text) < 1) {  			MessageBox.Show ("Please set the printer scaling width");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (5);  			PrntrWidthTxtBx.Focus ();  			return false;  		}  	}  	SnagImg.OutputPrinterPageLayoutOptions.MarginLeft = Helpers.ConvertToNumeric (MarginLeftTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.MarginRight = Helpers.ConvertToNumeric (MarginRightTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.MarginTop = Helpers.ConvertToNumeric (MarginTopTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.MarginBottom = Helpers.ConvertToNumeric (MarginBottomTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.Scale = Helpers.ConvertToNumeric (PrntrPercentTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.Height = Helpers.ConvertToNumeric (PrntrHeightTxtBx.Text);  	SnagImg.OutputPrinterPageLayoutOptions.Width = Helpers.ConvertToNumeric (PrntrWidthTxtBx.Text);  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (PrntrNameTxtBx.TextLength < 1 || PrntrDriverTxtBx.TextLength < 1 || PrntrPortTxtBx.TextLength < 1) {  	MessageBox.Show ("Please select a printer");  	OutputTabControl.Focus ();  	OutputTabControl.SelectTab (5);  	PrinterSelectBttn.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: OutputTabControl.SelectTab (5);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (SnagImg.OutputPrinterPageLayoutOptions.ScalingType == snagPrintScale.spsPercentScale && (PrntrPercentTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrPercentTxtBx.Text) < 1)) {  	MessageBox.Show ("Please set the printer scaling percent");  	OutputTabControl.Focus ();  	OutputTabControl.SelectTab (5);  	PrntrPercentTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: OutputTabControl.SelectTab (5);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (SnagImg.OutputPrinterPageLayoutOptions.ScalingType == snagPrintScale.spsFixedSize) {  	if (PrntrHeightTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrHeightTxtBx.Text) < 1) {  		MessageBox.Show ("Please set the printer scaling height");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (5);  		PrntrHeightTxtBx.Focus ();  		return false;  	}  	if (PrntrWidthTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrWidthTxtBx.Text) < 1) {  		MessageBox.Show ("Please set the printer scaling width");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (5);  		PrntrWidthTxtBx.Focus ();  		return false;  	}  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (SnagImg.OutputPrinterPageLayoutOptions.ScalingType == snagPrintScale.spsFixedSize) {  	if (PrntrHeightTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrHeightTxtBx.Text) < 1) {  		MessageBox.Show ("Please set the printer scaling height");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (5);  		PrntrHeightTxtBx.Focus ();  		return false;  	}  	if (PrntrWidthTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrWidthTxtBx.Text) < 1) {  		MessageBox.Show ("Please set the printer scaling width");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (5);  		PrntrWidthTxtBx.Focus ();  		return false;  	}  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (PrntrHeightTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrHeightTxtBx.Text) < 1) {  	MessageBox.Show ("Please set the printer scaling height");  	OutputTabControl.Focus ();  	OutputTabControl.SelectTab (5);  	PrntrHeightTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: OutputTabControl.SelectTab (5);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (PrntrWidthTxtBx.TextLength < 1 || Helpers.ConvertToNumeric (PrntrWidthTxtBx.Text) < 1) {  	MessageBox.Show ("Please set the printer scaling width");  	OutputTabControl.Focus ();  	OutputTabControl.SelectTab (5);  	PrntrWidthTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: OutputTabControl.SelectTab (5);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (OutputType.Text == "FTP") {  	if (TFPServerNameTxtBx.TextLength < 1) {  		MessageBox.Show ("Please fill in the FTP server name");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (3);  		TFPServerNameTxtBx.Focus ();  		return false;  	}  	if (FTPAuthChkBx.Checked) {  		if (FTPUsernameTxtBx.TextLength < 1) {  			MessageBox.Show ("Please fill in the user name for the FTP server");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (3);  			FTPUsernameTxtBx.Focus ();  			return false;  		}  		if (FTPPasswordTxtBx.TextLength < 1) {  			MessageBox.Show ("Please fill in the password for the FTP server");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (3);  			FTPPasswordTxtBx.Focus ();  			return false;  		}  	}  	if (FTPProxyChkBx.Checked && FTPProxyTxtBx.TextLength < 1) {  		MessageBox.Show ("Please fill in the FTP proxy server and port");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (3);  		FTPProxyTxtBx.Focus ();  		return false;  	}  	SnagImg.OutputFTPOptions.Port = Helpers.ConvertToNumeric (FTPPortTxtBx.Text);  	SnagImg.OutputFTPOptions.RemotePath = FTPServerPathTxtBx.Text;  	SnagImg.OutputFTPOptions.Server = TFPServerNameTxtBx.Text;  	SnagImg.OutputFTPOptions.UserName = FTPUsernameTxtBx.Text;  	SnagImg.OutputFTPOptions.Password = FTPPasswordTxtBx.Text;  	SnagImg.OutputFTPOptions.ProxyServer = FTPProxyTxtBx.Text;  	SnagImg.OutputFTPOptions.SequenceLimit = Helpers.ConvertToNumeric (FTPSequenceTxBx.Text);  	SnagImg.OutputFTPOptions.Filename = FTPFilenameTxtBx.Text;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (OutputType.Text == "FTP") {  	if (TFPServerNameTxtBx.TextLength < 1) {  		MessageBox.Show ("Please fill in the FTP server name");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (3);  		TFPServerNameTxtBx.Focus ();  		return false;  	}  	if (FTPAuthChkBx.Checked) {  		if (FTPUsernameTxtBx.TextLength < 1) {  			MessageBox.Show ("Please fill in the user name for the FTP server");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (3);  			FTPUsernameTxtBx.Focus ();  			return false;  		}  		if (FTPPasswordTxtBx.TextLength < 1) {  			MessageBox.Show ("Please fill in the password for the FTP server");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (3);  			FTPPasswordTxtBx.Focus ();  			return false;  		}  	}  	if (FTPProxyChkBx.Checked && FTPProxyTxtBx.TextLength < 1) {  		MessageBox.Show ("Please fill in the FTP proxy server and port");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (3);  		FTPProxyTxtBx.Focus ();  		return false;  	}  	SnagImg.OutputFTPOptions.Port = Helpers.ConvertToNumeric (FTPPortTxtBx.Text);  	SnagImg.OutputFTPOptions.RemotePath = FTPServerPathTxtBx.Text;  	SnagImg.OutputFTPOptions.Server = TFPServerNameTxtBx.Text;  	SnagImg.OutputFTPOptions.UserName = FTPUsernameTxtBx.Text;  	SnagImg.OutputFTPOptions.Password = FTPPasswordTxtBx.Text;  	SnagImg.OutputFTPOptions.ProxyServer = FTPProxyTxtBx.Text;  	SnagImg.OutputFTPOptions.SequenceLimit = Helpers.ConvertToNumeric (FTPSequenceTxBx.Text);  	SnagImg.OutputFTPOptions.Filename = FTPFilenameTxtBx.Text;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (OutputType.Text == "FTP") {  	if (TFPServerNameTxtBx.TextLength < 1) {  		MessageBox.Show ("Please fill in the FTP server name");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (3);  		TFPServerNameTxtBx.Focus ();  		return false;  	}  	if (FTPAuthChkBx.Checked) {  		if (FTPUsernameTxtBx.TextLength < 1) {  			MessageBox.Show ("Please fill in the user name for the FTP server");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (3);  			FTPUsernameTxtBx.Focus ();  			return false;  		}  		if (FTPPasswordTxtBx.TextLength < 1) {  			MessageBox.Show ("Please fill in the password for the FTP server");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (3);  			FTPPasswordTxtBx.Focus ();  			return false;  		}  	}  	if (FTPProxyChkBx.Checked && FTPProxyTxtBx.TextLength < 1) {  		MessageBox.Show ("Please fill in the FTP proxy server and port");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (3);  		FTPProxyTxtBx.Focus ();  		return false;  	}  	SnagImg.OutputFTPOptions.Port = Helpers.ConvertToNumeric (FTPPortTxtBx.Text);  	SnagImg.OutputFTPOptions.RemotePath = FTPServerPathTxtBx.Text;  	SnagImg.OutputFTPOptions.Server = TFPServerNameTxtBx.Text;  	SnagImg.OutputFTPOptions.UserName = FTPUsernameTxtBx.Text;  	SnagImg.OutputFTPOptions.Password = FTPPasswordTxtBx.Text;  	SnagImg.OutputFTPOptions.ProxyServer = FTPProxyTxtBx.Text;  	SnagImg.OutputFTPOptions.SequenceLimit = Helpers.ConvertToNumeric (FTPSequenceTxBx.Text);  	SnagImg.OutputFTPOptions.Filename = FTPFilenameTxtBx.Text;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (OutputType.Text == "FTP") {  	if (TFPServerNameTxtBx.TextLength < 1) {  		MessageBox.Show ("Please fill in the FTP server name");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (3);  		TFPServerNameTxtBx.Focus ();  		return false;  	}  	if (FTPAuthChkBx.Checked) {  		if (FTPUsernameTxtBx.TextLength < 1) {  			MessageBox.Show ("Please fill in the user name for the FTP server");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (3);  			FTPUsernameTxtBx.Focus ();  			return false;  		}  		if (FTPPasswordTxtBx.TextLength < 1) {  			MessageBox.Show ("Please fill in the password for the FTP server");  			OutputTabControl.Focus ();  			OutputTabControl.SelectTab (3);  			FTPPasswordTxtBx.Focus ();  			return false;  		}  	}  	if (FTPProxyChkBx.Checked && FTPProxyTxtBx.TextLength < 1) {  		MessageBox.Show ("Please fill in the FTP proxy server and port");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (3);  		FTPProxyTxtBx.Focus ();  		return false;  	}  	SnagImg.OutputFTPOptions.Port = Helpers.ConvertToNumeric (FTPPortTxtBx.Text);  	SnagImg.OutputFTPOptions.RemotePath = FTPServerPathTxtBx.Text;  	SnagImg.OutputFTPOptions.Server = TFPServerNameTxtBx.Text;  	SnagImg.OutputFTPOptions.UserName = FTPUsernameTxtBx.Text;  	SnagImg.OutputFTPOptions.Password = FTPPasswordTxtBx.Text;  	SnagImg.OutputFTPOptions.ProxyServer = FTPProxyTxtBx.Text;  	SnagImg.OutputFTPOptions.SequenceLimit = Helpers.ConvertToNumeric (FTPSequenceTxBx.Text);  	SnagImg.OutputFTPOptions.Filename = FTPFilenameTxtBx.Text;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (TFPServerNameTxtBx.TextLength < 1) {  	MessageBox.Show ("Please fill in the FTP server name");  	OutputTabControl.Focus ();  	OutputTabControl.SelectTab (3);  	TFPServerNameTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: OutputTabControl.SelectTab (3);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (FTPAuthChkBx.Checked) {  	if (FTPUsernameTxtBx.TextLength < 1) {  		MessageBox.Show ("Please fill in the user name for the FTP server");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (3);  		FTPUsernameTxtBx.Focus ();  		return false;  	}  	if (FTPPasswordTxtBx.TextLength < 1) {  		MessageBox.Show ("Please fill in the password for the FTP server");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (3);  		FTPPasswordTxtBx.Focus ();  		return false;  	}  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (FTPAuthChkBx.Checked) {  	if (FTPUsernameTxtBx.TextLength < 1) {  		MessageBox.Show ("Please fill in the user name for the FTP server");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (3);  		FTPUsernameTxtBx.Focus ();  		return false;  	}  	if (FTPPasswordTxtBx.TextLength < 1) {  		MessageBox.Show ("Please fill in the password for the FTP server");  		OutputTabControl.Focus ();  		OutputTabControl.SelectTab (3);  		FTPPasswordTxtBx.Focus ();  		return false;  	}  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (FTPUsernameTxtBx.TextLength < 1) {  	MessageBox.Show ("Please fill in the user name for the FTP server");  	OutputTabControl.Focus ();  	OutputTabControl.SelectTab (3);  	FTPUsernameTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: OutputTabControl.SelectTab (3);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (FTPPasswordTxtBx.TextLength < 1) {  	MessageBox.Show ("Please fill in the password for the FTP server");  	OutputTabControl.Focus ();  	OutputTabControl.SelectTab (3);  	FTPPasswordTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: OutputTabControl.SelectTab (3);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: if (FTPProxyChkBx.Checked && FTPProxyTxtBx.TextLength < 1) {  	MessageBox.Show ("Please fill in the FTP proxy server and port");  	OutputTabControl.Focus ();  	OutputTabControl.SelectTab (3);  	FTPProxyTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetOutputOptions,The following statement contains a magic number: OutputTabControl.SelectTab (3);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (EnableWatermarkChkBx.Checked) {  	if (WatermarkFileTxtBx.TextLength < 1) {  		MessageBox.Show ("Please select a image for to use for the watermark");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkBrowseBttn.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) > 1000) {  		MessageBox.Show ("Please enter a watermark depth between zero and 1000");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkDepthTxtBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark horizontal offset between zero and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkHOffChkBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark vertical offset between zero and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkVOffChkBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) < 1 || Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark scaling size between 1 and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkSizeTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.Watermark.OffsetHorizontal = Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text);  	SnagImg.Filters.Watermark.OffsetVertical = Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text);  	SnagImg.Filters.Watermark.Scale = Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text);  	SnagImg.Filters.Watermark.EmbossDepth = Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text);  	SnagImg.Filters.Watermark.ImageFilename = WatermarkFileTxtBx.Text;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (EnableWatermarkChkBx.Checked) {  	if (WatermarkFileTxtBx.TextLength < 1) {  		MessageBox.Show ("Please select a image for to use for the watermark");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkBrowseBttn.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) > 1000) {  		MessageBox.Show ("Please enter a watermark depth between zero and 1000");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkDepthTxtBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark horizontal offset between zero and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkHOffChkBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark vertical offset between zero and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkVOffChkBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) < 1 || Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark scaling size between 1 and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkSizeTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.Watermark.OffsetHorizontal = Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text);  	SnagImg.Filters.Watermark.OffsetVertical = Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text);  	SnagImg.Filters.Watermark.Scale = Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text);  	SnagImg.Filters.Watermark.EmbossDepth = Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text);  	SnagImg.Filters.Watermark.ImageFilename = WatermarkFileTxtBx.Text;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (EnableWatermarkChkBx.Checked) {  	if (WatermarkFileTxtBx.TextLength < 1) {  		MessageBox.Show ("Please select a image for to use for the watermark");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkBrowseBttn.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) > 1000) {  		MessageBox.Show ("Please enter a watermark depth between zero and 1000");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkDepthTxtBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark horizontal offset between zero and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkHOffChkBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark vertical offset between zero and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkVOffChkBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) < 1 || Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark scaling size between 1 and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkSizeTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.Watermark.OffsetHorizontal = Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text);  	SnagImg.Filters.Watermark.OffsetVertical = Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text);  	SnagImg.Filters.Watermark.Scale = Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text);  	SnagImg.Filters.Watermark.EmbossDepth = Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text);  	SnagImg.Filters.Watermark.ImageFilename = WatermarkFileTxtBx.Text;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (EnableWatermarkChkBx.Checked) {  	if (WatermarkFileTxtBx.TextLength < 1) {  		MessageBox.Show ("Please select a image for to use for the watermark");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkBrowseBttn.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) > 1000) {  		MessageBox.Show ("Please enter a watermark depth between zero and 1000");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkDepthTxtBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark horizontal offset between zero and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkHOffChkBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark vertical offset between zero and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkVOffChkBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) < 1 || Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark scaling size between 1 and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkSizeTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.Watermark.OffsetHorizontal = Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text);  	SnagImg.Filters.Watermark.OffsetVertical = Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text);  	SnagImg.Filters.Watermark.Scale = Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text);  	SnagImg.Filters.Watermark.EmbossDepth = Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text);  	SnagImg.Filters.Watermark.ImageFilename = WatermarkFileTxtBx.Text;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (EnableWatermarkChkBx.Checked) {  	if (WatermarkFileTxtBx.TextLength < 1) {  		MessageBox.Show ("Please select a image for to use for the watermark");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkBrowseBttn.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) > 1000) {  		MessageBox.Show ("Please enter a watermark depth between zero and 1000");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkDepthTxtBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark horizontal offset between zero and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkHOffChkBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark vertical offset between zero and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkVOffChkBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) < 1 || Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark scaling size between 1 and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkSizeTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.Watermark.OffsetHorizontal = Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text);  	SnagImg.Filters.Watermark.OffsetVertical = Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text);  	SnagImg.Filters.Watermark.Scale = Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text);  	SnagImg.Filters.Watermark.EmbossDepth = Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text);  	SnagImg.Filters.Watermark.ImageFilename = WatermarkFileTxtBx.Text;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (EnableWatermarkChkBx.Checked) {  	if (WatermarkFileTxtBx.TextLength < 1) {  		MessageBox.Show ("Please select a image for to use for the watermark");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkBrowseBttn.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) > 1000) {  		MessageBox.Show ("Please enter a watermark depth between zero and 1000");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkDepthTxtBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark horizontal offset between zero and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkHOffChkBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark vertical offset between zero and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkVOffChkBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) < 1 || Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark scaling size between 1 and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkSizeTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.Watermark.OffsetHorizontal = Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text);  	SnagImg.Filters.Watermark.OffsetVertical = Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text);  	SnagImg.Filters.Watermark.Scale = Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text);  	SnagImg.Filters.Watermark.EmbossDepth = Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text);  	SnagImg.Filters.Watermark.ImageFilename = WatermarkFileTxtBx.Text;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (EnableWatermarkChkBx.Checked) {  	if (WatermarkFileTxtBx.TextLength < 1) {  		MessageBox.Show ("Please select a image for to use for the watermark");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkBrowseBttn.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) > 1000) {  		MessageBox.Show ("Please enter a watermark depth between zero and 1000");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkDepthTxtBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark horizontal offset between zero and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkHOffChkBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark vertical offset between zero and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkVOffChkBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) < 1 || Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark scaling size between 1 and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkSizeTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.Watermark.OffsetHorizontal = Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text);  	SnagImg.Filters.Watermark.OffsetVertical = Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text);  	SnagImg.Filters.Watermark.Scale = Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text);  	SnagImg.Filters.Watermark.EmbossDepth = Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text);  	SnagImg.Filters.Watermark.ImageFilename = WatermarkFileTxtBx.Text;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (EnableWatermarkChkBx.Checked) {  	if (WatermarkFileTxtBx.TextLength < 1) {  		MessageBox.Show ("Please select a image for to use for the watermark");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkBrowseBttn.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) > 1000) {  		MessageBox.Show ("Please enter a watermark depth between zero and 1000");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkDepthTxtBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark horizontal offset between zero and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkHOffChkBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark vertical offset between zero and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkVOffChkBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) < 1 || Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark scaling size between 1 and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkSizeTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.Watermark.OffsetHorizontal = Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text);  	SnagImg.Filters.Watermark.OffsetVertical = Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text);  	SnagImg.Filters.Watermark.Scale = Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text);  	SnagImg.Filters.Watermark.EmbossDepth = Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text);  	SnagImg.Filters.Watermark.ImageFilename = WatermarkFileTxtBx.Text;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (EnableWatermarkChkBx.Checked) {  	if (WatermarkFileTxtBx.TextLength < 1) {  		MessageBox.Show ("Please select a image for to use for the watermark");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkBrowseBttn.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) > 1000) {  		MessageBox.Show ("Please enter a watermark depth between zero and 1000");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkDepthTxtBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark horizontal offset between zero and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkHOffChkBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark vertical offset between zero and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkVOffChkBx.Focus ();  		return false;  	}  	if (Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) < 1 || Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) > 100) {  		MessageBox.Show ("Please enter a watermark scaling size between 1 and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (2);  		WatermarkSizeTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.Watermark.OffsetHorizontal = Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text);  	SnagImg.Filters.Watermark.OffsetVertical = Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text);  	SnagImg.Filters.Watermark.Scale = Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text);  	SnagImg.Filters.Watermark.EmbossDepth = Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text);  	SnagImg.Filters.Watermark.ImageFilename = WatermarkFileTxtBx.Text;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (WatermarkFileTxtBx.TextLength < 1) {  	MessageBox.Show ("Please select a image for to use for the watermark");  	tabFilters.Focus ();  	tabFilters.SelectTab (2);  	WatermarkBrowseBttn.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: tabFilters.SelectTab (2);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) > 1000) {  	MessageBox.Show ("Please enter a watermark depth between zero and 1000");  	tabFilters.Focus ();  	tabFilters.SelectTab (2);  	WatermarkDepthTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkDepthTxtBx.Text) > 1000) {  	MessageBox.Show ("Please enter a watermark depth between zero and 1000");  	tabFilters.Focus ();  	tabFilters.SelectTab (2);  	WatermarkDepthTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: tabFilters.SelectTab (2);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) > 100) {  	MessageBox.Show ("Please enter a watermark horizontal offset between zero and 100");  	tabFilters.Focus ();  	tabFilters.SelectTab (2);  	WatermarkHOffChkBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkHOffChkBx.Text) > 100) {  	MessageBox.Show ("Please enter a watermark horizontal offset between zero and 100");  	tabFilters.Focus ();  	tabFilters.SelectTab (2);  	WatermarkHOffChkBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: tabFilters.SelectTab (2);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) > 100) {  	MessageBox.Show ("Please enter a watermark vertical offset between zero and 100");  	tabFilters.Focus ();  	tabFilters.SelectTab (2);  	WatermarkVOffChkBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) < 0 || Helpers.ConvertToNumeric (WatermarkVOffChkBx.Text) > 100) {  	MessageBox.Show ("Please enter a watermark vertical offset between zero and 100");  	tabFilters.Focus ();  	tabFilters.SelectTab (2);  	WatermarkVOffChkBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: tabFilters.SelectTab (2);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) < 1 || Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) > 100) {  	MessageBox.Show ("Please enter a watermark scaling size between 1 and 100");  	tabFilters.Focus ();  	tabFilters.SelectTab (2);  	WatermarkSizeTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) < 1 || Helpers.ConvertToNumeric (WatermarkSizeTxtBx.Text) > 100) {  	MessageBox.Show ("Please enter a watermark scaling size between 1 and 100");  	tabFilters.Focus ();  	tabFilters.SelectTab (2);  	WatermarkSizeTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: tabFilters.SelectTab (2);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (ScalingMethodSelector.Text != "None" && ScalingMethodSelector.Text != "Height" && Helpers.ConvertToNumeric (ScalingWidthTxtBx.Text) < 1) {  	MessageBox.Show ("Scale width must be greater than zero");  	tabFilters.Focus ();  	tabFilters.SelectTab (3);  	ScalingWidthTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: tabFilters.SelectTab (3);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: switch (ScalingMethodSelector.Text) {  case "Percentage": {  	if (ScalingAspectRatioChkBx.Checked) {  		//Scale whole image by a percentage  		SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismPercentage;  		SnagImg.Filters.Scale.Factor = Helpers.ConvertToNumeric (ScalingWidthTxtBx.Text);  	}  	else {  		//Scale the width and height independently by percentage  		if (Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text) < 1) {  			MessageBox.Show ("Scale height must be greater than zero");  			tabFilters.Focus ();  			tabFilters.SelectTab (3);  			ScalingHeightTxtBx.Focus ();  			return false;  		}  		SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismCustom;  		SnagImg.Filters.Scale.ScaleBy = snagImageScaleBy.sisbFactor;  		SnagImg.Filters.Scale.FactorWidth = Helpers.ConvertToNumeric (ScalingWidthTxtBx.Text);  		SnagImg.Filters.Scale.FactorHeight = Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text);  	}  	break;  }  case "Width": {  	//Scale only the width' unless keep aspect ratio is checked. Otherwise' scale  	//the whole image based on the width entered.  	SnagImg.Filters.Scale.Width = Helpers.ConvertToNumeric (ScalingWidthTxtBx.Text);  	SnagImg.Filters.Scale.ScaleBy = snagImageScaleBy.sisbWidth;  	SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismCustom;  	break;  }  case "Height": {  	//Scale only the height' unless keep aspect ratio is checked. Otherwise' scale  	//the whole image based on the height entered.  	if (Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text) < 1) {  		MessageBox.Show ("Scale height must be greater than zero");  		tabFilters.Focus ();  		tabFilters.SelectTab (3);  		ScalingHeightTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.Scale.Height = Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text);  	SnagImg.Filters.Scale.ScaleBy = snagImageScaleBy.sisbHeight;  	SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismCustom;  	break;  }  case "Fixed": {  	//Scale the image based on width and height input.  	if (Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text) < 1) {  		MessageBox.Show ("Scale height must be greater than zero");  		tabFilters.Focus ();  		tabFilters.SelectTab (3);  		ScalingHeightTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.Scale.Width = Helpers.ConvertToNumeric (ScalingWidthTxtBx.Text);  	SnagImg.Filters.Scale.Height = Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text);  	SnagImg.Filters.Scale.ScaleBy = snagImageScaleBy.sisbWidthAndHeight;  	SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismCustom;  	break;  }  default://None   {  	//Turn off the scaling filter  	SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismNone;  	break;  }  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: switch (ScalingMethodSelector.Text) {  case "Percentage": {  	if (ScalingAspectRatioChkBx.Checked) {  		//Scale whole image by a percentage  		SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismPercentage;  		SnagImg.Filters.Scale.Factor = Helpers.ConvertToNumeric (ScalingWidthTxtBx.Text);  	}  	else {  		//Scale the width and height independently by percentage  		if (Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text) < 1) {  			MessageBox.Show ("Scale height must be greater than zero");  			tabFilters.Focus ();  			tabFilters.SelectTab (3);  			ScalingHeightTxtBx.Focus ();  			return false;  		}  		SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismCustom;  		SnagImg.Filters.Scale.ScaleBy = snagImageScaleBy.sisbFactor;  		SnagImg.Filters.Scale.FactorWidth = Helpers.ConvertToNumeric (ScalingWidthTxtBx.Text);  		SnagImg.Filters.Scale.FactorHeight = Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text);  	}  	break;  }  case "Width": {  	//Scale only the width' unless keep aspect ratio is checked. Otherwise' scale  	//the whole image based on the width entered.  	SnagImg.Filters.Scale.Width = Helpers.ConvertToNumeric (ScalingWidthTxtBx.Text);  	SnagImg.Filters.Scale.ScaleBy = snagImageScaleBy.sisbWidth;  	SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismCustom;  	break;  }  case "Height": {  	//Scale only the height' unless keep aspect ratio is checked. Otherwise' scale  	//the whole image based on the height entered.  	if (Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text) < 1) {  		MessageBox.Show ("Scale height must be greater than zero");  		tabFilters.Focus ();  		tabFilters.SelectTab (3);  		ScalingHeightTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.Scale.Height = Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text);  	SnagImg.Filters.Scale.ScaleBy = snagImageScaleBy.sisbHeight;  	SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismCustom;  	break;  }  case "Fixed": {  	//Scale the image based on width and height input.  	if (Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text) < 1) {  		MessageBox.Show ("Scale height must be greater than zero");  		tabFilters.Focus ();  		tabFilters.SelectTab (3);  		ScalingHeightTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.Scale.Width = Helpers.ConvertToNumeric (ScalingWidthTxtBx.Text);  	SnagImg.Filters.Scale.Height = Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text);  	SnagImg.Filters.Scale.ScaleBy = snagImageScaleBy.sisbWidthAndHeight;  	SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismCustom;  	break;  }  default://None   {  	//Turn off the scaling filter  	SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismNone;  	break;  }  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: switch (ScalingMethodSelector.Text) {  case "Percentage": {  	if (ScalingAspectRatioChkBx.Checked) {  		//Scale whole image by a percentage  		SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismPercentage;  		SnagImg.Filters.Scale.Factor = Helpers.ConvertToNumeric (ScalingWidthTxtBx.Text);  	}  	else {  		//Scale the width and height independently by percentage  		if (Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text) < 1) {  			MessageBox.Show ("Scale height must be greater than zero");  			tabFilters.Focus ();  			tabFilters.SelectTab (3);  			ScalingHeightTxtBx.Focus ();  			return false;  		}  		SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismCustom;  		SnagImg.Filters.Scale.ScaleBy = snagImageScaleBy.sisbFactor;  		SnagImg.Filters.Scale.FactorWidth = Helpers.ConvertToNumeric (ScalingWidthTxtBx.Text);  		SnagImg.Filters.Scale.FactorHeight = Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text);  	}  	break;  }  case "Width": {  	//Scale only the width' unless keep aspect ratio is checked. Otherwise' scale  	//the whole image based on the width entered.  	SnagImg.Filters.Scale.Width = Helpers.ConvertToNumeric (ScalingWidthTxtBx.Text);  	SnagImg.Filters.Scale.ScaleBy = snagImageScaleBy.sisbWidth;  	SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismCustom;  	break;  }  case "Height": {  	//Scale only the height' unless keep aspect ratio is checked. Otherwise' scale  	//the whole image based on the height entered.  	if (Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text) < 1) {  		MessageBox.Show ("Scale height must be greater than zero");  		tabFilters.Focus ();  		tabFilters.SelectTab (3);  		ScalingHeightTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.Scale.Height = Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text);  	SnagImg.Filters.Scale.ScaleBy = snagImageScaleBy.sisbHeight;  	SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismCustom;  	break;  }  case "Fixed": {  	//Scale the image based on width and height input.  	if (Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text) < 1) {  		MessageBox.Show ("Scale height must be greater than zero");  		tabFilters.Focus ();  		tabFilters.SelectTab (3);  		ScalingHeightTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.Scale.Width = Helpers.ConvertToNumeric (ScalingWidthTxtBx.Text);  	SnagImg.Filters.Scale.Height = Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text);  	SnagImg.Filters.Scale.ScaleBy = snagImageScaleBy.sisbWidthAndHeight;  	SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismCustom;  	break;  }  default://None   {  	//Turn off the scaling filter  	SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismNone;  	break;  }  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (ScalingAspectRatioChkBx.Checked) {  	//Scale whole image by a percentage  	SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismPercentage;  	SnagImg.Filters.Scale.Factor = Helpers.ConvertToNumeric (ScalingWidthTxtBx.Text);  }  else {  	//Scale the width and height independently by percentage  	if (Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text) < 1) {  		MessageBox.Show ("Scale height must be greater than zero");  		tabFilters.Focus ();  		tabFilters.SelectTab (3);  		ScalingHeightTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.Scale.ScaleMethod = snagImageScaleMethod.sismCustom;  	SnagImg.Filters.Scale.ScaleBy = snagImageScaleBy.sisbFactor;  	SnagImg.Filters.Scale.FactorWidth = Helpers.ConvertToNumeric (ScalingWidthTxtBx.Text);  	SnagImg.Filters.Scale.FactorHeight = Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text);  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text) < 1) {  	MessageBox.Show ("Scale height must be greater than zero");  	tabFilters.Focus ();  	tabFilters.SelectTab (3);  	ScalingHeightTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: tabFilters.SelectTab (3);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text) < 1) {  	MessageBox.Show ("Scale height must be greater than zero");  	tabFilters.Focus ();  	tabFilters.SelectTab (3);  	ScalingHeightTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: tabFilters.SelectTab (3);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (Helpers.ConvertToNumeric (ScalingHeightTxtBx.Text) < 1) {  	MessageBox.Show ("Scale height must be greater than zero");  	tabFilters.Focus ();  	tabFilters.SelectTab (3);  	ScalingHeightTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: tabFilters.SelectTab (3);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (ColorConvertSelector.Text != "None") {  	if (ColorConvertSelector.Text == "Monochrome") {  		int threshold = Helpers.ConvertToNumeric (MonoIntensityTxtBx.Text);  		if (threshold < 0 || threshold > 100) {  			MessageBox.Show ("Monochrome intensity threshold must be between 0 and 100");  			tabFilters.Focus ();  			tabFilters.SelectTab (4);  			MonoIntensityTxtBx.Focus ();  			return false;  		}  		SnagImg.Filters.ColorConversion.MonochromeThreshold = threshold;  	}  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (ColorConvertSelector.Text != "None") {  	if (ColorConvertSelector.Text == "Monochrome") {  		int threshold = Helpers.ConvertToNumeric (MonoIntensityTxtBx.Text);  		if (threshold < 0 || threshold > 100) {  			MessageBox.Show ("Monochrome intensity threshold must be between 0 and 100");  			tabFilters.Focus ();  			tabFilters.SelectTab (4);  			MonoIntensityTxtBx.Focus ();  			return false;  		}  		SnagImg.Filters.ColorConversion.MonochromeThreshold = threshold;  	}  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (ColorConvertSelector.Text == "Monochrome") {  	int threshold = Helpers.ConvertToNumeric (MonoIntensityTxtBx.Text);  	if (threshold < 0 || threshold > 100) {  		MessageBox.Show ("Monochrome intensity threshold must be between 0 and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (4);  		MonoIntensityTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.ColorConversion.MonochromeThreshold = threshold;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (ColorConvertSelector.Text == "Monochrome") {  	int threshold = Helpers.ConvertToNumeric (MonoIntensityTxtBx.Text);  	if (threshold < 0 || threshold > 100) {  		MessageBox.Show ("Monochrome intensity threshold must be between 0 and 100");  		tabFilters.Focus ();  		tabFilters.SelectTab (4);  		MonoIntensityTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.ColorConversion.MonochromeThreshold = threshold;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (threshold < 0 || threshold > 100) {  	MessageBox.Show ("Monochrome intensity threshold must be between 0 and 100");  	tabFilters.Focus ();  	tabFilters.SelectTab (4);  	MonoIntensityTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (threshold < 0 || threshold > 100) {  	MessageBox.Show ("Monochrome intensity threshold must be between 0 and 100");  	tabFilters.Focus ();  	tabFilters.SelectTab (4);  	MonoIntensityTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: tabFilters.SelectTab (4);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (EnableCaptionChkBx.Checked) {  	if (!CaptionPromptChkBx.Checked && CaptionTxtBx.TextLength < 1) {  		MessageBox.Show ("Please check prompt for caption or enter the caption text");  		tabFilters.Focus ();  		tabFilters.SelectTab (5);  		CaptionPromptChkBx.Focus ();  		return false;  	}  	SnagImg.Filters.Annotation.CaptionText = CaptionTxtBx.Text;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (!CaptionPromptChkBx.Checked && CaptionTxtBx.TextLength < 1) {  	MessageBox.Show ("Please check prompt for caption or enter the caption text");  	tabFilters.Focus ();  	tabFilters.SelectTab (5);  	CaptionPromptChkBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: tabFilters.SelectTab (5);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (ColorSubSelector.Text != "None") {  	if (ColorSubSelector.Text == "Custom") {  		if (ColorSubList.Items.Count < 1) {  			MessageBox.Show ("Please add a custom color substitution filter to the list");  			tabFilters.Focus ();  			tabFilters.SelectTab (8);  			ColorSubAddBttn.Focus ();  			return false;  		}  	}  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (ColorSubSelector.Text == "Custom") {  	if (ColorSubList.Items.Count < 1) {  		MessageBox.Show ("Please add a custom color substitution filter to the list");  		tabFilters.Focus ();  		tabFilters.SelectTab (8);  		ColorSubAddBttn.Focus ();  		return false;  	}  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (ColorSubList.Items.Count < 1) {  	MessageBox.Show ("Please add a custom color substitution filter to the list");  	tabFilters.Focus ();  	tabFilters.SelectTab (8);  	ColorSubAddBttn.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: tabFilters.SelectTab (8);  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (!ResolutionChkBx.Checked) {  	if (Helpers.ConvertToNumeric (ResolutionTxtBx.Text) < 0 || Helpers.ConvertToNumeric (ResolutionTxtBx.Text) > 32000) {  		MessageBox.Show ("DPI resolution must be set between 0 and 32000");  		tabFilters.Focus ();  		tabFilters.SelectTab (7);  		ResolutionTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.Resolution.Resolution = Helpers.ConvertToNumeric (ResolutionTxtBx.Text);  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (!ResolutionChkBx.Checked) {  	if (Helpers.ConvertToNumeric (ResolutionTxtBx.Text) < 0 || Helpers.ConvertToNumeric (ResolutionTxtBx.Text) > 32000) {  		MessageBox.Show ("DPI resolution must be set between 0 and 32000");  		tabFilters.Focus ();  		tabFilters.SelectTab (7);  		ResolutionTxtBx.Focus ();  		return false;  	}  	SnagImg.Filters.Resolution.Resolution = Helpers.ConvertToNumeric (ResolutionTxtBx.Text);  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (Helpers.ConvertToNumeric (ResolutionTxtBx.Text) < 0 || Helpers.ConvertToNumeric (ResolutionTxtBx.Text) > 32000) {  	MessageBox.Show ("DPI resolution must be set between 0 and 32000");  	tabFilters.Focus ();  	tabFilters.SelectTab (7);  	ResolutionTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: if (Helpers.ConvertToNumeric (ResolutionTxtBx.Text) < 0 || Helpers.ConvertToNumeric (ResolutionTxtBx.Text) > 32000) {  	MessageBox.Show ("DPI resolution must be set between 0 and 32000");  	tabFilters.Focus ();  	tabFilters.SelectTab (7);  	ResolutionTxtBx.Focus ();  	return false;  }  
Magic Number,ImageCaptureSample,MainForm,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Form1.cs,SetCaptureFilterOptions,The following statement contains a magic number: tabFilters.SelectTab (7);  
Magic Number,ImageCaptureSample,Helpers,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Helpers.cs,ConvertToRGB,The following statement contains a magic number: rgb = (rgb | clr.G) << 8;  
Magic Number,ImageCaptureSample,Helpers,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Helpers.cs,ConvertToCOLORREF,The following statement contains a magic number: rgb = (rgb | clr.G) << 8;  
Magic Number,ImageCaptureSample,Helpers,C:\repos\TechSmith_Snagit-COM-Samples\CSharp\Image Capture Samples\Comprehensive\Helpers.cs,ConvertRGBToColor,The following statement contains a magic number: return Color.FromArgb (255' red' green' rgb & 0xFF);  
