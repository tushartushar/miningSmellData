Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Beerendonk.Transit.Impl,AbstractEmitter,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\AbstractEmitter.cs,EmitList,Cyclomatic complexity of the method is 16
Complex Method,Beerendonk.Transit.Impl,AbstractEmitter,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\AbstractEmitter.cs,Marshal,Cyclomatic complexity of the method is 14
Complex Method,Beerendonk.Transit.Impl,JsonParser,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\JsonParser.cs,ParseList,Cyclomatic complexity of the method is 10
Complex Method,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,TryParse,Cyclomatic complexity of the method is 10
Long Parameter List,Beerendonk.Transit.Impl,IEmitter,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\IEmitter.cs,EmitString,The method has 5 parameters. Parameters: prefix' tag' s' asDictionaryKey' cache
Long Parameter List,Beerendonk.Transit.Impl,JsonVerboseEmitter,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\JsonVerboseEmitter.cs,EmitString,The method has 5 parameters. Parameters: prefix' tag' s' asDictionaryKey' cache
Long Parameter List,Beerendonk.Transit.Impl,JsonEmitter,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\JsonEmitter.cs,EmitString,The method has 5 parameters. Parameters: prefix' tag' s' asDictionaryKey' cache
Long Parameter List,Beerendonk.Transit.Impl,AbstractEmitter,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\AbstractEmitter.cs,EmitEncoded,The method has 5 parameters. Parameters: t' handler' obj' asDictionaryKey' cache
Long Parameter List,Beerendonk.Transit.Impl,AbstractEmitter,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\AbstractEmitter.cs,EmitString,The method has 5 parameters. Parameters: prefix' tag' s' asDictionaryKey' cache
Long Parameter List,Beerendonk.Transit.Impl,JsonParser,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\JsonParser.cs,JsonParser,The method has 5 parameters. Parameters: jsonTextReader' handlers' defaultHandler' dictionaryBuilder' listBuilder
Long Parameter List,Beerendonk.Transit.Impl,Link,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\Link.cs,Link,The method has 5 parameters. Parameters: href' rel' name' render' prompt
Long Parameter List,Beerendonk.Transit,TransitFactory,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\TransitFactory.cs,Link,The method has 5 parameters. Parameters: href' rel' name' prompt' render
Long Parameter List,Beerendonk.Transit,TransitFactory,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\TransitFactory.cs,Link,The method has 5 parameters. Parameters: href' rel' name' prompt' render
Long Parameter List,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,SplitDoubleIntoParts,The method has 5 parameters. Parameters: dbl' sign' exp' man' isFinite
Long Statement,Beerendonk.Transit.Impl,JsonParser,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\JsonParser.cs,ParseLong,The length of the statement  "            // TODO Use BigInteger just in case (write test' see for example TestReadBooleanDictionary where short numbers are used): " is 121.
Complex Conditional,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,BigRational,The conditional expression  "bits == null || bits.Length != 4 || (bits[3] & ~(DecimalSignMask | DecimalScaleMask)) != 0 || (bits[3] & DecimalScaleMask) > (28 << 16)"  is complex.
Magic Number,Beerendonk.Transit.Impl,AbstractEmitter,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\AbstractEmitter.cs,EmitTagged,The following statement contains a magic number: EmitListStart(2L);
Magic Number,Beerendonk.Transit.Impl,Keyword,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\Keyword.cs,GetHashCode,The following statement contains a magic number: return 17 * Value.GetHashCode();
Magic Number,Beerendonk.Transit.Impl,Symbol,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\Symbol.cs,GetHashCode,The following statement contains a magic number: return 19 * Value.GetHashCode();
Magic Number,Beerendonk.Transit.Impl,AbstractParser,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\AbstractParser.cs,ParseString,The following statement contains a magic number: switch (s[0])                      {                          case Constants.Esc:                              switch (s[1])                              {                                  case Constants.Esc:                                  case Constants.Sub:                                  case Constants.Reserved:                                      return s.Substring(1);                                  case Constants.Tag:                                      return new Tag(s.Substring(2));                                  default:                                      {                                          string tag = s.Substring(1' 1);                                          string representation = s.Length > 2 ? s.Substring(2) : string.Empty;                                          return Decode(tag' representation);                                      }                              }                          case Constants.Sub:                              if (s[1] == ' ')                              {                                  return Constants.DirectoryAsList;                              }                              break;                      }
Magic Number,Beerendonk.Transit.Impl,AbstractParser,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\AbstractParser.cs,ParseString,The following statement contains a magic number: switch (s[0])                      {                          case Constants.Esc:                              switch (s[1])                              {                                  case Constants.Esc:                                  case Constants.Sub:                                  case Constants.Reserved:                                      return s.Substring(1);                                  case Constants.Tag:                                      return new Tag(s.Substring(2));                                  default:                                      {                                          string tag = s.Substring(1' 1);                                          string representation = s.Length > 2 ? s.Substring(2) : string.Empty;                                          return Decode(tag' representation);                                      }                              }                          case Constants.Sub:                              if (s[1] == ' ')                              {                                  return Constants.DirectoryAsList;                              }                              break;                      }
Magic Number,Beerendonk.Transit.Impl,AbstractParser,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\AbstractParser.cs,ParseString,The following statement contains a magic number: switch (s[0])                      {                          case Constants.Esc:                              switch (s[1])                              {                                  case Constants.Esc:                                  case Constants.Sub:                                  case Constants.Reserved:                                      return s.Substring(1);                                  case Constants.Tag:                                      return new Tag(s.Substring(2));                                  default:                                      {                                          string tag = s.Substring(1' 1);                                          string representation = s.Length > 2 ? s.Substring(2) : string.Empty;                                          return Decode(tag' representation);                                      }                              }                          case Constants.Sub:                              if (s[1] == ' ')                              {                                  return Constants.DirectoryAsList;                              }                              break;                      }
Magic Number,Beerendonk.Transit.Impl,ReadCache,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\ReadCache.cs,CodeToIndex,The following statement contains a magic number: sz == 2
Magic Number,Beerendonk.Transit.Impl,TaggedValue,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\TaggedValue.cs,GetHashCode,The following statement contains a magic number: int result = 17;
Magic Number,Beerendonk.Transit.Impl,TaggedValue,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\TaggedValue.cs,GetHashCode,The following statement contains a magic number: result = 31 * result * tag.GetHashCode();
Magic Number,Beerendonk.Transit.Impl,TaggedValue,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\TaggedValue.cs,GetHashCode,The following statement contains a magic number: result = 31 * result * representation.GetHashCode();
Magic Number,Beerendonk.Transit.Impl.WriteHandlers,RatioWriteHandler,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\WriteHandlers\RatioWriteHandler.cs,Representation,The following statement contains a magic number: BigInteger[] l = new BigInteger[2];
Magic Number,Beerendonk.Transit.Impl.WriteHandlers,GuidWriteHandler,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Impl\WriteHandlers\GuidWriteHandler.cs,Representation,The following statement contains a magic number: long[] l = new long[2];
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,BigRational,The following statement contains a magic number: m_denominator = 1 << 52;
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,BigRational,The following statement contains a magic number: bits == null || bits.Length != 4 || (bits[3] & ~(DecimalSignMask | DecimalScaleMask)) != 0 || (bits[3] & DecimalScaleMask) > (28 << 16)
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,BigRational,The following statement contains a magic number: bits == null || bits.Length != 4 || (bits[3] & ~(DecimalSignMask | DecimalScaleMask)) != 0 || (bits[3] & DecimalScaleMask) > (28 << 16)
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,BigRational,The following statement contains a magic number: bits == null || bits.Length != 4 || (bits[3] & ~(DecimalSignMask | DecimalScaleMask)) != 0 || (bits[3] & DecimalScaleMask) > (28 << 16)
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,BigRational,The following statement contains a magic number: bits == null || bits.Length != 4 || (bits[3] & ~(DecimalSignMask | DecimalScaleMask)) != 0 || (bits[3] & DecimalScaleMask) > (28 << 16)
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,BigRational,The following statement contains a magic number: bits == null || bits.Length != 4 || (bits[3] & ~(DecimalSignMask | DecimalScaleMask)) != 0 || (bits[3] & DecimalScaleMask) > (28 << 16)
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,BigRational,The following statement contains a magic number: ulong ul = (((ulong)(uint)bits[2]) << 32) | ((ulong)(uint)bits[1]);
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,BigRational,The following statement contains a magic number: ulong ul = (((ulong)(uint)bits[2]) << 32) | ((ulong)(uint)bits[1]);
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,BigRational,The following statement contains a magic number: m_numerator = (new BigInteger(ul) << 32) | (uint)bits[0];
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,BigRational,The following statement contains a magic number: bool isNegative = (bits[3] & DecimalSignMask) != 0;
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,BigRational,The following statement contains a magic number: int scale = (bits[3] & DecimalScaleMask) >> 16;
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,BigRational,The following statement contains a magic number: int scale = (bits[3] & DecimalScaleMask) >> 16;
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,BigRational,The following statement contains a magic number: m_denominator = BigInteger.Pow(10' scale);
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,SplitDoubleIntoParts,The following statement contains a magic number: sign = 1 - ((int)(du.uu >> 62) & 2);
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,SplitDoubleIntoParts,The following statement contains a magic number: sign = 1 - ((int)(du.uu >> 62) & 2);
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,SplitDoubleIntoParts,The following statement contains a magic number: exp = (int)(du.uu >> 52) & 0x7FF;
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,SplitDoubleIntoParts,The following statement contains a magic number: exp = -1074;
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,CbitHighZero,The following statement contains a magic number: return 32 + CbitHighZero((uint)uu);
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,CbitHighZero,The following statement contains a magic number: return CbitHighZero((uint)(uu >> 32));
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,CbitHighZero,The following statement contains a magic number: return 32;
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,CbitHighZero,The following statement contains a magic number: cbit += 16;
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,CbitHighZero,The following statement contains a magic number: u <<= 16;
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,CbitHighZero,The following statement contains a magic number: cbit += 8;
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,CbitHighZero,The following statement contains a magic number: u <<= 8;
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,CbitHighZero,The following statement contains a magic number: cbit += 4;
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,CbitHighZero,The following statement contains a magic number: u <<= 4;
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,CbitHighZero,The following statement contains a magic number: cbit += 2;
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,CbitHighZero,The following statement contains a magic number: u <<= 2;
Magic Number,Beerendonk.Transit.Numerics,BigRational,C:\research\architectureSmells\repos\nforza_transit-csharp\src\Transit\Numerics\BigRational.cs,TryParse,The following statement contains a magic number: decimalPart /= 10;
