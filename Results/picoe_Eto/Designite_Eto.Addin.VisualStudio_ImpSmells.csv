Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Eto.Addin.VisualStudio.Intellisense,XamlCompletionHandler,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Intellisense\XamlCompletionHandler.cs,Exec,Cyclomatic complexity of the method is 11
Long Parameter List,Eto.Addin.VisualStudio.Editor,EditorFactory,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Editor\EditorFactory.cs,CreateEditorInstance,The method has 11 parameters. Parameters: grfCreateDoc' pszMkDocument' pszPhysicalView' pvHier' itemid' punkDocDataExisting' ppunkDocView' ppunkDocData' pbstrEditorCaption' pguidCmdUI' pgrfCDW
Long Parameter List,Eto.Addin.VisualStudio.Editor,EtoPreviewPane,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Editor\EtoPreviewPane.cs,EtoPreviewPane,The method has 5 parameters. Parameters: package' fileName' textBuffer' mainAssembly' references
Long Parameter List,Eto.Addin.VisualStudio.Editor,EtoPreviewPane,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Editor\EtoPreviewPane.cs,Exec,The method has 5 parameters. Parameters: pguidCmdGroup' nCmdID' nCmdexecopt' pvaIn' pvaOut
Long Parameter List,Eto.Addin.VisualStudio,CommandExtensions,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\IVsTextLinesExtensions.cs,AddCommand,The method has 5 parameters. Parameters: mcs' menuGroup' cmdID' commandEvent' queryEvent
Long Parameter List,Eto.Addin.VisualStudio.Intellisense,XamlCompletionHandler,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Intellisense\XamlCompletionHandler.cs,Exec,The method has 5 parameters. Parameters: pguidCmdGroup' nCmdID' nCmdexecopt' pvaIn' pvaOut
Long Parameter List,Eto.Addin.VisualStudio.Util,AdapterCommand,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Util\AdapterCommand.cs,AdapterCommand,The method has 6 parameters. Parameters: adapter' provider' menuGroup' cmdID' commandEvent' queryEvent
Long Parameter List,Eto.Addin.VisualStudio.Util,AdapterCommand,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Util\AdapterCommand.cs,Exec,The method has 5 parameters. Parameters: pguidCmdGroup' nCmdID' nCmdexecopt' pvaIn' pvaOut
Long Identifier,Eto.Addin.VisualStudio,Constants,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Constants.cs,,The length of the parameter EtoPreviewEditorFactory_string is 30.
Long Identifier,Eto.Addin.VisualStudio,Constants,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Constants.cs,,The length of the parameter EtoPreviewEditorFactoryLogicalView_string is 41.
Long Identifier,Eto.Addin.VisualStudio,Constants,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Constants.cs,,The length of the parameter EtoPreviewEditorFactoryLogicalView_guid is 39.
Long Statement,Eto.Addin.VisualStudio.Adornments,ColorAdornment,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Adornments\ColorAdornment.cs,GetInt,The length of the statement  "				if (text.StartsWith("0x") && int.TryParse(text.Substring(2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out value)) " is 126.
Long Statement,Eto.Addin.VisualStudio.Editor,EtoAdapterHandler,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Editor\EtoAdapterHandler.cs,FromContract,The length of the statement  "			view.Focusable = false; // otherwise editor loses focus when switching back to its tab.. may be a better way around this. " is 121.
Long Statement,Eto.Addin.VisualStudio.Editor,EditorFactory,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Editor\EditorFactory.cs,ToHierarchy,The length of the statement  "			// DTE does not expose the project GUID that exists at in the msbuild project file.        // Cannot use MSBuild object model because it uses a static instance of the Engine'         // and using the Project will cause it to be unloaded from the engine when the         // GC collects the variable that we declare.        " is 314.
Long Statement,Eto.Addin.VisualStudio.Editor,EtoPreviewPane,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Editor\EtoPreviewPane.cs,SetupCommands,The length of the statement  "				//mcs.AddCommand(new MenuCommand((sender' e) => ViewCode()' new CommandID(VSConstants.GUID_VSStandardCommandSet97' (int)VSConstants.VSStd97CmdID.ViewCode))); " is 157.
Long Statement,Eto.Addin.VisualStudio.Editor,EtoPreviewPane,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Editor\EtoPreviewPane.cs,ViewCode,The length of the statement  "			if (!VsShellUtilities.IsDocumentOpen(this' codeFile' VSConstants.LOGVIEWID.Primary_guid' out hierarchy' out itemid' out frame) " is 126.
Long Statement,Eto.Addin.VisualStudio.Editor,EtoPreviewPane,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Editor\EtoPreviewPane.cs,ViewCode,The length of the statement  "				&& !VsShellUtilities.IsDocumentOpen(this' codeFile' VSConstants.LOGVIEWID.TextView_guid' out hierarchy' out itemid' out frame)) " is 127.
Long Statement,Eto.Addin.VisualStudio.Editor,EtoPreviewPane,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Editor\EtoPreviewPane.cs,ViewCode,The length of the statement  "				VsShellUtilities.OpenDocumentWithSpecificEditor(this' codeFile' VSConstants.VsEditorFactoryGuid.TextEditor_guid' VSConstants.LOGVIEWID.Primary_guid' out hierarchy' out itemid' out frame); " is 187.
Long Statement,Eto.Addin.VisualStudio,TextViewListener,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\TextViewListener.cs,TextViewCreated,The length of the statement  "				//textView.Properties.AddProperty(ViewFormKey' new AdapterCommand(textViewAdapter' ServiceProvider' VSConstants.GUID_VSStandardCommandSet97' (uint)VSConstants.VSStd97CmdID.ViewForm' () => ViewDesigner(document))); " is 213.
Long Statement,Eto.Addin.VisualStudio,TextViewListener,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\TextViewListener.cs,TextViewCreated,The length of the statement  "				//textView.Properties.AddProperty(ViewCodeKey' new AdapterCommand(textViewAdapter' ServiceProvider' VSConstants.GUID_VSStandardCommandSet97' (uint)VSConstants.VSStd97CmdID.ViewCode' () => ViewCode(document))); " is 209.
Long Statement,Eto.Addin.VisualStudio,TextViewListener,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\TextViewListener.cs,TextViewCreated,The length of the statement  "				textView.Properties.AddProperty(ViewFormKey' new AdapterCommand(textViewAdapter' ServiceProvider' VSConstants.GUID_VSStandardCommandSet97' (uint)VSConstants.VSStd97CmdID.ViewForm' () => ViewDesigner(document))); " is 211.
Long Statement,Eto.Addin.VisualStudio,TextViewListener,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\TextViewListener.cs,ViewCode,The length of the statement  "			if (!VsShellUtilities.IsDocumentOpen(ServiceProvider' codeFile' VSConstants.LOGVIEWID.Primary_guid' out hierarchy' out itemid' out frame) " is 137.
Long Statement,Eto.Addin.VisualStudio,TextViewListener,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\TextViewListener.cs,ViewCode,The length of the statement  "				&& !VsShellUtilities.IsDocumentOpen(ServiceProvider' codeFile' VSConstants.LOGVIEWID.TextView_guid' out hierarchy' out itemid' out frame)) " is 138.
Long Statement,Eto.Addin.VisualStudio,TextViewListener,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\TextViewListener.cs,ViewCode,The length of the statement  "				VsShellUtilities.OpenDocumentWithSpecificEditor(ServiceProvider' codeFile' VSConstants.VsEditorFactoryGuid.TextEditor_guid' VSConstants.LOGVIEWID.Primary_guid' out hierarchy' out itemid' out frame); " is 198.
Long Statement,Eto.Addin.VisualStudio,TextViewListener,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\TextViewListener.cs,ViewDesigner,The length of the statement  "			VsShellUtilities.OpenDocumentWithSpecificEditor(ServiceProvider' codeFile' Constants.EtoPreviewEditorFactory_guid' VSConstants.LOGVIEWID.Primary_guid' out hierarchy' out itemid' out frame); " is 189.
Long Statement,Eto.Addin.VisualStudio,TextViewListener,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\TextViewListener.cs,ViewDesignSource,The length of the statement  "			if (!VsShellUtilities.IsDocumentOpen(ServiceProvider' codeFile' VSConstants.LOGVIEWID.Primary_guid' out hierarchy' out itemid' out frame) " is 137.
Long Statement,Eto.Addin.VisualStudio,TextViewListener,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\TextViewListener.cs,ViewDesignSource,The length of the statement  "				&& !VsShellUtilities.IsDocumentOpen(ServiceProvider' codeFile' VSConstants.LOGVIEWID.TextView_guid' out hierarchy' out itemid' out frame)) " is 138.
Long Statement,Eto.Addin.VisualStudio,TextViewListener,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\TextViewListener.cs,ViewDesignSource,The length of the statement  "				VsShellUtilities.OpenDocumentWithSpecificEditor(ServiceProvider' codeFile' VSConstants.VsEditorFactoryGuid.TextEditor_guid' VSConstants.LOGVIEWID.Primary_guid' out hierarchy' out itemid' out frame); " is 198.
Long Statement,Eto.Addin.VisualStudio.Intellisense,XamlCompletionHandler,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Intellisense\XamlCompletionHandler.cs,TriggerCompletion,The length of the statement  "			var trackingPoint = caretPoint.Value.Snapshot.CreateTrackingPoint(caretPoint.Value.Position' PointTrackingMode.Positive); " is 121.
Long Statement,Eto.Addin.VisualStudio.Wizards,CheckRequiredReferences,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Wizards\CheckRequiredReferences.cs,RunStarted,The length of the statement  "				using (var serviceProvider = new ServiceProvider((Microsoft.VisualStudio.OLE.Interop.IServiceProvider)automationObject)) " is 120.
Long Statement,Eto.Addin.VisualStudio.Wizards,CheckRequiredReferences,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Wizards\CheckRequiredReferences.cs,InstallReferences,The length of the statement  "				var msg = string.Format("This template requires these references. Do you want to add them using nuget?\n\n{0}"' packages); " is 122.
Long Statement,Eto.Addin.VisualStudio.Wizards,CheckRequiredReferences,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Wizards\CheckRequiredReferences.cs,InstallReferences,The length of the statement  "					var result = MessageBox.Show(Helpers.MainWindow' msg' "Missing packages"' MessageBoxButtons.YesNoCancel' MessageBoxType.Information' MessageBoxDefaultButton.Yes); " is 162.
Long Statement,Eto.Addin.VisualStudio.Wizards,CheckRequiredReferences,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Wizards\CheckRequiredReferences.cs,InstallReferences,The length of the statement  "					SetStatusMessage(string.Format("Adding {0}.{1} to project..."' missingRef.Reference.Package' missingRef.Reference.Version)); " is 124.
Long Statement,Eto.Addin.VisualStudio.Wizards,CheckRequiredReferences,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Wizards\CheckRequiredReferences.cs,InstallReferences,The length of the statement  "						installerServices.InstallPackagesFromVSExtensionRepository(reference.ExtensionId' false' false' false' missingRef.Project' new Dictionary<string' string> " is 153.
Long Statement,Eto.Addin.VisualStudio.Wizards,CheckRequiredReferences,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Wizards\CheckRequiredReferences.cs,ProjectFinishedGenerating,The length of the statement  "				using (var serviceProvider = new ServiceProvider((Microsoft.VisualStudio.OLE.Interop.IServiceProvider)automationObject)) " is 120.
Long Statement,Eto.Addin.VisualStudio.Wizards,KeepFSharpOrderWizard,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Wizards\KeepFSharpOrderWizard.cs,RunFinished,The length of the statement  "				Func<object' string' object[]' object> invoke = (obj' member' args) => obj.GetType().InvokeMember(member' BindingFlags.InvokeMethod' null' obj' args); " is 150.
Complex Conditional,Eto.Addin.VisualStudio.Editor,EditorFactory,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Editor\EditorFactory.cs,MapLogicalView,The conditional expression  "rguidLogicalView == VSConstants.LOGVIEWID.Primary_guid  				|| rguidLogicalView == VSConstants.LOGVIEWID.Code_guid  				|| rguidLogicalView == VSConstants.LOGVIEWID.TextView_guid  				|| rguidLogicalView == VSConstants.LOGVIEWID.Designer_guid"  is complex.
Complex Conditional,Eto.Addin.VisualStudio.Intellisense,XamlCompletionHandler,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Intellisense\XamlCompletionHandler.cs,Exec,The conditional expression  "cmd == ReturnCmd  					|| cmd == TabCmd  					|| char.IsWhiteSpace(ch)  					|| ch == '>'  					|| ch == '.'  					|| ch == '='"  is complex.
Complex Conditional,Eto.Addin.VisualStudio.Intellisense,XamlCompletionHandler,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Intellisense\XamlCompletionHandler.cs,Exec,The conditional expression  "cmd == CompleteWordCmd  				|| char.IsLetterOrDigit(ch)  				|| ch == '.'  				|| ch == ' '  				|| ch == '='"  is complex.
Complex Conditional,Eto.Addin.VisualStudio.Intellisense,XamlCompletionSource,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Intellisense\XamlCompletionSource.cs,FindTokenSpanAtPosition,The conditional expression  "!(char.IsLetterOrDigit(ch) || ch == ':' || ch == '_') || ch == '"' || ch == '\'' || ch == '.'"  is complex.
Complex Conditional,Eto.Addin.VisualStudio.Wizards,Helpers,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Wizards\Helpers.cs,GetParameter,The conditional expression  "replacementsDictionary.TryGetValue("$" + name + "$"' out value)  				|| replacementsDictionary.TryGetValue("$root." + name + "$"' out value)  				|| replacementsDictionary.TryGetValue(ParametersPrefix + name + "$"' out value)  				|| replacementsDictionary.TryGetValue("$root." + (ParametersPrefix + name).TrimStart('$') + "$"' out value)"  is complex.
Empty Catch Block,Eto.Addin.VisualStudio.Intellisense,XmlParser,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Intellisense\XmlParser.cs,Read,The method has an empty catch block.
Magic Number,Eto.Addin.VisualStudio.Adornments,ColorAdornment,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Adornments\ColorAdornment.cs,GetPen,The following statement contains a magic number: pen = new Pen(penBrush' 2);
Magic Number,Eto.Addin.VisualStudio.Adornments,ColorAdornment,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Adornments\ColorAdornment.cs,GetInt,The following statement contains a magic number: if (group.Success && group.Captures.Count > pos)  			{  				var text = group.Captures[pos].Value;  				int value;  				if (text.StartsWith("0x") && int.TryParse(text.Substring(2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out value))  					return value;  				if (int.TryParse(text' out value))  					return value;  			}
Magic Number,Eto.Addin.VisualStudio.Adornments,ColorAdornment,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Adornments\ColorAdornment.cs,CreateVisuals,The following statement contains a magic number: foreach (Match match in matches)  			{  				var mode = match.Groups["mode"].Value;    				Func<Match' Eto.Drawing.Color> translateColor;  				if (!colorMatching.TryGetValue(mode' out translateColor))  					continue;    				var color = translateColor(match).ToWpf();  				if (color.A <= 0)  					continue;    				var span = new SnapshotSpan(view.TextSnapshot' line.Start + match.Index' match.Length);  				var geometry = view.TextViewLines.GetMarkerGeometry(span);  				if (geometry == null  					|| !view.TextViewModel.IsPointInVisualBuffer(span.Start' PositionAffinity.Successor)  					|| !view.TextViewModel.IsPointInVisualBuffer(span.End' PositionAffinity.Predecessor))  					continue;    				var pen = GetPen(color);  				var bounds = geometry.Bounds;  				var underline = new LineGeometry(bounds.BottomLeft' bounds.BottomRight);  				underline.Freeze();  				var drawing = new GeometryDrawing(null' pen' underline);  				drawing.Freeze();    				var drawingImage = new DrawingImage(drawing);  				drawingImage.Freeze();    				var image = new Image();  				image.Source = drawingImage;    				Canvas.SetLeft(image' geometry.Bounds.Left);  				Canvas.SetTop(image' geometry.Bounds.Bottom - 2);    				layer.AddAdornment(AdornmentPositioningBehavior.TextRelative' span' null' image' null);  			}
Magic Number,Eto.Addin.VisualStudio.Wizards,ProjectWizard,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Wizards\ProjectWizard.cs,RunStarted,The following statement contains a magic number: if (model.RequiresInput)  			{  				var panel = new ProjectWizardPageView(model);  				var dialog = new BaseDialog { Content = panel' Title = model.Title' ClientSize = new Size(-1' 400) };  				if (!dialog.ShowModal(Helpers.MainWindow))  					throw new WizardBackoutException();  			}
Missing Default,Eto.Addin.VisualStudio.Wizards,SkipFilesWizard,C:\repos\picoe_Eto\Source\Addins\Eto.Addin.VisualStudio\Eto.Addin.VisualStudio\Wizards\SkipFilesWizard.cs,ShouldAddProjectItem,The following switch statement is missing a default case: switch (item.Mode)  						{  							case SkipMode.Include:  								include = true;  								break;  							case SkipMode.Exclude:  								include = false;  								break;  							case SkipMode.Iteration:  								include = item.Count == item.CurrentCount;  								item.CurrentCount++;  								break;  						}
