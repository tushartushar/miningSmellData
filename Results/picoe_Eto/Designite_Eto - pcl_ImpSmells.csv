Implementation smell,Namespace,Class,File,Method,Description
Long Method,Eto.Forms.ThemedControls,ThemedSplitterHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedSplitterHandler.cs,UpdateLayout,The method has 115 lines of code.
Complex Method,Eto.Drawing,DashStyle,C:\repos\picoe_Eto\Source\Eto\Drawing\DashStyle.cs,TryParse,Cyclomatic complexity of the method is 8
Complex Method,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,TryParse,Cyclomatic complexity of the method is 13
Complex Method,Eto.Drawing,Icon,C:\repos\picoe_Eto\Source\Eto\Drawing\Icon.cs,GetResources,Cyclomatic complexity of the method is 8
Complex Method,Eto.Drawing,FontConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\FontConverter.cs,ConvertFrom,Cyclomatic complexity of the method is 15
Complex Method,Eto.Forms,Container,C:\repos\picoe_Eto\Source\Eto\Forms\Container.cs,SetParent,Cyclomatic complexity of the method is 12
Complex Method,Eto.Forms,TableLayout,C:\repos\picoe_Eto\Source\Eto\Forms\Layout\TableLayout.cs,Create,Cyclomatic complexity of the method is 8
Complex Method,Eto.Forms,MaskedTextBox,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\MaskedTextBox.cs,OnTextChanging,Cyclomatic complexity of the method is 10
Complex Method,Eto.Forms,NumericMaskedTextProvider,C:\repos\picoe_Eto\Source\Eto\Forms\MaskedTextProvider\NumericMaskedTextProvider.cs,Allow,Cyclomatic complexity of the method is 9
Complex Method,Eto.Forms,MaskedTextStepper,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\MaskedTextStepper.cs,OnTextChanging,Cyclomatic complexity of the method is 10
Complex Method,Eto.Forms.ThemedControls,ThemedDocumentControlHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedDocumentControlHandler.cs,Drawable_MouseMove,Cyclomatic complexity of the method is 11
Long Parameter List,Eto,PropertyStore,C:\repos\picoe_Eto\Source\Eto\PropertyStore.cs,Set,The method has 5 parameters. Parameters: key' value' propertyChanged' defaultValue' propertyName
Long Parameter List,Eto,PropertyStore,C:\repos\picoe_Eto\Source\Eto\PropertyStore.cs,SetCommand,The method has 6 parameters. Parameters: key' value' setEnabled' addExecute' removeExecute' getParameter
Long Parameter List,Eto,CommandWrapper,C:\repos\picoe_Eto\Source\Eto\PropertyStore.cs,CommandWrapper,The method has 5 parameters. Parameters: command' setEnabled' addExecute' removeExecute' getParameter
Long Parameter List,Eto.Drawing,RadialGradientBrush,C:\repos\picoe_Eto\Source\Eto\Drawing\RadialGradientBrush.cs,RadialGradientBrush,The method has 5 parameters. Parameters: startColor' endColor' center' gradientOrigin' radius
Long Parameter List,Eto.Drawing,IHandler,C:\repos\picoe_Eto\Source\Eto\Drawing\RadialGradientBrush.cs,Create,The method has 5 parameters. Parameters: startColor' endColor' center' gradientOrigin' radius
Long Parameter List,Eto.Drawing,IHandler,C:\repos\picoe_Eto\Source\Eto\Drawing\RadialGradientBrush.cs,Create,The method has 6 parameters. Parameters: xx' yx' xy' yy' x0' y0
Long Parameter List,Eto.Drawing,IHandler,C:\repos\picoe_Eto\Source\Eto\Drawing\RadialGradientBrush.cs,DrawLine,The method has 5 parameters. Parameters: pen' startx' starty' endx' endy
Long Parameter List,Eto.Drawing,IHandler,C:\repos\picoe_Eto\Source\Eto\Drawing\RadialGradientBrush.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,Eto.Drawing,IHandler,C:\repos\picoe_Eto\Source\Eto\Drawing\RadialGradientBrush.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,Eto.Drawing,IHandler,C:\repos\picoe_Eto\Source\Eto\Drawing\RadialGradientBrush.cs,FillEllipse,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,Eto.Drawing,IHandler,C:\repos\picoe_Eto\Source\Eto\Drawing\RadialGradientBrush.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,Eto.Drawing,IHandler,C:\repos\picoe_Eto\Source\Eto\Drawing\RadialGradientBrush.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,Eto.Drawing,IHandler,C:\repos\picoe_Eto\Source\Eto\Drawing\RadialGradientBrush.cs,FillPie,The method has 7 parameters. Parameters: brush' x' y' width' height' startAngle' sweepAngle
Long Parameter List,Eto.Drawing,IHandler,C:\repos\picoe_Eto\Source\Eto\Drawing\RadialGradientBrush.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,Eto.Drawing,IHandler,C:\repos\picoe_Eto\Source\Eto\Drawing\RadialGradientBrush.cs,DrawText,The method has 5 parameters. Parameters: font' brush' x' y' text
Long Parameter List,Eto.Drawing,Matrix,C:\repos\picoe_Eto\Source\Eto\Drawing\Matrix.cs,Create,The method has 6 parameters. Parameters: xx' yx' xy' yy' x0' y0
Long Parameter List,Eto.Drawing,Graphics,C:\repos\picoe_Eto\Source\Eto\Drawing\Graphics.cs,DrawLine,The method has 5 parameters. Parameters: color' startx' starty' endx' endy
Long Parameter List,Eto.Drawing,Graphics,C:\repos\picoe_Eto\Source\Eto\Drawing\Graphics.cs,DrawLine,The method has 5 parameters. Parameters: pen' startx' starty' endx' endy
Long Parameter List,Eto.Drawing,Graphics,C:\repos\picoe_Eto\Source\Eto\Drawing\Graphics.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,Eto.Drawing,Graphics,C:\repos\picoe_Eto\Source\Eto\Drawing\Graphics.cs,DrawRectangle,The method has 5 parameters. Parameters: color' x' y' width' height
Long Parameter List,Eto.Drawing,Graphics,C:\repos\picoe_Eto\Source\Eto\Drawing\Graphics.cs,FillRectangle,The method has 5 parameters. Parameters: color' x' y' width' height
Long Parameter List,Eto.Drawing,Graphics,C:\repos\picoe_Eto\Source\Eto\Drawing\Graphics.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,Eto.Drawing,Graphics,C:\repos\picoe_Eto\Source\Eto\Drawing\Graphics.cs,FillEllipse,The method has 5 parameters. Parameters: color' x' y' width' height
Long Parameter List,Eto.Drawing,Graphics,C:\repos\picoe_Eto\Source\Eto\Drawing\Graphics.cs,FillEllipse,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,Eto.Drawing,Graphics,C:\repos\picoe_Eto\Source\Eto\Drawing\Graphics.cs,DrawEllipse,The method has 5 parameters. Parameters: color' x' y' width' height
Long Parameter List,Eto.Drawing,Graphics,C:\repos\picoe_Eto\Source\Eto\Drawing\Graphics.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,Eto.Drawing,Graphics,C:\repos\picoe_Eto\Source\Eto\Drawing\Graphics.cs,DrawArc,The method has 7 parameters. Parameters: color' x' y' width' height' startAngle' sweepAngle
Long Parameter List,Eto.Drawing,Graphics,C:\repos\picoe_Eto\Source\Eto\Drawing\Graphics.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,Eto.Drawing,Graphics,C:\repos\picoe_Eto\Source\Eto\Drawing\Graphics.cs,FillPie,The method has 7 parameters. Parameters: color' x' y' width' height' startAngle' sweepAngle
Long Parameter List,Eto.Drawing,Graphics,C:\repos\picoe_Eto\Source\Eto\Drawing\Graphics.cs,FillPie,The method has 7 parameters. Parameters: brush' x' y' width' height' startAngle' sweepAngle
Long Parameter List,Eto.Drawing,Graphics,C:\repos\picoe_Eto\Source\Eto\Drawing\Graphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,Eto.Drawing,Graphics,C:\repos\picoe_Eto\Source\Eto\Drawing\Graphics.cs,DrawText,The method has 5 parameters. Parameters: font' brush' x' y' text
Long Parameter List,Eto.Drawing,Graphics,C:\repos\picoe_Eto\Source\Eto\Drawing\Graphics.cs,DrawText,The method has 5 parameters. Parameters: font' color' x' y' text
Long Parameter List,Eto.Drawing,BitmapData,C:\repos\picoe_Eto\Source\Eto\Drawing\BitmapData.cs,BitmapData,The method has 5 parameters. Parameters: image' data' scanWidth' bitsPerPixel' controlObject
Long Parameter List,Eto.Drawing,IGraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,AddArc,The method has 6 parameters. Parameters: x' y' width' height' startAngle' sweepAngle
Long Parameter List,Eto.Drawing,GraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,AddArc,The method has 6 parameters. Parameters: x' y' width' height' startAngle' sweepAngle
Long Parameter List,Eto.Drawing,GraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,GetRoundRect,The method has 5 parameters. Parameters: rectangle' nwRadius' neRadius' seRadius' swRadius
Long Parameter List,Eto.Drawing,ColorCMYK,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorCMYK.cs,ColorCMYK,The method has 5 parameters. Parameters: cyan' magenta' yellow' black' alpha
Long Parameter List,Eto.Forms,GridCellMouseEventArgs,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Grid.cs,GridCellMouseEventArgs,The method has 9 parameters. Parameters: gridColumn' row' column' item' buttons' modifiers' location' delta' pressure
Long Parameter List,Eto.Forms,MessageBox,C:\repos\picoe_Eto\Source\Eto\Forms\MessageBox.cs,Show,The method has 5 parameters. Parameters: text' caption' buttons' type' defaultButton
Long Parameter List,Eto.Forms,MessageBox,C:\repos\picoe_Eto\Source\Eto\Forms\MessageBox.cs,Show,The method has 5 parameters. Parameters: parent' text' buttons' type' defaultButton
Long Parameter List,Eto.Forms,MessageBox,C:\repos\picoe_Eto\Source\Eto\Forms\MessageBox.cs,Show,The method has 6 parameters. Parameters: parent' text' caption' buttons' type' defaultButton
Long Parameter List,Eto.Forms,TableLayout,C:\repos\picoe_Eto\Source\Eto\Forms\Layout\TableLayout.cs,Add,The method has 5 parameters. Parameters: control' x' y' xscale' yscale
Long Parameter List,Eto.Forms,MouseEventArgs,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\MouseEventArgs.cs,MouseEventArgs,The method has 5 parameters. Parameters: buttons' modifiers' location' delta' pressure
Long Parameter List,Eto.Forms,DynamicLayout,C:\repos\picoe_Eto\Source\Eto\Forms\Layout\DynamicLayout.cs,AddSeparateRow,The method has 5 parameters. Parameters: padding' spacing' xscale' yscale' controls
Long Parameter List,Eto.Forms,DynamicLayout,C:\repos\picoe_Eto\Source\Eto\Forms\Layout\DynamicLayout.cs,AddSeparateColumn,The method has 5 parameters. Parameters: padding' spacing' xscale' yscale' controls
Long Parameter List,Eto.Forms,DynamicLayout,C:\repos\picoe_Eto\Source\Eto\Forms\Layout\DynamicLayout.cs,AddCentered,The method has 7 parameters. Parameters: control' padding' spacing' xscale' yscale' horizontalCenter' verticalCenter
Long Parameter List,Eto.Forms,DynamicLayout,C:\repos\picoe_Eto\Source\Eto\Forms\Layout\DynamicLayout.cs,AddAutoSized,The method has 6 parameters. Parameters: control' padding' spacing' xscale' yscale' centered
Long Parameter List,Eto.Forms,ControlBinding<T;TValue>,C:\repos\picoe_Eto\Source\Eto\Forms\ControlBinding.cs,ControlBinding,The method has 5 parameters. Parameters: dataItem' getValue' setValue' addChangeEvent' removeChangeEvent
Long Parameter List,Eto.Forms,BindableBinding<T;TValue>,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\BindableBinding.cs,BindableBinding,The method has 5 parameters. Parameters: dataItem' getValue' setValue' addChangeEvent' removeChangeEvent
Long Parameter List,Eto.Forms,BindableBinding<T;TValue>,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\BindableBinding.cs,BindDataContext,The method has 7 parameters. Parameters: getValue' setValue' addChangeEvent' removeChangeEvent' mode' defaultGetValue' defaultSetValue
Long Parameter List,Eto.Forms,BindableExtensions,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\BindableExtensions.cs,Bind,The method has 5 parameters. Parameters: bindable' propertyName' source' sourcePropertyName' mode
Long Parameter List,Eto.Forms,BindableExtensions,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\BindableExtensions.cs,BindDataContext,The method has 6 parameters. Parameters: bindable' controlPropertyName' dataContextPropertyName' mode' defaultControlValue' defaultContextValue
Long Parameter List,Eto.Forms,BindableExtensions,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\BindableExtensions.cs,Bind,The method has 7 parameters. Parameters: bindable' controlBinding' objectValue' objectBinding' mode' defaultControlValue' defaultContextValue
Long Parameter List,Eto.Forms,BindableExtensions,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\BindableExtensions.cs,BindDataContext,The method has 6 parameters. Parameters: bindable' controlBinding' dataContextBinding' mode' defaultControlValue' defaultContextValue
Long Parameter List,Eto.Forms,BindableExtensions,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\BindableExtensions.cs,Bind,The method has 5 parameters. Parameters: control' controlProperty' source' sourceProperty' mode
Long Parameter List,Eto.Forms,BindableExtensions,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\BindableExtensions.cs,Bind,The method has 5 parameters. Parameters: control' controlProperty' source' sourceBinding' mode
Long Parameter List,Eto.Forms,BindableExtensions,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\BindableExtensions.cs,BindDataContext,The method has 6 parameters. Parameters: control' controlProperty' sourceProperty' mode' defaultControlValue' defaultContextValue
Long Parameter List,Eto.Forms,BindableExtensions,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\BindableExtensions.cs,BindDataContext,The method has 6 parameters. Parameters: control' controlProperty' sourceBinding' mode' defaultControlValue' defaultContextValue
Long Parameter List,Eto.Forms,Binding,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\Binding.cs,Delegate,The method has 6 parameters. Parameters: getValue' setValue' addChangeEvent' removeChangeEvent' defaultGetValue' defaultSetValue
Long Parameter List,Eto.Forms,DelegateBinding<T;TValue>,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\DelegateBinding.cs,DelegateBinding,The method has 6 parameters. Parameters: getValue' setValue' addChangeEvent' removeChangeEvent' defaultGetValue' defaultSetValue
Long Parameter List,Eto.Forms,DelegateBinding<T;TValue>,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\DelegateBinding.cs,DelegateBinding,The method has 5 parameters. Parameters: getValue' setValue' notifyProperty' defaultGetValue' defaultSetValue
Long Parameter List,Eto.Forms,DualBinding<T>,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\DualBinding.cs,DualBinding,The method has 5 parameters. Parameters: source' sourceProperty' destination' destinationProperty' mode
Long Parameter List,Eto.Forms,ObjectBinding<T;TValue>,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\ObjectBinding.cs,ObjectBinding,The method has 5 parameters. Parameters: dataItem' getValue' setValue' addChangeEvent' removeChangeEvent
Long Parameter List,Eto.Forms,ObjectBinding<T;TValue>,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\ObjectBinding.cs,Bind,The method has 5 parameters. Parameters: getValue' setValue' addChangeEvent' removeChangeEvent' mode
Long Statement,Eto,NamespaceInfo,C:\repos\picoe_Eto\Source\Eto\NamespaceInfo.cs,SetNamespace,The length of the statement  "				throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Namespace must include the assembly name in the form of: My.Namespace' MyAssembly")' ns); " is 160.
Long Statement,Eto,TypeHelper,C:\repos\picoe_Eto\Source\Eto\TypeHelper.cs,GetConstructor,The length of the statement  "			return type.GetTypeInfo().DeclaredConstructors.FirstOrDefault(r => r.GetParameters().Select(p => p.ParameterType).SequenceEqual(args)); " is 135.
Long Statement,Eto,WidgetHandler<TWidget>,C:\repos\picoe_Eto\Source\Eto\WidgetHandler.cs,IsEventHandled,The length of the statement  "			return Widget.Properties.ContainsKey(id) || EventLookup.IsDefault(Widget' id) || Widget.Properties.ContainsKey(id + InstanceEventSuffix); " is 137.
Long Statement,Eto,WidgetHandler<TWidget>,C:\repos\picoe_Eto\Source\Eto\WidgetHandler.cs,AttachEvent,The length of the statement  "				throw new NotSupportedException(string.Format(CultureInfo.CurrentCulture' "Event {0} not supported by this control"' id)); " is 122.
Long Statement,Eto,AttachableMemberIdentifier,C:\repos\picoe_Eto\Source\Eto\EtoMemberIdentifier.cs,GetHashCode,The length of the statement  "			return ((DeclaringType == null) ? 0 : DeclaringType.GetHashCode()) << 5 + ((MemberName == null) ? 0 : MemberName.GetHashCode()); " is 128.
Long Statement,Eto,EventLookup,C:\repos\picoe_Eto\Source\Eto\EventLookup.cs,FindTypeEvents,The length of the statement  "							var methods = externalType.GetMethods(BindingFlags.DeclaredOnly | BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic); " is 136.
Long Statement,Eto,BaseNumberConverter,C:\repos\picoe_Eto\Source\Eto\PclTypes.cs,ConvertFrom,The length of the statement  "					if ((AllowHex && text.StartsWith("0x"' StringComparison.OrdinalIgnoreCase)) || text.StartsWith("&h"' StringComparison.OrdinalIgnoreCase)) " is 137.
Long Statement,Eto,TypeConverter,C:\repos\picoe_Eto\Source\Eto\PclTypes.cs,GetConvertFromException,The length of the statement  "			throw new NotSupportedException(string.Format(CultureInfo.CurrentCulture' "{0} cannot convert from {1}."' GetType().Name' destinationType)); " is 140.
Long Statement,Eto,TypeConverter,C:\repos\picoe_Eto\Source\Eto\PclTypes.cs,GetConvertToException,The length of the statement  "			throw new NotSupportedException(string.Format(CultureInfo.CurrentCulture' "'{0}' is unable to convert '{1}' to '{2}'."' GetType().Name' sourceType' destinationType.FullName)); " is 175.
Long Statement,Eto,Platform,C:\repos\picoe_Eto\Source\Eto\Platform.cs,Get,The length of the statement  "				throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' "Platform not found. Are you missing the platform assembly?")); " is 141.
Long Statement,Eto,Platform,C:\repos\picoe_Eto\Source\Eto\Platform.cs,Get,The length of the statement  "					var message = string.Format("Platform type {0} was loaded but is not valid in the current context.  E.g. Mac platforms require to be in an .app bundle to run"' platformType); " is 174.
Long Statement,Eto,Platform,C:\repos\picoe_Eto\Source\Eto\Platform.cs,Create,The length of the statement  "					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Type {0} could not be found in this generator"' type.FullName)); " is 135.
Long Statement,Eto,Platform,C:\repos\picoe_Eto\Source\Eto\Platform.cs,Create,The length of the statement  "				throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' "Could not create instance of type {0}"' type)' e); " is 129.
Long Statement,Eto.Drawing,DashStyle,C:\repos\picoe_Eto\Source\Eto\Drawing\DashStyle.cs,Parse,The length of the statement  "			throw new ArgumentOutOfRangeException("value"' value' string.Format(CultureInfo.CurrentCulture' "Cannot convert value to a color")); " is 132.
Long Statement,Eto.Drawing,DashStyle,C:\repos\picoe_Eto\Source\Eto\Drawing\DashStyle.cs,ToString,The length of the statement  "			return string.Format(CultureInfo.InvariantCulture' "{0}'{1}"' Offset' string.Join("'"' Dashes.Select(r => r.ToString(CultureInfo.InvariantCulture)))); " is 150.
Long Statement,Eto.Drawing,ImageConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\ImageConverter.cs,CanConvertFrom,The length of the statement  "			return sourceType == typeof (string) || sourceType == typeof(NamespaceInfo) || sourceType == typeof(Stream) || base.CanConvertFrom (context' sourceType); " is 153.
Long Statement,Eto.Drawing,Matrix,C:\repos\picoe_Eto\Source\Eto\Drawing\Matrix.cs,Create,The length of the statement  "				throw new ArgumentOutOfRangeException("elements"' elements' string.Format(CultureInfo.CurrentCulture' "Elements must be an array with a length of 6")); " is 151.
Long Statement,Eto.Drawing,Bitmap,C:\repos\picoe_Eto\Source\Eto\Drawing\Bitmap.cs,FromResource,The length of the statement  "					throw new ArgumentNullException("assembly"' string.Format(CultureInfo.CurrentCulture' "This platform doesn't support Assembly.GetCallingAssembly()' so you must pass the assembly directly")); " is 190.
Long Statement,Eto.Drawing,Bitmap,C:\repos\picoe_Eto\Source\Eto\Drawing\Bitmap.cs,FromResource,The length of the statement  "					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Resource '{0}' not found in assembly '{1}'"' resourceName' assembly.FullName)); " is 150.
Long Statement,Eto.Drawing,Bitmap,C:\repos\picoe_Eto\Source\Eto\Drawing\Bitmap.cs,Lock,The length of the statement  "				throw new InvalidOperationException("Image is already locked. Ensure you dispose the BitmapData object explicitly or with a using() block."); " is 141.
Long Statement,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,FromArgb,The length of the statement  "			return new Color(((argb >> 16) & 0xff) / 255f' ((argb >> 8) & 0xff) / 255f' (argb & 0xff) / 255f' ((argb >> 24) & 0xff) / 255f); " is 128.
Long Statement,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,Distance,The length of the statement  "			return (float)Math.Sqrt(Math.Pow(value1.R - value2.R' 2) + Math.Pow(value1.G - value2.G' 2) + Math.Pow(value1.B - value2.B' 2)); " is 128.
Long Statement,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,TryParse,The length of the statement  "							var props = from p in typeof(Colors).GetRuntimeProperties() where p.GetGetMethod().IsStatic && p.GetGetMethod().IsPublic select p; " is 130.
Long Statement,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,Parse,The length of the statement  "			throw new ArgumentOutOfRangeException("value"' value' string.Format(CultureInfo.CurrentCulture' "Cannot convert value to a color")); " is 132.
Long Statement,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,ToArgb,The length of the statement  "			return (int)((uint)(B * byte.MaxValue) | (uint)(G * byte.MaxValue) << 8 | (uint)(R * byte.MaxValue) << 16 | (uint)(A * byte.MaxValue) << 24); " is 141.
Long Statement,Eto.Drawing,Font,C:\repos\picoe_Eto\Source\Eto\Drawing\Font.cs,ToString,The length of the statement  "			return string.Format(CultureInfo.InvariantCulture' "Family={0}' Typeface={1}' Size={2}pt' Style={3}"' Family' Typeface' Size' FontStyle); " is 137.
Long Statement,Eto.Drawing,Graphics,C:\repos\picoe_Eto\Source\Eto\Drawing\Graphics.cs,SaveTransformState,The length of the statement  "			var state = new TransformState { Graphics = this' MinTransformState = minTransformState' State = currentTransformState }; " is 121.
Long Statement,Eto.Drawing,Graphics,C:\repos\picoe_Eto\Source\Eto\Drawing\Graphics.cs,RestoreTransform,The length of the statement  "				throw new InvalidOperationException("No state to restore. RestoreTransform should be balanced with a corresponding call to SaveTranform."); " is 139.
Long Statement,Eto.Drawing,Icon,C:\repos\picoe_Eto\Source\Eto\Drawing\Icon.cs,FromResource,The length of the statement  "					throw new ArgumentNullException(nameof(assembly)' "This platform doesn't support Assembly.GetCallingAssembly()' so you must pass the assembly directly"); " is 153.
Long Statement,Eto.Drawing,Icon,C:\repos\picoe_Eto\Source\Eto\Drawing\Icon.cs,FromResource,The length of the statement  "						throw new ArgumentException($"Resource '{resourceName}' not found in assembly '{assembly.FullName}'"' nameof(resourceName)); " is 124.
Long Statement,Eto.Drawing,Icon,C:\repos\picoe_Eto\Source\Eto\Drawing\Icon.cs,FromResource,The length of the statement  "				throw new ArgumentException($"Resource '{resourceName}' not found in assembly '{assembly.FullName}'"' nameof(resourceName)); " is 124.
Long Statement,Eto.Drawing,Icon,C:\repos\picoe_Eto\Source\Eto\Drawing\Icon.cs,WithSize,The length of the statement  "				var scale = Math.Max((float)frame.PixelSize.Width / (float)fittingSize.Width' (float)frame.PixelSize.Height / (float)fittingSize.Height); " is 137.
Long Statement,Eto.Drawing,Padding,C:\repos\picoe_Eto\Source\Eto\Drawing\Padding.cs,ToString,The length of the statement  "			return string.Format (CultureInfo.InvariantCulture' "Top={0}' Left={1}' Right={2}' Bottom={3}"' Top' Left' Right' Bottom); " is 122.
Long Statement,Eto.Drawing,Rectangle,C:\repos\picoe_Eto\Source\Eto\Drawing\Rectangle.cs,Round,The length of the statement  "			return new Rectangle ((int)Math.Round (rectangle.X)' (int)Math.Round (rectangle.Y)' (int)Math.Round (rectangle.Width)' (int)Math.Round (rectangle.Height)); " is 155.
Long Statement,Eto.Drawing,Rectangle,C:\repos\picoe_Eto\Source\Eto\Drawing\Rectangle.cs,Ceiling,The length of the statement  "			return new Rectangle ((int)Math.Truncate (rectangle.X)' (int)Math.Truncate (rectangle.Y)' (int)Math.Ceiling (rectangle.Width)' (int)Math.Ceiling (rectangle.Height)); " is 165.
Long Statement,Eto.Drawing,Rectangle,C:\repos\picoe_Eto\Source\Eto\Drawing\Rectangle.cs,Intersects,The length of the statement  "			return rectangle.X < X + Width && X < rectangle.X + rectangle.Width && rectangle.Y < Y + Height && Y < rectangle.Y + rectangle.Height; " is 134.
Long Statement,Eto.Drawing,RectangleF,C:\repos\picoe_Eto\Source\Eto\Drawing\RectangleF.cs,Intersects,The length of the statement  "			return rectangle.X < X + Width && X < rectangle.X + rectangle.Width && rectangle.Y < Y + Height && Y < rectangle.Y + rectangle.Height; " is 134.
Long Statement,Eto.Drawing,GraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,GetRoundRect,The length of the statement  "			result.AddLine (new PointF (rectangle.X + nwRadius' rectangle.Y)' new PointF (rectangle.Right - neRadius' rectangle.Y)); " is 120.
Long Statement,Eto.Drawing,GraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,GetRoundRect,The length of the statement  "			result.AddLine (new PointF (rectangle.Right' rectangle.Top + neRadius)' new PointF (rectangle.Right' rectangle.Bottom - seRadius)); " is 131.
Long Statement,Eto.Drawing,GraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,GetRoundRect,The length of the statement  "				var rect = RectangleF.FromSides (rectangle.Right - seRadius' rectangle.Bottom - seRadius' rectangle.Right' rectangle.Bottom); " is 125.
Long Statement,Eto.Drawing,GraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,GetRoundRect,The length of the statement  "			result.AddLine (new PointF (rectangle.Right - seRadius' rectangle.Bottom)' new PointF (rectangle.Left + swRadius' rectangle.Bottom)); " is 133.
Long Statement,Eto.Drawing,GraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,GetRoundRect,The length of the statement  "				var rect = RectangleF.FromSides (rectangle.Left' rectangle.Bottom - swRadius' rectangle.Left + swRadius' rectangle.Bottom); " is 123.
Long Statement,Eto.Drawing,GraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,GetRoundRect,The length of the statement  "			result.AddLine (new PointF (rectangle.Left' rectangle.Bottom - swRadius)' new PointF (rectangle.Left' rectangle.Top + nwRadius)); " is 129.
Long Statement,Eto.Drawing,ColorHSB,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSB.cs,Distance,The length of the statement  "			return (float)Math.Sqrt(Math.Pow((value1.H - value2.H) / 360f' 2) + Math.Pow(value1.S - value2.S' 2) + Math.Pow(value1.B - value2.B' 2)); " is 137.
Long Statement,Eto.Drawing,ColorHSL,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSL.cs,Distance,The length of the statement  "			return (float)Math.Sqrt (Math.Pow ((value1.H - value2.H) / 360f' 2) + Math.Pow (value1.S - value2.S' 2) + Math.Pow (value1.L - value2.L' 2)); " is 141.
Long Statement,Eto.Drawing,ColorCMYK,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorCMYK.cs,Distance,The length of the statement  "			return (float)Math.Sqrt (Math.Pow ((value1.C - value2.C)' 2) + Math.Pow (value1.M - value2.M' 2) + Math.Pow (value1.Y - value2.Y' 2) + Math.Pow (value1.K - value2.K' 2)); " is 170.
Long Statement,Eto.Drawing,SizeConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\SizeConverter.cs,ConvertFrom,The length of the statement  "					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Size. Should be in the form of 'width' height'"' text)); " is 155.
Long Statement,Eto.Drawing,SizeConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\SizeConverter.cs,ConvertFrom,The length of the statement  "					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Size. Should be in the form of 'width' height'"' text)); " is 155.
Long Statement,Eto.Drawing,SizeFConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\SizeFConverter.cs,ConvertFrom,The length of the statement  "					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as SizeF. Should be in the form of 'width' height'"' text)); " is 156.
Long Statement,Eto.Drawing,SizeFConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\SizeFConverter.cs,ConvertFrom,The length of the statement  "					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as SizeF. Should be in the form of 'width' height'"' text)); " is 156.
Long Statement,Eto.Drawing,RectangleConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\RectangleConverter.cs,ConvertFrom,The length of the statement  "					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Rectangle. Should be in the form of 'x' y' width' height'"' text)); " is 166.
Long Statement,Eto.Drawing,RectangleConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\RectangleConverter.cs,ConvertFrom,The length of the statement  "					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Rectangle. Should be in the form of 'x' y' width' height'"' text)); " is 166.
Long Statement,Eto.Drawing,RectangleFConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\RectangleFConverter.cs,ConvertFrom,The length of the statement  "					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as RectangleF. Should be in the form of 'x' y' width' height'"' text)); " is 167.
Long Statement,Eto.Drawing,RectangleFConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\RectangleFConverter.cs,ConvertFrom,The length of the statement  "					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as RectangleF. Should be in the form of 'x' y' width' height'"' text)); " is 167.
Long Statement,Eto.Drawing,PointConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\PointConverter.cs,ConvertFrom,The length of the statement  "					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Point. Should be in the form of 'x' y'"' text)); " is 147.
Long Statement,Eto.Drawing,PointConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\PointConverter.cs,ConvertFrom,The length of the statement  "					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Point. Should be in the form of 'x' y'"' text)); " is 147.
Long Statement,Eto.Drawing,PointFConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\PointFConverter.cs,ConvertFrom,The length of the statement  "					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as PointF. Should be in the form of 'x' y'"' text)); " is 148.
Long Statement,Eto.Drawing,PointFConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\PointFConverter.cs,ConvertFrom,The length of the statement  "					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as PointF. Should be in the form of 'x' y'"' text)); " is 148.
Long Statement,Eto.Drawing,PaddingConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\PaddingConverter.cs,ConvertFrom,The length of the statement  "							throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Padding. Should be in the form of 'all'' 'horizontal' vertical'' or 'left' top' right' bottom'"' text)); " is 203.
Long Statement,Eto.Drawing,PaddingConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\PaddingConverter.cs,ConvertFrom,The length of the statement  "					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Padding. Should be in the form of 'all'' 'horizontal' vertical'' or 'left' top' right' bottom'"' text)); " is 203.
Long Statement,Eto.Drawing,FontConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\FontConverter.cs,ConvertFrom,The length of the statement  "						var typeface = family.Typefaces.FirstOrDefault(r => string.Equals(r.Name' typefaceName' StringComparison.OrdinalIgnoreCase)); " is 125.
Long Statement,Eto.Drawing,IconFrame,C:\repos\picoe_Eto\Source\Eto\Drawing\IconFrame.cs,FromResource,The length of the statement  "					throw new ArgumentNullException("assembly"' string.Format(CultureInfo.CurrentCulture' "This platform doesn't support Assembly.GetCallingAssembly()' so you must pass the assembly directly")); " is 190.
Long Statement,Eto.Forms,DynamicRow,C:\repos\picoe_Eto\Source\Eto\Forms\Layout\DynamicTable.cs,Add,The length of the statement  "			var controlItems = controls.Select(r => new DynamicControl { Control = r' YScale = yscale' XScale = xscale ?? (r != null ? null : (bool?)true) }); " is 146.
Long Statement,Eto.Forms,Container,C:\repos\picoe_Eto\Source\Eto\Forms\Container.cs,RemoveParent,The length of the statement  "					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "The child control is not a child of this container. Ensure you only remove children that you own.")); " is 172.
Long Statement,Eto.Forms,Container,C:\repos\picoe_Eto\Source\Eto\Forms\Container.cs,RemoveLogicalParent,The length of the statement  "				throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "The child control is not a logical child of this container. Ensure you only remove children that you own.")); " is 180.
Long Statement,Eto.Forms,Container,C:\repos\picoe_Eto\Source\Eto\Forms\Container.cs,SetParent,The length of the statement  "					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "The previous child control is not a child of this container. Ensure you only remove children that you own.")); " is 181.
Long Statement,Eto.Forms,TableLayout,C:\repos\picoe_Eto\Source\Eto\Forms\Layout\TableLayout.cs,SetCellSize,The length of the statement  "				throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' "Can only set the cell size of a table once")); " is 125.
Long Statement,Eto.Forms,TableLayout,C:\repos\picoe_Eto\Source\Eto\Forms\Layout\TableLayout.cs,SetCellSize,The length of the statement  "					var rows = Enumerable.Range(0' value.Height).Select(r => new TableRow(Enumerable.Range(0' value.Width).Select(c => new TableCell()))); " is 134.
Long Statement,Eto.Forms,TableLayout,C:\repos\picoe_Eto\Source\Eto\Forms\Layout\TableLayout.cs,InnerAdd,The length of the statement  "				throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' "You must set the size of the TableLayout before adding controls")); " is 146.
Long Statement,Eto.Forms,Control,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Control.cs,AttachNative,The length of the statement  "				throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' "You can only attach a parentless control")); " is 123.
Long Statement,Eto.Forms,StackLayout,C:\repos\picoe_Eto\Source\Eto\Forms\Layout\StackLayout.cs,ResumeLayout,The length of the statement  "				throw new InvalidOperationException(string.Format(CultureInfo.CurrentCulture' "Must balance ResumeLayout with SuspendLayout calls")); " is 133.
Long Statement,Eto.Forms,BindableBinding<T;TValue>,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\BindableBinding.cs,BindDataContext,The length of the statement  "			var contextBinding = new BindableBinding<IBindable' object>(control' Binding.Delegate((IBindable w) => w.DataContext' null' (w' h) => w.DataContextChanged += h' (w' h) => w.DataContextChanged -= h)); " is 199.
Long Statement,Eto.Forms,BindableBinding<T;TValue>,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\BindableBinding.cs,BindDataContext,The length of the statement  "			return BindDataContext(new DelegateBinding<TObject' TValue>(getValue' setValue' addChangeEvent' removeChangeEvent' defaultGetValue' defaultSetValue)' mode); " is 156.
Long Statement,Eto.Forms,Binding,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\Binding.cs,HandleEvent,The length of the statement  "			throw new NotSupportedException(string.Format(CultureInfo.CurrentCulture' "This binding does not support the {0} event"' id)); " is 126.
Long Statement,Eto.Forms,Binding,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\Binding.cs,Delegate,The length of the statement  "			return new DelegateBinding<T' TValue>(getValue' setValue' addChangeEvent' removeChangeEvent' defaultGetValue' defaultSetValue); " is 127.
Long Statement,Eto.Forms,IndirectBinding<T>,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\IndirectBinding.cs,EnumToString,The length of the statement  "				throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Type of T ({0}) must be an enumeration type"' typeof(T))); " is 129.
Long Statement,Eto.Forms,ObjectBinding<T;TValue>,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\ObjectBinding.cs,Bind,The length of the statement  "			return Bind(new DelegateBinding<TValue> { GetValue = getValue' SetValue = setValue' AddChangeEvent = addChangeEvent' RemoveChangeEvent = removeChangeEvent }' mode); " is 164.
Long Statement,Eto.Forms,ControlConverter,C:\repos\picoe_Eto\Source\Eto\Forms\ControlConverter.cs,CanConvertFrom,The length of the statement  "			return sourceType == typeof(string) || typeof(Control).IsAssignableFrom(sourceType) || base.CanConvertFrom(context' sourceType); " is 128.
Long Statement,Eto.Forms.ThemedControls,ThemedAboutDialogHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedAboutHandler.cs,ShowDialog,The length of the statement  "				textArea1.Text += "Developers:" + Environment.NewLine + string.Join(Environment.NewLine' developers) + Environment.NewLine + Environment.NewLine; " is 145.
Long Statement,Eto.Forms.ThemedControls,ThemedAboutDialogHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedAboutHandler.cs,ShowDialog,The length of the statement  "				textArea1.Text += "Designers:" + Environment.NewLine + string.Join(Environment.NewLine' designers) + Environment.NewLine + Environment.NewLine; " is 143.
Long Statement,Eto.Forms.ThemedControls,ThemedAboutDialogHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedAboutHandler.cs,ShowDialog,The length of the statement  "				textArea1.Text += "Documenters:" + Environment.NewLine + string.Join(Environment.NewLine' documenters) + Environment.NewLine + Environment.NewLine; " is 147.
Long Statement,Eto.Forms.ThemedControls,ThemedDocumentControlHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedDocumentControlHandler.cs,CalculateTab,The length of the statement  "			var tabRect = new RectangleF(posx' 0' size.Width + (tab.Closable ? closesize + TabPadding.Horizontal + TabPadding.Right : TabPadding.Horizontal)' tabDrawable.Height); " is 166.
Long Statement,Eto.Forms.ThemedControls,ThemedDocumentControlHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedDocumentControlHandler.cs,CalculateTab,The length of the statement  "			tab.CloseRect = new RectangleF(tabRect.X + tab.Rect.Width - tabDrawable.Height / 4 - closesize' tabDrawable.Height / 4' closesize' closesize); " is 142.
Long Statement,Eto.Forms.ThemedControls,ThemedDocumentControlHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedDocumentControlHandler.cs,CalculateTab,The length of the statement  "			tab.TextRect = new RectangleF(tabRect.X + TabPadding.Left + textoffset' (tabDrawable.Height - size.Height) / 2' textSize.Width' textSize.Height); " is 145.
Long Statement,Eto.Forms.ThemedControls,ThemedDocumentControlHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedDocumentControlHandler.cs,DrawTab,The length of the statement  "				g.DrawImage(tab.Image' tabRect.X + TabPadding.Left + (maxImageSize.Width - imageSize.Width) / 2' (tabDrawable.Height - imageSize.Height) / 2); " is 142.
Long Statement,Eto.Forms.ThemedControls,ThemedDocumentControlHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedDocumentControlHandler.cs,DrawTab,The length of the statement  "				var closeForeground = Enabled ? closeSelected ? SystemColors.HighlightText : SystemColors.ControlText : SystemColors.DisabledText; " is 130.
Long Statement,Eto.Forms.ThemedControls,ThemedDocumentControlHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedDocumentControlHandler.cs,DrawTab,The length of the statement  "				g.DrawLine(closeForeground' closerect.X + closemargin' closerect.Y + closemargin' closerect.X + closerect.Width - 1 - closemargin' closerect.Y + closerect.Height - 1 - closemargin); " is 181.
Long Statement,Eto.Forms.ThemedControls,ThemedDocumentControlHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedDocumentControlHandler.cs,DrawTab,The length of the statement  "				g.DrawLine(closeForeground' closerect.X + closemargin' closerect.Y + closerect.Height - 1 - closemargin' closerect.X + closerect.Width - 1 - closemargin' closerect.Y + closemargin); " is 181.
Complex Conditional,Eto,WidgetHandler<TWidget>,C:\repos\picoe_Eto\Source\Eto\WidgetHandler.cs,AttachEvent,The conditional expression  "Widget.Platform.IsGtk || Widget.Platform.IsMac || Widget.Platform.IsWinForms || Widget.Platform.IsWpf"  is complex.
Complex Conditional,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,TryParse,The conditional expression  "value.Length < 6 || (value.Length == 6 && isArgb && ixHex)"  is complex.
Complex Conditional,Eto.Drawing,Icon,C:\repos\picoe_Eto\Source\Eto\Drawing\Icon.cs,FindByScale,The conditional expression  "selected == null || (diff < scaleDiff && (diff >= 0 || scaleDiff > 0))"  is complex.
Complex Conditional,Eto.Forms,Control,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Control.cs,FindParent,The conditional expression  "(type == null || type.IsInstanceOfType(control)) && (string.IsNullOrEmpty(id) || control.ID == id)"  is complex.
Complex Conditional,Eto.Forms,MaskedTextBox,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\MaskedTextBox.cs,UpdateText,The conditional expression  "!hasFocus && ShowPlaceholderWhenEmpty && provider.IsEmpty && !string.IsNullOrEmpty(PlaceholderText)"  is complex.
Complex Conditional,Eto.Forms,NumericMaskedTextProvider,C:\repos\picoe_Eto\Source\Eto\Forms\MaskedTextProvider\NumericMaskedTextProvider.cs,Insert,The conditional expression  "ret && Validate != null && MaskCompleted && !Validate(Text)"  is complex.
Complex Conditional,Eto.Forms,BindableWidget,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\BindableWidget.cs,FindParent,The conditional expression  "(type == null || type.IsInstanceOfType(control)) && (string.IsNullOrEmpty(id) || control.ID == id)"  is complex.
Complex Conditional,Eto.Forms,MaskedTextStepper,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\MaskedTextStepper.cs,UpdateText,The conditional expression  "!hasFocus && ShowPlaceholderWhenEmpty && provider.IsEmpty && !string.IsNullOrEmpty(PlaceholderText)"  is complex.
Complex Conditional,Eto.Forms.ThemedControls,ThemedDocumentControlHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedDocumentControlHandler.cs,DrawTab,The conditional expression  "draggingLocation == null && tabRect.Contains(mousePos) && prevnextsel && !closeSelected && Enabled"  is complex.
Virtual Method Call from Constructor,Eto.Forms,Grid,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Grid.cs,Grid,The constructor "Grid" calls a virtual method "OnCellEdited".
Virtual Method Call from Constructor,Eto.Forms,Grid,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Grid.cs,Grid,The constructor "Grid" calls a virtual method "OnCellEditing".
Virtual Method Call from Constructor,Eto.Forms,Grid,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Grid.cs,Grid,The constructor "Grid" calls a virtual method "OnCellFormatting".
Virtual Method Call from Constructor,Eto.Forms,Grid,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Grid.cs,Grid,The constructor "Grid" calls a virtual method "OnCellClick".
Virtual Method Call from Constructor,Eto.Forms,Grid,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Grid.cs,Grid,The constructor "Grid" calls a virtual method "OnCellDoubleClick".
Virtual Method Call from Constructor,Eto.Forms,Grid,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Grid.cs,Grid,The constructor "Grid" calls a virtual method "OnSelectionChanged".
Virtual Method Call from Constructor,Eto.Forms,Grid,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Grid.cs,Grid,The constructor "Grid" calls a virtual method "OnColumnHeaderClick".
Virtual Method Call from Constructor,Eto.Forms,TreeView,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\TreeView.cs,TreeView,The constructor "TreeView" calls a virtual method "OnActivated".
Virtual Method Call from Constructor,Eto.Forms,TreeView,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\TreeView.cs,TreeView,The constructor "TreeView" calls a virtual method "OnSelectionChanged".
Virtual Method Call from Constructor,Eto.Forms,TreeView,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\TreeView.cs,TreeView,The constructor "TreeView" calls a virtual method "OnExpanding".
Virtual Method Call from Constructor,Eto.Forms,TreeView,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\TreeView.cs,TreeView,The constructor "TreeView" calls a virtual method "OnExpanded".
Virtual Method Call from Constructor,Eto.Forms,TreeView,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\TreeView.cs,TreeView,The constructor "TreeView" calls a virtual method "OnCollapsing".
Virtual Method Call from Constructor,Eto.Forms,TreeView,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\TreeView.cs,TreeView,The constructor "TreeView" calls a virtual method "OnCollapsed".
Virtual Method Call from Constructor,Eto.Forms,TreeView,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\TreeView.cs,TreeView,The constructor "TreeView" calls a virtual method "OnLabelEdited".
Virtual Method Call from Constructor,Eto.Forms,TreeView,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\TreeView.cs,TreeView,The constructor "TreeView" calls a virtual method "OnLabelEditing".
Virtual Method Call from Constructor,Eto.Forms,TreeView,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\TreeView.cs,TreeView,The constructor "TreeView" calls a virtual method "OnNodeMouseClick".
Virtual Method Call from Constructor,Eto.Forms,PrintDocument,C:\repos\picoe_Eto\Source\Eto\Forms\Printing\PrintDocument.cs,PrintDocument,The constructor "PrintDocument" calls a virtual method "OnPrinting".
Virtual Method Call from Constructor,Eto.Forms,PrintDocument,C:\repos\picoe_Eto\Source\Eto\Forms\Printing\PrintDocument.cs,PrintDocument,The constructor "PrintDocument" calls a virtual method "OnPrinted".
Virtual Method Call from Constructor,Eto.Forms,PrintDocument,C:\repos\picoe_Eto\Source\Eto\Forms\Printing\PrintDocument.cs,PrintDocument,The constructor "PrintDocument" calls a virtual method "OnPrintPage".
Virtual Method Call from Constructor,Eto.Forms,Application,C:\repos\picoe_Eto\Source\Eto\Forms\Application.cs,Application,The constructor "Application" calls a virtual method "OnTerminating".
Virtual Method Call from Constructor,Eto.Forms,Application,C:\repos\picoe_Eto\Source\Eto\Forms\Application.cs,Application,The constructor "Application" calls a virtual method "OnUnhandledException".
Virtual Method Call from Constructor,Eto.Forms,Window,C:\repos\picoe_Eto\Source\Eto\Forms\Window.cs,Window,The constructor "Window" calls a virtual method "OnClosed".
Virtual Method Call from Constructor,Eto.Forms,Window,C:\repos\picoe_Eto\Source\Eto\Forms\Window.cs,Window,The constructor "Window" calls a virtual method "OnClosing".
Virtual Method Call from Constructor,Eto.Forms,Window,C:\repos\picoe_Eto\Source\Eto\Forms\Window.cs,Window,The constructor "Window" calls a virtual method "OnLocationChanged".
Virtual Method Call from Constructor,Eto.Forms,Window,C:\repos\picoe_Eto\Source\Eto\Forms\Window.cs,Window,The constructor "Window" calls a virtual method "OnWindowStateChanged".
Virtual Method Call from Constructor,Eto.Forms,Window,C:\repos\picoe_Eto\Source\Eto\Forms\Window.cs,Window,The constructor "Window" calls a virtual method "OnLogicalPixelSizeChanged".
Virtual Method Call from Constructor,Eto.Forms,Control,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Control.cs,Control,The constructor "Control" calls a virtual method "OnGotFocus".
Virtual Method Call from Constructor,Eto.Forms,Control,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Control.cs,Control,The constructor "Control" calls a virtual method "OnKeyDown".
Virtual Method Call from Constructor,Eto.Forms,Control,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Control.cs,Control,The constructor "Control" calls a virtual method "OnKeyUp".
Virtual Method Call from Constructor,Eto.Forms,Control,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Control.cs,Control,The constructor "Control" calls a virtual method "OnLostFocus".
Virtual Method Call from Constructor,Eto.Forms,Control,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Control.cs,Control,The constructor "Control" calls a virtual method "OnMouseDoubleClick".
Virtual Method Call from Constructor,Eto.Forms,Control,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Control.cs,Control,The constructor "Control" calls a virtual method "OnMouseDown".
Virtual Method Call from Constructor,Eto.Forms,Control,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Control.cs,Control,The constructor "Control" calls a virtual method "OnMouseEnter".
Virtual Method Call from Constructor,Eto.Forms,Control,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Control.cs,Control,The constructor "Control" calls a virtual method "OnMouseLeave".
Virtual Method Call from Constructor,Eto.Forms,Control,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Control.cs,Control,The constructor "Control" calls a virtual method "OnMouseMove".
Virtual Method Call from Constructor,Eto.Forms,Control,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Control.cs,Control,The constructor "Control" calls a virtual method "OnMouseUp".
Virtual Method Call from Constructor,Eto.Forms,Control,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Control.cs,Control,The constructor "Control" calls a virtual method "OnMouseWheel".
Virtual Method Call from Constructor,Eto.Forms,Control,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Control.cs,Control,The constructor "Control" calls a virtual method "OnShown".
Virtual Method Call from Constructor,Eto.Forms,Control,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Control.cs,Control,The constructor "Control" calls a virtual method "OnSizeChanged".
Virtual Method Call from Constructor,Eto.Forms,Control,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Control.cs,Control,The constructor "Control" calls a virtual method "OnTextInput".
Virtual Method Call from Constructor,Eto.Forms,Scrollable,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Scrollable.cs,Scrollable,The constructor "Scrollable" calls a virtual method "OnScroll".
Virtual Method Call from Constructor,Eto.Forms,Splitter,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Splitter.cs,Splitter,The constructor "Splitter" calls a virtual method "OnPositionChanged".
Virtual Method Call from Constructor,Eto.Forms,TextArea,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\TextArea.cs,TextArea,The constructor "TextArea" calls a virtual method "OnSelectionChanged".
Virtual Method Call from Constructor,Eto.Forms,TextArea,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\TextArea.cs,TextArea,The constructor "TextArea" calls a virtual method "OnCaretIndexChanged".
Virtual Method Call from Constructor,Eto.Forms,TextBox,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\TextBox.cs,TextBox,The constructor "TextBox" calls a virtual method "OnTextChanging".
Virtual Method Call from Constructor,Eto.Forms,TextControl,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\TextControl.cs,TextControl,The constructor "TextControl" calls a virtual method "OnTextChanged".
Virtual Method Call from Constructor,Eto.Forms,TreeGridView,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\TreeGridView.cs,TreeGridView,The constructor "TreeGridView" calls a virtual method "OnExpanding".
Virtual Method Call from Constructor,Eto.Forms,TreeGridView,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\TreeGridView.cs,TreeGridView,The constructor "TreeGridView" calls a virtual method "OnExpanded".
Virtual Method Call from Constructor,Eto.Forms,TreeGridView,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\TreeGridView.cs,TreeGridView,The constructor "TreeGridView" calls a virtual method "OnCollapsing".
Virtual Method Call from Constructor,Eto.Forms,TreeGridView,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\TreeGridView.cs,TreeGridView,The constructor "TreeGridView" calls a virtual method "OnCollapsed".
Virtual Method Call from Constructor,Eto.Forms,TreeGridView,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\TreeGridView.cs,TreeGridView,The constructor "TreeGridView" calls a virtual method "OnSelectedItemChanged".
Virtual Method Call from Constructor,Eto.Forms,MenuItem,C:\repos\picoe_Eto\Source\Eto\Forms\Menu\MenuItem.cs,MenuItem,The constructor "MenuItem" calls a virtual method "OnValidate".
Virtual Method Call from Constructor,Eto.Forms,WebView,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\WebView.cs,WebView,The constructor "WebView" calls a virtual method "OnNavigated".
Virtual Method Call from Constructor,Eto.Forms,WebView,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\WebView.cs,WebView,The constructor "WebView" calls a virtual method "OnDocumentLoaded".
Virtual Method Call from Constructor,Eto.Forms,WebView,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\WebView.cs,WebView,The constructor "WebView" calls a virtual method "OnDocumentLoading".
Virtual Method Call from Constructor,Eto.Forms,WebView,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\WebView.cs,WebView,The constructor "WebView" calls a virtual method "OnDocumentTitleChanged".
Virtual Method Call from Constructor,Eto.Forms,WebView,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\WebView.cs,WebView,The constructor "WebView" calls a virtual method "OnOpenNewWindow".
Virtual Method Call from Constructor,Eto.Forms,FontDialog,C:\repos\picoe_Eto\Source\Eto\Forms\FontDialog.cs,FontDialog,The constructor "FontDialog" calls a virtual method "OnFontChanged".
Virtual Method Call from Constructor,Eto.Forms,LinkButton,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\LinkButton.cs,LinkButton,The constructor "LinkButton" calls a virtual method "OnClick".
Virtual Method Call from Constructor,Eto.Forms,MaskedTextBox,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\MaskedTextBox.cs,MaskedTextBox,The constructor "MaskedTextBox" calls a virtual method "UpdateText".
Virtual Method Call from Constructor,Eto.Forms,Expander,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\Expander.cs,Expander,The constructor "Expander" calls a virtual method "OnExpandedChanged".
Virtual Method Call from Constructor,Eto.Forms,MaskedTextStepper,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\MaskedTextStepper.cs,MaskedTextStepper,The constructor "MaskedTextStepper" calls a virtual method "UpdateText".
Empty Catch Block,Eto.Forms,PropertyBinding<T>,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\PropertyBinding.cs,AddValueChangedHandler,The method has an empty catch block.
Empty Catch Block,Eto.Forms,PropertyBinding<T>,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\PropertyBinding.cs,RemoveValueChangedHandler,The method has an empty catch block.
Magic Number,Eto,NamespaceInfo,C:\repos\picoe_Eto\Source\Eto\NamespaceInfo.cs,SetNamespace,The following statement contains a magic number: if (val.Length == 2)  			{  				Namespace = val[0].Trim();  				assemblyName = val[1].Trim();  			}  			else  				throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Namespace must include the assembly name in the form of: My.Namespace' MyAssembly")' ns);
Magic Number,Eto,OperatingSystemPlatform,C:\repos\picoe_Eto\Source\Eto\OperatingSystemPlatform.cs,OperatingSystemPlatform,The following statement contains a magic number: switch (platform)  			{  				case 6: // PlatformID.MacOSX:  					IsMac = true;  					IsUnix = true;  					break;  				case 4: // PlatformID.Unix:  					IsUnix = true;  					switch (GetUnixType().ToUpperInvariant())  					{  						case "DARWIN":  							IsMac = true;  							break;  						case "LINUX":  							IsLinux = true;  							break;  					}  					break;  				case 0: // PlatformID.Win32S:  				case 1: // PlatformID.Win32Windows:  				case 2: // PlatformID.Win32NT:  				case 3: // PlatformID.WinCE:  				case 5: // PlatformID.Xbox:  					IsWindows = true;  					break;  				default:  					// treat everything else as windows  					IsWindows = true;  					break;  			}
Magic Number,Eto,OperatingSystemPlatform,C:\repos\picoe_Eto\Source\Eto\OperatingSystemPlatform.cs,OperatingSystemPlatform,The following statement contains a magic number: switch (platform)  			{  				case 6: // PlatformID.MacOSX:  					IsMac = true;  					IsUnix = true;  					break;  				case 4: // PlatformID.Unix:  					IsUnix = true;  					switch (GetUnixType().ToUpperInvariant())  					{  						case "DARWIN":  							IsMac = true;  							break;  						case "LINUX":  							IsLinux = true;  							break;  					}  					break;  				case 0: // PlatformID.Win32S:  				case 1: // PlatformID.Win32Windows:  				case 2: // PlatformID.Win32NT:  				case 3: // PlatformID.WinCE:  				case 5: // PlatformID.Xbox:  					IsWindows = true;  					break;  				default:  					// treat everything else as windows  					IsWindows = true;  					break;  			}
Magic Number,Eto,OperatingSystemPlatform,C:\repos\picoe_Eto\Source\Eto\OperatingSystemPlatform.cs,OperatingSystemPlatform,The following statement contains a magic number: switch (platform)  			{  				case 6: // PlatformID.MacOSX:  					IsMac = true;  					IsUnix = true;  					break;  				case 4: // PlatformID.Unix:  					IsUnix = true;  					switch (GetUnixType().ToUpperInvariant())  					{  						case "DARWIN":  							IsMac = true;  							break;  						case "LINUX":  							IsLinux = true;  							break;  					}  					break;  				case 0: // PlatformID.Win32S:  				case 1: // PlatformID.Win32Windows:  				case 2: // PlatformID.Win32NT:  				case 3: // PlatformID.WinCE:  				case 5: // PlatformID.Xbox:  					IsWindows = true;  					break;  				default:  					// treat everything else as windows  					IsWindows = true;  					break;  			}
Magic Number,Eto,OperatingSystemPlatform,C:\repos\picoe_Eto\Source\Eto\OperatingSystemPlatform.cs,OperatingSystemPlatform,The following statement contains a magic number: switch (platform)  			{  				case 6: // PlatformID.MacOSX:  					IsMac = true;  					IsUnix = true;  					break;  				case 4: // PlatformID.Unix:  					IsUnix = true;  					switch (GetUnixType().ToUpperInvariant())  					{  						case "DARWIN":  							IsMac = true;  							break;  						case "LINUX":  							IsLinux = true;  							break;  					}  					break;  				case 0: // PlatformID.Win32S:  				case 1: // PlatformID.Win32Windows:  				case 2: // PlatformID.Win32NT:  				case 3: // PlatformID.WinCE:  				case 5: // PlatformID.Xbox:  					IsWindows = true;  					break;  				default:  					// treat everything else as windows  					IsWindows = true;  					break;  			}
Magic Number,Eto,OperatingSystemPlatform,C:\repos\picoe_Eto\Source\Eto\OperatingSystemPlatform.cs,OperatingSystemPlatform,The following statement contains a magic number: switch (platform)  			{  				case 6: // PlatformID.MacOSX:  					IsMac = true;  					IsUnix = true;  					break;  				case 4: // PlatformID.Unix:  					IsUnix = true;  					switch (GetUnixType().ToUpperInvariant())  					{  						case "DARWIN":  							IsMac = true;  							break;  						case "LINUX":  							IsLinux = true;  							break;  					}  					break;  				case 0: // PlatformID.Win32S:  				case 1: // PlatformID.Win32Windows:  				case 2: // PlatformID.Win32NT:  				case 3: // PlatformID.WinCE:  				case 5: // PlatformID.Xbox:  					IsWindows = true;  					break;  				default:  					// treat everything else as windows  					IsWindows = true;  					break;  			}
Magic Number,Eto,AttachableMemberIdentifier,C:\repos\picoe_Eto\Source\Eto\EtoMemberIdentifier.cs,GetHashCode,The following statement contains a magic number: return ((DeclaringType == null) ? 0 : DeclaringType.GetHashCode()) << 5 + ((MemberName == null) ? 0 : MemberName.GetHashCode());
Magic Number,Eto,BaseNumberConverter,C:\repos\picoe_Eto\Source\Eto\PclTypes.cs,ConvertFrom,The following statement contains a magic number: if (str != null)  			{  				string text = str.Trim();  				try  				{  					object result;  					if (AllowHex && text[0] == '#')  					{  						result = FromString(text.Substring(1)' 16);  						return result;  					}  					if ((AllowHex && text.StartsWith("0x"' StringComparison.OrdinalIgnoreCase)) || text.StartsWith("&h"' StringComparison.OrdinalIgnoreCase))  					{  						result = FromString(text.Substring(2)' 16);  						return result;  					}  					culture = culture ?? CultureInfo.CurrentCulture;  					var formatInfo = (NumberFormatInfo)culture.GetFormat(typeof(NumberFormatInfo));  					result = FromString(text' formatInfo);  					return result;  				}  				catch (InvalidOperationException innerException)  				{  					throw new InvalidOperationException(text' innerException);  				}  				catch (ArgumentNullException innerException)  				{  					throw new ArgumentNullException(text' innerException);  				}  				catch (ArgumentOutOfRangeException innerException)  				{  					throw new ArgumentOutOfRangeException(text' innerException);  				}  				catch (ArgumentException innerException)  				{  					throw new ArgumentException(text' innerException);  				}  				catch (Exception innerException)  				{  					throw new Exception(text' innerException);  				}  			}
Magic Number,Eto,BaseNumberConverter,C:\repos\picoe_Eto\Source\Eto\PclTypes.cs,ConvertFrom,The following statement contains a magic number: if (str != null)  			{  				string text = str.Trim();  				try  				{  					object result;  					if (AllowHex && text[0] == '#')  					{  						result = FromString(text.Substring(1)' 16);  						return result;  					}  					if ((AllowHex && text.StartsWith("0x"' StringComparison.OrdinalIgnoreCase)) || text.StartsWith("&h"' StringComparison.OrdinalIgnoreCase))  					{  						result = FromString(text.Substring(2)' 16);  						return result;  					}  					culture = culture ?? CultureInfo.CurrentCulture;  					var formatInfo = (NumberFormatInfo)culture.GetFormat(typeof(NumberFormatInfo));  					result = FromString(text' formatInfo);  					return result;  				}  				catch (InvalidOperationException innerException)  				{  					throw new InvalidOperationException(text' innerException);  				}  				catch (ArgumentNullException innerException)  				{  					throw new ArgumentNullException(text' innerException);  				}  				catch (ArgumentOutOfRangeException innerException)  				{  					throw new ArgumentOutOfRangeException(text' innerException);  				}  				catch (ArgumentException innerException)  				{  					throw new ArgumentException(text' innerException);  				}  				catch (Exception innerException)  				{  					throw new Exception(text' innerException);  				}  			}
Magic Number,Eto,BaseNumberConverter,C:\repos\picoe_Eto\Source\Eto\PclTypes.cs,ConvertFrom,The following statement contains a magic number: if (str != null)  			{  				string text = str.Trim();  				try  				{  					object result;  					if (AllowHex && text[0] == '#')  					{  						result = FromString(text.Substring(1)' 16);  						return result;  					}  					if ((AllowHex && text.StartsWith("0x"' StringComparison.OrdinalIgnoreCase)) || text.StartsWith("&h"' StringComparison.OrdinalIgnoreCase))  					{  						result = FromString(text.Substring(2)' 16);  						return result;  					}  					culture = culture ?? CultureInfo.CurrentCulture;  					var formatInfo = (NumberFormatInfo)culture.GetFormat(typeof(NumberFormatInfo));  					result = FromString(text' formatInfo);  					return result;  				}  				catch (InvalidOperationException innerException)  				{  					throw new InvalidOperationException(text' innerException);  				}  				catch (ArgumentNullException innerException)  				{  					throw new ArgumentNullException(text' innerException);  				}  				catch (ArgumentOutOfRangeException innerException)  				{  					throw new ArgumentOutOfRangeException(text' innerException);  				}  				catch (ArgumentException innerException)  				{  					throw new ArgumentException(text' innerException);  				}  				catch (Exception innerException)  				{  					throw new Exception(text' innerException);  				}  			}
Magic Number,Eto.Drawing,Matrix,C:\repos\picoe_Eto\Source\Eto\Drawing\Matrix.cs,Create,The following statement contains a magic number: if (elements.Length != 6)  				throw new ArgumentOutOfRangeException("elements"' elements' string.Format(CultureInfo.CurrentCulture' "Elements must be an array with a length of 6"));
Magic Number,Eto.Drawing,Matrix,C:\repos\picoe_Eto\Source\Eto\Drawing\Matrix.cs,Create,The following statement contains a magic number: handler.Create(elements[0]' elements[1]' elements[2]' elements[3]' elements[4]' elements[5]);
Magic Number,Eto.Drawing,Matrix,C:\repos\picoe_Eto\Source\Eto\Drawing\Matrix.cs,Create,The following statement contains a magic number: handler.Create(elements[0]' elements[1]' elements[2]' elements[3]' elements[4]' elements[5]);
Magic Number,Eto.Drawing,Matrix,C:\repos\picoe_Eto\Source\Eto\Drawing\Matrix.cs,Create,The following statement contains a magic number: handler.Create(elements[0]' elements[1]' elements[2]' elements[3]' elements[4]' elements[5]);
Magic Number,Eto.Drawing,Matrix,C:\repos\picoe_Eto\Source\Eto\Drawing\Matrix.cs,Create,The following statement contains a magic number: handler.Create(elements[0]' elements[1]' elements[2]' elements[3]' elements[4]' elements[5]);
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,FromArgb,The following statement contains a magic number: return new Color(((argb >> 16) & 0xff) / 255f' ((argb >> 8) & 0xff) / 255f' (argb & 0xff) / 255f' ((argb >> 24) & 0xff) / 255f);
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,FromArgb,The following statement contains a magic number: return new Color(((argb >> 16) & 0xff) / 255f' ((argb >> 8) & 0xff) / 255f' (argb & 0xff) / 255f' ((argb >> 24) & 0xff) / 255f);
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,FromArgb,The following statement contains a magic number: return new Color(((argb >> 16) & 0xff) / 255f' ((argb >> 8) & 0xff) / 255f' (argb & 0xff) / 255f' ((argb >> 24) & 0xff) / 255f);
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,FromRgb,The following statement contains a magic number: return new Color(((argb >> 16) & 0xff) / 255f' ((argb >> 8) & 0xff) / 255f' (argb & 0xff) / 255f);
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,FromRgb,The following statement contains a magic number: return new Color(((argb >> 16) & 0xff) / 255f' ((argb >> 8) & 0xff) / 255f' (argb & 0xff) / 255f);
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,Distance,The following statement contains a magic number: return (float)Math.Sqrt(Math.Pow(value1.R - value2.R' 2) + Math.Pow(value1.G - value2.G' 2) + Math.Pow(value1.B - value2.B' 2));
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,Distance,The following statement contains a magic number: return (float)Math.Sqrt(Math.Pow(value1.R - value2.R' 2) + Math.Pow(value1.G - value2.G' 2) + Math.Pow(value1.B - value2.B' 2));
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,Distance,The following statement contains a magic number: return (float)Math.Sqrt(Math.Pow(value1.R - value2.R' 2) + Math.Pow(value1.G - value2.G' 2) + Math.Pow(value1.B - value2.B' 2));
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,TryParse,The following statement contains a magic number: if (value.IndexOf(ColorSplitter[0]' StringComparison.OrdinalIgnoreCase) == -1)  			{  				bool isArgb = value[0] == '#';  				int num = (!isArgb) ? 0 : 1;  				bool ixHex = false;  				if (value.Length > num + 1 && value[num] == '0')  				{  					ixHex = (value[num + 1] == 'x' || value[num + 1] == 'X');  					if (ixHex)  					{  						num += 2;  					}  				}  				if (isArgb || ixHex)  				{  					value = value.Substring(num);  					uint num2;  					if (!uint.TryParse(value' NumberStyles.HexNumber' null' out num2))  					{  						color = Colors.Transparent;  						return false;  					}    					if (value.Length < 6 || (value.Length == 6 && isArgb && ixHex))  					{  						num2 &= 0xFFFFFF;  					}  					else  					{  						if (num2 >> 24 == 0) num2 |= 0xFF000000;  					}  					color = Color.FromArgb((int)num2);  					return true;  				}  				if (colormap == null)  				{  					lock (colormaplock)  					{  						if (colormap == null)  						{  #if PCL  							var props = from p in typeof(Colors).GetRuntimeProperties() where p.GetGetMethod().IsStatic && p.GetGetMethod().IsPublic select p;  #else  							var props = typeof (Colors).GetProperties (BindingFlags.Public | BindingFlags.Static);  #endif  							colormap = new Dictionary<string' Color>(StringComparer.OrdinalIgnoreCase);  							foreach (var val in props.Where(r => r.PropertyType == typeof(Color)))  							{  								var col = (Color)val.GetValue(null' null);  								colormap.Add(val.Name' col);  							}  						}  					}  				}  				if (colormap.TryGetValue(value' out color))  					return true;  			}
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,TryParse,The following statement contains a magic number: if (value.IndexOf(ColorSplitter[0]' StringComparison.OrdinalIgnoreCase) == -1)  			{  				bool isArgb = value[0] == '#';  				int num = (!isArgb) ? 0 : 1;  				bool ixHex = false;  				if (value.Length > num + 1 && value[num] == '0')  				{  					ixHex = (value[num + 1] == 'x' || value[num + 1] == 'X');  					if (ixHex)  					{  						num += 2;  					}  				}  				if (isArgb || ixHex)  				{  					value = value.Substring(num);  					uint num2;  					if (!uint.TryParse(value' NumberStyles.HexNumber' null' out num2))  					{  						color = Colors.Transparent;  						return false;  					}    					if (value.Length < 6 || (value.Length == 6 && isArgb && ixHex))  					{  						num2 &= 0xFFFFFF;  					}  					else  					{  						if (num2 >> 24 == 0) num2 |= 0xFF000000;  					}  					color = Color.FromArgb((int)num2);  					return true;  				}  				if (colormap == null)  				{  					lock (colormaplock)  					{  						if (colormap == null)  						{  #if PCL  							var props = from p in typeof(Colors).GetRuntimeProperties() where p.GetGetMethod().IsStatic && p.GetGetMethod().IsPublic select p;  #else  							var props = typeof (Colors).GetProperties (BindingFlags.Public | BindingFlags.Static);  #endif  							colormap = new Dictionary<string' Color>(StringComparer.OrdinalIgnoreCase);  							foreach (var val in props.Where(r => r.PropertyType == typeof(Color)))  							{  								var col = (Color)val.GetValue(null' null);  								colormap.Add(val.Name' col);  							}  						}  					}  				}  				if (colormap.TryGetValue(value' out color))  					return true;  			}
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,TryParse,The following statement contains a magic number: if (value.IndexOf(ColorSplitter[0]' StringComparison.OrdinalIgnoreCase) == -1)  			{  				bool isArgb = value[0] == '#';  				int num = (!isArgb) ? 0 : 1;  				bool ixHex = false;  				if (value.Length > num + 1 && value[num] == '0')  				{  					ixHex = (value[num + 1] == 'x' || value[num + 1] == 'X');  					if (ixHex)  					{  						num += 2;  					}  				}  				if (isArgb || ixHex)  				{  					value = value.Substring(num);  					uint num2;  					if (!uint.TryParse(value' NumberStyles.HexNumber' null' out num2))  					{  						color = Colors.Transparent;  						return false;  					}    					if (value.Length < 6 || (value.Length == 6 && isArgb && ixHex))  					{  						num2 &= 0xFFFFFF;  					}  					else  					{  						if (num2 >> 24 == 0) num2 |= 0xFF000000;  					}  					color = Color.FromArgb((int)num2);  					return true;  				}  				if (colormap == null)  				{  					lock (colormaplock)  					{  						if (colormap == null)  						{  #if PCL  							var props = from p in typeof(Colors).GetRuntimeProperties() where p.GetGetMethod().IsStatic && p.GetGetMethod().IsPublic select p;  #else  							var props = typeof (Colors).GetProperties (BindingFlags.Public | BindingFlags.Static);  #endif  							colormap = new Dictionary<string' Color>(StringComparer.OrdinalIgnoreCase);  							foreach (var val in props.Where(r => r.PropertyType == typeof(Color)))  							{  								var col = (Color)val.GetValue(null' null);  								colormap.Add(val.Name' col);  							}  						}  					}  				}  				if (colormap.TryGetValue(value' out color))  					return true;  			}
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,TryParse,The following statement contains a magic number: if (value.IndexOf(ColorSplitter[0]' StringComparison.OrdinalIgnoreCase) == -1)  			{  				bool isArgb = value[0] == '#';  				int num = (!isArgb) ? 0 : 1;  				bool ixHex = false;  				if (value.Length > num + 1 && value[num] == '0')  				{  					ixHex = (value[num + 1] == 'x' || value[num + 1] == 'X');  					if (ixHex)  					{  						num += 2;  					}  				}  				if (isArgb || ixHex)  				{  					value = value.Substring(num);  					uint num2;  					if (!uint.TryParse(value' NumberStyles.HexNumber' null' out num2))  					{  						color = Colors.Transparent;  						return false;  					}    					if (value.Length < 6 || (value.Length == 6 && isArgb && ixHex))  					{  						num2 &= 0xFFFFFF;  					}  					else  					{  						if (num2 >> 24 == 0) num2 |= 0xFF000000;  					}  					color = Color.FromArgb((int)num2);  					return true;  				}  				if (colormap == null)  				{  					lock (colormaplock)  					{  						if (colormap == null)  						{  #if PCL  							var props = from p in typeof(Colors).GetRuntimeProperties() where p.GetGetMethod().IsStatic && p.GetGetMethod().IsPublic select p;  #else  							var props = typeof (Colors).GetProperties (BindingFlags.Public | BindingFlags.Static);  #endif  							colormap = new Dictionary<string' Color>(StringComparer.OrdinalIgnoreCase);  							foreach (var val in props.Where(r => r.PropertyType == typeof(Color)))  							{  								var col = (Color)val.GetValue(null' null);  								colormap.Add(val.Name' col);  							}  						}  					}  				}  				if (colormap.TryGetValue(value' out color))  					return true;  			}
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,TryParse,The following statement contains a magic number: switch (array.Length)  			{  				case 1:  					color = Color.FromArgb((int)array2[0]);  					return true;  				case 3:  					color = Color.FromArgb((int)array2[0]' (int)array2[1]' (int)array2[2]);  					return true;  				case 4:  					color = Color.FromArgb((int)array2[0]' (int)array2[1]' (int)array2[2]' (int)array2[3]);  					return true;  			}
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,TryParse,The following statement contains a magic number: switch (array.Length)  			{  				case 1:  					color = Color.FromArgb((int)array2[0]);  					return true;  				case 3:  					color = Color.FromArgb((int)array2[0]' (int)array2[1]' (int)array2[2]);  					return true;  				case 4:  					color = Color.FromArgb((int)array2[0]' (int)array2[1]' (int)array2[2]' (int)array2[3]);  					return true;  			}
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,TryParse,The following statement contains a magic number: switch (array.Length)  			{  				case 1:  					color = Color.FromArgb((int)array2[0]);  					return true;  				case 3:  					color = Color.FromArgb((int)array2[0]' (int)array2[1]' (int)array2[2]);  					return true;  				case 4:  					color = Color.FromArgb((int)array2[0]' (int)array2[1]' (int)array2[2]' (int)array2[3]);  					return true;  			}
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,TryParse,The following statement contains a magic number: switch (array.Length)  			{  				case 1:  					color = Color.FromArgb((int)array2[0]);  					return true;  				case 3:  					color = Color.FromArgb((int)array2[0]' (int)array2[1]' (int)array2[2]);  					return true;  				case 4:  					color = Color.FromArgb((int)array2[0]' (int)array2[1]' (int)array2[2]' (int)array2[3]);  					return true;  			}
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,TryParse,The following statement contains a magic number: switch (array.Length)  			{  				case 1:  					color = Color.FromArgb((int)array2[0]);  					return true;  				case 3:  					color = Color.FromArgb((int)array2[0]' (int)array2[1]' (int)array2[2]);  					return true;  				case 4:  					color = Color.FromArgb((int)array2[0]' (int)array2[1]' (int)array2[2]' (int)array2[3]);  					return true;  			}
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,ToArgb,The following statement contains a magic number: return (int)((uint)(B * byte.MaxValue) | (uint)(G * byte.MaxValue) << 8 | (uint)(R * byte.MaxValue) << 16 | (uint)(A * byte.MaxValue) << 24);
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,ToArgb,The following statement contains a magic number: return (int)((uint)(B * byte.MaxValue) | (uint)(G * byte.MaxValue) << 8 | (uint)(R * byte.MaxValue) << 16 | (uint)(A * byte.MaxValue) << 24);
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,ToArgb,The following statement contains a magic number: return (int)((uint)(B * byte.MaxValue) | (uint)(G * byte.MaxValue) << 8 | (uint)(R * byte.MaxValue) << 16 | (uint)(A * byte.MaxValue) << 24);
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,FromElementId,The following statement contains a magic number: int shuffleTerm = id & 7;
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,FromElementId,The following statement contains a magic number: int red = 0x7f & (id >> 17);
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,FromElementId,The following statement contains a magic number: int green = 0x7f & (id >> 10);
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,FromElementId,The following statement contains a magic number: int blue = 0x7f & (id >> 3);
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,FromElementId,The following statement contains a magic number: if ((shuffleTerm & 2) == 2)  				green |= 0x80;
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,FromElementId,The following statement contains a magic number: if ((shuffleTerm & 2) == 2)  				green |= 0x80;
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,FromElementId,The following statement contains a magic number: if ((shuffleTerm & 4) == 4)  				red |= 0x80;
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,FromElementId,The following statement contains a magic number: if ((shuffleTerm & 4) == 4)  				red |= 0x80;
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,ToElementId,The following statement contains a magic number: int result = (Rb & 0x7f) << 17  				| (Gb & 0x7f) << 10  				| (Bb & 0x7f) << 3  				| ((Rb & 0x80) == 0x80 ? 4 : 0)  				| ((Gb & 0x80) == 0x80 ? 2 : 0)  				| ((Bb & 0x80) == 0x80 ? 1 : 0);
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,ToElementId,The following statement contains a magic number: int result = (Rb & 0x7f) << 17  				| (Gb & 0x7f) << 10  				| (Bb & 0x7f) << 3  				| ((Rb & 0x80) == 0x80 ? 4 : 0)  				| ((Gb & 0x80) == 0x80 ? 2 : 0)  				| ((Bb & 0x80) == 0x80 ? 1 : 0);
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,ToElementId,The following statement contains a magic number: int result = (Rb & 0x7f) << 17  				| (Gb & 0x7f) << 10  				| (Bb & 0x7f) << 3  				| ((Rb & 0x80) == 0x80 ? 4 : 0)  				| ((Gb & 0x80) == 0x80 ? 2 : 0)  				| ((Bb & 0x80) == 0x80 ? 1 : 0);
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,ToElementId,The following statement contains a magic number: int result = (Rb & 0x7f) << 17  				| (Gb & 0x7f) << 10  				| (Bb & 0x7f) << 3  				| ((Rb & 0x80) == 0x80 ? 4 : 0)  				| ((Gb & 0x80) == 0x80 ? 2 : 0)  				| ((Bb & 0x80) == 0x80 ? 1 : 0);
Magic Number,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,ToElementId,The following statement contains a magic number: int result = (Rb & 0x7f) << 17  				| (Gb & 0x7f) << 10  				| (Bb & 0x7f) << 3  				| ((Rb & 0x80) == 0x80 ? 4 : 0)  				| ((Gb & 0x80) == 0x80 ? 2 : 0)  				| ((Bb & 0x80) == 0x80 ? 1 : 0);
Magic Number,Eto.Drawing,Palette,C:\repos\picoe_Eto\Source\Eto\Drawing\Palette.cs,FromEGA,The following statement contains a magic number: if (palEGA.Count != 64)  				throw new NotSupportedException(string.Format(CultureInfo.CurrentCulture' "Source palette is not an EGA palette"));
Magic Number,Eto.Drawing,PointF,C:\repos\picoe_Eto\Source\Eto\Drawing\PointF.cs,AngleTo,The following statement contains a magic number: return (float)(Math.Atan2(destination.Y - Y' destination.X - X) * 180.0 / Math.PI);
Magic Number,Eto.Drawing,Rectangle,C:\repos\picoe_Eto\Source\Eto\Drawing\Rectangle.cs,FromCenter,The following statement contains a magic number: return new Rectangle (center - size / 2' size);
Magic Number,Eto.Drawing,Rectangle,C:\repos\picoe_Eto\Source\Eto\Drawing\Rectangle.cs,Inflate,The following statement contains a magic number: if (Width >= 0) {  				X -= width;  				Width += width * 2;  			} else {  				X += width;  				Width -= width * 2;  			}
Magic Number,Eto.Drawing,Rectangle,C:\repos\picoe_Eto\Source\Eto\Drawing\Rectangle.cs,Inflate,The following statement contains a magic number: if (Width >= 0) {  				X -= width;  				Width += width * 2;  			} else {  				X += width;  				Width -= width * 2;  			}
Magic Number,Eto.Drawing,Rectangle,C:\repos\picoe_Eto\Source\Eto\Drawing\Rectangle.cs,Inflate,The following statement contains a magic number: if (Height >= 0) {  				Y -= height;  				Height += height * 2;  			} else {  				Y += height;  				Height -= height * 2;  			}
Magic Number,Eto.Drawing,Rectangle,C:\repos\picoe_Eto\Source\Eto\Drawing\Rectangle.cs,Inflate,The following statement contains a magic number: if (Height >= 0) {  				Y -= height;  				Height += height * 2;  			} else {  				Y += height;  				Height -= height * 2;  			}
Magic Number,Eto.Drawing,RectangleF,C:\repos\picoe_Eto\Source\Eto\Drawing\RectangleF.cs,FromCenter,The following statement contains a magic number: return new RectangleF (center - size / 2' size);
Magic Number,Eto.Drawing,RectangleF,C:\repos\picoe_Eto\Source\Eto\Drawing\RectangleF.cs,Inflate,The following statement contains a magic number: if (Width >= 0) {  				X -= width;  				Width += width * 2;  			} else {  				X += width;  				Width -= width * 2;  			}
Magic Number,Eto.Drawing,RectangleF,C:\repos\picoe_Eto\Source\Eto\Drawing\RectangleF.cs,Inflate,The following statement contains a magic number: if (Width >= 0) {  				X -= width;  				Width += width * 2;  			} else {  				X += width;  				Width -= width * 2;  			}
Magic Number,Eto.Drawing,RectangleF,C:\repos\picoe_Eto\Source\Eto\Drawing\RectangleF.cs,Inflate,The following statement contains a magic number: if (Height >= 0) {  				Y -= height;  				Height += height * 2;  			} else {  				Y += height;  				Height -= height * 2;  			}
Magic Number,Eto.Drawing,RectangleF,C:\repos\picoe_Eto\Source\Eto\Drawing\RectangleF.cs,Inflate,The following statement contains a magic number: if (Height >= 0) {  				Y -= height;  				Height += height * 2;  			} else {  				Y += height;  				Height -= height * 2;  			}
Magic Number,Eto.Drawing,BitmapData,C:\repos\picoe_Eto\Source\Eto\Drawing\BitmapData.cs,BitmapData,The following statement contains a magic number: this.bytesPerPixel = (bitsPerPixel + 7) / 8;
Magic Number,Eto.Drawing,BitmapData,C:\repos\picoe_Eto\Source\Eto\Drawing\BitmapData.cs,BitmapData,The following statement contains a magic number: this.bytesPerPixel = (bitsPerPixel + 7) / 8;
Magic Number,Eto.Drawing,GraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,GetRoundRect,The following statement contains a magic number: nwRadius *= 2;
Magic Number,Eto.Drawing,GraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,GetRoundRect,The following statement contains a magic number: neRadius *= 2;
Magic Number,Eto.Drawing,GraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,GetRoundRect,The following statement contains a magic number: seRadius *= 2;
Magic Number,Eto.Drawing,GraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,GetRoundRect,The following statement contains a magic number: swRadius *= 2;
Magic Number,Eto.Drawing,GraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,GetRoundRect,The following statement contains a magic number: if (neRadius > 0f) {  				var rect = RectangleF.FromSides (rectangle.Right - neRadius' rectangle.Top' rectangle.Right' rectangle.Top + neRadius);  				result.AddArc (rect' -90' 90);  			}
Magic Number,Eto.Drawing,GraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,GetRoundRect,The following statement contains a magic number: if (neRadius > 0f) {  				var rect = RectangleF.FromSides (rectangle.Right - neRadius' rectangle.Top' rectangle.Right' rectangle.Top + neRadius);  				result.AddArc (rect' -90' 90);  			}
Magic Number,Eto.Drawing,GraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,GetRoundRect,The following statement contains a magic number: if (seRadius > 0f) {  				var rect = RectangleF.FromSides (rectangle.Right - seRadius' rectangle.Bottom - seRadius' rectangle.Right' rectangle.Bottom);  				result.AddArc (rect' 0' 90);  			}
Magic Number,Eto.Drawing,GraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,GetRoundRect,The following statement contains a magic number: if (swRadius > 0f) {  				var rect = RectangleF.FromSides (rectangle.Left' rectangle.Bottom - swRadius' rectangle.Left + swRadius' rectangle.Bottom);  				result.AddArc (rect' 90' 90);  			}
Magic Number,Eto.Drawing,GraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,GetRoundRect,The following statement contains a magic number: if (swRadius > 0f) {  				var rect = RectangleF.FromSides (rectangle.Left' rectangle.Bottom - swRadius' rectangle.Left + swRadius' rectangle.Bottom);  				result.AddArc (rect' 90' 90);  			}
Magic Number,Eto.Drawing,GraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,GetRoundRect,The following statement contains a magic number: if (nwRadius > 0f) {  				var rect = RectangleF.FromSides (rectangle.Left' rectangle.Top' rectangle.Left + nwRadius' rectangle.Top + nwRadius);  				result.AddArc (rect' 180' 90);  			}
Magic Number,Eto.Drawing,GraphicsPath,C:\repos\picoe_Eto\Source\Eto\Drawing\GraphicsPath.cs,GetRoundRect,The following statement contains a magic number: if (nwRadius > 0f) {  				var rect = RectangleF.FromSides (rectangle.Left' rectangle.Top' rectangle.Left + nwRadius' rectangle.Top + nwRadius);  				result.AddArc (rect' 180' 90);  			}
Magic Number,Eto.Drawing,ColorHSB,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSB.cs,Distance,The following statement contains a magic number: return (float)Math.Sqrt(Math.Pow((value1.H - value2.H) / 360f' 2) + Math.Pow(value1.S - value2.S' 2) + Math.Pow(value1.B - value2.B' 2));
Magic Number,Eto.Drawing,ColorHSB,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSB.cs,Distance,The following statement contains a magic number: return (float)Math.Sqrt(Math.Pow((value1.H - value2.H) / 360f' 2) + Math.Pow(value1.S - value2.S' 2) + Math.Pow(value1.B - value2.B' 2));
Magic Number,Eto.Drawing,ColorHSB,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSB.cs,Distance,The following statement contains a magic number: return (float)Math.Sqrt(Math.Pow((value1.H - value2.H) / 360f' 2) + Math.Pow(value1.S - value2.S' 2) + Math.Pow(value1.B - value2.B' 2));
Magic Number,Eto.Drawing,ColorHSB,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSB.cs,ColorHSB,The following statement contains a magic number: if (delta <= float.Epsilon)  			{  				h = 0f;  				s = 0f;  			}  			else  			{  				if (Math.Abs(max - color.R) < Color.Epsilon && color.G >= color.B)  				{  					h = 60 * (color.G - color.B) / delta;  				}  				else if (Math.Abs(max - color.R) < Color.Epsilon && color.G < color.B)  				{  					h = 60 * (color.G - color.B) / delta + 360;  				}  				else if (Math.Abs(max - color.G) < Color.Epsilon)  				{  					h = 60 * (color.B - color.R) / delta + 120;  				}  				else if (Math.Abs(max - color.B) < Color.Epsilon)  				{  					h = 60 * (color.R - color.G) / delta + 240;  				}  				else  				{  					h = 0f;  				}    				s = (Math.Abs(max) < Color.Epsilon) ? 0f : (1.0f - (min / max));  			}
Magic Number,Eto.Drawing,ColorHSB,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSB.cs,ColorHSB,The following statement contains a magic number: if (delta <= float.Epsilon)  			{  				h = 0f;  				s = 0f;  			}  			else  			{  				if (Math.Abs(max - color.R) < Color.Epsilon && color.G >= color.B)  				{  					h = 60 * (color.G - color.B) / delta;  				}  				else if (Math.Abs(max - color.R) < Color.Epsilon && color.G < color.B)  				{  					h = 60 * (color.G - color.B) / delta + 360;  				}  				else if (Math.Abs(max - color.G) < Color.Epsilon)  				{  					h = 60 * (color.B - color.R) / delta + 120;  				}  				else if (Math.Abs(max - color.B) < Color.Epsilon)  				{  					h = 60 * (color.R - color.G) / delta + 240;  				}  				else  				{  					h = 0f;  				}    				s = (Math.Abs(max) < Color.Epsilon) ? 0f : (1.0f - (min / max));  			}
Magic Number,Eto.Drawing,ColorHSB,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSB.cs,ColorHSB,The following statement contains a magic number: if (delta <= float.Epsilon)  			{  				h = 0f;  				s = 0f;  			}  			else  			{  				if (Math.Abs(max - color.R) < Color.Epsilon && color.G >= color.B)  				{  					h = 60 * (color.G - color.B) / delta;  				}  				else if (Math.Abs(max - color.R) < Color.Epsilon && color.G < color.B)  				{  					h = 60 * (color.G - color.B) / delta + 360;  				}  				else if (Math.Abs(max - color.G) < Color.Epsilon)  				{  					h = 60 * (color.B - color.R) / delta + 120;  				}  				else if (Math.Abs(max - color.B) < Color.Epsilon)  				{  					h = 60 * (color.R - color.G) / delta + 240;  				}  				else  				{  					h = 0f;  				}    				s = (Math.Abs(max) < Color.Epsilon) ? 0f : (1.0f - (min / max));  			}
Magic Number,Eto.Drawing,ColorHSB,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSB.cs,ColorHSB,The following statement contains a magic number: if (delta <= float.Epsilon)  			{  				h = 0f;  				s = 0f;  			}  			else  			{  				if (Math.Abs(max - color.R) < Color.Epsilon && color.G >= color.B)  				{  					h = 60 * (color.G - color.B) / delta;  				}  				else if (Math.Abs(max - color.R) < Color.Epsilon && color.G < color.B)  				{  					h = 60 * (color.G - color.B) / delta + 360;  				}  				else if (Math.Abs(max - color.G) < Color.Epsilon)  				{  					h = 60 * (color.B - color.R) / delta + 120;  				}  				else if (Math.Abs(max - color.B) < Color.Epsilon)  				{  					h = 60 * (color.R - color.G) / delta + 240;  				}  				else  				{  					h = 0f;  				}    				s = (Math.Abs(max) < Color.Epsilon) ? 0f : (1.0f - (min / max));  			}
Magic Number,Eto.Drawing,ColorHSB,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSB.cs,ColorHSB,The following statement contains a magic number: if (delta <= float.Epsilon)  			{  				h = 0f;  				s = 0f;  			}  			else  			{  				if (Math.Abs(max - color.R) < Color.Epsilon && color.G >= color.B)  				{  					h = 60 * (color.G - color.B) / delta;  				}  				else if (Math.Abs(max - color.R) < Color.Epsilon && color.G < color.B)  				{  					h = 60 * (color.G - color.B) / delta + 360;  				}  				else if (Math.Abs(max - color.G) < Color.Epsilon)  				{  					h = 60 * (color.B - color.R) / delta + 120;  				}  				else if (Math.Abs(max - color.B) < Color.Epsilon)  				{  					h = 60 * (color.R - color.G) / delta + 240;  				}  				else  				{  					h = 0f;  				}    				s = (Math.Abs(max) < Color.Epsilon) ? 0f : (1.0f - (min / max));  			}
Magic Number,Eto.Drawing,ColorHSB,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSB.cs,ColorHSB,The following statement contains a magic number: if (delta <= float.Epsilon)  			{  				h = 0f;  				s = 0f;  			}  			else  			{  				if (Math.Abs(max - color.R) < Color.Epsilon && color.G >= color.B)  				{  					h = 60 * (color.G - color.B) / delta;  				}  				else if (Math.Abs(max - color.R) < Color.Epsilon && color.G < color.B)  				{  					h = 60 * (color.G - color.B) / delta + 360;  				}  				else if (Math.Abs(max - color.G) < Color.Epsilon)  				{  					h = 60 * (color.B - color.R) / delta + 120;  				}  				else if (Math.Abs(max - color.B) < Color.Epsilon)  				{  					h = 60 * (color.R - color.G) / delta + 240;  				}  				else  				{  					h = 0f;  				}    				s = (Math.Abs(max) < Color.Epsilon) ? 0f : (1.0f - (min / max));  			}
Magic Number,Eto.Drawing,ColorHSB,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSB.cs,ColorHSB,The following statement contains a magic number: if (delta <= float.Epsilon)  			{  				h = 0f;  				s = 0f;  			}  			else  			{  				if (Math.Abs(max - color.R) < Color.Epsilon && color.G >= color.B)  				{  					h = 60 * (color.G - color.B) / delta;  				}  				else if (Math.Abs(max - color.R) < Color.Epsilon && color.G < color.B)  				{  					h = 60 * (color.G - color.B) / delta + 360;  				}  				else if (Math.Abs(max - color.G) < Color.Epsilon)  				{  					h = 60 * (color.B - color.R) / delta + 120;  				}  				else if (Math.Abs(max - color.B) < Color.Epsilon)  				{  					h = 60 * (color.R - color.G) / delta + 240;  				}  				else  				{  					h = 0f;  				}    				s = (Math.Abs(max) < Color.Epsilon) ? 0f : (1.0f - (min / max));  			}
Magic Number,Eto.Drawing,ColorHSB,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSB.cs,ToColor,The following statement contains a magic number: if (S <= 0)  			{  				r = g = b = B; // grayscale  			}  			else  			{  				// the color wheel consists of 6 sectors. Figure out which sector    				// you're in.    				float sectorPos = H / 60.0f;  				int sectorNumber = (int)(Math.Floor(sectorPos));  				// get the fractional part of the sector    				float fractionalSector = sectorPos - sectorNumber;    				// calculate values for the three axes of the color.    				float p = B * (1.0f - S);  				float q = B * (1.0f - (S * fractionalSector));  				float t = B * (1.0f - (S * (1 - fractionalSector)));    				// assign the fractional colors to r' g' and b based on the sector    				// the angle is in.    				switch (sectorNumber)  				{  					case 0:  						r = B;  						g = t;  						b = p;  						break;  					case 1:  						r = q;  						g = B;  						b = p;  						break;  					case 2:  						r = p;  						g = B;  						b = t;  						break;  					case 3:  						r = p;  						g = q;  						b = B;  						break;  					case 4:  						r = t;  						g = p;  						b = B;  						break;  					case 5:  						r = B;  						g = p;  						b = q;  						break;  				}  			}
Magic Number,Eto.Drawing,ColorHSB,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSB.cs,ToColor,The following statement contains a magic number: if (S <= 0)  			{  				r = g = b = B; // grayscale  			}  			else  			{  				// the color wheel consists of 6 sectors. Figure out which sector    				// you're in.    				float sectorPos = H / 60.0f;  				int sectorNumber = (int)(Math.Floor(sectorPos));  				// get the fractional part of the sector    				float fractionalSector = sectorPos - sectorNumber;    				// calculate values for the three axes of the color.    				float p = B * (1.0f - S);  				float q = B * (1.0f - (S * fractionalSector));  				float t = B * (1.0f - (S * (1 - fractionalSector)));    				// assign the fractional colors to r' g' and b based on the sector    				// the angle is in.    				switch (sectorNumber)  				{  					case 0:  						r = B;  						g = t;  						b = p;  						break;  					case 1:  						r = q;  						g = B;  						b = p;  						break;  					case 2:  						r = p;  						g = B;  						b = t;  						break;  					case 3:  						r = p;  						g = q;  						b = B;  						break;  					case 4:  						r = t;  						g = p;  						b = B;  						break;  					case 5:  						r = B;  						g = p;  						b = q;  						break;  				}  			}
Magic Number,Eto.Drawing,ColorHSB,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSB.cs,ToColor,The following statement contains a magic number: if (S <= 0)  			{  				r = g = b = B; // grayscale  			}  			else  			{  				// the color wheel consists of 6 sectors. Figure out which sector    				// you're in.    				float sectorPos = H / 60.0f;  				int sectorNumber = (int)(Math.Floor(sectorPos));  				// get the fractional part of the sector    				float fractionalSector = sectorPos - sectorNumber;    				// calculate values for the three axes of the color.    				float p = B * (1.0f - S);  				float q = B * (1.0f - (S * fractionalSector));  				float t = B * (1.0f - (S * (1 - fractionalSector)));    				// assign the fractional colors to r' g' and b based on the sector    				// the angle is in.    				switch (sectorNumber)  				{  					case 0:  						r = B;  						g = t;  						b = p;  						break;  					case 1:  						r = q;  						g = B;  						b = p;  						break;  					case 2:  						r = p;  						g = B;  						b = t;  						break;  					case 3:  						r = p;  						g = q;  						b = B;  						break;  					case 4:  						r = t;  						g = p;  						b = B;  						break;  					case 5:  						r = B;  						g = p;  						b = q;  						break;  				}  			}
Magic Number,Eto.Drawing,ColorHSB,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSB.cs,ToColor,The following statement contains a magic number: if (S <= 0)  			{  				r = g = b = B; // grayscale  			}  			else  			{  				// the color wheel consists of 6 sectors. Figure out which sector    				// you're in.    				float sectorPos = H / 60.0f;  				int sectorNumber = (int)(Math.Floor(sectorPos));  				// get the fractional part of the sector    				float fractionalSector = sectorPos - sectorNumber;    				// calculate values for the three axes of the color.    				float p = B * (1.0f - S);  				float q = B * (1.0f - (S * fractionalSector));  				float t = B * (1.0f - (S * (1 - fractionalSector)));    				// assign the fractional colors to r' g' and b based on the sector    				// the angle is in.    				switch (sectorNumber)  				{  					case 0:  						r = B;  						g = t;  						b = p;  						break;  					case 1:  						r = q;  						g = B;  						b = p;  						break;  					case 2:  						r = p;  						g = B;  						b = t;  						break;  					case 3:  						r = p;  						g = q;  						b = B;  						break;  					case 4:  						r = t;  						g = p;  						b = B;  						break;  					case 5:  						r = B;  						g = p;  						b = q;  						break;  				}  			}
Magic Number,Eto.Drawing,ColorHSL,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSL.cs,Distance,The following statement contains a magic number: return (float)Math.Sqrt (Math.Pow ((value1.H - value2.H) / 360f' 2) + Math.Pow (value1.S - value2.S' 2) + Math.Pow (value1.L - value2.L' 2));
Magic Number,Eto.Drawing,ColorHSL,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSL.cs,Distance,The following statement contains a magic number: return (float)Math.Sqrt (Math.Pow ((value1.H - value2.H) / 360f' 2) + Math.Pow (value1.S - value2.S' 2) + Math.Pow (value1.L - value2.L' 2));
Magic Number,Eto.Drawing,ColorHSL,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSL.cs,Distance,The following statement contains a magic number: return (float)Math.Sqrt (Math.Pow ((value1.H - value2.H) / 360f' 2) + Math.Pow (value1.S - value2.S' 2) + Math.Pow (value1.L - value2.L' 2));
Magic Number,Eto.Drawing,ColorHSL,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSL.cs,ColorHSL,The following statement contains a magic number: if (l == 0 || max == min) {  				s = 0;  			} else if (0 < l && l <= 0.5) {  				s = (max - min) / (max + min);  			} else if (l > 0.5) {  				s = (max - min) / (2 - (max + min)); //(max-min > 0)?    			}
Magic Number,Eto.Drawing,ColorHSL,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSL.cs,ColorHSL,The following statement contains a magic number: if (l == 0 || max == min) {  				s = 0;  			} else if (0 < l && l <= 0.5) {  				s = (max - min) / (max + min);  			} else if (l > 0.5) {  				s = (max - min) / (2 - (max + min)); //(max-min > 0)?    			}
Magic Number,Eto.Drawing,ColorHSL,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSL.cs,ColorHSL,The following statement contains a magic number: if (l == 0 || max == min) {  				s = 0;  			} else if (0 < l && l <= 0.5) {  				s = (max - min) / (max + min);  			} else if (l > 0.5) {  				s = (max - min) / (2 - (max + min)); //(max-min > 0)?    			}
Magic Number,Eto.Drawing,ColorHSL,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSL.cs,ToColor,The following statement contains a magic number: if (S == 0) {  				// achromatic color (gray scale)  				return new Color(L' L' L' A);  			}  			else {  				float q = (L < 0.5f) ? (L * (1f + S)) : (L + S - (L * S));  				float p = (2f * L) - q;    				float Hk = H / 360f;  				var T = new float[3];  				T[0] = Hk + (1f / 3f);    // Tr  				T[1] = Hk;                // Tb  				T[2] = Hk - (1f / 3f);    // Tg    				for (int i = 0; i < 3; i++) {  					if (T[i] < 0)  						T[i] += 1f;  					if (T[i] > 1)  						T[i] -= 1f;    					if ((T[i] * 6f) < 1) {  						T[i] = p + ((q - p) * 6f * T[i]);  					}  					else if ((T[i] * 2f) < 1) { //(1.0/6.0)<=T[i] && T[i]<0.5  						T[i] = q;  					}  					else if ((T[i] * 3f) < 2) { // 0.5<=T[i] && T[i]<(2.0/3.0)  						T[i] = p + (q - p) * ((2f / 3f) - T[i]) * 6f;  					}  					else  						T[i] = p;  				}    				return new Color (T[0]' T[1]' T[2]' A);  			}
Magic Number,Eto.Drawing,ColorHSL,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSL.cs,ToColor,The following statement contains a magic number: if (S == 0) {  				// achromatic color (gray scale)  				return new Color(L' L' L' A);  			}  			else {  				float q = (L < 0.5f) ? (L * (1f + S)) : (L + S - (L * S));  				float p = (2f * L) - q;    				float Hk = H / 360f;  				var T = new float[3];  				T[0] = Hk + (1f / 3f);    // Tr  				T[1] = Hk;                // Tb  				T[2] = Hk - (1f / 3f);    // Tg    				for (int i = 0; i < 3; i++) {  					if (T[i] < 0)  						T[i] += 1f;  					if (T[i] > 1)  						T[i] -= 1f;    					if ((T[i] * 6f) < 1) {  						T[i] = p + ((q - p) * 6f * T[i]);  					}  					else if ((T[i] * 2f) < 1) { //(1.0/6.0)<=T[i] && T[i]<0.5  						T[i] = q;  					}  					else if ((T[i] * 3f) < 2) { // 0.5<=T[i] && T[i]<(2.0/3.0)  						T[i] = p + (q - p) * ((2f / 3f) - T[i]) * 6f;  					}  					else  						T[i] = p;  				}    				return new Color (T[0]' T[1]' T[2]' A);  			}
Magic Number,Eto.Drawing,ColorHSL,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSL.cs,ToColor,The following statement contains a magic number: if (S == 0) {  				// achromatic color (gray scale)  				return new Color(L' L' L' A);  			}  			else {  				float q = (L < 0.5f) ? (L * (1f + S)) : (L + S - (L * S));  				float p = (2f * L) - q;    				float Hk = H / 360f;  				var T = new float[3];  				T[0] = Hk + (1f / 3f);    // Tr  				T[1] = Hk;                // Tb  				T[2] = Hk - (1f / 3f);    // Tg    				for (int i = 0; i < 3; i++) {  					if (T[i] < 0)  						T[i] += 1f;  					if (T[i] > 1)  						T[i] -= 1f;    					if ((T[i] * 6f) < 1) {  						T[i] = p + ((q - p) * 6f * T[i]);  					}  					else if ((T[i] * 2f) < 1) { //(1.0/6.0)<=T[i] && T[i]<0.5  						T[i] = q;  					}  					else if ((T[i] * 3f) < 2) { // 0.5<=T[i] && T[i]<(2.0/3.0)  						T[i] = p + (q - p) * ((2f / 3f) - T[i]) * 6f;  					}  					else  						T[i] = p;  				}    				return new Color (T[0]' T[1]' T[2]' A);  			}
Magic Number,Eto.Drawing,ColorHSL,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSL.cs,ToColor,The following statement contains a magic number: if (S == 0) {  				// achromatic color (gray scale)  				return new Color(L' L' L' A);  			}  			else {  				float q = (L < 0.5f) ? (L * (1f + S)) : (L + S - (L * S));  				float p = (2f * L) - q;    				float Hk = H / 360f;  				var T = new float[3];  				T[0] = Hk + (1f / 3f);    // Tr  				T[1] = Hk;                // Tb  				T[2] = Hk - (1f / 3f);    // Tg    				for (int i = 0; i < 3; i++) {  					if (T[i] < 0)  						T[i] += 1f;  					if (T[i] > 1)  						T[i] -= 1f;    					if ((T[i] * 6f) < 1) {  						T[i] = p + ((q - p) * 6f * T[i]);  					}  					else if ((T[i] * 2f) < 1) { //(1.0/6.0)<=T[i] && T[i]<0.5  						T[i] = q;  					}  					else if ((T[i] * 3f) < 2) { // 0.5<=T[i] && T[i]<(2.0/3.0)  						T[i] = p + (q - p) * ((2f / 3f) - T[i]) * 6f;  					}  					else  						T[i] = p;  				}    				return new Color (T[0]' T[1]' T[2]' A);  			}
Magic Number,Eto.Drawing,ColorHSL,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSL.cs,ToColor,The following statement contains a magic number: if (S == 0) {  				// achromatic color (gray scale)  				return new Color(L' L' L' A);  			}  			else {  				float q = (L < 0.5f) ? (L * (1f + S)) : (L + S - (L * S));  				float p = (2f * L) - q;    				float Hk = H / 360f;  				var T = new float[3];  				T[0] = Hk + (1f / 3f);    // Tr  				T[1] = Hk;                // Tb  				T[2] = Hk - (1f / 3f);    // Tg    				for (int i = 0; i < 3; i++) {  					if (T[i] < 0)  						T[i] += 1f;  					if (T[i] > 1)  						T[i] -= 1f;    					if ((T[i] * 6f) < 1) {  						T[i] = p + ((q - p) * 6f * T[i]);  					}  					else if ((T[i] * 2f) < 1) { //(1.0/6.0)<=T[i] && T[i]<0.5  						T[i] = q;  					}  					else if ((T[i] * 3f) < 2) { // 0.5<=T[i] && T[i]<(2.0/3.0)  						T[i] = p + (q - p) * ((2f / 3f) - T[i]) * 6f;  					}  					else  						T[i] = p;  				}    				return new Color (T[0]' T[1]' T[2]' A);  			}
Magic Number,Eto.Drawing,ColorCMYK,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorCMYK.cs,Distance,The following statement contains a magic number: return (float)Math.Sqrt (Math.Pow ((value1.C - value2.C)' 2) + Math.Pow (value1.M - value2.M' 2) + Math.Pow (value1.Y - value2.Y' 2) + Math.Pow (value1.K - value2.K' 2));
Magic Number,Eto.Drawing,ColorCMYK,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorCMYK.cs,Distance,The following statement contains a magic number: return (float)Math.Sqrt (Math.Pow ((value1.C - value2.C)' 2) + Math.Pow (value1.M - value2.M' 2) + Math.Pow (value1.Y - value2.Y' 2) + Math.Pow (value1.K - value2.K' 2));
Magic Number,Eto.Drawing,ColorCMYK,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorCMYK.cs,Distance,The following statement contains a magic number: return (float)Math.Sqrt (Math.Pow ((value1.C - value2.C)' 2) + Math.Pow (value1.M - value2.M' 2) + Math.Pow (value1.Y - value2.Y' 2) + Math.Pow (value1.K - value2.K' 2));
Magic Number,Eto.Drawing,ColorCMYK,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorCMYK.cs,Distance,The following statement contains a magic number: return (float)Math.Sqrt (Math.Pow ((value1.C - value2.C)' 2) + Math.Pow (value1.M - value2.M' 2) + Math.Pow (value1.Y - value2.Y' 2) + Math.Pow (value1.K - value2.K' 2));
Magic Number,Eto.Drawing,SizeConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\SizeConverter.cs,ConvertFrom,The following statement contains a magic number: if (text != null)  			{  				string[] parts = text.Split(DimensionSplitter' StringSplitOptions.RemoveEmptyEntries);  				if (parts.Length != 2)  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Size. Should be in the form of 'width' height'"' text));    				try  				{  					return new Size(  						int.Parse(parts[0])'  						int.Parse(parts[1])  					);  				}  				catch  				{  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Size. Should be in the form of 'width' height'"' text));  				}  			}
Magic Number,Eto.Drawing,SizeFConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\SizeFConverter.cs,ConvertFrom,The following statement contains a magic number: if (text != null)  			{  				string[] parts = text.Split(DimensionSplitter' StringSplitOptions.RemoveEmptyEntries);  				if (parts.Length != 2)  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as SizeF. Should be in the form of 'width' height'"' text));    				try  				{  					return new SizeF(  						float.Parse(parts[0])'  						float.Parse(parts[1])  					);  				}  				catch  				{  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as SizeF. Should be in the form of 'width' height'"' text));  				}  			}
Magic Number,Eto.Drawing,RectangleConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\RectangleConverter.cs,ConvertFrom,The following statement contains a magic number: if (text != null)  			{  				string[] parts = text.Split(DimensionSplitter' StringSplitOptions.RemoveEmptyEntries);  				if (parts.Length != 4)  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Rectangle. Should be in the form of 'x' y' width' height'"' text));    				try  				{  					return new Rectangle(  						int.Parse(parts[0])'  						int.Parse(parts[1])'  						int.Parse(parts[2])'  						int.Parse(parts[3])  					);  				}  				catch  				{  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Rectangle. Should be in the form of 'x' y' width' height'"' text));  				}  			}
Magic Number,Eto.Drawing,RectangleConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\RectangleConverter.cs,ConvertFrom,The following statement contains a magic number: if (text != null)  			{  				string[] parts = text.Split(DimensionSplitter' StringSplitOptions.RemoveEmptyEntries);  				if (parts.Length != 4)  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Rectangle. Should be in the form of 'x' y' width' height'"' text));    				try  				{  					return new Rectangle(  						int.Parse(parts[0])'  						int.Parse(parts[1])'  						int.Parse(parts[2])'  						int.Parse(parts[3])  					);  				}  				catch  				{  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Rectangle. Should be in the form of 'x' y' width' height'"' text));  				}  			}
Magic Number,Eto.Drawing,RectangleConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\RectangleConverter.cs,ConvertFrom,The following statement contains a magic number: if (text != null)  			{  				string[] parts = text.Split(DimensionSplitter' StringSplitOptions.RemoveEmptyEntries);  				if (parts.Length != 4)  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Rectangle. Should be in the form of 'x' y' width' height'"' text));    				try  				{  					return new Rectangle(  						int.Parse(parts[0])'  						int.Parse(parts[1])'  						int.Parse(parts[2])'  						int.Parse(parts[3])  					);  				}  				catch  				{  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Rectangle. Should be in the form of 'x' y' width' height'"' text));  				}  			}
Magic Number,Eto.Drawing,RectangleFConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\RectangleFConverter.cs,ConvertFrom,The following statement contains a magic number: if (text != null)  			{  				string[] parts = text.Split(DimensionSplitter' StringSplitOptions.RemoveEmptyEntries);  				if (parts.Length != 4)  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as RectangleF. Should be in the form of 'x' y' width' height'"' text));    				try  				{  					return new RectangleF(  						float.Parse(parts[0])'  						float.Parse(parts[1])'  						float.Parse(parts[2])'  						float.Parse(parts[3])  					);  				}  				catch  				{  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as RectangleF. Should be in the form of 'x' y' width' height'"' text));  				}  			}
Magic Number,Eto.Drawing,RectangleFConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\RectangleFConverter.cs,ConvertFrom,The following statement contains a magic number: if (text != null)  			{  				string[] parts = text.Split(DimensionSplitter' StringSplitOptions.RemoveEmptyEntries);  				if (parts.Length != 4)  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as RectangleF. Should be in the form of 'x' y' width' height'"' text));    				try  				{  					return new RectangleF(  						float.Parse(parts[0])'  						float.Parse(parts[1])'  						float.Parse(parts[2])'  						float.Parse(parts[3])  					);  				}  				catch  				{  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as RectangleF. Should be in the form of 'x' y' width' height'"' text));  				}  			}
Magic Number,Eto.Drawing,RectangleFConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\RectangleFConverter.cs,ConvertFrom,The following statement contains a magic number: if (text != null)  			{  				string[] parts = text.Split(DimensionSplitter' StringSplitOptions.RemoveEmptyEntries);  				if (parts.Length != 4)  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as RectangleF. Should be in the form of 'x' y' width' height'"' text));    				try  				{  					return new RectangleF(  						float.Parse(parts[0])'  						float.Parse(parts[1])'  						float.Parse(parts[2])'  						float.Parse(parts[3])  					);  				}  				catch  				{  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as RectangleF. Should be in the form of 'x' y' width' height'"' text));  				}  			}
Magic Number,Eto.Drawing,PointConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\PointConverter.cs,ConvertFrom,The following statement contains a magic number: if (text != null)  			{  				string[] parts = text.Split(DimensionSplitter' StringSplitOptions.RemoveEmptyEntries);  				if (parts.Length != 2)  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Point. Should be in the form of 'x' y'"' text));    				try  				{  					return new Point(  						int.Parse(parts[0])'  						int.Parse(parts[1])  					);  				}  				catch  				{  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Point. Should be in the form of 'x' y'"' text));  				}  			}
Magic Number,Eto.Drawing,PointFConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\PointFConverter.cs,ConvertFrom,The following statement contains a magic number: if (text != null)  			{  				string[] parts = text.Split(DimensionSplitter' StringSplitOptions.RemoveEmptyEntries);  				if (parts.Length != 2)  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as PointF. Should be in the form of 'x' y'"' text));    				try  				{  					return new PointF(  						float.Parse(parts[0])'  						float.Parse(parts[1])  					);  				}  				catch  				{  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as PointF. Should be in the form of 'x' y'"' text));  				}  			}
Magic Number,Eto.Drawing,PaddingConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\PaddingConverter.cs,ConvertFrom,The following statement contains a magic number: if (text != null)  			{  				string[] parts = text.Split(DimensionSplitter' StringSplitOptions.RemoveEmptyEntries);    				try  				{  					switch (parts.Length)  					{  						case 1:  							return new Padding(  								int.Parse(parts[0])  							);  						case 2:  							return new Padding(  								int.Parse(parts[0])'  								int.Parse(parts[1])  							);  						case 4:  							return new Padding(  								int.Parse(parts[0])'  								int.Parse(parts[1])'  								int.Parse(parts[2])'  								int.Parse(parts[3])  							);  						default:  							throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Padding. Should be in the form of 'all'' 'horizontal' vertical'' or 'left' top' right' bottom'"' text));  					}  				}  				catch  				{  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Padding. Should be in the form of 'all'' 'horizontal' vertical'' or 'left' top' right' bottom'"' text));  				}  			}
Magic Number,Eto.Drawing,PaddingConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\PaddingConverter.cs,ConvertFrom,The following statement contains a magic number: if (text != null)  			{  				string[] parts = text.Split(DimensionSplitter' StringSplitOptions.RemoveEmptyEntries);    				try  				{  					switch (parts.Length)  					{  						case 1:  							return new Padding(  								int.Parse(parts[0])  							);  						case 2:  							return new Padding(  								int.Parse(parts[0])'  								int.Parse(parts[1])  							);  						case 4:  							return new Padding(  								int.Parse(parts[0])'  								int.Parse(parts[1])'  								int.Parse(parts[2])'  								int.Parse(parts[3])  							);  						default:  							throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Padding. Should be in the form of 'all'' 'horizontal' vertical'' or 'left' top' right' bottom'"' text));  					}  				}  				catch  				{  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Padding. Should be in the form of 'all'' 'horizontal' vertical'' or 'left' top' right' bottom'"' text));  				}  			}
Magic Number,Eto.Drawing,PaddingConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\PaddingConverter.cs,ConvertFrom,The following statement contains a magic number: if (text != null)  			{  				string[] parts = text.Split(DimensionSplitter' StringSplitOptions.RemoveEmptyEntries);    				try  				{  					switch (parts.Length)  					{  						case 1:  							return new Padding(  								int.Parse(parts[0])  							);  						case 2:  							return new Padding(  								int.Parse(parts[0])'  								int.Parse(parts[1])  							);  						case 4:  							return new Padding(  								int.Parse(parts[0])'  								int.Parse(parts[1])'  								int.Parse(parts[2])'  								int.Parse(parts[3])  							);  						default:  							throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Padding. Should be in the form of 'all'' 'horizontal' vertical'' or 'left' top' right' bottom'"' text));  					}  				}  				catch  				{  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Padding. Should be in the form of 'all'' 'horizontal' vertical'' or 'left' top' right' bottom'"' text));  				}  			}
Magic Number,Eto.Drawing,PaddingConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\PaddingConverter.cs,ConvertFrom,The following statement contains a magic number: if (text != null)  			{  				string[] parts = text.Split(DimensionSplitter' StringSplitOptions.RemoveEmptyEntries);    				try  				{  					switch (parts.Length)  					{  						case 1:  							return new Padding(  								int.Parse(parts[0])  							);  						case 2:  							return new Padding(  								int.Parse(parts[0])'  								int.Parse(parts[1])  							);  						case 4:  							return new Padding(  								int.Parse(parts[0])'  								int.Parse(parts[1])'  								int.Parse(parts[2])'  								int.Parse(parts[3])  							);  						default:  							throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Padding. Should be in the form of 'all'' 'horizontal' vertical'' or 'left' top' right' bottom'"' text));  					}  				}  				catch  				{  					throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' "Cannot parse value '{0}' as Padding. Should be in the form of 'all'' 'horizontal' vertical'' or 'left' top' right' bottom'"' text));  				}  			}
Magic Number,Eto.Drawing,FontConverter,C:\repos\picoe_Eto\Source\Eto\Drawing\FontConverter.cs,ConvertFrom,The following statement contains a magic number: if (!string.IsNullOrEmpty(text))  			{  				var values = text.Split(new [] { '+' }' StringSplitOptions.RemoveEmptyEntries).Select(r => r.Trim()).ToList();  				if (values.Count > 0)  				{  					string familyName = null;  					float? size = null;  					var decoration = FontDecoration.None;  					var style = FontStyle.None;  					string typefaceName = null;    					for (int i = 0; i < values.Count; i++)  					{  						var cur = values[i];    						var sizeStr = cur;  						if (sizeStr.EndsWith("pt"' StringComparison.OrdinalIgnoreCase))  							sizeStr = sizeStr.Substring(0' sizeStr.Length - 2);  						float tsize;  						if (float.TryParse(sizeStr' out tsize))  						{  							size = tsize;  							continue;  						}    						FontDecoration tdecoration;  						if (Enum.TryParse(cur' true' out tdecoration))  						{  							decoration |= tdecoration;  							continue;  						}    						FontStyle tstyle;  						if (Enum.TryParse(cur' true' out tstyle))  						{  							style |= tstyle;  							continue;  						}    						if (familyName == null)  						{  							familyName = cur;  							continue;  						}    						if (typefaceName != null)  							familyName += "'" + typefaceName;    						typefaceName = cur;  					}  					if (familyName == null)  						familyName = SystemFonts.Default().FamilyName;    					if (familyName.StartsWith(SystemFontPrefix' StringComparison.OrdinalIgnoreCase))  					{  						SystemFont systemFont;  						if (Enum.TryParse(familyName.Substring(SystemFontPrefix.Length)' true' out systemFont))  							return new Font(systemFont' size' decoration);  					}    					var fontSize = size ?? SystemFonts.Default().Size;  					var family = new FontFamily(familyName);  					if (!string.IsNullOrEmpty(typefaceName))  					{  						var typeface = family.Typefaces.FirstOrDefault(r => string.Equals(r.Name' typefaceName' StringComparison.OrdinalIgnoreCase));  						if (typeface != null)  							return new Font(typeface' fontSize' decoration);  					}  					return new Font(family' fontSize' style' decoration);  				}  			}
Magic Number,Eto.Forms,TableLayout,C:\repos\picoe_Eto\Source\Eto\Forms\Layout\TableLayout.cs,AutoSized,The following statement contains a magic number: if (centered)  			{  				var layout = new TableLayout(3' 3);  				layout.Padding = padding ?? Padding.Empty;  				layout.Spacing = Size.Empty;  				layout.SetColumnScale(0);  				layout.SetColumnScale(2);  				layout.SetRowScale(0);  				layout.SetRowScale(2);  				layout.Add(control' 1' 1);  				return layout;  			}  			else  			{  				var layout = new TableLayout(2' 2);  				layout.Padding = padding ?? Padding.Empty;  				layout.Spacing = Size.Empty;  				layout.Add(control' 0' 0);  				return layout;  			}
Magic Number,Eto.Forms,TableLayout,C:\repos\picoe_Eto\Source\Eto\Forms\Layout\TableLayout.cs,AutoSized,The following statement contains a magic number: if (centered)  			{  				var layout = new TableLayout(3' 3);  				layout.Padding = padding ?? Padding.Empty;  				layout.Spacing = Size.Empty;  				layout.SetColumnScale(0);  				layout.SetColumnScale(2);  				layout.SetRowScale(0);  				layout.SetRowScale(2);  				layout.Add(control' 1' 1);  				return layout;  			}  			else  			{  				var layout = new TableLayout(2' 2);  				layout.Padding = padding ?? Padding.Empty;  				layout.Spacing = Size.Empty;  				layout.Add(control' 0' 0);  				return layout;  			}
Magic Number,Eto.Forms,TableLayout,C:\repos\picoe_Eto\Source\Eto\Forms\Layout\TableLayout.cs,AutoSized,The following statement contains a magic number: if (centered)  			{  				var layout = new TableLayout(3' 3);  				layout.Padding = padding ?? Padding.Empty;  				layout.Spacing = Size.Empty;  				layout.SetColumnScale(0);  				layout.SetColumnScale(2);  				layout.SetRowScale(0);  				layout.SetRowScale(2);  				layout.Add(control' 1' 1);  				return layout;  			}  			else  			{  				var layout = new TableLayout(2' 2);  				layout.Padding = padding ?? Padding.Empty;  				layout.Spacing = Size.Empty;  				layout.Add(control' 0' 0);  				return layout;  			}
Magic Number,Eto.Forms,TableLayout,C:\repos\picoe_Eto\Source\Eto\Forms\Layout\TableLayout.cs,AutoSized,The following statement contains a magic number: if (centered)  			{  				var layout = new TableLayout(3' 3);  				layout.Padding = padding ?? Padding.Empty;  				layout.Spacing = Size.Empty;  				layout.SetColumnScale(0);  				layout.SetColumnScale(2);  				layout.SetRowScale(0);  				layout.SetRowScale(2);  				layout.Add(control' 1' 1);  				return layout;  			}  			else  			{  				var layout = new TableLayout(2' 2);  				layout.Padding = padding ?? Padding.Empty;  				layout.Spacing = Size.Empty;  				layout.Add(control' 0' 0);  				return layout;  			}
Magic Number,Eto.Forms,TableLayout,C:\repos\picoe_Eto\Source\Eto\Forms\Layout\TableLayout.cs,AutoSized,The following statement contains a magic number: if (centered)  			{  				var layout = new TableLayout(3' 3);  				layout.Padding = padding ?? Padding.Empty;  				layout.Spacing = Size.Empty;  				layout.SetColumnScale(0);  				layout.SetColumnScale(2);  				layout.SetRowScale(0);  				layout.SetRowScale(2);  				layout.Add(control' 1' 1);  				return layout;  			}  			else  			{  				var layout = new TableLayout(2' 2);  				layout.Padding = padding ?? Padding.Empty;  				layout.Spacing = Size.Empty;  				layout.Add(control' 0' 0);  				return layout;  			}
Magic Number,Eto.Forms,TableLayout,C:\repos\picoe_Eto\Source\Eto\Forms\Layout\TableLayout.cs,AutoSized,The following statement contains a magic number: if (centered)  			{  				var layout = new TableLayout(3' 3);  				layout.Padding = padding ?? Padding.Empty;  				layout.Spacing = Size.Empty;  				layout.SetColumnScale(0);  				layout.SetColumnScale(2);  				layout.SetRowScale(0);  				layout.SetRowScale(2);  				layout.Add(control' 1' 1);  				return layout;  			}  			else  			{  				var layout = new TableLayout(2' 2);  				layout.Padding = padding ?? Padding.Empty;  				layout.Spacing = Size.Empty;  				layout.Add(control' 0' 0);  				return layout;  			}
Magic Number,Eto.Forms,PropertyCellTypeBoolean,C:\repos\picoe_Eto\Source\Eto\Forms\Cells\PropertyCell.cs,OnCreate,The following statement contains a magic number: return new TableLayout  			{  				Spacing = new Size(5' 0)'  				Rows = { new TableRow(new TableCell(label' true)' checkBox) }   			};
Magic Number,Eto.Forms,PropertyCellTypeColor,C:\repos\picoe_Eto\Source\Eto\Forms\Cells\PropertyCell.cs,OnPaint,The following statement contains a magic number: rect.Left = rect.Right - 35;
Magic Number,Eto.Forms.ThemedControls,ThemedExpanderHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedExpanderHandler.cs,ThemedExpanderHandler,The following statement contains a magic number: toggle.Size = new Size(24' 24);
Magic Number,Eto.Forms.ThemedControls,ThemedExpanderHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedExpanderHandler.cs,ThemedExpanderHandler,The following statement contains a magic number: toggle.Size = new Size(24' 24);
Magic Number,Eto.Forms.ThemedControls,ThemedSplitterHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedSplitterHandler.cs,SplitterMouseMove,The following statement contains a magic number: Position = (int)Math.Round((Orientation == Orientation.Horizontal  				? e.Location.X + splitter.Location.X : e.Location.Y + splitter.Location.Y) - swidth*0.5);
Magic Number,Eto.Forms.ThemedControls,ThemedSpinnerHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedSpinnerHandler.cs,Initialize,The following statement contains a magic number: Control.Size = new Size(16' 16);
Magic Number,Eto.Forms.ThemedControls,ThemedSpinnerHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedSpinnerHandler.cs,Initialize,The following statement contains a magic number: Control.Size = new Size(16' 16);
Magic Number,Eto.Forms.ThemedControls,ThemedSpinnerHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedSpinnerHandler.cs,Initialize,The following statement contains a magic number: numberOfElements = 12;
Magic Number,Eto.Forms.ThemedControls,ThemedSpinnerHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedSpinnerHandler.cs,Initialize,The following statement contains a magic number: numberOfVisibleElements = 10;
Magic Number,Eto.Forms.ThemedControls,ThemedSpinnerHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedSpinnerHandler.cs,HandlePaint,The following statement contains a magic number: for (int i = 1; i <= numberOfElements; i++)  			{  				float alphaValue = (float)i / numberOfVisibleElements;  				if (alphaValue > 1f)  					alphaValue = 0f;  				float alpha = enabled ? alphaValue : DisabledAlpha;  				var elementColor = new Color(ElementColor' alpha);    				float rate = 5F / ElementSize;  				float size = controlSize.Width / rate;    				float diff = (controlSize.Width / 5F) - size;  				float x = (controlSize.Width / 9.0F) + diff;  				float y = (controlSize.Height / 9.0F) + diff;  				e.Graphics.RotateTransform(angle * (int)Direction);    				switch (Mode)  				{  					case ThemedSpinnerMode.Circle:  						using (var brush = new SolidBrush(elementColor))  						{  							e.Graphics.FillEllipse(brush' x' y' size' size);  						}  						break;  					case ThemedSpinnerMode.Line:  						using (var pen = new Pen(elementColor' LineThickness * minSize / 16))  						{  							pen.LineCap = LineCap;  							x -= pen.Thickness / 2;  							y -= pen.Thickness / 2;  							e.Graphics.DrawLine(pen' x' y' x + size' y + size);  						}  						break;  				}  			}
Magic Number,Eto.Forms.ThemedControls,ThemedSpinnerHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedSpinnerHandler.cs,HandlePaint,The following statement contains a magic number: for (int i = 1; i <= numberOfElements; i++)  			{  				float alphaValue = (float)i / numberOfVisibleElements;  				if (alphaValue > 1f)  					alphaValue = 0f;  				float alpha = enabled ? alphaValue : DisabledAlpha;  				var elementColor = new Color(ElementColor' alpha);    				float rate = 5F / ElementSize;  				float size = controlSize.Width / rate;    				float diff = (controlSize.Width / 5F) - size;  				float x = (controlSize.Width / 9.0F) + diff;  				float y = (controlSize.Height / 9.0F) + diff;  				e.Graphics.RotateTransform(angle * (int)Direction);    				switch (Mode)  				{  					case ThemedSpinnerMode.Circle:  						using (var brush = new SolidBrush(elementColor))  						{  							e.Graphics.FillEllipse(brush' x' y' size' size);  						}  						break;  					case ThemedSpinnerMode.Line:  						using (var pen = new Pen(elementColor' LineThickness * minSize / 16))  						{  							pen.LineCap = LineCap;  							x -= pen.Thickness / 2;  							y -= pen.Thickness / 2;  							e.Graphics.DrawLine(pen' x' y' x + size' y + size);  						}  						break;  				}  			}
Magic Number,Eto.Forms.ThemedControls,ThemedSpinnerHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedSpinnerHandler.cs,HandlePaint,The following statement contains a magic number: for (int i = 1; i <= numberOfElements; i++)  			{  				float alphaValue = (float)i / numberOfVisibleElements;  				if (alphaValue > 1f)  					alphaValue = 0f;  				float alpha = enabled ? alphaValue : DisabledAlpha;  				var elementColor = new Color(ElementColor' alpha);    				float rate = 5F / ElementSize;  				float size = controlSize.Width / rate;    				float diff = (controlSize.Width / 5F) - size;  				float x = (controlSize.Width / 9.0F) + diff;  				float y = (controlSize.Height / 9.0F) + diff;  				e.Graphics.RotateTransform(angle * (int)Direction);    				switch (Mode)  				{  					case ThemedSpinnerMode.Circle:  						using (var brush = new SolidBrush(elementColor))  						{  							e.Graphics.FillEllipse(brush' x' y' size' size);  						}  						break;  					case ThemedSpinnerMode.Line:  						using (var pen = new Pen(elementColor' LineThickness * minSize / 16))  						{  							pen.LineCap = LineCap;  							x -= pen.Thickness / 2;  							y -= pen.Thickness / 2;  							e.Graphics.DrawLine(pen' x' y' x + size' y + size);  						}  						break;  				}  			}
Magic Number,Eto.Forms.ThemedControls,ThemedAboutDialogHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedAboutHandler.cs,ThemedAboutDialogHandler,The following statement contains a magic number: Control.Width = 500;
Magic Number,Eto.Forms.ThemedControls,ThemedAboutDialogHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedAboutHandler.cs,ThemedAboutDialogHandler,The following statement contains a magic number: Control.Height = 350;
Magic Number,Eto.Forms.ThemedControls,ThemedAboutDialogHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedAboutHandler.cs,ThemedAboutDialogHandler,The following statement contains a magic number: layout.Padding = new Padding(10);
Magic Number,Eto.Forms.ThemedControls,ThemedAboutDialogHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedAboutHandler.cs,ThemedAboutDialogHandler,The following statement contains a magic number: layout2.DefaultSpacing = new Size(5' 5);
Magic Number,Eto.Forms.ThemedControls,ThemedAboutDialogHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedAboutHandler.cs,ThemedAboutDialogHandler,The following statement contains a magic number: layout2.DefaultSpacing = new Size(5' 5);
Magic Number,Eto.Forms.ThemedControls,ThemedAboutDialogHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedAboutHandler.cs,ThemedAboutDialogHandler,The following statement contains a magic number: layout3.DefaultSpacing = new Size(5' 5);
Magic Number,Eto.Forms.ThemedControls,ThemedAboutDialogHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedAboutHandler.cs,ThemedAboutDialogHandler,The following statement contains a magic number: layout3.DefaultSpacing = new Size(5' 5);
Magic Number,Eto.Forms.ThemedControls,ThemedAboutDialogHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedAboutHandler.cs,ThemedAboutDialogHandler,The following statement contains a magic number: labelProgramName.Font = SystemFonts.Bold(SystemFonts.Default().Size + 4);
Magic Number,Eto.Forms.ThemedControls,ThemedStepperHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedStepperHandler.cs,ThemedStepperHandler,The following statement contains a magic number: Control = new Panel { Height = 28' Width = 17 };
Magic Number,Eto.Forms.ThemedControls,ThemedStepperHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedStepperHandler.cs,ThemedStepperHandler,The following statement contains a magic number: Control = new Panel { Height = 28' Width = 17 };
Magic Number,Eto.Forms.ThemedControls,ThemedFilePickerHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedFilePickerHandler.cs,ThemedFilePickerHandler,The following statement contains a magic number: Control.Spacing = 4;
Magic Number,Eto.Forms.ThemedControls,ThemedDocumentControlHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedDocumentControlHandler.cs,CalculateTab,The following statement contains a magic number: var closesize = tabDrawable.Height / 2;
Magic Number,Eto.Forms.ThemedControls,ThemedDocumentControlHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedDocumentControlHandler.cs,CalculateTab,The following statement contains a magic number: tab.CloseRect = new RectangleF(tabRect.X + tab.Rect.Width - tabDrawable.Height / 4 - closesize' tabDrawable.Height / 4' closesize' closesize);
Magic Number,Eto.Forms.ThemedControls,ThemedDocumentControlHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedDocumentControlHandler.cs,CalculateTab,The following statement contains a magic number: tab.CloseRect = new RectangleF(tabRect.X + tab.Rect.Width - tabDrawable.Height / 4 - closesize' tabDrawable.Height / 4' closesize' closesize);
Magic Number,Eto.Forms.ThemedControls,ThemedDocumentControlHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedDocumentControlHandler.cs,CalculateTab,The following statement contains a magic number: tab.TextRect = new RectangleF(tabRect.X + TabPadding.Left + textoffset' (tabDrawable.Height - size.Height) / 2' textSize.Width' textSize.Height);
Magic Number,Eto.Forms.ThemedControls,ThemedDocumentControlHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedDocumentControlHandler.cs,DrawTab,The following statement contains a magic number: var closemargin =  closerect.Height / 3;
Magic Number,Eto.Forms.ThemedControls,ThemedDocumentControlHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedDocumentControlHandler.cs,DrawTab,The following statement contains a magic number: if (tab.Image != null)  			{  				var imageSize = tab.Image.Size;  				g.DrawImage(tab.Image' tabRect.X + TabPadding.Left + (maxImageSize.Width - imageSize.Width) / 2' (tabDrawable.Height - imageSize.Height) / 2);  			}
Magic Number,Eto.Forms.ThemedControls,ThemedDocumentControlHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedDocumentControlHandler.cs,DrawTab,The following statement contains a magic number: if (tab.Image != null)  			{  				var imageSize = tab.Image.Size;  				g.DrawImage(tab.Image' tabRect.X + TabPadding.Left + (maxImageSize.Width - imageSize.Width) / 2' (tabDrawable.Height - imageSize.Height) / 2);  			}
Missing Default,Eto,OperatingSystemPlatform,C:\repos\picoe_Eto\Source\Eto\OperatingSystemPlatform.cs,OperatingSystemPlatform,The following switch statement is missing a default case: switch (GetUnixType().ToUpperInvariant())  					{  						case "DARWIN":  							IsMac = true;  							break;  						case "LINUX":  							IsLinux = true;  							break;  					}
Missing Default,Eto,CollectionChangedHandler<TItem;TCollection>,C:\repos\picoe_Eto\Source\Eto\CollectionChangedHandler.cs,CollectionChanged,The following switch statement is missing a default case: switch (e.Action)  			{  				case NotifyCollectionChangedAction.Add:  					if (e.NewStartingIndex != -1)  					{  						if (e.NewItems.Count == 1)  							InsertItem(e.NewStartingIndex' (TItem)e.NewItems[0]);  						else  							InsertRange(e.NewStartingIndex' e.NewItems.Cast<TItem>());  					}  					else  						AddRange(e.NewItems.Cast<TItem>());  					break;  				case NotifyCollectionChangedAction.Move:  					if (e.OldStartingIndex != -1)  						RemoveRange(e.OldStartingIndex' e.OldItems.Count);  					else  						RemoveRange(e.OldItems.Cast<TItem>());  					InsertRange(e.NewStartingIndex' e.NewItems.Cast<TItem>());  					break;  				case NotifyCollectionChangedAction.Remove:  					if (e.OldStartingIndex != -1)  					{  						if (e.OldItems.Count == 1)  							RemoveItem(e.OldStartingIndex);  						else  							RemoveRange(e.OldStartingIndex' e.OldItems.Count);  					}  					else  						RemoveRange(e.OldItems.Cast<TItem>());  					break;  				case NotifyCollectionChangedAction.Replace:  					if (e.OldStartingIndex != -1)  					{  						RemoveRange(e.OldStartingIndex' e.OldItems.Count);  						InsertRange(e.OldStartingIndex' e.NewItems.Cast<TItem>());  					}  					else  					{  						for (int i = 0; i < e.OldItems.Count; i++)  						{  							var index = IndexOf((TItem)e.OldItems[i]);  							RemoveItem(index);  							InsertItem(index' (TItem)e.NewItems[i]);  						}  					}  					break;  				case NotifyCollectionChangedAction.Reset:  					RemoveAllItems();  					break;  			}
Missing Default,Eto.Drawing,DashStyle,C:\repos\picoe_Eto\Source\Eto\Drawing\DashStyle.cs,TryParse,The following switch statement is missing a default case: switch (value.ToUpperInvariant())  			{  				case "SOLID":  					style = DashStyles.Solid;  					return true;  				case "DASH":  					style = DashStyles.Dash;  					return true;  				case "DOT":  					style = DashStyles.Dot;  					return true;  				case "DASHDOT":  					style = DashStyles.DashDot;  					return true;  				case "DASHDOTDOT":  					style = DashStyles.DashDotDot;  					return true;  			}
Missing Default,Eto.Drawing,Color,C:\repos\picoe_Eto\Source\Eto\Drawing\Color.cs,TryParse,The following switch statement is missing a default case: switch (array.Length)  			{  				case 1:  					color = Color.FromArgb((int)array2[0]);  					return true;  				case 3:  					color = Color.FromArgb((int)array2[0]' (int)array2[1]' (int)array2[2]);  					return true;  				case 4:  					color = Color.FromArgb((int)array2[0]' (int)array2[1]' (int)array2[2]' (int)array2[3]);  					return true;  			}
Missing Default,Eto.Drawing,ColorHSB,C:\repos\picoe_Eto\Source\Eto\Drawing\ColorHSB.cs,ToColor,The following switch statement is missing a default case: switch (sectorNumber)  				{  					case 0:  						r = B;  						g = t;  						b = p;  						break;  					case 1:  						r = q;  						g = B;  						b = p;  						break;  					case 2:  						r = p;  						g = B;  						b = t;  						break;  					case 3:  						r = p;  						g = q;  						b = B;  						break;  					case 4:  						r = t;  						g = p;  						b = B;  						break;  					case 5:  						r = B;  						g = p;  						b = q;  						break;  				}
Missing Default,Eto.Forms,MaskedTextBox,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\MaskedTextBox.cs,OnKeyDown,The following switch statement is missing a default case: switch (e.KeyData)  			{  				case Keys.Delete:  				case Keys.Backspace:  					if (provider == null)  						return;  					// override default delete/backspace behaviour so we can skip past literals  					var sel = Selection;  					var pos = sel.Start;  					var len = sel.Length();  					var forward = len > 0 || e.KeyData == Keys.Delete;  					len = Math.Max(1' len);  					bool changed;  					if (IsOverwrite)  						changed = provider.Clear(ref pos' len' forward);  					else  						changed = provider.Delete(ref pos' len' forward);    					if (changed)  					{  						Text = provider.DisplayText;  						CaretIndex = pos;  					}  					e.Handled = true;  					break;  				case Keys.Insert:  					if (!SupportsInsert && InsertMode == InsertKeyMode.Toggle)  					{  						ManualOverwriteMode = !ManualOverwriteMode;  						e.Handled = true;  					}  					break;  			}
Missing Default,Eto.Forms,DualBinding<T>,C:\repos\picoe_Eto\Source\Eto\Forms\Binding\DualBinding.cs,SetBinding,The following switch statement is missing a default case: switch (mode)  				{  					case DualBindingMode.OneTime:  					case DualBindingMode.OneWay:  					case DualBindingMode.TwoWay:  						SetDestination();  						break;  					case DualBindingMode.OneWayToSource:  						SetSource();  						break;  				}
Missing Default,Eto.Forms,MaskedTextStepper,C:\repos\picoe_Eto\Source\Eto\Forms\Controls\MaskedTextStepper.cs,OnKeyDown,The following switch statement is missing a default case: switch (e.KeyData)  			{  				case Keys.Delete:  				case Keys.Backspace:  					if (provider == null)  						return;  					// override default delete/backspace behaviour so we can skip past literals  					var sel = Selection;  					var pos = sel.Start;  					var len = sel.Length();  					var forward = len > 0 || e.KeyData == Keys.Delete;  					len = Math.Max(1' len);  					bool changed;  					if (IsOverwrite)  						changed = provider.Clear(ref pos' len' forward);  					else  						changed = provider.Delete(ref pos' len' forward);    					if (changed)  					{  						Text = provider.DisplayText;  						CaretIndex = pos;  					}  					e.Handled = true;  					break;  				case Keys.Insert:  					if (!SupportsInsert && InsertMode == InsertKeyMode.Toggle)  					{  						ManualOverwriteMode = !ManualOverwriteMode;  						e.Handled = true;  					}  					break;  			}
Missing Default,Eto.Forms.ThemedControls,ThemedSpinnerHandler,C:\repos\picoe_Eto\Source\Eto\Forms\ThemedControls\ThemedSpinnerHandler.cs,HandlePaint,The following switch statement is missing a default case: switch (Mode)  				{  					case ThemedSpinnerMode.Circle:  						using (var brush = new SolidBrush(elementColor))  						{  							e.Graphics.FillEllipse(brush' x' y' size' size);  						}  						break;  					case ThemedSpinnerMode.Line:  						using (var pen = new Pen(elementColor' LineThickness * minSize / 16))  						{  							pen.LineCap = LineCap;  							x -= pen.Thickness / 2;  							y -= pen.Thickness / 2;  							e.Graphics.DrawLine(pen' x' y' x + size' y + size);  						}  						break;  				}
