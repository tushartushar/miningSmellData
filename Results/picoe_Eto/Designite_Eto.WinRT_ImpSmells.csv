Implementation smell,Namespace,Class,File,Method,Description
Long Method,Eto.WinRT.Forms.Controls,DrawableHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\DrawableHandler.cs,UpdateTiles,The method has 100 lines of code.
Long Method,Eto.WinRT.Forms.Controls,TreeViewHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\TreeViewHandler.cs,AttachEvent,The method has 104 lines of code.
Long Method,Eto.WinRT.Forms,WpfFrameworkElement<TControl;TWidget;TCallback>,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\WpfFrameworkElement.cs,AttachEvent,The method has 126 lines of code.
Complex Method,Eto.WinRT.Forms.Controls,DrawableHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\DrawableHandler.cs,UpdateTiles,Cyclomatic complexity of the method is 12
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,DrawText,The method has 5 parameters. Parameters: font' brush' x' y' text
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,DrawLine,The method has 5 parameters. Parameters: pen' startx' starty' endx' endy
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,FillEllipse,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,CreateArc,The method has 7 parameters. Parameters: x' y' width' height' startAngle' sweepAngle' start
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,FillPie,The method has 7 parameters. Parameters: brush' x' y' width' height' startAngle' sweepAngle
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,Eto.Direct2D.Drawing,GraphicsPathHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsPathHandler.cs,AddArc,The method has 6 parameters. Parameters: x' y' width' height' startAngle' sweepAngle
Long Parameter List,Eto.Direct2D.Drawing,MatrixHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\MatrixHandler.cs,Create,The method has 6 parameters. Parameters: m11' m12' m21' m22' dx' dy
Long Parameter List,Eto.Direct2D.Drawing,RadialGradientBrushHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\RadialGradientBrushHandler.cs,Create,The method has 5 parameters. Parameters: startColor' endColor' center' gradientOrigin' radius
Long Parameter List,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The method has 6 parameters. Parameters: point0' point1' point2' point3' tension' numberOfPoints
Long Parameter List,Eto.WinRT.Forms.Controls,WebViewHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\WebViewHandler.cs,WebBrowserV1_NewWindow,The method has 6 parameters. Parameters: URL' Flags' TargetFrameName' PostData' Headers' Processed
Long Parameter List,Eto.Shared.Drawing,BaseBitmapData,C:\repos\picoe_Eto\Source\Shared\BaseBitmapData.cs,BaseBitmapData,The method has 5 parameters. Parameters: image' data' scanWidth' bitsPerPixel' controlObject
Long Statement,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,RotateTransform,The length of the statement  "            SetTransform(currentTransform = s.Matrix3x2.Multiply(s.Matrix3x2.Rotation((float)(Conversions.DegreesToRadians(angle)))' currentTransform)); " is 140.
Long Statement,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,GetTextLayout,The length of the statement  "			var textLayout = new sw.TextLayout(SDFactory.DirectWriteFactory' text' fontHandler.TextFormat' float.MaxValue' float.MaxValue); " is 127.
Long Statement,Eto.Direct2D.Drawing,ImageHandler<TWidget>,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\ImageHandler.cs,Create,The length of the statement  "			Control = new sw.Bitmap(SDFactory.WicImagingFactory' width' height' pixelFormat.ToWic()' sw.BitmapCreateCacheOption.CacheOnLoad); " is 129.
Long Statement,Eto.Direct2D.Drawing,ImageHandler<TWidget>,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\ImageHandler.cs,Create,The length of the statement  "			Control = new sw.Bitmap(SDFactory.WicImagingFactory' width' height' imageHandler.Control.PixelFormat' sw.BitmapCreateCacheOption.CacheOnLoad); " is 142.
Long Statement,Eto.Direct2D.Drawing,IndexedBitmapHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\IndexedBitmapHandler.cs,Create,The length of the statement  "			Control = new sw.Bitmap(SDFactory.WicImagingFactory' width' height' GetFormat(bitsPerPixel)' sw.BitmapCreateCacheOption.CacheOnLoad); " is 133.
Long Statement,Eto.Direct2D.Drawing,MatrixHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\MatrixHandler.cs,RotateAt,The length of the statement  "			var matrix = new s.Matrix3x2(cosa' sina' -sina' cosa' centerX - centerX * cosa + centerY * sina' centerY - centerX * sina - centerY * cosa); " is 140.
Long Statement,Eto.Direct2D.Drawing,MatrixHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\MatrixHandler.cs,Skew,The length of the statement  "			var matrix = new s.Matrix3x2(1' (float)Math.Tan(Conversions.DegreesToRadians(skewX))' (float)Math.Tan(Conversions.DegreesToRadians(skewY))' 1' 0' 0); " is 149.
Long Statement,Eto.Direct2D.Drawing,MatrixHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\MatrixHandler.cs,TransformPoint,The length of the statement  "			s.Vector2 v = s.Matrix3x2.TransformPoint(this.Control' new s.Vector2(p.X' p.Y)); // implicit conversion from Vector2 to Vector2 " is 127.
Long Statement,Eto.WinRT.Forms.Controls,DrawableHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\DrawableHandler.cs,SetMaxTiles,The length of the statement  "			maxTiles = new Size(((int)Control.ActualWidth + tileSize.Width - 1) / tileSize.Width' ((int)Control.ActualHeight + tileSize.Height - 1) / tileSize.Height); " is 155.
Long Statement,Eto.WinRT.Forms.Controls,ScrollableHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\ScrollableHandler.cs,AttachEvent,The length of the statement  "						Callback.OnScroll(Widget' new ScrollEventArgs(new Point((int)scroller.HorizontalOffset' (int)scroller.VerticalOffset))); " is 120.
Long Statement,Eto.WinRT,Conversions,C:\repos\picoe_Eto\Source\Eto.WinRT\Conversions.Xaml.cs,ToWpf,The length of the statement  "			return wu.Color.FromArgb((byte)(value.A * byte.MaxValue)' (byte)(value.R * byte.MaxValue)' (byte)(value.G * byte.MaxValue)' (byte)(value.B * byte.MaxValue)); " is 157.
Long Statement,Eto.WinRT,Conversions,C:\repos\picoe_Eto\Source\Eto.WinRT\Conversions.Xaml.cs,ToEtoSize,The length of the statement  "			return new Size((int)(double.IsNaN(value.Width) ? -1 : value.Width)' (int)(double.IsNaN(value.Height) ? -1 : value.Height)); " is 124.
Long Statement,Eto.WinRT,Conversions,C:\repos\picoe_Eto\Source\Eto.WinRT\Conversions.Xaml.cs,GetSize,The length of the statement  "			return new Size((int)(double.IsNaN(element.Width) ? -1 : element.Width)' (int)(double.IsNaN(element.Height) ? -1 : element.Height)); " is 132.
Long Statement,Eto.WinRT,Conversions,C:\repos\picoe_Eto\Source\Eto.WinRT\Conversions.Xaml.cs,GetSize,The length of the statement  "			return new Size((int)(double.IsNaN(element.Width) ? -1 : element.Width)' (int)(double.IsNaN(element.Height) ? -1 : element.Height)); " is 132.
Long Statement,Eto.WinRT.Forms,MessageBoxHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\MessageBoxHandler.cs,ShowDialog,The length of the statement  "				return DialogResult.Ok; // TODO: this returns immediately' but the MessageDialog appears asynchronously. Fix the Eto API to be asynchronous. " is 140.
Long Statement,Eto.WinRT.Forms,TableLayoutHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\TableLayoutHandler.cs,SetChildrenSizes,The length of the statement  "						childControl.ParentMinimumSize = new wf.Size(Math.Max(0' maxx - margin.Horizontal())' Math.Max(0' maxy - margin.Vertical())); " is 125.
Long Statement,Eto.WinRT.Forms,WpfFrameworkElement<TControl;TWidget;TCallback>,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\WpfFrameworkElement.cs,SetSize,The length of the statement  "			ContainerControl.Width = XScale && ControlIsLoaded ? double.NaN : Math.Max(preferredSize.Width' parentMinimumSize.Width); " is 121.
Long Statement,Eto.WinRT.Forms,WpfFrameworkElement<TControl;TWidget;TCallback>,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\WpfFrameworkElement.cs,SetSize,The length of the statement  "			ContainerControl.Height = YScale && ControlIsLoaded ? double.NaN : Math.Max(preferredSize.Height' parentMinimumSize.Height); " is 124.
Long Statement,Eto.WinRT.Forms,WpfFrameworkElement<TControl;TWidget;TCallback>,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\WpfFrameworkElement.cs,SetSize,The length of the statement  "			ContainerControl.MinWidth = XScale && ControlIsLoaded ? 0 : Math.Max(0' double.IsNaN(preferredSize.Width) ? defaultSize.Width : preferredSize.Width); " is 149.
Long Statement,Eto.WinRT.Forms,WpfFrameworkElement<TControl;TWidget;TCallback>,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\WpfFrameworkElement.cs,SetSize,The length of the statement  "			ContainerControl.MinHeight = YScale && ControlIsLoaded ? 0 : Math.Max(0' double.IsNaN(preferredSize.Height) ? defaultSize.Height : preferredSize.Height); " is 153.
Long Statement,Eto.WinRT.Forms,WpfPanel<TControl;TWidget;TCallback>,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\WpfPanel.cs,GetPreferredSize,The length of the statement  "					baseSize = new wf.Size(Math.Max(0' preferredSize.Width + padding.Width)' Math.Max(0' preferredSize.Height + padding.Height)); " is 125.
Long Statement,Eto.Shared.Drawing,BaseBitmapData,C:\repos\picoe_Eto\Source\Shared\BaseBitmapData.cs,GetPixel,The length of the statement  "			throw new NotSupportedException(string.Format(CultureInfo.CurrentCulture' "This PixelFormat is not supported by GetPixel. Must be 24 or 32 bits per pixel' or 8 bit indexed")); " is 175.
Long Statement,Eto.Shared.Drawing,BaseBitmapData,C:\repos\picoe_Eto\Source\Shared\BaseBitmapData.cs,SetPixel,The length of the statement  "				throw new NotSupportedException(string.Format(CultureInfo.CurrentCulture' "This PixelFormat is not supported by SetPixel. Must be 3 or 4 bytes per pixel")); " is 156.
Complex Conditional,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,CreateXamlRenderTarget,The conditional expression  "!double.IsNaN(size.Width) &&  				!double.IsNaN(size.Height) &&  				!size.IsEmpty &&  				(image == null ||  				 image.Width != size.Width ||  				 image.Height != size.Height)"  is complex.
Complex Conditional,Eto.WinRT.Forms.Controls,DateTimePickerHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\DateTimePickerHandler.cs,Initialize,The conditional expression  "last != val && (last == null || val == null || Math.Abs((last.Value - val.Value).TotalSeconds) >= 1)"  is complex.
Magic Number,Eto.Direct2D.Drawing,BitmapHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\BitmapHandler.cs,Lock,The following statement contains a magic number: var bpp = Control.PixelFormat == PixelFormat.Format24bppRgb.ToWic() ? 24 : 32;
Magic Number,Eto.Direct2D.Drawing,BitmapHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\BitmapHandler.cs,Lock,The following statement contains a magic number: var bpp = Control.PixelFormat == PixelFormat.Format24bppRgb.ToWic() ? 24 : 32;
Magic Number,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,CreateArc,The following statement contains a magic number: float dx = width / 2;
Magic Number,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,CreateArc,The following statement contains a magic number: float dy = height / 2;
Magic Number,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,CreateArc,The following statement contains a magic number: bool isLargeArc = Math.Abs(sweepAngle) > 180;
Magic Number,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,CreateArc,The following statement contains a magic number: bool isClockwise = sweepAngle >= 0 && Math.Abs(sweepAngle) < 360;
Magic Number,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,FillPie,The following statement contains a magic number: var center = new s.Vector2(x + width / 2' y + height / 2);
Magic Number,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,FillPie,The following statement contains a magic number: var center = new s.Vector2(x + width / 2' y + height / 2);
Magic Number,Eto.Direct2D.Drawing,GraphicsPathHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsPathHandler.cs,AddEllipse,The following statement contains a magic number: var ellipse = new sd.Ellipse(new s.Vector2(x + width / 2' y + height / 2)' width / 2' height / 2);
Magic Number,Eto.Direct2D.Drawing,GraphicsPathHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsPathHandler.cs,AddEllipse,The following statement contains a magic number: var ellipse = new sd.Ellipse(new s.Vector2(x + width / 2' y + height / 2)' width / 2' height / 2);
Magic Number,Eto.Direct2D.Drawing,GraphicsPathHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsPathHandler.cs,AddEllipse,The following statement contains a magic number: var ellipse = new sd.Ellipse(new s.Vector2(x + width / 2' y + height / 2)' width / 2' height / 2);
Magic Number,Eto.Direct2D.Drawing,GraphicsPathHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsPathHandler.cs,AddEllipse,The following statement contains a magic number: var ellipse = new sd.Ellipse(new s.Vector2(x + width / 2' y + height / 2)' width / 2' height / 2);
Magic Number,Eto.Direct2D.Drawing,IndexedBitmapHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\IndexedBitmapHandler.cs,GetFormat,The following statement contains a magic number: switch (bitsPerPixel)  			{  				case 8:  					return sw.PixelFormat.Format8bppIndexed;  				case 4:  					return sw.PixelFormat.Format4bppIndexed;  				case 2:  					return sw.PixelFormat.Format2bppIndexed;  				case 1:  					return sw.PixelFormat.Format1bppIndexed;  				default:  					throw new NotSupportedException();  			}
Magic Number,Eto.Direct2D.Drawing,IndexedBitmapHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\IndexedBitmapHandler.cs,GetFormat,The following statement contains a magic number: switch (bitsPerPixel)  			{  				case 8:  					return sw.PixelFormat.Format8bppIndexed;  				case 4:  					return sw.PixelFormat.Format4bppIndexed;  				case 2:  					return sw.PixelFormat.Format2bppIndexed;  				case 1:  					return sw.PixelFormat.Format1bppIndexed;  				default:  					throw new NotSupportedException();  			}
Magic Number,Eto.Direct2D.Drawing,IndexedBitmapHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\IndexedBitmapHandler.cs,GetFormat,The following statement contains a magic number: switch (bitsPerPixel)  			{  				case 8:  					return sw.PixelFormat.Format8bppIndexed;  				case 4:  					return sw.PixelFormat.Format4bppIndexed;  				case 2:  					return sw.PixelFormat.Format2bppIndexed;  				case 1:  					return sw.PixelFormat.Format1bppIndexed;  				default:  					throw new NotSupportedException();  			}
Magic Number,Eto.Direct2D.Drawing,LinearGradientBrushHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\LinearGradientBrushHandler.cs,Create,The following statement contains a magic number: matrix.RotateAt(angle - 45' startPoint.X' startPoint.Y);
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,SplineCurve,The following statement contains a magic number: if (pointList.Count == 2) {  				pts = CalculateSplineCurve (pointList[0]' pointList[0]' pointList[1]' pointList[1]' tension);  				if (pts != null) {  					for (int j = 0; j < pts.Length; j++)  						yield return pts[j];  				}  			} else {  				for (int i = 0; i < pointList.Count - 1; i++) {  					if (i == 0)  						pts = CalculateSplineCurve (pointList[0]' pointList[0]' pointList[1]' pointList[2]' tension);  					else if (i == pointList.Count - 2)  						pts = CalculateSplineCurve (pointList[i - 1]' pointList[i]' pointList[i + 1]' pointList[i + 1]' tension);  					else  						pts = CalculateSplineCurve (pointList[i - 1]' pointList[i]' pointList[i + 1]' pointList[i + 2]' tension);    					for (int j = 0; j < pts.Length; j++)  						yield return pts[j];  				}  			}
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,SplineCurve,The following statement contains a magic number: if (pointList.Count == 2) {  				pts = CalculateSplineCurve (pointList[0]' pointList[0]' pointList[1]' pointList[1]' tension);  				if (pts != null) {  					for (int j = 0; j < pts.Length; j++)  						yield return pts[j];  				}  			} else {  				for (int i = 0; i < pointList.Count - 1; i++) {  					if (i == 0)  						pts = CalculateSplineCurve (pointList[0]' pointList[0]' pointList[1]' pointList[2]' tension);  					else if (i == pointList.Count - 2)  						pts = CalculateSplineCurve (pointList[i - 1]' pointList[i]' pointList[i + 1]' pointList[i + 1]' tension);  					else  						pts = CalculateSplineCurve (pointList[i - 1]' pointList[i]' pointList[i + 1]' pointList[i + 2]' tension);    					for (int j = 0; j < pts.Length; j++)  						yield return pts[j];  				}  			}
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,SplineCurve,The following statement contains a magic number: if (pointList.Count == 2) {  				pts = CalculateSplineCurve (pointList[0]' pointList[0]' pointList[1]' pointList[1]' tension);  				if (pts != null) {  					for (int j = 0; j < pts.Length; j++)  						yield return pts[j];  				}  			} else {  				for (int i = 0; i < pointList.Count - 1; i++) {  					if (i == 0)  						pts = CalculateSplineCurve (pointList[0]' pointList[0]' pointList[1]' pointList[2]' tension);  					else if (i == pointList.Count - 2)  						pts = CalculateSplineCurve (pointList[i - 1]' pointList[i]' pointList[i + 1]' pointList[i + 1]' tension);  					else  						pts = CalculateSplineCurve (pointList[i - 1]' pointList[i]' pointList[i + 1]' pointList[i + 2]' tension);    					for (int j = 0; j < pts.Length; j++)  						yield return pts[j];  				}  			}
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,SplineCurve,The following statement contains a magic number: if (pointList.Count == 2) {  				pts = CalculateSplineCurve (pointList[0]' pointList[0]' pointList[1]' pointList[1]' tension);  				if (pts != null) {  					for (int j = 0; j < pts.Length; j++)  						yield return pts[j];  				}  			} else {  				for (int i = 0; i < pointList.Count - 1; i++) {  					if (i == 0)  						pts = CalculateSplineCurve (pointList[0]' pointList[0]' pointList[1]' pointList[2]' tension);  					else if (i == pointList.Count - 2)  						pts = CalculateSplineCurve (pointList[i - 1]' pointList[i]' pointList[i + 1]' pointList[i + 1]' tension);  					else  						pts = CalculateSplineCurve (pointList[i - 1]' pointList[i]' pointList[i + 1]' pointList[i + 2]' tension);    					for (int j = 0; j < pts.Length; j++)  						yield return pts[j];  				}  			}
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float AX = SX1 + SX2 + 2 * point1.X - 2 * point2.X;
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float AX = SX1 + SX2 + 2 * point1.X - 2 * point2.X;
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float AY = SY1 + SY2 + 2 * point1.Y - 2 * point2.Y;
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float AY = SY1 + SY2 + 2 * point1.Y - 2 * point2.Y;
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float BX = -2 * SX1 - SX2 - 3 * point1.X + 3 * point2.X;
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float BX = -2 * SX1 - SX2 - 3 * point1.X + 3 * point2.X;
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float BX = -2 * SX1 - SX2 - 3 * point1.X + 3 * point2.X;
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float BY = -2 * SY1 - SY2 - 3 * point1.Y + 3 * point2.Y;
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float BY = -2 * SY1 - SY2 - 3 * point1.Y + 3 * point2.Y;
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float BY = -2 * SY1 - SY2 - 3 * point1.Y + 3 * point2.Y;
Magic Number,Eto.WinRT.Forms.Controls,ButtonHandler,C:\repos\picoe_Eto\Source\Eto.Wpf\Forms\Controls\ButtonHandler.cs,ButtonHandler,The following statement contains a magic number: label = new WpfLabel  			{  				VerticalAlignment = sw.VerticalAlignment.Center'  				HorizontalAlignment = sw.HorizontalAlignment.Center'  				Padding = new sw.Thickness(3' 0' 3' 0)'  				Visibility = sw.Visibility.Collapsed  			};
Magic Number,Eto.WinRT.Forms.Controls,ButtonHandler,C:\repos\picoe_Eto\Source\Eto.Wpf\Forms\Controls\ButtonHandler.cs,ButtonHandler,The following statement contains a magic number: label = new WpfLabel  			{  				VerticalAlignment = sw.VerticalAlignment.Center'  				HorizontalAlignment = sw.HorizontalAlignment.Center'  				Padding = new sw.Thickness(3' 0' 3' 0)'  				Visibility = sw.Visibility.Collapsed  			};
Magic Number,Eto.WinRT.Forms.Controls,ButtonHandler,C:\repos\picoe_Eto\Source\Eto.Wpf\Forms\Controls\ButtonHandler.cs,SetImagePosition,The following statement contains a magic number: switch (ImagePosition)  			{  				case ButtonImagePosition.Left:  					col = 0; row = 1;  					Control.HorizontalContentAlignment = sw.HorizontalAlignment.Stretch;  					Control.VerticalContentAlignment = sw.VerticalAlignment.Center;  					break;  				case ButtonImagePosition.Right:  					col = 2; row = 1;  					Control.HorizontalContentAlignment = sw.HorizontalAlignment.Stretch;  					Control.VerticalContentAlignment = sw.VerticalAlignment.Center;  					break;  				case ButtonImagePosition.Above:  					col = 1; row = 0;  					Control.HorizontalContentAlignment = sw.HorizontalAlignment.Center;  					Control.VerticalContentAlignment = hideLabel ? sw.VerticalAlignment.Center : sw.VerticalAlignment.Stretch;  					break;  				case ButtonImagePosition.Below:  					col = 1; row = 2;  					Control.HorizontalContentAlignment = sw.HorizontalAlignment.Center;  					Control.VerticalContentAlignment = hideLabel ? sw.VerticalAlignment.Center : sw.VerticalAlignment.Stretch;  					break;  				case ButtonImagePosition.Overlay:  					col = 1; row = 1;  					Control.HorizontalContentAlignment = sw.HorizontalAlignment.Center;  					Control.VerticalContentAlignment = sw.VerticalAlignment.Center;  					break;  				default:  					throw new NotSupportedException();  			}
Magic Number,Eto.WinRT.Forms.Controls,ButtonHandler,C:\repos\picoe_Eto\Source\Eto.Wpf\Forms\Controls\ButtonHandler.cs,SetImagePosition,The following statement contains a magic number: switch (ImagePosition)  			{  				case ButtonImagePosition.Left:  					col = 0; row = 1;  					Control.HorizontalContentAlignment = sw.HorizontalAlignment.Stretch;  					Control.VerticalContentAlignment = sw.VerticalAlignment.Center;  					break;  				case ButtonImagePosition.Right:  					col = 2; row = 1;  					Control.HorizontalContentAlignment = sw.HorizontalAlignment.Stretch;  					Control.VerticalContentAlignment = sw.VerticalAlignment.Center;  					break;  				case ButtonImagePosition.Above:  					col = 1; row = 0;  					Control.HorizontalContentAlignment = sw.HorizontalAlignment.Center;  					Control.VerticalContentAlignment = hideLabel ? sw.VerticalAlignment.Center : sw.VerticalAlignment.Stretch;  					break;  				case ButtonImagePosition.Below:  					col = 1; row = 2;  					Control.HorizontalContentAlignment = sw.HorizontalAlignment.Center;  					Control.VerticalContentAlignment = hideLabel ? sw.VerticalAlignment.Center : sw.VerticalAlignment.Stretch;  					break;  				case ButtonImagePosition.Overlay:  					col = 1; row = 1;  					Control.HorizontalContentAlignment = sw.HorizontalAlignment.Center;  					Control.VerticalContentAlignment = sw.VerticalAlignment.Center;  					break;  				default:  					throw new NotSupportedException();  			}
Magic Number,Eto.WinRT.Forms.Controls,DrawableHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\DrawableHandler.cs,Render,The following statement contains a magic number: if (!isRendering &&  				GraphicsHandler != null &&  				GraphicsHandler.Control != null)  			{  				isRendering = true;  				GraphicsHandler.BeginDrawing();  				Callback.OnPaint(Widget' new PaintEventArgs(graphics' Widget.Bounds)); // renders into the bitmap  				GraphicsHandler.EndDrawing();  				var bitmap = GraphicsHandler.Image;  				if (bitmap != null)  				{  					var bitmapHandler = bitmap.Handler as BitmapHandler;  					var bitmapObject = bitmapHandler.Control;  					var size = bitmapObject.Size;  					var writeableBitmap = new WriteableBitmap(size.Width' size.Height);    					// Get a pointer to the bitmap pixels  					unsafe  					{  						byte* ptr = null;  						((IBufferByteAccess)writeableBitmap.PixelBuffer).Buffer(out ptr);  						var len = size.Width * size.Height;  						var pixels = new SharpDX.ColorBGRA[len];  						fixed (SharpDX.ColorBGRA* pixelsPtr = &pixels[0])  						{  							bitmapObject.CopyPixels(pixels);  							CopyMemory((IntPtr)ptr' (IntPtr)pixelsPtr' (uint)len * 4);  						}  					}  					Control.Source = writeableBitmap;  				}  				isRendering = false;  			}
Magic Number,Eto.WinRT.Forms.Controls,DrawableHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\DrawableHandler.cs,SaveToFile,The following statement contains a magic number: var bytes = new byte[width * height * 4];
Magic Number,Eto.WinRT.Forms.Controls,DrawableHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\DrawableHandler.cs,SaveToFile,The following statement contains a magic number: for (var i = 0; i < pixels.Length; ++i)  			{  				bytes[i * 4 + 0] = (byte)pixels[i].B;  				bytes[i * 4 + 1] = (byte)pixels[i].G;  				bytes[i * 4 + 2] = (byte)pixels[i].R;  				bytes[i * 4 + 3] = (byte)pixels[i].A;  			}
Magic Number,Eto.WinRT.Forms.Controls,DrawableHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\DrawableHandler.cs,SaveToFile,The following statement contains a magic number: for (var i = 0; i < pixels.Length; ++i)  			{  				bytes[i * 4 + 0] = (byte)pixels[i].B;  				bytes[i * 4 + 1] = (byte)pixels[i].G;  				bytes[i * 4 + 2] = (byte)pixels[i].R;  				bytes[i * 4 + 3] = (byte)pixels[i].A;  			}
Magic Number,Eto.WinRT.Forms.Controls,DrawableHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\DrawableHandler.cs,SaveToFile,The following statement contains a magic number: for (var i = 0; i < pixels.Length; ++i)  			{  				bytes[i * 4 + 0] = (byte)pixels[i].B;  				bytes[i * 4 + 1] = (byte)pixels[i].G;  				bytes[i * 4 + 2] = (byte)pixels[i].R;  				bytes[i * 4 + 3] = (byte)pixels[i].A;  			}
Magic Number,Eto.WinRT.Forms.Controls,DrawableHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\DrawableHandler.cs,SaveToFile,The following statement contains a magic number: for (var i = 0; i < pixels.Length; ++i)  			{  				bytes[i * 4 + 0] = (byte)pixels[i].B;  				bytes[i * 4 + 1] = (byte)pixels[i].G;  				bytes[i * 4 + 2] = (byte)pixels[i].R;  				bytes[i * 4 + 3] = (byte)pixels[i].A;  			}
Magic Number,Eto.WinRT.Forms.Controls,DrawableHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\DrawableHandler.cs,SaveToFile,The following statement contains a magic number: for (var i = 0; i < pixels.Length; ++i)  			{  				bytes[i * 4 + 0] = (byte)pixels[i].B;  				bytes[i * 4 + 1] = (byte)pixels[i].G;  				bytes[i * 4 + 2] = (byte)pixels[i].R;  				bytes[i * 4 + 3] = (byte)pixels[i].A;  			}
Magic Number,Eto.WinRT.Forms.Controls,DrawableHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\DrawableHandler.cs,SaveToFile,The following statement contains a magic number: for (var i = 0; i < pixels.Length; ++i)  			{  				bytes[i * 4 + 0] = (byte)pixels[i].B;  				bytes[i * 4 + 1] = (byte)pixels[i].G;  				bytes[i * 4 + 2] = (byte)pixels[i].R;  				bytes[i * 4 + 3] = (byte)pixels[i].A;  			}
Magic Number,Eto.WinRT.Forms.Controls,DrawableHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\DrawableHandler.cs,SaveToFile,The following statement contains a magic number: using (IRandomAccessStream stream = await file.OpenAsync(FileAccessMode.ReadWrite))  			{  				var encoder = await BitmapEncoder.CreateAsync(BitmapEncoder.PngEncoderId' stream);  				encoder.SetPixelData(BitmapPixelFormat.Bgra8'  									 BitmapAlphaMode.Ignore'  									 (uint)bitmap.Size.Width' (uint)bitmap.Size.Height'  									 96' 96' bytes);    				await encoder.FlushAsync();  			}
Magic Number,Eto.WinRT.Forms.Controls,DrawableHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\DrawableHandler.cs,SaveToFile,The following statement contains a magic number: using (IRandomAccessStream stream = await file.OpenAsync(FileAccessMode.ReadWrite))  			{  				var encoder = await BitmapEncoder.CreateAsync(BitmapEncoder.PngEncoderId' stream);  				encoder.SetPixelData(BitmapPixelFormat.Bgra8'  									 BitmapAlphaMode.Ignore'  									 (uint)bitmap.Size.Width' (uint)bitmap.Size.Height'  									 96' 96' bytes);    				await encoder.FlushAsync();  			}
Magic Number,Eto.WinRT.Forms.Controls,ProgressBarHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\ProgressBarHandler.cs,ProgressBarHandler,The following statement contains a magic number: Control = new swc.ProgressBar {  				Minimum = 0'  				Maximum = 100'  			};
Magic Number,Eto.WinRT.Forms.Controls,SliderHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\SliderHandler.cs,SliderHandler,The following statement contains a magic number: Control = new swc.Slider {  				Minimum = 0'  				Maximum = 100'  				TickPlacement = swc.Primitives.TickPlacement.BottomRight  			};
Magic Number,Eto.WinRT.Forms.Controls,WebViewHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\WebViewHandler.cs,GetPreferredSize,The following statement contains a magic number: return new wf.Size(Math.Min(size.Width' 100)' Math.Min(size.Height' 100));
Magic Number,Eto.WinRT.Forms.Controls,WebViewHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\Controls\WebViewHandler.cs,GetPreferredSize,The following statement contains a magic number: return new wf.Size(Math.Min(size.Width' 100)' Math.Min(size.Height' 100));
Magic Number,Eto.WinRT.Forms,TableLayoutHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\TableLayoutHandler.cs,SetMargins,The following statement contains a magic number: if (x > 0) margin.Left = spacing.Width / 2;
Magic Number,Eto.WinRT.Forms,TableLayoutHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\TableLayoutHandler.cs,SetMargins,The following statement contains a magic number: if (x < Control.ColumnDefinitions.Count - 1) margin.Right = spacing.Width / 2;
Magic Number,Eto.WinRT.Forms,TableLayoutHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\TableLayoutHandler.cs,SetMargins,The following statement contains a magic number: if (y > 0) margin.Top = spacing.Height / 2;
Magic Number,Eto.WinRT.Forms,TableLayoutHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\TableLayoutHandler.cs,SetMargins,The following statement contains a magic number: if (y < Control.RowDefinitions.Count - 1) margin.Bottom = spacing.Height / 2;
Magic Number,Eto.WinRT.Forms,ButtonToolItemHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\ToolBar\ButtonToolItemHandler.cs,ButtonToolItemHandler,The following statement contains a magic number: swcImage = new swc.Image { MaxHeight = 16' MaxWidth = 16 };
Magic Number,Eto.WinRT.Forms,ButtonToolItemHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\ToolBar\ButtonToolItemHandler.cs,ButtonToolItemHandler,The following statement contains a magic number: swcImage = new swc.Image { MaxHeight = 16' MaxWidth = 16 };
Magic Number,Eto.WinRT.Forms,CheckToolItemHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\ToolBar\CheckToolItemHandler.cs,CheckToolItemHandler,The following statement contains a magic number: swcImage = new swc.Image { MaxHeight = 16' MaxWidth = 16 };
Magic Number,Eto.WinRT.Forms,CheckToolItemHandler,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\ToolBar\CheckToolItemHandler.cs,CheckToolItemHandler,The following statement contains a magic number: swcImage = new swc.Image { MaxHeight = 16' MaxWidth = 16 };
Magic Number,Eto.WinRT.Forms,EtoSpaceSeparator,C:\repos\picoe_Eto\Source\Eto.WinRT\Forms\ToolBar\SeparatorToolItemHandler.cs,EtoSpaceSeparator,The following statement contains a magic number: this.Width = this.Height = 16;
Magic Number,Eto.Shared.Drawing,BaseBitmapData,C:\repos\picoe_Eto\Source\Shared\BaseBitmapData.cs,GetPixel,The following statement contains a magic number: if (BytesPerPixel == 4)  			{  				var col = TranslateDataToArgb(*((int*)pos));  				return Color.FromArgb(col);  			}
Magic Number,Eto.Shared.Drawing,BaseBitmapData,C:\repos\picoe_Eto\Source\Shared\BaseBitmapData.cs,GetPixel,The following statement contains a magic number: if (BytesPerPixel == 3)  			{  				var col = TranslateDataToArgb(*((int*)pos));  				return Color.FromRgb(col);  			}
Magic Number,Eto.Shared.Drawing,BaseBitmapData,C:\repos\picoe_Eto\Source\Shared\BaseBitmapData.cs,SetPixel,The following statement contains a magic number: if (BytesPerPixel == 4)  			{  				*((int*)pos) = col;  			}  			else if (BytesPerPixel == 3)  			{  				*(pos++) = (byte)(col & 0xFF);  				*(pos++) = (byte)((col >> 8) & 0xFF);  				*(pos++) = (byte)((col >> 16) & 0xFF);  			}  			else  				throw new NotSupportedException(string.Format(CultureInfo.CurrentCulture' "This PixelFormat is not supported by SetPixel. Must be 3 or 4 bytes per pixel"));
Magic Number,Eto.Shared.Drawing,BaseBitmapData,C:\repos\picoe_Eto\Source\Shared\BaseBitmapData.cs,SetPixel,The following statement contains a magic number: if (BytesPerPixel == 4)  			{  				*((int*)pos) = col;  			}  			else if (BytesPerPixel == 3)  			{  				*(pos++) = (byte)(col & 0xFF);  				*(pos++) = (byte)((col >> 8) & 0xFF);  				*(pos++) = (byte)((col >> 16) & 0xFF);  			}  			else  				throw new NotSupportedException(string.Format(CultureInfo.CurrentCulture' "This PixelFormat is not supported by SetPixel. Must be 3 or 4 bytes per pixel"));
Magic Number,Eto.Shared.Drawing,BaseBitmapData,C:\repos\picoe_Eto\Source\Shared\BaseBitmapData.cs,SetPixel,The following statement contains a magic number: if (BytesPerPixel == 4)  			{  				*((int*)pos) = col;  			}  			else if (BytesPerPixel == 3)  			{  				*(pos++) = (byte)(col & 0xFF);  				*(pos++) = (byte)((col >> 8) & 0xFF);  				*(pos++) = (byte)((col >> 16) & 0xFF);  			}  			else  				throw new NotSupportedException(string.Format(CultureInfo.CurrentCulture' "This PixelFormat is not supported by SetPixel. Must be 3 or 4 bytes per pixel"));
Magic Number,Eto.Shared.Drawing,BaseBitmapData,C:\repos\picoe_Eto\Source\Shared\BaseBitmapData.cs,SetPixel,The following statement contains a magic number: if (BytesPerPixel == 4)  			{  				*((int*)pos) = col;  			}  			else if (BytesPerPixel == 3)  			{  				*(pos++) = (byte)(col & 0xFF);  				*(pos++) = (byte)((col >> 8) & 0xFF);  				*(pos++) = (byte)((col >> 16) & 0xFF);  			}  			else  				throw new NotSupportedException(string.Format(CultureInfo.CurrentCulture' "This PixelFormat is not supported by SetPixel. Must be 3 or 4 bytes per pixel"));
Missing Default,Eto.Direct2D.Drawing,FontFamilyHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\FontFamilyHandler.cs,Create,The following switch statement is missing a default case: switch (familyName.ToUpperInvariant())  			{  				case FontFamilies.MonospaceFamilyName:  					translatedName = "Courier New";  					break;  				case FontFamilies.SansFamilyName:  					translatedName = "Microsoft Sans Serif";  					break;  				case FontFamilies.SerifFamilyName:  					translatedName = "Times New Roman";  					break;  				case FontFamilies.CursiveFamilyName:  					translatedName = "Comic Sans MS";  					break;  				case FontFamilies.FantasyFamilyName:  					translatedName = "Gabriola";  					break;  			}
