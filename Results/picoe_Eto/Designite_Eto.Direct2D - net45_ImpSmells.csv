Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,DrawText,The method has 5 parameters. Parameters: font' brush' x' y' text
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,DrawLine,The method has 5 parameters. Parameters: pen' startx' starty' endx' endy
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,FillEllipse,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,CreateArc,The method has 7 parameters. Parameters: x' y' width' height' startAngle' sweepAngle' start
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,FillPie,The method has 7 parameters. Parameters: brush' x' y' width' height' startAngle' sweepAngle
Long Parameter List,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,Eto.Direct2D.Drawing,GraphicsPathHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsPathHandler.cs,AddArc,The method has 6 parameters. Parameters: x' y' width' height' startAngle' sweepAngle
Long Parameter List,Eto.Direct2D.Drawing,RadialGradientBrushHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\RadialGradientBrushHandler.cs,Create,The method has 5 parameters. Parameters: startColor' endColor' center' gradientOrigin' radius
Long Parameter List,Eto.Direct2D.Drawing,MatrixHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\MatrixHandler.cs,Create,The method has 6 parameters. Parameters: m11' m12' m21' m22' dx' dy
Long Parameter List,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The method has 6 parameters. Parameters: point0' point1' point2' point3' tension' numberOfPoints
Long Statement,Eto.Direct2D.Drawing,IndexedBitmapHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\IndexedBitmapHandler.cs,Create,The length of the statement  "			Control = new sw.Bitmap(SDFactory.WicImagingFactory' width' height' GetFormat(bitsPerPixel)' sw.BitmapCreateCacheOption.CacheOnLoad); " is 133.
Long Statement,Eto.Direct2D.Drawing,ImageHandler<TWidget>,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\ImageHandler.cs,Create,The length of the statement  "			Control = new sw.Bitmap(SDFactory.WicImagingFactory' width' height' pixelFormat.ToWic()' sw.BitmapCreateCacheOption.CacheOnLoad); " is 129.
Long Statement,Eto.Direct2D.Drawing,ImageHandler<TWidget>,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\ImageHandler.cs,Create,The length of the statement  "			Control = new sw.Bitmap(SDFactory.WicImagingFactory' width' height' imageHandler.Control.PixelFormat' sw.BitmapCreateCacheOption.CacheOnLoad); " is 142.
Long Statement,Eto.Direct2D.Drawing,ImageHandler<TWidget>,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\ImageHandler.cs,GetImageWithSize,The length of the statement  "				var src = Frames.Aggregate((x' y) => Math.Abs(x.Size.Width - size.Value) < Math.Abs(y.Size.Width - size.Value) ? x : y); " is 120.
Long Statement,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,RotateTransform,The length of the statement  "            SetTransform(currentTransform = s.Matrix3x2.Multiply(s.Matrix3x2.Rotation((float)(Conversions.DegreesToRadians(angle)))' currentTransform)); " is 140.
Long Statement,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,GetTextLayout,The length of the statement  "			var textLayout = new sw.TextLayout(SDFactory.DirectWriteFactory' text' fontHandler.TextFormat' float.MaxValue' float.MaxValue); " is 127.
Long Statement,Eto.Direct2D.Drawing,MatrixHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\MatrixHandler.cs,RotateAt,The length of the statement  "			var matrix = new s.Matrix3x2(cosa' sina' -sina' cosa' centerX - centerX * cosa + centerY * sina' centerY - centerX * sina - centerY * cosa); " is 140.
Long Statement,Eto.Direct2D.Drawing,MatrixHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\MatrixHandler.cs,Skew,The length of the statement  "			var matrix = new s.Matrix3x2(1' (float)Math.Tan(Conversions.DegreesToRadians(skewX))' (float)Math.Tan(Conversions.DegreesToRadians(skewY))' 1' 0' 0); " is 149.
Long Statement,Eto.Direct2D.Drawing,MatrixHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\MatrixHandler.cs,TransformPoint,The length of the statement  "			s.Vector2 v = s.Matrix3x2.TransformPoint(this.Control' new s.Vector2(p.X' p.Y)); // implicit conversion from Vector2 to Vector2 " is 127.
Magic Number,Eto.Direct2D.Drawing,IndexedBitmapHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\IndexedBitmapHandler.cs,GetFormat,The following statement contains a magic number: switch (bitsPerPixel)  			{  				case 8:  					return sw.PixelFormat.Format8bppIndexed;  				case 4:  					return sw.PixelFormat.Format4bppIndexed;  				case 2:  					return sw.PixelFormat.Format2bppIndexed;  				case 1:  					return sw.PixelFormat.Format1bppIndexed;  				default:  					throw new NotSupportedException();  			}
Magic Number,Eto.Direct2D.Drawing,IndexedBitmapHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\IndexedBitmapHandler.cs,GetFormat,The following statement contains a magic number: switch (bitsPerPixel)  			{  				case 8:  					return sw.PixelFormat.Format8bppIndexed;  				case 4:  					return sw.PixelFormat.Format4bppIndexed;  				case 2:  					return sw.PixelFormat.Format2bppIndexed;  				case 1:  					return sw.PixelFormat.Format1bppIndexed;  				default:  					throw new NotSupportedException();  			}
Magic Number,Eto.Direct2D.Drawing,IndexedBitmapHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\IndexedBitmapHandler.cs,GetFormat,The following statement contains a magic number: switch (bitsPerPixel)  			{  				case 8:  					return sw.PixelFormat.Format8bppIndexed;  				case 4:  					return sw.PixelFormat.Format4bppIndexed;  				case 2:  					return sw.PixelFormat.Format2bppIndexed;  				case 1:  					return sw.PixelFormat.Format1bppIndexed;  				default:  					throw new NotSupportedException();  			}
Magic Number,Eto.Direct2D.Drawing,BitmapHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\BitmapHandler.cs,Lock,The following statement contains a magic number: var bpp = Control.PixelFormat == PixelFormat.Format24bppRgb.ToWic() ? 24 : 32;
Magic Number,Eto.Direct2D.Drawing,BitmapHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\BitmapHandler.cs,Lock,The following statement contains a magic number: var bpp = Control.PixelFormat == PixelFormat.Format24bppRgb.ToWic() ? 24 : 32;
Magic Number,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,CreateArc,The following statement contains a magic number: float dx = width / 2;
Magic Number,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,CreateArc,The following statement contains a magic number: float dy = height / 2;
Magic Number,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,CreateArc,The following statement contains a magic number: bool isLargeArc = Math.Abs(sweepAngle) > 180;
Magic Number,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,CreateArc,The following statement contains a magic number: bool isClockwise = sweepAngle >= 0 && Math.Abs(sweepAngle) < 360;
Magic Number,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,FillPie,The following statement contains a magic number: var center = new s.Vector2(x + width / 2' y + height / 2);
Magic Number,Eto.Direct2D.Drawing,GraphicsHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsHandler.cs,FillPie,The following statement contains a magic number: var center = new s.Vector2(x + width / 2' y + height / 2);
Magic Number,Eto.Direct2D.Drawing,GraphicsPathHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsPathHandler.cs,AddEllipse,The following statement contains a magic number: var ellipse = new sd.Ellipse(new s.Vector2(x + width / 2' y + height / 2)' width / 2' height / 2);
Magic Number,Eto.Direct2D.Drawing,GraphicsPathHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsPathHandler.cs,AddEllipse,The following statement contains a magic number: var ellipse = new sd.Ellipse(new s.Vector2(x + width / 2' y + height / 2)' width / 2' height / 2);
Magic Number,Eto.Direct2D.Drawing,GraphicsPathHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsPathHandler.cs,AddEllipse,The following statement contains a magic number: var ellipse = new sd.Ellipse(new s.Vector2(x + width / 2' y + height / 2)' width / 2' height / 2);
Magic Number,Eto.Direct2D.Drawing,GraphicsPathHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\GraphicsPathHandler.cs,AddEllipse,The following statement contains a magic number: var ellipse = new sd.Ellipse(new s.Vector2(x + width / 2' y + height / 2)' width / 2' height / 2);
Magic Number,Eto.Direct2D.Drawing,LinearGradientBrushHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\LinearGradientBrushHandler.cs,Create,The following statement contains a magic number: matrix.RotateAt(angle - 45' startPoint.X' startPoint.Y);
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,SplineCurve,The following statement contains a magic number: if (pointList.Count == 2) {  				pts = CalculateSplineCurve (pointList[0]' pointList[0]' pointList[1]' pointList[1]' tension);  				if (pts != null) {  					for (int j = 0; j < pts.Length; j++)  						yield return pts[j];  				}  			} else {  				for (int i = 0; i < pointList.Count - 1; i++) {  					if (i == 0)  						pts = CalculateSplineCurve (pointList[0]' pointList[0]' pointList[1]' pointList[2]' tension);  					else if (i == pointList.Count - 2)  						pts = CalculateSplineCurve (pointList[i - 1]' pointList[i]' pointList[i + 1]' pointList[i + 1]' tension);  					else  						pts = CalculateSplineCurve (pointList[i - 1]' pointList[i]' pointList[i + 1]' pointList[i + 2]' tension);    					for (int j = 0; j < pts.Length; j++)  						yield return pts[j];  				}  			}
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,SplineCurve,The following statement contains a magic number: if (pointList.Count == 2) {  				pts = CalculateSplineCurve (pointList[0]' pointList[0]' pointList[1]' pointList[1]' tension);  				if (pts != null) {  					for (int j = 0; j < pts.Length; j++)  						yield return pts[j];  				}  			} else {  				for (int i = 0; i < pointList.Count - 1; i++) {  					if (i == 0)  						pts = CalculateSplineCurve (pointList[0]' pointList[0]' pointList[1]' pointList[2]' tension);  					else if (i == pointList.Count - 2)  						pts = CalculateSplineCurve (pointList[i - 1]' pointList[i]' pointList[i + 1]' pointList[i + 1]' tension);  					else  						pts = CalculateSplineCurve (pointList[i - 1]' pointList[i]' pointList[i + 1]' pointList[i + 2]' tension);    					for (int j = 0; j < pts.Length; j++)  						yield return pts[j];  				}  			}
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,SplineCurve,The following statement contains a magic number: if (pointList.Count == 2) {  				pts = CalculateSplineCurve (pointList[0]' pointList[0]' pointList[1]' pointList[1]' tension);  				if (pts != null) {  					for (int j = 0; j < pts.Length; j++)  						yield return pts[j];  				}  			} else {  				for (int i = 0; i < pointList.Count - 1; i++) {  					if (i == 0)  						pts = CalculateSplineCurve (pointList[0]' pointList[0]' pointList[1]' pointList[2]' tension);  					else if (i == pointList.Count - 2)  						pts = CalculateSplineCurve (pointList[i - 1]' pointList[i]' pointList[i + 1]' pointList[i + 1]' tension);  					else  						pts = CalculateSplineCurve (pointList[i - 1]' pointList[i]' pointList[i + 1]' pointList[i + 2]' tension);    					for (int j = 0; j < pts.Length; j++)  						yield return pts[j];  				}  			}
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,SplineCurve,The following statement contains a magic number: if (pointList.Count == 2) {  				pts = CalculateSplineCurve (pointList[0]' pointList[0]' pointList[1]' pointList[1]' tension);  				if (pts != null) {  					for (int j = 0; j < pts.Length; j++)  						yield return pts[j];  				}  			} else {  				for (int i = 0; i < pointList.Count - 1; i++) {  					if (i == 0)  						pts = CalculateSplineCurve (pointList[0]' pointList[0]' pointList[1]' pointList[2]' tension);  					else if (i == pointList.Count - 2)  						pts = CalculateSplineCurve (pointList[i - 1]' pointList[i]' pointList[i + 1]' pointList[i + 1]' tension);  					else  						pts = CalculateSplineCurve (pointList[i - 1]' pointList[i]' pointList[i + 1]' pointList[i + 2]' tension);    					for (int j = 0; j < pts.Length; j++)  						yield return pts[j];  				}  			}
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float AX = SX1 + SX2 + 2 * point1.X - 2 * point2.X;
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float AX = SX1 + SX2 + 2 * point1.X - 2 * point2.X;
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float AY = SY1 + SY2 + 2 * point1.Y - 2 * point2.Y;
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float AY = SY1 + SY2 + 2 * point1.Y - 2 * point2.Y;
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float BX = -2 * SX1 - SX2 - 3 * point1.X + 3 * point2.X;
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float BX = -2 * SX1 - SX2 - 3 * point1.X + 3 * point2.X;
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float BX = -2 * SX1 - SX2 - 3 * point1.X + 3 * point2.X;
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float BY = -2 * SY1 - SY2 - 3 * point1.Y + 3 * point2.Y;
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float BY = -2 * SY1 - SY2 - 3 * point1.Y + 3 * point2.Y;
Magic Number,Eto,SplineHelper,C:\repos\picoe_Eto\Source\Eto.Mac\Drawing\SplineHelper.cs,CalculateSplineCurve,The following statement contains a magic number: float BY = -2 * SY1 - SY2 - 3 * point1.Y + 3 * point2.Y;
Missing Default,Eto.Direct2D.Drawing,FontFamilyHandler,C:\repos\picoe_Eto\Source\Eto.Direct2D\Drawing\FontFamilyHandler.cs,Create,The following switch statement is missing a default case: switch (familyName.ToUpperInvariant())  			{  				case FontFamilies.MonospaceFamilyName:  					translatedName = "Courier New";  					break;  				case FontFamilies.SansFamilyName:  					translatedName = "Microsoft Sans Serif";  					break;  				case FontFamilies.SerifFamilyName:  					translatedName = "Times New Roman";  					break;  				case FontFamilies.CursiveFamilyName:  					translatedName = "Comic Sans MS";  					break;  				case FontFamilies.FantasyFamilyName:  					translatedName = "Gabriola";  					break;  			}
