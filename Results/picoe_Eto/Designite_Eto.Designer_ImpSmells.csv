Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Eto.Designer,AppDomainEventSink,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\AppDomainDesignHost.cs,GetThemeColor,Cyclomatic complexity of the method is 9
Complex Method,Eto.Designer.Completion,TypeCompletion,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\Completion\TypeCompletion.cs,GetContentType,Cyclomatic complexity of the method is 8
Complex Method,Eto.Designer.Completion,TypeCompletion,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\Completion\TypeCompletion.cs,GetProperties,Cyclomatic complexity of the method is 8
Complex Method,Eto.Designer.Completion,TypeCompletion,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\Completion\TypeCompletion.cs,GetPropertyValues,Cyclomatic complexity of the method is 10
Long Parameter List,Eto.Designer,IInterfaceBuilder,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\IInterfaceBuilder.cs,Create,The method has 5 parameters. Parameters: text' mainAssembly' references' controlCreated' error
Long Parameter List,Eto.Designer.Builders,BaseCompiledInterfaceBuilder,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\Builders\BaseCompiledInterfaceBuilder.cs,Create,The method has 5 parameters. Parameters: text' mainAssembly' references' controlCreated' error
Long Parameter List,Eto.Designer.Builders,JsonInterfaceBuilder,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\Builders\JsonInterfaceBuilder.cs,Create,The method has 5 parameters. Parameters: text' mainAssembly' references' controlCreated' error
Long Parameter List,Eto.Designer.Builders,XamlInterfaceBuilder,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\Builders\XamlInterfaceBuilder.cs,Create,The method has 5 parameters. Parameters: text' mainAssembly' references' controlCreated' error
Long Statement,Eto.Designer,AppDomainDesignHost,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\AppDomainDesignHost.cs,SetupAppDomain,The length of the statement  "					var proxyObject = domain.CreateInstanceFromAndUnwrap(typeof(AppDomainProxy).Assembly.Location' typeof(AppDomainProxy).FullName) as AppDomainProxy; " is 146.
Long Statement,Eto.Designer,AppDomainDesignHost,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\AppDomainDesignHost.cs,SetupAppDomain,The length of the statement  "						throw new InvalidOperationException($"Could not create proxy for domain\nApplicationBase: {AppDomain.CurrentDomain.BaseDirectory}\nBaseDir: {baseDir}\nShadowCopyDirs: {shadowCopyDirs}"); " is 186.
Long Statement,Eto.Designer.Builders,BaseCompiledInterfaceBuilder,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\Builders\BaseCompiledInterfaceBuilder.cs,InstantiateControl,The length of the statement  "				var initializeMethod = control.GetType().GetMethod("InitializeComponent"' BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Public | BindingFlags.DeclaredOnly' Type.DefaultBinder' Type.EmptyTypes' null); " is 215.
Long Statement,Eto.Designer.Completion,GeneralCompletion,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\Completion\GeneralCompletion.cs,GetPropertyValues,The length of the statement  "				yield return new CompletionItem { Name = "clr-namespace:[namespace];assembly=[assembly]"' Type = CompletionType.Literal }; " is 122.
Long Statement,Eto.Designer.Completion,TypeCompletion,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\Completion\TypeCompletion.cs,GetExportedTypes,The length of the statement  "				exportedTypes = Assembly.ExportedTypes.Where(r => !r.IsGenericType && !r.IsAbstract && r.Namespace == Namespace).ToList(); " is 122.
Long Statement,Eto.Designer.Completion,TypeCompletion,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\Completion\TypeCompletion.cs,GetContentType,The length of the statement  "							var list = propType.GetInterfaces().FirstOrDefault(r => r.IsGenericType && r.GetGenericTypeDefinition() == typeof(IList<>)); " is 124.
Long Statement,Eto.Designer.Completion,TypeCompletion,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\Completion\TypeCompletion.cs,GetPropertyValues,The length of the statement  "						foreach (var col in typeof(Colors).GetProperties(BindingFlags.Static | BindingFlags.Public).Where(r => r.PropertyType == typeof(Color))) " is 136.
Long Statement,Eto.Designer.Completion,XamlCompletion,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\Completion\XamlCompletion.cs,GetProperties,The length of the statement  "				yield return new CompletionItem { Name = "Name"' Type = CompletionType.Attribute' Description = "Name of the element to reference" }; " is 133.
Long Statement,Eto.Designer.Completion,XamlCompletion,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\Completion\XamlCompletion.cs,GetProperties,The length of the statement  "					Description = "Sets the name of the object' which will automatically bind to a field or property of the same name in your backing class." " is 137.
Long Statement,Eto.Designer.Completion,XmlComments,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\Completion\XmlComments.cs,GetSummary,The length of the statement  "						description = GetDescription(property != null ? string.Format("{0} : {1}"' property.Name' GetNiceName(property.PropertyType)) : null' node); " is 140.
Long Statement,Eto.Designer.Completion,XmlComments,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\Completion\XmlComments.cs,TranslateCref,The length of the statement  "					regReferences = new Regex(@"&lt;\w+\s+\w+\s*=\s*((&quot;(?<c>.*?)&quot;)|('(?<c>.*?)'))\s*/&gt;"' RegexOptions.Compiled); " is 121.
Complex Conditional,Eto.Designer.Completion,TypeCompletion,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\Completion\TypeCompletion.cs,GetClasses,The conditional expression  "contentType != null   				&& !contentType.IsAbstract   				&& !types.Contains(contentType)  				&& contentType.Assembly == Assembly"  is complex.
Magic Number,Eto.Designer,DesignSurface,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\DesignSurface.cs,DesignSurface,The following statement contains a magic number: Padding = 32;
Magic Number,Eto.Designer,DesignSurface,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\DesignSurface.cs,CreateGrips,The following statement contains a magic number: Font font = SystemFonts.Default(8);
Magic Number,Eto.Designer,DesignSurface,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\DesignSurface.cs,CreateGrips,The following statement contains a magic number: yield return new Grip  			{  				Location = () => {  					var rect = SizeBoundsWithPadding;  					rect = new RectangleF(rect.Center.X - gripSize.Width / 2' rect.Top - gripSize.Height' gripSize.Width' gripSize.Height);  					return rect;  				}'  				Draw = g =>  				{  					var rect = SizeBoundsWithPadding;  					var text = $"{_content?.Size.Width}x{_content?.Size.Height}";  					gripSize = g.MeasureString(font' text) + 4;  					//Padding = new Padding(15' Math.Max(15' (int)gripSize.Height + 5)' 15' 15);  					rect = new RectangleF(rect.Center.X - gripSize.Width / 2' rect.Top - gripSize.Height' gripSize.Width' gripSize.Height);  					g.FillRectangle(GripColor' rect);  					g.DrawText(font' Colors.White' rect.Location + 2' text);  				}'  				Start = () =>  				{  					_sizeBounds = null;  					_content.Size = _originalContentSize ?? new Size(-1' -1);  				}'  				ShouldDraw = location => _sizeBounds != null'  				ToolTip = "Click to reset to auto size"'  				Cursor = Cursors.Pointer  			};
Magic Number,Eto.Designer,DesignSurface,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\DesignSurface.cs,CreateGrips,The following statement contains a magic number: yield return new Grip  			{  				Location = () => {  					var rect = SizeBoundsWithPadding;  					rect = new RectangleF(rect.Center.X - gripSize.Width / 2' rect.Top - gripSize.Height' gripSize.Width' gripSize.Height);  					return rect;  				}'  				Draw = g =>  				{  					var rect = SizeBoundsWithPadding;  					var text = $"{_content?.Size.Width}x{_content?.Size.Height}";  					gripSize = g.MeasureString(font' text) + 4;  					//Padding = new Padding(15' Math.Max(15' (int)gripSize.Height + 5)' 15' 15);  					rect = new RectangleF(rect.Center.X - gripSize.Width / 2' rect.Top - gripSize.Height' gripSize.Width' gripSize.Height);  					g.FillRectangle(GripColor' rect);  					g.DrawText(font' Colors.White' rect.Location + 2' text);  				}'  				Start = () =>  				{  					_sizeBounds = null;  					_content.Size = _originalContentSize ?? new Size(-1' -1);  				}'  				ShouldDraw = location => _sizeBounds != null'  				ToolTip = "Click to reset to auto size"'  				Cursor = Cursors.Pointer  			};
Magic Number,Eto.Designer,DesignSurface,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\DesignSurface.cs,CreateGrips,The following statement contains a magic number: yield return new Grip  			{  				Location = () => {  					var rect = SizeBoundsWithPadding;  					rect = new RectangleF(rect.Center.X - gripSize.Width / 2' rect.Top - gripSize.Height' gripSize.Width' gripSize.Height);  					return rect;  				}'  				Draw = g =>  				{  					var rect = SizeBoundsWithPadding;  					var text = $"{_content?.Size.Width}x{_content?.Size.Height}";  					gripSize = g.MeasureString(font' text) + 4;  					//Padding = new Padding(15' Math.Max(15' (int)gripSize.Height + 5)' 15' 15);  					rect = new RectangleF(rect.Center.X - gripSize.Width / 2' rect.Top - gripSize.Height' gripSize.Width' gripSize.Height);  					g.FillRectangle(GripColor' rect);  					g.DrawText(font' Colors.White' rect.Location + 2' text);  				}'  				Start = () =>  				{  					_sizeBounds = null;  					_content.Size = _originalContentSize ?? new Size(-1' -1);  				}'  				ShouldDraw = location => _sizeBounds != null'  				ToolTip = "Click to reset to auto size"'  				Cursor = Cursors.Pointer  			};
Magic Number,Eto.Designer,DesignSurface,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\DesignSurface.cs,CreateGrips,The following statement contains a magic number: yield return new Grip  			{  				Location = () => {  					var rect = SizeBoundsWithPadding;  					rect = new RectangleF(rect.Center.X - gripSize.Width / 2' rect.Top - gripSize.Height' gripSize.Width' gripSize.Height);  					return rect;  				}'  				Draw = g =>  				{  					var rect = SizeBoundsWithPadding;  					var text = $"{_content?.Size.Width}x{_content?.Size.Height}";  					gripSize = g.MeasureString(font' text) + 4;  					//Padding = new Padding(15' Math.Max(15' (int)gripSize.Height + 5)' 15' 15);  					rect = new RectangleF(rect.Center.X - gripSize.Width / 2' rect.Top - gripSize.Height' gripSize.Width' gripSize.Height);  					g.FillRectangle(GripColor' rect);  					g.DrawText(font' Colors.White' rect.Location + 2' text);  				}'  				Start = () =>  				{  					_sizeBounds = null;  					_content.Size = _originalContentSize ?? new Size(-1' -1);  				}'  				ShouldDraw = location => _sizeBounds != null'  				ToolTip = "Click to reset to auto size"'  				Cursor = Cursors.Pointer  			};
Magic Number,Eto.Designer,DesignSurface,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\DesignSurface.cs,OnMouseMove,The following statement contains a magic number: var outer = RectangleF.Inflate(bounds' GripPadding * 2);
Magic Number,Eto.Designer,Grip,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\DesignSurface.cs,IsOver,The following statement contains a magic number: return RectangleF.Inflate(Location()' new SizeF(2' 2)).Contains(location);
Magic Number,Eto.Designer,Grip,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\DesignSurface.cs,IsOver,The following statement contains a magic number: return RectangleF.Inflate(Location()' new SizeF(2' 2)).Contains(location);
Magic Number,Eto.Designer,PreviewEditorView,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\PreviewEditorView.cs,PreviewEditorView,The following statement contains a magic number: errorPanel = new Panel { Padding = new Padding(5)' Visible = false' BackgroundColor = new Color(Colors.Red' .4f) };
Magic Number,Eto.Designer,PreviewEditorView,C:\research\architectureSmells\repos\picoe_Eto\src\Addins\Eto.Designer\PreviewEditorView.cs,PreviewEditorView,The following statement contains a magic number: errorPanel = new Panel { Padding = new Padding(5)' Visible = false' BackgroundColor = new Color(Colors.Red' .4f) };
