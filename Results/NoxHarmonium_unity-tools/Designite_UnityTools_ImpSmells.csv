Implementation smell,Namespace,Class,File,Method,Description
Long Method,LitJson,JsonMapper,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonMapper.cs,ReadValue,The method has 168 lines of code.
Long Method,LitJson,JsonMapper,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonMapper.cs,WriteValue,The method has 134 lines of code.
Long Method,LitJson,JsonReader,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonReader.cs,PopulateParseTable,The method has 105 lines of code.
Complex Method,UnityTools.Threading,UnityTask,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\UnityTools\Threading\UnityTask.cs,Then,Cyclomatic complexity of the method is 13
Complex Method,LitJson,JsonData,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonData.cs,WriteJson,Cyclomatic complexity of the method is 11
Complex Method,LitJson,JsonData,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonData.cs,Equals,Cyclomatic complexity of the method is 10
Complex Method,LitJson,JsonData,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonData.cs,SetJsonType,Cyclomatic complexity of the method is 9
Complex Method,LitJson,JsonMapper,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonMapper.cs,AddObjectMetadata,Cyclomatic complexity of the method is 8
Complex Method,LitJson,JsonMapper,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonMapper.cs,ReadValue,Cyclomatic complexity of the method is 25
Complex Method,LitJson,JsonMapper,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonMapper.cs,ReadValue,Cyclomatic complexity of the method is 13
Complex Method,LitJson,JsonMapper,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonMapper.cs,WriteValue,Cyclomatic complexity of the method is 23
Complex Method,LitJson,JsonReader,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonReader.cs,ProcessSymbol,Cyclomatic complexity of the method is 14
Complex Method,LitJson,JsonReader,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonReader.cs,Read,Cyclomatic complexity of the method is 14
Complex Method,LitJson,JsonWriter,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonWriter.cs,DoValidation,Cyclomatic complexity of the method is 13
Complex Method,LitJson,JsonWriter,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonWriter.cs,PutString,Cyclomatic complexity of the method is 8
Complex Method,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State1,Cyclomatic complexity of the method is 15
Complex Conditional,LitJson,JsonMapper,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonMapper.cs,ReadValue,The conditional expression  "reader.Token == JsonToken.Double ||                 reader.Token == JsonToken.Int ||                 reader.Token == JsonToken.Long ||                 reader.Token == JsonToken.String ||                 reader.Token == JsonToken.Boolean"  is complex.
Complex Conditional,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State22,The conditional expression  "ctx.L.input_char >= '0' && ctx.L.input_char <= '9' ||                     ctx.L.input_char >= 'A' && ctx.L.input_char <= 'F' ||                     ctx.L.input_char >= 'a' && ctx.L.input_char <= 'f'"  is complex.
Magic Number,UnityTools.Tests,ThreadingTests,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\UnityTools\Tests\Editor\ThreadingTests.cs,TaskAllMethodCombinesTasksInParallel,The following statement contains a magic number: const int taskCount = 10;
Magic Number,UnityTools.Tests,ThreadingTests,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\UnityTools\Tests\Editor\ThreadingTests.cs,TaskAllMethodCombinesTasksInParallel,The following statement contains a magic number: const int taskTime = 500;
Magic Number,UnityTools.Tests,ThreadingTests,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\UnityTools\Tests\Editor\ThreadingTests.cs,TaskAllMethodCombinesTasksInParallel,The following statement contains a magic number: const float tolerance = 50;
Magic Number,UnityTools.Tests,ThreadingTests,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\UnityTools\Tests\Editor\ThreadingTests.cs,TaskAllMethodCombinesTasksInParallel,The following statement contains a magic number: const int testLimit = 600;
Magic Number,UnityTools.Tests,ThreadingTests,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\UnityTools\Tests\Editor\ThreadingTests.cs,TaskAllSequentialMethodCombinesTasksSequentially,The following statement contains a magic number: const int taskCount = 10;
Magic Number,UnityTools.Tests,ThreadingTests,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\UnityTools\Tests\Editor\ThreadingTests.cs,TaskAllSequentialMethodCombinesTasksSequentially,The following statement contains a magic number: const int taskTime = 50;
Magic Number,UnityTools.Tests,ThreadingTests,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\UnityTools\Tests\Editor\ThreadingTests.cs,TaskAllSequentialMethodCombinesTasksSequentially,The following statement contains a magic number: const float tolerance = 50;
Magic Number,UnityTools.Tests,ThreadingTests,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\UnityTools\Tests\Editor\ThreadingTests.cs,TaskResultIsSynchronous,The following statement contains a magic number: const int taskTime = 500;
Magic Number,UnityTools.Tests,ThreadingTests,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\UnityTools\Tests\Editor\ThreadingTests.cs,TaskResultIsSynchronous,The following statement contains a magic number: const int tolerance = 10;
Magic Number,UnityTools.Utils,Extensions,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\UnityTools\Utils\Extensions.cs,CopyTo,The following statement contains a magic number: return task =>             {                 byte[] buffer = new byte[4096];                 int offset = 0;                 int bytesRead;                  while((bytesRead = inStream.Read(buffer' offset' bufferSize)) > 0)                 {                     outStream.Write(buffer' offset' bytesRead);                 }                 if (task != null)                 {                     task.Resolve();                 }             };
Magic Number,LitJson,JsonMapper,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonMapper.cs,JsonMapper,The following statement contains a magic number: max_nesting_depth = 100;
Magic Number,LitJson,JsonWriter,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonWriter.cs,Init,The following statement contains a magic number: hex_seq = new char[4];
Magic Number,LitJson,JsonWriter,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonWriter.cs,Init,The following statement contains a magic number: indent_value = 4;
Magic Number,LitJson,JsonWriter,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonWriter.cs,IntToHex,The following statement contains a magic number: num = n % 16;
Magic Number,LitJson,JsonWriter,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonWriter.cs,IntToHex,The following statement contains a magic number: hex[3 - i] = (char) ('0' + num);
Magic Number,LitJson,JsonWriter,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonWriter.cs,IntToHex,The following statement contains a magic number: num < 10
Magic Number,LitJson,JsonWriter,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonWriter.cs,IntToHex,The following statement contains a magic number: n >>= 4;
Magic Number,LitJson,JsonWriter,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonWriter.cs,IntToHex,The following statement contains a magic number: i < 4
Magic Number,LitJson,JsonWriter,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonWriter.cs,PutString,The following statement contains a magic number: (int) str[i] >= 32 && (int) str[i] <= 126
Magic Number,LitJson,JsonWriter,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonWriter.cs,PutString,The following statement contains a magic number: (int) str[i] >= 32 && (int) str[i] <= 126
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,Lexer,The following statement contains a magic number: string_buffer = new StringBuilder (128);
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,HexValue,The following statement contains a magic number: switch (digit) {             case 'a':             case 'A':                 return 10;              case 'b':             case 'B':                 return 11;              case 'c':             case 'C':                 return 12;              case 'd':             case 'D':                 return 13;              case 'e':             case 'E':                 return 14;              case 'f':             case 'F':                 return 15;              default:                 return digit - '0';             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,HexValue,The following statement contains a magic number: switch (digit) {             case 'a':             case 'A':                 return 10;              case 'b':             case 'B':                 return 11;              case 'c':             case 'C':                 return 12;              case 'd':             case 'D':                 return 13;              case 'e':             case 'E':                 return 14;              case 'f':             case 'F':                 return 15;              default:                 return digit - '0';             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,HexValue,The following statement contains a magic number: switch (digit) {             case 'a':             case 'A':                 return 10;              case 'b':             case 'B':                 return 11;              case 'c':             case 'C':                 return 12;              case 'd':             case 'D':                 return 13;              case 'e':             case 'E':                 return 14;              case 'f':             case 'F':                 return 15;              default:                 return digit - '0';             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,HexValue,The following statement contains a magic number: switch (digit) {             case 'a':             case 'A':                 return 10;              case 'b':             case 'B':                 return 11;              case 'c':             case 'C':                 return 12;              case 'd':             case 'D':                 return 13;              case 'e':             case 'E':                 return 14;              case 'f':             case 'F':                 return 15;              default:                 return digit - '0';             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,HexValue,The following statement contains a magic number: switch (digit) {             case 'a':             case 'A':                 return 10;              case 'b':             case 'B':                 return 11;              case 'c':             case 'C':                 return 12;              case 'd':             case 'D':                 return 13;              case 'e':             case 'E':                 return 14;              case 'f':             case 'F':                 return 15;              default:                 return digit - '0';             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,HexValue,The following statement contains a magic number: switch (digit) {             case 'a':             case 'A':                 return 10;              case 'b':             case 'B':                 return 11;              case 'c':             case 'C':                 return 12;              case 'd':             case 'D':                 return 13;              case 'e':             case 'E':                 return 14;              case 'f':             case 'F':                 return 15;              default:                 return digit - '0';             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,PopulateFsmTables,The following statement contains a magic number: fsm_handler_table = new StateHandler[28] {                 State1'                 State2'                 State3'                 State4'                 State5'                 State6'                 State7'                 State8'                 State9'                 State10'                 State11'                 State12'                 State13'                 State14'                 State15'                 State16'                 State17'                 State18'                 State19'                 State20'                 State21'                 State22'                 State23'                 State24'                 State25'                 State26'                 State27'                 State28             };
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,PopulateFsmTables,The following statement contains a magic number: fsm_return_table = new int[28] {                 (int) ParserToken.Char'                 0'                 (int) ParserToken.Number'                 (int) ParserToken.Number'                 0'                 (int) ParserToken.Number'                 0'                 (int) ParserToken.Number'                 0'                 0'                 (int) ParserToken.True'                 0'                 0'                 0'                 (int) ParserToken.False'                 0'                 0'                 (int) ParserToken.Null'                 (int) ParserToken.CharSeq'                 (int) ParserToken.Char'                 0'                 0'                 (int) ParserToken.CharSeq'                 (int) ParserToken.Char'                 0'                 0'                 0'                 0             };
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State1,The following statement contains a magic number: ctx.NextState = 3;
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State1,The following statement contains a magic number: switch (ctx.L.input_char) {                 case '"':                     ctx.NextState = 19;                     ctx.Return = true;                     return true;                  case ''':                 case ':':                 case '[':                 case ']':                 case '{':                 case '}':                     ctx.NextState = 1;                     ctx.Return = true;                     return true;                  case '-':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 2;                     return true;                  case '0':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 4;                     return true;                  case 'f':                     ctx.NextState = 12;                     return true;                  case 'n':                     ctx.NextState = 16;                     return true;                  case 't':                     ctx.NextState = 9;                     return true;                  case '\'':                     if (! ctx.L.allow_single_quoted_strings)                         return false;                      ctx.L.input_char = '"';                     ctx.NextState = 23;                     ctx.Return = true;                     return true;                  case '/':                     if (! ctx.L.allow_comments)                         return false;                      ctx.NextState = 25;                     return true;                  default:                     return false;                 }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State1,The following statement contains a magic number: switch (ctx.L.input_char) {                 case '"':                     ctx.NextState = 19;                     ctx.Return = true;                     return true;                  case ''':                 case ':':                 case '[':                 case ']':                 case '{':                 case '}':                     ctx.NextState = 1;                     ctx.Return = true;                     return true;                  case '-':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 2;                     return true;                  case '0':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 4;                     return true;                  case 'f':                     ctx.NextState = 12;                     return true;                  case 'n':                     ctx.NextState = 16;                     return true;                  case 't':                     ctx.NextState = 9;                     return true;                  case '\'':                     if (! ctx.L.allow_single_quoted_strings)                         return false;                      ctx.L.input_char = '"';                     ctx.NextState = 23;                     ctx.Return = true;                     return true;                  case '/':                     if (! ctx.L.allow_comments)                         return false;                      ctx.NextState = 25;                     return true;                  default:                     return false;                 }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State1,The following statement contains a magic number: switch (ctx.L.input_char) {                 case '"':                     ctx.NextState = 19;                     ctx.Return = true;                     return true;                  case ''':                 case ':':                 case '[':                 case ']':                 case '{':                 case '}':                     ctx.NextState = 1;                     ctx.Return = true;                     return true;                  case '-':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 2;                     return true;                  case '0':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 4;                     return true;                  case 'f':                     ctx.NextState = 12;                     return true;                  case 'n':                     ctx.NextState = 16;                     return true;                  case 't':                     ctx.NextState = 9;                     return true;                  case '\'':                     if (! ctx.L.allow_single_quoted_strings)                         return false;                      ctx.L.input_char = '"';                     ctx.NextState = 23;                     ctx.Return = true;                     return true;                  case '/':                     if (! ctx.L.allow_comments)                         return false;                      ctx.NextState = 25;                     return true;                  default:                     return false;                 }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State1,The following statement contains a magic number: switch (ctx.L.input_char) {                 case '"':                     ctx.NextState = 19;                     ctx.Return = true;                     return true;                  case ''':                 case ':':                 case '[':                 case ']':                 case '{':                 case '}':                     ctx.NextState = 1;                     ctx.Return = true;                     return true;                  case '-':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 2;                     return true;                  case '0':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 4;                     return true;                  case 'f':                     ctx.NextState = 12;                     return true;                  case 'n':                     ctx.NextState = 16;                     return true;                  case 't':                     ctx.NextState = 9;                     return true;                  case '\'':                     if (! ctx.L.allow_single_quoted_strings)                         return false;                      ctx.L.input_char = '"';                     ctx.NextState = 23;                     ctx.Return = true;                     return true;                  case '/':                     if (! ctx.L.allow_comments)                         return false;                      ctx.NextState = 25;                     return true;                  default:                     return false;                 }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State1,The following statement contains a magic number: switch (ctx.L.input_char) {                 case '"':                     ctx.NextState = 19;                     ctx.Return = true;                     return true;                  case ''':                 case ':':                 case '[':                 case ']':                 case '{':                 case '}':                     ctx.NextState = 1;                     ctx.Return = true;                     return true;                  case '-':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 2;                     return true;                  case '0':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 4;                     return true;                  case 'f':                     ctx.NextState = 12;                     return true;                  case 'n':                     ctx.NextState = 16;                     return true;                  case 't':                     ctx.NextState = 9;                     return true;                  case '\'':                     if (! ctx.L.allow_single_quoted_strings)                         return false;                      ctx.L.input_char = '"';                     ctx.NextState = 23;                     ctx.Return = true;                     return true;                  case '/':                     if (! ctx.L.allow_comments)                         return false;                      ctx.NextState = 25;                     return true;                  default:                     return false;                 }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State1,The following statement contains a magic number: switch (ctx.L.input_char) {                 case '"':                     ctx.NextState = 19;                     ctx.Return = true;                     return true;                  case ''':                 case ':':                 case '[':                 case ']':                 case '{':                 case '}':                     ctx.NextState = 1;                     ctx.Return = true;                     return true;                  case '-':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 2;                     return true;                  case '0':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 4;                     return true;                  case 'f':                     ctx.NextState = 12;                     return true;                  case 'n':                     ctx.NextState = 16;                     return true;                  case 't':                     ctx.NextState = 9;                     return true;                  case '\'':                     if (! ctx.L.allow_single_quoted_strings)                         return false;                      ctx.L.input_char = '"';                     ctx.NextState = 23;                     ctx.Return = true;                     return true;                  case '/':                     if (! ctx.L.allow_comments)                         return false;                      ctx.NextState = 25;                     return true;                  default:                     return false;                 }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State1,The following statement contains a magic number: switch (ctx.L.input_char) {                 case '"':                     ctx.NextState = 19;                     ctx.Return = true;                     return true;                  case ''':                 case ':':                 case '[':                 case ']':                 case '{':                 case '}':                     ctx.NextState = 1;                     ctx.Return = true;                     return true;                  case '-':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 2;                     return true;                  case '0':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 4;                     return true;                  case 'f':                     ctx.NextState = 12;                     return true;                  case 'n':                     ctx.NextState = 16;                     return true;                  case 't':                     ctx.NextState = 9;                     return true;                  case '\'':                     if (! ctx.L.allow_single_quoted_strings)                         return false;                      ctx.L.input_char = '"';                     ctx.NextState = 23;                     ctx.Return = true;                     return true;                  case '/':                     if (! ctx.L.allow_comments)                         return false;                      ctx.NextState = 25;                     return true;                  default:                     return false;                 }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State1,The following statement contains a magic number: switch (ctx.L.input_char) {                 case '"':                     ctx.NextState = 19;                     ctx.Return = true;                     return true;                  case ''':                 case ':':                 case '[':                 case ']':                 case '{':                 case '}':                     ctx.NextState = 1;                     ctx.Return = true;                     return true;                  case '-':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 2;                     return true;                  case '0':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 4;                     return true;                  case 'f':                     ctx.NextState = 12;                     return true;                  case 'n':                     ctx.NextState = 16;                     return true;                  case 't':                     ctx.NextState = 9;                     return true;                  case '\'':                     if (! ctx.L.allow_single_quoted_strings)                         return false;                      ctx.L.input_char = '"';                     ctx.NextState = 23;                     ctx.Return = true;                     return true;                  case '/':                     if (! ctx.L.allow_comments)                         return false;                      ctx.NextState = 25;                     return true;                  default:                     return false;                 }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State2,The following statement contains a magic number: ctx.NextState = 3;
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State2,The following statement contains a magic number: switch (ctx.L.input_char) {             case '0':                 ctx.L.string_buffer.Append ((char) ctx.L.input_char);                 ctx.NextState = 4;                 return true;              default:                 return false;             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State3,The following statement contains a magic number: switch (ctx.L.input_char) {                 case ''':                 case ']':                 case '}':                     ctx.L.UngetChar ();                     ctx.Return = true;                     ctx.NextState = 1;                     return true;                  case '.':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 5;                     return true;                  case 'e':                 case 'E':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 7;                     return true;                  default:                     return false;                 }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State3,The following statement contains a magic number: switch (ctx.L.input_char) {                 case ''':                 case ']':                 case '}':                     ctx.L.UngetChar ();                     ctx.Return = true;                     ctx.NextState = 1;                     return true;                  case '.':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 5;                     return true;                  case 'e':                 case 'E':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 7;                     return true;                  default:                     return false;                 }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State4,The following statement contains a magic number: switch (ctx.L.input_char) {             case ''':             case ']':             case '}':                 ctx.L.UngetChar ();                 ctx.Return = true;                 ctx.NextState = 1;                 return true;              case '.':                 ctx.L.string_buffer.Append ((char) ctx.L.input_char);                 ctx.NextState = 5;                 return true;              case 'e':             case 'E':                 ctx.L.string_buffer.Append ((char) ctx.L.input_char);                 ctx.NextState = 7;                 return true;              default:                 return false;             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State4,The following statement contains a magic number: switch (ctx.L.input_char) {             case ''':             case ']':             case '}':                 ctx.L.UngetChar ();                 ctx.Return = true;                 ctx.NextState = 1;                 return true;              case '.':                 ctx.L.string_buffer.Append ((char) ctx.L.input_char);                 ctx.NextState = 5;                 return true;              case 'e':             case 'E':                 ctx.L.string_buffer.Append ((char) ctx.L.input_char);                 ctx.NextState = 7;                 return true;              default:                 return false;             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State5,The following statement contains a magic number: ctx.NextState = 6;
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State6,The following statement contains a magic number: switch (ctx.L.input_char) {                 case ''':                 case ']':                 case '}':                     ctx.L.UngetChar ();                     ctx.Return = true;                     ctx.NextState = 1;                     return true;                  case 'e':                 case 'E':                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     ctx.NextState = 7;                     return true;                  default:                     return false;                 }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State7,The following statement contains a magic number: ctx.NextState = 8;
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State7,The following statement contains a magic number: switch (ctx.L.input_char) {             case '+':             case '-':                 ctx.L.string_buffer.Append ((char) ctx.L.input_char);                 ctx.NextState = 8;                 return true;              default:                 return false;             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State9,The following statement contains a magic number: switch (ctx.L.input_char) {             case 'r':                 ctx.NextState = 10;                 return true;              default:                 return false;             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State10,The following statement contains a magic number: switch (ctx.L.input_char) {             case 'u':                 ctx.NextState = 11;                 return true;              default:                 return false;             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State12,The following statement contains a magic number: switch (ctx.L.input_char) {             case 'a':                 ctx.NextState = 13;                 return true;              default:                 return false;             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State13,The following statement contains a magic number: switch (ctx.L.input_char) {             case 'l':                 ctx.NextState = 14;                 return true;              default:                 return false;             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State14,The following statement contains a magic number: switch (ctx.L.input_char) {             case 's':                 ctx.NextState = 15;                 return true;              default:                 return false;             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State16,The following statement contains a magic number: switch (ctx.L.input_char) {             case 'u':                 ctx.NextState = 17;                 return true;              default:                 return false;             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State17,The following statement contains a magic number: switch (ctx.L.input_char) {             case 'l':                 ctx.NextState = 18;                 return true;              default:                 return false;             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State19,The following statement contains a magic number: switch (ctx.L.input_char) {                 case '"':                     ctx.L.UngetChar ();                     ctx.Return = true;                     ctx.NextState = 20;                     return true;                  case '\\':                     ctx.StateStack = 19;                     ctx.NextState = 21;                     return true;                  default:                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     continue;                 }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State19,The following statement contains a magic number: switch (ctx.L.input_char) {                 case '"':                     ctx.L.UngetChar ();                     ctx.Return = true;                     ctx.NextState = 20;                     return true;                  case '\\':                     ctx.StateStack = 19;                     ctx.NextState = 21;                     return true;                  default:                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     continue;                 }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State19,The following statement contains a magic number: switch (ctx.L.input_char) {                 case '"':                     ctx.L.UngetChar ();                     ctx.Return = true;                     ctx.NextState = 20;                     return true;                  case '\\':                     ctx.StateStack = 19;                     ctx.NextState = 21;                     return true;                  default:                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     continue;                 }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State21,The following statement contains a magic number: switch (ctx.L.input_char) {             case 'u':                 ctx.NextState = 22;                 return true;              case '"':             case '\'':             case '/':             case '\\':             case 'b':             case 'f':             case 'n':             case 'r':             case 't':                 ctx.L.string_buffer.Append (                     ProcessEscChar (ctx.L.input_char));                 ctx.NextState = ctx.StateStack;                 return true;              default:                 return false;             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State22,The following statement contains a magic number: int mult    = 4096;
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State22,The following statement contains a magic number: mult /= 16;
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State22,The following statement contains a magic number: counter == 4
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State23,The following statement contains a magic number: switch (ctx.L.input_char) {                 case '\'':                     ctx.L.UngetChar ();                     ctx.Return = true;                     ctx.NextState = 24;                     return true;                  case '\\':                     ctx.StateStack = 23;                     ctx.NextState = 21;                     return true;                  default:                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     continue;                 }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State23,The following statement contains a magic number: switch (ctx.L.input_char) {                 case '\'':                     ctx.L.UngetChar ();                     ctx.Return = true;                     ctx.NextState = 24;                     return true;                  case '\\':                     ctx.StateStack = 23;                     ctx.NextState = 21;                     return true;                  default:                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     continue;                 }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State23,The following statement contains a magic number: switch (ctx.L.input_char) {                 case '\'':                     ctx.L.UngetChar ();                     ctx.Return = true;                     ctx.NextState = 24;                     return true;                  case '\\':                     ctx.StateStack = 23;                     ctx.NextState = 21;                     return true;                  default:                     ctx.L.string_buffer.Append ((char) ctx.L.input_char);                     continue;                 }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State25,The following statement contains a magic number: switch (ctx.L.input_char) {             case '*':                 ctx.NextState = 27;                 return true;              case '/':                 ctx.NextState = 26;                 return true;              default:                 return false;             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State25,The following statement contains a magic number: switch (ctx.L.input_char) {             case '*':                 ctx.NextState = 27;                 return true;              case '/':                 ctx.NextState = 26;                 return true;              default:                 return false;             }
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State27,The following statement contains a magic number: ctx.NextState = 28;
Magic Number,LitJson,Lexer,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\Lexer.cs,State28,The following statement contains a magic number: ctx.NextState = 27;
Missing Default,LitJson,JsonData,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonData.cs,Equals,The following switch statement is missing a default case: switch (this.type) {             case JsonType.None:                 return true;              case JsonType.Object:                 return this.inst_object.Equals (x.inst_object);              case JsonType.Array:                 return this.inst_array.Equals (x.inst_array);              case JsonType.String:                 return this.inst_string.Equals (x.inst_string);              case JsonType.Int:                 return this.inst_int.Equals (x.inst_int);              case JsonType.Long:                 return this.inst_long.Equals (x.inst_long);              case JsonType.Double:                 return this.inst_double.Equals (x.inst_double);              case JsonType.Boolean:                 return this.inst_boolean.Equals (x.inst_boolean);             }
Missing Default,LitJson,JsonData,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonData.cs,SetJsonType,The following switch statement is missing a default case: switch (type) {             case JsonType.None:                 break;              case JsonType.Object:                 inst_object = new Dictionary<string' JsonData> ();                 object_list = new List<KeyValuePair<string' JsonData>> ();                 break;              case JsonType.Array:                 inst_array = new List<JsonData> ();                 break;              case JsonType.String:                 inst_string = default (String);                 break;              case JsonType.Int:                 inst_int = default (Int32);                 break;              case JsonType.Long:                 inst_long = default (Int64);                 break;              case JsonType.Double:                 inst_double = default (Double);                 break;              case JsonType.Boolean:                 inst_boolean = default (Boolean);                 break;             }
Missing Default,LitJson,JsonData,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonData.cs,ToString,The following switch statement is missing a default case: switch (type) {             case JsonType.Array:                 return "JsonData array";              case JsonType.Boolean:                 return inst_boolean.ToString ();              case JsonType.Double:                 return inst_double.ToString ();              case JsonType.Int:                 return inst_int.ToString ();              case JsonType.Long:                 return inst_long.ToString ();              case JsonType.Object:                 return "JsonData object";              case JsonType.String:                 return inst_string;             }
Missing Default,LitJson,JsonWriter,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonWriter.cs,DoValidation,The following switch statement is missing a default case: switch (cond) {             case Condition.InArray:                 if (! context.InArray)                     throw new JsonException (                         "Can't close an array here");                 break;              case Condition.InObject:                 if (! context.InObject || context.ExpectingValue)                     throw new JsonException (                         "Can't close an object here");                 break;              case Condition.NotAProperty:                 if (context.InObject && ! context.ExpectingValue)                     throw new JsonException (                         "Expected a property");                 break;              case Condition.Property:                 if (! context.InObject || context.ExpectingValue)                     throw new JsonException (                         "Can't add a property here");                 break;              case Condition.Value:                 if (! context.InArray &&                     (! context.InObject || ! context.ExpectingValue))                     throw new JsonException (                         "Can't add a value here");                  break;             }
Missing Default,LitJson,JsonWriter,C:\research\architectureSmells\repos\NoxHarmonium_unity-tools\UnityProject\Assets\litjson\src\LitJson\JsonWriter.cs,PutString,The following switch statement is missing a default case: switch (str[i]) {                 case '\n':                     writer.Write ("\\n");                     continue;                  case '\r':                     writer.Write ("\\r");                     continue;                  case '\t':                     writer.Write ("\\t");                     continue;                  case '"':                 case '\\':                     writer.Write ('\\');                     writer.Write (str[i]);                     continue;                  case '\f':                     writer.Write ("\\f");                     continue;                  case '\b':                     writer.Write ("\\b");                     continue;                 }
