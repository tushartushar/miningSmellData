Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Memoling.Tools.SqliteBatchImport,Program,C:\repos\interjaz_WiktionaryMapper\SqliteBatchImport\Program.cs,Main,Cyclomatic complexity of the method is 11
Magic Number,Memoling.Tools.SqliteBatchImport,Program,C:\repos\interjaz_WiktionaryMapper\SqliteBatchImport\Program.cs,Main,The following statement contains a magic number: using (SqlWrapper wrapper = new SqlWrapper ()) {  	wrapper.Connect (exportDb.FullName);  	using (StreamReader sr = new StreamReader (importSql.FullName))  		using (SQLiteTransaction trans = wrapper.connection.BeginTransaction ()) {  			StringBuilder sb = new StringBuilder ();  			while (!sr.EndOfStream) {  				string sql = "";  				string line = sr.ReadLine () + "\n";  				if (pattern.IsMatch (line)) {  					foreach (Match match in pattern.Matches (line)) {  						sb.Append (line.Substring (0' match.Index));  						bool insideQuotes = sb.ToString ().Count (c => c == '\'') % 2 != 0;  						if (insideQuotes) {  							sb.Append (line.Substring (match.Index' line.Length - match.Index));  						}  						else {  							try {  								sql = sb.ToString ();  								wrapper.ExecuteNonQuery (sql' null);  								sb.Clear ();  							}  							catch (Exception ex) {  								PrintException (ex' sql);  								if (!force) {  									trans.Rollback ();  									return;  								}  							}  						}  					}  				}  				else {  					sb.Append (line);  				}  			}  			trans.Commit ();  		}  }  
Magic Number,Memoling.Tools.SqliteBatchImport,Program,C:\repos\interjaz_WiktionaryMapper\SqliteBatchImport\Program.cs,Main,The following statement contains a magic number: using (StreamReader sr = new StreamReader (importSql.FullName))  	using (SQLiteTransaction trans = wrapper.connection.BeginTransaction ()) {  		StringBuilder sb = new StringBuilder ();  		while (!sr.EndOfStream) {  			string sql = "";  			string line = sr.ReadLine () + "\n";  			if (pattern.IsMatch (line)) {  				foreach (Match match in pattern.Matches (line)) {  					sb.Append (line.Substring (0' match.Index));  					bool insideQuotes = sb.ToString ().Count (c => c == '\'') % 2 != 0;  					if (insideQuotes) {  						sb.Append (line.Substring (match.Index' line.Length - match.Index));  					}  					else {  						try {  							sql = sb.ToString ();  							wrapper.ExecuteNonQuery (sql' null);  							sb.Clear ();  						}  						catch (Exception ex) {  							PrintException (ex' sql);  							if (!force) {  								trans.Rollback ();  								return;  							}  						}  					}  				}  			}  			else {  				sb.Append (line);  			}  		}  		trans.Commit ();  	}  
Magic Number,Memoling.Tools.SqliteBatchImport,Program,C:\repos\interjaz_WiktionaryMapper\SqliteBatchImport\Program.cs,Main,The following statement contains a magic number: using (SQLiteTransaction trans = wrapper.connection.BeginTransaction ()) {  	StringBuilder sb = new StringBuilder ();  	while (!sr.EndOfStream) {  		string sql = "";  		string line = sr.ReadLine () + "\n";  		if (pattern.IsMatch (line)) {  			foreach (Match match in pattern.Matches (line)) {  				sb.Append (line.Substring (0' match.Index));  				bool insideQuotes = sb.ToString ().Count (c => c == '\'') % 2 != 0;  				if (insideQuotes) {  					sb.Append (line.Substring (match.Index' line.Length - match.Index));  				}  				else {  					try {  						sql = sb.ToString ();  						wrapper.ExecuteNonQuery (sql' null);  						sb.Clear ();  					}  					catch (Exception ex) {  						PrintException (ex' sql);  						if (!force) {  							trans.Rollback ();  							return;  						}  					}  				}  			}  		}  		else {  			sb.Append (line);  		}  	}  	trans.Commit ();  }  
Magic Number,Memoling.Tools.SqliteBatchImport,Program,C:\repos\interjaz_WiktionaryMapper\SqliteBatchImport\Program.cs,Main,The following statement contains a magic number: while (!sr.EndOfStream) {  	string sql = "";  	string line = sr.ReadLine () + "\n";  	if (pattern.IsMatch (line)) {  		foreach (Match match in pattern.Matches (line)) {  			sb.Append (line.Substring (0' match.Index));  			bool insideQuotes = sb.ToString ().Count (c => c == '\'') % 2 != 0;  			if (insideQuotes) {  				sb.Append (line.Substring (match.Index' line.Length - match.Index));  			}  			else {  				try {  					sql = sb.ToString ();  					wrapper.ExecuteNonQuery (sql' null);  					sb.Clear ();  				}  				catch (Exception ex) {  					PrintException (ex' sql);  					if (!force) {  						trans.Rollback ();  						return;  					}  				}  			}  		}  	}  	else {  		sb.Append (line);  	}  }  
Magic Number,Memoling.Tools.SqliteBatchImport,Program,C:\repos\interjaz_WiktionaryMapper\SqliteBatchImport\Program.cs,Main,The following statement contains a magic number: if (pattern.IsMatch (line)) {  	foreach (Match match in pattern.Matches (line)) {  		sb.Append (line.Substring (0' match.Index));  		bool insideQuotes = sb.ToString ().Count (c => c == '\'') % 2 != 0;  		if (insideQuotes) {  			sb.Append (line.Substring (match.Index' line.Length - match.Index));  		}  		else {  			try {  				sql = sb.ToString ();  				wrapper.ExecuteNonQuery (sql' null);  				sb.Clear ();  			}  			catch (Exception ex) {  				PrintException (ex' sql);  				if (!force) {  					trans.Rollback ();  					return;  				}  			}  		}  	}  }  else {  	sb.Append (line);  }  
Magic Number,Memoling.Tools.SqliteBatchImport,Program,C:\repos\interjaz_WiktionaryMapper\SqliteBatchImport\Program.cs,Main,The following statement contains a magic number: foreach (Match match in pattern.Matches (line)) {  	sb.Append (line.Substring (0' match.Index));  	bool insideQuotes = sb.ToString ().Count (c => c == '\'') % 2 != 0;  	if (insideQuotes) {  		sb.Append (line.Substring (match.Index' line.Length - match.Index));  	}  	else {  		try {  			sql = sb.ToString ();  			wrapper.ExecuteNonQuery (sql' null);  			sb.Clear ();  		}  		catch (Exception ex) {  			PrintException (ex' sql);  			if (!force) {  				trans.Rollback ();  				return;  			}  		}  	}  }  
Magic Number,Memoling.Tools.SqliteBatchImport,Program,C:\repos\interjaz_WiktionaryMapper\SqliteBatchImport\Program.cs,ParseArgs,The following statement contains a magic number: for (int i = 2; i < args.Count (); i++) {  	string val = args [i];  	if (val.Contains ("f")) {  		force = true;  	}  	if (val.Contains ("q")) {  		quite = true;  	}  }  
