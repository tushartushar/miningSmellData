Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Memoling.Tools.WiktionaryParser.Output,OutputResult,C:\repos\interjaz_WiktionaryMapper\WiktionaryParser\Output\OutputResult.cs,Process,Cyclomatic complexity of the method is 21
Magic Number,Memoling.Tools.WiktionaryParser.Data,DataProcessor,C:\repos\interjaz_WiktionaryMapper\WiktionaryParser\Data\DataProcessor.cs,GetSectionsInfo,The following statement contains a magic number: for (int i = 0; i < matches.Count; i++) {  	Match match = matches [i];  	string value = match.ToString ();  	int level = value.Count (c => c == '=') / 2;  	int index = match.Index + match.Length;  	int nextMatchIndex;  	if (i < matches.Count - 1) {  		nextMatchIndex = matches [i + 1].Index;  	}  	else {  		nextMatchIndex = text.Length;  	}  	yield return new SectionInfo () {  		Header = value.Substring (level' value.Length - level * 2)'  		Level = level'  		ContentIndex = index'  		ContentLength = nextMatchIndex - index'  	};  }  
Magic Number,Memoling.Tools.WiktionaryParser.Data,DataProcessor,C:\repos\interjaz_WiktionaryMapper\WiktionaryParser\Data\DataProcessor.cs,GetSectionsInfo,The following statement contains a magic number: for (int i = 0; i < matches.Count; i++) {  	Match match = matches [i];  	string value = match.ToString ();  	int level = value.Count (c => c == '=') / 2;  	int index = match.Index + match.Length;  	int nextMatchIndex;  	if (i < matches.Count - 1) {  		nextMatchIndex = matches [i + 1].Index;  	}  	else {  		nextMatchIndex = text.Length;  	}  	yield return new SectionInfo () {  		Header = value.Substring (level' value.Length - level * 2)'  		Level = level'  		ContentIndex = index'  		ContentLength = nextMatchIndex - index'  	};  }  
Magic Number,Memoling.Tools.WiktionaryParser.Data,DataProcessor,C:\repos\interjaz_WiktionaryMapper\WiktionaryParser\Data\DataProcessor.cs,GetSectionsInfo,The following statement contains a magic number: yield return new SectionInfo () {  	Header = value.Substring (level' value.Length - level * 2)'  	Level = level'  	ContentIndex = index'  	ContentLength = nextMatchIndex - index'  };  
