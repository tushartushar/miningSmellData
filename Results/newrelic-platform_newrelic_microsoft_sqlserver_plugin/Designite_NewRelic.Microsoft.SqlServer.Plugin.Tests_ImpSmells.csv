Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NewRelic.Microsoft.SqlServer.Plugin.Configuration,ConfigurationParserTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\Configuration\ConfigurationParserTests.cs,Assert_external_file_can_be_loaded,The length of the statement  "                                            }.Select(i => SqlServerEndpoint.FormatProperties(i.Name' i.ConnectionString' i.IncludedDatabases' i.ExcludedDatabases)).ToArray(); " is 130.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin.Configuration,ConfigurationParserTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\Configuration\ConfigurationParserTests.cs,Assert_external_file_can_be_loaded,The length of the statement  "            Database databaseWithDisplayName = sqlServers.Single(e => e.Name == "Local").IncludedDatabases.Single(d => d.Name == "Northwind"); " is 130.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin.Configuration,ConfigurationParserTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\Configuration\ConfigurationParserTests.cs,Assert_external_file_can_be_loaded,The length of the statement  "            var expectedAzureDatabases = new[] { "Name: CloudFtw' ConnectionString: Server=zzz'1433;Database=CloudFtw;User ID=NewRelic;Password=aaa;Trusted_Connection=false;Encrypt=true;Connection Timeout=30;" }; " is 200.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin.Configuration,SqlServerEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\Configuration\SqlServerEndpointTests.cs,Assert_include_exclude_lists_built_appropriately,The length of the statement  "            Assert.That(sqlServerToMonitor.ExcludedDatabaseNames' Is.EquivalentTo(Constants.SystemDatabases.Concat(new[] {"Baz"}))); " is 120.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin,MetricMapperTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\MetricMapperTests.cs,Assert_invalid_type_throws,The length of the statement  "            Assume.That(propertyInfo' Is.Not.Null' "Expected a property name '{0}' on {1}"' propertyName' typeof (FakeQueryType).Name); " is 123.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin,MetricMapperTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\MetricMapperTests.cs,Assert_try_create_mapper_gracefully_refuses_invalid_types,The length of the statement  "            Assume.That(propertyInfo' Is.Not.Null' "Expected a property name '{0}' on {1}"' propertyName' typeof (FakeQueryType).Name); " is 123.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin,QueryContextTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryContextTests.cs,Assert_custom_placeholders_in_pattern_are_replaced,The length of the statement  "            var queryResult = new FakeQueryWithCustomPlaceHolder {ThePlaceholder = "Tada"' AnotherPlaceholder = "Flexible"' TheMetric = 42'}; " is 129.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin,QueryContextTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryContextTests.cs,Assert_metric_pattern_substitution_appends_metric_name_if_metric_name_wildcard_missing,The length of the statement  "            Assert.That(metricName' Is.EqualTo("Memory/Tableriffic/MyMetric")' "Substitution failed when trailing slash is missing"); " is 121.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin,QueryLocatorTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryLocatorTests.cs,Assert_command_text_is_parameterized,The length of the statement  "            var actual = SqlQuery.PrepareCommandText<FakeDatabaseMetric>("I have the power!"' new SqlServerEndpoint("Local"' "."' false)); " is 126.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin,QueryLocatorTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryLocatorTests.cs,Assert_some_query_types_are_found,The length of the statement  "            Assert.That(typesWithAttribute' Is.Not.Empty' "Expected at least one QueryType using the " + typeof (SqlServerQueryAttribute).Name); " is 132.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_duplicated_data,The length of the statement  "            IEnumerable<SqlDmlActivity> outputResults1 = endpoint.CalculateSqlDmlActivityIncrease(resultSet1).Cast<SqlDmlActivity>().ToArray(); " is 131.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_duplicated_data,The length of the statement  "            Assert.That(string.Format("Reads:{0} Writes:{1}"' sqlDmlActivity.Reads' sqlDmlActivity.Writes)' Is.EqualTo("Reads:0 Writes:0")); " is 128.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_data,The length of the statement  "            IEnumerable<SqlDmlActivity> outputResults1 = endpoint.CalculateSqlDmlActivityIncrease(resultSet1).Cast<SqlDmlActivity>().ToArray(); " is 131.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_data,The length of the statement  "            Assert.That(string.Format("Reads:{0} Writes:{1}"' sqlDmlActivity.Reads' sqlDmlActivity.Writes)' Is.EqualTo("Reads:0 Writes:0")); " is 128.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_data,The length of the statement  "            SqlDmlActivity[] outputResults2 = endpoint.CalculateSqlDmlActivityIncrease(resultSet2).Cast<SqlDmlActivity>().ToArray(); " is 120.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_data,The length of the statement  "            Assert.That(string.Format("Reads:{0} Writes:{1}"' sqlDmlActivity.Reads' sqlDmlActivity.Writes)' Is.EqualTo("Reads:76 Writes:16")); " is 130.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The length of the statement  "            IEnumerable<SqlDmlActivity> outputResults1 = endpoint.CalculateSqlDmlActivityIncrease(resultSet1).Cast<SqlDmlActivity>().ToArray(); " is 131.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The length of the statement  "            Assert.That(string.Format("Reads:{0} Writes:{1}"' sqlDmlActivity.Reads' sqlDmlActivity.Writes)' Is.EqualTo("Reads:0 Writes:0")); " is 128.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The length of the statement  "            SqlDmlActivity[] outputResults2 = endpoint.CalculateSqlDmlActivityIncrease(resultSet2).Cast<SqlDmlActivity>().ToArray(); " is 120.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The length of the statement  "            Assert.That(string.Format("Reads:{0} Writes:{1}"' sqlDmlActivity.Reads' sqlDmlActivity.Writes)' Is.EqualTo("Reads:0 Writes:3")); " is 128.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,DatabaseMetricBaseTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\DatabaseMetricBaseTests.cs,Assert_that_excluded_databases_are_added_to_command_text,The length of the statement  "			var actual = DatabaseMetricBase.ParameterizeQuery(commandText' WhereClauseTokenEnum.Where' "token"' null' new[] { "tempdb"' "master"' "model"' "msdb"' }); " is 154.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,DatabaseMetricBaseTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\DatabaseMetricBaseTests.cs,Assert_that_included_databases_are_added_to_command_text,The length of the statement  "			var actual = DatabaseMetricBase.ParameterizeQuery(commandText' WhereClauseTokenEnum.WhereAnd' "token"' new[] { "BigData"' "LittleData"' }' null); " is 145.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,DatabaseMetricBaseTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\DatabaseMetricBaseTests.cs,Should_throw_when_replacement_token_is_missing_from_sql,The length of the statement  "			Assert.Throws<Exception>(() => DatabaseMetricBase.ParameterizeQuery("no token here"' WhereClauseTokenEnum.Where' "no match"' new[] {"foo"}' null)); " is 147.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,DatabaseMetricBaseTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\DatabaseMetricBaseTests.cs,Should_throw_when_replacement_token_is_missing_from_sql,The length of the statement  "			Assert.Throws<Exception>(() => DatabaseMetricBase.ParameterizeQuery("no token here"' WhereClauseTokenEnum.WhereAnd' "no match"' new[] {"foo"}' null)); " is 150.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,DatabaseMetricQueryTestFixtureBase<TQuery>,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\DatabaseMetricQueryTestFixtureBase.cs,Should_replace_where_with_excluded_databases,The length of the statement  "			IEnumerable<SqlQuery> queries = sqlServer.FilterQueries(queryLocator.PrepareQueries(new[] {queryType.GetType()}' false)); " is 121.
Long Statement,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,DatabaseMetricQueryTestFixtureBase<TQuery>,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\DatabaseMetricQueryTestFixtureBase.cs,Should_replace_where_with_included_databases,The length of the statement  "			IEnumerable<SqlQuery> queries = sqlServer.FilterQueries(queryLocator.PrepareQueries(new[] {queryType.GetType()}' false)); " is 121.
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.Configuration,ConfigurationParserTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\Configuration\ConfigurationParserTests.cs,Assert_external_file_can_be_loaded,The following statement contains a magic number: Assert.That(settings.PollIntervalSeconds' Is.EqualTo(45)' "PollIntervalSeconds not mapped correctly");
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.Configuration,SqlServerEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\Configuration\SqlServerEndpointTests.cs,Assert_that_max_recompile_summary_is_reported,The following statement contains a magic number: object[] metrics =              {                  new RecompileSummary { DatabaseName = "A"' SingleUseObjects = 100' SingleUsePercent = 0' MultipleUseObjects = 1' }'                  new RecompileSummary { DatabaseName = "B"' SingleUseObjects = 1' SingleUsePercent = 80' MultipleUseObjects = 1' }'                  new RecompileSummary { DatabaseName = "C"' SingleUseObjects = 1' SingleUsePercent = 0' MultipleUseObjects = 50' }'              };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.Configuration,SqlServerEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\Configuration\SqlServerEndpointTests.cs,Assert_that_max_recompile_summary_is_reported,The following statement contains a magic number: object[] metrics =              {                  new RecompileSummary { DatabaseName = "A"' SingleUseObjects = 100' SingleUsePercent = 0' MultipleUseObjects = 1' }'                  new RecompileSummary { DatabaseName = "B"' SingleUseObjects = 1' SingleUsePercent = 80' MultipleUseObjects = 1' }'                  new RecompileSummary { DatabaseName = "C"' SingleUseObjects = 1' SingleUsePercent = 0' MultipleUseObjects = 50' }'              };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.Configuration,SqlServerEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\Configuration\SqlServerEndpointTests.cs,Assert_that_max_recompile_summary_is_reported,The following statement contains a magic number: object[] metrics =              {                  new RecompileSummary { DatabaseName = "A"' SingleUseObjects = 100' SingleUsePercent = 0' MultipleUseObjects = 1' }'                  new RecompileSummary { DatabaseName = "B"' SingleUseObjects = 1' SingleUsePercent = 80' MultipleUseObjects = 1' }'                  new RecompileSummary { DatabaseName = "C"' SingleUseObjects = 1' SingleUsePercent = 0' MultipleUseObjects = 50' }'              };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.Configuration,SqlServerEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\Configuration\SqlServerEndpointTests.cs,Assert_that_max_recompile_summary_is_reported,The following statement contains a magic number: Assert.That(max.SingleUseObjects' Is.EqualTo(100)' "Wrong SingleUseObjects value");
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.Configuration,SqlServerEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\Configuration\SqlServerEndpointTests.cs,Assert_that_max_recompile_summary_is_reported,The following statement contains a magic number: Assert.That(max.SingleUsePercent' Is.EqualTo(80m)' "Wrong SingleUsePercent value");
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.Configuration,SqlServerEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\Configuration\SqlServerEndpointTests.cs,Assert_that_max_recompile_summary_is_reported,The following statement contains a magic number: Assert.That(max.MultipleUseObjects' Is.EqualTo(50)' "Wrong MultipleUseObjects value");
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,QueryContextTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryContextTests.cs,Assert_custom_placeholders_have_non_alphanumerics_replaced_with_underbar,The following statement contains a magic number: var queryResult = new FakeQueryWithCustomPlaceHolder {ThePlaceholder = "I ->have.bad_45+stuff!"' TheMetric = 42'};
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,QueryContextTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryContextTests.cs,Assert_custom_placeholders_have_whitespace_trimmed,The following statement contains a magic number: var queryResult = new FakeQueryWithCustomPlaceHolder {ThePlaceholder = "  space then tab\t"' TheMetric = 42'};
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,QueryContextTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryContextTests.cs,Assert_custom_placeholders_in_pattern_are_replaced,The following statement contains a magic number: var queryResult = new FakeQueryWithCustomPlaceHolder {ThePlaceholder = "Tada"' AnotherPlaceholder = "Flexible"' TheMetric = 42'};
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,QueryContextTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryContextTests.cs,Assert_custom_placeholders_with_empty_values_are_replaced_with_empty_string,The following statement contains a magic number: var queryResult = new FakeQueryWithCustomPlaceHolder {ThePlaceholder = ""' TheMetric = 42'};
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,QueryContextTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryContextTests.cs,Assert_custom_placeholders_with_null_values_are_replaced_with_null_text,The following statement contains a magic number: var queryResult = new FakeQueryWithCustomPlaceHolder {ThePlaceholder = null' TheMetric = 42'};
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_duplicated_data,The following statement contains a magic number: var resultSet1 = new object[]                               {                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       ExecutionCount = 10'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 8'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 8'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("BB12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 500'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("CC12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 600'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("EE12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM BAR")'                                       ExecutionCount = 100'                                       QueryType = "Reads"'                                   }'                               };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_duplicated_data,The following statement contains a magic number: var resultSet1 = new object[]                               {                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       ExecutionCount = 10'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 8'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 8'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("BB12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 500'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("CC12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 600'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("EE12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM BAR")'                                       ExecutionCount = 100'                                       QueryType = "Reads"'                                   }'                               };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_duplicated_data,The following statement contains a magic number: var resultSet1 = new object[]                               {                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       ExecutionCount = 10'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 8'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 8'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("BB12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 500'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("CC12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 600'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("EE12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM BAR")'                                       ExecutionCount = 100'                                       QueryType = "Reads"'                                   }'                               };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_duplicated_data,The following statement contains a magic number: var resultSet1 = new object[]                               {                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       ExecutionCount = 10'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 8'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 8'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("BB12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 500'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("CC12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 600'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("EE12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM BAR")'                                       ExecutionCount = 100'                                       QueryType = "Reads"'                                   }'                               };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_duplicated_data,The following statement contains a magic number: var resultSet1 = new object[]                               {                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       ExecutionCount = 10'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 8'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 8'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("BB12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 500'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("CC12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 600'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("EE12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM BAR")'                                       ExecutionCount = 100'                                       QueryType = "Reads"'                                   }'                               };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_duplicated_data,The following statement contains a magic number: var resultSet1 = new object[]                               {                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       ExecutionCount = 10'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 8'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 8'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("BB12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 500'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("CC12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 600'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("EE12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM BAR")'                                       ExecutionCount = 100'                                       QueryType = "Reads"'                                   }'                               };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_data,The following statement contains a magic number: var resultSet1 = new object[]                               {                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       ExecutionCount = 10'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 8'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("BB12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 500'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("CC12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 600'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("EE12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM BAR")'                                       ExecutionCount = 100'                                       QueryType = "Reads"'                                   }'                               };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_data,The following statement contains a magic number: var resultSet1 = new object[]                               {                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       ExecutionCount = 10'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 8'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("BB12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 500'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("CC12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 600'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("EE12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM BAR")'                                       ExecutionCount = 100'                                       QueryType = "Reads"'                                   }'                               };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_data,The following statement contains a magic number: var resultSet1 = new object[]                               {                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       ExecutionCount = 10'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 8'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("BB12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 500'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("CC12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 600'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("EE12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM BAR")'                                       ExecutionCount = 100'                                       QueryType = "Reads"'                                   }'                               };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_data,The following statement contains a magic number: var resultSet1 = new object[]                               {                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       ExecutionCount = 10'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 8'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("BB12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 500'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("CC12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 600'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("EE12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM BAR")'                                       ExecutionCount = 100'                                       QueryType = "Reads"'                                   }'                               };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_data,The following statement contains a magic number: var resultSet1 = new object[]                               {                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       ExecutionCount = 10'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 8'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("BB12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 500'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("CC12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 600'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("EE12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM BAR")'                                       ExecutionCount = 100'                                       QueryType = "Reads"'                                   }'                               };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_data,The following statement contains a magic number: var resultSet2 = new object[]                               {                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       ExecutionCount = 14'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 18'                                       QueryType = "Writes"'                                   }'                                      //Tests Duplicate Results gets aggregated                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 2'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("BB12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 550'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("CC12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 625'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("DD12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM BAR")'                                       ExecutionCount = 1'                                       QueryType = "Reads"'                                   }'                               };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_data,The following statement contains a magic number: var resultSet2 = new object[]                               {                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       ExecutionCount = 14'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 18'                                       QueryType = "Writes"'                                   }'                                      //Tests Duplicate Results gets aggregated                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 2'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("BB12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 550'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("CC12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 625'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("DD12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM BAR")'                                       ExecutionCount = 1'                                       QueryType = "Reads"'                                   }'                               };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_data,The following statement contains a magic number: var resultSet2 = new object[]                               {                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       ExecutionCount = 14'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 18'                                       QueryType = "Writes"'                                   }'                                      //Tests Duplicate Results gets aggregated                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 2'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("BB12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 550'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("CC12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 625'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("DD12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM BAR")'                                       ExecutionCount = 1'                                       QueryType = "Reads"'                                   }'                               };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_data,The following statement contains a magic number: var resultSet2 = new object[]                               {                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       ExecutionCount = 14'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 18'                                       QueryType = "Writes"'                                   }'                                      //Tests Duplicate Results gets aggregated                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 2'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("BB12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 550'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("CC12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 625'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("DD12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM BAR")'                                       ExecutionCount = 1'                                       QueryType = "Reads"'                                   }'                               };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_endpoint_appropriately_massages_data,The following statement contains a magic number: var resultSet2 = new object[]                               {                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       ExecutionCount = 14'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 18'                                       QueryType = "Writes"'                                   }'                                      //Tests Duplicate Results gets aggregated                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO BAR")'                                       ExecutionCount = 2'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("BB12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 550'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("CC12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM FOO")'                                       ExecutionCount = 625'                                       QueryType = "Reads"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("DD12")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("SELECT * FROM BAR")'                                       ExecutionCount = 1'                                       QueryType = "Reads"'                                   }'                               };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The following statement contains a magic number: var d1 = new DateTime(2013' 06' 20' 8' 28' 10' 100);
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The following statement contains a magic number: var d1 = new DateTime(2013' 06' 20' 8' 28' 10' 100);
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The following statement contains a magic number: var d1 = new DateTime(2013' 06' 20' 8' 28' 10' 100);
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The following statement contains a magic number: var d1 = new DateTime(2013' 06' 20' 8' 28' 10' 100);
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The following statement contains a magic number: var d1 = new DateTime(2013' 06' 20' 8' 28' 10' 100);
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The following statement contains a magic number: var d1 = new DateTime(2013' 06' 20' 8' 28' 10' 100);
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The following statement contains a magic number: var d1 = new DateTime(2013' 06' 20' 8' 28' 10' 100);
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The following statement contains a magic number: var d2 = new DateTime(2013' 06' 20' 8' 28' 10' 200);
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The following statement contains a magic number: var d2 = new DateTime(2013' 06' 20' 8' 28' 10' 200);
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The following statement contains a magic number: var d2 = new DateTime(2013' 06' 20' 8' 28' 10' 200);
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The following statement contains a magic number: var d2 = new DateTime(2013' 06' 20' 8' 28' 10' 200);
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The following statement contains a magic number: var d2 = new DateTime(2013' 06' 20' 8' 28' 10' 200);
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The following statement contains a magic number: var d2 = new DateTime(2013' 06' 20' 8' 28' 10' 200);
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The following statement contains a magic number: var d2 = new DateTime(2013' 06' 20' 8' 28' 10' 200);
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The following statement contains a magic number: var resultSet1 = new object[]                               {                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       CreationTime = d1'                                       ExecutionCount = 10'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       CreationTime = d2'                                       ExecutionCount = 12'                                       QueryType = "Writes"'                                   }'                               };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The following statement contains a magic number: var resultSet1 = new object[]                               {                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       CreationTime = d1'                                       ExecutionCount = 10'                                       QueryType = "Writes"'                                   }'                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       CreationTime = d2'                                       ExecutionCount = 12'                                       QueryType = "Writes"'                                   }'                               };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin,SqlEndpointTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\SqlEndpointTests.cs,Assert_sql_dml_actvity_data_takes_create_time_ms_into_account,The following statement contains a magic number: var resultSet2 = new object[]                               {                                   new SqlDmlActivity                                   {                                       PlanHandle = Encoding.UTF8.GetBytes("AA11")'                                       SqlStatementHash = Encoding.UTF8.GetBytes("INSERT INTO FOO")'                                       CreationTime = d2'                                       ExecutionCount = 15'                                       QueryType = "Writes"'                                   }'                               };
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,MemoryViewTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\MemoryViewTests.cs,Assert_buffer_cache_miss_ratio_stays_between_0_and_100,The following statement contains a magic number: var memoryView = new MemoryView {BufferCacheHitRatio = 120m};
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,MemoryViewTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\MemoryViewTests.cs,Assert_buffer_cache_miss_ratio_stays_between_0_and_100,The following statement contains a magic number: memoryView.BufferCacheHitRatio = 81m;
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,MemoryViewTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\MemoryViewTests.cs,Assert_buffer_cache_miss_ratio_stays_between_0_and_100,The following statement contains a magic number: Assert.That(memoryView.BufferCacheMissRatio' Is.EqualTo(19m)' "Hit ratio of 81m");
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,MemoryViewTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\MemoryViewTests.cs,Assert_buffer_cache_miss_ratio_stays_between_0_and_100,The following statement contains a magic number: memoryView.BufferCacheHitRatio = -5m;
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,MemoryViewTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\MemoryViewTests.cs,Assert_buffer_cache_miss_ratio_stays_between_0_and_100,The following statement contains a magic number: Assert.That(memoryView.BufferCacheMissRatio' Is.EqualTo(100m)' "Hit ratio of -5m");
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,MemoryViewTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\MemoryViewTests.cs,Assert_buffer_cache_hit_ratio_stays_between_0_and_100,The following statement contains a magic number: var memoryView = new MemoryView {BufferCacheHitRatio = 120m};
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,MemoryViewTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\MemoryViewTests.cs,Assert_buffer_cache_hit_ratio_stays_between_0_and_100,The following statement contains a magic number: Assert.That(memoryView.BufferCacheHitRatio' Is.EqualTo(100m)' "Hit ratio of 120m");
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,MemoryViewTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\MemoryViewTests.cs,Assert_buffer_cache_hit_ratio_stays_between_0_and_100,The following statement contains a magic number: memoryView.BufferCacheHitRatio = 81m;
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,MemoryViewTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\MemoryViewTests.cs,Assert_buffer_cache_hit_ratio_stays_between_0_and_100,The following statement contains a magic number: Assert.That(memoryView.BufferCacheHitRatio' Is.EqualTo(81m)' "Hit ratio of 81m");
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,MemoryViewTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\MemoryViewTests.cs,Assert_buffer_cache_hit_ratio_stays_between_0_and_100,The following statement contains a magic number: memoryView.BufferCacheHitRatio = -5m;
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,MemoryViewTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\MemoryViewTests.cs,Assert_page_threat_stays_between_0_and_100,The following statement contains a magic number: Assert.That(memoryView.PageLifeThreat' Is.EqualTo(100m)' "0 page life maxes at 100%");
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,MemoryViewTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\MemoryViewTests.cs,Assert_page_threat_stays_between_0_and_100,The following statement contains a magic number: Assert.That(memoryView.PageLifeThreat' Is.EqualTo(100m)' "1 page life maxes at 100%");
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,MemoryViewTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\MemoryViewTests.cs,Assert_page_threat_stays_between_0_and_100,The following statement contains a magic number: memoryView.PageLife = 300;
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,MemoryViewTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\MemoryViewTests.cs,Assert_page_threat_stays_between_0_and_100,The following statement contains a magic number: Assert.That(memoryView.PageLifeThreat' Is.EqualTo(100m)' "300 page life maxes at 100%");
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,MemoryViewTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\MemoryViewTests.cs,Assert_page_threat_stays_between_0_and_100,The following statement contains a magic number: memoryView.PageLife = 301;
Magic Number,NewRelic.Microsoft.SqlServer.Plugin.QueryTypes,MemoryViewTests,C:\research\architectureSmells\repos\newrelic-platform_newrelic_microsoft_sqlserver_plugin\src\NewRelic.Microsoft.SqlServer.Plugin.Tests\QueryTypes\MemoryViewTests.cs,Assert_page_threat_stays_between_0_and_100,The following statement contains a magic number: Assert.That(memoryView.PageLifeThreat' Is.LessThan(100m)' "301 page life is slightly less than 100%");
