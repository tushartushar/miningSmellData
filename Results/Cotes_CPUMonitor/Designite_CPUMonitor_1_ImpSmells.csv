Implementation smell,Namespace,Class,File,Method,Description
Magic Number,CPUMonitor_1,DiskResource,C:\repos\Cotes_CPUMonitor\CPUMonitor_1\DiskResource.cs,saveResults,The following statement contains a magic number: using (System.IO.StreamWriter file = new System.IO.StreamWriter ("disk_" + filename)) {  	LinkedList<float>.Enumerator it = diskValues.GetEnumerator ();  	while (it.MoveNext ()) {  		file.WriteLine (it.Current / 1024);  	}  }  
Magic Number,CPUMonitor_1,DiskResource,C:\repos\Cotes_CPUMonitor\CPUMonitor_1\DiskResource.cs,saveResults,The following statement contains a magic number: while (it.MoveNext ()) {  	file.WriteLine (it.Current / 1024);  }  
Magic Number,CPUMonitor_1,DiskResource,C:\repos\Cotes_CPUMonitor\CPUMonitor_1\DiskResource.cs,saveResults,The following statement contains a magic number: file.WriteLine (it.Current / 1024);  
Magic Number,CPUMonitor_1,SocketListener,C:\repos\Cotes_CPUMonitor\CPUMonitor_1\SocketListener.cs,startListening,The following statement contains a magic number: try {  	listener.Bind (localEndPoint);  	listener.Listen (10);  	// Start listening for connections.  	while (true) {  		Console.WriteLine ("Waiting for a connection...");  		// Program is suspended while waiting for an incoming connection.  		Socket handler = listener.Accept ();  		data = null;  		// An incoming connection needs to be processed.  		while (true) {  			bytes = new byte[1024];  			int bytesRec = handler.Receive (bytes);  			data += Encoding.ASCII.GetString (bytes' 0' bytesRec);  			if (data.IndexOf ("<EOF>") > -1) {  				break;  			}  		}  		// Show the data on the console.  		Console.WriteLine ("Text received : {0}"' data);  		handler.Shutdown (SocketShutdown.Both);  		handler.Close ();  		if (data.StartsWith ("start")) {  			this.startMonitoring (data);  		}  		else if (data.StartsWith ("stop")) {  			this.stopMonitoring ();  		}  	}  }  catch (Exception e) {  	Console.WriteLine (e.ToString ());  }  
Magic Number,CPUMonitor_1,SocketListener,C:\repos\Cotes_CPUMonitor\CPUMonitor_1\SocketListener.cs,startListening,The following statement contains a magic number: try {  	listener.Bind (localEndPoint);  	listener.Listen (10);  	// Start listening for connections.  	while (true) {  		Console.WriteLine ("Waiting for a connection...");  		// Program is suspended while waiting for an incoming connection.  		Socket handler = listener.Accept ();  		data = null;  		// An incoming connection needs to be processed.  		while (true) {  			bytes = new byte[1024];  			int bytesRec = handler.Receive (bytes);  			data += Encoding.ASCII.GetString (bytes' 0' bytesRec);  			if (data.IndexOf ("<EOF>") > -1) {  				break;  			}  		}  		// Show the data on the console.  		Console.WriteLine ("Text received : {0}"' data);  		handler.Shutdown (SocketShutdown.Both);  		handler.Close ();  		if (data.StartsWith ("start")) {  			this.startMonitoring (data);  		}  		else if (data.StartsWith ("stop")) {  			this.stopMonitoring ();  		}  	}  }  catch (Exception e) {  	Console.WriteLine (e.ToString ());  }  
Magic Number,CPUMonitor_1,SocketListener,C:\repos\Cotes_CPUMonitor\CPUMonitor_1\SocketListener.cs,startListening,The following statement contains a magic number: listener.Listen (10);  
Magic Number,CPUMonitor_1,SocketListener,C:\repos\Cotes_CPUMonitor\CPUMonitor_1\SocketListener.cs,startListening,The following statement contains a magic number: while (true) {  	Console.WriteLine ("Waiting for a connection...");  	// Program is suspended while waiting for an incoming connection.  	Socket handler = listener.Accept ();  	data = null;  	// An incoming connection needs to be processed.  	while (true) {  		bytes = new byte[1024];  		int bytesRec = handler.Receive (bytes);  		data += Encoding.ASCII.GetString (bytes' 0' bytesRec);  		if (data.IndexOf ("<EOF>") > -1) {  			break;  		}  	}  	// Show the data on the console.  	Console.WriteLine ("Text received : {0}"' data);  	handler.Shutdown (SocketShutdown.Both);  	handler.Close ();  	if (data.StartsWith ("start")) {  		this.startMonitoring (data);  	}  	else if (data.StartsWith ("stop")) {  		this.stopMonitoring ();  	}  }  
Magic Number,CPUMonitor_1,SocketListener,C:\repos\Cotes_CPUMonitor\CPUMonitor_1\SocketListener.cs,startListening,The following statement contains a magic number: while (true) {  	bytes = new byte[1024];  	int bytesRec = handler.Receive (bytes);  	data += Encoding.ASCII.GetString (bytes' 0' bytesRec);  	if (data.IndexOf ("<EOF>") > -1) {  		break;  	}  }  
Magic Number,CPUMonitor_1,SocketListener,C:\repos\Cotes_CPUMonitor\CPUMonitor_1\SocketListener.cs,startListening,The following statement contains a magic number: bytes = new byte[1024];  
Magic Number,CPUMonitor_1,SocketListener,C:\repos\Cotes_CPUMonitor\CPUMonitor_1\SocketListener.cs,startMonitoring,The following statement contains a magic number: for (int i = 3; i < parameters.Length; i++) {  	processes.AddLast (parameters [i]);  }  
