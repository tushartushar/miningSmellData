Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OneNoteCloudCreatePagesSample.Common,RichTextColumns,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\Common\RichTextColumns.cs,MeasureOverride,Cyclomatic complexity of the method is 8
Complex Method,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,Cyclomatic complexity of the method is 24
Long Parameter List,OneNoteCloudCreatePagesSample.DataModel,SampleDataItem,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,SampleDataItem,The method has 6 parameters.
Long Statement,OneNoteCloudCreatePagesSample,App,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\App.xaml.cs,App_CommandsRequested,The length of the statement  "	var privacyCommand = new SettingsCommand ("{69B8340C-C388-41D7-BA46-DB4E791928DD}"' "Privacy"' handler => MainPage.Current.OpenPrivacySettingsFlyout (handler)); " is 160.
Long Statement,OneNoteCloudCreatePagesSample,App,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\App.xaml.cs,App_CommandsRequested,The length of the statement  "	var accountCommand = new SettingsCommand ("{D0EB2AC6-D51D-420A-A463-48B707AA232C}"' "Account"' handler => MainPage.Current.OpenAccountSettingsFlyout (handler)); " is 160.
Long Statement,OneNoteCloudCreatePagesSample,CreateExamples,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\CreateExamples.cs,CreateSimplePage,The length of the statement  "	string simpleHtml = "<html>" + "<head>" + "<title>A simple page created from basic HTML-formatted text on Windows 8</title>" + "<meta name=\"created\" content=\"" + date + "\" />" + "</head>" + "<body>" + "<p>This is a page that just contains some simple <i>formatted</i> <b>text</b></p>" + "<p>Here is a <a href=\"http://www.microsoft.com\">link</a></p>" + "</body>" + "</html>"; " is 380.
Long Statement,OneNoteCloudCreatePagesSample,CreateExamples,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\CreateExamples.cs,CreatePageWithImage,The length of the statement  "	string simpleHtml = "<html>" + "<head>" + "<title>A simple page created with an image on it</title>" + "<meta name=\"created\" content=\"" + date + "\" />" + "</head>" + "<body>" + "<h1>This is a page with an image on it</h1>" + "<img src=\"name:" + imagePartName + "\" alt=\"A beautiful logo\" width=\"426\" height=\"68\" />" + "</body>" + "</html>"; " is 351.
Long Statement,OneNoteCloudCreatePagesSample,CreateExamples,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\CreateExamples.cs,CreatePageWithPDFAttachedAndRendered,The length of the statement  "	string attachmentRequestHtml = "<html>" + "<head>" + "<title>A page created with a PDF document attached and rendered</title>" + "<meta name=\"created\" content=\"" + date + "\" />" + "</head>" + "<body>" + "<h1>This is a page with a PDF file attachment</h1>" + "<object data-attachment=\"attachment.pdf\" data=\"name:" + attachmentPartName + "\" />" + "<p>Here's the content of the PDF document :</p>" + "<img data-render-src=\"name:" + attachmentPartName + "\" alt=\"Hello World\" width=\"1500\" />" + "</body>" + "</html>"; " is 526.
Long Statement,OneNoteCloudCreatePagesSample,CreateExamples,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\CreateExamples.cs,CreatePageWithEmbeddedWebPage,The length of the statement  "	const string embeddedWebPage = "<html>" + "<head>" + "<title>An embedded webpage</title>" + "</head>" + "<body>" + "<h1>This is a screen grab of a web page</h1>" + "<p>Lorem ipsum dolor sit amet' consectetur adipiscing elit. Nullam vehicula magna quis mauris accumsan' nec imperdiet nisi tempus. Suspendisse potenti. " + "Duis vel nulla sit amet turpis venenatis elementum. Cras laoreet quis nisi et sagittis. Donec euismod at tortor ut porta. Duis libero urna' viverra id " + "aliquam in' ornare sed orci. Pellentesque condimentum gravida felis' sed pulvinar erat suscipit sit amet. Nulla id felis quis sem blandit dapibus. Ut " + "viverra auctor nisi ac egestas. Quisque ac neque nec velit fringilla sagittis porttitor sit amet quam.</p>" + "</body>" + "</html>"; " is 765.
Long Statement,OneNoteCloudCreatePagesSample,CreateExamples,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\CreateExamples.cs,CreatePageWithEmbeddedWebPage,The length of the statement  "	string simpleHtml = "<html>" + "<head>" + "<title>A page created with an image of an html page on it</title>" + "<meta name=\"created\" content=\"" + date + "\" />" + "</head>" + "<body>" + "<h1>This is a page with an image of an html page on it.</h1>" + "<img data-render-src=\"name:" + embeddedPartName + "\" alt=\"A website screen grab\" />" + "</body>" + "</html>"; " is 369.
Long Statement,OneNoteCloudCreatePagesSample,CreateExamples,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\CreateExamples.cs,CreatePageWithUrl,The length of the statement  "	string simpleHtml = @"<html>" + "<head>" + "<title>A page created with an image from a URL on it</title>" + "<meta name=\"created\" content=\"" + date + "\" />" + "</head>" + "<body>" + "<p>This is a page with an image of an html page rendered from a URL on it.</p>" + "<img data-render-src=\"http://www.onenote.com\" alt=\"An important web page\"/>" + "</body>" + "</html>"; " is 375.
Long Statement,OneNoteCloudCreatePagesSample,CreateExamples,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\CreateExamples.cs,TranslateResponse,The length of the statement  "	// Extract the correlation id.  Apps should log this if they want to collcet the data to diagnose failures with Microsoft support  " is 129.
Long Statement,OneNoteCloudCreatePagesSample,MainPage,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\MainPage.xaml.cs,AttemptRefreshToken,The length of the statement  "	//If the user is signed in and has not yet signed out' we will attempt to refresh the token if necessary before sending a create page request " is 141.
Long Statement,OneNoteCloudCreatePagesSample.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The length of the statement  "	if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) { " is 246.
Long Statement,OneNoteCloudCreatePagesSample.Common,SuspensionManager,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\Common\SuspensionManager.cs,SaveAsync,The length of the statement  "		StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync (SessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 141.
Long Statement,OneNoteCloudCreatePagesSample.Common,SuspensionManager,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\Common\SuspensionManager.cs,RegisterFrame,The length of the statement  "		throw new InvalidOperationException ("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 139.
Complex Conditional,OneNoteCloudCreatePagesSample.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "(args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)"  is complex.
Complex Conditional,OneNoteCloudCreatePagesSample.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)"  is complex.
Complex Conditional,OneNoteCloudCreatePagesSample.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)"  is complex.
Empty Catch Block,OneNoteCloudCreatePagesSample,App,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\App.xaml.cs,OnLaunched,The method has an empty catch block.
Empty Catch Block,OneNoteCloudCreatePagesSample,AccountFlyout,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\AccountFlyout.xaml.cs,SignInClick,The method has an empty catch block.
Empty Catch Block,OneNoteCloudCreatePagesSample,AccountFlyout,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\AccountFlyout.xaml.cs,SignOutClick,The method has an empty catch block.
Empty Catch Block,OneNoteCloudCreatePagesSample,AccountFlyout,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\AccountFlyout.xaml.cs,UpdateState,The method has an empty catch block.
Magic Number,OneNoteCloudCreatePagesSample,MainPage,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\MainPage.xaml.cs,DetermineVisualState,The following statement contains a magic number: if (viewState == ApplicationViewState.Filled || viewState == ApplicationViewState.FullScreenLandscape) {  	var windowWidth = Window.Current.Bounds.Width;  	if (windowWidth >= 1366)  		return "FullScreenLandscapeOrWide";  	return "FilledOrNarrow";  }  
Magic Number,OneNoteCloudCreatePagesSample,MainPage,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\MainPage.xaml.cs,DetermineVisualState,The following statement contains a magic number: if (windowWidth >= 1366)  	return "FullScreenLandscapeOrWide";  
Magic Number,OneNoteCloudCreatePagesSample,MainPage,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\MainPage.xaml.cs,CreatePage,The following statement contains a magic number: try {  	await SetActionControlState (false);  	await ClearResponseFields ();  	// Get actual handler for the specific example from the data model  	Func<bool' string' Task<StandardResponse>> runAction = ((SampleDataItem)(itemDetail.DataContext)).Action;  	if (runAction != null) {  		StandardResponse response = await runAction (debug' pageSectionName);  		responseTextBox.Text = ((int)response.StatusCode).ToString () + ": " + response.StatusCode.ToString ();  		if (response.StatusCode == HttpStatusCode.Created) {  			var successResponse = (CreateSuccessResponse)response;  			clientLinkTextBox.Text = successResponse.OneNoteClientUrl ?? "No URI";  			webLinkTextBox.Text = successResponse.OneNoteWebUrl ?? "No URI";  		}  		else {  			clientLinkTextBox.Text = string.Empty;  			webLinkTextBox.Text = string.Empty;  			// TODO: Log response.CorrelationId  and date/time if app is in diagnostic mode.  			// This is the key information that will facilitiate diagnosis with Microsoft support.  		}  	}  }  finally {  	#pragma  	/// Disable warning as it is not possible to await inside a finally block.  	SetActionControlState (true);  	#pragma  }  
Magic Number,OneNoteCloudCreatePagesSample,MainPage,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\MainPage.xaml.cs,CreatePage,The following statement contains a magic number: try {  	await SetActionControlState (false);  	await ClearResponseFields ();  	// Get actual handler for the specific example from the data model  	Func<bool' string' Task<StandardResponse>> runAction = ((SampleDataItem)(itemDetail.DataContext)).Action;  	if (runAction != null) {  		StandardResponse response = await runAction (debug' pageSectionName);  		responseTextBox.Text = ((int)response.StatusCode).ToString () + ": " + response.StatusCode.ToString ();  		if (response.StatusCode == HttpStatusCode.Created) {  			var successResponse = (CreateSuccessResponse)response;  			clientLinkTextBox.Text = successResponse.OneNoteClientUrl ?? "No URI";  			webLinkTextBox.Text = successResponse.OneNoteWebUrl ?? "No URI";  		}  		else {  			clientLinkTextBox.Text = string.Empty;  			webLinkTextBox.Text = string.Empty;  			// TODO: Log response.CorrelationId  and date/time if app is in diagnostic mode.  			// This is the key information that will facilitiate diagnosis with Microsoft support.  		}  	}  }  finally {  	#pragma  	/// Disable warning as it is not possible to await inside a finally block.  	SetActionControlState (true);  	#pragma  }  
Magic Number,OneNoteCloudCreatePagesSample.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	const CoreVirtualKeyStates downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,OneNoteCloudCreatePagesSample.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	const CoreVirtualKeyStates downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,OneNoteCloudCreatePagesSample.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	const CoreVirtualKeyStates downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,OneNoteCloudCreatePagesSample.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	const CoreVirtualKeyStates downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,OneNoteCloudCreatePagesSample.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  	// When the previous key or Alt+Left are pressed navigate back  	args.Handled = true;  	this.GoBack (this' new RoutedEventArgs ());  }  else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	args.Handled = true;  	this.GoForward (this' new RoutedEventArgs ());  }  
Magic Number,OneNoteCloudCreatePagesSample.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  	// When the previous key or Alt+Left are pressed navigate back  	args.Handled = true;  	this.GoBack (this' new RoutedEventArgs ());  }  else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	args.Handled = true;  	this.GoForward (this' new RoutedEventArgs ());  }  
Magic Number,OneNoteCloudCreatePagesSample.Common,LayoutAwarePage,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	args.Handled = true;  	this.GoForward (this' new RoutedEventArgs ());  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	if (TopItems.Count > 12) {  		TopItems.RemoveAt (12);  	}  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	if (TopItems.Count > 12) {  		TopItems.RemoveAt (12);  	}  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	if (TopItems.Count > 12) {  		TopItems.RemoveAt (12);  	}  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (TopItems.Count > 12) {  	TopItems.RemoveAt (12);  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (TopItems.Count > 12) {  	TopItems.RemoveAt (12);  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: TopItems.RemoveAt (12);  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  }  else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  }  else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  }  else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  }  else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  }  else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  }  else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  }  else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: TopItems.Add (Items [11]);  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: TopItems.RemoveAt (12);  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	if (Items.Count >= 12) {  		TopItems.Add (Items [11]);  	}  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	if (Items.Count >= 12) {  		TopItems.Add (Items [11]);  	}  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	if (Items.Count >= 12) {  		TopItems.Add (Items [11]);  	}  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (Items.Count >= 12) {  	TopItems.Add (Items [11]);  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (Items.Count >= 12) {  	TopItems.Add (Items [11]);  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: TopItems.Add (Items [11]);  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  }  
Magic Number,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: while (TopItems.Count < Items.Count && TopItems.Count < 12) {  	TopItems.Add (Items [TopItems.Count]);  }  
Missing Default,OneNoteCloudCreatePagesSample.DataModel,SampleDataGroup,D:\SecondaryReposToAnalyze\OneNoteDev_OneNoteAPISampleWinStore\OneNoteCloudCreatePagesSample\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following switch statement is missing a default case: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	}  	else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	}  	else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
