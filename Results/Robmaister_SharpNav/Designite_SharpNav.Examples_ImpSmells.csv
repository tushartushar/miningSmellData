Implementation smell,Namespace,Class,File,Method,Description
Long Method,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GenerateNavMesh,The method has 103 lines of code.
Long Method,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The method has 115 lines of code.
Complex Method,SharpNav.Examples,AgentCylinder,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\AgentCylinder.cs,Update,Cyclomatic complexity of the method is 10
Complex Method,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,OnUpdateFrame,Cyclomatic complexity of the method is 16
Complex Method,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GeneratePathfinding,Cyclomatic complexity of the method is 8
Complex Method,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawPolyMesh,Cyclomatic complexity of the method is 15
Complex Method,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawPolyMeshDetail,Cyclomatic complexity of the method is 15
Complex Method,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawNavMesh,Cyclomatic complexity of the method is 14
Complex Method,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawPathfinding,Cyclomatic complexity of the method is 9
Long Parameter List,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GetSteerTarget,The method has 8 parameters. Parameters: navMeshQuery' startPos' endPos' minTargetDist' path' steerPos' steerPosFlag' steerPosRef
Long Parameter List,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,CreateAddRemoveButton,The method has 8 parameters. Parameters: parent' labelText' labelMaxWidth' valueLabelMaxWidth' minValue' maxValue' onAdd' onRemove
Long Parameter List,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,CreateSliderOption,The method has 9 parameters. Parameters: parent' labelText' min' max' value' valueStringFormat' labelMaxWidth' valueLabelMaxWidth' onChange
Long Parameter List,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,TryParseVec,The method has 5 parameters. Parameters: values' x' y' z' v
Long Statement,SharpNav.Examples,Camera,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\Camera.cs,RotateHeadingTo,The length of the statement  "			//the radius of the circle that the up axis will have to lie on - think of a unit sphere as differently sized circles stacked vertically. " is 137.
Long Statement,SharpNav.Examples,Camera,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\Camera.cs,RotateHeadingTo,The length of the statement  "			//use cos/sin to get the X and Z coordinates in the unit circle in the middle of the sphere (think of stacked circles again)'  " is 125.
Long Statement,SharpNav.Examples,Camera,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\Camera.cs,RotatePitchTo,The length of the statement  "			//Use this to recalculate the proper position of the up axis' without it we get shrinking/scaling issues because the axes are not coordinated " is 141.
Long Statement,SharpNav.Examples,Camera,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\Camera.cs,LookAt,The length of the statement  "			//store the line between the camera and the other IPoint3D' but only on the X/Z plane' then normalize it to get a unit vector. " is 126.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,OnKeyboardKeyDown,The length of the statement  "				Gwen.Platform.Neutral.FileSave("Save NavMesh to file"' "."' "All SharpNav Files(.snb' .snx' .snj)|*.snb;*.snx;*.snj|SharpNav Binary(.snb)|*.snb|SharpNav XML(.snx)|*.snx|SharpNav JSON(.snj)|*.snj"' SaveNavMeshToFile); " is 216.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,OnKeyboardKeyDown,The length of the statement  "				Gwen.Platform.Neutral.FileOpen("Load NavMesh from file"' "."' "All SharpNav Files(.snb' .snx' .snj)|*.snb;*.snx;*.snj|SharpNav Binary(.snb)|*.snb|SharpNav XML(.snx)|*.snx|SharpNav JSON(.snj)|*.snj"' LoadNavMeshFromFile); " is 220.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GenerateNavMesh,The length of the statement  "				//level.SetBoundingBoxOffset(new SVector3(settings.CellSize * 0.5f' settings.CellHeight * 0.5f' settings.CellSize * 0.5f)); " is 123.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GenerateNavMesh,The length of the statement  "				Console.WriteLine("PolyMeshDetail contains " + polyMeshDetail.VertCount + " vertices and " + polyMeshDetail.TrisCount + " tris in " + polyMeshDetail.MeshCount + " meshes."); " is 173.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawHeightfield,The length of the statement  "					var cellLoc = new Vector3(j * cellSize.X + halfCellSize.X + heightfield.Bounds.Min.X' heightfield.Bounds.Min.Y' i * cellSize.Z + halfCellSize.Z + heightfield.Bounds.Min.Z); " is 172.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawHeightfield,The length of the statement  "						Matrix4.CreateTranslation(cellLoc.X' ((span.Minimum + span.Maximum) * 0.5f) * cellSize.Y + cellLoc.Y' cellLoc.Z' out spanLoc); " is 126.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawCompactHeightfield,The length of the statement  "					squarePos = new Vector3(j * cellSize.X + halfCellSize.X + heightfield.Bounds.Min.X' heightfield.Bounds.Min.Y' i * cellSize.Z + halfCellSize.Z + heightfield.Bounds.Min.Z); " is 170.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawDistanceField,The length of the statement  "					squarePos = new Vector3(j * cellSize.X + halfCellSize.X + heightfield.Bounds.Min.X' heightfield.Bounds.Min.Y' i * cellSize.Z + halfCellSize.Z + heightfield.Bounds.Min.Z); " is 170.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawRegions,The length of the statement  "					squarePos = new Vector3(j * cellSize.X + halfCellSize.X + heightfield.Bounds.Min.X' heightfield.Bounds.Min.Y' i * cellSize.Z + halfCellSize.Z + heightfield.Bounds.Min.Z); " is 170.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawContours,The length of the statement  "			Matrix4.CreateTranslation(heightfield.Bounds.Min.X + cellSize.X * compactHeightfield.BorderSize' heightfield.Bounds.Min.Y' heightfield.Bounds.Min.Z + cellSize.Z * compactHeightfield.BorderSize' out squareTrans); " is 211.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The length of the statement  "			Base maxTriSlope = CreateSliderOption(areaSetting' "Max Tri Slope:"' 0.0001f' 3.14f' 3.14f' "N2"' leftMax' rightMax' v => areaSettings.MaxTriSlope = v); " is 152.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The length of the statement  "			Base minLevelHeight = CreateSliderOption(areaSetting' "Min Height:"' bounds.Min.Y' bounds.Max.Y' bounds.Min.Y' "N0"' leftMax' rightMax' v => areaSettings.MinLevelHeight = v); " is 174.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The length of the statement  "			Base maxLevelHeight = CreateSliderOption(areaSetting' "Max Height:"' bounds.Min.Y' bounds.Max.Y' bounds.Max.Y' "N0"' leftMax' rightMax' v => areaSettings.MaxLevelHeight = v); " is 174.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The length of the statement  "			Base cellSizeSetting = CreateSliderOption(rsSettings' "Cell Size:"' 0.1f' 2.0f' 0.3f' "N2"' leftMax' rightMax' v => settings.CellSize = v); " is 139.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The length of the statement  "			Base cellHeightSetting = CreateSliderOption(rsSettings' "Cell Height:"' 0.1f' 2f' 0.2f' "N2"' leftMax' rightMax' v => settings.CellHeight = v); " is 143.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The length of the statement  "			Base maxSlopeSetting = CreateSliderOption(agentSettings' "Max Climb:"' 0.1f' 5.0f' 0.9f' "N0"' leftMax' rightMax' v => settings.MaxClimb = v); " is 142.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The length of the statement  "			Base maxHeightSetting = CreateSliderOption(agentSettings' "Height:"' 0.1f' 5.0f' 2.0f' "N0"' leftMax' rightMax' v => { settings.AgentHeight = v; agentCylinder.Height = v; }); " is 174.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The length of the statement  "			Base erodeRadius = CreateSliderOption(agentSettings' "Radius:"' 0.0f' 5.0f' 0.6f' "N1"' leftMax' rightMax' v => { settings.AgentRadius = v; agentCylinder.Radius = v; }); " is 169.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The length of the statement  "			Base addRemoveAgent = CreateAddRemoveButton(agentSettings' "Count"' leftMax' rightMax' 0' MAX_AGENTS' () => { numActiveAgents++; GenerateCrowd(); }' () => { numActiveAgents = Math.Max(0' numActiveAgents - 1); GenerateCrowd(); }); " is 229.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The length of the statement  "			Base minRegionSize = CreateSliderOption(regionSettings' "Min Region Size:"' 0f' 150f' 8f' "N0"' leftMax' rightMax' v => settings.MinRegionSize = (int)Math.Round(v)); " is 165.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The length of the statement  "			Base mrgRegionSize = CreateSliderOption(regionSettings' "Merged Region Size:"' 0f' 150f' 20f' "N0"' leftMax' rightMax' v => settings.MergedRegionSize = (int)Math.Round(v)); " is 172.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The length of the statement  "			Base maxEdgeLength = CreateSliderOption(navMeshSettings' "Max Edge Length:"' 0f' 50f' 12f' "N0"' leftMax' rightMax' v => settings.MaxEdgeLength = (int)Math.Round(v)); " is 166.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The length of the statement  "			Base maxEdgeErr = CreateSliderOption(navMeshSettings' "Max Edge Error:"' 0f' 3f' 1.8f' "N1"' leftMax' rightMax' v => settings.MaxEdgeError = v); " is 144.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The length of the statement  "			Base vertsPerPoly = CreateSliderOption(navMeshSettings' "Verts Per Poly:"' 3f' 12f' 6f' "N0"' leftMax' rightMax' v => settings.VertsPerPoly = (int)Math.Round(v)); " is 162.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The length of the statement  "			Base sampleDistance = CreateSliderOption(navMeshDetailSettings' "Sample Distance:"' 0f' 16f' 6f' "N0"' leftMax' rightMax' v => settings.SampleDistance = (int)Math.Round(v)); " is 173.
Long Statement,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The length of the statement  "			Base maxSampleError = CreateSliderOption(navMeshDetailSettings' "Max Sample Error:"' 0f' 16f' 1f' "N0"' leftMax' rightMax' v => settings.MaxSampleError = (int)Math.Round(v)); " is 174.
Magic Number,SharpNav.Examples,AgentCylinder,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\AgentCylinder.cs,Update,The following statement contains a magic number: for (int i = 0; i < 2; i++)  			{  				for (int j = 0; j <= segments; j++)  				{  					float theta = ((float)j / (float)segments) * 2 * (float)Math.PI;  					float st = (float)Math.Sin(theta)' ct = (float)Math.Cos(theta);    					verts.Add(new Vector3(radius * st' height * i' radius * ct));  					verts.Add(i == 0 ? -Vector3.UnitY : Vector3.UnitY);  				}  			}
Magic Number,SharpNav.Examples,AgentCylinder,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\AgentCylinder.cs,Update,The following statement contains a magic number: for (int i = 0; i < 2; i++)  			{  				for (int j = 0; j <= segments; j++)  				{  					float theta = ((float)j / (float)segments) * 2 * (float)Math.PI;  					float st = (float)Math.Sin(theta)' ct = (float)Math.Cos(theta);    					verts.Add(new Vector3(radius * st' height * i' radius * ct));  					verts.Add(i == 0 ? -Vector3.UnitY : Vector3.UnitY);  				}  			}
Magic Number,SharpNav.Examples,AgentCylinder,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\AgentCylinder.cs,Update,The following statement contains a magic number: for (int i = 0; i < 2; i++)  			{  				for (int j = 0; j <= segments; j++)  				{  					float theta = ((float)j / (float)segments) * 2 * (float)Math.PI;  					float st = (float)Math.Sin(theta)' ct = (float)Math.Cos(theta);    					verts.Add(new Vector3(radius * st' height * i' radius * ct));  					verts.Add(new Vector3(st' 0' ct));  				}  			}
Magic Number,SharpNav.Examples,AgentCylinder,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\AgentCylinder.cs,Update,The following statement contains a magic number: for (int i = 0; i < 2; i++)  			{  				for (int j = 0; j <= segments; j++)  				{  					float theta = ((float)j / (float)segments) * 2 * (float)Math.PI;  					float st = (float)Math.Sin(theta)' ct = (float)Math.Cos(theta);    					verts.Add(new Vector3(radius * st' height * i' radius * ct));  					verts.Add(new Vector3(st' 0' ct));  				}  			}
Magic Number,SharpNav.Examples,AgentCylinder,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\AgentCylinder.cs,Update,The following statement contains a magic number: GL.BufferData(BufferTarget.ArrayBuffer' (IntPtr)(verts.Count * 3 * 4)' verts.ToArray()' BufferUsageHint.StaticDraw);
Magic Number,SharpNav.Examples,AgentCylinder,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\AgentCylinder.cs,Update,The following statement contains a magic number: GL.BufferData(BufferTarget.ArrayBuffer' (IntPtr)(verts.Count * 3 * 4)' verts.ToArray()' BufferUsageHint.StaticDraw);
Magic Number,SharpNav.Examples,AgentCylinder,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\AgentCylinder.cs,Update,The following statement contains a magic number: GL.BufferData(BufferTarget.ElementArrayBuffer' (IntPtr)(inds.Count * 4)' inds.ToArray()' BufferUsageHint.StaticDraw);
Magic Number,SharpNav.Examples,AgentCylinder,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\AgentCylinder.cs,Draw,The following statement contains a magic number: GL.VertexPointer(3' VertexPointerType.Float' 6 * 4' 0);
Magic Number,SharpNav.Examples,AgentCylinder,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\AgentCylinder.cs,Draw,The following statement contains a magic number: GL.VertexPointer(3' VertexPointerType.Float' 6 * 4' 0);
Magic Number,SharpNav.Examples,AgentCylinder,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\AgentCylinder.cs,Draw,The following statement contains a magic number: GL.VertexPointer(3' VertexPointerType.Float' 6 * 4' 0);
Magic Number,SharpNav.Examples,AgentCylinder,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\AgentCylinder.cs,Draw,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,AgentCylinder,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\AgentCylinder.cs,Draw,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,AgentCylinder,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\AgentCylinder.cs,Draw,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,AgentCylinder,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\AgentCylinder.cs,Draw,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,Camera,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\Camera.cs,RotateHeadingTo,The following statement contains a magic number: if (heading >= 90)  				heading = 90;
Magic Number,SharpNav.Examples,Camera,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\Camera.cs,RotateHeadingTo,The following statement contains a magic number: if (heading >= 90)  				heading = 90;
Magic Number,SharpNav.Examples,Camera,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\Camera.cs,RotateHeadingTo,The following statement contains a magic number: if (heading <= -90)  				heading = -90;
Magic Number,SharpNav.Examples,Camera,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\Camera.cs,RotateHeadingTo,The following statement contains a magic number: if (heading <= -90)  				heading = -90;
Magic Number,SharpNav.Examples,Camera,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\Camera.cs,RotateHeadingTo,The following statement contains a magic number: float headingDirection = (pitch + 90) * (MathHelper.Pi / 180f);
Magic Number,SharpNav.Examples,Camera,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\Camera.cs,RotatePitchTo,The following statement contains a magic number: if (pitch >= 360)  				pitch %= 360;
Magic Number,SharpNav.Examples,Camera,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\Camera.cs,RotatePitchTo,The following statement contains a magic number: if (pitch >= 360)  				pitch %= 360;
Magic Number,SharpNav.Examples,Camera,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\Camera.cs,RotatePitchTo,The following statement contains a magic number: if (pitch < 0)  				pitch = 360 + (pitch % -360);
Magic Number,SharpNav.Examples,Camera,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\Camera.cs,RotatePitchTo,The following statement contains a magic number: if (pitch < 0)  				pitch = 360 + (pitch % -360);
Magic Number,SharpNav.Examples,Camera,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\Camera.cs,LookAt,The following statement contains a magic number: RotatePitchTo((float)(Math.Atan2(pitchVec.Y' pitchVec.X) * (180f / MathHelper.Pi) - 90));
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,OnUpdateFrame,The following statement contains a magic number: if (gwenRenderer.TextCacheSize > 1000)  				gwenRenderer.FlushTextCache();
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,LoadNavMeshFromFile,The following statement contains a magic number: try  			{    				tiledNavMesh = new NavMeshJsonSerializer().Deserialize(path);  				navMeshQuery = new NavMeshQuery(tiledNavMesh' 2048);  				hasGenerated = true;  				displayMode = DisplayMode.NavMesh;  			}  			catch (Exception e)  			{  				if (!interceptExceptions)  					throw;  				else  				{  					hasGenerated = false;  					tiledNavMesh = null;  					navMeshQuery = null;  					Console.WriteLine("Navmesh loading failed with exception:" + Environment.NewLine + e.ToString());  				}  			}
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GenerateNavMesh,The following statement contains a magic number: try  			{  				//level.SetBoundingBoxOffset(new SVector3(settings.CellSize * 0.5f' settings.CellHeight * 0.5f' settings.CellSize * 0.5f));  				var levelTris = level.GetTriangles();  				var triEnumerable = TriangleEnumerable.FromTriangle(levelTris' 0' levelTris.Length);  				BBox3 bounds = triEnumerable.GetBoundingBox();    				heightfield = new Heightfield(bounds' settings);    				Console.WriteLine("Heightfield");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				/*Area[] areas = AreaGenerator.From(triEnumerable' Area.Default)  					.MarkAboveHeight(areaSettings.MaxLevelHeight' Area.Null)  					.MarkBelowHeight(areaSettings.MinLevelHeight' Area.Null)  					.MarkBelowSlope(areaSettings.MaxTriSlope' Area.Null)  					.ToArray();  				heightfield.RasterizeTrianglesWithAreas(levelTris' areas);*/  				heightfield.RasterizeTriangles(levelTris' Area.Default);    				Console.WriteLine(" + Rasterization\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				Console.WriteLine(" + Filtering");  				prevMs = sw.ElapsedMilliseconds;    				heightfield.FilterLedgeSpans(settings.VoxelAgentHeight' settings.VoxelMaxClimb);    				Console.WriteLine("   + Ledge Spans\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				heightfield.FilterLowHangingWalkableObstacles(settings.VoxelMaxClimb);    				Console.WriteLine("   + Low Hanging Obstacles\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				heightfield.FilterWalkableLowHeightSpans(settings.VoxelAgentHeight);    				Console.WriteLine("   + Low Height Spans\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				compactHeightfield = new CompactHeightfield(heightfield' settings);    				Console.WriteLine("CompactHeightfield");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;  				   				compactHeightfield.Erode(settings.VoxelAgentRadius);    				Console.WriteLine(" + Erosion\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				compactHeightfield.BuildDistanceField();    				Console.WriteLine(" + Distance Field\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				compactHeightfield.BuildRegions(0' settings.MinRegionSize' settings.MergedRegionSize);    				Console.WriteLine(" + Regions\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				Random r = new Random();  				regionColors = new Color4[compactHeightfield.MaxRegions];  				regionColors[0] = Color4.Black;  				for (int i = 1; i < regionColors.Length; i++)  					regionColors[i] = new Color4((byte)r.Next(0' 255)' (byte)r.Next(0' 255)' (byte)r.Next(0' 255)' 255);    				Console.WriteLine(" + Colors\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				contourSet = compactHeightfield.BuildContourSet(settings);    				Console.WriteLine("ContourSet");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				polyMesh = new PolyMesh(contourSet' settings);    				Console.WriteLine("PolyMesh");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				polyMeshDetail = new PolyMeshDetail(polyMesh' compactHeightfield' settings);    				Console.WriteLine("PolyMeshDetail");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				hasGenerated = true;      			}  			catch (Exception e)  			{  				if (!interceptExceptions)  					throw;  				else  					Console.WriteLine("Navmesh generation failed with exception:" + Environment.NewLine + e.ToString());  			}  			finally  			{  				sw.Stop();  			}
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GenerateNavMesh,The following statement contains a magic number: try  			{  				//level.SetBoundingBoxOffset(new SVector3(settings.CellSize * 0.5f' settings.CellHeight * 0.5f' settings.CellSize * 0.5f));  				var levelTris = level.GetTriangles();  				var triEnumerable = TriangleEnumerable.FromTriangle(levelTris' 0' levelTris.Length);  				BBox3 bounds = triEnumerable.GetBoundingBox();    				heightfield = new Heightfield(bounds' settings);    				Console.WriteLine("Heightfield");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				/*Area[] areas = AreaGenerator.From(triEnumerable' Area.Default)  					.MarkAboveHeight(areaSettings.MaxLevelHeight' Area.Null)  					.MarkBelowHeight(areaSettings.MinLevelHeight' Area.Null)  					.MarkBelowSlope(areaSettings.MaxTriSlope' Area.Null)  					.ToArray();  				heightfield.RasterizeTrianglesWithAreas(levelTris' areas);*/  				heightfield.RasterizeTriangles(levelTris' Area.Default);    				Console.WriteLine(" + Rasterization\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				Console.WriteLine(" + Filtering");  				prevMs = sw.ElapsedMilliseconds;    				heightfield.FilterLedgeSpans(settings.VoxelAgentHeight' settings.VoxelMaxClimb);    				Console.WriteLine("   + Ledge Spans\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				heightfield.FilterLowHangingWalkableObstacles(settings.VoxelMaxClimb);    				Console.WriteLine("   + Low Hanging Obstacles\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				heightfield.FilterWalkableLowHeightSpans(settings.VoxelAgentHeight);    				Console.WriteLine("   + Low Height Spans\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				compactHeightfield = new CompactHeightfield(heightfield' settings);    				Console.WriteLine("CompactHeightfield");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;  				   				compactHeightfield.Erode(settings.VoxelAgentRadius);    				Console.WriteLine(" + Erosion\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				compactHeightfield.BuildDistanceField();    				Console.WriteLine(" + Distance Field\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				compactHeightfield.BuildRegions(0' settings.MinRegionSize' settings.MergedRegionSize);    				Console.WriteLine(" + Regions\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				Random r = new Random();  				regionColors = new Color4[compactHeightfield.MaxRegions];  				regionColors[0] = Color4.Black;  				for (int i = 1; i < regionColors.Length; i++)  					regionColors[i] = new Color4((byte)r.Next(0' 255)' (byte)r.Next(0' 255)' (byte)r.Next(0' 255)' 255);    				Console.WriteLine(" + Colors\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				contourSet = compactHeightfield.BuildContourSet(settings);    				Console.WriteLine("ContourSet");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				polyMesh = new PolyMesh(contourSet' settings);    				Console.WriteLine("PolyMesh");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				polyMeshDetail = new PolyMeshDetail(polyMesh' compactHeightfield' settings);    				Console.WriteLine("PolyMeshDetail");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				hasGenerated = true;      			}  			catch (Exception e)  			{  				if (!interceptExceptions)  					throw;  				else  					Console.WriteLine("Navmesh generation failed with exception:" + Environment.NewLine + e.ToString());  			}  			finally  			{  				sw.Stop();  			}
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GenerateNavMesh,The following statement contains a magic number: try  			{  				//level.SetBoundingBoxOffset(new SVector3(settings.CellSize * 0.5f' settings.CellHeight * 0.5f' settings.CellSize * 0.5f));  				var levelTris = level.GetTriangles();  				var triEnumerable = TriangleEnumerable.FromTriangle(levelTris' 0' levelTris.Length);  				BBox3 bounds = triEnumerable.GetBoundingBox();    				heightfield = new Heightfield(bounds' settings);    				Console.WriteLine("Heightfield");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				/*Area[] areas = AreaGenerator.From(triEnumerable' Area.Default)  					.MarkAboveHeight(areaSettings.MaxLevelHeight' Area.Null)  					.MarkBelowHeight(areaSettings.MinLevelHeight' Area.Null)  					.MarkBelowSlope(areaSettings.MaxTriSlope' Area.Null)  					.ToArray();  				heightfield.RasterizeTrianglesWithAreas(levelTris' areas);*/  				heightfield.RasterizeTriangles(levelTris' Area.Default);    				Console.WriteLine(" + Rasterization\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				Console.WriteLine(" + Filtering");  				prevMs = sw.ElapsedMilliseconds;    				heightfield.FilterLedgeSpans(settings.VoxelAgentHeight' settings.VoxelMaxClimb);    				Console.WriteLine("   + Ledge Spans\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				heightfield.FilterLowHangingWalkableObstacles(settings.VoxelMaxClimb);    				Console.WriteLine("   + Low Hanging Obstacles\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				heightfield.FilterWalkableLowHeightSpans(settings.VoxelAgentHeight);    				Console.WriteLine("   + Low Height Spans\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				compactHeightfield = new CompactHeightfield(heightfield' settings);    				Console.WriteLine("CompactHeightfield");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;  				   				compactHeightfield.Erode(settings.VoxelAgentRadius);    				Console.WriteLine(" + Erosion\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				compactHeightfield.BuildDistanceField();    				Console.WriteLine(" + Distance Field\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				compactHeightfield.BuildRegions(0' settings.MinRegionSize' settings.MergedRegionSize);    				Console.WriteLine(" + Regions\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				Random r = new Random();  				regionColors = new Color4[compactHeightfield.MaxRegions];  				regionColors[0] = Color4.Black;  				for (int i = 1; i < regionColors.Length; i++)  					regionColors[i] = new Color4((byte)r.Next(0' 255)' (byte)r.Next(0' 255)' (byte)r.Next(0' 255)' 255);    				Console.WriteLine(" + Colors\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				contourSet = compactHeightfield.BuildContourSet(settings);    				Console.WriteLine("ContourSet");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				polyMesh = new PolyMesh(contourSet' settings);    				Console.WriteLine("PolyMesh");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				polyMeshDetail = new PolyMeshDetail(polyMesh' compactHeightfield' settings);    				Console.WriteLine("PolyMeshDetail");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				hasGenerated = true;      			}  			catch (Exception e)  			{  				if (!interceptExceptions)  					throw;  				else  					Console.WriteLine("Navmesh generation failed with exception:" + Environment.NewLine + e.ToString());  			}  			finally  			{  				sw.Stop();  			}
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GenerateNavMesh,The following statement contains a magic number: try  			{  				//level.SetBoundingBoxOffset(new SVector3(settings.CellSize * 0.5f' settings.CellHeight * 0.5f' settings.CellSize * 0.5f));  				var levelTris = level.GetTriangles();  				var triEnumerable = TriangleEnumerable.FromTriangle(levelTris' 0' levelTris.Length);  				BBox3 bounds = triEnumerable.GetBoundingBox();    				heightfield = new Heightfield(bounds' settings);    				Console.WriteLine("Heightfield");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				/*Area[] areas = AreaGenerator.From(triEnumerable' Area.Default)  					.MarkAboveHeight(areaSettings.MaxLevelHeight' Area.Null)  					.MarkBelowHeight(areaSettings.MinLevelHeight' Area.Null)  					.MarkBelowSlope(areaSettings.MaxTriSlope' Area.Null)  					.ToArray();  				heightfield.RasterizeTrianglesWithAreas(levelTris' areas);*/  				heightfield.RasterizeTriangles(levelTris' Area.Default);    				Console.WriteLine(" + Rasterization\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				Console.WriteLine(" + Filtering");  				prevMs = sw.ElapsedMilliseconds;    				heightfield.FilterLedgeSpans(settings.VoxelAgentHeight' settings.VoxelMaxClimb);    				Console.WriteLine("   + Ledge Spans\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				heightfield.FilterLowHangingWalkableObstacles(settings.VoxelMaxClimb);    				Console.WriteLine("   + Low Hanging Obstacles\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				heightfield.FilterWalkableLowHeightSpans(settings.VoxelAgentHeight);    				Console.WriteLine("   + Low Height Spans\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				compactHeightfield = new CompactHeightfield(heightfield' settings);    				Console.WriteLine("CompactHeightfield");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;  				   				compactHeightfield.Erode(settings.VoxelAgentRadius);    				Console.WriteLine(" + Erosion\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				compactHeightfield.BuildDistanceField();    				Console.WriteLine(" + Distance Field\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				compactHeightfield.BuildRegions(0' settings.MinRegionSize' settings.MergedRegionSize);    				Console.WriteLine(" + Regions\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				Random r = new Random();  				regionColors = new Color4[compactHeightfield.MaxRegions];  				regionColors[0] = Color4.Black;  				for (int i = 1; i < regionColors.Length; i++)  					regionColors[i] = new Color4((byte)r.Next(0' 255)' (byte)r.Next(0' 255)' (byte)r.Next(0' 255)' 255);    				Console.WriteLine(" + Colors\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				contourSet = compactHeightfield.BuildContourSet(settings);    				Console.WriteLine("ContourSet");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				polyMesh = new PolyMesh(contourSet' settings);    				Console.WriteLine("PolyMesh");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				polyMeshDetail = new PolyMeshDetail(polyMesh' compactHeightfield' settings);    				Console.WriteLine("PolyMeshDetail");  				Console.WriteLine(" + Ctor\t\t\t\t" + (sw.ElapsedMilliseconds - prevMs).ToString("D3") + " ms");  				prevMs = sw.ElapsedMilliseconds;    				hasGenerated = true;      			}  			catch (Exception e)  			{  				if (!interceptExceptions)  					throw;  				else  					Console.WriteLine("Navmesh generation failed with exception:" + Environment.NewLine + e.ToString());  			}  			finally  			{  				sw.Stop();  			}
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GeneratePathfinding,The following statement contains a magic number: navMeshQuery = new NavMeshQuery(tiledNavMesh' 2048);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GeneratePathfinding,The following statement contains a magic number: SVector3 c = new SVector3(10' 0' 0);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GeneratePathfinding,The following statement contains a magic number: SVector3 e = new SVector3(5' 5' 5);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GeneratePathfinding,The following statement contains a magic number: SVector3 e = new SVector3(5' 5' 5);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GeneratePathfinding,The following statement contains a magic number: SVector3 e = new SVector3(5' 5' 5);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GeneratePathfinding,The following statement contains a magic number: navMeshQuery.FindRandomPointAroundCircle(ref startPt' 1000' out endPt);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GeneratePathfinding,The following statement contains a magic number: int MAX_POLYS = 256;
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GeneratePathfinding,The following statement contains a magic number: smoothPath = new List<SVector3>(2048);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GeneratePathfinding,The following statement contains a magic number: while (npolys > 0 && smoothPath.Count < smoothPath.Capacity)  			{  				//find location to steer towards  				SVector3 steerPos = new SVector3();  				StraightPathFlags steerPosFlag = 0;  				NavPolyId steerPosRef = NavPolyId.Null;    				if (!GetSteerTarget(navMeshQuery' iterPos' targetPos' SLOP' path' ref steerPos' ref steerPosFlag' ref steerPosRef))  					break;    				bool endOfPath = (steerPosFlag & StraightPathFlags.End) != 0 ? true : false;  				bool offMeshConnection = (steerPosFlag & StraightPathFlags.OffMeshConnection) != 0 ? true : false;    				//find movement delta  				SVector3 delta = steerPos - iterPos;  				float len = (float)Math.Sqrt(SVector3.Dot(delta' delta));    				//if steer target is at end of path or off-mesh link  				//don't move past location  				if ((endOfPath || offMeshConnection) && len < STEP_SIZE)  					len = 1;  				else  					len = STEP_SIZE / len;    				SVector3 moveTgt = new SVector3();  				VMad(ref moveTgt' iterPos' delta' len);    				//move  				SVector3 result = new SVector3();  				List<NavPolyId> visited = new List<NavPolyId>(16);  				NavPoint startPoint = new NavPoint(path[0]' iterPos);  				navMeshQuery.MoveAlongSurface(ref startPoint' ref moveTgt' out result' visited);  				path.FixupCorridor(visited);  				npolys = path.Count;  				float h = 0;  				navMeshQuery.GetPolyHeight(path[0]' result' ref h);  				result.Y = h;  				iterPos = result;    				//handle end of path when close enough  				if (endOfPath && InRange(iterPos' steerPos' SLOP' 1.0f))  				{  					//reached end of path  					iterPos = targetPos;  					if (smoothPath.Count < smoothPath.Capacity)  					{  						smoothPath.Add(iterPos);  					}  					break;  				}    				//store results  				if (smoothPath.Count < smoothPath.Capacity)  				{  					smoothPath.Add(iterPos);  				}  			}
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GenerateCrowd,The following statement contains a magic number: SVector3 c = new SVector3(10' 0' 0);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GenerateCrowd,The following statement contains a magic number: SVector3 e = new SVector3(5' 5' 5);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GenerateCrowd,The following statement contains a magic number: SVector3 e = new SVector3(5' 5' 5);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GenerateCrowd,The following statement contains a magic number: SVector3 e = new SVector3(5' 5' 5);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GenerateCrowd,The following statement contains a magic number: for (int i = 0; i < numActiveAgents; i++)  			{  				//Get the polygon that the starting point is in  				NavPoint startPt;  				navMeshQuery.FindNearestPoly(ref c' ref e' out startPt);    				//Pick a new random point that is within a certain radius of the current point  				NavPoint newPt;  				navMeshQuery.FindRandomPointAroundCircle(ref startPt' 1000' out newPt);    				c = newPt.Position;    				//Save this random point as the starting position  				trails[i].Trail = new SVector3[AGENT_MAX_TRAIL];  				trails[i].Trail[0] = newPt.Position;  				trails[i].HTrail = 0;    				//add this agent to the crowd  				int idx = crowd.AddAgent(newPt.Position' ap);    				//Give this agent a target point  				NavPoint targetPt;  				navMeshQuery.FindRandomPointAroundCircle(ref newPt' 1000' out targetPt);    				crowd.GetAgent(idx).RequestMoveTarget(targetPt.Polygon' targetPt.Position);  				trails[i].Trail[AGENT_MAX_TRAIL - 1] = targetPt.Position;  			}
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,GenerateCrowd,The following statement contains a magic number: for (int i = 0; i < numActiveAgents; i++)  			{  				//Get the polygon that the starting point is in  				NavPoint startPt;  				navMeshQuery.FindNearestPoly(ref c' ref e' out startPt);    				//Pick a new random point that is within a certain radius of the current point  				NavPoint newPt;  				navMeshQuery.FindRandomPointAroundCircle(ref startPt' 1000' out newPt);    				c = newPt.Position;    				//Save this random point as the starting position  				trails[i].Trail = new SVector3[AGENT_MAX_TRAIL];  				trails[i].Trail[0] = newPt.Position;  				trails[i].HTrail = 0;    				//add this agent to the crowd  				int idx = crowd.AddAgent(newPt.Position' ap);    				//Give this agent a target point  				NavPoint targetPt;  				navMeshQuery.FindRandomPointAroundCircle(ref newPt' 1000' out targetPt);    				crowd.GetAgent(idx).RequestMoveTarget(targetPt.Polygon' targetPt.Position);  				trails[i].Trail[AGENT_MAX_TRAIL - 1] = targetPt.Position;  			}
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeOpenGL,The following statement contains a magic number: agentCylinder = new AgentCylinder(12' 0.5f' 2f);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,LoadLevel,The following statement contains a magic number: levelNumInds = levelTris.Length * 3;
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,LoadLevel,The following statement contains a magic number: cam.RotateHeadingTo(-25);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,LoadLevel,The following statement contains a magic number: cam.RotatePitchTo(315);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,LoadLevel,The following statement contains a magic number: GL.BufferData(BufferTarget.ArrayBuffer' (IntPtr)(levelNumInds * 3 * 4)' levelTris' BufferUsageHint.StaticDraw);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,LoadLevel,The following statement contains a magic number: GL.BufferData(BufferTarget.ArrayBuffer' (IntPtr)(levelNumInds * 3 * 4)' levelTris' BufferUsageHint.StaticDraw);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,LoadLevel,The following statement contains a magic number: if (levelHasNorm)  			{  				levelNormVbo = GL.GenBuffer();  				GL.BindBuffer(BufferTarget.ArrayBuffer' levelNormVbo);  				GL.BufferData(BufferTarget.ArrayBuffer' (IntPtr)(levelNorms.Length * 3 * 4)' levelNorms' BufferUsageHint.StaticDraw);  				GL.BindBuffer(BufferTarget.ArrayBuffer' 0);  			}
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,LoadLevel,The following statement contains a magic number: if (levelHasNorm)  			{  				levelNormVbo = GL.GenBuffer();  				GL.BindBuffer(BufferTarget.ArrayBuffer' levelNormVbo);  				GL.BufferData(BufferTarget.ArrayBuffer' (IntPtr)(levelNorms.Length * 3 * 4)' levelNorms' BufferUsageHint.StaticDraw);  				GL.BindBuffer(BufferTarget.ArrayBuffer' 0);  			}
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,LoadDebugMeshes,The following statement contains a magic number: GL.BufferData(BufferTarget.ArrayBuffer' (IntPtr)(voxelVerts.Length * 4)' voxelVerts' BufferUsageHint.StaticDraw);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,LoadDebugMeshes,The following statement contains a magic number: GL.BufferData(BufferTarget.ArrayBuffer' (IntPtr)(squareVerts.Length * 4)' squareVerts' BufferUsageHint.StaticDraw);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawLevel,The following statement contains a magic number: GL.VertexPointer(3' VertexPointerType.Float' 0' 0);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawHeightfield,The following statement contains a magic number: GL.VertexPointer(3' VertexPointerType.Float' 6 * 4' 0);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawHeightfield,The following statement contains a magic number: GL.VertexPointer(3' VertexPointerType.Float' 6 * 4' 0);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawHeightfield,The following statement contains a magic number: GL.VertexPointer(3' VertexPointerType.Float' 6 * 4' 0);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawHeightfield,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawHeightfield,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawHeightfield,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawHeightfield,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawCompactHeightfield,The following statement contains a magic number: GL.VertexPointer(3' VertexPointerType.Float' 6 * 4' 0);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawCompactHeightfield,The following statement contains a magic number: GL.VertexPointer(3' VertexPointerType.Float' 6 * 4' 0);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawCompactHeightfield,The following statement contains a magic number: GL.VertexPointer(3' VertexPointerType.Float' 6 * 4' 0);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawCompactHeightfield,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawCompactHeightfield,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawCompactHeightfield,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawCompactHeightfield,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawDistanceField,The following statement contains a magic number: GL.VertexPointer(3' VertexPointerType.Float' 6 * 4' 0);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawDistanceField,The following statement contains a magic number: GL.VertexPointer(3' VertexPointerType.Float' 6 * 4' 0);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawDistanceField,The following statement contains a magic number: GL.VertexPointer(3' VertexPointerType.Float' 6 * 4' 0);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawDistanceField,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawDistanceField,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawDistanceField,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawDistanceField,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawRegions,The following statement contains a magic number: GL.VertexPointer(3' VertexPointerType.Float' 6 * 4' 0);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawRegions,The following statement contains a magic number: GL.VertexPointer(3' VertexPointerType.Float' 6 * 4' 0);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawRegions,The following statement contains a magic number: GL.VertexPointer(3' VertexPointerType.Float' 6 * 4' 0);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawRegions,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawRegions,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawRegions,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawRegions,The following statement contains a magic number: GL.NormalPointer(NormalPointerType.Float' 6 * 4' 3 * 4);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawPolyMesh,The following statement contains a magic number: for (int i = 0; i < polyMesh.PolyCount; i++)  			{  				if (!polyMesh.Polys[i].Area.IsWalkable)  					continue;    				for (int j = 2; j < polyMesh.NumVertsPerPoly; j++)  				{  					if (polyMesh.Polys[i].Vertices[j] == PolyMesh.NullId)  						break;    					int vertIndex0 = polyMesh.Polys[i].Vertices[0];  					int vertIndex1 = polyMesh.Polys[i].Vertices[j - 1];  					int vertIndex2 = polyMesh.Polys[i].Vertices[j];  					  					var v = polyMesh.Verts[vertIndex0];  					GL.Vertex3(v.X' v.Y' v.Z);    					v = polyMesh.Verts[vertIndex1];  					GL.Vertex3(v.X' v.Y' v.Z);    					v = polyMesh.Verts[vertIndex2];  					GL.Vertex3(v.X' v.Y' v.Z);  				}  			}
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawPolyMeshDetail,The following statement contains a magic number: for (int i = 0; i < polyMeshDetail.MeshCount; i++)  			{  				var m = polyMeshDetail.Meshes[i];    				int vertIndex = m.VertexIndex;  				int triIndex = m.TriangleIndex;    				for (int j = 0; j < m.TriangleCount; j++)  				{  					var t = polyMeshDetail.Tris[triIndex + j];  					for (int k = 0' kp = 2; k < 3; kp = k++)  					{  						if (((t.Flags >> (kp * 2)) & 0x3) == 0)  						{  							if (t[kp] < t[k])  							{  								var v = polyMeshDetail.Verts[vertIndex + t[kp]];  								GL.Vertex3(v.X' v.Y' v.Z);    								v = polyMeshDetail.Verts[vertIndex + t[k]];  								GL.Vertex3(v.X' v.Y' v.Z);  							}  						}  					}  				}  			}
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawPolyMeshDetail,The following statement contains a magic number: for (int i = 0; i < polyMeshDetail.MeshCount; i++)  			{  				var m = polyMeshDetail.Meshes[i];    				int vertIndex = m.VertexIndex;  				int triIndex = m.TriangleIndex;    				for (int j = 0; j < m.TriangleCount; j++)  				{  					var t = polyMeshDetail.Tris[triIndex + j];  					for (int k = 0' kp = 2; k < 3; kp = k++)  					{  						if (((t.Flags >> (kp * 2)) & 0x3) == 0)  						{  							if (t[kp] < t[k])  							{  								var v = polyMeshDetail.Verts[vertIndex + t[kp]];  								GL.Vertex3(v.X' v.Y' v.Z);    								v = polyMeshDetail.Verts[vertIndex + t[k]];  								GL.Vertex3(v.X' v.Y' v.Z);  							}  						}  					}  				}  			}
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawPolyMeshDetail,The following statement contains a magic number: for (int i = 0; i < polyMeshDetail.MeshCount; i++)  			{  				var m = polyMeshDetail.Meshes[i];    				int vertIndex = m.VertexIndex;  				int triIndex = m.TriangleIndex;    				for (int j = 0; j < m.TriangleCount; j++)  				{  					var t = polyMeshDetail.Tris[triIndex + j];  					for (int k = 0' kp = 2; k < 3; kp = k++)  					{  						if (((t.Flags >> (kp * 2)) & 0x3) == 0)  						{  							if (t[kp] < t[k])  							{  								var v = polyMeshDetail.Verts[vertIndex + t[kp]];  								GL.Vertex3(v.X' v.Y' v.Z);    								v = polyMeshDetail.Verts[vertIndex + t[k]];  								GL.Vertex3(v.X' v.Y' v.Z);  							}  						}  					}  				}  			}
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawPolyMeshDetail,The following statement contains a magic number: for (int i = 0; i < polyMeshDetail.MeshCount; i++)  			{  				var m = polyMeshDetail.Meshes[i];    				int vertIndex = m.VertexIndex;  				int triIndex = m.TriangleIndex;    				for (int j = 0; j < m.TriangleCount; j++)  				{  					var t = polyMeshDetail.Tris[triIndex + j];  					for (int k = 0' kp = 2; k < 3; kp = k++)  					{  						if (((t.Flags >> (kp * 2)) & 0x3) != 0)  						{  							var v = polyMeshDetail.Verts[vertIndex + t[kp]];  							GL.Vertex3(v.X' v.Y' v.Z);    							v = polyMeshDetail.Verts[vertIndex + t[k]];  							GL.Vertex3(v.X' v.Y' v.Z);  						}  					}  				}  			}
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawPolyMeshDetail,The following statement contains a magic number: for (int i = 0; i < polyMeshDetail.MeshCount; i++)  			{  				var m = polyMeshDetail.Meshes[i];    				int vertIndex = m.VertexIndex;  				int triIndex = m.TriangleIndex;    				for (int j = 0; j < m.TriangleCount; j++)  				{  					var t = polyMeshDetail.Tris[triIndex + j];  					for (int k = 0' kp = 2; k < 3; kp = k++)  					{  						if (((t.Flags >> (kp * 2)) & 0x3) != 0)  						{  							var v = polyMeshDetail.Verts[vertIndex + t[kp]];  							GL.Vertex3(v.X' v.Y' v.Z);    							v = polyMeshDetail.Verts[vertIndex + t[k]];  							GL.Vertex3(v.X' v.Y' v.Z);  						}  					}  				}  			}
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawPolyMeshDetail,The following statement contains a magic number: for (int i = 0; i < polyMeshDetail.MeshCount; i++)  			{  				var m = polyMeshDetail.Meshes[i];    				int vertIndex = m.VertexIndex;  				int triIndex = m.TriangleIndex;    				for (int j = 0; j < m.TriangleCount; j++)  				{  					var t = polyMeshDetail.Tris[triIndex + j];  					for (int k = 0' kp = 2; k < 3; kp = k++)  					{  						if (((t.Flags >> (kp * 2)) & 0x3) != 0)  						{  							var v = polyMeshDetail.Verts[vertIndex + t[kp]];  							GL.Vertex3(v.X' v.Y' v.Z);    							v = polyMeshDetail.Verts[vertIndex + t[k]];  							GL.Vertex3(v.X' v.Y' v.Z);  						}  					}  				}  			}
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawNavMesh,The following statement contains a magic number: for (int i = 0; i < tile.Polys.Length; i++)  			{  				//if (!tile.Polys[i].Area.IsWalkable)  					//continue;    				for (int j = 2; j < PathfindingCommon.VERTS_PER_POLYGON; j++)  				{  					if (tile.Polys[i].Verts[j] == 0)  						break;    					int vertIndex0 = tile.Polys[i].Verts[0];  					int vertIndex1 = tile.Polys[i].Verts[j - 1];  					int vertIndex2 = tile.Polys[i].Verts[j];    					var v = tile.Verts[vertIndex0];  					GL.Vertex3(v.X' v.Y' v.Z);    					v = tile.Verts[vertIndex1];  					GL.Vertex3(v.X' v.Y' v.Z);    					v = tile.Verts[vertIndex2];  					GL.Vertex3(v.X' v.Y' v.Z);  				}  			}
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawPathfinding,The following statement contains a magic number: for (int i = 0; i < path.Count; i++)  			{  				if (i == 0)  					color = Color4.Cyan;  				else if (i == path.Count - 1)  					color = Color4.PaleVioletRed;  				else  					color = Color4.LightYellow;  				GL.Color4(color);    				NavPolyId polyRef = path[i];  				NavTile tile;  				NavPoly poly;  				tiledNavMesh.TryGetTileAndPolyByRefUnsafe(polyRef' out tile' out poly);    				for (int j = 2; j < poly.VertCount; j++)  				{  					int vertIndex0 = poly.Verts[0];  					int vertIndex1 = poly.Verts[j - 1];  					int vertIndex2 = poly.Verts[j];    					var v = tile.Verts[vertIndex0];  					GL.Vertex3(v.X' v.Y' v.Z);    					v = tile.Verts[vertIndex1];  					GL.Vertex3(v.X' v.Y' v.Z);    					v = tile.Verts[vertIndex2];  					GL.Vertex3(v.X' v.Y' v.Z);  				}  			}
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,DrawCrowd,The following statement contains a magic number: GL.PointSize(10);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The following statement contains a magic number: dock.RightDock.Width = 280;
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The following statement contains a magic number: dock.BottomDock.Height = 150;
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The following statement contains a magic number: generateButton.Height = 30;
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The following statement contains a magic number: displaySettings.Height = 60;
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The following statement contains a magic number: displayModeBase.Padding = new Padding(0' 4' 0' 0);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The following statement contains a magic number: displayModeLabel.Padding = new Padding(0' 0' 4' 0);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The following statement contains a magic number: displayModeBase.Height += 4;
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The following statement contains a magic number: const int leftMax = 125;
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The following statement contains a magic number: const int rightMax = 20;
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The following statement contains a magic number: areaSetting.Height = 90;
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The following statement contains a magic number: rsSettings.Height = 90;
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The following statement contains a magic number: agentSettings.Height = 115;
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The following statement contains a magic number: regionSettings.Height = 65;
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The following statement contains a magic number: navMeshSettings.Height = 90;
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,InitializeUI,The following statement contains a magic number: navMeshDetailSettings.Height = 65;
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,CreateAddRemoveButton,The following statement contains a magic number: b.Padding = new Padding(0' 0' 0' 4);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,CreateAddRemoveButton,The following statement contains a magic number: addButton.Height = 20;
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,CreateAddRemoveButton,The following statement contains a magic number: addButton.Width = 20;
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,CreateAddRemoveButton,The following statement contains a magic number: removeButton.Height = 20;
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,CreateAddRemoveButton,The following statement contains a magic number: removeButton.Width = 20;
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,CreateSliderOption,The following statement contains a magic number: b.Padding = new Padding(0' 0' 0' 4);
Magic Number,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,CreateSliderOption,The following statement contains a magic number: slider.Height = 20;
Magic Number,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following statement contains a magic number: using (StreamReader reader = new StreamReader(path))  			{  				string file = reader.ReadToEnd();  				foreach (string l in file.Split('\n'))  				{  					//trim any extras  					string tl = l;  					int commentStart = l.IndexOf("#");  					if (commentStart != -1)  						tl = tl.Substring(0' commentStart);  					tl = tl.Trim();    					string[] line = tl.Split(lineSplitChars' StringSplitOptions.RemoveEmptyEntries);  					if (line == null || line.Length == 0)  						continue;    					switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}  				}  			}
Magic Number,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following statement contains a magic number: using (StreamReader reader = new StreamReader(path))  			{  				string file = reader.ReadToEnd();  				foreach (string l in file.Split('\n'))  				{  					//trim any extras  					string tl = l;  					int commentStart = l.IndexOf("#");  					if (commentStart != -1)  						tl = tl.Substring(0' commentStart);  					tl = tl.Trim();    					string[] line = tl.Split(lineSplitChars' StringSplitOptions.RemoveEmptyEntries);  					if (line == null || line.Length == 0)  						continue;    					switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}  				}  			}
Magic Number,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following statement contains a magic number: using (StreamReader reader = new StreamReader(path))  			{  				string file = reader.ReadToEnd();  				foreach (string l in file.Split('\n'))  				{  					//trim any extras  					string tl = l;  					int commentStart = l.IndexOf("#");  					if (commentStart != -1)  						tl = tl.Substring(0' commentStart);  					tl = tl.Trim();    					string[] line = tl.Split(lineSplitChars' StringSplitOptions.RemoveEmptyEntries);  					if (line == null || line.Length == 0)  						continue;    					switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}  				}  			}
Magic Number,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following statement contains a magic number: using (StreamReader reader = new StreamReader(path))  			{  				string file = reader.ReadToEnd();  				foreach (string l in file.Split('\n'))  				{  					//trim any extras  					string tl = l;  					int commentStart = l.IndexOf("#");  					if (commentStart != -1)  						tl = tl.Substring(0' commentStart);  					tl = tl.Trim();    					string[] line = tl.Split(lineSplitChars' StringSplitOptions.RemoveEmptyEntries);  					if (line == null || line.Length == 0)  						continue;    					switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}  				}  			}
Magic Number,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following statement contains a magic number: using (StreamReader reader = new StreamReader(path))  			{  				string file = reader.ReadToEnd();  				foreach (string l in file.Split('\n'))  				{  					//trim any extras  					string tl = l;  					int commentStart = l.IndexOf("#");  					if (commentStart != -1)  						tl = tl.Substring(0' commentStart);  					tl = tl.Trim();    					string[] line = tl.Split(lineSplitChars' StringSplitOptions.RemoveEmptyEntries);  					if (line == null || line.Length == 0)  						continue;    					switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}  				}  			}
Magic Number,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following statement contains a magic number: using (StreamReader reader = new StreamReader(path))  			{  				string file = reader.ReadToEnd();  				foreach (string l in file.Split('\n'))  				{  					//trim any extras  					string tl = l;  					int commentStart = l.IndexOf("#");  					if (commentStart != -1)  						tl = tl.Substring(0' commentStart);  					tl = tl.Trim();    					string[] line = tl.Split(lineSplitChars' StringSplitOptions.RemoveEmptyEntries);  					if (line == null || line.Length == 0)  						continue;    					switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}  				}  			}
Magic Number,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following statement contains a magic number: using (StreamReader reader = new StreamReader(path))  			{  				string file = reader.ReadToEnd();  				foreach (string l in file.Split('\n'))  				{  					//trim any extras  					string tl = l;  					int commentStart = l.IndexOf("#");  					if (commentStart != -1)  						tl = tl.Substring(0' commentStart);  					tl = tl.Trim();    					string[] line = tl.Split(lineSplitChars' StringSplitOptions.RemoveEmptyEntries);  					if (line == null || line.Length == 0)  						continue;    					switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}  				}  			}
Magic Number,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following statement contains a magic number: using (StreamReader reader = new StreamReader(path))  			{  				string file = reader.ReadToEnd();  				foreach (string l in file.Split('\n'))  				{  					//trim any extras  					string tl = l;  					int commentStart = l.IndexOf("#");  					if (commentStart != -1)  						tl = tl.Substring(0' commentStart);  					tl = tl.Trim();    					string[] line = tl.Split(lineSplitChars' StringSplitOptions.RemoveEmptyEntries);  					if (line == null || line.Length == 0)  						continue;    					switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}  				}  			}
Magic Number,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following statement contains a magic number: using (StreamReader reader = new StreamReader(path))  			{  				string file = reader.ReadToEnd();  				foreach (string l in file.Split('\n'))  				{  					//trim any extras  					string tl = l;  					int commentStart = l.IndexOf("#");  					if (commentStart != -1)  						tl = tl.Substring(0' commentStart);  					tl = tl.Trim();    					string[] line = tl.Split(lineSplitChars' StringSplitOptions.RemoveEmptyEntries);  					if (line == null || line.Length == 0)  						continue;    					switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}  				}  			}
Magic Number,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following statement contains a magic number: using (StreamReader reader = new StreamReader(path))  			{  				string file = reader.ReadToEnd();  				foreach (string l in file.Split('\n'))  				{  					//trim any extras  					string tl = l;  					int commentStart = l.IndexOf("#");  					if (commentStart != -1)  						tl = tl.Substring(0' commentStart);  					tl = tl.Trim();    					string[] line = tl.Split(lineSplitChars' StringSplitOptions.RemoveEmptyEntries);  					if (line == null || line.Length == 0)  						continue;    					switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}  				}  			}
Magic Number,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following statement contains a magic number: using (StreamReader reader = new StreamReader(path))  			{  				string file = reader.ReadToEnd();  				foreach (string l in file.Split('\n'))  				{  					//trim any extras  					string tl = l;  					int commentStart = l.IndexOf("#");  					if (commentStart != -1)  						tl = tl.Substring(0' commentStart);  					tl = tl.Trim();    					string[] line = tl.Split(lineSplitChars' StringSplitOptions.RemoveEmptyEntries);  					if (line == null || line.Length == 0)  						continue;    					switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}  				}  			}
Magic Number,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following statement contains a magic number: using (StreamReader reader = new StreamReader(path))  			{  				string file = reader.ReadToEnd();  				foreach (string l in file.Split('\n'))  				{  					//trim any extras  					string tl = l;  					int commentStart = l.IndexOf("#");  					if (commentStart != -1)  						tl = tl.Substring(0' commentStart);  					tl = tl.Trim();    					string[] line = tl.Split(lineSplitChars' StringSplitOptions.RemoveEmptyEntries);  					if (line == null || line.Length == 0)  						continue;    					switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}  				}  			}
Magic Number,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following statement contains a magic number: using (StreamReader reader = new StreamReader(path))  			{  				string file = reader.ReadToEnd();  				foreach (string l in file.Split('\n'))  				{  					//trim any extras  					string tl = l;  					int commentStart = l.IndexOf("#");  					if (commentStart != -1)  						tl = tl.Substring(0' commentStart);  					tl = tl.Trim();    					string[] line = tl.Split(lineSplitChars' StringSplitOptions.RemoveEmptyEntries);  					if (line == null || line.Length == 0)  						continue;    					switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}  				}  			}
Magic Number,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following statement contains a magic number: using (StreamReader reader = new StreamReader(path))  			{  				string file = reader.ReadToEnd();  				foreach (string l in file.Split('\n'))  				{  					//trim any extras  					string tl = l;  					int commentStart = l.IndexOf("#");  					if (commentStart != -1)  						tl = tl.Substring(0' commentStart);  					tl = tl.Trim();    					string[] line = tl.Split(lineSplitChars' StringSplitOptions.RemoveEmptyEntries);  					if (line == null || line.Length == 0)  						continue;    					switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}  				}  			}
Magic Number,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following statement contains a magic number: using (StreamReader reader = new StreamReader(path))  			{  				string file = reader.ReadToEnd();  				foreach (string l in file.Split('\n'))  				{  					//trim any extras  					string tl = l;  					int commentStart = l.IndexOf("#");  					if (commentStart != -1)  						tl = tl.Substring(0' commentStart);  					tl = tl.Trim();    					string[] line = tl.Split(lineSplitChars' StringSplitOptions.RemoveEmptyEntries);  					if (line == null || line.Length == 0)  						continue;    					switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}  				}  			}
Magic Number,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following statement contains a magic number: using (StreamReader reader = new StreamReader(path))  			{  				string file = reader.ReadToEnd();  				foreach (string l in file.Split('\n'))  				{  					//trim any extras  					string tl = l;  					int commentStart = l.IndexOf("#");  					if (commentStart != -1)  						tl = tl.Substring(0' commentStart);  					tl = tl.Trim();    					string[] line = tl.Split(lineSplitChars' StringSplitOptions.RemoveEmptyEntries);  					if (line == null || line.Length == 0)  						continue;    					switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}  				}  			}
Magic Number,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following statement contains a magic number: using (StreamReader reader = new StreamReader(path))  			{  				string file = reader.ReadToEnd();  				foreach (string l in file.Split('\n'))  				{  					//trim any extras  					string tl = l;  					int commentStart = l.IndexOf("#");  					if (commentStart != -1)  						tl = tl.Substring(0' commentStart);  					tl = tl.Trim();    					string[] line = tl.Split(lineSplitChars' StringSplitOptions.RemoveEmptyEntries);  					if (line == null || line.Length == 0)  						continue;    					switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}  				}  			}
Magic Number,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following statement contains a magic number: using (StreamReader reader = new StreamReader(path))  			{  				string file = reader.ReadToEnd();  				foreach (string l in file.Split('\n'))  				{  					//trim any extras  					string tl = l;  					int commentStart = l.IndexOf("#");  					if (commentStart != -1)  						tl = tl.Substring(0' commentStart);  					tl = tl.Trim();    					string[] line = tl.Split(lineSplitChars' StringSplitOptions.RemoveEmptyEntries);  					if (line == null || line.Length == 0)  						continue;    					switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}  				}  			}
Magic Number,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following statement contains a magic number: using (StreamReader reader = new StreamReader(path))  			{  				string file = reader.ReadToEnd();  				foreach (string l in file.Split('\n'))  				{  					//trim any extras  					string tl = l;  					int commentStart = l.IndexOf("#");  					if (commentStart != -1)  						tl = tl.Substring(0' commentStart);  					tl = tl.Trim();    					string[] line = tl.Split(lineSplitChars' StringSplitOptions.RemoveEmptyEntries);  					if (line == null || line.Length == 0)  						continue;    					switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}  				}  			}
Missing Default,SharpNav.Examples,ExampleWindow,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ExampleWindow.cs,OnRenderFrame,The following switch statement is missing a default case: switch (displayMode)  			{  				case DisplayMode.Heightfield:   					DrawHeightfield();  					break;  				case DisplayMode.CompactHeightfield:  					DrawCompactHeightfield();  					break;  				case DisplayMode.DistanceField:  					DrawDistanceField();  					break;  				case DisplayMode.Regions:  					DrawRegions();  					break;  				case DisplayMode.Contours:  					DrawContours();  					break;  				case DisplayMode.PolyMesh:  					DrawPolyMesh();  					break;  				case DisplayMode.PolyMeshDetail:  					DrawPolyMeshDetail();  					break;  				case DisplayMode.NavMesh:  					DrawNavMesh();  					break;  				case DisplayMode.Pathfinding:  					DrawPathfinding();  					break;  			}
Missing Default,SharpNav.Examples,ObjModel,C:\repos\Robmaister_SharpNav\Source\SharpNav.Examples\ObjModel.cs,ObjModel,The following switch statement is missing a default case: switch (line[0])  					{  						case "v":  							if (line.Length < 4)  								continue;    							Vector3 v;  							if (!TryParseVec(line' 1' 2' 3' out v)) continue;  							tempVerts.Add(v);  							break;  						case "vn":  							if (line.Length < 4)  								continue;    							Vector3 n;  							if (!TryParseVec(line' 1' 2' 3' out n)) continue;  							tempNorms.Add(n);  							break;  						case "f":  							if (line.Length < 4)  								continue;  							else if (line.Length == 4)  							{  								int v0' v1' v2;  								int n0' n1' n2;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[2].Split('/')[0]' out v1)) continue;  								if (!int.TryParse(line[3].Split('/')[0]' out v2)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;  								if (!int.TryParse(line[2].Split('/')[2]' out n1)) continue;  								if (!int.TryParse(line[3].Split('/')[2]' out n2)) continue;    								v0 -= 1;  								v1 -= 1;  								v2 -= 1;  								n0 -= 1;  								n1 -= 1;  								n2 -= 1;    								tris.Add(new Triangle3(tempVerts[v0]' tempVerts[v1]' tempVerts[v2]));  								norms.Add(tempNorms[n0]);  								norms.Add(tempNorms[n1]);  								norms.Add(tempNorms[n2]);  							}  							else  							{  								int v0' n0;  								if (!int.TryParse(line[1].Split('/')[0]' out v0)) continue;  								if (!int.TryParse(line[1].Split('/')[2]' out n0)) continue;    								v0 -= 1;  								n0 -= 1;    								for (int i = 2; i < line.Length - 1; i++)  								{  									int vi' vii;  									int ni' nii;  									if (!int.TryParse(line[i].Split('/')[0]' out vi)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[0]' out vii)) continue;  									if (!int.TryParse(line[i].Split('/')[2]' out ni)) continue;  									if (!int.TryParse(line[i + 1].Split('/')[2]' out nii)) continue;    									vi -= 1;  									vii -= 1;  									ni -= 1;  									nii -= 1;    									tris.Add(new Triangle3(tempVerts[v0]' tempVerts[vi]' tempVerts[vii]));  									norms.Add(tempNorms[n0]);  									norms.Add(tempNorms[ni]);  									norms.Add(tempNorms[nii]);  								}  							}  							break;  					}
