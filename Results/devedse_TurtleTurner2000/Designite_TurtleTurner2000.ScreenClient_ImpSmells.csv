Implementation smell,Namespace,Class,File,Method,Description
Long Method,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,HandleDataMessage,The method has 104 lines of code.
Complex Method,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,UpdateNetwork,Cyclomatic complexity of the method is 10
Complex Method,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,HandleDataMessage,Cyclomatic complexity of the method is 41
Long Parameter List,TurtleTurner2000.ScreenClient,Brokemon,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Brokemon.cs,Brokemon,The method has 5 parameters.
Long Statement,TurtleTurner2000.ScreenClient,Brokemon,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Brokemon.cs,Draw,The length of the statement  "	Vector2 newPos = new Vector2 (this.Position.X - curSize.X - textures [evolutionLevel].Width / 2' this.Position.Y - curSize.Y - textures [evolutionLevel].Height / 2); " is 165.
Long Statement,TurtleTurner2000.ScreenClient,Brokemon,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Brokemon.cs,Draw,The length of the statement  "	//                        this.Rotation' new Vector2(textures[evolutionLevel].Width / 2' textures[evolutionLevel].Height / 2)' " is 126.
Long Statement,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,Update,The length of the statement  "	if (GamePad.GetState (PlayerIndex.One).Buttons.Back == ButtonState.Pressed || Keyboard.GetState ().IsKeyDown (Keys.Escape)) " is 123.
Long Statement,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,HandleDataMessage,The length of the statement  "			brokemons2.Add (idString' new Brokemon (new Vector2 ((float)xDir * 1f / 1000.0f' (float)yDir * 1f / 1000.0f)' new Vector2 (xPos' yPos)' brokemonTexture' spriteBatch' idString)); " is 177.
Long Statement,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,Draw,The length of the statement  "	spriteBatch.DrawString (font' Math.Round (1.0 / fpsMeterStopwatch.Elapsed.TotalSeconds' 2).ToString ()' new Vector2 (10' 10)' Color.White); " is 139.
Magic Number,TurtleTurner2000.ScreenClient,Brokemon,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Brokemon.cs,Update,The following statement contains a magic number: if (aliveTime > 1000 && aliveTime < 2000 && textures [1] != null) {  	evolutionLevel = 1;  }  
Magic Number,TurtleTurner2000.ScreenClient,Brokemon,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Brokemon.cs,Update,The following statement contains a magic number: if (aliveTime > 1000 && aliveTime < 2000 && textures [1] != null) {  	evolutionLevel = 1;  }  
Magic Number,TurtleTurner2000.ScreenClient,Brokemon,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Brokemon.cs,Update,The following statement contains a magic number: if (aliveTime > 2000 && textures [2] != null) {  	evolutionLevel = 2;  }  
Magic Number,TurtleTurner2000.ScreenClient,Brokemon,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Brokemon.cs,Update,The following statement contains a magic number: if (aliveTime > 2000 && textures [2] != null) {  	evolutionLevel = 2;  }  
Magic Number,TurtleTurner2000.ScreenClient,Brokemon,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Brokemon.cs,Update,The following statement contains a magic number: if (aliveTime > 2000 && textures [2] != null) {  	evolutionLevel = 2;  }  
Magic Number,TurtleTurner2000.ScreenClient,Brokemon,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Brokemon.cs,Update,The following statement contains a magic number: evolutionLevel = 2;  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,Game1,The following statement contains a magic number: graphics.PreferredBackBufferHeight = 1080;  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,Game1,The following statement contains a magic number: graphics.PreferredBackBufferWidth = 1920;  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,Game1,The following statement contains a magic number: deveClient = new DeveClient (ip' 1337);  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,Update,The following statement contains a magic number: if (Keyboard.GetState ().IsKeyDown (Keys.F12)) {  	this.graphics.IsFullScreen = !this.graphics.IsFullScreen;  	this.graphics.ApplyChanges ();  	Thread.Sleep (100);  }  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,Update,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,HandleDataMessage,The following statement contains a magic number: switch (messageType) {  case ServerSendMessageType.SetScreenSize:  	{  		curSize.X = inc.ReadInt32 ();  		curSize.Y = inc.ReadInt32 ();  		curSize.Width = inc.ReadInt32 ();  		curSize.Height = inc.ReadInt32 ();  		totSize.X = inc.ReadInt32 ();  		totSize.Y = inc.ReadInt32 ();  		totSize.Width = inc.ReadInt32 ();  		totSize.Height = inc.ReadInt32 ();  	}  	break;  case ServerSendMessageType.MapString:  	mapWidth = inc.ReadInt32 ();  	mapHeight = inc.ReadInt32 ();  	for (int y = 0; y < mapHeight; y++) {  		String line = inc.ReadString ();  		List<String> xlist = new List<string> ();  		map.Add (xlist);  		foreach (Char c in line) {  			xlist.Add (c.ToString ());  		}  	}  	break;  case ServerSendMessageType.SpawnNewPlayer:  	{  		String idString = inc.ReadString ();  		//ID van het brokemonnetje  		int xPos = inc.ReadInt32 ();  		int yPos = inc.ReadInt32 ();  		int xDir = inc.ReadInt32 ();  		int yDir = inc.ReadInt32 ();  		int brokeSpecies = inc.ReadInt32 ();  		//0 = squirtle' 1 = charmander' 2 = bulbasaur' 10 = missingno  		Texture2D[] brokemonTexture = new Texture2D[3];  		//int rInt = 0;  		//Random r = new Random();  		//rInt = r.Next(3);  		switch (brokeSpecies) {  		case 0:  			brokemonTexture [0] = squirtleTexture;  			brokemonTexture [1] = squirtleTexture;  			//replace plx  			brokemonTexture [2] = squirtleTexture;  			//replace plx  			break;  		case 1:  			brokemonTexture [0] = charmanderTexture;  			brokemonTexture [1] = charmanderTexture;  			//replace plx  			brokemonTexture [2] = charmanderTexture;  			//replace plx  			break;  		case 2:  			brokemonTexture [0] = bulbasaurTexture;  			brokemonTexture [1] = venubronkiTexture;  			brokemonTexture [2] = venubrateuzadroidTexture;  			break;  		default:  			Console.WriteLine ("Invalid selection. Please select 0' 1' or 2.");  			brokemonTexture [0] = myssignuvskitrabovTexture;  			brokemonTexture [1] = myssignuvskitrabovTexture;  			brokemonTexture [2] = myssignuvskitrabovTexture;  			break;  		}  		//if (r.Next(15) == 10)  		//{  		//    brokemonTexture[0] = myssignuvskitrabovTexture;  		//    brokemonTexture[1] = myssignuvskitrabovTexture;  		//    brokemonTexture[2] = myssignuvskitrabovTexture;  		//}  		brokemons2.Add (idString' new Brokemon (new Vector2 ((float)xDir * 1f / 1000.0f' (float)yDir * 1f / 1000.0f)' new Vector2 (xPos' yPos)' brokemonTexture' spriteBatch' idString));  	}  	break;  case ServerSendMessageType.RemovePlayer:  	{  		String idString = inc.ReadString ();  		//ID van het brokemonnetje  		brokemons2.Remove (idString);  	}  	break;  case ServerSendMessageType.SetPlayerLocation:  	{  		String idString = inc.ReadString ();  		//ID van het brokemonnetje  		//SetLocation Broketje  		int xPos = inc.ReadInt32 ();  		int yPos = inc.ReadInt32 ();  		int xSpeed = inc.ReadInt32 ();  		int ySpeed = inc.ReadInt32 ();  		Brokemon brokemon = brokemons2 [idString];  		brokemon.Position = new Vector2 (xPos' yPos);  		brokemon.xSpeed = xSpeed;  		brokemon.ySpeed = ySpeed;  	}  	break;  default:  	break;  }  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,HandleDataMessage,The following statement contains a magic number: switch (messageType) {  case ServerSendMessageType.SetScreenSize:  	{  		curSize.X = inc.ReadInt32 ();  		curSize.Y = inc.ReadInt32 ();  		curSize.Width = inc.ReadInt32 ();  		curSize.Height = inc.ReadInt32 ();  		totSize.X = inc.ReadInt32 ();  		totSize.Y = inc.ReadInt32 ();  		totSize.Width = inc.ReadInt32 ();  		totSize.Height = inc.ReadInt32 ();  	}  	break;  case ServerSendMessageType.MapString:  	mapWidth = inc.ReadInt32 ();  	mapHeight = inc.ReadInt32 ();  	for (int y = 0; y < mapHeight; y++) {  		String line = inc.ReadString ();  		List<String> xlist = new List<string> ();  		map.Add (xlist);  		foreach (Char c in line) {  			xlist.Add (c.ToString ());  		}  	}  	break;  case ServerSendMessageType.SpawnNewPlayer:  	{  		String idString = inc.ReadString ();  		//ID van het brokemonnetje  		int xPos = inc.ReadInt32 ();  		int yPos = inc.ReadInt32 ();  		int xDir = inc.ReadInt32 ();  		int yDir = inc.ReadInt32 ();  		int brokeSpecies = inc.ReadInt32 ();  		//0 = squirtle' 1 = charmander' 2 = bulbasaur' 10 = missingno  		Texture2D[] brokemonTexture = new Texture2D[3];  		//int rInt = 0;  		//Random r = new Random();  		//rInt = r.Next(3);  		switch (brokeSpecies) {  		case 0:  			brokemonTexture [0] = squirtleTexture;  			brokemonTexture [1] = squirtleTexture;  			//replace plx  			brokemonTexture [2] = squirtleTexture;  			//replace plx  			break;  		case 1:  			brokemonTexture [0] = charmanderTexture;  			brokemonTexture [1] = charmanderTexture;  			//replace plx  			brokemonTexture [2] = charmanderTexture;  			//replace plx  			break;  		case 2:  			brokemonTexture [0] = bulbasaurTexture;  			brokemonTexture [1] = venubronkiTexture;  			brokemonTexture [2] = venubrateuzadroidTexture;  			break;  		default:  			Console.WriteLine ("Invalid selection. Please select 0' 1' or 2.");  			brokemonTexture [0] = myssignuvskitrabovTexture;  			brokemonTexture [1] = myssignuvskitrabovTexture;  			brokemonTexture [2] = myssignuvskitrabovTexture;  			break;  		}  		//if (r.Next(15) == 10)  		//{  		//    brokemonTexture[0] = myssignuvskitrabovTexture;  		//    brokemonTexture[1] = myssignuvskitrabovTexture;  		//    brokemonTexture[2] = myssignuvskitrabovTexture;  		//}  		brokemons2.Add (idString' new Brokemon (new Vector2 ((float)xDir * 1f / 1000.0f' (float)yDir * 1f / 1000.0f)' new Vector2 (xPos' yPos)' brokemonTexture' spriteBatch' idString));  	}  	break;  case ServerSendMessageType.RemovePlayer:  	{  		String idString = inc.ReadString ();  		//ID van het brokemonnetje  		brokemons2.Remove (idString);  	}  	break;  case ServerSendMessageType.SetPlayerLocation:  	{  		String idString = inc.ReadString ();  		//ID van het brokemonnetje  		//SetLocation Broketje  		int xPos = inc.ReadInt32 ();  		int yPos = inc.ReadInt32 ();  		int xSpeed = inc.ReadInt32 ();  		int ySpeed = inc.ReadInt32 ();  		Brokemon brokemon = brokemons2 [idString];  		brokemon.Position = new Vector2 (xPos' yPos);  		brokemon.xSpeed = xSpeed;  		brokemon.ySpeed = ySpeed;  	}  	break;  default:  	break;  }  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,HandleDataMessage,The following statement contains a magic number: switch (messageType) {  case ServerSendMessageType.SetScreenSize:  	{  		curSize.X = inc.ReadInt32 ();  		curSize.Y = inc.ReadInt32 ();  		curSize.Width = inc.ReadInt32 ();  		curSize.Height = inc.ReadInt32 ();  		totSize.X = inc.ReadInt32 ();  		totSize.Y = inc.ReadInt32 ();  		totSize.Width = inc.ReadInt32 ();  		totSize.Height = inc.ReadInt32 ();  	}  	break;  case ServerSendMessageType.MapString:  	mapWidth = inc.ReadInt32 ();  	mapHeight = inc.ReadInt32 ();  	for (int y = 0; y < mapHeight; y++) {  		String line = inc.ReadString ();  		List<String> xlist = new List<string> ();  		map.Add (xlist);  		foreach (Char c in line) {  			xlist.Add (c.ToString ());  		}  	}  	break;  case ServerSendMessageType.SpawnNewPlayer:  	{  		String idString = inc.ReadString ();  		//ID van het brokemonnetje  		int xPos = inc.ReadInt32 ();  		int yPos = inc.ReadInt32 ();  		int xDir = inc.ReadInt32 ();  		int yDir = inc.ReadInt32 ();  		int brokeSpecies = inc.ReadInt32 ();  		//0 = squirtle' 1 = charmander' 2 = bulbasaur' 10 = missingno  		Texture2D[] brokemonTexture = new Texture2D[3];  		//int rInt = 0;  		//Random r = new Random();  		//rInt = r.Next(3);  		switch (brokeSpecies) {  		case 0:  			brokemonTexture [0] = squirtleTexture;  			brokemonTexture [1] = squirtleTexture;  			//replace plx  			brokemonTexture [2] = squirtleTexture;  			//replace plx  			break;  		case 1:  			brokemonTexture [0] = charmanderTexture;  			brokemonTexture [1] = charmanderTexture;  			//replace plx  			brokemonTexture [2] = charmanderTexture;  			//replace plx  			break;  		case 2:  			brokemonTexture [0] = bulbasaurTexture;  			brokemonTexture [1] = venubronkiTexture;  			brokemonTexture [2] = venubrateuzadroidTexture;  			break;  		default:  			Console.WriteLine ("Invalid selection. Please select 0' 1' or 2.");  			brokemonTexture [0] = myssignuvskitrabovTexture;  			brokemonTexture [1] = myssignuvskitrabovTexture;  			brokemonTexture [2] = myssignuvskitrabovTexture;  			break;  		}  		//if (r.Next(15) == 10)  		//{  		//    brokemonTexture[0] = myssignuvskitrabovTexture;  		//    brokemonTexture[1] = myssignuvskitrabovTexture;  		//    brokemonTexture[2] = myssignuvskitrabovTexture;  		//}  		brokemons2.Add (idString' new Brokemon (new Vector2 ((float)xDir * 1f / 1000.0f' (float)yDir * 1f / 1000.0f)' new Vector2 (xPos' yPos)' brokemonTexture' spriteBatch' idString));  	}  	break;  case ServerSendMessageType.RemovePlayer:  	{  		String idString = inc.ReadString ();  		//ID van het brokemonnetje  		brokemons2.Remove (idString);  	}  	break;  case ServerSendMessageType.SetPlayerLocation:  	{  		String idString = inc.ReadString ();  		//ID van het brokemonnetje  		//SetLocation Broketje  		int xPos = inc.ReadInt32 ();  		int yPos = inc.ReadInt32 ();  		int xSpeed = inc.ReadInt32 ();  		int ySpeed = inc.ReadInt32 ();  		Brokemon brokemon = brokemons2 [idString];  		brokemon.Position = new Vector2 (xPos' yPos);  		brokemon.xSpeed = xSpeed;  		brokemon.ySpeed = ySpeed;  	}  	break;  default:  	break;  }  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,HandleDataMessage,The following statement contains a magic number: switch (messageType) {  case ServerSendMessageType.SetScreenSize:  	{  		curSize.X = inc.ReadInt32 ();  		curSize.Y = inc.ReadInt32 ();  		curSize.Width = inc.ReadInt32 ();  		curSize.Height = inc.ReadInt32 ();  		totSize.X = inc.ReadInt32 ();  		totSize.Y = inc.ReadInt32 ();  		totSize.Width = inc.ReadInt32 ();  		totSize.Height = inc.ReadInt32 ();  	}  	break;  case ServerSendMessageType.MapString:  	mapWidth = inc.ReadInt32 ();  	mapHeight = inc.ReadInt32 ();  	for (int y = 0; y < mapHeight; y++) {  		String line = inc.ReadString ();  		List<String> xlist = new List<string> ();  		map.Add (xlist);  		foreach (Char c in line) {  			xlist.Add (c.ToString ());  		}  	}  	break;  case ServerSendMessageType.SpawnNewPlayer:  	{  		String idString = inc.ReadString ();  		//ID van het brokemonnetje  		int xPos = inc.ReadInt32 ();  		int yPos = inc.ReadInt32 ();  		int xDir = inc.ReadInt32 ();  		int yDir = inc.ReadInt32 ();  		int brokeSpecies = inc.ReadInt32 ();  		//0 = squirtle' 1 = charmander' 2 = bulbasaur' 10 = missingno  		Texture2D[] brokemonTexture = new Texture2D[3];  		//int rInt = 0;  		//Random r = new Random();  		//rInt = r.Next(3);  		switch (brokeSpecies) {  		case 0:  			brokemonTexture [0] = squirtleTexture;  			brokemonTexture [1] = squirtleTexture;  			//replace plx  			brokemonTexture [2] = squirtleTexture;  			//replace plx  			break;  		case 1:  			brokemonTexture [0] = charmanderTexture;  			brokemonTexture [1] = charmanderTexture;  			//replace plx  			brokemonTexture [2] = charmanderTexture;  			//replace plx  			break;  		case 2:  			brokemonTexture [0] = bulbasaurTexture;  			brokemonTexture [1] = venubronkiTexture;  			brokemonTexture [2] = venubrateuzadroidTexture;  			break;  		default:  			Console.WriteLine ("Invalid selection. Please select 0' 1' or 2.");  			brokemonTexture [0] = myssignuvskitrabovTexture;  			brokemonTexture [1] = myssignuvskitrabovTexture;  			brokemonTexture [2] = myssignuvskitrabovTexture;  			break;  		}  		//if (r.Next(15) == 10)  		//{  		//    brokemonTexture[0] = myssignuvskitrabovTexture;  		//    brokemonTexture[1] = myssignuvskitrabovTexture;  		//    brokemonTexture[2] = myssignuvskitrabovTexture;  		//}  		brokemons2.Add (idString' new Brokemon (new Vector2 ((float)xDir * 1f / 1000.0f' (float)yDir * 1f / 1000.0f)' new Vector2 (xPos' yPos)' brokemonTexture' spriteBatch' idString));  	}  	break;  case ServerSendMessageType.RemovePlayer:  	{  		String idString = inc.ReadString ();  		//ID van het brokemonnetje  		brokemons2.Remove (idString);  	}  	break;  case ServerSendMessageType.SetPlayerLocation:  	{  		String idString = inc.ReadString ();  		//ID van het brokemonnetje  		//SetLocation Broketje  		int xPos = inc.ReadInt32 ();  		int yPos = inc.ReadInt32 ();  		int xSpeed = inc.ReadInt32 ();  		int ySpeed = inc.ReadInt32 ();  		Brokemon brokemon = brokemons2 [idString];  		brokemon.Position = new Vector2 (xPos' yPos);  		brokemon.xSpeed = xSpeed;  		brokemon.ySpeed = ySpeed;  	}  	break;  default:  	break;  }  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,HandleDataMessage,The following statement contains a magic number: switch (messageType) {  case ServerSendMessageType.SetScreenSize:  	{  		curSize.X = inc.ReadInt32 ();  		curSize.Y = inc.ReadInt32 ();  		curSize.Width = inc.ReadInt32 ();  		curSize.Height = inc.ReadInt32 ();  		totSize.X = inc.ReadInt32 ();  		totSize.Y = inc.ReadInt32 ();  		totSize.Width = inc.ReadInt32 ();  		totSize.Height = inc.ReadInt32 ();  	}  	break;  case ServerSendMessageType.MapString:  	mapWidth = inc.ReadInt32 ();  	mapHeight = inc.ReadInt32 ();  	for (int y = 0; y < mapHeight; y++) {  		String line = inc.ReadString ();  		List<String> xlist = new List<string> ();  		map.Add (xlist);  		foreach (Char c in line) {  			xlist.Add (c.ToString ());  		}  	}  	break;  case ServerSendMessageType.SpawnNewPlayer:  	{  		String idString = inc.ReadString ();  		//ID van het brokemonnetje  		int xPos = inc.ReadInt32 ();  		int yPos = inc.ReadInt32 ();  		int xDir = inc.ReadInt32 ();  		int yDir = inc.ReadInt32 ();  		int brokeSpecies = inc.ReadInt32 ();  		//0 = squirtle' 1 = charmander' 2 = bulbasaur' 10 = missingno  		Texture2D[] brokemonTexture = new Texture2D[3];  		//int rInt = 0;  		//Random r = new Random();  		//rInt = r.Next(3);  		switch (brokeSpecies) {  		case 0:  			brokemonTexture [0] = squirtleTexture;  			brokemonTexture [1] = squirtleTexture;  			//replace plx  			brokemonTexture [2] = squirtleTexture;  			//replace plx  			break;  		case 1:  			brokemonTexture [0] = charmanderTexture;  			brokemonTexture [1] = charmanderTexture;  			//replace plx  			brokemonTexture [2] = charmanderTexture;  			//replace plx  			break;  		case 2:  			brokemonTexture [0] = bulbasaurTexture;  			brokemonTexture [1] = venubronkiTexture;  			brokemonTexture [2] = venubrateuzadroidTexture;  			break;  		default:  			Console.WriteLine ("Invalid selection. Please select 0' 1' or 2.");  			brokemonTexture [0] = myssignuvskitrabovTexture;  			brokemonTexture [1] = myssignuvskitrabovTexture;  			brokemonTexture [2] = myssignuvskitrabovTexture;  			break;  		}  		//if (r.Next(15) == 10)  		//{  		//    brokemonTexture[0] = myssignuvskitrabovTexture;  		//    brokemonTexture[1] = myssignuvskitrabovTexture;  		//    brokemonTexture[2] = myssignuvskitrabovTexture;  		//}  		brokemons2.Add (idString' new Brokemon (new Vector2 ((float)xDir * 1f / 1000.0f' (float)yDir * 1f / 1000.0f)' new Vector2 (xPos' yPos)' brokemonTexture' spriteBatch' idString));  	}  	break;  case ServerSendMessageType.RemovePlayer:  	{  		String idString = inc.ReadString ();  		//ID van het brokemonnetje  		brokemons2.Remove (idString);  	}  	break;  case ServerSendMessageType.SetPlayerLocation:  	{  		String idString = inc.ReadString ();  		//ID van het brokemonnetje  		//SetLocation Broketje  		int xPos = inc.ReadInt32 ();  		int yPos = inc.ReadInt32 ();  		int xSpeed = inc.ReadInt32 ();  		int ySpeed = inc.ReadInt32 ();  		Brokemon brokemon = brokemons2 [idString];  		brokemon.Position = new Vector2 (xPos' yPos);  		brokemon.xSpeed = xSpeed;  		brokemon.ySpeed = ySpeed;  	}  	break;  default:  	break;  }  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,HandleDataMessage,The following statement contains a magic number: switch (messageType) {  case ServerSendMessageType.SetScreenSize:  	{  		curSize.X = inc.ReadInt32 ();  		curSize.Y = inc.ReadInt32 ();  		curSize.Width = inc.ReadInt32 ();  		curSize.Height = inc.ReadInt32 ();  		totSize.X = inc.ReadInt32 ();  		totSize.Y = inc.ReadInt32 ();  		totSize.Width = inc.ReadInt32 ();  		totSize.Height = inc.ReadInt32 ();  	}  	break;  case ServerSendMessageType.MapString:  	mapWidth = inc.ReadInt32 ();  	mapHeight = inc.ReadInt32 ();  	for (int y = 0; y < mapHeight; y++) {  		String line = inc.ReadString ();  		List<String> xlist = new List<string> ();  		map.Add (xlist);  		foreach (Char c in line) {  			xlist.Add (c.ToString ());  		}  	}  	break;  case ServerSendMessageType.SpawnNewPlayer:  	{  		String idString = inc.ReadString ();  		//ID van het brokemonnetje  		int xPos = inc.ReadInt32 ();  		int yPos = inc.ReadInt32 ();  		int xDir = inc.ReadInt32 ();  		int yDir = inc.ReadInt32 ();  		int brokeSpecies = inc.ReadInt32 ();  		//0 = squirtle' 1 = charmander' 2 = bulbasaur' 10 = missingno  		Texture2D[] brokemonTexture = new Texture2D[3];  		//int rInt = 0;  		//Random r = new Random();  		//rInt = r.Next(3);  		switch (brokeSpecies) {  		case 0:  			brokemonTexture [0] = squirtleTexture;  			brokemonTexture [1] = squirtleTexture;  			//replace plx  			brokemonTexture [2] = squirtleTexture;  			//replace plx  			break;  		case 1:  			brokemonTexture [0] = charmanderTexture;  			brokemonTexture [1] = charmanderTexture;  			//replace plx  			brokemonTexture [2] = charmanderTexture;  			//replace plx  			break;  		case 2:  			brokemonTexture [0] = bulbasaurTexture;  			brokemonTexture [1] = venubronkiTexture;  			brokemonTexture [2] = venubrateuzadroidTexture;  			break;  		default:  			Console.WriteLine ("Invalid selection. Please select 0' 1' or 2.");  			brokemonTexture [0] = myssignuvskitrabovTexture;  			brokemonTexture [1] = myssignuvskitrabovTexture;  			brokemonTexture [2] = myssignuvskitrabovTexture;  			break;  		}  		//if (r.Next(15) == 10)  		//{  		//    brokemonTexture[0] = myssignuvskitrabovTexture;  		//    brokemonTexture[1] = myssignuvskitrabovTexture;  		//    brokemonTexture[2] = myssignuvskitrabovTexture;  		//}  		brokemons2.Add (idString' new Brokemon (new Vector2 ((float)xDir * 1f / 1000.0f' (float)yDir * 1f / 1000.0f)' new Vector2 (xPos' yPos)' brokemonTexture' spriteBatch' idString));  	}  	break;  case ServerSendMessageType.RemovePlayer:  	{  		String idString = inc.ReadString ();  		//ID van het brokemonnetje  		brokemons2.Remove (idString);  	}  	break;  case ServerSendMessageType.SetPlayerLocation:  	{  		String idString = inc.ReadString ();  		//ID van het brokemonnetje  		//SetLocation Broketje  		int xPos = inc.ReadInt32 ();  		int yPos = inc.ReadInt32 ();  		int xSpeed = inc.ReadInt32 ();  		int ySpeed = inc.ReadInt32 ();  		Brokemon brokemon = brokemons2 [idString];  		brokemon.Position = new Vector2 (xPos' yPos);  		brokemon.xSpeed = xSpeed;  		brokemon.ySpeed = ySpeed;  	}  	break;  default:  	break;  }  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,HandleDataMessage,The following statement contains a magic number: switch (brokeSpecies) {  case 0:  	brokemonTexture [0] = squirtleTexture;  	brokemonTexture [1] = squirtleTexture;  	//replace plx  	brokemonTexture [2] = squirtleTexture;  	//replace plx  	break;  case 1:  	brokemonTexture [0] = charmanderTexture;  	brokemonTexture [1] = charmanderTexture;  	//replace plx  	brokemonTexture [2] = charmanderTexture;  	//replace plx  	break;  case 2:  	brokemonTexture [0] = bulbasaurTexture;  	brokemonTexture [1] = venubronkiTexture;  	brokemonTexture [2] = venubrateuzadroidTexture;  	break;  default:  	Console.WriteLine ("Invalid selection. Please select 0' 1' or 2.");  	brokemonTexture [0] = myssignuvskitrabovTexture;  	brokemonTexture [1] = myssignuvskitrabovTexture;  	brokemonTexture [2] = myssignuvskitrabovTexture;  	break;  }  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,HandleDataMessage,The following statement contains a magic number: switch (brokeSpecies) {  case 0:  	brokemonTexture [0] = squirtleTexture;  	brokemonTexture [1] = squirtleTexture;  	//replace plx  	brokemonTexture [2] = squirtleTexture;  	//replace plx  	break;  case 1:  	brokemonTexture [0] = charmanderTexture;  	brokemonTexture [1] = charmanderTexture;  	//replace plx  	brokemonTexture [2] = charmanderTexture;  	//replace plx  	break;  case 2:  	brokemonTexture [0] = bulbasaurTexture;  	brokemonTexture [1] = venubronkiTexture;  	brokemonTexture [2] = venubrateuzadroidTexture;  	break;  default:  	Console.WriteLine ("Invalid selection. Please select 0' 1' or 2.");  	brokemonTexture [0] = myssignuvskitrabovTexture;  	brokemonTexture [1] = myssignuvskitrabovTexture;  	brokemonTexture [2] = myssignuvskitrabovTexture;  	break;  }  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,HandleDataMessage,The following statement contains a magic number: switch (brokeSpecies) {  case 0:  	brokemonTexture [0] = squirtleTexture;  	brokemonTexture [1] = squirtleTexture;  	//replace plx  	brokemonTexture [2] = squirtleTexture;  	//replace plx  	break;  case 1:  	brokemonTexture [0] = charmanderTexture;  	brokemonTexture [1] = charmanderTexture;  	//replace plx  	brokemonTexture [2] = charmanderTexture;  	//replace plx  	break;  case 2:  	brokemonTexture [0] = bulbasaurTexture;  	brokemonTexture [1] = venubronkiTexture;  	brokemonTexture [2] = venubrateuzadroidTexture;  	break;  default:  	Console.WriteLine ("Invalid selection. Please select 0' 1' or 2.");  	brokemonTexture [0] = myssignuvskitrabovTexture;  	brokemonTexture [1] = myssignuvskitrabovTexture;  	brokemonTexture [2] = myssignuvskitrabovTexture;  	break;  }  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,HandleDataMessage,The following statement contains a magic number: switch (brokeSpecies) {  case 0:  	brokemonTexture [0] = squirtleTexture;  	brokemonTexture [1] = squirtleTexture;  	//replace plx  	brokemonTexture [2] = squirtleTexture;  	//replace plx  	break;  case 1:  	brokemonTexture [0] = charmanderTexture;  	brokemonTexture [1] = charmanderTexture;  	//replace plx  	brokemonTexture [2] = charmanderTexture;  	//replace plx  	break;  case 2:  	brokemonTexture [0] = bulbasaurTexture;  	brokemonTexture [1] = venubronkiTexture;  	brokemonTexture [2] = venubrateuzadroidTexture;  	break;  default:  	Console.WriteLine ("Invalid selection. Please select 0' 1' or 2.");  	brokemonTexture [0] = myssignuvskitrabovTexture;  	brokemonTexture [1] = myssignuvskitrabovTexture;  	brokemonTexture [2] = myssignuvskitrabovTexture;  	break;  }  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,HandleDataMessage,The following statement contains a magic number: switch (brokeSpecies) {  case 0:  	brokemonTexture [0] = squirtleTexture;  	brokemonTexture [1] = squirtleTexture;  	//replace plx  	brokemonTexture [2] = squirtleTexture;  	//replace plx  	break;  case 1:  	brokemonTexture [0] = charmanderTexture;  	brokemonTexture [1] = charmanderTexture;  	//replace plx  	brokemonTexture [2] = charmanderTexture;  	//replace plx  	break;  case 2:  	brokemonTexture [0] = bulbasaurTexture;  	brokemonTexture [1] = venubronkiTexture;  	brokemonTexture [2] = venubrateuzadroidTexture;  	break;  default:  	Console.WriteLine ("Invalid selection. Please select 0' 1' or 2.");  	brokemonTexture [0] = myssignuvskitrabovTexture;  	brokemonTexture [1] = myssignuvskitrabovTexture;  	brokemonTexture [2] = myssignuvskitrabovTexture;  	break;  }  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,HandleDataMessage,The following statement contains a magic number: brokemonTexture [2] = squirtleTexture;  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,HandleDataMessage,The following statement contains a magic number: brokemonTexture [2] = charmanderTexture;  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,HandleDataMessage,The following statement contains a magic number: brokemonTexture [2] = venubrateuzadroidTexture;  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,HandleDataMessage,The following statement contains a magic number: brokemonTexture [2] = myssignuvskitrabovTexture;  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString (font' Math.Round (1.0 / fpsMeterStopwatch.Elapsed.TotalSeconds' 2).ToString ()' new Vector2 (10' 10)' Color.White);  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString (font' Math.Round (1.0 / fpsMeterStopwatch.Elapsed.TotalSeconds' 2).ToString ()' new Vector2 (10' 10)' Color.White);  
Magic Number,TurtleTurner2000.ScreenClient,Game1,C:\repos\devedse_TurtleTurner2000\TurtleTurner2000\TurtleTurner2000.ScreenClient\Game1.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString (font' Math.Round (1.0 / fpsMeterStopwatch.Elapsed.TotalSeconds' 2).ToString ()' new Vector2 (10' 10)' Color.White);  
