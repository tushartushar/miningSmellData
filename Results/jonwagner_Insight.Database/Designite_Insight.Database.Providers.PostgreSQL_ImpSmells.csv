Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Insight.Database.Providers.PostgreSQL,PostgreSQLInsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\PostgreSQLInsightDbProvider.cs,BulkCopy,Cyclomatic complexity of the method is 9
Long Parameter List,Insight.Database.Providers.PostgreSQL,PostgreSQLInsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\PostgreSQLInsightDbProvider.cs,FixupParameter,The method has 5 parameters.
Long Parameter List,Insight.Database.Providers.PostgreSQL,PostgreSQLInsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\PostgreSQLInsightDbProvider.cs,BulkCopy,The method has 6 parameters.
Long Statement,Insight.Database.Providers.PostgreSQL,NpgsqlCommandWithRecordsets,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\NpgsqlCommandWithRecordsets.cs,ShouldDereference,The length of the statement  "		throw new InvalidOperationException ("Command returns both cursor and non-cursor results. To read this data' please code your own FETCH commands for the cursor data."); " is 168.
Long Statement,Insight.Database.Providers.PostgreSQL,NpgsqlConnectionWithSchema,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\NpgsqlConnectionWithSchema.cs,OpenAsync,The length of the statement  "	return base.OpenAsync (cancellationToken).ContinueWith (t => InnerConnection.ExecuteSqlAsync (_switchSchemaSql)' cancellationToken' TaskContinuationOptions.OnlyOnRanToCompletion' null).Unwrap (); " is 195.
Long Statement,Insight.Database.Providers.PostgreSQL,PostgreSQLInsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\PostgreSQLInsightDbProvider.cs,FixupCommand,The length of the statement  "		if (p.Direction.HasFlag (ParameterDirection.Input) && (p.NpgsqlDbType == NpgsqlDbType.Json || p.NpgsqlDbType == NpgsqlDbType.Jsonb) && !(p.Value is String)) { " is 158.
Long Statement,Insight.Database.Providers.PostgreSQL,PostgreSQLInsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\PostgreSQLInsightDbProvider.cs,BulkCopy,The length of the statement  "	using (var writer = pgconnection.BeginTextImport (String.Format (CultureInfo.InvariantCulture' "COPY {0} FROM STDIN WITH CSV"' tableName))) { " is 141.
Complex Conditional,Insight.Database.Providers.PostgreSQL,PostgreSQLInsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\PostgreSQLInsightDbProvider.cs,FixupCommand,The conditional expression  "p.Direction.HasFlag (ParameterDirection.Input) && (p.NpgsqlDbType == NpgsqlDbType.Json || p.NpgsqlDbType == NpgsqlDbType.Jsonb) && !(p.Value is String)"  is complex.
Magic Number,Insight.Database.Providers.PostgreSQL,PostgreSQLInsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\PostgreSQLInsightDbProvider.cs,IsTransientException,The following statement contains a magic number: switch (mex.ErrorCode) {  case -2147467259:  	// socket exception - could not connect to host  	return true;  }  
Missing Default,Insight.Database.Providers.PostgreSQL,PostgreSQLInsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\PostgreSQLInsightDbProvider.cs,FixupParameter,The following switch statement is missing a default case: switch (serializationMode) {  case SerializationMode.Json:  	pgparam.NpgsqlDbType = NpgsqlDbType.Json;  	break;  case SerializationMode.Xml:  	pgparam.NpgsqlDbType = NpgsqlDbType.Xml;  	break;  }  
Missing Default,Insight.Database.Providers.PostgreSQL,PostgreSQLInsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\PostgreSQLInsightDbProvider.cs,IsTransientException,The following switch statement is missing a default case: switch (mex.ErrorCode) {  case -2147467259:  	// socket exception - could not connect to host  	return true;  }  
