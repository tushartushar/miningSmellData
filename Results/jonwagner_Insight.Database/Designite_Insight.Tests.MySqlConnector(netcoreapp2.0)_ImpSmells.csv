Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Insight.Tests.MySqlConnector,MySqlConnectorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.MySqlConnector\MySqlConnectorTests.cs,SetUpFixture,The length of the statement  "			_connection = new MySqlConnection(String.Format("Server = {0}; Database = test; User Id = root"' BaseTest.TestHost ?? "localhost")); " is 132.
Empty Catch Block,Insight.Tests.MySqlConnector,MySqlConnectorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.MySqlConnector\MySqlConnectorTests.cs,TestExecuteProcedure,The method has an empty catch block.
Empty Catch Block,Insight.Tests.MySqlConnector,MySqlConnectorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.MySqlConnector\MySqlConnectorTests.cs,TestExecuteProcedureWithOutputParameter,The method has an empty catch block.
Empty Catch Block,Insight.Tests.MySqlConnector,MySqlConnectorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.MySqlConnector\MySqlConnectorTests.cs,TestQueryProcedure,The method has an empty catch block.
Magic Number,Insight.Tests.MySqlConnector,MySqlConnectorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.MySqlConnector\MySqlConnectorTests.cs,TestExecuteWithParameters,The following statement contains a magic number: var result = _connection.QuerySql<long>("SELECT @p as p"' new { p = 5 });
Magic Number,Insight.Tests.MySqlConnector,MySqlConnectorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.MySqlConnector\MySqlConnectorTests.cs,TestExecuteWithParameters,The following statement contains a magic number: Assert.AreEqual(5' result[0]);
Magic Number,Insight.Tests.MySqlConnector,MySqlConnectorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.MySqlConnector\MySqlConnectorTests.cs,TestExecuteProcedure,The following statement contains a magic number: var result = _connection.Execute("MySqlTestExecute"' new { i = 5 });
Magic Number,Insight.Tests.MySqlConnector,MySqlConnectorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.MySqlConnector\MySqlConnectorTests.cs,TestExecuteProcedureWithOutputParameter,The following statement contains a magic number: var output = new TestData() { X = 11' Z = 0 };
Magic Number,Insight.Tests.MySqlConnector,MySqlConnectorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.MySqlConnector\MySqlConnectorTests.cs,TestQueryProcedure,The following statement contains a magic number: var result = _connection.Query<int>("MySqlTestProc"' new { i = 5 });
Magic Number,Insight.Tests.MySqlConnector,MySqlConnectorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.MySqlConnector\MySqlConnectorTests.cs,TestQueryProcedure,The following statement contains a magic number: Assert.AreEqual(5' result[0]);
Magic Number,Insight.Tests.MySqlConnector,MySqlConnectorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.MySqlConnector\MySqlConnectorTests.cs,TestDynamicExecute,The following statement contains a magic number: var result = _connection.Dynamic<int>().MySqlTestProc(i: 5);
Magic Number,Insight.Tests.MySqlConnector,MySqlConnectorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.MySqlConnector\MySqlConnectorTests.cs,TestDynamicExecute,The following statement contains a magic number: Assert.AreEqual(5' result[0]);
Magic Number,Insight.Tests.MySqlConnector,MySqlConnectorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.MySqlConnector\MySqlConnectorTests.cs,TestQueryRecordset,The following statement contains a magic number: Assert.AreEqual(2' result[0].X);
Magic Number,Insight.Tests.MySqlConnector,MySqlConnectorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.MySqlConnector\MySqlConnectorTests.cs,TestQueryRecordset,The following statement contains a magic number: Assert.AreEqual(3' result[0].Z);
Magic Number,Insight.Tests.MySqlConnector,MySqlConnectorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.MySqlConnector\MySqlConnectorTests.cs,TestEnumerableValueParameters,The following statement contains a magic number: i < 3
