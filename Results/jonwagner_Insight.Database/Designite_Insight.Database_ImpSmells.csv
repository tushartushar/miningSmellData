Implementation smell,Namespace,Class,File,Method,Description
Long Method,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,DoInvokeMember,The method has 123 lines of code.
Long Method,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateClassDeserializerDynamicMethod,The method has 172 lines of code.
Long Method,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,EmitMethodImpl,The method has 121 lines of code.
Long Method,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The method has 110 lines of code.
Long Method,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateClassInputParameterGenerator,The method has 126 lines of code.
Complex Method,Insight.Database,DbSerializationRule,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Serialization\DbSerializationRule.cs,GetSerializer,Cyclomatic complexity of the method is 9
Complex Method,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,GetOneToOneType,Cyclomatic complexity of the method is 49
Complex Method,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,DoInvokeMember,Cyclomatic complexity of the method is 41
Complex Method,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateClassDeserializerDynamicMethod,Cyclomatic complexity of the method is 20
Complex Method,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateGraphDeserializer,Cyclomatic complexity of the method is 12
Complex Method,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,DetectEndColumn,Cyclomatic complexity of the method is 8
Complex Method,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,EmitMethodImpl,Cyclomatic complexity of the method is 69
Complex Method,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,Cyclomatic complexity of the method is 13
Complex Method,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateClassInputParameterGenerator,Cyclomatic complexity of the method is 15
Complex Method,Insight.Database.CodeGenerator,TypeConverterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\TypeConverterGenerator.cs,EmitConvertValue,Cyclomatic complexity of the method is 13
Complex Method,Insight.Database.CodeGenerator,TypeConverterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\TypeConverterGenerator.cs,EmitCoersion,Cyclomatic complexity of the method is 16
Complex Method,Insight.Database.CodeGenerator,IlHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\IlHelper.cs,EmitLdInt32,Cyclomatic complexity of the method is 34
Complex Method,Insight.Database.Structure,IDAccessor,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\IDAccessor.cs,GetTupleType,Cyclomatic complexity of the method is 9
Complex Method,Insight.Database.Structure,RecordReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\RecordReader.cs,GetGuardianType,Cyclomatic complexity of the method is 10
Long Parameter List,Insight.Database,DbDataReaderWrapper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DbDataReaderWrapper.cs,GetBytes,The method has 5 parameters.
Long Parameter List,Insight.Database,DbDataReaderWrapper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DbDataReaderWrapper.cs,GetChars,The method has 5 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteScalarAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteScalarSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 10 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 5 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 10 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 10 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,InsertAsync,The method has 10 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,InsertSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,InsertListAsync,The method has 10 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,InsertListSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryOntoAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryOntoSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryOntoListAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryOntoListSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,BulkCopyAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,BulkCopyAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteAsyncAndAutoClose,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteAsyncAndAutoClose,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryCoreAsyncUntyped,The method has 5 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,CreateCommand,The method has 6 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,CreateCommandSql,The method has 5 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Execute,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteScalar,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteScalarSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,GetReader,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,GetReaderSql,The method has 6 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ForEachDynamic,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ForEachDynamicSql,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ForEach,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ForEachSql,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Insert,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,InsertSql,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,InsertList,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,InsertListSql,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryOnto,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryOntoSql,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryOntoList,The method has 9 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryOntoListSql,The method has 8 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,BulkCopy,The method has 7 parameters.
Long Parameter List,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,BulkCopy,The method has 7 parameters.
Long Parameter List,Insight.Database,ColumnMapping,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Mapping\ColumnMapping.cs,MapColumns,The method has 5 parameters.
Long Parameter List,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,ThenChildren,The method has 5 parameters.
Long Parameter List,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,ThenChildren,The method has 5 parameters.
Long Parameter List,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,ThenChildren,The method has 5 parameters.
Long Parameter List,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,ThenChildren,The method has 5 parameters.
Long Parameter List,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,ThenChildren,The method has 5 parameters.
Long Parameter List,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,ThenChildren,The method has 5 parameters.
Long Parameter List,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateClassDeserializer,The method has 6 parameters.
Long Parameter List,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateClassDeserializerDynamicMethod,The method has 8 parameters.
Long Parameter List,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,MapColumns,The method has 6 parameters.
Long Parameter List,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,DetectEndColumn,The method has 5 parameters.
Long Parameter List,Insight.Database.CodeGenerator,TypeConverterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\TypeConverterGenerator.cs,EmitConvertValue,The method has 5 parameters.
Long Parameter List,Insight.Database.Reliable,RetryStrategy,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Reliable\RetryStrategy.cs,CheckAsyncResult,The method has 5 parameters.
Long Parameter List,Insight.Database.Providers,DbConnectionWrapperInsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Providers\DbConnectionWrapperInsightDbProvider.cs,BulkCopy,The method has 6 parameters.
Long Parameter List,Insight.Database.Providers,WrappedInsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Providers\WrappedInsightDbProvider.cs,FixupParameter,The method has 5 parameters.
Long Parameter List,Insight.Database.Providers,WrappedInsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Providers\WrappedInsightDbProvider.cs,BulkCopy,The method has 6 parameters.
Long Parameter List,Insight.Database.Providers,WrappedInsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Providers\WrappedInsightDbProvider.cs,BulkCopyAsync,The method has 7 parameters.
Long Parameter List,Insight.Database.Providers,InsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Providers\InsightDbProvider.cs,FixupParameter,The method has 5 parameters.
Long Parameter List,Insight.Database.Providers,InsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Providers\InsightDbProvider.cs,BulkCopy,The method has 6 parameters.
Long Parameter List,Insight.Database.Providers,InsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Providers\InsightDbProvider.cs,BulkCopyAsync,The method has 7 parameters.
Long Statement,Insight.Database,DbDataReaderWrapper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DbDataReaderWrapper.cs,GetBytes,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Invalid attempt to convert column {0} - {1} to a byte array"' ordinal' GetName (ordinal))); " is 174.
Long Statement,Insight.Database,DbDataReaderWrapper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DbDataReaderWrapper.cs,GetChars,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Invalid attempt to convert column {0} - {1} to a string"' ordinal' GetName (ordinal))); " is 170.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteAsync,The length of the statement  "	return connection.ExecuteAsyncAndAutoClose (parameters' c => c.CreateCommand (sql' parameters' commandType' commandTimeout' transaction)' false' (cmd' r) => { " is 158.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteSqlAsync,The length of the statement  "	return connection.ExecuteAsync (sql' parameters' CommandType.Text' closeConnection' commandTimeout' transaction' cancellationToken' outputParameters); " is 150.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteScalarAsync,The length of the statement  "	return connection.ExecuteAsyncAndAutoClose (parameters' c => connection.CreateCommand (sql' parameters' commandType' commandTimeout' transaction)' false' (cmd' r) => { " is 167.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteScalarAsync,The length of the statement  "					return Task<T>.Factory.StartNew(() => ConvertScalar<T>(cmd' parameters' outputParameters' cmd.ExecuteScalar())' cancellationToken);" is 131.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteScalarAsync,The length of the statement  "			return dbCommand.ExecuteScalarAsync (cancellationToken).ContinueWith (t => ConvertScalar<T> (cmd' parameters' outputParameters' t.Result)' TaskContinuationOptions.ExecuteSynchronously); " is 185.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteScalarAsync,The length of the statement  "			return Task<T>.Factory.StartNew (() => ConvertScalar<T> (cmd' parameters' outputParameters' cmd.ExecuteScalar ())' cancellationToken); " is 134.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteScalarSqlAsync,The length of the statement  "	return connection.ExecuteScalarAsync<T> (sql' parameters' CommandType.Text' closeConnection' commandTimeout' transaction' cancellationToken' outputParameters); " is 159.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.ExecuteAsyncAndAutoClose (parameters' c => c.CreateCommand (sql' parameters' commandType' commandTimeout' transaction)' true' (cmd' r) => returns.ReadAsync (cmd' r' cancellationToken)' commandBehavior' cancellationToken' outputParameters); " is 257.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' returns' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 157.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<FastExpando>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 176.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<FastExpando>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 181.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return command.Connection.ExecuteAsyncAndAutoClose (null' c => command' true' (cmd' r) => returns.ReadAsync (command' r' cancellationToken)' commandBehavior.HasFlag (CommandBehavior.CloseConnection)' cancellationToken' outputParameters); " is 237.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' DerivedResultsReader<T>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 176.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The length of the statement  "	return connection.QueryResultsAsync<T> (sql' parameters' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 158.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.ExecuteAsyncAndAutoClose (parameters' c => c.CreateCommand (sql' parameters' commandType' commandTimeout' transaction)' true' (cmd' r) => { " is 157.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' read' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 154.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.ExecuteAsyncAndAutoClose (parameters' c => c.CreateCommand (sql' parameters' commandType' commandTimeout' transaction)' true' (cmd' r) => Helpers.FromResult (read (r))' commandBehavior.HasFlag (CommandBehavior.CloseConnection)' cancellationToken' outputParameters); " is 283.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' read' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 154.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,InsertAsync,The length of the statement  "	return connection.ExecuteAsyncAndAutoClose (parameters ?? inserted' c => c.CreateCommand (sql' parameters ?? inserted' commandType' commandTimeout' transaction)' true' (cmd' r) => r.MergeAsync (inserted' cancellationToken)' commandBehavior.HasFlag (CommandBehavior.CloseConnection)' cancellationToken' outputParameters); " is 320.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,InsertSqlAsync,The length of the statement  "	return connection.InsertAsync (sql' inserted' parameters' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken); " is 141.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,InsertListAsync,The length of the statement  "	return connection.ExecuteAsyncAndAutoClose (parameters ?? inserted' c => c.CreateCommand (sql' parameters ?? inserted' commandType' commandTimeout' transaction)' true' (cmd' r) => r.MergeAsync (inserted' cancellationToken)' commandBehavior.HasFlag (CommandBehavior.CloseConnection)' cancellationToken' outputParameters); " is 320.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,InsertListSqlAsync,The length of the statement  "	return connection.InsertListAsync (sql' inserted' parameters' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken); " is 145.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryOntoAsync,The length of the statement  "	return connection.InsertAsync (sql' onto' parameters' commandType' commandBehavior' commandTimeout' transaction' cancellationToken); " is 132.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryOntoSqlAsync,The length of the statement  "	return connection.InsertSqlAsync (sql' onto' parameters' commandBehavior' commandTimeout' transaction' cancellationToken); " is 122.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryOntoListAsync,The length of the statement  "	return connection.InsertListAsync (sql' onto' parameters' commandType' commandBehavior' commandTimeout' transaction' cancellationToken); " is 136.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryOntoListSqlAsync,The length of the statement  "	return connection.InsertListSqlAsync (sql' onto' parameters' commandBehavior' commandTimeout' transaction' cancellationToken); " is 126.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,GetReaderAsync,The length of the statement  "				return Task<IDataReader>.Factory.FromAsync(sqlCommand.BeginExecuteReader(commandBehavior)' ar => sqlCommand.EndExecuteReader(ar));" is 130.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,GetReaderAsync,The length of the statement  "		return dbCommand.ExecuteReaderAsync (commandBehavior' cancellationToken).ContinueWith (t => (IDataReader)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 161.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,BulkCopyAsync,The length of the statement  "	return connection.BulkCopyAsync (tableName' reader' configure' closeConnection' options' transaction' cancellationToken); " is 121.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,BulkCopyAsync,The length of the statement  "		throw new ArgumentException (String.Format (CultureInfo.InvariantCulture' "BulkCopyOption {0} is not supported for this provider"' invalidOptions)); " is 148.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteAsyncAndAutoClose,The length of the statement  "	return connection.ExecuteAsyncAndAutoClose<T> (parameters' getCommand' callGetReader' translate' closeConnection ? CommandBehavior.CloseConnection : CommandBehavior.Default' cancellationToken' outputParameters); " is 211.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 167.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 172.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 171.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 176.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 175.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 180.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 179.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 184.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 183.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 188.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 187.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 192.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 191.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 196.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 195.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 200.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 199.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 204.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 204.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 209.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 209.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 214.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 214.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 219.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 219.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 224.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 224.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 229.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ToListAsync,The length of the statement  "	return task.ToListAsync (OneToOne<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>.Records' cancellationToken); " is 123.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 229.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 234.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ToListAsync,The length of the statement  "	return task.ToListAsync (OneToOne<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>.Records' cancellationToken); " is 128.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 234.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 239.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ToListAsync,The length of the statement  "	return task.ToListAsync (OneToOne<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>.Records' cancellationToken); " is 133.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 209.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 214.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 213.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 218.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 217.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 222.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 221.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 226.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 225.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 230.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 229.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 234.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 233.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 238.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 237.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 242.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 242.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 247.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 247.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 252.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 252.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 257.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 257.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 262.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 262.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 267.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 267.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 272.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 272.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' cancellationToken' outputParameters); " is 277.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 169.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 174.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 173.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 178.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 177.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 182.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 181.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 186.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 185.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 190.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 189.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 194.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 193.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 198.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 197.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 202.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 201.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 206.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 206.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 211.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 211.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 216.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 216.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 221.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 221.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 226.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 226.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 231.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 231.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 236.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>.Default' commandType' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 236.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSqlAsync,The length of the statement  "	return connection.QueryAsync (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' cancellationToken' outputParameters); " is 241.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 143.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 148.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 147.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 152.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 151.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 156.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 155.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 160.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 159.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 164.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 163.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 168.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 167.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 172.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 171.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 176.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 175.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 180.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 180.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 185.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 185.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 190.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 190.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 195.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 195.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 200.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 200.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 205.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 205.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 210.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 210.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	return connection.Query (sql' parameters' ListReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 215.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 185.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 190.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 189.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 194.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 193.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 198.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 197.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 202.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 201.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 206.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 205.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 210.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 209.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 214.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 213.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 218.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 218.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 223.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 223.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 228.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 228.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 233.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 233.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 238.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 238.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 243.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 243.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 248.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>.Default' commandType' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 248.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The length of the statement  "	return connection.Query (sql' parameters' ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>.Default' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 253.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 145.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 150.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 149.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 154.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 153.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 158.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 157.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 162.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 161.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 166.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 165.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 170.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 169.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 174.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 173.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 178.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 177.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 182.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 182.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 187.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 187.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 192.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 192.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 197.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 197.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 202.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 202.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 207.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 207.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 212.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Single,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 212.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,SingleSql,The length of the statement  "	return connection.Query (sql' parameters' SingleReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 217.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,OpenConnectionAsync,The length of the statement  "	return dbConnection.OpenAsync (cancellationToken).ContinueWith (t => connection' TaskContinuationOptions.ExecuteSynchronously | TaskContinuationOptions.OnlyOnRanToCompletion); " is 175.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteSql,The length of the statement  "	return connection.Execute (sql' parameters' CommandType.Text' closeConnection' commandTimeout' transaction' outputParameters); " is 126.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteScalarSql,The length of the statement  "	return connection.ExecuteScalar<T> (sql' parameters' CommandType.Text' closeConnection' commandTimeout' transaction' outputParameters); " is 135.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	return connection.ExecuteAndAutoClose (c => c.CreateCommand (sql' parameters' commandType' commandTimeout' transaction)' (cmd' r) => { " is 134.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	return connection.Query (sql' parameters' returns' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 133.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	return connection.Query (sql' parameters' ListReader<FastExpando>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 152.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	return connection.Query (sql' parameters' ListReader<FastExpando>.Default' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 157.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResults,The length of the statement  "	return connection.Query (sql' parameters' DerivedResultsReader<T>.Default' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 152.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryResultsSql,The length of the statement  "	return connection.QueryResults<T> (sql' parameters' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 134.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	connection.ExecuteAndAutoClose (c => c.CreateCommand (sql' parameters' commandType' commandTimeout' transaction)' (cmd' r) => { " is 127.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	connection.Query (sql' parameters' read' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 123.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Query,The length of the statement  "	return connection.ExecuteAndAutoClose (c => c.CreateCommand (sql' parameters' commandType' commandTimeout' transaction)' (cmd' r) => { " is 134.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QuerySql,The length of the statement  "	return connection.Query (sql' parameters' read' CommandType.Text' commandBehavior' commandTimeout' transaction' outputParameters); " is 130.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ForEachDynamic,The length of the statement  "	connection.ForEach (sql' parameters' action' OneToOne<FastExpando>.Records' commandType' commandBehavior' commandTimeout' transaction); " is 135.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ForEachDynamicSql,The length of the statement  "	connection.ForEach (sql' parameters' action' OneToOne<FastExpando>.Records' CommandType.Text' commandBehavior' commandTimeout' transaction); " is 140.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ForEach,The length of the statement  "	connection.ExecuteAndAutoClose (c => c.CreateCommand (sql' parameters' commandType' commandTimeout' transaction)' (cmd' r) => { " is 127.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,Insert,The length of the statement  "	connection.ExecuteAndAutoClose (c => c.CreateCommand (sql' parameters' commandType' commandTimeout' transaction)' (cmd' r) => { " is 127.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,InsertSql,The length of the statement  "	return connection.Insert<TResult> (sql' inserted' parameters' CommandType.Text' commandBehavior | CommandBehavior.SequentialAccess' commandTimeout' transaction' outputParameters); " is 179.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,InsertList,The length of the statement  "	return connection.ExecuteAndAutoClose (c => c.CreateCommand (sql' parameters' commandType' commandTimeout' transaction)' (cmd' r) => { " is 134.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,InsertListSql,The length of the statement  "	return connection.ExecuteAndAutoClose (c => c.CreateCommand (sql' parameters ?? inserted' CommandType.Text' commandTimeout' transaction)' (cmd' r) => { " is 151.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryOnto,The length of the statement  "	return connection.Insert (sql' onto' parameters' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 126.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryOntoSql,The length of the statement  "	return connection.InsertSql<TResult> (sql' onto' parameters' commandBehavior' commandTimeout' transaction' outputParameters); " is 125.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryOntoList,The length of the statement  "	return connection.InsertList (sql' onto' parameters' commandType' commandBehavior' commandTimeout' transaction' outputParameters); " is 130.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,QueryOntoListSql,The length of the statement  "	return connection.InsertListSql (sql' onto' parameters' commandBehavior' commandTimeout' transaction' outputParameters); " is 120.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,BulkCopy,The length of the statement  "		throw new ArgumentException (String.Format (CultureInfo.InvariantCulture' "BulkCopyOption {0} is not supported for this provider"' invalidOptions)); " is 148.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ExecuteAndAutoClose,The length of the statement  "	return connection.ExecuteAndAutoClose<T> (getCommand' translate' closeConnection ? CommandBehavior.CloseConnection : CommandBehavior.Default); " is 142.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,GetObjectReader,The length of the statement  "			using (var sqlReader = connection.GetReaderSql (InsightDbProvider.For (connection).GetTableSchemaSql (connection' tableName)' commandBehavior: CommandBehavior.SchemaOnly' transaction: transaction)) " is 197.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ConvertScalar,The length of the statement  "	if ((result == null || result == DBNull.Value) && typeof(T).IsValueType && Nullable.GetUnderlyingType (typeof(T)) == null) " is 122.
Long Statement,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ConvertScalar,The length of the statement  "		throw new InvalidOperationException ("Recordset returned no rows' but ExecuteScalar is trying to return a non-nullable type."); " is 127.
Long Statement,Insight.Database,ColumnMapping,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Mapping\ColumnMapping.cs,MapColumns,The length of the statement  "	var array = Enumerable.Range (startColumn' columnCount ?? reader.FieldCount).Select (i => MapColumn (type' reader' i' overrideMapping)).ToArray (); " is 147.
Long Statement,Insight.Database,ColumnMapping,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Mapping\ColumnMapping.cs,MapColumn,The length of the statement  "		var wildcards = ClassPropInfo.GetMembersForType (type).Where (m => m.ColumnName.StartsWith ("*"' StringComparison.OrdinalIgnoreCase)).OrderBy (m => m.ColumnName).ToList (); " is 172.
Long Statement,Insight.Database,DbSerializationRule,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Serialization\DbSerializationRule.cs,GetSerializer,The length of the statement  "			throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "No custom serializer was provided for {0} on type {1}"' prop.Name' prop.Type)); " is 162.
Long Statement,Insight.Database,DbSerializationRule,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Serialization\DbSerializationRule.cs,GetSerializer,The length of the statement  "		return _cachedSerializers.GetOrAdd (prop.Serializer' serializer => (IDbObjectSerializer)System.Activator.CreateInstance (serializer)); " is 134.
Long Statement,Insight.Database,DbSerializationRule,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Serialization\DbSerializationRule.cs,EvaluateRules,The length of the statement  "	return _handlers.Select (h => h.GetSerializer (prop.Type' prop.MemberType' prop.Name)).Where (s => s != null).FirstOrDefault () ?? _defaultConfig.GetSerializer (prop.Type' prop.MemberType' prop.Name); " is 200.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The length of the statement  "	((Action<T1' T2' T3' T4' T5>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]); " is 125.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The length of the statement  "	((Action<T1' T2' T3' T4' T5' T6>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]); " is 146.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The length of the statement  "	((Action<T1' T2' T3' T4' T5' T6' T7>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]); " is 167.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The length of the statement  "	((Action<T1' T2' T3' T4' T5' T6' T7' T8>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]); " is 188.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The length of the statement  "	((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]); " is 209.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,GetGuardianReader,The length of the statement  "		Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10> innerCallback = (Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>)Callback; " is 122.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The length of the statement  "	((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]); " is 232.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,GetGuardianReader,The length of the statement  "		Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11> innerCallback = (Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>)Callback; " is 132.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The length of the statement  "	((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]); " is 256.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,GetGuardianReader,The length of the statement  "		Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12> innerCallback = (Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>)Callback; " is 142.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,GetGuardianReader,The length of the statement  "	return new OneToOne<TGuardian' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12> (callback' ColumnOverrides' SplitColumns); " is 124.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The length of the statement  "	((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]); " is 280.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,GetGuardianReader,The length of the statement  "		Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13> innerCallback = (Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>)Callback; " is 152.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,GetGuardianReader,The length of the statement  "	return new OneToOne<TGuardian' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13> (callback' ColumnOverrides' SplitColumns); " is 129.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The length of the statement  "	((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]); " is 304.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,GetGuardianReader,The length of the statement  "		Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14> innerCallback = (Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>)Callback; " is 162.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,GetGuardianReader,The length of the statement  "	return new OneToOne<TGuardian' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14> (callback' ColumnOverrides' SplitColumns); " is 134.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The length of the statement  "	((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]); " is 328.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,GetGuardianReader,The length of the statement  "		Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15> innerCallback = (Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>)Callback; " is 172.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,GetGuardianReader,The length of the statement  "	return new OneToOne<TGuardian' T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15> (callback' ColumnOverrides' SplitColumns); " is 139.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The length of the statement  "	((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]); " is 352.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The length of the statement  "	((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]' (T16)objects [15]); " is 376.
Long Statement,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,MapColumn,The length of the statement  "	var match = ColumnOverrides.SingleOrDefault (t => (t.TargetType == null || t.TargetType == type) && String.Compare (t.ColumnName' columnName' StringComparison.OrdinalIgnoreCase) == 0); " is 184.
Long Statement,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,ThenChildren,The length of the statement  "	return previous.AddChild (new Children<TRoot' TChild' TId> (recordReader' new ChildMapper<TRoot' TParent' TChild' TId> (parents' id' into))); " is 141.
Long Statement,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,ThenChildren,The length of the statement  "	return previous.AddChild (new Children<TRoot' TChild' TId> (recordReader' new ChildMapper<TRoot' TParent' TChild' TId> (parents' id' into))); " is 141.
Long Statement,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,ThenChildren,The length of the statement  "	return previous.AddChild (new Children<TRoot' TChild' TId> (recordReader.GroupByAuto<TParent' TId> ()' new ChildMapper<TRoot' TParent' TChild' TId> (parents' id' into))); " is 170.
Long Statement,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,ThenChildren,The length of the statement  "	return previous.AddChild (new Children<TRoot' TChild' TId> (recordReader' new ChildMapper<TRoot' TParent' TChild' TId> (parents' id' into))); " is 141.
Long Statement,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,Then,The length of the statement  "	return new ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16> (previous' recordReader); " is 121.
Long Statement,Insight.Database,JsonObjectSerializer,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Serialization\JsonObjectSerializer.cs,SerializeObject,The length of the statement  "				throw new InvalidOperationException(".NET 3.5 does not have a built-in JSON serializer. Please add Insight.Database.Json to your project and call Initialize.");" is 160.
Long Statement,Insight.Database,JsonObjectSerializer,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Serialization\JsonObjectSerializer.cs,DeserializeObject,The length of the statement  "				throw new InvalidOperationException(".NET 3.5 does not have a built-in JSON serializer. Please add Insight.Database.Json to your project and call Initialize.");" is 160.
Long Statement,Insight.Database,Results,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Results.generated.cs,ReadAsync,The length of the statement  "	return ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>.Default.ReadAsync (command' this' reader' cancellationToken); " is 123.
Long Statement,Insight.Database,Results,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Results.generated.cs,ReadAsync,The length of the statement  "	return ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>.Default.ReadAsync (command' this' reader' cancellationToken); " is 128.
Long Statement,Insight.Database,Results,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Results.generated.cs,ReadAsync,The length of the statement  "	return ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>.Default.ReadAsync (command' this' reader' cancellationToken); " is 133.
Long Statement,Insight.Database,Results,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Results.generated.cs,ReadAsync,The length of the statement  "	return ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>.Default.ReadAsync (command' this' reader' cancellationToken); " is 138.
Long Statement,Insight.Database,Results,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Results.generated.cs,ReadAsync,The length of the statement  "	return ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>.Default.ReadAsync (command' this' reader' cancellationToken); " is 143.
Long Statement,Insight.Database,Results,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Results.generated.cs,ReadAsync,The length of the statement  "	return ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>.Default.ReadAsync (command' this' reader' cancellationToken); " is 148.
Long Statement,Insight.Database,Results,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Results.generated.cs,Read,The length of the statement  "	ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>.Default.Read (command' this' reader); " is 122.
Long Statement,Insight.Database,Results,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Results.generated.cs,ReadAsync,The length of the statement  "	return ResultsReader<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>.Default.ReadAsync (command' this' reader' cancellationToken); " is 153.
Long Statement,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,DoInvokeMember,The length of the statement  "	// NOTE: this is intentionally case-sensitive so that you can use other cases if you need to pass a parameter by the same name. " is 127.
Long Statement,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,DoInvokeMember,The length of the statement  "		// if there is exactly one unnamed parameter' and the named parameters are all special parameters' and it's a reference type (and not a string) " is 143.
Long Statement,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,DoInvokeMember,The length of the statement  "		if (unnamedParameterCount == 1 && (callInfo.ArgumentNames.Count == specialParameters) && !args [0].GetType ().IsValueType && args [0].GetType () != typeof(String)) { " is 165.
Long Statement,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,DoInvokeMember,The length of the statement  "			var inputParameters = cmd.Parameters.OfType<IDataParameter> ().Where (p => p.Direction.HasFlag (ParameterDirection.Input)).ToList (); " is 133.
Long Statement,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,DoInvokeMember,The length of the statement  "				if (argumentName == "cancellationToken" || argumentName == "transaction" || argumentName == "commandTimeout" || argumentName == "returnType" || argumentName == "returns" || argumentName == "outputParameters") " is 208.
Long Statement,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,DoInvokeMember,The length of the statement  "				IDataParameter p = cmd.Parameters.OfType<IDataParameter> ().First (parameter => String.Equals (parameter.ParameterName' argumentName' StringComparison.OrdinalIgnoreCase)); " is 171.
Long Statement,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,DoInvokeMember,The length of the statement  "			foreach (var p in cmd.Parameters.OfType<IDataParameter> ().Where (p => provider.IsTableValuedParameter (cmd' p)).ToList ()) { " is 125.
Long Statement,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,DoInvokeMember,The length of the statement  "					throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Table parameter {0} must be specified"' p.ParameterName)); " is 141.
Long Statement,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,DoInvokeMember,The length of the statement  "				returns = (IQueryReader)returnType.GetMethod ("GetReader"' BindingFlags.Public | BindingFlags.Static).Invoke (null' Parameters.EmptyArray); " is 139.
Long Statement,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,DoInvokeMember,The length of the statement  "				returns = (IQueryReader)typeof(ListReader<>).MakeGenericType (returnType).GetField ("Default"' BindingFlags.Static | BindingFlags.Public).GetValue (null); " is 154.
Long Statement,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,DoInvokeMember,The length of the statement  "		// get the proper query method to call based on whether we are doing this async and whether there is a single or multiple result set " is 132.
Long Statement,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,DoInvokeMember,The length of the statement  "		// the nice thing is that the generic expansion will automatically create the proper return type like IList<T> or Results<T>. " is 125.
Long Statement,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,CallQuery,The length of the statement  "	var method = _queryMethods.GetOrAdd (queryReader.ReturnType' t => (Func<IDbCommand' IQueryReader' CommandBehavior' object' object>)Delegate.CreateDelegate (typeof(Func<IDbCommand' IQueryReader' CommandBehavior' object' object>)' typeof(DBCommandExtensions).GetMethod ("QueryCoreUntyped"' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod (t))); " is 358.
Long Statement,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,CallQueryAsync,The length of the statement  "	var method = _queryAsyncMethods.GetOrAdd (queryReader.ReturnType' t => (Func<IDbCommand' IQueryReader' CommandBehavior' CancellationToken' object' object>)Delegate.CreateDelegate (typeof(Func<IDbCommand' IQueryReader' CommandBehavior' CancellationToken' object' object>)' typeof(DBConnectionExtensions).GetMethod ("QueryCoreAsyncUntyped"' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod (t))); " is 409.
Long Statement,Insight.Database,FastExpando,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Expando\FastExpando.cs,WithoutNulls,The length of the statement  "		if (pair.Value == null && (fields == null || fields.Any (f => String.Compare (pair.Key' f' StringComparison.OrdinalIgnoreCase) == 0))) " is 134.
Long Statement,Insight.Database,ColumnAttribute,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Mapping\ColumnAttribute.cs,GetCustomAttributeBuilder,The length of the statement  "	return new CustomAttributeBuilder (typeof(ColumnAttribute).GetConstructor (Type.EmptyTypes)' Parameters.EmptyArray' properties' values); " is 136.
Long Statement,Insight.Database.CodeGenerator,ColumnInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ColumnInfo.cs,FromDataReader,The length of the statement  "			IsNullable = (isNullableColumn == -1) ? false : row.IsNull (isNullableColumn) ? false : Convert.ToBoolean (row [isNullableColumn]' CultureInfo.InvariantCulture)' " is 161.
Long Statement,Insight.Database.CodeGenerator,ColumnInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ColumnInfo.cs,FromDataReader,The length of the statement  "			IsReadOnly = (isReadOnlyColumn == -1) ? false : row.IsNull (isReadOnlyColumn) ? false : Convert.ToBoolean (row [isReadOnlyColumn]' CultureInfo.InvariantCulture)' " is 161.
Long Statement,Insight.Database.CodeGenerator,ColumnInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ColumnInfo.cs,FromDataReader,The length of the statement  "			IsIdentity = (isIdentityColumn == -1) ? false : row.IsNull (isIdentityColumn) ? false : Convert.ToBoolean (row [isIdentityColumn]' CultureInfo.InvariantCulture)' " is 161.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateDeserializer,The length of the statement  "		throw new ArgumentException ("The top-level type of the object graph must match the return type of the object."' "structure"); " is 126.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateDeserializer,The length of the statement  "		return CreateClassDeserializer (type' reader' structure' 0' (reader.IsClosed) ? 0 : reader.FieldCount' mappingType.HasFlag (SchemaMappingType.NewObject)); " is 154.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateDeserializer,The length of the statement  "	// we can't deserialize an object graph in an insert/merge because we don't know whether to create subobjects or leave them null. " is 129.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateDeserializer,The length of the statement  "		throw new ArgumentException ("mappingType must be set to NewObject when deserializing an object graph."' "mappingType"); " is 120.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateDeserializer,The length of the statement  "		return CreateGraphDeserializerWithCallback (subTypes' reader' structure' mappingType == SchemaMappingType.ExistingObject); " is 122.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateClassDeserializer,The length of the statement  "	var method = CreateClassDeserializerDynamicMethod (type' reader' structure' startColumn' columnCount' createNewObject' true' !createNewObject); " is 143.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateClassDeserializerDynamicMethod,The length of the statement  "	var dm = new DynamicMethod (String.Format (CultureInfo.InvariantCulture' "Deserialize-{0}-{1}"' type.FullName' Guid.NewGuid ())' type' createNewObject ? new[] { " is 160.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,SelectConstructor,The length of the statement  "	var constructor = allConstructors.SingleOrDefault (c => c.GetCustomAttributes (true).OfType<SqlConstructorAttribute> ().Any ()); " is 128.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,SelectConstructor,The length of the statement  "		constructor = type.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null); " is 134.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,SelectConstructor,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Cannot find a default constructor for type {0}' and there was more than one constructor' but no DbConstructorAttribute was specified."' type.FullName)); " is 235.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateGraphDeserializer,The length of the statement  "	var dm = new DynamicMethod (String.Format (CultureInfo.InvariantCulture' "Deserialize-{0}-{1}"' type.FullName' Guid.NewGuid ())' type' new[] { " is 142.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateGraphDeserializer,The length of the statement  "		// if we don't have a callback' then we are going to store the value directly into the field on T or one of the subobjects " is 122.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateGraphDeserializer,The length of the statement  "			setMethod = GetFirstMatchingMethod (ClassPropInfo.GetMembersForType (subTypes [parent]).Where (m => m.CanSetMember)' subTypes [i]); " is 131.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateGraphDeserializer,The length of the statement  "				var getMethod = GetFirstMatchingMethod (ClassPropInfo.GetMembersForType (subTypes [p]).Where (m => m.CanGetMember && m.CanSetMember)' subTypes [p + 1]); " is 152.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateGraphDeserializer,The length of the statement  "					throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "In order to deserialize sub-objects' {0} must have a get/set method for type {1}"' subTypes [p].FullName' subTypes [p + 1].FullName)); " is 217.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateGraphDeserializer,The length of the statement  "				throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Cannot find set method for type {0} into type {1}"' subTypes [i].FullName' subTypes [0].FullName)); " is 182.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,GetFirstMatchingMethod,The length of the statement  "	// NOTE: for a subtype match' we can't bind to object' it's not specific enough' it also prevents Guardian<T> from working " is 122.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,GetFirstMatchingMethod,The length of the statement  "	return properties.FirstOrDefault (s => type == s.MemberType) ?? properties.Where (p => p.MemberType != typeof(object)).FirstOrDefault (s => type.IsSubclassOf (s.MemberType)); " is 174.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateGraphDeserializerWithCallback,The length of the statement  "	var dm = new DynamicMethod (String.Format (CultureInfo.InvariantCulture' "Deserialize-{0}-{1}"' type.FullName' Guid.NewGuid ())' type' new[] { " is 142.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateDeserializersForSubObjects,The length of the statement  "			deserializers [i] = CreateClassDeserializerDynamicMethod (subType' reader' structure' column' endColumn - column' true' (i == 0)' (i == 0) && allowBindChild); " is 158.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateValueDeserializer,The length of the statement  "	var dm = new DynamicMethod (String.Format (CultureInfo.InvariantCulture' "Deserialize-{0}-{1}"' type.FullName' Guid.NewGuid ())' type' new[] { " is 142.
Long Statement,Insight.Database.CodeGenerator,ClassDeserializerGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassDeserializerGenerator.cs,CreateValueDeserializer,The length of the statement  "	il.Emit (OpCodes.Call' typeof(ClassDeserializerGenerator).GetMethod ("DBValueToT"' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod (type)); " is 155.
Long Statement,Insight.Database.CodeGenerator,ClassPropInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassPropInfo.cs,GetMappingForType,The length of the statement  "	return new Dictionary<string' ClassPropInfo> (_mappingCache.GetOrAdd (type' t => GetMembersForType (type).ToDictionary (p => p.ColumnName))); " is 141.
Long Statement,Insight.Database.CodeGenerator,ClassPropInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassPropInfo.cs,GetMembersForType,The length of the statement  "			foreach (var p in t.GetProperties (DefaultBindingFlags).Select (m => new ClassPropInfo (m)).Union (t.GetFields (DefaultBindingFlags).Select (m => new ClassPropInfo (m))).OrderBy (m => !m.ColumnNameIsOverridden).ThenBy (m => (m.FieldInfo == null) ? 0 : 1)) { " is 257.
Long Statement,Insight.Database.CodeGenerator,ClassPropInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassPropInfo.cs,GetMembersForType,The length of the statement  "				var match = members.FirstOrDefault (m => String.Compare (m.ColumnName' p.ColumnName' StringComparison.OrdinalIgnoreCase) == 0) ?? members.FirstOrDefault (m => String.Compare (m.Name' p.Name' StringComparison.OrdinalIgnoreCase) == 0); " is 233.
Long Statement,Insight.Database.CodeGenerator,ClassPropInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassPropInfo.cs,EmitGetValue,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Cannot find a GetProperty method for {1} on class {0}."' Type.FullName' Name)); " is 162.
Long Statement,Insight.Database.CodeGenerator,ClassPropInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassPropInfo.cs,EmitSetValue,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Cannot find a SetProperty method for {1} on class {0}."' Type.FullName' Name)); " is 162.
Long Statement,Insight.Database.CodeGenerator,ClassPropInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassPropInfo.cs,CreateGetMethod,The length of the statement  "	var dm = new DynamicMethod (String.Format (CultureInfo.InvariantCulture' "Get-{0}-{1}-{2}"' typeof(TObject).FullName' Name' Guid.NewGuid ())' typeof(TValue)' new Type[] { " is 170.
Long Statement,Insight.Database.CodeGenerator,ClassPropInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassPropInfo.cs,CreateSetMethod,The length of the statement  "	var dm = new DynamicMethod (String.Format (CultureInfo.InvariantCulture' "Set-{0}-{1}-{2}"' typeof(TObject).FullName' Name' Guid.NewGuid ())' null' new Type[] { " is 160.
Long Statement,Insight.Database.CodeGenerator,ClassPropInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassPropInfo.cs,CreateSetMethod,The length of the statement  "			var firstOrDefault = typeof(System.Linq.Enumerable).GetMethods ().Single (m => m.Name == "FirstOrDefault" && m.GetParameters ().Length == 1).MakeGenericMethod (MemberType); " is 172.
Long Statement,Insight.Database.CodeGenerator,ClassPropInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassPropInfo.cs,GetMemberByColumnName,The length of the statement  "	return members.SingleOrDefault (m => String.Compare (m.ColumnName' columnName' StringComparison.OrdinalIgnoreCase) == 0); " is 121.
Long Statement,Insight.Database.CodeGenerator,ClassPropInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassPropInfo.cs,EmitGetValue,The length of the statement  "			throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Get method {0} not found on {1}"' member' type)); " is 132.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,CreateImplementorOf,The length of the statement  "	FieldBuilder connectionField = tb.DefineField ("_connection"' singleThreaded ? typeof(IDbConnection) : typeof(Func<IDbConnection>)' FieldAttributes.Private); " is 157.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,CreateImplementorOf,The length of the statement  "	MethodBuilder m = tb.DefineMethod ("Create"' MethodAttributes.Static | MethodAttributes.Public' type' _ifuncDbConnectionParameterTypes); " is 136.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,CreateImplementorOf,The length of the statement  "		return (Func<Func<IDbConnection>' object>)Delegate.CreateDelegate (typeof(Func<Func<IDbConnection>' object>)' createMethod); " is 124.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,CreateImplementorOf,The length of the statement  "			var template = "{1} {0} is inaccessible to Insight.Database. Make sure that the interface is public' or add " + "[assembly:InternalsVisibleTo(\"Insight.Database.DynamicAssembly\")] " + "to your assembly (System.Runtime.CompilerServices).  If the interface is nested' then it must be public to the world' " + "or public to the assembly while using the InternalsVisibleTo attribute. " + "Interfaces intended to be used AsParallel should not derive from IDbConnection or IDbTransaction."; " is 485.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,EmitConstructor,The length of the statement  "	var ctor0 = tb.DefineConstructor (MethodAttributes.Public' CallingConventions.Standard' _ifuncDbConnectionParameterTypes); " is 122.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,EmitConstructor,The length of the statement  "	var baseConstructor = tb.BaseType.GetConstructor (BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance' null' baseConstructorParameters' null) ?? tb.BaseType.GetConstructor (BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance' null' Type.EmptyTypes' null); " is 289.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,EmitConstructor,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "{0} cannot be implemented Insight.Database. Make sure that the class has a default constructor' or another constructor that Insight can call."' tb.BaseType.FullName)); " is 250.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,EmitGetConnection,The length of the statement  "	var getConnection = baseType.GetMethods (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).FirstOrDefault (m => String.Compare (m.Name' GetConnectionName' StringComparison.OrdinalIgnoreCase) == 0 && m.ReturnType == typeof(IDbConnection) && m.GetParameters ().Length == 0); " is 292.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,DiscoverMethods,The length of the statement  "		return type.GetMethods (BindingFlags.Public | BindingFlags.Instance | BindingFlags.InvokeMethod).Union (type.GetInterfaces ().Where (i => !i.FullName.StartsWith ("System"' StringComparison.OrdinalIgnoreCase)).SelectMany (i => DiscoverMethods (i))); " is 248.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,DiscoverMethods,The length of the statement  "		return type.GetMethods (BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.InvokeMethod).Where (m => m.IsAbstract); " is 148.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,EmitMethodImpl,The length of the statement  "	var sqlAttribute = interfaceMethod.GetCustomAttributes (false).OfType<SqlAttribute> ().FirstOrDefault () ?? new SqlAttribute (); " is 128.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,EmitMethodImpl,The length of the statement  "	var typeSqlAttribute = interfaceMethod.DeclaringType.GetCustomAttributes (false).OfType<SqlAttribute> ().FirstOrDefault () ?? new SqlAttribute (); " is 146.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,EmitMethodImpl,The length of the statement  "	var procName = (executeMethod.DeclaringType == typeof(DBConnectionExtensions)) ? Regex.Replace (interfaceMethod.Name' "Async$"' String.Empty' RegexOptions.IgnoreCase) : interfaceMethod.Name; " is 190.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,EmitMethodImpl,The length of the statement  "	var commandType = sqlAttribute.CommandType ?? typeSqlAttribute.CommandType ?? (sql.Contains (' ') ? CommandType.Text : CommandType.StoredProcedure); " is 148.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,EmitMethodImpl,The length of the statement  "			throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Cannot determine how to generate parameter {1} for method {0}"' executeMethod.Name' executeParameters [i].Name)); " is 196.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The length of the statement  "	var returnsAttributes = interfaceMethod.GetCustomAttributes (true).OfType<RecordsetAttribute> ().ToDictionary (r => r.Index); " is 125.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The length of the statement  "	if (returnType.IsSubclassOf (typeof(Results)) && !returnType.Name.StartsWith ("Results`"' StringComparison.OrdinalIgnoreCase)) { " is 128.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The length of the statement  "			mIL.Emit (OpCodes.Ldsfld' Query.GetOneToOneType (types).GetField ("Records"' BindingFlags.Public | BindingFlags.Static)); " is 121.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The length of the statement  "					var method = typeof(Query).GetMethod ("ReturnsResults"' BindingFlags.Public | BindingFlags.Static).MakeGenericMethod (types [0]); " is 129.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The length of the statement  "				var listMethod = typeof(ClassPropInfo).GetMethod ("CreateSetMethod").MakeGenericMethod (parentType' typeof(List<>).MakeGenericType (childType)).Invoke (list' Parameters.EmptyArray); " is 181.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The length of the statement  "					method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 2 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name).MakeGenericMethod (new Type[] { " is 285.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The length of the statement  "					var parentIdMethod = parentid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (parentType' parentIdType).Invoke (parentid' Parameters.EmptyArray); " is 157.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The length of the statement  "							throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Cannot find GroupBy {0} on {1}"' r.GroupBy' childType.FullName)); " is 148.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The length of the statement  "						var getMethod = childid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (childType' parentIdType).Invoke (childid' Parameters.EmptyArray); " is 149.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The length of the statement  "					method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 3 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name && mi.GetParameters () [1].ParameterType.Name == recordReaderType.Name && mi.GetParameters ().Any (p => String.Compare (p.Name' "id"' StringComparison.OrdinalIgnoreCase) == 0)).MakeGenericMethod (new Type[] { " is 461.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The length of the statement  "				var method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "Then" && mi.GetGenericArguments ().Length == returnIndex && mi.GetParameters () [0].ParameterType.Name.StartsWith ("IQueryReader"' StringComparison.OrdinalIgnoreCase)).MakeGenericMethod (returnTypeArgs.Take (returnIndex).ToArray ()); " is 341.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,IsMethodAnUpsert,The length of the statement  "	return (method.Name.StartsWith ("Insert"' StringComparison.OrdinalIgnoreCase) || method.Name.StartsWith ("Update"' StringComparison.OrdinalIgnoreCase) || method.Name.StartsWith ("Upsert"' StringComparison.OrdinalIgnoreCase)); " is 225.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,CreateParameterClass,The length of the statement  "	var bindAttribute = (BindChildrenAttribute)method.GetCustomAttributes (typeof(BindChildrenAttribute)' true).FirstOrDefault () ?? new BindChildrenAttribute (); " is 158.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,CreateParameterClass,The length of the statement  "	ConstructorBuilder ctor = tb.DefineConstructor (MethodAttributes.Public' CallingConventions.Standard' parameters.Select (p => p.ParameterType).ToArray ()); " is 155.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,IsGenericListType,The length of the statement  "	return generic == typeof(IList<>) || generic == typeof(List<>) || generic == typeof(IEnumerable<>) || generic == typeof(ICollection<>); " is 135.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,EmitSpecialParameter,The length of the statement  "	var interfaceParameter = interfaceParameters.FirstOrDefault (p => String.Compare (p.Name' parameterName' StringComparison.OrdinalIgnoreCase) == 0); " is 147.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,EmitSpecialParameter,The length of the statement  "	var executeParameter = executeParameters.FirstOrDefault (p => String.Compare (p.Name' parameterName' StringComparison.OrdinalIgnoreCase) == 0); " is 143.
Long Statement,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,EmitSpecialParameter,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Special Parameter {0} must have type {1}"' parameterName' executeParameter.ParameterType.FullName)); " is 183.
Long Statement,Insight.Database.CodeGenerator,ObjectReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ObjectReader.cs,GenerateAccessor,The length of the statement  "	var dm = new DynamicMethod (string.Format (CultureInfo.InvariantCulture' "GetValue-{0}-{1}"' type.FullName' Guid.NewGuid ())' typeof(object)' new[] { " is 149.
Long Statement,Insight.Database.CodeGenerator,ObjectReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ObjectReader.cs,GenerateAccessor,The length of the statement  "	bool canSerialize = sourceType != typeof(string) && mapping.Serializer.GetType () != typeof(ToStringObjectSerializer) && mapping.Serializer.CanSerialize (sourceType' targetDbType); " is 180.
Long Statement,Insight.Database.CodeGenerator,ObjectReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ObjectReader.cs,GenerateAccessor,The length of the statement  "		il.Emit (OpCodes.Call' typeof(ObjectReader).GetMethod ("SerializeObject"' BindingFlags.NonPublic | BindingFlags.Static)); " is 121.
Long Statement,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateClassInputParameterGenerator,The length of the statement  "	var enumerable = type.GetInterfaces ().FirstOrDefault (i => i.IsGenericType && i.GetGenericTypeDefinition () == typeof(IEnumerable<>)); " is 135.
Long Statement,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateClassInputParameterGenerator,The length of the statement  "	if (enumerable != null && type != typeof(string) && parameters.OfType<IDataParameter> ().Where (p => p.Direction.HasFlag (ParameterDirection.Input)).Count () == 1) { " is 165.
Long Statement,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateClassInputParameterGenerator,The length of the statement  "			var tableParameter = InsightDbProvider.For (cmd).CloneParameter (cmd' parameters.OfType<IDataParameter> ().Single (p => p.Direction.HasFlag (ParameterDirection.Input))); " is 169.
Long Statement,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateClassInputParameterGenerator,The length of the statement  "	var dm = new DynamicMethod (String.Format (CultureInfo.InvariantCulture' "CreateInputParameters-{0}"' Guid.NewGuid ())' null' new[] { " is 133.
Long Statement,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateClassInputParameterGenerator,The length of the statement  "	il.Emit (OpCodes.Call' typeof(InsightDbProvider).GetMethod ("CopyParameters"' BindingFlags.NonPublic | BindingFlags.Instance)); " is 127.
Long Statement,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateClassInputParameterGenerator,The length of the statement  "				throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Table parameter {0} must be specified"' dbParameter.ParameterName)); " is 151.
Long Statement,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateClassInputParameterGenerator,The length of the statement  "			il.Emit (OpCodes.Call' typeof(ListParameterHelper).GetMethod ("ConvertListParameter"' BindingFlags.Static | BindingFlags.NonPublic)); " is 133.
Long Statement,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateClassInputParameterGenerator,The length of the statement  "		if ((sqlType == DbType.Time && dbParameter.DbType != DbType.Time) || (dbParameter.DbType == DbType.DateTime || dbParameter.DbType == DbType.DateTime2 || dbParameter.DbType == DbType.DateTimeOffset)) { " is 200.
Long Statement,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateClassInputParameterGenerator,The length of the statement  "			il.Emit (OpCodes.Call' typeof(DbParameterGenerator).GetMethod ("SerializeParameterValue"' BindingFlags.NonPublic | BindingFlags.Static)); " is 137.
Long Statement,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateClassInputParameterGenerator,The length of the statement  "			il.Emit (OpCodes.Call' typeof(DbParameterGenerator).GetMethod ("SetParameterStringValue"' BindingFlags.NonPublic | BindingFlags.Static)); " is 137.
Long Statement,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateClassInputParameterGenerator,The length of the statement  "		else if ((memberType == typeof(Guid?) || (memberType == typeof(Guid))) && dbParameter.DbType != DbType.Guid && command.CommandType == CommandType.StoredProcedure) " is 162.
Long Statement,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateClassInputParameterGenerator,The length of the statement  "			il.Emit (OpCodes.Call' typeof(DbParameterGenerator).GetMethod ("SetParameterGuidValue"' BindingFlags.NonPublic | BindingFlags.Static)); " is 135.
Long Statement,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateClassOutputParameterConverter,The length of the statement  "	var dm = new DynamicMethod (String.Format (CultureInfo.InvariantCulture' "CreateOutputParameters-{0}"' Guid.NewGuid ())' null' new[] { " is 134.
Long Statement,Insight.Database.CodeGenerator,DbReaderDeserializer,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbReaderDeserializer.cs,GetDeserializerWithCallback,The length of the statement  "	return (Func<IDataReader' Action<object[]>' T>)GetDeserializer (reader' typeof(T)' structure' SchemaMappingType.NewObjectWithCallback); " is 135.
Long Statement,Insight.Database.CodeGenerator,DbReaderDeserializer,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbReaderDeserializer.cs,GetDeserializer,The length of the statement  "	// since these types are single column types' deserializing these types do not depend on the schema that comes back from the database " is 133.
Long Statement,Insight.Database.CodeGenerator,DbReaderDeserializer,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbReaderDeserializer.cs,GetDeserializer,The length of the statement  "	return _deserializers.GetOrAdd (identity' key => ClassDeserializerGenerator.CreateDeserializer (reader' type' structure' mappingType)); " is 135.
Long Statement,Insight.Database.CodeGenerator,DbReaderDeserializer,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbReaderDeserializer.cs,CreateValueDeserializer,The length of the statement  "	// But since IsDbNull isn't as trivial as you would think' performance tests show that there is a little bit of extra overhead making that extra call. " is 150.
Long Statement,Insight.Database.CodeGenerator,DbReaderDeserializer,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbReaderDeserializer.cs,CreateValueDeserializer,The length of the statement  "	// NOTE: this also just used to be a lambda expression in a generic method' but getting rid of the generic lets us make more flexible code. " is 139.
Long Statement,Insight.Database.CodeGenerator,DbReaderDeserializer,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbReaderDeserializer.cs,CreateValueDeserializer,The length of the statement  "	var dm = new DynamicMethod (String.Format (CultureInfo.InvariantCulture' "Deserialize-{0}-{1}"' type.FullName' Guid.NewGuid ())' type' new[] { " is 142.
Long Statement,Insight.Database.CodeGenerator,ExpandoGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ExpandoGenerator.cs,CreateConverter,The length of the statement  "	var dm = new DynamicMethod (String.Format (CultureInfo.InvariantCulture' "ExpandoGenerator-{0}"' type.FullName)' typeof(FastExpando)' new[] { " is 141.
Long Statement,Insight.Database.CodeGenerator,TypeConverterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\TypeConverterGenerator.cs,EmitConvertValue,The length of the statement  "		il.Emit (OpCodes.Call' typeof(TypeConverterGenerator).GetMethod ("DeserializeObject"' BindingFlags.NonPublic | BindingFlags.Static)); " is 133.
Long Statement,Insight.Database.CodeGenerator,TypeConverterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\TypeConverterGenerator.cs,EmitConvertValue,The length of the statement  "					throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Field {0} cannot be converted from {1} to {2}. Create a conversion constructor or conversion operator."' memberName' sourceType.AssemblyQualifiedName' targetType.AssemblyQualifiedName)); " is 269.
Long Statement,Insight.Database.CodeGenerator,TypeConverterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\TypeConverterGenerator.cs,CreateDataException,The length of the statement  "	return new DataException (string.Format (CultureInfo.InvariantCulture' "Error parsing column {0} ({1}={2})"' index' name' value)' ex); " is 134.
Long Statement,Insight.Database.CodeGenerator,TypeConverterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\TypeConverterGenerator.cs,EmitConversionOrCoersion,The length of the statement  "	Type rawTargetType = underlyingTargetType.IsEnum ? Enum.GetUnderlyingType (underlyingTargetType) : underlyingTargetType; " is 120.
Long Statement,Insight.Database.CodeGenerator,TypeConverterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\TypeConverterGenerator.cs,EmitConstructorConversion,The length of the statement  "	ConstructorInfo ci = targetType.GetConstructor (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' new Type[] { " is 136.
Long Statement,Insight.Database.CodeGenerator,TypeConverterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\TypeConverterGenerator.cs,FindConversionMethod,The length of the statement  "	MethodInfo mi = FindConversionMethod ("op_Explicit"' targetType' sourceType' targetType) ?? FindConversionMethod ("op_Implicit"' targetType' sourceType' targetType) ?? FindConversionMethod ("op_Explicit"' sourceType' sourceType' targetType) ?? FindConversionMethod ("op_Implicit"' sourceType' sourceType' targetType); " is 317.
Long Statement,Insight.Database.CodeGenerator,TypeConverterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\TypeConverterGenerator.cs,FindConversionMethod,The length of the statement  "	var members = searchType.FindMembers (MemberTypes.Method' BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic' new MemberFilter ((_m' filter) => { " is 161.
Long Statement,Insight.Database.CodeGenerator,ObjectListDbDataReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ObjectListDbDataReader.cs,Read,The length of the statement  "			throw new InvalidOperationException ("Cannot send a list of objects to a table-valued parameter when the list contains a null value"); " is 134.
Long Statement,Insight.Database.Reliable,ReliableCommand,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Reliable\ReliableCommand.cs,ExecuteDbDataReaderAsync,The length of the statement  "		return InnerConnection.EnsureIsOpenAsync (cancellationToken).ContinueWith (_ => InnerCommand.ExecuteReaderAsync (behavior' cancellationToken)' cancellationToken).Unwrap (); " is 172.
Long Statement,Insight.Database.Reliable,ReliableCommand,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Reliable\ReliableCommand.cs,ExecuteNonQueryAsync,The length of the statement  "		return InnerConnection.EnsureIsOpenAsync (cancellationToken).ContinueWith (_ => InnerCommand.ExecuteNonQueryAsync (cancellationToken)' cancellationToken).Unwrap (); " is 164.
Long Statement,Insight.Database.Reliable,ReliableCommand,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Reliable\ReliableCommand.cs,ExecuteScalarAsync,The length of the statement  "	return ExecuteWithRetryAsync (() => InnerConnection.EnsureIsOpenAsync (cancellationToken).ContinueWith (_ => InnerCommand.ExecuteScalarAsync (cancellationToken)' cancellationToken).Unwrap ()); " is 192.
Long Statement,Insight.Database.Serialization,BooleanSerializer,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Serialization\BooleanSerializer.cs,DeserializeObject,The length of the statement  "	throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Value {0} could not be converted to bool."' encoded)); " is 137.
Long Statement,Insight.Database.Mapping,MappingCollection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Mapping\MappingCollection.cs,CanBindChild,The length of the statement  "		var bindAttribute = type.GetCustomAttributes (typeof(BindChildrenAttribute)' true).OfType<BindChildrenAttribute> ().FirstOrDefault (); " is 134.
Long Statement,Insight.Database.Structure,ChildMapperHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ChildMapperHelper.cs,GetIDAccessor,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Cannot find a way to get the ID from {0}. Please add a hint."' type)); " is 153.
Long Statement,Insight.Database.Structure,ChildMapperHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ChildMapperHelper.cs,FindParentIDAccessor,The length of the statement  "	return FindIDAccessor<ParentRecordIdAttribute> (type' names' DefaultParentIDField) ?? InferParentIDAccessorFromParentClass (type' parentType); " is 142.
Long Statement,Insight.Database.Structure,ChildMapperHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ChildMapperHelper.cs,GetListSetter,The length of the statement  "			throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Set Member {0} not found on type {1}"' name' parentType.FullName)); " is 150.
Long Statement,Insight.Database.Structure,ChildMapperHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ChildMapperHelper.cs,GetListSetter,The length of the statement  "	member = listMembers.SingleOrDefault (m => m.MemberInfo.GetCustomAttributes (true).OfType<ChildRecordsAttribute> ().Any ()); " is 124.
Long Statement,Insight.Database.Structure,ChildMapperHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ChildMapperHelper.cs,GetListSetter,The length of the statement  "	member = listMembers.SingleOrDefault (m => m.SetMethodInfo != null) ?? listMembers.SingleOrDefault (m => m.FieldInfo != null); " is 126.
Long Statement,Insight.Database.Structure,ChildMapperHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ChildMapperHelper.cs,GetListSetter,The length of the statement  "	member = childTypeMembers.SingleOrDefault (m => m.SetMethodInfo != null) ?? childTypeMembers.SingleOrDefault (m => m.FieldInfo != null); " is 136.
Long Statement,Insight.Database.Structure,ChildMapperHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ChildMapperHelper.cs,GetListSetter,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Cannot find a way to set a list of {0} into {1}. Please add a hint."' childType' parentType)); " is 177.
Long Statement,Insight.Database.Structure,ChildMapperHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ChildMapperHelper.cs,IsGenericListType,The length of the statement  "	return type == typeof(IList<>) || type == typeof(List<>) || type == typeof(IEnumerable<>) || type == typeof(ICollection<>); " is 123.
Long Statement,Insight.Database.Structure,ChildMapperHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ChildMapperHelper.cs,FindIDAccessor,The length of the statement  "	var taggedMembers = members.Where (m => m.MemberInfo.GetCustomAttributes (true).OfType<TAttribute> ().Any ()).ToList (); " is 120.
Long Statement,Insight.Database.Structure,ChildMapperHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ChildMapperHelper.cs,FindIDAccessor,The length of the statement  "		var ordered = taggedMembers.OrderBy (m => m.MemberInfo.GetCustomAttributes (true).OfType<TAttribute> ().Single ().Order); " is 121.
Long Statement,Insight.Database.Structure,ChildMapperHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ChildMapperHelper.cs,FindIDAccessor,The length of the statement  "	member = members.SingleOrDefault (m => m.Name.IsIEqualTo (defaultFieldName) && !parentIDFieldIsReserved) ?? members.SingleOrDefault (m => m.Name.IsIEqualTo (type.Name + "_" + defaultFieldName)) ?? members.SingleOrDefault (m => m.Name.IsIEqualTo (type.Name + defaultFieldName)) ?? members.OnlyOrDefault (m => m.Name.EndsWith ("_" + defaultFieldName' StringComparison.OrdinalIgnoreCase)) ?? members.OnlyOrDefault (m => m.Name.EndsWith (defaultFieldName' StringComparison.OrdinalIgnoreCase)); " is 489.
Long Statement,Insight.Database.Structure,ChildMapperHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ChildMapperHelper.cs,FindIDAccessorByNameList,The length of the statement  "				throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "A public get Member {0} not found on type {1}"' name' type.FullName)); " is 153.
Long Statement,Insight.Database.Structure,ChildRecordReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ChildRecordReader.cs,ReadAsync,The length of the statement  "	return reader.ToListAsync (_recordReader' cancellationToken).ContinueWith (t => _grouping (t.Result)' TaskContinuationOptions.ExecuteSynchronously); " is 148.
Long Statement,Insight.Database.Structure,IDAccessor,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\IDAccessor.cs,CreateGetMethod,The length of the statement  "		var dm = new DynamicMethod (String.Format (CultureInfo.InvariantCulture' "Get-{0}-{1}-{2}"' typeof(TObject).FullName' "IDs"' Guid.NewGuid ())' MemberType' new Type[] { " is 167.
Long Statement,Insight.Database.Structure,IDAccessor,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\IDAccessor.cs,CreateGetMethod,The length of the statement  "		var createTupleMethod = typeof(Tuple).GetMethods (BindingFlags.Static | BindingFlags.Public).Single (m => m.Name == "Create" && m.GetGenericArguments ().Length == _propInfo.Count).MakeGenericMethod (MemberType.GetGenericArguments ()); " is 234.
Long Statement,Insight.Database.Structure,ListReaderAdapter,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ListReader.cs,ReadAsync,The length of the statement  "	return ReadAsync (command' reader' ct).ContinueWith (t => (TList)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 121.
Long Statement,Insight.Database.Structure,ListReaderAdapter,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ListReader.cs,ReadAsync,The length of the statement  "	return base.ReadAsync (command' reader' ct).ContinueWith (t => (TList)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 126.
Long Statement,Insight.Database.Structure,ListReaderAdapter,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ListReader.cs,ReadAsync,The length of the statement  "	return base.ReadAsync (command' reader' ct).ContinueWith (t => (TList)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 126.
Long Statement,Insight.Database.Structure,ListReaderAdapter,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ListReader.cs,ReadAsync,The length of the statement  "	return base.ReadAsync (command' reader' ct).ContinueWith (t => (TList)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 126.
Long Statement,Insight.Database.Structure,ListReaderAdapter,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ListReader.cs,ReadAsync,The length of the statement  "	return base.ReadAsync (command' reader' ct).ContinueWith (t => (TList)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 126.
Long Statement,Insight.Database.Structure,ListReaderAdapter,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ListReader.cs,ReadAsync,The length of the statement  "	return base.ReadAsync (command' reader' ct).ContinueWith (t => (TList)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 126.
Long Statement,Insight.Database.Structure,ListReaderAdapter,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ListReader.cs,ReadAsync,The length of the statement  "	return base.ReadAsync (command' reader' ct).ContinueWith (t => (TList)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 126.
Long Statement,Insight.Database.Structure,ListReaderAdapter,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ListReader.cs,ReadAsync,The length of the statement  "	return base.ReadAsync (command' reader' ct).ContinueWith (t => (TList)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 126.
Long Statement,Insight.Database.Structure,ListReaderAdapter,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ListReader.cs,ReadAsync,The length of the statement  "	return base.ReadAsync (command' reader' ct).ContinueWith (t => (TList)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 126.
Long Statement,Insight.Database.Structure,ListReaderAdapter,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ListReader.cs,ReadAsync,The length of the statement  "	return base.ReadAsync (command' reader' ct).ContinueWith (t => (TList)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 126.
Long Statement,Insight.Database.Structure,ListReaderAdapter,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ListReader.cs,ReadAsync,The length of the statement  "	return base.ReadAsync (command' reader' ct).ContinueWith (t => (TList)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 126.
Long Statement,Insight.Database.Structure,ListReaderAdapter,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ListReader.cs,ReadAsync,The length of the statement  "	return base.ReadAsync (command' reader' ct).ContinueWith (t => (TList)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 126.
Long Statement,Insight.Database.Structure,ListReaderAdapter,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ListReader.cs,ReadAsync,The length of the statement  "	return base.ReadAsync (command' reader' ct).ContinueWith (t => (TList)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 126.
Long Statement,Insight.Database.Structure,ListReaderAdapter,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ListReader.cs,ReadAsync,The length of the statement  "	return base.ReadAsync (command' reader' ct).ContinueWith (t => (TList)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 126.
Long Statement,Insight.Database.Structure,ListReaderAdapter,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ListReader.cs,ReadAsync,The length of the statement  "	return base.ReadAsync (command' reader' ct).ContinueWith (t => (TList)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 126.
Long Statement,Insight.Database.Structure,ListReaderAdapter,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ListReader.cs,ReadAsync,The length of the statement  "	return base.ReadAsync (command' reader' ct).ContinueWith (t => (TList)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 126.
Long Statement,Insight.Database.Structure,RecordReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\RecordReader.cs,GroupByColumn,The length of the statement  "	return new ChildRecordReader<Guardian<T' TId>' TId' T> (GetGuardianReader<Guardian<T' TId>> ()' records => records.GroupBy (g => g.ParentId1' g => g.Object)); " is 158.
Long Statement,Insight.Database.Structure,RecordReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\RecordReader.cs,CreateAutoGroupBy,The length of the statement  "						var getReader = this.GetType().GetMethod("GetAdaptedReader"' BindingFlags.Instance | BindingFlags.NonPublic).MakeGenericMethod(guardianType' typeof(Guardian<T>));" is 162.
Long Statement,Insight.Database.Structure,RecordReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\RecordReader.cs,CreateAutoGroupBy,The length of the statement  "		return new ChildRecordReader<Guardian<T>' TId' T> (reader' records => records.GroupBy (g => (TId)g.GetID ()' g => g.Object)); " is 125.
Long Statement,Insight.Database.Structure,RecordReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\RecordReader.cs,GroupByColumns,The length of the statement  "	return new ChildRecordReader<Guardian<T' T1' T2>' Tuple<T1' T2>' T> (GetGuardianReader<Guardian<T' T1' T2>> ()' records => records.GroupBy (g => Tuple.Create (g.ParentId1' g.ParentId2)' g => g.Object)); " is 202.
Long Statement,Insight.Database.Structure,RecordReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\RecordReader.cs,GroupByColumns,The length of the statement  "	return new ChildRecordReader<Guardian<T' T1' T2' T3>' Tuple<T1' T2' T3>' T> (GetGuardianReader<Guardian<T' T1' T2' T3>> ()' records => records.GroupBy (g => Tuple.Create (g.ParentId1' g.ParentId2' g.ParentId3)' g => g.Object)); " is 227.
Long Statement,Insight.Database.Structure,RecordReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\RecordReader.cs,GroupByColumns,The length of the statement  "	return new ChildRecordReader<Guardian<T' T1' T2' T3' T4>' Tuple<T1' T2' T3' T4>' T> (GetGuardianReader<Guardian<T' T1' T2' T3' T4>> ()' records => records.GroupBy (g => Tuple.Create (g.ParentId1' g.ParentId2' g.ParentId3' g.ParentId4)' g => g.Object)); " is 252.
Long Statement,Insight.Database.Structure,RecordReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\RecordReader.cs,GroupByColumns,The length of the statement  "	return new ChildRecordReader<Guardian<T' T1' T2' T3' T4' T5>' Tuple<T1' T2' T3' T4' T5>' T> (GetGuardianReader<Guardian<T' T1' T2' T3' T4' T5>> ()' records => records.GroupBy (g => Tuple.Create (g.ParentId1' g.ParentId2' g.ParentId3' g.ParentId4' g.ParentId5)' g => g.Object)); " is 277.
Long Statement,Insight.Database.Structure,RecordReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\RecordReader.cs,GroupByColumns,The length of the statement  "	return new ChildRecordReader<Guardian<T' T1' T2' T3' T4' T5' T6>' Tuple<T1' T2' T3' T4' T5' T6>' T> (GetGuardianReader<Guardian<T' T1' T2' T3' T4' T5' T6>> ()' records => records.GroupBy (g => Tuple.Create (g.ParentId1' g.ParentId2' g.ParentId3' g.ParentId4' g.ParentId5' g.ParentId6)' g => g.Object)); " is 302.
Long Statement,Insight.Database.Structure,RecordReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\RecordReader.cs,GroupByColumns,The length of the statement  "	return new ChildRecordReader<Guardian<T' T1' T2' T3' T4' T5' T6' T7>' Tuple<T1' T2' T3' T4' T5' T6' T7>' T> (GetGuardianReader<Guardian<T' T1' T2' T3' T4' T5' T6' T7>> ()' records => records.GroupBy (g => Tuple.Create (g.ParentId1' g.ParentId2' g.ParentId3' g.ParentId4' g.ParentId5' g.ParentId6' g.ParentId7)' g => g.Object)); " is 327.
Long Statement,Insight.Database.Structure,Children,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Children.cs,ReadAsync,The length of the statement  "	return _recordReader.ReadAsync (reader' ct).ContinueWith (t => _mapper.MapChildren (parents' t.Result)' TaskContinuationOptions.ExecuteSynchronously); " is 150.
Long Statement,Insight.Database.Structure,ResultsReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ResultsReader.generated.cs,ReadAsync,The length of the statement  "	return ReadAsync (command' results' reader' cancellationToken).ContinueWith (t => (Results<T1>)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 151.
Long Statement,Insight.Database.Structure,ResultsReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ResultsReader.generated.cs,ReadAsync,The length of the statement  "	return ReadAsync (command' results' reader' cancellationToken).ContinueWith (t => (Results<T1' T2>)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 155.
Long Statement,Insight.Database.Structure,ResultsReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ResultsReader.generated.cs,ReadAsync,The length of the statement  "	return ReadAsync (command' results' reader' cancellationToken).ContinueWith (t => (Results<T1' T2' T3>)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 159.
Long Statement,Insight.Database.Structure,ResultsReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ResultsReader.generated.cs,ReadAsync,The length of the statement  "	return ReadAsync (command' results' reader' cancellationToken).ContinueWith (t => (Results<T1' T2' T3' T4>)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 163.
Long Statement,Insight.Database.Structure,ResultsReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ResultsReader.generated.cs,ReadAsync,The length of the statement  "	return ReadAsync (command' results' reader' cancellationToken).ContinueWith (t => (Results<T1' T2' T3' T4' T5>)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 167.
Long Statement,Insight.Database.Structure,ResultsReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ResultsReader.generated.cs,ReadAsync,The length of the statement  "	return ReadAsync (command' results' reader' cancellationToken).ContinueWith (t => (Results<T1' T2' T3' T4' T5' T6>)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 171.
Long Statement,Insight.Database.Structure,ResultsReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ResultsReader.generated.cs,ReadAsync,The length of the statement  "	return ReadAsync (command' results' reader' cancellationToken).ContinueWith (t => (Results<T1' T2' T3' T4' T5' T6' T7>)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 175.
Long Statement,Insight.Database.Structure,ResultsReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ResultsReader.generated.cs,ReadAsync,The length of the statement  "	return ReadAsync (command' results' reader' cancellationToken).ContinueWith (t => (Results<T1' T2' T3' T4' T5' T6' T7' T8>)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 179.
Long Statement,Insight.Database.Structure,ResultsReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ResultsReader.generated.cs,ReadAsync,The length of the statement  "	return ReadAsync (command' results' reader' cancellationToken).ContinueWith (t => (Results<T1' T2' T3' T4' T5' T6' T7' T8' T9>)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 183.
Long Statement,Insight.Database.Structure,ResultsReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ResultsReader.generated.cs,ReadAsync,The length of the statement  "	return ReadAsync (command' results' reader' cancellationToken).ContinueWith (t => (Results<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 188.
Long Statement,Insight.Database.Structure,ResultsReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ResultsReader.generated.cs,ReadAsync,The length of the statement  "	return ReadAsync (command' results' reader' cancellationToken).ContinueWith (t => (Results<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 193.
Long Statement,Insight.Database.Structure,ResultsReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ResultsReader.generated.cs,ReadAsync,The length of the statement  "	return ReadAsync (command' results' reader' cancellationToken).ContinueWith (t => (Results<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 198.
Long Statement,Insight.Database.Structure,ResultsReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ResultsReader.generated.cs,ReadAsync,The length of the statement  "	return ReadAsync (command' results' reader' cancellationToken).ContinueWith (t => (Results<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 203.
Long Statement,Insight.Database.Structure,ResultsReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ResultsReader.generated.cs,ReadAsync,The length of the statement  "	return ReadAsync (command' results' reader' cancellationToken).ContinueWith (t => (Results<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 208.
Long Statement,Insight.Database.Structure,ResultsReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ResultsReader.generated.cs,ReadAsync,The length of the statement  "	return ReadAsync (command' results' reader' cancellationToken).ContinueWith (t => (Results<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 213.
Long Statement,Insight.Database.Structure,ResultsReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\ResultsReader.generated.cs,ReadAsync,The length of the statement  "	return ReadAsync (command' results' reader' cancellationToken).ContinueWith (t => (Results<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>)t.Result' TaskContinuationOptions.ExecuteSynchronously); " is 218.
Long Statement,Insight.Database.Structure,SingleChildren,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\SingleChildren.cs,ReadAsync,The length of the statement  "	return reader.ToListAsync (_recordReader).ContinueWith (t => _mapper.MapChildren (parents' t.Result)' TaskContinuationOptions.ExecuteSynchronously); " is 148.
Long Statement,Insight.Database.Providers,WrappedInsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Providers\WrappedInsightDbProvider.cs,BulkCopyAsync,The length of the statement  "	return InsightDbProvider.For (connection).BulkCopyAsync (connection' tableName' reader' configure' options' transaction' cancellationToken); " is 140.
Long Statement,Insight.Database.Providers,InsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Providers\InsightDbProvider.cs,DeriveParameters,The length of the statement  "			throw new InvalidOperationException ("Cannot derive parameters from this command. Have you loaded the provider for your database?"); " is 132.
Long Statement,Insight.Database.Providers,InsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Providers\InsightDbProvider.cs,DeriveParametersFromStoredProcedure,The length of the statement  "	throw CreateNotRegisteredException (command' String.Format (CultureInfo.InvariantCulture' "Cannot derive parameters for the stored procedure {0}"' command.CommandText)); " is 169.
Long Statement,Insight.Database.Providers,InsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Providers\InsightDbProvider.cs,SetupTableValuedParameter,The length of the statement  "	throw CreateNotRegisteredException (command' String.Format (CultureInfo.InvariantCulture' "Cannot set up the table valued parameter for parameter {0}."' parameter.ParameterName)); " is 179.
Long Statement,Insight.Database.Providers,InsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Providers\InsightDbProvider.cs,GetTableSchemaSql,The length of the statement  "	throw CreateNotRegisteredException (connection' String.Format (CultureInfo.InvariantCulture' "Cannot get the schema for table {0}."' tableName)); " is 145.
Long Statement,Insight.Database.Providers,InsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Providers\InsightDbProvider.cs,BulkCopy,The length of the statement  "	throw CreateNotRegisteredException (connection' String.Format (CultureInfo.InvariantCulture' "Cannot bulk copy into table {0}"' tableName)); " is 140.
Long Statement,Insight.Database.Providers,InsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Providers\InsightDbProvider.cs,CreateNotRegisteredException,The length of the statement  "	return new NotImplementedException (String.Format (CultureInfo.InvariantCulture' "{0}. Have you loaded the provider that supports {1}?"' message' databaseObject.GetType ().Name)); " is 179.
Long Statement,Insight.Database.Providers,InsightDbProvider,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Providers\InsightDbProvider.cs,LoadProviders,The length of the statement  "	foreach (string assemblyFile in paths.Distinct ().SelectMany (path => Directory.GetFiles (path' "Insight.Database.Providers.*.dll").Distinct ())) { " is 147.
Complex Conditional,Insight.Database,DBConnectionExtensions,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Extensions\AsyncExtensions.cs,ConvertScalar,The conditional expression  "(result == null || result == DBNull.Value) && typeof(T).IsValueType && Nullable.GetUnderlyingType (typeof(T)) == null"  is complex.
Complex Conditional,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,DoInvokeMember,The conditional expression  "unnamedParameterCount == 1 && (callInfo.ArgumentNames.Count == specialParameters) && !args [0].GetType ().IsValueType && args [0].GetType () != typeof(String)"  is complex.
Complex Conditional,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,DoInvokeMember,The conditional expression  "argumentName == "cancellationToken" || argumentName == "transaction" || argumentName == "commandTimeout" || argumentName == "returnType" || argumentName == "returns" || argumentName == "outputParameters""  is complex.
Complex Conditional,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateClassInputParameterGenerator,The conditional expression  "(sqlType == DbType.Time && dbParameter.DbType != DbType.Time) || (dbParameter.DbType == DbType.DateTime || dbParameter.DbType == DbType.DateTime2 || dbParameter.DbType == DbType.DateTimeOffset)"  is complex.
Complex Conditional,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateClassInputParameterGenerator,The conditional expression  "(memberType == typeof(Guid?) || (memberType == typeof(Guid))) && dbParameter.DbType != DbType.Guid && command.CommandType == CommandType.StoredProcedure"  is complex.
Complex Conditional,Insight.Database.CodeGenerator,TypeConverterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\TypeConverterGenerator.cs,CreateDataException,The conditional expression  "reader != null && !reader.IsClosed && index >= 0 && index < reader.FieldCount"  is complex.
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]' (T16)objects [15]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]' (T16)objects [15]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]' (T16)objects [15]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]' (T16)objects [15]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]' (T16)objects [15]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]' (T16)objects [15]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]' (T16)objects [15]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]' (T16)objects [15]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]' (T16)objects [15]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]' (T16)objects [15]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]' (T16)objects [15]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]' (T16)objects [15]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]' (T16)objects [15]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,HandleCallback,The following statement contains a magic number: ((Action<T1' T2' T3' T4' T5' T6' T7' T8' T9' T10' T11' T12' T13' T14' T15' T16>)Callback) ((T1)objects [0]' (T2)objects [1]' (T3)objects [2]' (T4)objects [3]' (T5)objects [4]' (T6)objects [5]' (T7)objects [6]' (T8)objects [7]' (T9)objects [8]' (T10)objects [9]' (T11)objects [10]' (T12)objects [11]' (T13)objects [12]' (T14)objects [13]' (T15)objects [14]' (T16)objects [15]);  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,Initialize,The following statement contains a magic number: unchecked {  	_hashCode = GetType ().GetHashCode ();  	_hashCode *= 13;  	if (callback != null)  		_hashCode += callback.GetHashCode ();  }  
Magic Number,Insight.Database,OneToOne,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\OneToOne.generated.cs,Initialize,The following statement contains a magic number: _hashCode *= 13;  
Magic Number,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,GetOneToOneType,The following statement contains a magic number: switch (types.Length) {  case 1:  	oneToOne = typeof(OneToOne<>);  	break;  case 2:  	oneToOne = typeof(OneToOne<' >);  	break;  case 3:  	oneToOne = typeof(OneToOne<' ' >);  	break;  case 4:  	oneToOne = typeof(OneToOne<' ' ' >);  	break;  case 5:  	oneToOne = typeof(OneToOne<' ' ' ' >);  	break;  case 6:  	oneToOne = typeof(OneToOne<' ' ' ' ' >);  	break;  case 7:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' >);  	break;  case 8:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' >);  	break;  case 9:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' >);  	break;  case 10:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' >);  	break;  case 11:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' >);  	break;  case 12:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 13:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 14:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 15:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 16:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  }  
Magic Number,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,GetOneToOneType,The following statement contains a magic number: switch (types.Length) {  case 1:  	oneToOne = typeof(OneToOne<>);  	break;  case 2:  	oneToOne = typeof(OneToOne<' >);  	break;  case 3:  	oneToOne = typeof(OneToOne<' ' >);  	break;  case 4:  	oneToOne = typeof(OneToOne<' ' ' >);  	break;  case 5:  	oneToOne = typeof(OneToOne<' ' ' ' >);  	break;  case 6:  	oneToOne = typeof(OneToOne<' ' ' ' ' >);  	break;  case 7:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' >);  	break;  case 8:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' >);  	break;  case 9:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' >);  	break;  case 10:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' >);  	break;  case 11:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' >);  	break;  case 12:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 13:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 14:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 15:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 16:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  }  
Magic Number,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,GetOneToOneType,The following statement contains a magic number: switch (types.Length) {  case 1:  	oneToOne = typeof(OneToOne<>);  	break;  case 2:  	oneToOne = typeof(OneToOne<' >);  	break;  case 3:  	oneToOne = typeof(OneToOne<' ' >);  	break;  case 4:  	oneToOne = typeof(OneToOne<' ' ' >);  	break;  case 5:  	oneToOne = typeof(OneToOne<' ' ' ' >);  	break;  case 6:  	oneToOne = typeof(OneToOne<' ' ' ' ' >);  	break;  case 7:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' >);  	break;  case 8:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' >);  	break;  case 9:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' >);  	break;  case 10:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' >);  	break;  case 11:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' >);  	break;  case 12:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 13:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 14:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 15:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 16:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  }  
Magic Number,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,GetOneToOneType,The following statement contains a magic number: switch (types.Length) {  case 1:  	oneToOne = typeof(OneToOne<>);  	break;  case 2:  	oneToOne = typeof(OneToOne<' >);  	break;  case 3:  	oneToOne = typeof(OneToOne<' ' >);  	break;  case 4:  	oneToOne = typeof(OneToOne<' ' ' >);  	break;  case 5:  	oneToOne = typeof(OneToOne<' ' ' ' >);  	break;  case 6:  	oneToOne = typeof(OneToOne<' ' ' ' ' >);  	break;  case 7:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' >);  	break;  case 8:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' >);  	break;  case 9:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' >);  	break;  case 10:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' >);  	break;  case 11:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' >);  	break;  case 12:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 13:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 14:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 15:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 16:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  }  
Magic Number,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,GetOneToOneType,The following statement contains a magic number: switch (types.Length) {  case 1:  	oneToOne = typeof(OneToOne<>);  	break;  case 2:  	oneToOne = typeof(OneToOne<' >);  	break;  case 3:  	oneToOne = typeof(OneToOne<' ' >);  	break;  case 4:  	oneToOne = typeof(OneToOne<' ' ' >);  	break;  case 5:  	oneToOne = typeof(OneToOne<' ' ' ' >);  	break;  case 6:  	oneToOne = typeof(OneToOne<' ' ' ' ' >);  	break;  case 7:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' >);  	break;  case 8:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' >);  	break;  case 9:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' >);  	break;  case 10:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' >);  	break;  case 11:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' >);  	break;  case 12:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 13:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 14:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 15:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 16:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  }  
Magic Number,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,GetOneToOneType,The following statement contains a magic number: switch (types.Length) {  case 1:  	oneToOne = typeof(OneToOne<>);  	break;  case 2:  	oneToOne = typeof(OneToOne<' >);  	break;  case 3:  	oneToOne = typeof(OneToOne<' ' >);  	break;  case 4:  	oneToOne = typeof(OneToOne<' ' ' >);  	break;  case 5:  	oneToOne = typeof(OneToOne<' ' ' ' >);  	break;  case 6:  	oneToOne = typeof(OneToOne<' ' ' ' ' >);  	break;  case 7:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' >);  	break;  case 8:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' >);  	break;  case 9:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' >);  	break;  case 10:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' >);  	break;  case 11:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' >);  	break;  case 12:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 13:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 14:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 15:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 16:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  }  
Magic Number,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,GetOneToOneType,The following statement contains a magic number: switch (types.Length) {  case 1:  	oneToOne = typeof(OneToOne<>);  	break;  case 2:  	oneToOne = typeof(OneToOne<' >);  	break;  case 3:  	oneToOne = typeof(OneToOne<' ' >);  	break;  case 4:  	oneToOne = typeof(OneToOne<' ' ' >);  	break;  case 5:  	oneToOne = typeof(OneToOne<' ' ' ' >);  	break;  case 6:  	oneToOne = typeof(OneToOne<' ' ' ' ' >);  	break;  case 7:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' >);  	break;  case 8:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' >);  	break;  case 9:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' >);  	break;  case 10:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' >);  	break;  case 11:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' >);  	break;  case 12:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 13:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 14:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 15:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 16:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  }  
Magic Number,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,GetOneToOneType,The following statement contains a magic number: switch (types.Length) {  case 1:  	oneToOne = typeof(OneToOne<>);  	break;  case 2:  	oneToOne = typeof(OneToOne<' >);  	break;  case 3:  	oneToOne = typeof(OneToOne<' ' >);  	break;  case 4:  	oneToOne = typeof(OneToOne<' ' ' >);  	break;  case 5:  	oneToOne = typeof(OneToOne<' ' ' ' >);  	break;  case 6:  	oneToOne = typeof(OneToOne<' ' ' ' ' >);  	break;  case 7:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' >);  	break;  case 8:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' >);  	break;  case 9:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' >);  	break;  case 10:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' >);  	break;  case 11:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' >);  	break;  case 12:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 13:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 14:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 15:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 16:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  }  
Magic Number,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,GetOneToOneType,The following statement contains a magic number: switch (types.Length) {  case 1:  	oneToOne = typeof(OneToOne<>);  	break;  case 2:  	oneToOne = typeof(OneToOne<' >);  	break;  case 3:  	oneToOne = typeof(OneToOne<' ' >);  	break;  case 4:  	oneToOne = typeof(OneToOne<' ' ' >);  	break;  case 5:  	oneToOne = typeof(OneToOne<' ' ' ' >);  	break;  case 6:  	oneToOne = typeof(OneToOne<' ' ' ' ' >);  	break;  case 7:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' >);  	break;  case 8:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' >);  	break;  case 9:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' >);  	break;  case 10:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' >);  	break;  case 11:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' >);  	break;  case 12:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 13:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 14:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 15:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 16:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  }  
Magic Number,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,GetOneToOneType,The following statement contains a magic number: switch (types.Length) {  case 1:  	oneToOne = typeof(OneToOne<>);  	break;  case 2:  	oneToOne = typeof(OneToOne<' >);  	break;  case 3:  	oneToOne = typeof(OneToOne<' ' >);  	break;  case 4:  	oneToOne = typeof(OneToOne<' ' ' >);  	break;  case 5:  	oneToOne = typeof(OneToOne<' ' ' ' >);  	break;  case 6:  	oneToOne = typeof(OneToOne<' ' ' ' ' >);  	break;  case 7:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' >);  	break;  case 8:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' >);  	break;  case 9:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' >);  	break;  case 10:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' >);  	break;  case 11:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' >);  	break;  case 12:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 13:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 14:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 15:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 16:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  }  
Magic Number,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,GetOneToOneType,The following statement contains a magic number: switch (types.Length) {  case 1:  	oneToOne = typeof(OneToOne<>);  	break;  case 2:  	oneToOne = typeof(OneToOne<' >);  	break;  case 3:  	oneToOne = typeof(OneToOne<' ' >);  	break;  case 4:  	oneToOne = typeof(OneToOne<' ' ' >);  	break;  case 5:  	oneToOne = typeof(OneToOne<' ' ' ' >);  	break;  case 6:  	oneToOne = typeof(OneToOne<' ' ' ' ' >);  	break;  case 7:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' >);  	break;  case 8:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' >);  	break;  case 9:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' >);  	break;  case 10:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' >);  	break;  case 11:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' >);  	break;  case 12:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 13:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 14:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 15:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 16:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  }  
Magic Number,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,GetOneToOneType,The following statement contains a magic number: switch (types.Length) {  case 1:  	oneToOne = typeof(OneToOne<>);  	break;  case 2:  	oneToOne = typeof(OneToOne<' >);  	break;  case 3:  	oneToOne = typeof(OneToOne<' ' >);  	break;  case 4:  	oneToOne = typeof(OneToOne<' ' ' >);  	break;  case 5:  	oneToOne = typeof(OneToOne<' ' ' ' >);  	break;  case 6:  	oneToOne = typeof(OneToOne<' ' ' ' ' >);  	break;  case 7:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' >);  	break;  case 8:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' >);  	break;  case 9:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' >);  	break;  case 10:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' >);  	break;  case 11:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' >);  	break;  case 12:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 13:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 14:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 15:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 16:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  }  
Magic Number,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,GetOneToOneType,The following statement contains a magic number: switch (types.Length) {  case 1:  	oneToOne = typeof(OneToOne<>);  	break;  case 2:  	oneToOne = typeof(OneToOne<' >);  	break;  case 3:  	oneToOne = typeof(OneToOne<' ' >);  	break;  case 4:  	oneToOne = typeof(OneToOne<' ' ' >);  	break;  case 5:  	oneToOne = typeof(OneToOne<' ' ' ' >);  	break;  case 6:  	oneToOne = typeof(OneToOne<' ' ' ' ' >);  	break;  case 7:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' >);  	break;  case 8:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' >);  	break;  case 9:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' >);  	break;  case 10:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' >);  	break;  case 11:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' >);  	break;  case 12:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 13:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 14:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 15:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 16:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  }  
Magic Number,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,GetOneToOneType,The following statement contains a magic number: switch (types.Length) {  case 1:  	oneToOne = typeof(OneToOne<>);  	break;  case 2:  	oneToOne = typeof(OneToOne<' >);  	break;  case 3:  	oneToOne = typeof(OneToOne<' ' >);  	break;  case 4:  	oneToOne = typeof(OneToOne<' ' ' >);  	break;  case 5:  	oneToOne = typeof(OneToOne<' ' ' ' >);  	break;  case 6:  	oneToOne = typeof(OneToOne<' ' ' ' ' >);  	break;  case 7:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' >);  	break;  case 8:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' >);  	break;  case 9:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' >);  	break;  case 10:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' >);  	break;  case 11:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' >);  	break;  case 12:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 13:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 14:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 15:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 16:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  }  
Magic Number,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,GetOneToOneType,The following statement contains a magic number: switch (types.Length) {  case 1:  	oneToOne = typeof(OneToOne<>);  	break;  case 2:  	oneToOne = typeof(OneToOne<' >);  	break;  case 3:  	oneToOne = typeof(OneToOne<' ' >);  	break;  case 4:  	oneToOne = typeof(OneToOne<' ' ' >);  	break;  case 5:  	oneToOne = typeof(OneToOne<' ' ' ' >);  	break;  case 6:  	oneToOne = typeof(OneToOne<' ' ' ' ' >);  	break;  case 7:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' >);  	break;  case 8:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' >);  	break;  case 9:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' >);  	break;  case 10:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' >);  	break;  case 11:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' >);  	break;  case 12:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 13:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 14:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 15:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 16:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  }  
Magic Number,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,DoInvokeMember,The following statement contains a magic number: if (procName.EndsWith ("async"' StringComparison.OrdinalIgnoreCase)) {  	procName = procName.Substring (0' procName.Length - 5);  	doAsync = true;  }  
Magic Number,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,DoInvokeMember,The following statement contains a magic number: procName = procName.Substring (0' procName.Length - 5);  
Magic Number,Insight.Database.CodeGenerator,ColumnInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ColumnInfo.cs,FromDataReader,The following statement contains a magic number: for (int i = 0; i < fieldCount; i++) {  	var row = schemaTable.Rows [i];  	var column = new ColumnInfo () {  		Name = reader.GetName (i)'  		Type = reader.GetFieldType (i)'  		IsNullable = (isNullableColumn == -1) ? false : row.IsNull (isNullableColumn) ? false : Convert.ToBoolean (row [isNullableColumn]' CultureInfo.InvariantCulture)'  		IsReadOnly = (isReadOnlyColumn == -1) ? false : row.IsNull (isReadOnlyColumn) ? false : Convert.ToBoolean (row [isReadOnlyColumn]' CultureInfo.InvariantCulture)'  		IsIdentity = (isIdentityColumn == -1) ? false : row.IsNull (isIdentityColumn) ? false : Convert.ToBoolean (row [isIdentityColumn]' CultureInfo.InvariantCulture)'  		ColumnType = (Type)row [dataTypeColumn]'  		NumericPrecision = row [precisionColumn]'  		NumericScale = row [scaleColumn]'  		ColumnSize = row [columnSizeColumn]  	};  	if (dataTypeNameColumn != -1) {  		string dataType = row [dataTypeNameColumn].ToString ();  		if (String.Equals (dataType' "money"' StringComparison.OrdinalIgnoreCase))  			column.NumericScale = 4;  		else if (String.Equals (dataType' "smallmoney"' StringComparison.OrdinalIgnoreCase))  			column.NumericScale = 4;  		else if (String.Equals (dataType' "date"' StringComparison.OrdinalIgnoreCase))  			column.NumericScale = 0;  	}  	columns.Add (column);  }  
Magic Number,Insight.Database.CodeGenerator,ColumnInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ColumnInfo.cs,FromDataReader,The following statement contains a magic number: for (int i = 0; i < fieldCount; i++) {  	var row = schemaTable.Rows [i];  	var column = new ColumnInfo () {  		Name = reader.GetName (i)'  		Type = reader.GetFieldType (i)'  		IsNullable = (isNullableColumn == -1) ? false : row.IsNull (isNullableColumn) ? false : Convert.ToBoolean (row [isNullableColumn]' CultureInfo.InvariantCulture)'  		IsReadOnly = (isReadOnlyColumn == -1) ? false : row.IsNull (isReadOnlyColumn) ? false : Convert.ToBoolean (row [isReadOnlyColumn]' CultureInfo.InvariantCulture)'  		IsIdentity = (isIdentityColumn == -1) ? false : row.IsNull (isIdentityColumn) ? false : Convert.ToBoolean (row [isIdentityColumn]' CultureInfo.InvariantCulture)'  		ColumnType = (Type)row [dataTypeColumn]'  		NumericPrecision = row [precisionColumn]'  		NumericScale = row [scaleColumn]'  		ColumnSize = row [columnSizeColumn]  	};  	if (dataTypeNameColumn != -1) {  		string dataType = row [dataTypeNameColumn].ToString ();  		if (String.Equals (dataType' "money"' StringComparison.OrdinalIgnoreCase))  			column.NumericScale = 4;  		else if (String.Equals (dataType' "smallmoney"' StringComparison.OrdinalIgnoreCase))  			column.NumericScale = 4;  		else if (String.Equals (dataType' "date"' StringComparison.OrdinalIgnoreCase))  			column.NumericScale = 0;  	}  	columns.Add (column);  }  
Magic Number,Insight.Database.CodeGenerator,ColumnInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ColumnInfo.cs,FromDataReader,The following statement contains a magic number: if (dataTypeNameColumn != -1) {  	string dataType = row [dataTypeNameColumn].ToString ();  	if (String.Equals (dataType' "money"' StringComparison.OrdinalIgnoreCase))  		column.NumericScale = 4;  	else if (String.Equals (dataType' "smallmoney"' StringComparison.OrdinalIgnoreCase))  		column.NumericScale = 4;  	else if (String.Equals (dataType' "date"' StringComparison.OrdinalIgnoreCase))  		column.NumericScale = 0;  }  
Magic Number,Insight.Database.CodeGenerator,ColumnInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ColumnInfo.cs,FromDataReader,The following statement contains a magic number: if (dataTypeNameColumn != -1) {  	string dataType = row [dataTypeNameColumn].ToString ();  	if (String.Equals (dataType' "money"' StringComparison.OrdinalIgnoreCase))  		column.NumericScale = 4;  	else if (String.Equals (dataType' "smallmoney"' StringComparison.OrdinalIgnoreCase))  		column.NumericScale = 4;  	else if (String.Equals (dataType' "date"' StringComparison.OrdinalIgnoreCase))  		column.NumericScale = 0;  }  
Magic Number,Insight.Database.CodeGenerator,ColumnInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ColumnInfo.cs,FromDataReader,The following statement contains a magic number: if (String.Equals (dataType' "money"' StringComparison.OrdinalIgnoreCase))  	column.NumericScale = 4;  else if (String.Equals (dataType' "smallmoney"' StringComparison.OrdinalIgnoreCase))  	column.NumericScale = 4;  else if (String.Equals (dataType' "date"' StringComparison.OrdinalIgnoreCase))  	column.NumericScale = 0;  
Magic Number,Insight.Database.CodeGenerator,ColumnInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ColumnInfo.cs,FromDataReader,The following statement contains a magic number: if (String.Equals (dataType' "money"' StringComparison.OrdinalIgnoreCase))  	column.NumericScale = 4;  else if (String.Equals (dataType' "smallmoney"' StringComparison.OrdinalIgnoreCase))  	column.NumericScale = 4;  else if (String.Equals (dataType' "date"' StringComparison.OrdinalIgnoreCase))  	column.NumericScale = 0;  
Magic Number,Insight.Database.CodeGenerator,ColumnInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ColumnInfo.cs,FromDataReader,The following statement contains a magic number: column.NumericScale = 4;  
Magic Number,Insight.Database.CodeGenerator,ColumnInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ColumnInfo.cs,FromDataReader,The following statement contains a magic number: if (String.Equals (dataType' "smallmoney"' StringComparison.OrdinalIgnoreCase))  	column.NumericScale = 4;  else if (String.Equals (dataType' "date"' StringComparison.OrdinalIgnoreCase))  	column.NumericScale = 0;  
Magic Number,Insight.Database.CodeGenerator,ColumnInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ColumnInfo.cs,FromDataReader,The following statement contains a magic number: column.NumericScale = 4;  
Magic Number,Insight.Database.CodeGenerator,ClassPropInfo,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\ClassPropInfo.cs,GetMemberPrefix,The following statement contains a magic number: if (split.Count () < 2)  	return null;  
Magic Number,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,CreateImplementorOf,The following statement contains a magic number: try {  	Type t = tb.CreateType ();  	// return the create method  	var createMethod = t.GetMethod ("Create"' _ifuncDbConnectionParameterTypes);  	return (Func<Func<IDbConnection>' object>)Delegate.CreateDelegate (typeof(Func<Func<IDbConnection>' object>)' createMethod);  } catch (TypeLoadException e) {  	// inaccessible interface  	#if NODBASYNC  					if (e.Message.Contains("inaccessible") || e.Message.Contains("Access is denied")) #else  	if (e.HResult == -2146233054)  	#endif  	 {  		var template = "{1} {0} is inaccessible to Insight.Database. Make sure that the interface is public' or add " + "[assembly:InternalsVisibleTo(\"Insight.Database.DynamicAssembly\")] " + "to your assembly (System.Runtime.CompilerServices).  If the interface is nested' then it must be public to the world' " + "or public to the assembly while using the InternalsVisibleTo attribute. " + "Interfaces intended to be used AsParallel should not derive from IDbConnection or IDbTransaction.";  		throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' template' type.FullName' e.Message));  	}  	throw;  }  
Magic Number,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,CreateImplementorOf,The following statement contains a magic number: if (e.HResult == -2146233054)  #endif   {  	var template = "{1} {0} is inaccessible to Insight.Database. Make sure that the interface is public' or add " + "[assembly:InternalsVisibleTo(\"Insight.Database.DynamicAssembly\")] " + "to your assembly (System.Runtime.CompilerServices).  If the interface is nested' then it must be public to the world' " + "or public to the assembly while using the InternalsVisibleTo attribute. " + "Interfaces intended to be used AsParallel should not derive from IDbConnection or IDbTransaction.";  	throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' template' type.FullName' e.Message));  }  
Magic Number,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The following statement contains a magic number: if (returnType.IsSubclassOf (typeof(Results)) && !returnType.Name.StartsWith ("Results`"' StringComparison.OrdinalIgnoreCase)) {  	// we have a return that is derived from results  	mIL.Emit (OpCodes.Ldsfld' typeof(DerivedResultsReader<>).MakeGenericType (returnType).GetField ("Default"));  } else {  	bool isSingle = !returnType.IsSubclassOf (typeof(Results)) && !IsGenericListType (returnType);  	// we are returning results<T...>' or IList<T...>  	var returnTypeArgs = isSingle ? new Type[] {  		returnType  	} : returnType.GetGenericArguments ();  	Type currentType = null;  	// go through all of the type arguments or recordsets  	int returnIndex = 0;  	for (int i = 0; i < Math.Max (returnTypeArgs.Length' returnsAttributes.Keys.MaxOrDefault (k => k + 1)); i++) {  		RecordsetAttribute r;  		returnsAttributes.TryGetValue (i' out r);  		var types = (r != null) ? r.Types : new Type[] {  			returnTypeArgs [i]  		};  		// grab the records field for the appropriate OneToOne mapping  		mIL.Emit (OpCodes.Ldsfld' Query.GetOneToOneType (types).GetField ("Records"' BindingFlags.Public | BindingFlags.Static));  		// keep track of the type that we are returning  		if (r == null || !r.IsChild)  			returnIndex++;  		if (i == 0) {  			// start the chain of calls  			if (isSingle) {  				var recordReader = typeof(IRecordReader<>).MakeGenericType (returnType);  				var readerType = typeof(SingleReader<>).MakeGenericType (returnType);  				var constructor = readerType.GetConstructor (new Type[] {  					recordReader  				});  				mIL.Emit (OpCodes.Newobj' constructor);  				currentType = readerType;  			} else if (returnType.IsSubclassOf (typeof(Results))) {  				var method = typeof(Query).GetMethod ("ReturnsResults"' BindingFlags.Public | BindingFlags.Static).MakeGenericMethod (types [0]);  				currentType = method.ReturnType;  				mIL.Emit (OpCodes.Call' method);  			} else {  				// IList<T> or List<T>' etc...  				var oneToOneBaseType = typeof(OneToOne<>).MakeGenericType (types [0]);  				currentType = typeof(ListReader<>).MakeGenericType (types [0]);  				Type readerType = currentType;  				// if we're not returning an IList' then we need to insert the reader adapter class  				if (returnType.GetGenericTypeDefinition () != typeof(IList<>))  					readerType = typeof(ListReaderAdapter<' >).MakeGenericType (returnType' types [0]);  				mIL.Emit (OpCodes.Newobj' readerType.GetConstructor (new Type[] {  					oneToOneBaseType  				}));  			}  		} else if (r != null && r.IsChild) {  			// the parent is single and we haven't overridden the id field  			var parentType = currentType.GetGenericArguments () [0];  			var childType = types [0];  			var list = ChildMapperHelper.GetListSetter (parentType' childType' r.Into);  			var listMethod = typeof(ClassPropInfo).GetMethod ("CreateSetMethod").MakeGenericMethod (parentType' typeof(List<>).MakeGenericType (childType)).Invoke (list' Parameters.EmptyArray);  			MethodInfo method;  			if (r.Id == null && TypeIsSingleReader (currentType)) {  				// previous and recordReader are on the stack' add the id and list method  				StaticFieldStorage.EmitLoad (mIL' listMethod);  				method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 2 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name).MakeGenericMethod (new Type[] {  					parentType'  					// TParent  					childType'  				// TChild  				});  			} else {  				var recordReaderType = typeof(RecordReader<>).MakeGenericType (childType);  				var parentid = ChildMapperHelper.GetIDAccessor (parentType' r.Id);  				var parentIdType = parentid.MemberType;  				var parentIdMethod = parentid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (parentType' parentIdType).Invoke (parentid' Parameters.EmptyArray);  				// if groupby is specified' then convert the RecordReader to an IChildRecordReader by groupby  				if (r.GroupBy != null) {  					var childid = ChildMapperHelper.FindParentIDAccessor (childType' r.GroupBy' parentType);  					if (childid == null)  						throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Cannot find GroupBy {0} on {1}"' r.GroupBy' childType.FullName));  					var getMethod = childid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (childType' parentIdType).Invoke (childid' Parameters.EmptyArray);  					StaticFieldStorage.EmitLoad (mIL' getMethod);  					var groupByMethod = recordReaderType.GetMethod ("GroupBy").MakeGenericMethod (parentIdType);  					mIL.Emit (OpCodes.Call' groupByMethod);  					recordReaderType = groupByMethod.ReturnType;  				}  				// previous and recordReader are on the stack' add the id and list methods  				StaticFieldStorage.EmitLoad (mIL' parentIdMethod);  				StaticFieldStorage.EmitLoad (mIL' listMethod);  				method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 3 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name && mi.GetParameters () [1].ParameterType.Name == recordReaderType.Name && mi.GetParameters ().Any (p => String.Compare (p.Name' "id"' StringComparison.OrdinalIgnoreCase) == 0)).MakeGenericMethod (new Type[] {  					parentType'  					// TParent  					childType'  					// TChild  					parentIdType  				// TId  				});  			}  			mIL.Emit (OpCodes.Call' method);  			currentType = method.ReturnType;  		} else {  			var method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "Then" && mi.GetGenericArguments ().Length == returnIndex && mi.GetParameters () [0].ParameterType.Name.StartsWith ("IQueryReader"' StringComparison.OrdinalIgnoreCase)).MakeGenericMethod (returnTypeArgs.Take (returnIndex).ToArray ());  			mIL.Emit (OpCodes.Call' method);  			currentType = method.ReturnType;  		}  	}  }  
Magic Number,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The following statement contains a magic number: if (returnType.IsSubclassOf (typeof(Results)) && !returnType.Name.StartsWith ("Results`"' StringComparison.OrdinalIgnoreCase)) {  	// we have a return that is derived from results  	mIL.Emit (OpCodes.Ldsfld' typeof(DerivedResultsReader<>).MakeGenericType (returnType).GetField ("Default"));  } else {  	bool isSingle = !returnType.IsSubclassOf (typeof(Results)) && !IsGenericListType (returnType);  	// we are returning results<T...>' or IList<T...>  	var returnTypeArgs = isSingle ? new Type[] {  		returnType  	} : returnType.GetGenericArguments ();  	Type currentType = null;  	// go through all of the type arguments or recordsets  	int returnIndex = 0;  	for (int i = 0; i < Math.Max (returnTypeArgs.Length' returnsAttributes.Keys.MaxOrDefault (k => k + 1)); i++) {  		RecordsetAttribute r;  		returnsAttributes.TryGetValue (i' out r);  		var types = (r != null) ? r.Types : new Type[] {  			returnTypeArgs [i]  		};  		// grab the records field for the appropriate OneToOne mapping  		mIL.Emit (OpCodes.Ldsfld' Query.GetOneToOneType (types).GetField ("Records"' BindingFlags.Public | BindingFlags.Static));  		// keep track of the type that we are returning  		if (r == null || !r.IsChild)  			returnIndex++;  		if (i == 0) {  			// start the chain of calls  			if (isSingle) {  				var recordReader = typeof(IRecordReader<>).MakeGenericType (returnType);  				var readerType = typeof(SingleReader<>).MakeGenericType (returnType);  				var constructor = readerType.GetConstructor (new Type[] {  					recordReader  				});  				mIL.Emit (OpCodes.Newobj' constructor);  				currentType = readerType;  			} else if (returnType.IsSubclassOf (typeof(Results))) {  				var method = typeof(Query).GetMethod ("ReturnsResults"' BindingFlags.Public | BindingFlags.Static).MakeGenericMethod (types [0]);  				currentType = method.ReturnType;  				mIL.Emit (OpCodes.Call' method);  			} else {  				// IList<T> or List<T>' etc...  				var oneToOneBaseType = typeof(OneToOne<>).MakeGenericType (types [0]);  				currentType = typeof(ListReader<>).MakeGenericType (types [0]);  				Type readerType = currentType;  				// if we're not returning an IList' then we need to insert the reader adapter class  				if (returnType.GetGenericTypeDefinition () != typeof(IList<>))  					readerType = typeof(ListReaderAdapter<' >).MakeGenericType (returnType' types [0]);  				mIL.Emit (OpCodes.Newobj' readerType.GetConstructor (new Type[] {  					oneToOneBaseType  				}));  			}  		} else if (r != null && r.IsChild) {  			// the parent is single and we haven't overridden the id field  			var parentType = currentType.GetGenericArguments () [0];  			var childType = types [0];  			var list = ChildMapperHelper.GetListSetter (parentType' childType' r.Into);  			var listMethod = typeof(ClassPropInfo).GetMethod ("CreateSetMethod").MakeGenericMethod (parentType' typeof(List<>).MakeGenericType (childType)).Invoke (list' Parameters.EmptyArray);  			MethodInfo method;  			if (r.Id == null && TypeIsSingleReader (currentType)) {  				// previous and recordReader are on the stack' add the id and list method  				StaticFieldStorage.EmitLoad (mIL' listMethod);  				method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 2 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name).MakeGenericMethod (new Type[] {  					parentType'  					// TParent  					childType'  				// TChild  				});  			} else {  				var recordReaderType = typeof(RecordReader<>).MakeGenericType (childType);  				var parentid = ChildMapperHelper.GetIDAccessor (parentType' r.Id);  				var parentIdType = parentid.MemberType;  				var parentIdMethod = parentid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (parentType' parentIdType).Invoke (parentid' Parameters.EmptyArray);  				// if groupby is specified' then convert the RecordReader to an IChildRecordReader by groupby  				if (r.GroupBy != null) {  					var childid = ChildMapperHelper.FindParentIDAccessor (childType' r.GroupBy' parentType);  					if (childid == null)  						throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Cannot find GroupBy {0} on {1}"' r.GroupBy' childType.FullName));  					var getMethod = childid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (childType' parentIdType).Invoke (childid' Parameters.EmptyArray);  					StaticFieldStorage.EmitLoad (mIL' getMethod);  					var groupByMethod = recordReaderType.GetMethod ("GroupBy").MakeGenericMethod (parentIdType);  					mIL.Emit (OpCodes.Call' groupByMethod);  					recordReaderType = groupByMethod.ReturnType;  				}  				// previous and recordReader are on the stack' add the id and list methods  				StaticFieldStorage.EmitLoad (mIL' parentIdMethod);  				StaticFieldStorage.EmitLoad (mIL' listMethod);  				method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 3 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name && mi.GetParameters () [1].ParameterType.Name == recordReaderType.Name && mi.GetParameters ().Any (p => String.Compare (p.Name' "id"' StringComparison.OrdinalIgnoreCase) == 0)).MakeGenericMethod (new Type[] {  					parentType'  					// TParent  					childType'  					// TChild  					parentIdType  				// TId  				});  			}  			mIL.Emit (OpCodes.Call' method);  			currentType = method.ReturnType;  		} else {  			var method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "Then" && mi.GetGenericArguments ().Length == returnIndex && mi.GetParameters () [0].ParameterType.Name.StartsWith ("IQueryReader"' StringComparison.OrdinalIgnoreCase)).MakeGenericMethod (returnTypeArgs.Take (returnIndex).ToArray ());  			mIL.Emit (OpCodes.Call' method);  			currentType = method.ReturnType;  		}  	}  }  
Magic Number,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The following statement contains a magic number: for (int i = 0; i < Math.Max (returnTypeArgs.Length' returnsAttributes.Keys.MaxOrDefault (k => k + 1)); i++) {  	RecordsetAttribute r;  	returnsAttributes.TryGetValue (i' out r);  	var types = (r != null) ? r.Types : new Type[] {  		returnTypeArgs [i]  	};  	// grab the records field for the appropriate OneToOne mapping  	mIL.Emit (OpCodes.Ldsfld' Query.GetOneToOneType (types).GetField ("Records"' BindingFlags.Public | BindingFlags.Static));  	// keep track of the type that we are returning  	if (r == null || !r.IsChild)  		returnIndex++;  	if (i == 0) {  		// start the chain of calls  		if (isSingle) {  			var recordReader = typeof(IRecordReader<>).MakeGenericType (returnType);  			var readerType = typeof(SingleReader<>).MakeGenericType (returnType);  			var constructor = readerType.GetConstructor (new Type[] {  				recordReader  			});  			mIL.Emit (OpCodes.Newobj' constructor);  			currentType = readerType;  		} else if (returnType.IsSubclassOf (typeof(Results))) {  			var method = typeof(Query).GetMethod ("ReturnsResults"' BindingFlags.Public | BindingFlags.Static).MakeGenericMethod (types [0]);  			currentType = method.ReturnType;  			mIL.Emit (OpCodes.Call' method);  		} else {  			// IList<T> or List<T>' etc...  			var oneToOneBaseType = typeof(OneToOne<>).MakeGenericType (types [0]);  			currentType = typeof(ListReader<>).MakeGenericType (types [0]);  			Type readerType = currentType;  			// if we're not returning an IList' then we need to insert the reader adapter class  			if (returnType.GetGenericTypeDefinition () != typeof(IList<>))  				readerType = typeof(ListReaderAdapter<' >).MakeGenericType (returnType' types [0]);  			mIL.Emit (OpCodes.Newobj' readerType.GetConstructor (new Type[] {  				oneToOneBaseType  			}));  		}  	} else if (r != null && r.IsChild) {  		// the parent is single and we haven't overridden the id field  		var parentType = currentType.GetGenericArguments () [0];  		var childType = types [0];  		var list = ChildMapperHelper.GetListSetter (parentType' childType' r.Into);  		var listMethod = typeof(ClassPropInfo).GetMethod ("CreateSetMethod").MakeGenericMethod (parentType' typeof(List<>).MakeGenericType (childType)).Invoke (list' Parameters.EmptyArray);  		MethodInfo method;  		if (r.Id == null && TypeIsSingleReader (currentType)) {  			// previous and recordReader are on the stack' add the id and list method  			StaticFieldStorage.EmitLoad (mIL' listMethod);  			method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 2 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name).MakeGenericMethod (new Type[] {  				parentType'  				// TParent  				childType'  			// TChild  			});  		} else {  			var recordReaderType = typeof(RecordReader<>).MakeGenericType (childType);  			var parentid = ChildMapperHelper.GetIDAccessor (parentType' r.Id);  			var parentIdType = parentid.MemberType;  			var parentIdMethod = parentid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (parentType' parentIdType).Invoke (parentid' Parameters.EmptyArray);  			// if groupby is specified' then convert the RecordReader to an IChildRecordReader by groupby  			if (r.GroupBy != null) {  				var childid = ChildMapperHelper.FindParentIDAccessor (childType' r.GroupBy' parentType);  				if (childid == null)  					throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Cannot find GroupBy {0} on {1}"' r.GroupBy' childType.FullName));  				var getMethod = childid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (childType' parentIdType).Invoke (childid' Parameters.EmptyArray);  				StaticFieldStorage.EmitLoad (mIL' getMethod);  				var groupByMethod = recordReaderType.GetMethod ("GroupBy").MakeGenericMethod (parentIdType);  				mIL.Emit (OpCodes.Call' groupByMethod);  				recordReaderType = groupByMethod.ReturnType;  			}  			// previous and recordReader are on the stack' add the id and list methods  			StaticFieldStorage.EmitLoad (mIL' parentIdMethod);  			StaticFieldStorage.EmitLoad (mIL' listMethod);  			method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 3 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name && mi.GetParameters () [1].ParameterType.Name == recordReaderType.Name && mi.GetParameters ().Any (p => String.Compare (p.Name' "id"' StringComparison.OrdinalIgnoreCase) == 0)).MakeGenericMethod (new Type[] {  				parentType'  				// TParent  				childType'  				// TChild  				parentIdType  			// TId  			});  		}  		mIL.Emit (OpCodes.Call' method);  		currentType = method.ReturnType;  	} else {  		var method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "Then" && mi.GetGenericArguments ().Length == returnIndex && mi.GetParameters () [0].ParameterType.Name.StartsWith ("IQueryReader"' StringComparison.OrdinalIgnoreCase)).MakeGenericMethod (returnTypeArgs.Take (returnIndex).ToArray ());  		mIL.Emit (OpCodes.Call' method);  		currentType = method.ReturnType;  	}  }  
Magic Number,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The following statement contains a magic number: for (int i = 0; i < Math.Max (returnTypeArgs.Length' returnsAttributes.Keys.MaxOrDefault (k => k + 1)); i++) {  	RecordsetAttribute r;  	returnsAttributes.TryGetValue (i' out r);  	var types = (r != null) ? r.Types : new Type[] {  		returnTypeArgs [i]  	};  	// grab the records field for the appropriate OneToOne mapping  	mIL.Emit (OpCodes.Ldsfld' Query.GetOneToOneType (types).GetField ("Records"' BindingFlags.Public | BindingFlags.Static));  	// keep track of the type that we are returning  	if (r == null || !r.IsChild)  		returnIndex++;  	if (i == 0) {  		// start the chain of calls  		if (isSingle) {  			var recordReader = typeof(IRecordReader<>).MakeGenericType (returnType);  			var readerType = typeof(SingleReader<>).MakeGenericType (returnType);  			var constructor = readerType.GetConstructor (new Type[] {  				recordReader  			});  			mIL.Emit (OpCodes.Newobj' constructor);  			currentType = readerType;  		} else if (returnType.IsSubclassOf (typeof(Results))) {  			var method = typeof(Query).GetMethod ("ReturnsResults"' BindingFlags.Public | BindingFlags.Static).MakeGenericMethod (types [0]);  			currentType = method.ReturnType;  			mIL.Emit (OpCodes.Call' method);  		} else {  			// IList<T> or List<T>' etc...  			var oneToOneBaseType = typeof(OneToOne<>).MakeGenericType (types [0]);  			currentType = typeof(ListReader<>).MakeGenericType (types [0]);  			Type readerType = currentType;  			// if we're not returning an IList' then we need to insert the reader adapter class  			if (returnType.GetGenericTypeDefinition () != typeof(IList<>))  				readerType = typeof(ListReaderAdapter<' >).MakeGenericType (returnType' types [0]);  			mIL.Emit (OpCodes.Newobj' readerType.GetConstructor (new Type[] {  				oneToOneBaseType  			}));  		}  	} else if (r != null && r.IsChild) {  		// the parent is single and we haven't overridden the id field  		var parentType = currentType.GetGenericArguments () [0];  		var childType = types [0];  		var list = ChildMapperHelper.GetListSetter (parentType' childType' r.Into);  		var listMethod = typeof(ClassPropInfo).GetMethod ("CreateSetMethod").MakeGenericMethod (parentType' typeof(List<>).MakeGenericType (childType)).Invoke (list' Parameters.EmptyArray);  		MethodInfo method;  		if (r.Id == null && TypeIsSingleReader (currentType)) {  			// previous and recordReader are on the stack' add the id and list method  			StaticFieldStorage.EmitLoad (mIL' listMethod);  			method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 2 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name).MakeGenericMethod (new Type[] {  				parentType'  				// TParent  				childType'  			// TChild  			});  		} else {  			var recordReaderType = typeof(RecordReader<>).MakeGenericType (childType);  			var parentid = ChildMapperHelper.GetIDAccessor (parentType' r.Id);  			var parentIdType = parentid.MemberType;  			var parentIdMethod = parentid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (parentType' parentIdType).Invoke (parentid' Parameters.EmptyArray);  			// if groupby is specified' then convert the RecordReader to an IChildRecordReader by groupby  			if (r.GroupBy != null) {  				var childid = ChildMapperHelper.FindParentIDAccessor (childType' r.GroupBy' parentType);  				if (childid == null)  					throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Cannot find GroupBy {0} on {1}"' r.GroupBy' childType.FullName));  				var getMethod = childid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (childType' parentIdType).Invoke (childid' Parameters.EmptyArray);  				StaticFieldStorage.EmitLoad (mIL' getMethod);  				var groupByMethod = recordReaderType.GetMethod ("GroupBy").MakeGenericMethod (parentIdType);  				mIL.Emit (OpCodes.Call' groupByMethod);  				recordReaderType = groupByMethod.ReturnType;  			}  			// previous and recordReader are on the stack' add the id and list methods  			StaticFieldStorage.EmitLoad (mIL' parentIdMethod);  			StaticFieldStorage.EmitLoad (mIL' listMethod);  			method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 3 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name && mi.GetParameters () [1].ParameterType.Name == recordReaderType.Name && mi.GetParameters ().Any (p => String.Compare (p.Name' "id"' StringComparison.OrdinalIgnoreCase) == 0)).MakeGenericMethod (new Type[] {  				parentType'  				// TParent  				childType'  				// TChild  				parentIdType  			// TId  			});  		}  		mIL.Emit (OpCodes.Call' method);  		currentType = method.ReturnType;  	} else {  		var method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "Then" && mi.GetGenericArguments ().Length == returnIndex && mi.GetParameters () [0].ParameterType.Name.StartsWith ("IQueryReader"' StringComparison.OrdinalIgnoreCase)).MakeGenericMethod (returnTypeArgs.Take (returnIndex).ToArray ());  		mIL.Emit (OpCodes.Call' method);  		currentType = method.ReturnType;  	}  }  
Magic Number,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The following statement contains a magic number: if (i == 0) {  	// start the chain of calls  	if (isSingle) {  		var recordReader = typeof(IRecordReader<>).MakeGenericType (returnType);  		var readerType = typeof(SingleReader<>).MakeGenericType (returnType);  		var constructor = readerType.GetConstructor (new Type[] {  			recordReader  		});  		mIL.Emit (OpCodes.Newobj' constructor);  		currentType = readerType;  	} else if (returnType.IsSubclassOf (typeof(Results))) {  		var method = typeof(Query).GetMethod ("ReturnsResults"' BindingFlags.Public | BindingFlags.Static).MakeGenericMethod (types [0]);  		currentType = method.ReturnType;  		mIL.Emit (OpCodes.Call' method);  	} else {  		// IList<T> or List<T>' etc...  		var oneToOneBaseType = typeof(OneToOne<>).MakeGenericType (types [0]);  		currentType = typeof(ListReader<>).MakeGenericType (types [0]);  		Type readerType = currentType;  		// if we're not returning an IList' then we need to insert the reader adapter class  		if (returnType.GetGenericTypeDefinition () != typeof(IList<>))  			readerType = typeof(ListReaderAdapter<' >).MakeGenericType (returnType' types [0]);  		mIL.Emit (OpCodes.Newobj' readerType.GetConstructor (new Type[] {  			oneToOneBaseType  		}));  	}  } else if (r != null && r.IsChild) {  	// the parent is single and we haven't overridden the id field  	var parentType = currentType.GetGenericArguments () [0];  	var childType = types [0];  	var list = ChildMapperHelper.GetListSetter (parentType' childType' r.Into);  	var listMethod = typeof(ClassPropInfo).GetMethod ("CreateSetMethod").MakeGenericMethod (parentType' typeof(List<>).MakeGenericType (childType)).Invoke (list' Parameters.EmptyArray);  	MethodInfo method;  	if (r.Id == null && TypeIsSingleReader (currentType)) {  		// previous and recordReader are on the stack' add the id and list method  		StaticFieldStorage.EmitLoad (mIL' listMethod);  		method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 2 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name).MakeGenericMethod (new Type[] {  			parentType'  			// TParent  			childType'  		// TChild  		});  	} else {  		var recordReaderType = typeof(RecordReader<>).MakeGenericType (childType);  		var parentid = ChildMapperHelper.GetIDAccessor (parentType' r.Id);  		var parentIdType = parentid.MemberType;  		var parentIdMethod = parentid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (parentType' parentIdType).Invoke (parentid' Parameters.EmptyArray);  		// if groupby is specified' then convert the RecordReader to an IChildRecordReader by groupby  		if (r.GroupBy != null) {  			var childid = ChildMapperHelper.FindParentIDAccessor (childType' r.GroupBy' parentType);  			if (childid == null)  				throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Cannot find GroupBy {0} on {1}"' r.GroupBy' childType.FullName));  			var getMethod = childid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (childType' parentIdType).Invoke (childid' Parameters.EmptyArray);  			StaticFieldStorage.EmitLoad (mIL' getMethod);  			var groupByMethod = recordReaderType.GetMethod ("GroupBy").MakeGenericMethod (parentIdType);  			mIL.Emit (OpCodes.Call' groupByMethod);  			recordReaderType = groupByMethod.ReturnType;  		}  		// previous and recordReader are on the stack' add the id and list methods  		StaticFieldStorage.EmitLoad (mIL' parentIdMethod);  		StaticFieldStorage.EmitLoad (mIL' listMethod);  		method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 3 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name && mi.GetParameters () [1].ParameterType.Name == recordReaderType.Name && mi.GetParameters ().Any (p => String.Compare (p.Name' "id"' StringComparison.OrdinalIgnoreCase) == 0)).MakeGenericMethod (new Type[] {  			parentType'  			// TParent  			childType'  			// TChild  			parentIdType  		// TId  		});  	}  	mIL.Emit (OpCodes.Call' method);  	currentType = method.ReturnType;  } else {  	var method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "Then" && mi.GetGenericArguments ().Length == returnIndex && mi.GetParameters () [0].ParameterType.Name.StartsWith ("IQueryReader"' StringComparison.OrdinalIgnoreCase)).MakeGenericMethod (returnTypeArgs.Take (returnIndex).ToArray ());  	mIL.Emit (OpCodes.Call' method);  	currentType = method.ReturnType;  }  
Magic Number,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The following statement contains a magic number: if (i == 0) {  	// start the chain of calls  	if (isSingle) {  		var recordReader = typeof(IRecordReader<>).MakeGenericType (returnType);  		var readerType = typeof(SingleReader<>).MakeGenericType (returnType);  		var constructor = readerType.GetConstructor (new Type[] {  			recordReader  		});  		mIL.Emit (OpCodes.Newobj' constructor);  		currentType = readerType;  	} else if (returnType.IsSubclassOf (typeof(Results))) {  		var method = typeof(Query).GetMethod ("ReturnsResults"' BindingFlags.Public | BindingFlags.Static).MakeGenericMethod (types [0]);  		currentType = method.ReturnType;  		mIL.Emit (OpCodes.Call' method);  	} else {  		// IList<T> or List<T>' etc...  		var oneToOneBaseType = typeof(OneToOne<>).MakeGenericType (types [0]);  		currentType = typeof(ListReader<>).MakeGenericType (types [0]);  		Type readerType = currentType;  		// if we're not returning an IList' then we need to insert the reader adapter class  		if (returnType.GetGenericTypeDefinition () != typeof(IList<>))  			readerType = typeof(ListReaderAdapter<' >).MakeGenericType (returnType' types [0]);  		mIL.Emit (OpCodes.Newobj' readerType.GetConstructor (new Type[] {  			oneToOneBaseType  		}));  	}  } else if (r != null && r.IsChild) {  	// the parent is single and we haven't overridden the id field  	var parentType = currentType.GetGenericArguments () [0];  	var childType = types [0];  	var list = ChildMapperHelper.GetListSetter (parentType' childType' r.Into);  	var listMethod = typeof(ClassPropInfo).GetMethod ("CreateSetMethod").MakeGenericMethod (parentType' typeof(List<>).MakeGenericType (childType)).Invoke (list' Parameters.EmptyArray);  	MethodInfo method;  	if (r.Id == null && TypeIsSingleReader (currentType)) {  		// previous and recordReader are on the stack' add the id and list method  		StaticFieldStorage.EmitLoad (mIL' listMethod);  		method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 2 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name).MakeGenericMethod (new Type[] {  			parentType'  			// TParent  			childType'  		// TChild  		});  	} else {  		var recordReaderType = typeof(RecordReader<>).MakeGenericType (childType);  		var parentid = ChildMapperHelper.GetIDAccessor (parentType' r.Id);  		var parentIdType = parentid.MemberType;  		var parentIdMethod = parentid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (parentType' parentIdType).Invoke (parentid' Parameters.EmptyArray);  		// if groupby is specified' then convert the RecordReader to an IChildRecordReader by groupby  		if (r.GroupBy != null) {  			var childid = ChildMapperHelper.FindParentIDAccessor (childType' r.GroupBy' parentType);  			if (childid == null)  				throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Cannot find GroupBy {0} on {1}"' r.GroupBy' childType.FullName));  			var getMethod = childid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (childType' parentIdType).Invoke (childid' Parameters.EmptyArray);  			StaticFieldStorage.EmitLoad (mIL' getMethod);  			var groupByMethod = recordReaderType.GetMethod ("GroupBy").MakeGenericMethod (parentIdType);  			mIL.Emit (OpCodes.Call' groupByMethod);  			recordReaderType = groupByMethod.ReturnType;  		}  		// previous and recordReader are on the stack' add the id and list methods  		StaticFieldStorage.EmitLoad (mIL' parentIdMethod);  		StaticFieldStorage.EmitLoad (mIL' listMethod);  		method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 3 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name && mi.GetParameters () [1].ParameterType.Name == recordReaderType.Name && mi.GetParameters ().Any (p => String.Compare (p.Name' "id"' StringComparison.OrdinalIgnoreCase) == 0)).MakeGenericMethod (new Type[] {  			parentType'  			// TParent  			childType'  			// TChild  			parentIdType  		// TId  		});  	}  	mIL.Emit (OpCodes.Call' method);  	currentType = method.ReturnType;  } else {  	var method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "Then" && mi.GetGenericArguments ().Length == returnIndex && mi.GetParameters () [0].ParameterType.Name.StartsWith ("IQueryReader"' StringComparison.OrdinalIgnoreCase)).MakeGenericMethod (returnTypeArgs.Take (returnIndex).ToArray ());  	mIL.Emit (OpCodes.Call' method);  	currentType = method.ReturnType;  }  
Magic Number,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The following statement contains a magic number: if (r != null && r.IsChild) {  	// the parent is single and we haven't overridden the id field  	var parentType = currentType.GetGenericArguments () [0];  	var childType = types [0];  	var list = ChildMapperHelper.GetListSetter (parentType' childType' r.Into);  	var listMethod = typeof(ClassPropInfo).GetMethod ("CreateSetMethod").MakeGenericMethod (parentType' typeof(List<>).MakeGenericType (childType)).Invoke (list' Parameters.EmptyArray);  	MethodInfo method;  	if (r.Id == null && TypeIsSingleReader (currentType)) {  		// previous and recordReader are on the stack' add the id and list method  		StaticFieldStorage.EmitLoad (mIL' listMethod);  		method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 2 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name).MakeGenericMethod (new Type[] {  			parentType'  			// TParent  			childType'  		// TChild  		});  	} else {  		var recordReaderType = typeof(RecordReader<>).MakeGenericType (childType);  		var parentid = ChildMapperHelper.GetIDAccessor (parentType' r.Id);  		var parentIdType = parentid.MemberType;  		var parentIdMethod = parentid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (parentType' parentIdType).Invoke (parentid' Parameters.EmptyArray);  		// if groupby is specified' then convert the RecordReader to an IChildRecordReader by groupby  		if (r.GroupBy != null) {  			var childid = ChildMapperHelper.FindParentIDAccessor (childType' r.GroupBy' parentType);  			if (childid == null)  				throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Cannot find GroupBy {0} on {1}"' r.GroupBy' childType.FullName));  			var getMethod = childid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (childType' parentIdType).Invoke (childid' Parameters.EmptyArray);  			StaticFieldStorage.EmitLoad (mIL' getMethod);  			var groupByMethod = recordReaderType.GetMethod ("GroupBy").MakeGenericMethod (parentIdType);  			mIL.Emit (OpCodes.Call' groupByMethod);  			recordReaderType = groupByMethod.ReturnType;  		}  		// previous and recordReader are on the stack' add the id and list methods  		StaticFieldStorage.EmitLoad (mIL' parentIdMethod);  		StaticFieldStorage.EmitLoad (mIL' listMethod);  		method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 3 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name && mi.GetParameters () [1].ParameterType.Name == recordReaderType.Name && mi.GetParameters ().Any (p => String.Compare (p.Name' "id"' StringComparison.OrdinalIgnoreCase) == 0)).MakeGenericMethod (new Type[] {  			parentType'  			// TParent  			childType'  			// TChild  			parentIdType  		// TId  		});  	}  	mIL.Emit (OpCodes.Call' method);  	currentType = method.ReturnType;  } else {  	var method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "Then" && mi.GetGenericArguments ().Length == returnIndex && mi.GetParameters () [0].ParameterType.Name.StartsWith ("IQueryReader"' StringComparison.OrdinalIgnoreCase)).MakeGenericMethod (returnTypeArgs.Take (returnIndex).ToArray ());  	mIL.Emit (OpCodes.Call' method);  	currentType = method.ReturnType;  }  
Magic Number,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The following statement contains a magic number: if (r != null && r.IsChild) {  	// the parent is single and we haven't overridden the id field  	var parentType = currentType.GetGenericArguments () [0];  	var childType = types [0];  	var list = ChildMapperHelper.GetListSetter (parentType' childType' r.Into);  	var listMethod = typeof(ClassPropInfo).GetMethod ("CreateSetMethod").MakeGenericMethod (parentType' typeof(List<>).MakeGenericType (childType)).Invoke (list' Parameters.EmptyArray);  	MethodInfo method;  	if (r.Id == null && TypeIsSingleReader (currentType)) {  		// previous and recordReader are on the stack' add the id and list method  		StaticFieldStorage.EmitLoad (mIL' listMethod);  		method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 2 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name).MakeGenericMethod (new Type[] {  			parentType'  			// TParent  			childType'  		// TChild  		});  	} else {  		var recordReaderType = typeof(RecordReader<>).MakeGenericType (childType);  		var parentid = ChildMapperHelper.GetIDAccessor (parentType' r.Id);  		var parentIdType = parentid.MemberType;  		var parentIdMethod = parentid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (parentType' parentIdType).Invoke (parentid' Parameters.EmptyArray);  		// if groupby is specified' then convert the RecordReader to an IChildRecordReader by groupby  		if (r.GroupBy != null) {  			var childid = ChildMapperHelper.FindParentIDAccessor (childType' r.GroupBy' parentType);  			if (childid == null)  				throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Cannot find GroupBy {0} on {1}"' r.GroupBy' childType.FullName));  			var getMethod = childid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (childType' parentIdType).Invoke (childid' Parameters.EmptyArray);  			StaticFieldStorage.EmitLoad (mIL' getMethod);  			var groupByMethod = recordReaderType.GetMethod ("GroupBy").MakeGenericMethod (parentIdType);  			mIL.Emit (OpCodes.Call' groupByMethod);  			recordReaderType = groupByMethod.ReturnType;  		}  		// previous and recordReader are on the stack' add the id and list methods  		StaticFieldStorage.EmitLoad (mIL' parentIdMethod);  		StaticFieldStorage.EmitLoad (mIL' listMethod);  		method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 3 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name && mi.GetParameters () [1].ParameterType.Name == recordReaderType.Name && mi.GetParameters ().Any (p => String.Compare (p.Name' "id"' StringComparison.OrdinalIgnoreCase) == 0)).MakeGenericMethod (new Type[] {  			parentType'  			// TParent  			childType'  			// TChild  			parentIdType  		// TId  		});  	}  	mIL.Emit (OpCodes.Call' method);  	currentType = method.ReturnType;  } else {  	var method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "Then" && mi.GetGenericArguments ().Length == returnIndex && mi.GetParameters () [0].ParameterType.Name.StartsWith ("IQueryReader"' StringComparison.OrdinalIgnoreCase)).MakeGenericMethod (returnTypeArgs.Take (returnIndex).ToArray ());  	mIL.Emit (OpCodes.Call' method);  	currentType = method.ReturnType;  }  
Magic Number,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The following statement contains a magic number: if (r.Id == null && TypeIsSingleReader (currentType)) {  	// previous and recordReader are on the stack' add the id and list method  	StaticFieldStorage.EmitLoad (mIL' listMethod);  	method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 2 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name).MakeGenericMethod (new Type[] {  		parentType'  		// TParent  		childType'  	// TChild  	});  } else {  	var recordReaderType = typeof(RecordReader<>).MakeGenericType (childType);  	var parentid = ChildMapperHelper.GetIDAccessor (parentType' r.Id);  	var parentIdType = parentid.MemberType;  	var parentIdMethod = parentid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (parentType' parentIdType).Invoke (parentid' Parameters.EmptyArray);  	// if groupby is specified' then convert the RecordReader to an IChildRecordReader by groupby  	if (r.GroupBy != null) {  		var childid = ChildMapperHelper.FindParentIDAccessor (childType' r.GroupBy' parentType);  		if (childid == null)  			throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Cannot find GroupBy {0} on {1}"' r.GroupBy' childType.FullName));  		var getMethod = childid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (childType' parentIdType).Invoke (childid' Parameters.EmptyArray);  		StaticFieldStorage.EmitLoad (mIL' getMethod);  		var groupByMethod = recordReaderType.GetMethod ("GroupBy").MakeGenericMethod (parentIdType);  		mIL.Emit (OpCodes.Call' groupByMethod);  		recordReaderType = groupByMethod.ReturnType;  	}  	// previous and recordReader are on the stack' add the id and list methods  	StaticFieldStorage.EmitLoad (mIL' parentIdMethod);  	StaticFieldStorage.EmitLoad (mIL' listMethod);  	method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 3 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name && mi.GetParameters () [1].ParameterType.Name == recordReaderType.Name && mi.GetParameters ().Any (p => String.Compare (p.Name' "id"' StringComparison.OrdinalIgnoreCase) == 0)).MakeGenericMethod (new Type[] {  		parentType'  		// TParent  		childType'  		// TChild  		parentIdType  	// TId  	});  }  
Magic Number,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The following statement contains a magic number: if (r.Id == null && TypeIsSingleReader (currentType)) {  	// previous and recordReader are on the stack' add the id and list method  	StaticFieldStorage.EmitLoad (mIL' listMethod);  	method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 2 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name).MakeGenericMethod (new Type[] {  		parentType'  		// TParent  		childType'  	// TChild  	});  } else {  	var recordReaderType = typeof(RecordReader<>).MakeGenericType (childType);  	var parentid = ChildMapperHelper.GetIDAccessor (parentType' r.Id);  	var parentIdType = parentid.MemberType;  	var parentIdMethod = parentid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (parentType' parentIdType).Invoke (parentid' Parameters.EmptyArray);  	// if groupby is specified' then convert the RecordReader to an IChildRecordReader by groupby  	if (r.GroupBy != null) {  		var childid = ChildMapperHelper.FindParentIDAccessor (childType' r.GroupBy' parentType);  		if (childid == null)  			throw new InvalidOperationException (String.Format (CultureInfo.InvariantCulture' "Cannot find GroupBy {0} on {1}"' r.GroupBy' childType.FullName));  		var getMethod = childid.GetType ().GetMethod ("CreateGetMethod").MakeGenericMethod (childType' parentIdType).Invoke (childid' Parameters.EmptyArray);  		StaticFieldStorage.EmitLoad (mIL' getMethod);  		var groupByMethod = recordReaderType.GetMethod ("GroupBy").MakeGenericMethod (parentIdType);  		mIL.Emit (OpCodes.Call' groupByMethod);  		recordReaderType = groupByMethod.ReturnType;  	}  	// previous and recordReader are on the stack' add the id and list methods  	StaticFieldStorage.EmitLoad (mIL' parentIdMethod);  	StaticFieldStorage.EmitLoad (mIL' listMethod);  	method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 3 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name && mi.GetParameters () [1].ParameterType.Name == recordReaderType.Name && mi.GetParameters ().Any (p => String.Compare (p.Name' "id"' StringComparison.OrdinalIgnoreCase) == 0)).MakeGenericMethod (new Type[] {  		parentType'  		// TParent  		childType'  		// TChild  		parentIdType  	// TId  	});  }  
Magic Number,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The following statement contains a magic number: method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 2 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name).MakeGenericMethod (new Type[] {  	parentType'  	// TParent  	childType'  // TChild  });  
Magic Number,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,GenerateReturnsStructure,The following statement contains a magic number: method = typeof(Query).GetMethods (BindingFlags.Public | BindingFlags.Static).Single (mi => mi.Name == "ThenChildren" && mi.GetGenericArguments ().Length == 3 && currentType.GetGenericTypeDefinition ().Name == mi.GetParameters () [0].ParameterType.Name && mi.GetParameters () [1].ParameterType.Name == recordReaderType.Name && mi.GetParameters ().Any (p => String.Compare (p.Name' "id"' StringComparison.OrdinalIgnoreCase) == 0)).MakeGenericMethod (new Type[] {  	parentType'  	// TParent  	childType'  	// TChild  	parentIdType  // TId  });  
Magic Number,Insight.Database.CodeGenerator,SchemaIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaIdentity.cs,CalculateHashCode,The following statement contains a magic number: unchecked {  	// base the hashcode on the column names and types  	_hashCode = 17;  	foreach (var column in _columns) {  		// update the hash code for the name and type  		_hashCode *= 23;  		_hashCode += column.Name.GetHashCode ();  		_hashCode *= 23;  		_hashCode += column.Type.GetHashCode ();  		_hashCode *= 23;  		if (column.IsNullable)  			_hashCode++;  		_hashCode *= 23;  		if (column.IsReadOnly)  			_hashCode++;  		_hashCode *= 23;  		if (column.IsIdentity)  			_hashCode++;  	}  }  
Magic Number,Insight.Database.CodeGenerator,SchemaIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaIdentity.cs,CalculateHashCode,The following statement contains a magic number: unchecked {  	// base the hashcode on the column names and types  	_hashCode = 17;  	foreach (var column in _columns) {  		// update the hash code for the name and type  		_hashCode *= 23;  		_hashCode += column.Name.GetHashCode ();  		_hashCode *= 23;  		_hashCode += column.Type.GetHashCode ();  		_hashCode *= 23;  		if (column.IsNullable)  			_hashCode++;  		_hashCode *= 23;  		if (column.IsReadOnly)  			_hashCode++;  		_hashCode *= 23;  		if (column.IsIdentity)  			_hashCode++;  	}  }  
Magic Number,Insight.Database.CodeGenerator,SchemaIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaIdentity.cs,CalculateHashCode,The following statement contains a magic number: unchecked {  	// base the hashcode on the column names and types  	_hashCode = 17;  	foreach (var column in _columns) {  		// update the hash code for the name and type  		_hashCode *= 23;  		_hashCode += column.Name.GetHashCode ();  		_hashCode *= 23;  		_hashCode += column.Type.GetHashCode ();  		_hashCode *= 23;  		if (column.IsNullable)  			_hashCode++;  		_hashCode *= 23;  		if (column.IsReadOnly)  			_hashCode++;  		_hashCode *= 23;  		if (column.IsIdentity)  			_hashCode++;  	}  }  
Magic Number,Insight.Database.CodeGenerator,SchemaIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaIdentity.cs,CalculateHashCode,The following statement contains a magic number: unchecked {  	// base the hashcode on the column names and types  	_hashCode = 17;  	foreach (var column in _columns) {  		// update the hash code for the name and type  		_hashCode *= 23;  		_hashCode += column.Name.GetHashCode ();  		_hashCode *= 23;  		_hashCode += column.Type.GetHashCode ();  		_hashCode *= 23;  		if (column.IsNullable)  			_hashCode++;  		_hashCode *= 23;  		if (column.IsReadOnly)  			_hashCode++;  		_hashCode *= 23;  		if (column.IsIdentity)  			_hashCode++;  	}  }  
Magic Number,Insight.Database.CodeGenerator,SchemaIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaIdentity.cs,CalculateHashCode,The following statement contains a magic number: unchecked {  	// base the hashcode on the column names and types  	_hashCode = 17;  	foreach (var column in _columns) {  		// update the hash code for the name and type  		_hashCode *= 23;  		_hashCode += column.Name.GetHashCode ();  		_hashCode *= 23;  		_hashCode += column.Type.GetHashCode ();  		_hashCode *= 23;  		if (column.IsNullable)  			_hashCode++;  		_hashCode *= 23;  		if (column.IsReadOnly)  			_hashCode++;  		_hashCode *= 23;  		if (column.IsIdentity)  			_hashCode++;  	}  }  
Magic Number,Insight.Database.CodeGenerator,SchemaIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaIdentity.cs,CalculateHashCode,The following statement contains a magic number: unchecked {  	// base the hashcode on the column names and types  	_hashCode = 17;  	foreach (var column in _columns) {  		// update the hash code for the name and type  		_hashCode *= 23;  		_hashCode += column.Name.GetHashCode ();  		_hashCode *= 23;  		_hashCode += column.Type.GetHashCode ();  		_hashCode *= 23;  		if (column.IsNullable)  			_hashCode++;  		_hashCode *= 23;  		if (column.IsReadOnly)  			_hashCode++;  		_hashCode *= 23;  		if (column.IsIdentity)  			_hashCode++;  	}  }  
Magic Number,Insight.Database.CodeGenerator,SchemaIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaIdentity.cs,CalculateHashCode,The following statement contains a magic number: _hashCode = 17;  
Magic Number,Insight.Database.CodeGenerator,SchemaIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaIdentity.cs,CalculateHashCode,The following statement contains a magic number: foreach (var column in _columns) {  	// update the hash code for the name and type  	_hashCode *= 23;  	_hashCode += column.Name.GetHashCode ();  	_hashCode *= 23;  	_hashCode += column.Type.GetHashCode ();  	_hashCode *= 23;  	if (column.IsNullable)  		_hashCode++;  	_hashCode *= 23;  	if (column.IsReadOnly)  		_hashCode++;  	_hashCode *= 23;  	if (column.IsIdentity)  		_hashCode++;  }  
Magic Number,Insight.Database.CodeGenerator,SchemaIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaIdentity.cs,CalculateHashCode,The following statement contains a magic number: foreach (var column in _columns) {  	// update the hash code for the name and type  	_hashCode *= 23;  	_hashCode += column.Name.GetHashCode ();  	_hashCode *= 23;  	_hashCode += column.Type.GetHashCode ();  	_hashCode *= 23;  	if (column.IsNullable)  		_hashCode++;  	_hashCode *= 23;  	if (column.IsReadOnly)  		_hashCode++;  	_hashCode *= 23;  	if (column.IsIdentity)  		_hashCode++;  }  
Magic Number,Insight.Database.CodeGenerator,SchemaIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaIdentity.cs,CalculateHashCode,The following statement contains a magic number: foreach (var column in _columns) {  	// update the hash code for the name and type  	_hashCode *= 23;  	_hashCode += column.Name.GetHashCode ();  	_hashCode *= 23;  	_hashCode += column.Type.GetHashCode ();  	_hashCode *= 23;  	if (column.IsNullable)  		_hashCode++;  	_hashCode *= 23;  	if (column.IsReadOnly)  		_hashCode++;  	_hashCode *= 23;  	if (column.IsIdentity)  		_hashCode++;  }  
Magic Number,Insight.Database.CodeGenerator,SchemaIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaIdentity.cs,CalculateHashCode,The following statement contains a magic number: foreach (var column in _columns) {  	// update the hash code for the name and type  	_hashCode *= 23;  	_hashCode += column.Name.GetHashCode ();  	_hashCode *= 23;  	_hashCode += column.Type.GetHashCode ();  	_hashCode *= 23;  	if (column.IsNullable)  		_hashCode++;  	_hashCode *= 23;  	if (column.IsReadOnly)  		_hashCode++;  	_hashCode *= 23;  	if (column.IsIdentity)  		_hashCode++;  }  
Magic Number,Insight.Database.CodeGenerator,SchemaIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaIdentity.cs,CalculateHashCode,The following statement contains a magic number: foreach (var column in _columns) {  	// update the hash code for the name and type  	_hashCode *= 23;  	_hashCode += column.Name.GetHashCode ();  	_hashCode *= 23;  	_hashCode += column.Type.GetHashCode ();  	_hashCode *= 23;  	if (column.IsNullable)  		_hashCode++;  	_hashCode *= 23;  	if (column.IsReadOnly)  		_hashCode++;  	_hashCode *= 23;  	if (column.IsIdentity)  		_hashCode++;  }  
Magic Number,Insight.Database.CodeGenerator,SchemaIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaIdentity.cs,CalculateHashCode,The following statement contains a magic number: _hashCode *= 23;  
Magic Number,Insight.Database.CodeGenerator,SchemaIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaIdentity.cs,CalculateHashCode,The following statement contains a magic number: _hashCode *= 23;  
Magic Number,Insight.Database.CodeGenerator,SchemaIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaIdentity.cs,CalculateHashCode,The following statement contains a magic number: _hashCode *= 23;  
Magic Number,Insight.Database.CodeGenerator,SchemaIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaIdentity.cs,CalculateHashCode,The following statement contains a magic number: _hashCode *= 23;  
Magic Number,Insight.Database.CodeGenerator,SchemaIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaIdentity.cs,CalculateHashCode,The following statement contains a magic number: _hashCode *= 23;  
Magic Number,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,SetParameterStringValue,The following statement contains a magic number: if (s != null) {  	if (parameter.DbType != DbType.String && parameter.DbType != DbType.Xml && parameter.DbType != DbType.Object)  		parameter.DbType = DbType.String;  	var dbParameter = parameter as IDbDataParameter;  	if (dbParameter != null) {  		if (dbParameter.Direction.HasFlag (ParameterDirection.Output)) {  			// for output parameters' we always want to retrieve as much data as possible  			dbParameter.Size = -1;  		} else {  			// for input parameters' some providers may behave better by specifying the length  			var length = s.Length;  			if (length > 4000)  				dbParameter.Size = -1;  			else  				dbParameter.Size = s.Length;  		}  	}  }  
Magic Number,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,SetParameterStringValue,The following statement contains a magic number: if (dbParameter != null) {  	if (dbParameter.Direction.HasFlag (ParameterDirection.Output)) {  		// for output parameters' we always want to retrieve as much data as possible  		dbParameter.Size = -1;  	} else {  		// for input parameters' some providers may behave better by specifying the length  		var length = s.Length;  		if (length > 4000)  			dbParameter.Size = -1;  		else  			dbParameter.Size = s.Length;  	}  }  
Magic Number,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,SetParameterStringValue,The following statement contains a magic number: if (dbParameter.Direction.HasFlag (ParameterDirection.Output)) {  	// for output parameters' we always want to retrieve as much data as possible  	dbParameter.Size = -1;  } else {  	// for input parameters' some providers may behave better by specifying the length  	var length = s.Length;  	if (length > 4000)  		dbParameter.Size = -1;  	else  		dbParameter.Size = s.Length;  }  
Magic Number,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,SetParameterStringValue,The following statement contains a magic number: if (length > 4000)  	dbParameter.Size = -1;  else  	dbParameter.Size = s.Length;  
Magic Number,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateDynamicInputParameterGenerator,The following statement contains a magic number: return (cmd' o) => {  	// make sure that we have a dictionary implementation  	IDictionary<string' object> dyn = o as IDictionary<string' object>;  	if (dyn == null)  		throw new InvalidOperationException ("Dynamic object must support IDictionary<string' object>.");  	foreach (var template in parameters) {  		var p = provider.CloneParameter (cmd' template);  		// get the value from the object' converting null to db null  		// note that if the dictionary does not have the value' we leave the value null and then the parameter gets defaulted  		object value = null;  		if (dyn.TryGetValue (p.ParameterName' out value)) {  			if (value == null) {  				value = DBNull.Value;  			} else {  				DbType sqlType = LookupDbType (value.GetType ()' null' p.DbType);  				if (sqlType == DbTypeEnumerable) {  					cmd.Parameters.Add (p);  					ListParameterHelper.ConvertListParameter (p' value' cmd);  					continue;  				}  			}  		}  		p.Value = value;  		// if it's a string' fill in the length  		IDbDataParameter dbDataParameter = p as IDbDataParameter;  		if (dbDataParameter != null) {  			string s = value as string;  			if (s != null) {  				int length = s.Length;  				if (length > 4000)  					length = -1;  				dbDataParameter.Size = length;  			}  		}  		// explicitly set the type of the parameter  		if (value != null && _typeToDbTypeMap.ContainsKey (value.GetType ()))  			dbDataParameter.DbType = _typeToDbTypeMap [value.GetType ()];  		cmd.Parameters.Add (p);  	}  };  
Magic Number,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateDynamicInputParameterGenerator,The following statement contains a magic number: foreach (var template in parameters) {  	var p = provider.CloneParameter (cmd' template);  	// get the value from the object' converting null to db null  	// note that if the dictionary does not have the value' we leave the value null and then the parameter gets defaulted  	object value = null;  	if (dyn.TryGetValue (p.ParameterName' out value)) {  		if (value == null) {  			value = DBNull.Value;  		} else {  			DbType sqlType = LookupDbType (value.GetType ()' null' p.DbType);  			if (sqlType == DbTypeEnumerable) {  				cmd.Parameters.Add (p);  				ListParameterHelper.ConvertListParameter (p' value' cmd);  				continue;  			}  		}  	}  	p.Value = value;  	// if it's a string' fill in the length  	IDbDataParameter dbDataParameter = p as IDbDataParameter;  	if (dbDataParameter != null) {  		string s = value as string;  		if (s != null) {  			int length = s.Length;  			if (length > 4000)  				length = -1;  			dbDataParameter.Size = length;  		}  	}  	// explicitly set the type of the parameter  	if (value != null && _typeToDbTypeMap.ContainsKey (value.GetType ()))  		dbDataParameter.DbType = _typeToDbTypeMap [value.GetType ()];  	cmd.Parameters.Add (p);  }  
Magic Number,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateDynamicInputParameterGenerator,The following statement contains a magic number: if (dbDataParameter != null) {  	string s = value as string;  	if (s != null) {  		int length = s.Length;  		if (length > 4000)  			length = -1;  		dbDataParameter.Size = length;  	}  }  
Magic Number,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateDynamicInputParameterGenerator,The following statement contains a magic number: if (s != null) {  	int length = s.Length;  	if (length > 4000)  		length = -1;  	dbDataParameter.Size = length;  }  
Magic Number,Insight.Database.CodeGenerator,DbParameterGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\DbParameterGenerator.cs,CreateDynamicInputParameterGenerator,The following statement contains a magic number: if (length > 4000)  	length = -1;  
Magic Number,Insight.Database.CodeGenerator,IlHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\IlHelper.cs,EmitLdInt32,The following statement contains a magic number: switch (value) {  case -1:  	il.Emit (OpCodes.Ldc_I4_M1);  	break;  case 0:  	il.Emit (OpCodes.Ldc_I4_0);  	break;  case 1:  	il.Emit (OpCodes.Ldc_I4_1);  	break;  case 2:  	il.Emit (OpCodes.Ldc_I4_2);  	break;  case 3:  	il.Emit (OpCodes.Ldc_I4_3);  	break;  case 4:  	il.Emit (OpCodes.Ldc_I4_4);  	break;  case 5:  	il.Emit (OpCodes.Ldc_I4_5);  	break;  case 6:  	il.Emit (OpCodes.Ldc_I4_6);  	break;  case 7:  	il.Emit (OpCodes.Ldc_I4_7);  	break;  case 8:  	il.Emit (OpCodes.Ldc_I4_8);  	break;  default:  	if (value >= -128 && value <= 127)  		il.Emit (OpCodes.Ldc_I4_S' (sbyte)value);  	else  		il.Emit (OpCodes.Ldc_I4' value);  	break;  }  
Magic Number,Insight.Database.CodeGenerator,IlHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\IlHelper.cs,EmitLdInt32,The following statement contains a magic number: switch (value) {  case -1:  	il.Emit (OpCodes.Ldc_I4_M1);  	break;  case 0:  	il.Emit (OpCodes.Ldc_I4_0);  	break;  case 1:  	il.Emit (OpCodes.Ldc_I4_1);  	break;  case 2:  	il.Emit (OpCodes.Ldc_I4_2);  	break;  case 3:  	il.Emit (OpCodes.Ldc_I4_3);  	break;  case 4:  	il.Emit (OpCodes.Ldc_I4_4);  	break;  case 5:  	il.Emit (OpCodes.Ldc_I4_5);  	break;  case 6:  	il.Emit (OpCodes.Ldc_I4_6);  	break;  case 7:  	il.Emit (OpCodes.Ldc_I4_7);  	break;  case 8:  	il.Emit (OpCodes.Ldc_I4_8);  	break;  default:  	if (value >= -128 && value <= 127)  		il.Emit (OpCodes.Ldc_I4_S' (sbyte)value);  	else  		il.Emit (OpCodes.Ldc_I4' value);  	break;  }  
Magic Number,Insight.Database.CodeGenerator,IlHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\IlHelper.cs,EmitLdInt32,The following statement contains a magic number: switch (value) {  case -1:  	il.Emit (OpCodes.Ldc_I4_M1);  	break;  case 0:  	il.Emit (OpCodes.Ldc_I4_0);  	break;  case 1:  	il.Emit (OpCodes.Ldc_I4_1);  	break;  case 2:  	il.Emit (OpCodes.Ldc_I4_2);  	break;  case 3:  	il.Emit (OpCodes.Ldc_I4_3);  	break;  case 4:  	il.Emit (OpCodes.Ldc_I4_4);  	break;  case 5:  	il.Emit (OpCodes.Ldc_I4_5);  	break;  case 6:  	il.Emit (OpCodes.Ldc_I4_6);  	break;  case 7:  	il.Emit (OpCodes.Ldc_I4_7);  	break;  case 8:  	il.Emit (OpCodes.Ldc_I4_8);  	break;  default:  	if (value >= -128 && value <= 127)  		il.Emit (OpCodes.Ldc_I4_S' (sbyte)value);  	else  		il.Emit (OpCodes.Ldc_I4' value);  	break;  }  
Magic Number,Insight.Database.CodeGenerator,IlHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\IlHelper.cs,EmitLdInt32,The following statement contains a magic number: switch (value) {  case -1:  	il.Emit (OpCodes.Ldc_I4_M1);  	break;  case 0:  	il.Emit (OpCodes.Ldc_I4_0);  	break;  case 1:  	il.Emit (OpCodes.Ldc_I4_1);  	break;  case 2:  	il.Emit (OpCodes.Ldc_I4_2);  	break;  case 3:  	il.Emit (OpCodes.Ldc_I4_3);  	break;  case 4:  	il.Emit (OpCodes.Ldc_I4_4);  	break;  case 5:  	il.Emit (OpCodes.Ldc_I4_5);  	break;  case 6:  	il.Emit (OpCodes.Ldc_I4_6);  	break;  case 7:  	il.Emit (OpCodes.Ldc_I4_7);  	break;  case 8:  	il.Emit (OpCodes.Ldc_I4_8);  	break;  default:  	if (value >= -128 && value <= 127)  		il.Emit (OpCodes.Ldc_I4_S' (sbyte)value);  	else  		il.Emit (OpCodes.Ldc_I4' value);  	break;  }  
Magic Number,Insight.Database.CodeGenerator,IlHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\IlHelper.cs,EmitLdInt32,The following statement contains a magic number: switch (value) {  case -1:  	il.Emit (OpCodes.Ldc_I4_M1);  	break;  case 0:  	il.Emit (OpCodes.Ldc_I4_0);  	break;  case 1:  	il.Emit (OpCodes.Ldc_I4_1);  	break;  case 2:  	il.Emit (OpCodes.Ldc_I4_2);  	break;  case 3:  	il.Emit (OpCodes.Ldc_I4_3);  	break;  case 4:  	il.Emit (OpCodes.Ldc_I4_4);  	break;  case 5:  	il.Emit (OpCodes.Ldc_I4_5);  	break;  case 6:  	il.Emit (OpCodes.Ldc_I4_6);  	break;  case 7:  	il.Emit (OpCodes.Ldc_I4_7);  	break;  case 8:  	il.Emit (OpCodes.Ldc_I4_8);  	break;  default:  	if (value >= -128 && value <= 127)  		il.Emit (OpCodes.Ldc_I4_S' (sbyte)value);  	else  		il.Emit (OpCodes.Ldc_I4' value);  	break;  }  
Magic Number,Insight.Database.CodeGenerator,IlHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\IlHelper.cs,EmitLdInt32,The following statement contains a magic number: switch (value) {  case -1:  	il.Emit (OpCodes.Ldc_I4_M1);  	break;  case 0:  	il.Emit (OpCodes.Ldc_I4_0);  	break;  case 1:  	il.Emit (OpCodes.Ldc_I4_1);  	break;  case 2:  	il.Emit (OpCodes.Ldc_I4_2);  	break;  case 3:  	il.Emit (OpCodes.Ldc_I4_3);  	break;  case 4:  	il.Emit (OpCodes.Ldc_I4_4);  	break;  case 5:  	il.Emit (OpCodes.Ldc_I4_5);  	break;  case 6:  	il.Emit (OpCodes.Ldc_I4_6);  	break;  case 7:  	il.Emit (OpCodes.Ldc_I4_7);  	break;  case 8:  	il.Emit (OpCodes.Ldc_I4_8);  	break;  default:  	if (value >= -128 && value <= 127)  		il.Emit (OpCodes.Ldc_I4_S' (sbyte)value);  	else  		il.Emit (OpCodes.Ldc_I4' value);  	break;  }  
Magic Number,Insight.Database.CodeGenerator,IlHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\IlHelper.cs,EmitLdInt32,The following statement contains a magic number: switch (value) {  case -1:  	il.Emit (OpCodes.Ldc_I4_M1);  	break;  case 0:  	il.Emit (OpCodes.Ldc_I4_0);  	break;  case 1:  	il.Emit (OpCodes.Ldc_I4_1);  	break;  case 2:  	il.Emit (OpCodes.Ldc_I4_2);  	break;  case 3:  	il.Emit (OpCodes.Ldc_I4_3);  	break;  case 4:  	il.Emit (OpCodes.Ldc_I4_4);  	break;  case 5:  	il.Emit (OpCodes.Ldc_I4_5);  	break;  case 6:  	il.Emit (OpCodes.Ldc_I4_6);  	break;  case 7:  	il.Emit (OpCodes.Ldc_I4_7);  	break;  case 8:  	il.Emit (OpCodes.Ldc_I4_8);  	break;  default:  	if (value >= -128 && value <= 127)  		il.Emit (OpCodes.Ldc_I4_S' (sbyte)value);  	else  		il.Emit (OpCodes.Ldc_I4' value);  	break;  }  
Magic Number,Insight.Database.CodeGenerator,IlHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\IlHelper.cs,EmitLdInt32,The following statement contains a magic number: switch (value) {  case -1:  	il.Emit (OpCodes.Ldc_I4_M1);  	break;  case 0:  	il.Emit (OpCodes.Ldc_I4_0);  	break;  case 1:  	il.Emit (OpCodes.Ldc_I4_1);  	break;  case 2:  	il.Emit (OpCodes.Ldc_I4_2);  	break;  case 3:  	il.Emit (OpCodes.Ldc_I4_3);  	break;  case 4:  	il.Emit (OpCodes.Ldc_I4_4);  	break;  case 5:  	il.Emit (OpCodes.Ldc_I4_5);  	break;  case 6:  	il.Emit (OpCodes.Ldc_I4_6);  	break;  case 7:  	il.Emit (OpCodes.Ldc_I4_7);  	break;  case 8:  	il.Emit (OpCodes.Ldc_I4_8);  	break;  default:  	if (value >= -128 && value <= 127)  		il.Emit (OpCodes.Ldc_I4_S' (sbyte)value);  	else  		il.Emit (OpCodes.Ldc_I4' value);  	break;  }  
Magic Number,Insight.Database.CodeGenerator,IlHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\IlHelper.cs,EmitLdInt32,The following statement contains a magic number: switch (value) {  case -1:  	il.Emit (OpCodes.Ldc_I4_M1);  	break;  case 0:  	il.Emit (OpCodes.Ldc_I4_0);  	break;  case 1:  	il.Emit (OpCodes.Ldc_I4_1);  	break;  case 2:  	il.Emit (OpCodes.Ldc_I4_2);  	break;  case 3:  	il.Emit (OpCodes.Ldc_I4_3);  	break;  case 4:  	il.Emit (OpCodes.Ldc_I4_4);  	break;  case 5:  	il.Emit (OpCodes.Ldc_I4_5);  	break;  case 6:  	il.Emit (OpCodes.Ldc_I4_6);  	break;  case 7:  	il.Emit (OpCodes.Ldc_I4_7);  	break;  case 8:  	il.Emit (OpCodes.Ldc_I4_8);  	break;  default:  	if (value >= -128 && value <= 127)  		il.Emit (OpCodes.Ldc_I4_S' (sbyte)value);  	else  		il.Emit (OpCodes.Ldc_I4' value);  	break;  }  
Magic Number,Insight.Database.CodeGenerator,IlHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\IlHelper.cs,EmitLdInt32,The following statement contains a magic number: if (value >= -128 && value <= 127)  	il.Emit (OpCodes.Ldc_I4_S' (sbyte)value);  else  	il.Emit (OpCodes.Ldc_I4' value);  
Magic Number,Insight.Database.CodeGenerator,IlHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\IlHelper.cs,EmitLdInt32,The following statement contains a magic number: if (value >= -128 && value <= 127)  	il.Emit (OpCodes.Ldc_I4_S' (sbyte)value);  else  	il.Emit (OpCodes.Ldc_I4' value);  
Magic Number,Insight.Database.CodeGenerator,QueryIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\QueryIdentity.cs,QueryIdentity,The following statement contains a magic number: unchecked {  	_hashCode = 17 + type.GetHashCode ();  	_hashCode *= 23;  	_hashCode += _commandText.GetHashCode ();  	_hashCode *= 23;  	_hashCode += _commandType.GetHashCode ();  	_hashCode *= 23;  	_hashCode += _connectionString.GetHashCode ();  }  
Magic Number,Insight.Database.CodeGenerator,QueryIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\QueryIdentity.cs,QueryIdentity,The following statement contains a magic number: unchecked {  	_hashCode = 17 + type.GetHashCode ();  	_hashCode *= 23;  	_hashCode += _commandText.GetHashCode ();  	_hashCode *= 23;  	_hashCode += _commandType.GetHashCode ();  	_hashCode *= 23;  	_hashCode += _connectionString.GetHashCode ();  }  
Magic Number,Insight.Database.CodeGenerator,QueryIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\QueryIdentity.cs,QueryIdentity,The following statement contains a magic number: unchecked {  	_hashCode = 17 + type.GetHashCode ();  	_hashCode *= 23;  	_hashCode += _commandText.GetHashCode ();  	_hashCode *= 23;  	_hashCode += _commandType.GetHashCode ();  	_hashCode *= 23;  	_hashCode += _connectionString.GetHashCode ();  }  
Magic Number,Insight.Database.CodeGenerator,QueryIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\QueryIdentity.cs,QueryIdentity,The following statement contains a magic number: unchecked {  	_hashCode = 17 + type.GetHashCode ();  	_hashCode *= 23;  	_hashCode += _commandText.GetHashCode ();  	_hashCode *= 23;  	_hashCode += _commandType.GetHashCode ();  	_hashCode *= 23;  	_hashCode += _connectionString.GetHashCode ();  }  
Magic Number,Insight.Database.CodeGenerator,QueryIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\QueryIdentity.cs,QueryIdentity,The following statement contains a magic number: _hashCode = 17 + type.GetHashCode ();  
Magic Number,Insight.Database.CodeGenerator,QueryIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\QueryIdentity.cs,QueryIdentity,The following statement contains a magic number: _hashCode *= 23;  
Magic Number,Insight.Database.CodeGenerator,QueryIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\QueryIdentity.cs,QueryIdentity,The following statement contains a magic number: _hashCode *= 23;  
Magic Number,Insight.Database.CodeGenerator,QueryIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\QueryIdentity.cs,QueryIdentity,The following statement contains a magic number: _hashCode *= 23;  
Magic Number,Insight.Database.CodeGenerator,SchemaMappingIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaMappingIdentity.cs,SchemaMappingIdentity,The following statement contains a magic number: unchecked {  	// base the hashcode on the mapping type' target graph' and schema contents  	_hashCode = (int)_mappingType;  	_hashCode *= 13;  	_hashCode += RecordReader.GetHashCode ();  	_hashCode *= 13;  	_hashCode += schemaIdentity.GetHashCode ();  }  
Magic Number,Insight.Database.CodeGenerator,SchemaMappingIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaMappingIdentity.cs,SchemaMappingIdentity,The following statement contains a magic number: unchecked {  	// base the hashcode on the mapping type' target graph' and schema contents  	_hashCode = (int)_mappingType;  	_hashCode *= 13;  	_hashCode += RecordReader.GetHashCode ();  	_hashCode *= 13;  	_hashCode += schemaIdentity.GetHashCode ();  }  
Magic Number,Insight.Database.CodeGenerator,SchemaMappingIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaMappingIdentity.cs,SchemaMappingIdentity,The following statement contains a magic number: _hashCode *= 13;  
Magic Number,Insight.Database.CodeGenerator,SchemaMappingIdentity,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\SchemaMappingIdentity.cs,SchemaMappingIdentity,The following statement contains a magic number: _hashCode *= 13;  
Magic Number,Insight.Database.CodeGenerator,TypeHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\TypeHelper.cs,EmitDefaultValue,The following statement contains a magic number: if (type.IsGenericParameter || type.IsValueType) {  	var returnValue = mIL.DeclareLocal (type);  	mIL.Emit (returnValue.LocalIndex < 256 ? OpCodes.Ldloca_S : OpCodes.Ldloca' returnValue);  	mIL.Emit (OpCodes.Initobj' type);  	mIL.Emit (OpCodes.Ldloc' returnValue);  } else  	mIL.Emit (OpCodes.Ldnull);  
Magic Number,Insight.Database.CodeGenerator,TypeHelper,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\TypeHelper.cs,EmitDefaultValue,The following statement contains a magic number: mIL.Emit (returnValue.LocalIndex < 256 ? OpCodes.Ldloca_S : OpCodes.Ldloca' returnValue);  
Magic Number,Insight.Database.Reliable,RetryStrategy,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Reliable\RetryStrategy.cs,RetryStrategy,The following statement contains a magic number: MaxRetryCount = 10;  
Magic Number,Insight.Database.Reliable,RetryStrategy,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Reliable\RetryStrategy.cs,RetryStrategy,The following statement contains a magic number: MinBackOff = new TimeSpan (0' 0' 0' 0' 100);  
Magic Number,Insight.Database.Reliable,RetryStrategy,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Reliable\RetryStrategy.cs,RetryStrategy,The following statement contains a magic number: IncrementalBackOff = new TimeSpan (0' 0' 0' 0' 100);  
Magic Number,Insight.Database.Structure,Guardian,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Guardian.generated.cs,ReadCurrent,The following statement contains a magic number: ParentId3 = (T3)reader [2];  
Magic Number,Insight.Database.Structure,Guardian,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Guardian.generated.cs,ReadCurrent,The following statement contains a magic number: ParentId4 = (T4)reader [3];  
Magic Number,Insight.Database.Structure,Guardian,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Guardian.generated.cs,ReadCurrent,The following statement contains a magic number: ParentId5 = (T5)reader [4];  
Magic Number,Insight.Database.Structure,Guardian,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Guardian.generated.cs,ReadCurrent,The following statement contains a magic number: ParentId6 = (T6)reader [5];  
Magic Number,Insight.Database.Structure,Guardian,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Guardian.generated.cs,ReadCurrent,The following statement contains a magic number: ParentId7 = (T7)reader [6];  
Magic Number,Insight.Database.Structure,IDAccessor,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\IDAccessor.cs,GetTupleType,The following statement contains a magic number: switch (count) {  case 1:  	return typeof(Tuple<>);  case 2:  	return typeof(Tuple<' >);  case 3:  	return typeof(Tuple<' ' >);  case 4:  	return typeof(Tuple<' ' ' >);  case 5:  	return typeof(Tuple<' ' ' ' >);  case 6:  	return typeof(Tuple<' ' ' ' ' >);  case 7:  	return typeof(Tuple<' ' ' ' ' ' >);  default:  	throw new ArgumentException ("Too many levels of children.");  }  
Magic Number,Insight.Database.Structure,IDAccessor,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\IDAccessor.cs,GetTupleType,The following statement contains a magic number: switch (count) {  case 1:  	return typeof(Tuple<>);  case 2:  	return typeof(Tuple<' >);  case 3:  	return typeof(Tuple<' ' >);  case 4:  	return typeof(Tuple<' ' ' >);  case 5:  	return typeof(Tuple<' ' ' ' >);  case 6:  	return typeof(Tuple<' ' ' ' ' >);  case 7:  	return typeof(Tuple<' ' ' ' ' ' >);  default:  	throw new ArgumentException ("Too many levels of children.");  }  
Magic Number,Insight.Database.Structure,IDAccessor,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\IDAccessor.cs,GetTupleType,The following statement contains a magic number: switch (count) {  case 1:  	return typeof(Tuple<>);  case 2:  	return typeof(Tuple<' >);  case 3:  	return typeof(Tuple<' ' >);  case 4:  	return typeof(Tuple<' ' ' >);  case 5:  	return typeof(Tuple<' ' ' ' >);  case 6:  	return typeof(Tuple<' ' ' ' ' >);  case 7:  	return typeof(Tuple<' ' ' ' ' ' >);  default:  	throw new ArgumentException ("Too many levels of children.");  }  
Magic Number,Insight.Database.Structure,IDAccessor,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\IDAccessor.cs,GetTupleType,The following statement contains a magic number: switch (count) {  case 1:  	return typeof(Tuple<>);  case 2:  	return typeof(Tuple<' >);  case 3:  	return typeof(Tuple<' ' >);  case 4:  	return typeof(Tuple<' ' ' >);  case 5:  	return typeof(Tuple<' ' ' ' >);  case 6:  	return typeof(Tuple<' ' ' ' ' >);  case 7:  	return typeof(Tuple<' ' ' ' ' ' >);  default:  	throw new ArgumentException ("Too many levels of children.");  }  
Magic Number,Insight.Database.Structure,IDAccessor,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\IDAccessor.cs,GetTupleType,The following statement contains a magic number: switch (count) {  case 1:  	return typeof(Tuple<>);  case 2:  	return typeof(Tuple<' >);  case 3:  	return typeof(Tuple<' ' >);  case 4:  	return typeof(Tuple<' ' ' >);  case 5:  	return typeof(Tuple<' ' ' ' >);  case 6:  	return typeof(Tuple<' ' ' ' ' >);  case 7:  	return typeof(Tuple<' ' ' ' ' ' >);  default:  	throw new ArgumentException ("Too many levels of children.");  }  
Magic Number,Insight.Database.Structure,IDAccessor,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\IDAccessor.cs,GetTupleType,The following statement contains a magic number: switch (count) {  case 1:  	return typeof(Tuple<>);  case 2:  	return typeof(Tuple<' >);  case 3:  	return typeof(Tuple<' ' >);  case 4:  	return typeof(Tuple<' ' ' >);  case 5:  	return typeof(Tuple<' ' ' ' >);  case 6:  	return typeof(Tuple<' ' ' ' ' >);  case 7:  	return typeof(Tuple<' ' ' ' ' ' >);  default:  	throw new ArgumentException ("Too many levels of children.");  }  
Magic Number,Insight.Database.Structure,RecordReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\RecordReader.cs,GetGuardianType,The following statement contains a magic number: switch (count) {  case 1:  	return typeof(Guardian<>);  case 2:  	return typeof(Guardian<' >);  case 3:  	return typeof(Guardian<' ' >);  case 4:  	return typeof(Guardian<' ' ' >);  case 5:  	return typeof(Guardian<' ' ' ' >);  case 6:  	return typeof(Guardian<' ' ' ' ' >);  case 7:  	return typeof(Guardian<' ' ' ' ' ' >);  case 8:  	return typeof(Guardian<' ' ' ' ' ' ' >);  default:  	throw new ArgumentException ("Too many child levels.");  }  
Magic Number,Insight.Database.Structure,RecordReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\RecordReader.cs,GetGuardianType,The following statement contains a magic number: switch (count) {  case 1:  	return typeof(Guardian<>);  case 2:  	return typeof(Guardian<' >);  case 3:  	return typeof(Guardian<' ' >);  case 4:  	return typeof(Guardian<' ' ' >);  case 5:  	return typeof(Guardian<' ' ' ' >);  case 6:  	return typeof(Guardian<' ' ' ' ' >);  case 7:  	return typeof(Guardian<' ' ' ' ' ' >);  case 8:  	return typeof(Guardian<' ' ' ' ' ' ' >);  default:  	throw new ArgumentException ("Too many child levels.");  }  
Magic Number,Insight.Database.Structure,RecordReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\RecordReader.cs,GetGuardianType,The following statement contains a magic number: switch (count) {  case 1:  	return typeof(Guardian<>);  case 2:  	return typeof(Guardian<' >);  case 3:  	return typeof(Guardian<' ' >);  case 4:  	return typeof(Guardian<' ' ' >);  case 5:  	return typeof(Guardian<' ' ' ' >);  case 6:  	return typeof(Guardian<' ' ' ' ' >);  case 7:  	return typeof(Guardian<' ' ' ' ' ' >);  case 8:  	return typeof(Guardian<' ' ' ' ' ' ' >);  default:  	throw new ArgumentException ("Too many child levels.");  }  
Magic Number,Insight.Database.Structure,RecordReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\RecordReader.cs,GetGuardianType,The following statement contains a magic number: switch (count) {  case 1:  	return typeof(Guardian<>);  case 2:  	return typeof(Guardian<' >);  case 3:  	return typeof(Guardian<' ' >);  case 4:  	return typeof(Guardian<' ' ' >);  case 5:  	return typeof(Guardian<' ' ' ' >);  case 6:  	return typeof(Guardian<' ' ' ' ' >);  case 7:  	return typeof(Guardian<' ' ' ' ' ' >);  case 8:  	return typeof(Guardian<' ' ' ' ' ' ' >);  default:  	throw new ArgumentException ("Too many child levels.");  }  
Magic Number,Insight.Database.Structure,RecordReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\RecordReader.cs,GetGuardianType,The following statement contains a magic number: switch (count) {  case 1:  	return typeof(Guardian<>);  case 2:  	return typeof(Guardian<' >);  case 3:  	return typeof(Guardian<' ' >);  case 4:  	return typeof(Guardian<' ' ' >);  case 5:  	return typeof(Guardian<' ' ' ' >);  case 6:  	return typeof(Guardian<' ' ' ' ' >);  case 7:  	return typeof(Guardian<' ' ' ' ' ' >);  case 8:  	return typeof(Guardian<' ' ' ' ' ' ' >);  default:  	throw new ArgumentException ("Too many child levels.");  }  
Magic Number,Insight.Database.Structure,RecordReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\RecordReader.cs,GetGuardianType,The following statement contains a magic number: switch (count) {  case 1:  	return typeof(Guardian<>);  case 2:  	return typeof(Guardian<' >);  case 3:  	return typeof(Guardian<' ' >);  case 4:  	return typeof(Guardian<' ' ' >);  case 5:  	return typeof(Guardian<' ' ' ' >);  case 6:  	return typeof(Guardian<' ' ' ' ' >);  case 7:  	return typeof(Guardian<' ' ' ' ' ' >);  case 8:  	return typeof(Guardian<' ' ' ' ' ' ' >);  default:  	throw new ArgumentException ("Too many child levels.");  }  
Magic Number,Insight.Database.Structure,RecordReader,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\RecordReader.cs,GetGuardianType,The following statement contains a magic number: switch (count) {  case 1:  	return typeof(Guardian<>);  case 2:  	return typeof(Guardian<' >);  case 3:  	return typeof(Guardian<' ' >);  case 4:  	return typeof(Guardian<' ' ' >);  case 5:  	return typeof(Guardian<' ' ' ' >);  case 6:  	return typeof(Guardian<' ' ' ' ' >);  case 7:  	return typeof(Guardian<' ' ' ' ' ' >);  case 8:  	return typeof(Guardian<' ' ' ' ' ' ' >);  default:  	throw new ArgumentException ("Too many child levels.");  }  
Missing Default,Insight.Database,Query,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Structure\Query.cs,GetOneToOneType,The following switch statement is missing a default case: switch (types.Length) {  case 1:  	oneToOne = typeof(OneToOne<>);  	break;  case 2:  	oneToOne = typeof(OneToOne<' >);  	break;  case 3:  	oneToOne = typeof(OneToOne<' ' >);  	break;  case 4:  	oneToOne = typeof(OneToOne<' ' ' >);  	break;  case 5:  	oneToOne = typeof(OneToOne<' ' ' ' >);  	break;  case 6:  	oneToOne = typeof(OneToOne<' ' ' ' ' >);  	break;  case 7:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' >);  	break;  case 8:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' >);  	break;  case 9:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' >);  	break;  case 10:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' >);  	break;  case 11:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' >);  	break;  case 12:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 13:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 14:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 15:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  case 16:  	oneToOne = typeof(OneToOne<' ' ' ' ' ' ' ' ' ' ' ' ' ' ' >);  	break;  }  
Missing Default,Insight.Database,DynamicConnection,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\DynamicConnection.cs,DoInvokeMember,The following switch statement is missing a default case: switch (argumentNames [i]) {  case "cancellationToken":  	cancellationToken = (CancellationToken)args [i + unnamedParameterCount];  	specialParameters++;  	break;  case "transaction":  	transaction = (IDbTransaction)args [i + unnamedParameterCount];  	specialParameters++;  	break;  case "commandTimeout":  	timeout = (int)args [i + unnamedParameterCount];  	specialParameters++;  	break;  case "returnType":  	returnType = (Type)args [i + unnamedParameterCount];  	specialParameters++;  	break;  case "returns":  	returns = (IQueryReader)args [i + unnamedParameterCount];  	specialParameters++;  	break;  case "outputParameters":  	outputParameters = args [i + unnamedParameterCount];  	specialParameters++;  	break;  }  
Missing Default,Insight.Database.CodeGenerator,InterfaceGenerator,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\CodeGenerator\InterfaceGenerator.cs,IsSpecialParameter,The following switch statement is missing a default case: switch (parameterInfo.Name) {  case "returns":  case "commandBehavior":  case "closeConnection":  case "commandTimeout":  case "transaction":  case "cancellationToken":  	return true;  }  
Missing Default,Insight.Database.Reliable,RetryStrategy,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database\Reliable\RetryStrategy.cs,CheckAsyncResult,The following switch statement is missing a default case: switch (t.Status) {  case TaskStatus.Canceled:  	tcs.SetCanceled ();  	return;  case TaskStatus.RanToCompletion:  	tcs.SetResult (t.Result);  	return;  }  
