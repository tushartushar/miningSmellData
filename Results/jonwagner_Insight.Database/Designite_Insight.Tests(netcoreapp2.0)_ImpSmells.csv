Implementation smell,Namespace,Class,File,Method,Description
Long Method,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The method has 139 lines of code.
Long Identifier,Insight.Tests,ChildWithConflictedField,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,,The length of the parameter OtherFieldToTriggerDepthSearch is 30.
Long Identifier,Insight.Tests,ClassWithSuffixedUnderscore,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,,The length of the parameter ClassWithSuffixedUnderscore_ID is 30.
Long Statement,Insight.Tests,AsyncMiscTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncMiscTests.cs,DerivedRecordsetsCanBeReturned,The length of the statement  "			var results = Connection().QueryResultsSqlAsync<PageData<ParentTestData>>(ParentTestData.Sql + "SELECT TotalCount=70").Result; " is 126.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithGenerics13,The length of the statement  "			var result = Connection().QueryResultsSqlAsync<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>( " is 125.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithGenerics14,The length of the statement  "			var result = Connection().QueryResultsSqlAsync<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>( " is 131.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithGenerics15,The length of the statement  "			var result = Connection().QueryResultsSqlAsync<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>( " is 137.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithGenerics16,The length of the statement  "			var result = Connection().QueryResultsSqlAsync<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>( " is 143.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure6,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result; " is 131.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure7,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result; " is 145.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure8,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result; " is 159.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure9,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result; " is 173.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure10,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result; " is 187.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure11,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result; " is 201.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure12,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result; " is 215.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure13,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result; " is 229.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure14,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result; " is 243.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure15,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result; " is 257.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure16,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result; " is 271.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics4,The length of the statement  "			var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(4)).Result; " is 128.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics5,The length of the statement  "			var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(5)).Result; " is 142.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics6,The length of the statement  "			var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(6)).Result; " is 156.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics7,The length of the statement  "			var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(7)).Result; " is 170.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics8,The length of the statement  "			var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(8)).Result; " is 184.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics9,The length of the statement  "			var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(9)).Result; " is 198.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics10,The length of the statement  "			var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(10)).Result; " is 213.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics11,The length of the statement  "			var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(11)).Result; " is 227.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics12,The length of the statement  "			var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(12)).Result; " is 241.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics13,The length of the statement  "			var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(13)).Result; " is 255.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics14,The length of the statement  "			var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(14)).Result; " is 269.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics15,The length of the statement  "			var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(15)).Result; " is 283.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics16,The length of the statement  "			var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(16)).Result; " is 297.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure7,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result; " is 127.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure8,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result; " is 141.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure9,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result; " is 155.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure10,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result; " is 169.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure11,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result; " is 183.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure12,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result; " is 197.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure13,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result; " is 211.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure14,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result; " is 225.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure15,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result; " is 239.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure16,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result; " is 253.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics4,The length of the statement  "			var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(4)).Result; " is 129.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics5,The length of the statement  "			var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(5)).Result; " is 143.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics6,The length of the statement  "			var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(6)).Result; " is 157.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics7,The length of the statement  "			var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(7)).Result; " is 171.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics8,The length of the statement  "			var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(8)).Result; " is 185.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics9,The length of the statement  "			var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(9)).Result; " is 199.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics10,The length of the statement  "			var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(10)).Result; " is 214.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics11,The length of the statement  "			var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(11)).Result; " is 228.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics12,The length of the statement  "			var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(12)).Result; " is 242.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics13,The length of the statement  "			var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(13)).Result; " is 256.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics14,The length of the statement  "			var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(14)).Result; " is 270.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics15,The length of the statement  "			var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(15)).Result; " is 284.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics16,The length of the statement  "			var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(16)).Result; " is 298.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_6_6,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 122.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_7_7,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 136.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_7_7,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 121.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_7_7,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 121.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_7_7,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 121.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_7_7,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 121.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_7_7,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 121.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_7_7,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 121.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 150.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 135.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 135.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 135.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 135.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 135.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 135.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 135.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 164.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 149.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 149.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 149.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 149.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 149.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 149.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 149.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 149.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 178.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 163.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 163.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 163.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 163.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 163.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 163.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 163.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 163.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 163.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 192.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 206.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 220.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 234.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 248.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 262.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy6,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 145.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy7,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 145.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy7,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 171.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy8,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 145.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy8,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 171.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy8,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 197.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy9,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 145.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy9,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 171.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy9,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 197.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy9,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 223.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy10,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 145.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy10,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 171.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy10,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 197.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy10,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 223.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy10,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 249.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy11,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 145.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy11,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 171.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy11,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 197.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy11,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 223.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy11,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 249.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy11,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 275.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy12,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 145.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy12,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 171.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy12,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 197.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy12,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 223.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy12,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 249.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy12,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 275.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy12,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 301.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy13,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 145.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy13,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 171.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy13,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 197.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy13,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 223.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy13,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 249.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy13,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 275.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy13,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 301.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy13,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 327.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 145.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 171.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 197.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 223.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 249.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 275.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 301.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 327.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 353.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 145.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 171.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 197.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 223.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 249.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 275.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 301.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 327.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 353.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 379.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 145.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 171.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 197.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 223.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 249.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 275.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 301.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 327.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 353.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 379.
Long Statement,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)) " is 405.
Long Statement,Insight.Tests,AsyncQueryReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryReaderTests.cs,TestForceClose,The length of the statement  "				var result = c.QuerySqlAsync("SELECT @p"' new { p = 1 }' reader => 1' commandBehavior: CommandBehavior.CloseConnection).Result; " is 127.
Long Statement,Insight.Tests,TestSetup,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BaseTest.cs,CreateTestDatabase,The length of the statement  "				connection.ExecuteSql(String.Format("IF NOT EXISTS(SELECT * FROM master.sys.databases WHERE name = '{0}') CREATE DATABASE [{0}]"' TestDatabaseName())); " is 151.
Long Statement,Insight.Tests,TestSetup,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BaseTest.cs,CreateTestDatabase,The length of the statement  "				using (var stream = typeof(TestSetup).GetTypeInfo().Assembly.GetManifestResourceStream("Insight.Tests.InsightDbTest.sql")) " is 122.
Long Statement,Insight.Tests,TestSetup,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BaseTest.cs,CreateTestDatabase,The length of the statement  "					foreach (var script in reader.ReadToEnd().Split(new String[] { Environment.NewLine + "GO" + Environment.NewLine }' StringSplitOptions.None)) " is 140.
Long Statement,Insight.Tests,TestSetup,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BaseTest.cs,DropTestDatabase,The length of the statement  "				connection.ExecuteSql(String.Format("IF EXISTS(SELECT * FROM master.sys.databases WHERE name = '{0}') BEGIN ALTER DATABASE [{0}] SET SINGLE_USER WITH ROLLBACK IMMEDIATE DROP DATABASE [{0}] END"' TestDatabaseName())); " is 216.
Long Statement,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,VerifyRecordsInserted,The length of the statement  "			var items = connection.QuerySql<InsightTestData>(String.Format("SELECT * FROM {0} ORDER BY Int"' tableName)' transaction: transaction); " is 135.
Long Statement,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,TestIssue103WithKeepIdentity,The length of the statement  "				connection.BulkCopy("MerchNameTermsTransactions"' new List<MerchNameTermTransaction>() { m }' options: InsightBulkCopyOptions.KeepIdentity); " is 140.
Long Statement,Insight.Tests,DbReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DbReaderTests.cs,TestMultipleDynamicObjectQueriesAgainstReader,The length of the statement  "			// this failed at one point because the expando converter was holding onto a reader in a closure and calling the wrong one. " is 123.
Long Statement,Insight.Tests,DynamicConnectionTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicConnectionTest.cs,TestReturnTypeOverrideWithJustWithReturns,The length of the statement  "			IList<ParentTestData> results = Connection().Dynamic().GetParentTestData(returns: Query.Returns(Some<ParentTestData>.Records)); " is 127.
Long Statement,Insight.Tests,DynamicConnectionTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicConnectionTest.cs,SqlExceptionShouldNotBeHiddenByDynamicCalls,The length of the statement  "			Assert.Throws(typeof(SqlException)' () => Connection().Dynamic().RaiseAnError(value: 4' returnType: typeof(Results<int>))); " is 123.
Long Statement,Insight.Tests,DynamicConnectionTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicConnectionTest.cs,DynamicProcCanHaveTableParameters,The length of the statement  "			var results = Connection().Dynamic().DynamicProcWithTable(Table: new List<DynamicTableType>() { new DynamicTableType() { Value = 9 } }); " is 136.
Long Statement,Insight.Tests,AttributeParentAutoChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List,The length of the statement  "				var parent = Connection().QuerySql("SELECT ID1=1' ID2=2; SELECT ParentID1=1' ParentID2=2' Value=2 UNION SELECT ParentID1=1' ParentID2=2' Value=3"' null' " is 152.
Long Statement,Insight.Tests,AttributeParentAutoChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Single,The length of the statement  "				var parent = Connection().QuerySql("SELECT ID1=1' ID2=2; SELECT ParentID1=1' ParentID2=2' Value=2 UNION SELECT ParentID1=1' ParentID2=2' Value=3"' null' " is 152.
Long Statement,Insight.Tests,AttributeParentColumnChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List,The length of the statement  "				var parent = Connection().QuerySql("SELECT ID1=1' ID2=2; SELECT ParentID1=1' ParentID2=2' Value=2 UNION SELECT ParentID1=1' ParentID2=2' Value=3"' null' " is 152.
Long Statement,Insight.Tests,AttributeParentColumnChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Single,The length of the statement  "				var parent = Connection().QuerySql("SELECT ID1=1' ID2=2; SELECT ParentID1=1' ParentID2=2' Value=2 UNION SELECT ParentID1=1' ParentID2=2' Value=3"' null' " is 152.
Long Statement,Insight.Tests,ManualParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List,The length of the statement  "				var parent = Connection().QuerySql("SELECT ID1=1' ID2=2; SELECT ParentID1=1' ParentID2=2' Value=2 UNION SELECT ParentID1=1' ParentID2=2' Value=3"' null' " is 152.
Long Statement,Insight.Tests,ManualParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List,The length of the statement  "					.ThenChildren(Some<Child>.Records.GroupBy(c => Tuple.Create(c.ParentID1' c.ParentID2))' id: p => Tuple.Create(p.ID1' p.ID2))) " is 125.
Long Statement,Insight.Tests,ManualParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Single,The length of the statement  "				var parent = Connection().QuerySql("SELECT ID1=1' ID2=2; SELECT ParentID1=1' ParentID2=2' Value=2 UNION SELECT ParentID1=1' ParentID2=2' Value=3"' null' " is 152.
Long Statement,Insight.Tests,ManualParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Single,The length of the statement  "						.ThenChildren(Some<Child>.Records.GroupBy(c => Tuple.Create(c.ParentID1' c.ParentID2))' id: p => Tuple.Create(p.ID1' p.ID2))); " is 126.
Long Statement,Insight.Tests,ManualParentAutoChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List,The length of the statement  "				var parent = Connection().QuerySql("SELECT ID1=1' ID2=2; SELECT ParentID1=1' ParentID2=2' Value=2 UNION SELECT ParentID1=1' ParentID2=2' Value=3"' null' " is 152.
Long Statement,Insight.Tests,ManualParentAutoChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Single,The length of the statement  "				var parent = Connection().QuerySql("SELECT ID1=1' ID2=2; SELECT ParentID1=1' ParentID2=2' Value=2 UNION SELECT ParentID1=1' ParentID2=2' Value=3"' null' " is 152.
Long Statement,Insight.Tests,ManualParentColumnChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List,The length of the statement  "				var parent = Connection().QuerySql("SELECT ID1=1' ID2=2; SELECT ParentID1=1' ParentID2=2' Value=2 UNION SELECT ParentID1=1' ParentID2=2' Value=3"' null' " is 152.
Long Statement,Insight.Tests,ManualParentColumnChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Single,The length of the statement  "				var parent = Connection().QuerySql("SELECT ID1=1' ID2=2; SELECT ParentID1=1' ParentID2=2' Value=2 UNION SELECT ParentID1=1' ParentID2=2' Value=3"' null' " is 152.
Long Statement,Insight.Tests,AttributeParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List,The length of the statement  "				var parent = Connection().QuerySql("SELECT ID1=1' ID2=2; SELECT ParentID1=1' ParentID2=2' Value=2 UNION SELECT ParentID1=1' ParentID2=2' Value=3"' null' " is 152.
Long Statement,Insight.Tests,AttributeParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Single,The length of the statement  "				var parent = Connection().QuerySql("SELECT ID1=1' ID2=2; SELECT ParentID1=1' ParentID2=2' Value=2 UNION SELECT ParentID1=1' ParentID2=2' Value=3"' null' " is 152.
Long Statement,Insight.Tests,AttributeParentAttributeChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List,The length of the statement  "				var parent = Connection().QuerySql("SELECT ID1=1' ID2=2; SELECT Foo1=1' Foo2=2' Value=2 UNION SELECT Foo1=1' Foo2=2' Value=3"' null' " is 132.
Long Statement,Insight.Tests,AttributeParentAttributeChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Single,The length of the statement  "				var parent = Connection().QuerySql("SELECT ID1=1' ID2=2; SELECT Foo1=1' Foo2=2' Value=2 UNION SELECT Foo1=1' Foo2=2' Value=3"' null' " is 132.
Long Statement,Insight.Tests,InsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InsertTests.cs,TestIssue131,The length of the statement  "			Assert.Throws<OptimisticConcurrencyException>(() => c.InsertSql<InsertRecord>("THROW 51000' 'At least one record has changed or does not exist. (CONCURRENCY CHECK)'' 1;"' i)); " is 175.
Long Statement,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,SchemaShouldBeInherited,The length of the statement  "			Assert.Throws<InvalidOperationException>(() => Connection().As<IBeerRepositoryWithSchema>().InsertBeer(1)' "The stored procedure 'MySchema.MyOtherInsertProc' doesn't exist."); " is 175.
Long Statement,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanPassStructureToInterface,The length of the statement  "			var result = i.GetBeerAndMoreWithExplicitStructure(Insight.Database.Structure.ListReader<InfiniteBeer' InfiniteBeer>.Default); " is 126.
Long Statement,Insight.Tests,JsonTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\JsonTests.cs,ListOfClassCanBeSerializedAsJsonParameter,The length of the statement  "			Assert.AreEqual("[{\"Bar\":5'\"Foo\":\"foo\"}'{\"Bar\":6'\"Foo\":\"foo2\"}]"' Connection().Single<string>("ListAsJsonParameter"' input)); " is 137.
Long Statement,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,TestEnumerableClassArrayParameters,The length of the statement  "			Assert.Throws<SqlException>(() => Connection().QuerySql<InsightTestData>("SELECT * FROM @p"' new { p = new InsightTestData[] { new InsightTestData()' null' new InsightTestData() } })); " is 184.
Long Statement,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,TestEnumerableClassListParameters,The length of the statement  "			Assert.Throws<SqlException>(() => Connection().QuerySql<InsightTestData>("SELECT * FROM @p"' new { p = new List<InsightTestData>() { new InsightTestData()' null' new InsightTestData() } })); " is 190.
Long Statement,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,SqlTextTVPShouldAutoDetectTableType,The length of the statement  "				var items = Connection().QuerySql<RenamedInsightTestData>("SELECT * FROM @InsightTestDataTable"' new { InsightTestDataTable = array.ToList() }); " is 144.
Long Statement,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,SqlTextTVPShouldAutoDetectTableType,The length of the statement  "			Assert.Throws<SqlException>(() => Connection().QuerySql<InsightTestData>("SELECT * FROM @p"' new { p = new List<InsightTestData>() { new InsightTestData()' null' new InsightTestData() } })); " is 190.
Long Statement,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,TestSerializingBasedOnWhereSelectIterator,The length of the statement  "			// because we are going to pass in this select iterator' we are testing that we pull out the proper underlying IEnumerable interface " is 132.
Long Statement,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,IntefaceMethodsFlattenParameters2,The length of the statement  "			FastExpando result = Connection().As<IFlattenParameters>().Flatten(1' new FlattenedParameters() { Y1 = 2' Y2 = 3 }' new FlattenedParameters2() { Z1 = 4' Z2 = 5 }); " is 163.
Long Statement,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,AttributeCanDisableFlattening,The length of the statement  "			Assert.Throws<SqlException>(() => Connection().As<IFlattenParameters>().DontFlatten(1' new FlattenedParameters() { Y1 = 2' Y2 = 3 })); " is 134.
Long Statement,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,InputParametersCanMapChildFields,The length of the statement  "			FastExpando result = (FastExpando)Connection().QuerySql("SELECT x=@x' y1=@y1' y2=@y2"' new { X = 1' Y = new { Y1 = 2' Y2 = 3 } }).First(); " is 138.
Long Statement,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,DeepBindingDisabledByDefault,The length of the statement  "			Assert.Throws<SqlException>(() => Connection().QuerySql("SELECT xx=@x' y1=@y1' y2=@y2"' new { XX = 1' Y = new { Y1 = 2' Y2 = 3 } }).First()); " is 141.
Long Statement,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,InputParametersCanMapChildFields2,The length of the statement  "			FastExpando result = (FastExpando)Connection().QuerySql("SELECT x=@x' y1=@y1' y2=@y2' z1=@z1' z2=@z2"' new { X = 1' Y = new { Y1 = 2' Y2 = 3 }' Z = new { Z1 = 4' Z2 = 5 } }).First(); " is 182.
Long Statement,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,TVPCanMapChildField,The length of the statement  "			var result = Connection().QuerySql<TVPParent' TVPChild>("SELECT * FROM InsertTestDataTable WHERE X = @x"' parent).Single(); " is 123.
Long Statement,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,CanUseColumnAttributeOnDerivedClass,The length of the statement  "			var result = Connection().QuerySql<DerivedForRenaming>("SELECT DerivedRenamed='derived'' BaseRenamed='base'"' null).First(); " is 124.
Long Statement,Insight.Tests,ObjectReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ObjectReaderTests.cs,TestConvertToTypeWhileReading,The length of the statement  "					connection.ExecuteSql(String.Format("CREATE PROC {0} @values {1} READONLY AS SELECT value FROM @values"' procName' tableName)); " is 127.
Long Statement,Insight.Tests,ObjectReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ObjectReaderTests.cs,ImplicitOperatorsShouldBeUsedIfAvailable,The length of the statement  "					connection.ExecuteSql("CREATE PROC ObjectReader_Implicit @values ObjectReader_ImplicitTable READONLY AS SELECT value FROM @values"); " is 132.
Long Statement,Insight.Tests,ObjectReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ObjectReaderTests.cs,IConvertibleShouldBeUsedIfAvailable,The length of the statement  "					connection.ExecuteSql("CREATE PROC ObjectReader_IConvertible @values ObjectReader_IConvertibleTable READONLY AS SELECT value FROM @values"); " is 140.
Long Statement,Insight.Tests,ObjectReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ObjectReaderTests.cs,TestReadingClassType,The length of the statement  "					connection.ExecuteSql(String.Format("CREATE PROC {0} @values {1} READONLY AS SELECT value FROM @values"' procName' tableName)); " is 127.
Long Statement,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestTypes,The length of the statement  "				ReturnTypeTest<DateTime>.Test(DateTime.Now.Date' _connection' "date");				// SQL will round the time' so need to knock off some milliseconds  " is 140.
Long Statement,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestTypes,The length of the statement  "				ReturnTypeTest<Nullable<DateTime>>.Test(DateTime.Now.Date' _connection' "date");				// SQL will round the time' so need to knock off some milliseconds  " is 150.
Long Statement,Insight.Tests,RetryStrategyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RetryStrategyTests.cs,RetryStrategyShouldCompleteWhenHandlerThrows,The length of the statement  "			Assert.Throws<AggregateException>(() => s.ExecuteWithRetryAsync<int>(null' () => Task<int>.Factory.StartNew(() => { throw new Exception(); })).Wait()); " is 151.
Long Statement,Insight.Tests,CustomSerializationTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SerializationTests.cs,BooleanSerializerWorksWithStrings,The length of the statement  "                c.ExecuteSql("CREATE PROC TestBool(@IsBool varchar(10)' @IsNullableBool varchar(10)) AS SELECT IsBool=@IsBool' IsNullableBool=@IsNullableBool;"); " is 145.
Long Statement,Insight.Tests,StructureTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,MultiReaderCanDeserializeDifferentClasses,The length of the statement  "            var results = Connection().QuerySql("SELECT [Type]='a'' A=1' B=NULL UNION SELECT [Type]='b'' A=NULL' B=2"' Parameters.Empty' Query.Returns(mr)); " is 144.
Long Statement,Insight.Tests,StructureTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,TestIssue199,The length of the statement  "            var result = Connection().SingleSql<ChildRecord' GrandChildRecord>("SELECT ChildRecordID=12345' GrandChildRecordId=99999"); " is 123.
Long Statement,Insight.Tests,StructureTest_ChildMappingHelperUnitTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,GetParentIDAccessor_UseParentsIDToGetParentID,The length of the statement  "            var result = ChildMapperTestingHelper.FindParentIDAccessor(typeof(TestClasses.InvoiceLine)' null' typeof(TestClasses.Invoice)); " is 127.
Long Statement,Insight.Tests,StructureTest_ChildMappingHelperUnitTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,GetParentIDAccessor_WhenPKIsJustId,The length of the statement  "            var result = ChildMapperTestingHelper.FindParentIDAccessor(typeof(TestClasses.Glass238a)' null' typeof(TestClasses.Beer238)); " is 125.
Long Statement,Insight.Tests,StructureTest_ChildMappingHelperUnitTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,GetParentIDAccessor_WhenPKIsJustId_Underscored,The length of the statement  "            var result = ChildMapperTestingHelper.FindParentIDAccessor(typeof(TestClasses.Glass238b)' null' typeof(TestClasses.Beer238)); " is 125.
Long Statement,Insight.Tests,StructureTest_ChildMappingHelperUnitTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,GetIDAccessor_ByName_BadName,The length of the statement  "                    => ChildMapperTestingHelper.GetIDAccessor(typeof(TestClasses.ClassWithSuffixedUnderscore)' "ClassWithSuffixedUnderscore_ID' foo123")); " is 134.
Long Statement,Insight.Tests,StructureTest_ChildMappingHelperUnitTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,GetIDAccessor_ByName_BadName,The length of the statement  "                    => ChildMapperTestingHelper.GetIDAccessor(typeof(TestClasses.ClassWithSuffixedUnderscore)' "foo123' ClassWithSuffixedUnderscore_ID")); " is 134.
Long Statement,Insight.Tests,StructureTest_ChildMappingHelperUnitTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,FindParentIDAccessor_ChildEndingWithUnderscoreParentID,The length of the statement  "            var result = ChildMapperTestingHelper.FindParentIDAccessor(typeof(TestClasses.ChildEndingWithUnderscoreParentID)' null' null); " is 126.
Long Statement,Insight.Tests,StructureTest_ChildMappingHelperUnitTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,GetParentIDAccessor_ByMultiAttribute,The length of the statement  "            var result = ChildMapperTestingHelper.FindParentIDAccessor(typeof(TestClasses.InvoiceLineWithMultiAttributes)' null' null); " is 123.
Long Statement,Insight.Tests,StructureTest_ChildMappingHelperUnitTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,FindParentIDAccessor_RespectReservedWords,The length of the statement  "            var result = ChildMapperTestingHelper.FindParentIDAccessor(typeof(TestClasses.Parent)' null' typeof(TestClasses.Grandparent)); " is 126.
Long Statement,Insight.Tests,Issue129,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,Test129,The length of the statement  "            var results = Connection().QuerySql<TestParent' TestChild>("SELECT ParentA=1' ParentB=2' ChildA=3' ChildB=4' ParentC=5"); " is 121.
Long Statement,Insight.Tests,Issue129,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,Test129,The length of the statement  "            results = Connection().QuerySql<TestParent' TestChild>("SELECT ParentA=1' ParentB=2' ChildA=NULL' ChildB=NULL' ParentC=5"); " is 123.
Long Statement,Insight.Tests,Issue142,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,AtomicChildRecords,The length of the statement  "            var results = Connection().QuerySql("SELECT ID=1; SELECT ParentID=1' Name='Child1' UNION SELECT ParentID=1' Name='Child2'"' null' " is 129.
Long Statement,Insight.Tests,Issue160,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,CustomRecordReaderCanDropNulls,The length of the statement  "            Assert.AreEqual(0' result.Children.Count);  // FAIL! I would expect that the child wouldn't be added' but a null is added " is 121.
Long Statement,Insight.Tests,Issue188,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,ResultsCanBeContinuedWithThenChildren,The length of the statement  "            var results = Connection().QuerySql("SELECT ID=1; SELECT ParentID=1' ID=2; SELECT ID=2; SELECT ParentID=2' ID=3"' null' returns); " is 129.
Long Statement,Insight.Tests,Issue188,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,ResultsCanBeContinuedWithThenChildren2,The length of the statement  "            var results = Connection().QuerySql("SELECT ID=1; SELECT ParentID=1' ID=2; SELECT ID=2; SELECT ParentID=2' ID=3"' null' returns); " is 129.
Long Statement,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,ReturningSubObjectShouldNotThrowWhenAllColumnsAreNull,The length of the statement  "			var supplier = Connection().QuerySql<Supplier' Address>("select id=1' name='supplier'' city=null' country=null").First(); " is 121.
Long Statement,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,ReturningSubObjectShouldNotThrowWhenFirstColumnIsNull,The length of the statement  "			var supplier = Connection().QuerySql<Supplier' Address>("select id=1' name='supplier'' city=null' country='usa'").First(); " is 122.
Long Statement,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SingleParentCanHaveMultipleLevels,The length of the statement  "			var result = Connection().QuerySql("EXEC " + Beer.SelectAllProc + "; SELECT ID=1 UNION SELECT ID=2; SELECT ParentID=1' ID=1 UNION SELECT ParentID=2' ID=2"' null' " is 161.
Long Statement,Insight.Tests,SyncInsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncInsertTests.cs,TestInsertWithIDReturn_ScopeIdentity_SQL,The length of the statement  "				c.InsertSql("INSERT INTO[dbo].[Beer] ([Name]' [Style]) VALUES(@Name ' @Style ); SELECT SCOPE_IDENTITY() AS [Id]"' beer); " is 120.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithGenerics13,The length of the statement  "			var result = Connection().QueryResultsSql<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>( " is 120.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithGenerics14,The length of the statement  "			var result = Connection().QueryResultsSql<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>( " is 126.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithGenerics15,The length of the statement  "			var result = Connection().QueryResultsSql<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>( " is 132.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithGenerics16,The length of the statement  "			var result = Connection().QueryResultsSql<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>( " is 138.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure6,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)); " is 124.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure7,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)); " is 138.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure8,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)); " is 152.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure9,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)); " is 166.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure10,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)); " is 180.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure11,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)); " is 194.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure12,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)); " is 208.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure13,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)); " is 222.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure14,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)); " is 236.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure15,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)); " is 250.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure16,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)); " is 264.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics5,The length of the statement  "			var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(5)); " is 130.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics6,The length of the statement  "			var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(6)); " is 144.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics7,The length of the statement  "			var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(7)); " is 158.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics8,The length of the statement  "			var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(8)); " is 172.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics9,The length of the statement  "			var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(9)); " is 186.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics10,The length of the statement  "			var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(10)); " is 201.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics11,The length of the statement  "			var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(11)); " is 215.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics12,The length of the statement  "			var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(12)); " is 229.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics13,The length of the statement  "			var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(13)); " is 243.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics14,The length of the statement  "			var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(14)); " is 257.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics15,The length of the statement  "			var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(15)); " is 271.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics16,The length of the statement  "			var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(16)); " is 285.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure7,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default); " is 120.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure8,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default); " is 134.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure9,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default); " is 148.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure10,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default); " is 162.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure11,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default); " is 176.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure12,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default); " is 190.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure13,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default); " is 204.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure14,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default); " is 218.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure15,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default); " is 232.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure16,The length of the statement  "				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default); " is 246.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics5,The length of the statement  "			var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(5)); " is 131.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics6,The length of the statement  "			var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(6)); " is 145.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics7,The length of the statement  "			var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(7)); " is 159.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics8,The length of the statement  "			var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(8)); " is 173.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics9,The length of the statement  "			var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(9)); " is 187.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics10,The length of the statement  "			var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(10)); " is 202.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics11,The length of the statement  "			var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(11)); " is 216.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics12,The length of the statement  "			var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(12)); " is 230.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics13,The length of the statement  "			var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(13)); " is 244.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics14,The length of the statement  "			var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(14)); " is 258.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics15,The length of the statement  "			var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(15)); " is 272.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics16,The length of the statement  "			var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(16)); " is 286.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_6_6,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 122.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_7_7,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 136.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_7_7,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 121.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_7_7,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 121.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_7_7,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 121.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_7_7,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 121.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_7_7,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 121.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_7_7,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 121.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 150.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 135.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 135.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 135.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 135.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 135.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 135.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 135.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 164.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 149.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 149.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 149.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 149.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 149.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 149.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 149.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 149.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 178.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 163.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 163.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 163.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 163.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 163.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 163.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 163.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 163.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 163.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 192.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 177.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 206.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 191.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 220.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 205.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 234.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 219.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 248.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 233.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 262.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The length of the statement  "					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records) " is 247.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy4,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 136.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy5,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 136.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy5,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 162.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy6,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 136.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy6,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 162.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy6,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 188.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy7,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 136.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy7,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 162.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy7,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 188.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy7,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 214.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy8,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 136.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy8,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 162.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy8,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 188.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy8,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 214.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy8,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 240.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy9,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 136.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy9,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 162.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy9,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 188.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy9,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 214.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy9,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 240.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy9,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 266.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy10,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 136.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy10,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 162.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy10,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 188.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy10,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 214.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy10,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 240.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy10,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 266.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy10,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 292.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy11,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 136.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy11,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 162.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy11,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 188.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy11,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 214.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy11,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 240.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy11,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 266.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy11,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 292.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy11,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 318.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy12,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 136.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy12,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 162.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy12,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 188.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy12,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 214.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy12,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 240.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy12,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 266.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy12,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 292.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy12,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 318.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy12,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 344.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy13,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 136.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy13,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 162.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy13,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 188.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy13,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 214.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy13,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 240.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy13,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 266.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy13,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 292.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy13,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 318.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy13,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 344.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy13,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 370.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 136.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 162.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 188.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 214.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 240.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 266.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 292.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 318.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 344.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 370.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy14,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 396.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 136.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 162.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 188.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 214.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 240.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 266.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 292.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 318.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 344.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 370.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 396.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy15,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 422.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 136.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 162.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 188.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 214.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 240.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 266.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 292.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 318.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 344.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 370.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 396.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 422.
Long Statement,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy16,The length of the statement  "					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList()) " is 448.
Long Statement,Insight.Tests,TableValuedParameterWithClassesTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TableValuedParametersTests.cs,Given_a_type_which_requires_serialisation_When_using_the_type_in_an_sql_statement_Then_it_does_not_explode,The length of the statement  "			var roundtrippedValue = Connection().ExecuteScalarSql<string>("select @value"' new { value = new MyCustomClass { Value = "classes are best" } }); " is 145.
Long Statement,Insight.Tests,TableValuedParameterWithClassesTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TableValuedParametersTests.cs,Given_a_table_type_with_a_property_that_is_a_class_which_requires_serialisation_When_using_the_type_in_an_sql_statement_Then_it_does_not_explode,The length of the statement  "			var roundtrippedValue = Connection().ExecuteScalarSql<string>("select top 1 String from @values"' new { values = new[] { new InsightTestDataString() { String = new MyCustomClass { Value = "classes are better" } } } }); " is 218.
Long Statement,Insight.Tests,TableValuedParameterWithClassesTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TableValuedParametersTests.cs,Given_a_table_type_with_a_property_that_is_a_class_which_requires_serialisation_When_using_the_type_in_an_sql_statement_in_a_transaction_Then_it_does_not_explode,The length of the statement  "				var roundtrippedValue = connection.ExecuteScalarSql<string>("select top 1 String from @values"' new {values = new[] {new InsightTestDataString() {String = new MyCustomClass {Value = "classes are better"}}}}); " is 208.
Long Statement,Insight.Tests,TableValuedParameterWithStructsTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TableValuedParametersTests.cs,Given_a_type_which_requires_serialisation_When_using_the_type_in_an_sql_statement_Then_it_does_not_explode,The length of the statement  "			var roundtrippedValue = Connection().ExecuteScalarSql<string>("select @value"' new { value = new MyCustomStruct { Value = "structs are best" } }); " is 146.
Long Statement,Insight.Tests,TableValuedParameterWithStructsTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TableValuedParametersTests.cs,Given_a_table_type_with_a_property_that_is_a_struct_which_requires_serialisation_When_using_the_type_in_an_sql_statement_Then_it_does_not_explode,The length of the statement  "			var roundtrippedValue = Connection().ExecuteScalarSql<string>("select top 1 String from @values"' new { values = new[] { new InsightTestDataString { String = new MyCustomStruct { Value = "structs are better" } } } }); " is 217.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestTypes,The length of the statement  "			NullableData<DateTime>.Test(DateTime.Now.Date' _connection' "date");				// SQL will round the time' so need to knock off some milliseconds  " is 138.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestTypes,The length of the statement  "			Data<System.Data.Linq.Binary>.Test(new System.Data.Linq.Binary(new byte[] { 1' 2' 3' 4 })' _connection' "varbinary(MAX)"); " is 122.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Guid.Empty.ToString()' _connection.QuerySql<TypeContainer<string>>(String.Format("SELECT Value=CONVERT(uniqueidentifier' '{0}')"' Guid.Empty.ToString())).FirstOrDefault().Value); " is 194.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual("1"' _connection.QuerySql<TypeContainer<string>>("SELECT Value=CONVERT(tinyint' 1)").FirstOrDefault().Value); " is 125.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual("1"' _connection.QuerySql<TypeContainer<string>>("SELECT Value=CONVERT(smallint' 1)").FirstOrDefault().Value); " is 126.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual("1"' _connection.QuerySql<TypeContainer<string>>("SELECT Value=CONVERT(int' 1)").FirstOrDefault().Value); " is 121.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual("1"' _connection.QuerySql<TypeContainer<string>>("SELECT Value=CONVERT(bigint' 1)").FirstOrDefault().Value); " is 124.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual("1"' _connection.QuerySql<TypeContainer<string>>("SELECT Value=CONVERT(varchar(100)' '1')").FirstOrDefault().Value); " is 132.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual("1"' _connection.QuerySql<TypeContainer<string>>("SELECT Value=CONVERT(nvarchar(100)' '1')").FirstOrDefault().Value); " is 133.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual("1"' _connection.QuerySql<TypeContainer<string>>("SELECT Value=CONVERT(decimal' 1)").FirstOrDefault().Value); " is 125.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int64Enum.One' _connection.QuerySql<TypeContainer<Int64Enum>>("SELECT Value=CONVERT(tinyint' 1)").FirstOrDefault().Value); " is 138.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int64Enum.One' _connection.QuerySql<TypeContainer<Int64Enum>>("SELECT Value=CONVERT(smallint' 1)").FirstOrDefault().Value); " is 139.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int64Enum.One' _connection.QuerySql<TypeContainer<Int64Enum>>("SELECT Value=CONVERT(int' 1)").FirstOrDefault().Value); " is 134.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int64Enum.One' _connection.QuerySql<TypeContainer<Int64Enum>>("SELECT Value=CONVERT(bigint' 1)").FirstOrDefault().Value); " is 137.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int64Enum.One' _connection.QuerySql<TypeContainer<Int64Enum>>("SELECT Value=CONVERT(varchar(100)' 'One')").FirstOrDefault().Value); " is 147.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int64Enum.One' _connection.QuerySql<TypeContainer<Int64Enum>>("SELECT Value=CONVERT(nvarchar(100)' 'One')").FirstOrDefault().Value); " is 148.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int64Enum.One' _connection.QuerySql<TypeContainer<Int64Enum>>("SELECT Value=CONVERT(decimal' 1)").FirstOrDefault().Value); " is 138.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt64Enum.One' _connection.QuerySql<TypeContainer<UInt64Enum>>("SELECT Value=CONVERT(tinyint' 1)").FirstOrDefault().Value); " is 140.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt64Enum.One' _connection.QuerySql<TypeContainer<UInt64Enum>>("SELECT Value=CONVERT(smallint' 1)").FirstOrDefault().Value); " is 141.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt64Enum.One' _connection.QuerySql<TypeContainer<UInt64Enum>>("SELECT Value=CONVERT(int' 1)").FirstOrDefault().Value); " is 136.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt64Enum.One' _connection.QuerySql<TypeContainer<UInt64Enum>>("SELECT Value=CONVERT(bigint' 1)").FirstOrDefault().Value); " is 139.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt64Enum.One' _connection.QuerySql<TypeContainer<UInt64Enum>>("SELECT Value=CONVERT(varchar(100)' 'One')").FirstOrDefault().Value); " is 149.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt64Enum.One' _connection.QuerySql<TypeContainer<UInt64Enum>>("SELECT Value=CONVERT(nvarchar(100)' 'One')").FirstOrDefault().Value); " is 150.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt64Enum.One' _connection.QuerySql<TypeContainer<UInt64Enum>>("SELECT Value=CONVERT(decimal' 1)").FirstOrDefault().Value); " is 140.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int32Enum.One' _connection.QuerySql<TypeContainer<Int32Enum>>("SELECT Value=CONVERT(tinyint' 1)").FirstOrDefault().Value); " is 138.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int32Enum.One' _connection.QuerySql<TypeContainer<Int32Enum>>("SELECT Value=CONVERT(smallint' 1)").FirstOrDefault().Value); " is 139.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int32Enum.One' _connection.QuerySql<TypeContainer<Int32Enum>>("SELECT Value=CONVERT(int' 1)").FirstOrDefault().Value); " is 134.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int32Enum.One' _connection.QuerySql<TypeContainer<Int32Enum>>("SELECT Value=CONVERT(bigint' 1)").FirstOrDefault().Value); " is 137.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int32Enum.One' _connection.QuerySql<TypeContainer<Int32Enum>>("SELECT Value=CONVERT(varchar(100)' 'One')").FirstOrDefault().Value); " is 147.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int32Enum.One' _connection.QuerySql<TypeContainer<Int32Enum>>("SELECT Value=CONVERT(nvarchar(100)' 'One')").FirstOrDefault().Value); " is 148.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int32Enum.One' _connection.QuerySql<TypeContainer<Int32Enum>>("SELECT Value=CONVERT(decimal' 1)").FirstOrDefault().Value); " is 138.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt32Enum.One' _connection.QuerySql<TypeContainer<UInt32Enum>>("SELECT Value=CONVERT(tinyint' 1)").FirstOrDefault().Value); " is 140.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt32Enum.One' _connection.QuerySql<TypeContainer<UInt32Enum>>("SELECT Value=CONVERT(smallint' 1)").FirstOrDefault().Value); " is 141.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt32Enum.One' _connection.QuerySql<TypeContainer<UInt32Enum>>("SELECT Value=CONVERT(int' 1)").FirstOrDefault().Value); " is 136.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt32Enum.One' _connection.QuerySql<TypeContainer<UInt32Enum>>("SELECT Value=CONVERT(bigint' 1)").FirstOrDefault().Value); " is 139.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt32Enum.One' _connection.QuerySql<TypeContainer<UInt32Enum>>("SELECT Value=CONVERT(varchar(100)' 'One')").FirstOrDefault().Value); " is 149.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt32Enum.One' _connection.QuerySql<TypeContainer<UInt32Enum>>("SELECT Value=CONVERT(nvarchar(100)' 'One')").FirstOrDefault().Value); " is 150.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt32Enum.One' _connection.QuerySql<TypeContainer<UInt32Enum>>("SELECT Value=CONVERT(decimal' 1)").FirstOrDefault().Value); " is 140.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int16Enum.One' _connection.QuerySql<TypeContainer<Int16Enum>>("SELECT Value=CONVERT(tinyint' 1)").FirstOrDefault().Value); " is 138.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int16Enum.One' _connection.QuerySql<TypeContainer<Int16Enum>>("SELECT Value=CONVERT(smallint' 1)").FirstOrDefault().Value); " is 139.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int16Enum.One' _connection.QuerySql<TypeContainer<Int16Enum>>("SELECT Value=CONVERT(int' 1)").FirstOrDefault().Value); " is 134.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int16Enum.One' _connection.QuerySql<TypeContainer<Int16Enum>>("SELECT Value=CONVERT(bigint' 1)").FirstOrDefault().Value); " is 137.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int16Enum.One' _connection.QuerySql<TypeContainer<Int16Enum>>("SELECT Value=CONVERT(varchar(100)' 'One')").FirstOrDefault().Value); " is 147.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int16Enum.One' _connection.QuerySql<TypeContainer<Int16Enum>>("SELECT Value=CONVERT(nvarchar(100)' 'One')").FirstOrDefault().Value); " is 148.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int16Enum.One' _connection.QuerySql<TypeContainer<Int16Enum>>("SELECT Value=CONVERT(decimal' 1)").FirstOrDefault().Value); " is 138.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt16Enum.One' _connection.QuerySql<TypeContainer<UInt16Enum>>("SELECT Value=CONVERT(tinyint' 1)").FirstOrDefault().Value); " is 140.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt16Enum.One' _connection.QuerySql<TypeContainer<UInt16Enum>>("SELECT Value=CONVERT(smallint' 1)").FirstOrDefault().Value); " is 141.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt16Enum.One' _connection.QuerySql<TypeContainer<UInt16Enum>>("SELECT Value=CONVERT(int' 1)").FirstOrDefault().Value); " is 136.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt16Enum.One' _connection.QuerySql<TypeContainer<UInt16Enum>>("SELECT Value=CONVERT(bigint' 1)").FirstOrDefault().Value); " is 139.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt16Enum.One' _connection.QuerySql<TypeContainer<UInt16Enum>>("SELECT Value=CONVERT(varchar(100)' 'One')").FirstOrDefault().Value); " is 149.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt16Enum.One' _connection.QuerySql<TypeContainer<UInt16Enum>>("SELECT Value=CONVERT(nvarchar(100)' 'One')").FirstOrDefault().Value); " is 150.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt16Enum.One' _connection.QuerySql<TypeContainer<UInt16Enum>>("SELECT Value=CONVERT(decimal' 1)").FirstOrDefault().Value); " is 140.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int8Enum.One' _connection.QuerySql<TypeContainer<Int8Enum>>("SELECT Value=CONVERT(tinyint' 1)").FirstOrDefault().Value); " is 136.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int8Enum.One' _connection.QuerySql<TypeContainer<Int8Enum>>("SELECT Value=CONVERT(smallint' 1)").FirstOrDefault().Value); " is 137.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int8Enum.One' _connection.QuerySql<TypeContainer<Int8Enum>>("SELECT Value=CONVERT(int' 1)").FirstOrDefault().Value); " is 132.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int8Enum.One' _connection.QuerySql<TypeContainer<Int8Enum>>("SELECT Value=CONVERT(bigint' 1)").FirstOrDefault().Value); " is 135.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int8Enum.One' _connection.QuerySql<TypeContainer<Int8Enum>>("SELECT Value=CONVERT(varchar(100)' 'One')").FirstOrDefault().Value); " is 145.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int8Enum.One' _connection.QuerySql<TypeContainer<Int8Enum>>("SELECT Value=CONVERT(nvarchar(100)' 'One')").FirstOrDefault().Value); " is 146.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(Int8Enum.One' _connection.QuerySql<TypeContainer<Int8Enum>>("SELECT Value=CONVERT(decimal' 1)").FirstOrDefault().Value); " is 136.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt8Enum.One' _connection.QuerySql<TypeContainer<UInt8Enum>>("SELECT Value=CONVERT(tinyint' 1)").FirstOrDefault().Value); " is 138.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt8Enum.One' _connection.QuerySql<TypeContainer<UInt8Enum>>("SELECT Value=CONVERT(smallint' 1)").FirstOrDefault().Value); " is 139.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt8Enum.One' _connection.QuerySql<TypeContainer<UInt8Enum>>("SELECT Value=CONVERT(int' 1)").FirstOrDefault().Value); " is 134.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt8Enum.One' _connection.QuerySql<TypeContainer<UInt8Enum>>("SELECT Value=CONVERT(bigint' 1)").FirstOrDefault().Value); " is 137.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt8Enum.One' _connection.QuerySql<TypeContainer<UInt8Enum>>("SELECT Value=CONVERT(varchar(100)' 'One')").FirstOrDefault().Value); " is 147.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt8Enum.One' _connection.QuerySql<TypeContainer<UInt8Enum>>("SELECT Value=CONVERT(nvarchar(100)' 'One')").FirstOrDefault().Value); " is 148.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(UInt8Enum.One' _connection.QuerySql<TypeContainer<UInt8Enum>>("SELECT Value=CONVERT(decimal' 1)").FirstOrDefault().Value); " is 138.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<Int64>>("SELECT Value=CONVERT(tinyint' 1)").FirstOrDefault().Value); " is 122.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<Int64>>("SELECT Value=CONVERT(smallint' 1)").FirstOrDefault().Value); " is 123.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<Int64>>("SELECT Value=CONVERT(bigint' 1)").FirstOrDefault().Value); " is 121.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<Int64>>("SELECT Value=CONVERT(decimal' 1)").FirstOrDefault().Value); " is 122.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<Int64>>("SELECT Value=CONVERT(float' 1)").FirstOrDefault().Value); " is 120.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<UInt64>>("SELECT Value=CONVERT(tinyint' 1)").FirstOrDefault().Value); " is 123.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<UInt64>>("SELECT Value=CONVERT(smallint' 1)").FirstOrDefault().Value); " is 124.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<UInt64>>("SELECT Value=CONVERT(bigint' 1)").FirstOrDefault().Value); " is 122.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<UInt64>>("SELECT Value=CONVERT(decimal' 1)").FirstOrDefault().Value); " is 123.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<UInt64>>("SELECT Value=CONVERT(float' 1)").FirstOrDefault().Value); " is 121.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<UInt64>>("SELECT Value=CONVERT(real' 1)").FirstOrDefault().Value); " is 120.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<Int32>>("SELECT Value=CONVERT(tinyint' 1)").FirstOrDefault().Value); " is 122.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<Int32>>("SELECT Value=CONVERT(smallint' 1)").FirstOrDefault().Value); " is 123.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<Int32>>("SELECT Value=CONVERT(bigint' 1)").FirstOrDefault().Value); " is 121.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<Int32>>("SELECT Value=CONVERT(decimal' 1)").FirstOrDefault().Value); " is 122.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<Int32>>("SELECT Value=CONVERT(float' 1)").FirstOrDefault().Value); " is 120.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<UInt32>>("SELECT Value=CONVERT(tinyint' 1)").FirstOrDefault().Value); " is 123.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<UInt32>>("SELECT Value=CONVERT(smallint' 1)").FirstOrDefault().Value); " is 124.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<UInt32>>("SELECT Value=CONVERT(bigint' 1)").FirstOrDefault().Value); " is 122.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<UInt32>>("SELECT Value=CONVERT(decimal' 1)").FirstOrDefault().Value); " is 123.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<UInt32>>("SELECT Value=CONVERT(float' 1)").FirstOrDefault().Value); " is 121.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<UInt32>>("SELECT Value=CONVERT(real' 1)").FirstOrDefault().Value); " is 120.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<Int16>>("SELECT Value=CONVERT(tinyint' 1)").FirstOrDefault().Value); " is 122.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<Int16>>("SELECT Value=CONVERT(smallint' 1)").FirstOrDefault().Value); " is 123.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<Int16>>("SELECT Value=CONVERT(bigint' 1)").FirstOrDefault().Value); " is 121.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<Int16>>("SELECT Value=CONVERT(decimal' 1)").FirstOrDefault().Value); " is 122.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<Int16>>("SELECT Value=CONVERT(float' 1)").FirstOrDefault().Value); " is 120.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<UInt16>>("SELECT Value=CONVERT(tinyint' 1)").FirstOrDefault().Value); " is 123.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<UInt16>>("SELECT Value=CONVERT(smallint' 1)").FirstOrDefault().Value); " is 124.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<UInt16>>("SELECT Value=CONVERT(bigint' 1)").FirstOrDefault().Value); " is 122.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<UInt16>>("SELECT Value=CONVERT(decimal' 1)").FirstOrDefault().Value); " is 123.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<UInt16>>("SELECT Value=CONVERT(float' 1)").FirstOrDefault().Value); " is 121.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<UInt16>>("SELECT Value=CONVERT(real' 1)").FirstOrDefault().Value); " is 120.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<sbyte>>("SELECT Value=CONVERT(tinyint' 1)").FirstOrDefault().Value); " is 122.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<sbyte>>("SELECT Value=CONVERT(smallint' 1)").FirstOrDefault().Value); " is 123.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<sbyte>>("SELECT Value=CONVERT(bigint' 1)").FirstOrDefault().Value); " is 121.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<sbyte>>("SELECT Value=CONVERT(decimal' 1)").FirstOrDefault().Value); " is 122.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<sbyte>>("SELECT Value=CONVERT(float' 1)").FirstOrDefault().Value); " is 120.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<byte>>("SELECT Value=CONVERT(tinyint' 1)").FirstOrDefault().Value); " is 121.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<byte>>("SELECT Value=CONVERT(smallint' 1)").FirstOrDefault().Value); " is 122.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<byte>>("SELECT Value=CONVERT(bigint' 1)").FirstOrDefault().Value); " is 120.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1' _connection.QuerySql<TypeContainer<byte>>("SELECT Value=CONVERT(decimal' 1)").FirstOrDefault().Value); " is 121.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1.0' _connection.QuerySql<TypeContainer<double>>("SELECT Value=CONVERT(tinyint' 1)").FirstOrDefault().Value); " is 125.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1.0' _connection.QuerySql<TypeContainer<double>>("SELECT Value=CONVERT(smallint' 1)").FirstOrDefault().Value); " is 126.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1.0' _connection.QuerySql<TypeContainer<double>>("SELECT Value=CONVERT(int' 1)").FirstOrDefault().Value); " is 121.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1.0' _connection.QuerySql<TypeContainer<double>>("SELECT Value=CONVERT(bigint' 1)").FirstOrDefault().Value); " is 124.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1.0' _connection.QuerySql<TypeContainer<double>>("SELECT Value=CONVERT(decimal' 1)").FirstOrDefault().Value); " is 125.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1.0' _connection.QuerySql<TypeContainer<double>>("SELECT Value=CONVERT(float' 1)").FirstOrDefault().Value); " is 123.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1.0' _connection.QuerySql<TypeContainer<double>>("SELECT Value=CONVERT(real' 1)").FirstOrDefault().Value); " is 122.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1.0f' _connection.QuerySql<TypeContainer<float>>("SELECT Value=CONVERT(tinyint' 1)").FirstOrDefault().Value); " is 125.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1.0f' _connection.QuerySql<TypeContainer<float>>("SELECT Value=CONVERT(smallint' 1)").FirstOrDefault().Value); " is 126.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1.0f' _connection.QuerySql<TypeContainer<float>>("SELECT Value=CONVERT(int' 1)").FirstOrDefault().Value); " is 121.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1.0f' _connection.QuerySql<TypeContainer<float>>("SELECT Value=CONVERT(bigint' 1)").FirstOrDefault().Value); " is 124.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1.0f' _connection.QuerySql<TypeContainer<float>>("SELECT Value=CONVERT(decimal' 1)").FirstOrDefault().Value); " is 125.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1.0f' _connection.QuerySql<TypeContainer<float>>("SELECT Value=CONVERT(float' 1)").FirstOrDefault().Value); " is 123.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TypeCoersions,The length of the statement  "			Assert.AreEqual(1.0f' _connection.QuerySql<TypeContainer<float>>("SELECT Value=CONVERT(real' 1)").FirstOrDefault().Value); " is 122.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestConstructorConversion,The length of the statement  "			var data = Connection().QuerySql<ObjectWithID<T>>(String.Format("SELECT ID=CONVERT({0}' @p)"' sqlType)' new { p = value }); " is 123.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TimeSpanShouldConvertProperlyToSqlTime,The length of the statement  "			Assert.Throws<OverflowException>(() => Connection().ExecuteScalar<TimeSpan>("TimeInput"' new { t = new TimeSpan(1' 1' 0' 0) })); " is 128.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,DatetimeFieldsShouldConvertInTVP,The length of the statement  "				c.ExecuteSql(@"create procedure [InsertDateTimeList] @datetimeList as datetimeList readonly as select myDatetime from @datetimeList");				 " is 134.
Long Statement,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,Datetime2FieldsShouldConvertInTVP,The length of the statement  "				c.ExecuteSql(@"create procedure [InsertDateTime2List] @datetime2List as datetime2List readonly as select myDatetime from @datetime2List");				 " is 138.
Long Statement,Insight.Tests,NullableData<T>,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,Test,The length of the statement  "				var data = connection.QuerySql<NullableData<T>>(String.Format("SELECT Field=CONVERT({0}' @p)' Property=CONVERT({0}' @p)' FieldNullable=CONVERT({0}' @p)' PropertyNullable=CONVERT({0}' @p)' FieldNull=CONVERT({0}' NULL)' PropertyNull=CONVERT({0}' NULL)"' sqlType)' new { p = value }).First(); " is 289.
Long Statement,Insight.Tests,NullableData<T>,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,Test,The length of the statement  "				data = connection.QuerySql<NullableData<T>>(String.Format("SELECT Field=@p' Property=@p' FieldNullable=@p' PropertyNullable=@p' FieldNull=CONVERT({0}' NULL)' PropertyNull=CONVERT({0}' NULL)"' sqlType)' new { p = value }).First(); " is 229.
Long Statement,Insight.Tests,NullableData<T>,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,Test,The length of the statement  "				data = connection.QuerySql<NullableData<T>>(String.Format("SELECT Field=CONVERT({0}' @p)' Property=CONVERT({0}' @p)' FieldNull=CONVERT({0}' NULL)' PropertyNull=CONVERT({0}' NULL)"' sqlType)' new { p = (T?)null }).First(); " is 221.
Long Statement,Insight.Tests,NullableData<T>,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,Test,The length of the statement  "				var data2 = connection.QuerySql<T>(String.Format("SELECT CONVERT({0}' @p) UNION ALL SELECT CONVERT({0}' @p)"' sqlType)' new { p = value }); " is 139.
Long Statement,Insight.Tests,NullableData<T>,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,Test,The length of the statement  "				var data3 = connection.QuerySql<T?>(String.Format("SELECT CONVERT({0}' @p) UNION SELECT CONVERT({0}' @p)"' sqlType)' new { p = (T?)null }); " is 139.
Long Statement,Insight.Tests,NullableData<T>,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,Test,The length of the statement  "				data3 = connection.QuerySql<T?>(String.Format("SELECT CONVERT({0}' @p) UNION SELECT CONVERT({0}' @p)"' sqlType)' new { p = (T?)value }); " is 136.
Long Statement,Insight.Tests,Data<T>,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,Test,The length of the statement  "				var data = connection.QuerySql<Data<T>>(String.Format("SELECT Field=@p' Property=@p' FieldNull=CONVERT({0}' NULL)' PropertyNull=CONVERT({0}' NULL)"' sqlType)' new { p = value }).First(); " is 186.
Long Statement,Insight.Tests,Data<T>,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,Test,The length of the statement  "				data = connection.QuerySql<Data<T>>(String.Format("SELECT Field=@p' Property=@p' FieldNull=CONVERT({0}' NULL)' PropertyNull=CONVERT({0}' NULL)"' sqlType)' new { p = (T)null }).First(); " is 184.
Long Statement,Insight.Tests,XmlTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\XmlTests.cs,XmlColumnCanDeserializeToXDocument,The length of the statement  "			Assert.AreEqual(String.Format("<Data>{0}  <Text>foo</Text>{0}</Data>"' Environment.NewLine)' result.XDocument.ToString()); " is 122.
Long Statement,Insight.Tests,XmlTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\XmlTests.cs,XmlColumnCanDeserializeToObject,The length of the statement  "			var list = Connection().QuerySql<Result>("SELECT Data=CONVERT(xml' '<XmlTests.Data xmlns=\"http://schemas.datacontract.org/2004/07/Insight.Tests\"><Text>foo</Text></XmlTests.Data>')"' new { }); " is 193.
Long Statement,Insight.Tests,XmlTVPTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\XmlTests.cs,StringXmlCanBeSentAndReturnedAsStrings,The length of the statement  "			var list = Connection().Query<string>("ReflectXmlTableAsVarChar"' new { p = input.Select(x => new { id=1' data=x }).ToList() }); " is 128.
Long Statement,Insight.Tests.Cases,Beer,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\Cases\Records.cs,GetSelectNested,The length of the statement  "			return "SELECT " + String.Join("'"' Enumerable.Range(1' times).Select(i => "ParentID=1' ID=1' Name='Sly Fox 113'' Style='IPA'").ToArray()); " is 139.
Empty Catch Block,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,TestMissingChildCanBeNulled,The method has an empty catch block.
Empty Catch Block,Insight.Tests,ObjectReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ObjectReaderTests.cs,TestTablesInSchemasWithDots,The method has an empty catch block.
Empty Catch Block,Insight.Tests,ObjectReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ObjectReaderTests.cs,TestTablesInSchemasWithDots,The method has an empty catch block.
Empty Catch Block,Insight.Tests,ObjectReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ObjectReaderTests.cs,TestTablesInSchemasWithDots,The method has an empty catch block.
Empty Catch Block,Insight.Tests,OpenTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OpenTests.cs,FailedEnumerationShouldAutoClose,The method has an empty catch block.
Empty Catch Block,Insight.Tests,RetryStrategyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RetryStrategyTests.cs,NonTransientExceptionDoesNotRetry,The method has an empty catch block.
Empty Catch Block,Insight.Tests,RetryStrategyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RetryStrategyTests.cs,BadOpenPerformsRetry,The method has an empty catch block.
Empty Catch Block,Insight.Tests,RetryStrategyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RetryStrategyTests.cs,MaxRetryCountCapsNumberOfRetries,The method has an empty catch block.
Empty Catch Block,Insight.Tests,RetryStrategyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RetryStrategyTests.cs,AsyncBadOpenPerformsRetry,The method has an empty catch block.
Empty Catch Block,Insight.Tests,RetryStrategyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RetryStrategyTests.cs,AsyncBadQueryPerformsRetry,The method has an empty catch block.
Empty Catch Block,Insight.Tests,NullableData<T>,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,Test,The method has an empty catch block.
Empty Catch Block,Insight.Tests,Data<T>,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,Test,The method has an empty catch block.
Magic Number,Insight.Tests,AsyncExecuteScalarTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncExecuteScalarTests.cs,TestOutputParameters,The following statement contains a magic number: var input = new InOutParameters { In = 5 };
Magic Number,Insight.Tests,AsyncExecuteTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncExecuteTests.cs,TestOutputParameters,The following statement contains a magic number: var input = new InOutParameters { In = 5 };
Magic Number,Insight.Tests,AsyncInsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncInsertTests.cs,TestAutoClose,The following statement contains a magic number: ConnectionStateCase.ForEach(c =>  			{  				var input = new InOutParameters { In = 5 };  				var result = c.InsertSqlAsync("SELECT @In"' input).Result;  			});
Magic Number,Insight.Tests,AsyncInsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncInsertTests.cs,TestForceClose,The following statement contains a magic number: ConnectionStateCase.ForEach(c =>  			{  				bool wasOpen = c.State == ConnectionState.Open;    				var input = new InOutParameters { In = 5 };  				var recordCount = c.InsertSqlAsync("SELECT @In"' input' commandBehavior: CommandBehavior.CloseConnection).Result;    				Assert.AreEqual(ConnectionState.Closed' c.State);  				if (wasOpen)  					c.Open();  			});
Magic Number,Insight.Tests,AsyncInsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncInsertTests.cs,TestOutputParameters,The following statement contains a magic number: var input = new InOutParameters { In = 5 };
Magic Number,Insight.Tests,AsyncInsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncInsertTests.cs,TestOutputParametersInList,The following statement contains a magic number: var input = new InOutParameters { In = 5 };
Magic Number,Insight.Tests,AsyncMiscTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncMiscTests.cs,DerivedRecordsetsCanBeReturned,The following statement contains a magic number: Assert.AreEqual(70' results.TotalCount);
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestOutputParameters,The following statement contains a magic number: var input = new InOutParameters { In = 5 };
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestChildrenWithOneToOne,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNestedChildren(1' 2)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(OneToOne<InfiniteBeerList' InfiniteBeer>.Records)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestChildrenWithOneToOne,The following statement contains a magic number: Assert.AreEqual(3' result.Count());
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithQueryStructure2,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllProcMultipleTimes(2)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithQueryStructure3,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllProcMultipleTimes(3)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithQueryStructure4,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllProcMultipleTimes(4)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithQueryStructure5,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllProcMultipleTimes(5)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithQueryStructure6,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllProcMultipleTimes(6)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithQueryStructure7,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllProcMultipleTimes(7)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithQueryStructure8,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllProcMultipleTimes(8)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithQueryStructure9,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllProcMultipleTimes(9)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithQueryStructure10,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllProcMultipleTimes(10)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithQueryStructure11,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllProcMultipleTimes(11)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithQueryStructure12,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllProcMultipleTimes(12)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithQueryStructure13,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllProcMultipleTimes(13)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithQueryStructure14,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllProcMultipleTimes(14)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithQueryStructure15,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllProcMultipleTimes(15)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithQueryStructure16,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllProcMultipleTimes(16)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithGenerics2,The following statement contains a magic number: var result = Connection().QueryResultsSqlAsync<Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(2)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithGenerics3,The following statement contains a magic number: var result = Connection().QueryResultsSqlAsync<Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(3)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithGenerics4,The following statement contains a magic number: var result = Connection().QueryResultsSqlAsync<Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(4)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithGenerics5,The following statement contains a magic number: var result = Connection().QueryResultsSqlAsync<Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(5)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithGenerics6,The following statement contains a magic number: var result = Connection().QueryResultsSqlAsync<Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(6)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithGenerics7,The following statement contains a magic number: var result = Connection().QueryResultsSqlAsync<Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(7)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithGenerics8,The following statement contains a magic number: var result = Connection().QueryResultsSqlAsync<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(8)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithGenerics9,The following statement contains a magic number: var result = Connection().QueryResultsSqlAsync<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(9)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithGenerics10,The following statement contains a magic number: var result = Connection().QueryResultsSqlAsync<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(10)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithGenerics11,The following statement contains a magic number: var result = Connection().QueryResultsSqlAsync<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(11)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithGenerics12,The following statement contains a magic number: var result = Connection().QueryResultsSqlAsync<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(12)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithGenerics13,The following statement contains a magic number: var result = Connection().QueryResultsSqlAsync<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(13)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithGenerics14,The following statement contains a magic number: var result = Connection().QueryResultsSqlAsync<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(14)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithGenerics15,The following statement contains a magic number: var result = Connection().QueryResultsSqlAsync<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(15)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadResultsWithGenerics16,The following statement contains a magic number: var result = Connection().QueryResultsSqlAsync<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(16)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure2,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(2)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer>.Records)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure3,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(3)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure4,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(4)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure5,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(5)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure6,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(6)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure7,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(7)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure8,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(8)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure9,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(9)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure10,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(10)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure11,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(11)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure12,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(12)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure13,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(13)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure14,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(14)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure15,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(15)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithQueryStructure16,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(16)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics2,The following statement contains a magic number: var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(2)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics3,The following statement contains a magic number: var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(3)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics4,The following statement contains a magic number: var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(4)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics5,The following statement contains a magic number: var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(5)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics6,The following statement contains a magic number: var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(6)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics7,The following statement contains a magic number: var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(7)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics8,The following statement contains a magic number: var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(8)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics9,The following statement contains a magic number: var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(9)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics10,The following statement contains a magic number: var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(10)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics11,The following statement contains a magic number: var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(11)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics12,The following statement contains a magic number: var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(12)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics13,The following statement contains a magic number: var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(13)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics14,The following statement contains a magic number: var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(14)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics15,The following statement contains a magic number: var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(15)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadNestedWithGenerics16,The following statement contains a magic number: var result = Connection().QuerySqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(16)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure2,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(2)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer>.Default).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure3,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(3)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure4,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(4)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure5,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(5)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure6,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(6)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure7,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(7)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure8,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(8)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure9,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(9)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure10,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(10)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure11,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(11)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure12,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(12)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure13,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(13)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure14,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(14)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure15,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(15)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithQueryStructure16,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectNested(16)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics2,The following statement contains a magic number: var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(2)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics3,The following statement contains a magic number: var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(3)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics4,The following statement contains a magic number: var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(4)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics5,The following statement contains a magic number: var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(5)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics6,The following statement contains a magic number: var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(6)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics7,The following statement contains a magic number: var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(7)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics8,The following statement contains a magic number: var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(8)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics9,The following statement contains a magic number: var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(9)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics10,The following statement contains a magic number: var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(10)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics11,The following statement contains a magic number: var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(11)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics12,The following statement contains a magic number: var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(12)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics13,The following statement contains a magic number: var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(13)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics14,The following statement contains a magic number: var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(14)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics15,The following statement contains a magic number: var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(15)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,ReadSingleWithGenerics16,The following statement contains a magic number: var result = Connection().SingleSqlAsync<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(16)).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_2_2,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 2).Select(_ => Beer.GetSelectNested(2)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_2_2,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 2).Select(_ => Beer.GetSelectNested(2)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_3_3,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 3).Select(_ => Beer.GetSelectNested(3)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_3_3,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 3).Select(_ => Beer.GetSelectNested(3)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_4_4,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 4).Select(_ => Beer.GetSelectNested(4)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_4_4,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 4).Select(_ => Beer.GetSelectNested(4)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_5_5,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 5).Select(_ => Beer.GetSelectNested(5)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_5_5,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 5).Select(_ => Beer.GetSelectNested(5)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_6_6,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 6).Select(_ => Beer.GetSelectNested(6)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_6_6,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 6).Select(_ => Beer.GetSelectNested(6)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_7_7,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 7).Select(_ => Beer.GetSelectNested(7)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_7_7,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 7).Select(_ => Beer.GetSelectNested(7)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 8).Select(_ => Beer.GetSelectNested(8)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 8).Select(_ => Beer.GetSelectNested(8)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 9).Select(_ => Beer.GetSelectNested(9)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 9).Select(_ => Beer.GetSelectNested(9)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 10).Select(_ => Beer.GetSelectNested(10)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 10).Select(_ => Beer.GetSelectNested(10)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 11).Select(_ => Beer.GetSelectNested(11)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 11).Select(_ => Beer.GetSelectNested(11)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 12).Select(_ => Beer.GetSelectNested(12)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 12).Select(_ => Beer.GetSelectNested(12)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 13).Select(_ => Beer.GetSelectNested(13)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 13).Select(_ => Beer.GetSelectNested(13)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 14).Select(_ => Beer.GetSelectNested(14)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 14).Select(_ => Beer.GetSelectNested(14)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 15).Select(_ => Beer.GetSelectNested(15)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 15).Select(_ => Beer.GetSelectNested(15)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 16).Select(_ => Beer.GetSelectNested(16)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				String.Join(";"' Enumerable.Range(1' 16).Select(_ => Beer.GetSelectNested(16)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy3,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllChildren(3)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy4,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllChildren(4)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List))  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy5,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllChildren(5)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy6,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllChildren(6)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy7,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllChildren(7)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy8,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllChildren(8)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy9,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllChildren(9)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy10,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllChildren(10)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy11,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllChildren(11)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy12,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllChildren(12)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy13,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllChildren(13)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy14,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllChildren(14)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy15,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllChildren(15)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					).Result;
Magic Number,Insight.Tests,AsyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryCoreTests.cs,TestHierarchy16,The following statement contains a magic number: var result = Connection().QuerySqlAsync(  				Beer.GetSelectAllChildren(16)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List))  					).Result;
Magic Number,Insight.Tests,AsyncQueryReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\AsyncQueryReaderTests.cs,TestOutputParameters,The following statement contains a magic number: var input = new InOutParameters { In = 5 };
Magic Number,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,TestBulkLoad,The following statement contains a magic number: i < 3
Magic Number,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,TestBulkLoadAsync,The following statement contains a magic number: i < 3
Magic Number,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,TestBulkLoadCount,The following statement contains a magic number: const int RowCount = 3;
Magic Number,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,TestBulkLoadWithConfiguration,The following statement contains a magic number: const int ItemCount = 10;
Magic Number,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,TestBulkLoadWithAutoTransaction,The following statement contains a magic number: i < 3
Magic Number,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,TestBulkLoadWithSqlTransaction,The following statement contains a magic number: i < 3
Magic Number,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,TestIssue103,The following statement contains a magic number: var m = new MerchNameTermTransaction()  			{  				TranId = 2'  				TermId = 3  			};
Magic Number,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,TestIssue103,The following statement contains a magic number: var m = new MerchNameTermTransaction()  			{  				TranId = 2'  				TermId = 3  			};
Magic Number,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,TestIssue103,The following statement contains a magic number: Assert.AreEqual(2' items[0].TranId);
Magic Number,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,TestIssue103,The following statement contains a magic number: Assert.AreEqual(3' items[0].TermId);
Magic Number,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,TestIssue103WithKeepIdentity,The following statement contains a magic number: var m = new MerchNameTermTransaction()  			{  				Id = 99'  				TranId = 2'  				TermId = 3  			};
Magic Number,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,TestIssue103WithKeepIdentity,The following statement contains a magic number: var m = new MerchNameTermTransaction()  			{  				Id = 99'  				TranId = 2'  				TermId = 3  			};
Magic Number,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,TestIssue103WithKeepIdentity,The following statement contains a magic number: var m = new MerchNameTermTransaction()  			{  				Id = 99'  				TranId = 2'  				TermId = 3  			};
Magic Number,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,TestIssue103WithKeepIdentity,The following statement contains a magic number: Assert.AreEqual(99' items[0].Id);
Magic Number,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,TestIssue103WithKeepIdentity,The following statement contains a magic number: Assert.AreEqual(2' items[0].TranId);
Magic Number,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,TestIssue103WithKeepIdentity,The following statement contains a magic number: Assert.AreEqual(3' items[0].TermId);
Magic Number,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,TestBulkCopyWithInterface,The following statement contains a magic number: const int ItemCount = 10;
Magic Number,Insight.Tests,BulkCopyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\BulkCopyTests.cs,TestBulkCopyWithComputedColumn,The following statement contains a magic number: var array = new BulkCopyDataWithComputedColumn[1]              {                  new BulkCopyDataWithComputedColumn()                  {                      Int1 = 1'                      Computed = 0'                      Int2 = 3                  }              };
Magic Number,Insight.Tests,ColumnAttributeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ColumnAttributeTests.cs,ColumnMappingFillsInField,The following statement contains a magic number: Assert.AreEqual(4' data.ColumnA);
Magic Number,Insight.Tests,ColumnAttributeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ColumnAttributeTests.cs,ColumnMappingFillsInProperty,The following statement contains a magic number: Assert.AreEqual(4' data.Property);
Magic Number,Insight.Tests,ConstructorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ConstructorTests.cs,TestClassWithNonDefaultConstructor,The following statement contains a magic number: Assert.AreEqual(3' a.A);
Magic Number,Insight.Tests,ConstructorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ConstructorTests.cs,TestClassWithPrivateConstructor,The following statement contains a magic number: Assert.AreEqual(3' a.A);
Magic Number,Insight.Tests,ConstructorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ConstructorTests.cs,TestClassWithSecondaryProperties,The following statement contains a magic number: Assert.AreEqual(3' a.A);
Magic Number,Insight.Tests,ConstructorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ConstructorTests.cs,TestClassWithSecondaryProperties,The following statement contains a magic number: Assert.AreEqual(4' a.B);
Magic Number,Insight.Tests,ConstructorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ConstructorTests.cs,TestConstructorWithAttribute,The following statement contains a magic number: Assert.AreEqual(3' a.A);
Magic Number,Insight.Tests,ConstructorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ConstructorTests.cs,TestColumnMapping,The following statement contains a magic number: Assert.AreEqual(3' a.A);
Magic Number,Insight.Tests,ConstructorTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ConstructorTests.cs,TestParentWithChildren,The following statement contains a magic number: Assert.AreEqual(3' a.Child.A);
Magic Number,Insight.Tests,DbReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DbReaderTests.cs,TestThatMultipleClassIsDeserialized,The following statement contains a magic number: Assert.AreEqual(2' list.Count);
Magic Number,Insight.Tests,DbReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DbReaderTests.cs,TestThatMultipleClassIsDeserialized,The following statement contains a magic number: Assert.AreEqual(2' item.Int);
Magic Number,Insight.Tests,DbReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DbReaderTests.cs,TestThatDynamicObjectIsDeserialized,The following statement contains a magic number: Assert.AreEqual(2' list.Count);
Magic Number,Insight.Tests,DbReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DbReaderTests.cs,TestThatDynamicObjectIsDeserialized,The following statement contains a magic number: Assert.AreEqual(2' item["Int"]);
Magic Number,Insight.Tests,DbReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DbReaderTests.cs,TestThatDynamicImpliesFastExpando,The following statement contains a magic number: Assert.AreEqual(2' list.Count);
Magic Number,Insight.Tests,DbReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DbReaderTests.cs,TestThatDynamicImpliesFastExpando,The following statement contains a magic number: Assert.AreEqual(2' item["Int"]);
Magic Number,Insight.Tests,DbReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DbReaderTests.cs,TestMultipleDynamicObjectQueriesAgainstReader,The following statement contains a magic number: i < 3
Magic Number,Insight.Tests,DynamicConnectionTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicConnectionTest.cs,TestUnopenedConnection,The following statement contains a magic number: _connection.Dynamic().sp_Who(commandTimeout: 100);
Magic Number,Insight.Tests,DynamicConnectionTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicConnectionTest.cs,Test,The following statement contains a magic number: List<Data> result = Connection().Dynamic<Data>().ReflectInt(value: 5);
Magic Number,Insight.Tests,DynamicConnectionTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicConnectionTest.cs,TestSchema,The following statement contains a magic number: List<Data> result = Connection().Dynamic<Data>().dbo.ReflectInt(value: 5);
Magic Number,Insight.Tests,DynamicConnectionTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicConnectionTest.cs,TestUnnamedParameter,The following statement contains a magic number: List<Data> result = Connection().Dynamic<Data>().ReflectInt(5);
Magic Number,Insight.Tests,DynamicConnectionTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicConnectionTest.cs,TestExecute,The following statement contains a magic number: Connection().Dynamic().ReflectInt(value: 5);
Magic Number,Insight.Tests,DynamicConnectionTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicConnectionTest.cs,TestObjectParameter,The following statement contains a magic number: Data d = new Data() { Value = 10 };
Magic Number,Insight.Tests,DynamicConnectionTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicConnectionTest.cs,TestDynamicAsync,The following statement contains a magic number: Parallel.For(0' 10' _ => TryDynamicAsync(10));
Magic Number,Insight.Tests,DynamicConnectionTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicConnectionTest.cs,TestDynamicAsync,The following statement contains a magic number: Parallel.For(0' 10' _ => TryDynamicAsync(10));
Magic Number,Insight.Tests,DynamicConnectionTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicConnectionTest.cs,TryDynamicAsync,The following statement contains a magic number: new SqlConnectionStringBuilder(ConnectionString)  					.ReliableDynamic<int>()  					.ReflectInt32TableAsync(new List<int>() { 5' 7 })  					.Wait();
Magic Number,Insight.Tests,DynamicConnectionTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicConnectionTest.cs,TryDynamicAsync,The following statement contains a magic number: new SqlConnectionStringBuilder(ConnectionString)  					.ReliableDynamic<int>()  					.ReflectInt32TableAsync(new List<int>() { 5' 7 })  					.Wait();
Magic Number,Insight.Tests,DynamicConnectionTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicConnectionTest.cs,SqlExceptionShouldNotBeHiddenByDynamicCalls,The following statement contains a magic number: Assert.Throws(typeof(SqlException)' () => Connection().Dynamic().RaiseAnError(value: 4));
Magic Number,Insight.Tests,DynamicConnectionTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicConnectionTest.cs,SqlExceptionShouldNotBeHiddenByDynamicCalls,The following statement contains a magic number: Assert.Throws(typeof(SqlException)' () => Connection().Dynamic().RaiseAnError(value: 4' returnType: typeof(Results<int>)));
Magic Number,Insight.Tests,DynamicConnectionTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicConnectionTest.cs,SqlExceptionShouldNotBeHiddenByDynamicCalls,The following statement contains a magic number: Assert.Throws(typeof(SqlException)' () =>  				{  					try  					{  						Connection().Dynamic().RaiseAnErrorAsync(value: 4).Wait();  					}  					catch (AggregateException e)  					{  						throw e.Flatten().InnerExceptions.OfType<SqlException>().First();  					}  				}  			);
Magic Number,Insight.Tests,DynamicConnectionTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicConnectionTest.cs,SqlExceptionShouldNotBeHiddenByDynamicCalls,The following statement contains a magic number: Assert.Throws(typeof(SqlException)' () =>  				{  					try  					{  						Connection().Dynamic().RaiseAnErrorAsync(value: 4' returnType: typeof(Results<int>)).Wait();  					}  					catch (AggregateException e)  					{  						throw e.Flatten().InnerExceptions.OfType<SqlException>().First();  					}  				}  			);
Magic Number,Insight.Tests,DynamicConnectionTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicConnectionTest.cs,DynamicProcCanHaveTableParameters,The following statement contains a magic number: var results = Connection().Dynamic().DynamicProcWithTable(Table: new List<DynamicTableType>() { new DynamicTableType() { Value = 9 } });
Magic Number,Insight.Tests,DynamicConnectionTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicConnectionTest.cs,DynamicProcCanHaveTableParameters,The following statement contains a magic number: Assert.AreEqual(9' results[0].Value);
Magic Number,Insight.Tests,DynamicParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicParameterTests.cs,FastExpandoCanBeCreatedFromObject,The following statement contains a magic number: Assert.AreEqual(4' o.Count());
Magic Number,Insight.Tests,DynamicParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicParameterTests.cs,FastExpandoCanExpandByObject,The following statement contains a magic number: o.Expand(new { Id = 2' Guest = "boo" });
Magic Number,Insight.Tests,DynamicParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicParameterTests.cs,FastExpandoCanExpandByObject,The following statement contains a magic number: Assert.AreEqual(6' o.Count());
Magic Number,Insight.Tests,DynamicParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicParameterTests.cs,FastExpandoCanExpandByObject,The following statement contains a magic number: Assert.AreEqual(2' d["ID"]);
Magic Number,Insight.Tests,DynamicParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicParameterTests.cs,FastExpandoCanBeUsedAsDynamic,The following statement contains a magic number: d.Expand(new { Id = 2' Guest = "boo" });
Magic Number,Insight.Tests,DynamicParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicParameterTests.cs,FastExpandoCanBeUsedAsDynamic,The following statement contains a magic number: Assert.AreEqual(7' o.Count());
Magic Number,Insight.Tests,DynamicParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicParameterTests.cs,FastExpandoCanBeUsedAsDynamic,The following statement contains a magic number: Assert.AreEqual(2' d["ID"]);
Magic Number,Insight.Tests,DynamicParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicParameterTests.cs,TestConvenienceExpandoQueries,The following statement contains a magic number: var p = new { Id = 2' Guest = "boo" };
Magic Number,Insight.Tests,DynamicParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicParameterTests.cs,TestConvenienceExpandoQueries,The following statement contains a magic number: Assert.AreEqual(3' f.Count());
Magic Number,Insight.Tests,DynamicParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicParameterTests.cs,TestConvenienceExpandoQueries,The following statement contains a magic number: Assert.AreEqual(2' d["ID"]);
Magic Number,Insight.Tests,DynamicParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicParameterTests.cs,TestConvenienceExpandoQueriesWithDynamicObject,The following statement contains a magic number: var p = new { Id = 2' Guest = "boo" };
Magic Number,Insight.Tests,DynamicParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicParameterTests.cs,TestConvenienceExpandoQueriesWithDynamicObject,The following statement contains a magic number: Assert.AreEqual(3' f.Count());
Magic Number,Insight.Tests,DynamicParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicParameterTests.cs,TestConvenienceExpandoQueriesWithDynamicObject,The following statement contains a magic number: Assert.AreEqual(2' d["ID"]);
Magic Number,Insight.Tests,DynamicParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicParameterTests.cs,TestExpandoNullFields,The following statement contains a magic number: Assert.AreEqual(5' result["Value"]);
Magic Number,Insight.Tests,Issue193,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicParameterTests.cs,DynamicParametersShouldPopulateListElements,The following statement contains a magic number: parameters.Add("data"' new List<TestData>() { new TestData() { X = 1' Z = 2 } });
Magic Number,Insight.Tests,Issue193,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicParameterTests.cs,DynamicParametersShouldPopulateListElements,The following statement contains a magic number: Assert.AreEqual(2' results[0].Z);
Magic Number,Insight.Tests,Issue193,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicParameterTests.cs,DynamicParametersShouldPopulateListElements,The following statement contains a magic number: parameters.Add("data"' new List<TestData>() { new TestData() { X = 1' Z = 2 } });
Magic Number,Insight.Tests,Issue193,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\DynamicParameterTests.cs,DynamicParametersShouldPopulateListElements,The following statement contains a magic number: Assert.AreEqual(2' results[0].Z);
Magic Number,Insight.Tests,AutoParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children.Count);
Magic Number,Insight.Tests,AutoParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children[0].Value);
Magic Number,Insight.Tests,AutoParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(3' parent.Children[1].Value);
Magic Number,Insight.Tests,AutoParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children.Count);
Magic Number,Insight.Tests,AutoParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children[0].Value);
Magic Number,Insight.Tests,AutoParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(3' parent.Children[1].Value);
Magic Number,Insight.Tests,AutoParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children.Count);
Magic Number,Insight.Tests,AutoParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children[0].Value);
Magic Number,Insight.Tests,AutoParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(3' parent.Children[1].Value);
Magic Number,Insight.Tests,AutoParentManualChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children.Count);
Magic Number,Insight.Tests,AutoParentManualChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children[0].Value);
Magic Number,Insight.Tests,AutoParentManualChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(3' parent.Children[1].Value);
Magic Number,Insight.Tests,AutoParentColumnChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children.Count);
Magic Number,Insight.Tests,AutoParentColumnChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children[0].Value);
Magic Number,Insight.Tests,AutoParentColumnChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(3' parent.Children[1].Value);
Magic Number,Insight.Tests,AttributeParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List_MappingOfParentID_ByConvention,The following statement contains a magic number: Assert.AreEqual(10' parent.Int2);
Magic Number,Insight.Tests,AttributeParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List_MappingOfParentID_ByConvention,The following statement contains a magic number: Assert.AreEqual(2' parent.Children.Count);
Magic Number,Insight.Tests,AttributeParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List_MappingOfParentID_ByConvention,The following statement contains a magic number: Assert.AreEqual(2' parent.Children[0].Value);
Magic Number,Insight.Tests,AttributeParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List_MappingOfParentID_ByConvention,The following statement contains a magic number: Assert.AreEqual(3' parent.Children[1].Value);
Magic Number,Insight.Tests,AttributeParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List_MappingOfParentID_ByConvention,The following statement contains a magic number: Assert.AreEqual(30' parent.Children[0].Int3);
Magic Number,Insight.Tests,AttributeParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List_MappingOfParentID_ByParentPK,The following statement contains a magic number: Assert.AreEqual(10' parent.Int2);
Magic Number,Insight.Tests,AttributeParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List_MappingOfParentID_ByParentPK,The following statement contains a magic number: Assert.AreEqual(2' parent.Children.Count);
Magic Number,Insight.Tests,AttributeParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List_MappingOfParentID_ByParentPK,The following statement contains a magic number: Assert.AreEqual(2' parent.Children[0].Value);
Magic Number,Insight.Tests,AttributeParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List_MappingOfParentID_ByParentPK,The following statement contains a magic number: Assert.AreEqual(3' parent.Children[1].Value);
Magic Number,Insight.Tests,AttributeParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List_MappingOfParentID_ByParentPK,The following statement contains a magic number: Assert.AreEqual(30' parent.Children[0].ChildKey);
Magic Number,Insight.Tests,AttributeParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List_MappingOfParentID_ByParentPK_NakedId,The following statement contains a magic number: Assert.AreEqual(2' beer.GlassesB.Count);
Magic Number,Insight.Tests,AttributeParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List_MappingOfParentID_ByParentPK_NakedId,The following statement contains a magic number: Assert.AreEqual(2' beer.GlassesB.Count);
Magic Number,Insight.Tests,AttributeParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List_MappingOfParentID_ByParentPK_NakedId,The following statement contains a magic number: Assert.AreEqual(40' beer.GlassesB[0].Value);
Magic Number,Insight.Tests,AttributeParentAutoChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List_MappingOfParentID_ByParentPK_NakedId,The following statement contains a magic number: Assert.AreEqual(41' beer.GlassesB[1].Value);
Magic Number,Insight.Tests,AttributeParentAutoChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.ID2);
Magic Number,Insight.Tests,AttributeParentAutoChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children.Count);
Magic Number,Insight.Tests,AttributeParentAutoChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children[0].Value);
Magic Number,Insight.Tests,AttributeParentAutoChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(3' parent.Children[1].Value);
Magic Number,Insight.Tests,AttributeParentColumnChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List_MappingOnParentID_ByParentPK_MultiID,The following statement contains a magic number: Assert.AreEqual(10' parent.Int2);
Magic Number,Insight.Tests,AttributeParentColumnChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List_MappingOnParentID_ByParentPK_MultiID,The following statement contains a magic number: Assert.AreEqual(2' parent.Children.Count);
Magic Number,Insight.Tests,AttributeParentColumnChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List_MappingOnParentID_ByParentPK_MultiID,The following statement contains a magic number: Assert.AreEqual(2' parent.Children[0].Value);
Magic Number,Insight.Tests,AttributeParentColumnChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List_MappingOnParentID_ByParentPK_MultiID,The following statement contains a magic number: Assert.AreEqual(3' parent.Children[1].Value);
Magic Number,Insight.Tests,AttributeParentColumnChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List_MappingOnParentID_ByParentPK_MultiID,The following statement contains a magic number: Assert.AreEqual(10' parent.Children[0].Int2);
Magic Number,Insight.Tests,AttributeParentColumnChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.ID2);
Magic Number,Insight.Tests,AttributeParentColumnChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children.Count);
Magic Number,Insight.Tests,AttributeParentColumnChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children[0].Value);
Magic Number,Insight.Tests,AttributeParentColumnChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(3' parent.Children[1].Value);
Magic Number,Insight.Tests,ManualParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List,The following statement contains a magic number: Assert.AreEqual(2' parent.Children.Count);
Magic Number,Insight.Tests,ManualParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List,The following statement contains a magic number: Assert.AreEqual(2' parent.Children[0].Value);
Magic Number,Insight.Tests,ManualParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,List,The following statement contains a magic number: Assert.AreEqual(3' parent.Children[1].Value);
Magic Number,Insight.Tests,ManualParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Single,The following statement contains a magic number: Assert.AreEqual(2' parent.Children.Count);
Magic Number,Insight.Tests,ManualParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Single,The following statement contains a magic number: Assert.AreEqual(2' parent.Children[0].Value);
Magic Number,Insight.Tests,ManualParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Single,The following statement contains a magic number: Assert.AreEqual(3' parent.Children[1].Value);
Magic Number,Insight.Tests,ManualParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.ID2);
Magic Number,Insight.Tests,ManualParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children.Count);
Magic Number,Insight.Tests,ManualParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children[0].Value);
Magic Number,Insight.Tests,ManualParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(3' parent.Children[1].Value);
Magic Number,Insight.Tests,ManualParentAutoChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.ID2);
Magic Number,Insight.Tests,ManualParentAutoChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children.Count);
Magic Number,Insight.Tests,ManualParentAutoChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children[0].Value);
Magic Number,Insight.Tests,ManualParentAutoChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(3' parent.Children[1].Value);
Magic Number,Insight.Tests,ManualParentColumnChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.ID2);
Magic Number,Insight.Tests,ManualParentColumnChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children.Count);
Magic Number,Insight.Tests,ManualParentColumnChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children[0].Value);
Magic Number,Insight.Tests,ManualParentColumnChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(3' parent.Children[1].Value);
Magic Number,Insight.Tests,AttributeParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.ID2);
Magic Number,Insight.Tests,AttributeParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children.Count);
Magic Number,Insight.Tests,AttributeParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children[0].Value);
Magic Number,Insight.Tests,AttributeParentManualChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(3' parent.Children[1].Value);
Magic Number,Insight.Tests,AutoParentNamedChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children.Count);
Magic Number,Insight.Tests,AutoParentNamedChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children[0].Value);
Magic Number,Insight.Tests,AutoParentNamedChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(3' parent.Children[1].Value);
Magic Number,Insight.Tests,AutoParentAttributeChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children.Count);
Magic Number,Insight.Tests,AutoParentAttributeChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children[0].Value);
Magic Number,Insight.Tests,AutoParentAttributeChild,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(3' parent.Children[1].Value);
Magic Number,Insight.Tests,AttributeParentAttributeChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.ID2);
Magic Number,Insight.Tests,AttributeParentAttributeChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children.Count);
Magic Number,Insight.Tests,AttributeParentAttributeChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' parent.Children[0].Value);
Magic Number,Insight.Tests,AttributeParentAttributeChildComposite,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\GroupByTests.cs,Verify,The following statement contains a magic number: Assert.AreEqual(3' parent.Children[1].Value);
Magic Number,Insight.Tests,InsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InsertTests.cs,SingleInsertShouldFillInIdentities,The following statement contains a magic number: i.Value = 5;
Magic Number,Insight.Tests,InsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InsertTests.cs,SingleInsertShouldFillInIdentities,The following statement contains a magic number: Assert.AreEqual(5' i.Id2);
Magic Number,Insight.Tests,InsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InsertTests.cs,SingleInsertShouldAllowParameters,The following statement contains a magic number: var result = Connection().Insert("InsertIdentityReturn2"' i' i.Expand(new { OtherValue = 5 }));
Magic Number,Insight.Tests,InsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InsertTests.cs,SingleInsertShouldAllowParameters,The following statement contains a magic number: Assert.AreEqual(5' i.Id2);
Magic Number,Insight.Tests,InsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InsertTests.cs,MultipleInsertShouldFillInIdentities,The following statement contains a magic number: var result = Connection().InsertList("InsertByTable"' list' new { OtherValue = 5' Items = list });
Magic Number,Insight.Tests,InsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InsertTests.cs,MultipleInsertShouldFillInIdentities,The following statement contains a magic number: Assert.AreEqual(2' i.Id2);
Magic Number,Insight.Tests,InsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InsertTests.cs,MultipleInsertShouldFillInIdentities,The following statement contains a magic number: Assert.AreEqual(2' i2.Id);
Magic Number,Insight.Tests,InsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InsertTests.cs,MultipleInsertShouldFillInIdentities,The following statement contains a magic number: Assert.AreEqual(2' i2.Id2);
Magic Number,Insight.Tests,InsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InsertTests.cs,SingleInsertSqlShouldFillInIdentities,The following statement contains a magic number: Assert.AreEqual(2' i.Id2);
Magic Number,Insight.Tests,InsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InsertTests.cs,AsyncSingleInsertShouldFillInIdentities,The following statement contains a magic number: i.Value = 5;
Magic Number,Insight.Tests,InsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InsertTests.cs,AsyncSingleInsertShouldFillInIdentities,The following statement contains a magic number: Assert.AreEqual(5' i.Id2);
Magic Number,Insight.Tests,InsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InsertTests.cs,AsyncSingleInsertShouldAllowParameters,The following statement contains a magic number: var result = Connection().InsertAsync("InsertIdentityReturn2"' i' i.Expand(new { OtherValue = 5 })).Result;
Magic Number,Insight.Tests,InsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InsertTests.cs,AsyncSingleInsertShouldAllowParameters,The following statement contains a magic number: Assert.AreEqual(5' i.Id2);
Magic Number,Insight.Tests,InsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InsertTests.cs,AsyncMultipleInsertShouldFillInIdentities,The following statement contains a magic number: var result = Connection().InsertListAsync("InsertByTable"' list' new { OtherValue = 5' Items = list }).Result;
Magic Number,Insight.Tests,InsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InsertTests.cs,AsyncMultipleInsertShouldFillInIdentities,The following statement contains a magic number: Assert.AreEqual(2' i.Id2);
Magic Number,Insight.Tests,InsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InsertTests.cs,AsyncMultipleInsertShouldFillInIdentities,The following statement contains a magic number: Assert.AreEqual(2' i2.Id);
Magic Number,Insight.Tests,InsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InsertTests.cs,AsyncMultipleInsertShouldFillInIdentities,The following statement contains a magic number: Assert.AreEqual(2' i2.Id2);
Magic Number,Insight.Tests,InsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InsertTests.cs,AsyncSingleInsertSqlShouldFillInIdentities,The following statement contains a magic number: Assert.AreEqual(2' i.Id2);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: i.ExecuteSomethingWithParameters(5' "6");
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(9' i.ExecuteSomethingScalar(9));
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(9' i.ExecuteSomethingScalar(9));
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(2' i.QueryValue(9).Count());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(2' i.QueryValue(9).Count());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(11' i.ObjectAsParameter(new ParentTestData() { ParentX = 11 }));
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(11' i.ObjectAsParameter(new ParentTestData() { ParentX = 11 }));
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(11' i.ObjectListAsParameter(new[] { new ParentTestData() { ParentX = 11 } }).First());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(11' i.ObjectListAsParameter(new[] { new ParentTestData() { ParentX = 11 } }).First());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: var results = i.QueryResults(7);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(7' results.Set2.First());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: i.ExecuteSomethingWithParametersAsync(5' "6").Wait();
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(9' i.ExecuteSomethingScalarAsync(9).Result);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(9' i.ExecuteSomethingScalarAsync(9).Result);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(2' i.QueryValueAsync(9).Result.Count());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(2' i.QueryValueAsync(9).Result.Count());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(11' i.ObjectAsParameterAsync(new ParentTestData() { ParentX = 11 }).Result);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(11' i.ObjectAsParameterAsync(new ParentTestData() { ParentX = 11 }).Result);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(11' i.ObjectListAsParameterAsync(new[] { new ParentTestData() { ParentX = 11 } }).Result.First());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(11' i.ObjectListAsParameterAsync(new[] { new ParentTestData() { ParentX = 11 } }).Result.First());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: results = i.QueryResultsAsync(7).Result;
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(7' results.Set2.First());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual("42"' i.InlineSql(42));
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(99' i.InlineSqlProcOverride(99));
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(99' i.InlineSqlProcOverride(99));
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(98' i.InlineSqlWithSchema(98));
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(98' i.InlineSqlWithSchema(98));
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(98' connection.As<ITestWithSqlAttribute>().ExecuteSomethingScalar(98));
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceIsGenerated,The following statement contains a magic number: Assert.AreEqual(98' connection.As<ITestWithSqlAttribute>().ExecuteSomethingScalar(98));
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,InterfaceWithSpecialParametersIsGenerated,The following statement contains a magic number: i.ExecuteSomething(30);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestInsert,The following statement contains a magic number: TestData data = new TestData() { Z = 4 };
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestInsert,The following statement contains a magic number: data = new TestData() { Z = 4 };
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestInsert,The following statement contains a magic number: Assert.AreEqual(2' data.X' "ID should be returned");
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestInsert,The following statement contains a magic number: var list = new[]  				{  					new TestData() { Z = 5 }'  					new TestData() { Z = 6 }  				};
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestInsert,The following statement contains a magic number: var list = new[]  				{  					new TestData() { Z = 5 }'  					new TestData() { Z = 6 }  				};
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestInsert,The following statement contains a magic number: Assert.AreEqual(3' list[0].X' "ID should be returned");
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestInsert,The following statement contains a magic number: Assert.AreEqual(4' list[1].X' "ID should be returned");
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestInsert,The following statement contains a magic number: data = new TestData() { Z = 4 };
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestInsert,The following statement contains a magic number: Assert.AreEqual(5' data.X' "ID should be returned");
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestInsert,The following statement contains a magic number: list = new[]  				{  					new TestData() { Z = 5 }'  					new TestData() { Z = 6 }  				};
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestInsert,The following statement contains a magic number: list = new[]  				{  					new TestData() { Z = 5 }'  					new TestData() { Z = 6 }  				};
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestInsert,The following statement contains a magic number: Assert.AreEqual(6' list[0].X' "ID should be returned");
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestInsert,The following statement contains a magic number: Assert.AreEqual(7' list[1].X' "ID should be returned");
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestInterfaceMultithreaded,The following statement contains a magic number: Parallel.For(0' 100' _ => TryInterfaceCall(100));
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestInterfaceMultithreaded,The following statement contains a magic number: Parallel.For(0' 100' _ => TryInterfaceCall(100));
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestOutputParameters,The following statement contains a magic number: int original = 2;
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestOutputParameters,The following statement contains a magic number: Assert.AreEqual(7' scalar);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestOutputParameters,The following statement contains a magic number: Assert.AreEqual(5' results[0]);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestOutputParameters,The following statement contains a magic number: TestData data = new TestData() { Z = 4 };
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,DifferentTypesOfListsAreSupportedAsReturnTypes,The following statement contains a magic number: Assert.AreEqual(2' result.Count());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,DifferentTypesOfListsAreSupportedAsReturnTypes,The following statement contains a magic number: Assert.AreEqual(2' result.Count());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,DifferentTypesOfListsAreSupportedAsReturnTypes,The following statement contains a magic number: Assert.AreEqual(2' result.Count());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,DifferentTypesOfListsAreSupportedAsReturnTypes,The following statement contains a magic number: Assert.AreEqual(2' result.Count());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,DifferentTypesOfListsAreSupportedAsReturnTypes,The following statement contains a magic number: Assert.AreEqual(2' result.Count());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,DifferentTypesOfListsAreSupportedAsReturnTypes,The following statement contains a magic number: Assert.AreEqual(2' result.Count());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,DifferentTypesOfListsAreSupportedAsReturnTypes,The following statement contains a magic number: Assert.AreEqual(2' result.Count());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,DifferentTypesOfListsAreSupportedAsReturnTypes,The following statement contains a magic number: Assert.AreEqual(2' result.Count());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,DifferentTypesOfListsAreSupportedAsReturnTypes,The following statement contains a magic number: Assert.AreEqual(2' result.Count());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,DifferentTypesOfListsAreSupportedAsReturnTypes,The following statement contains a magic number: Assert.AreEqual(2' result.Count());
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanPassStructureToInterface,The following statement contains a magic number: Assert.AreEqual(2' beer.More.ID);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanUseAttributeToGetList,The following statement contains a magic number: Assert.AreEqual(2' beer.More.ID);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanUseAttributeToGetListAsync,The following statement contains a magic number: Assert.AreEqual(2' beer.More.ID);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanUseAttributeToGetResults,The following statement contains a magic number: Assert.AreEqual(2' result.Set2[0].ID);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanUseAttributeToGetResults,The following statement contains a magic number: Assert.AreEqual(2' result.Set2[0].More.ID);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetDerivedRecordset,The following statement contains a magic number: Assert.AreEqual(70' result.TotalCount);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetMultipleChildren,The following statement contains a magic number: Assert.AreEqual(2' result[0].Beer[0].ID);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetMultipleChildren,The following statement contains a magic number: Assert.AreEqual(3' result[0].Wine[0].ID);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetMultipleChildrenAndThenMore,The following statement contains a magic number: Assert.AreEqual(2' result.Set1[0].Beer[0].ID);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetMultipleChildrenAndThenMore,The following statement contains a magic number: Assert.AreEqual(3' result.Set1[0].Wine[0].ID);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetMultipleChildrenAndThenMore,The following statement contains a magic number: Assert.AreEqual(4' result.Set2[0].ID);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanOverrideParentChildRelationships,The following statement contains a magic number: Assert.AreEqual(2' result[0].OtherBeer[0].ID);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanOverrideParentChildRelationships,The following statement contains a magic number: Assert.AreEqual(3' result[0].Wine[0].ID);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetSingleWithAttribute,The following statement contains a magic number: Assert.AreEqual(2' beer.More.ID);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetSingleWithChildren,The following statement contains a magic number: Assert.AreEqual(2' beer.List.Count);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetSingleWithChildren,The following statement contains a magic number: Assert.AreEqual(2' beer.List[0].ID);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetSingleWithChildren,The following statement contains a magic number: Assert.AreEqual(3' beer.List[1].ID);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetMultiLevelChildren,The following statement contains a magic number: Assert.AreEqual(2' beer.List.Count);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetMultiLevelChildren,The following statement contains a magic number: Assert.AreEqual(2' beer.List[0].ID);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetMultiLevelChildren,The following statement contains a magic number: Assert.AreEqual(3' beer.List[1].ID);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetMultiLevelChildren,The following statement contains a magic number: Assert.AreEqual(2' beer2.ID);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetMultiLevelChildren,The following statement contains a magic number: Assert.AreEqual(4' beer2.List[0].ID);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestMergeOutputAttribute,The following statement contains a magic number: Assert.AreEqual(4' data.X);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,TestMergeOutputAttribute,The following statement contains a magic number: Assert.AreEqual(6' data.Z);
Magic Number,Insight.Tests,InterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanPassTVPToFunctionInSQLText,The following statement contains a magic number: result = i.ReflectBeer2(beer' 2);
Magic Number,Insight.Tests,MultiThreadedInterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanCallInterfaceMultiThreaded,The following statement contains a magic number: i < 100
Magic Number,Insight.Tests,MultiThreadedInterfaceTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanCallWrappedConnectionMultiThreaded,The following statement contains a magic number: i < 100
Magic Number,Insight.Tests,ParameterWithAttributeTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,ParameterNameCanBeOverridden,The following statement contains a magic number: var p = Connection().As<IHaveColumnAttribute>().RenameParameter(5);
Magic Number,Insight.Tests,ParameterWithAttributeTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,ParameterNameCanBeOverridden,The following statement contains a magic number: Assert.AreEqual(5' p);
Magic Number,Insight.Tests,TestMultiLevelChildren,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetMultiLevelChildren,The following statement contains a magic number: Assert.AreEqual(2' root.List.Count);
Magic Number,Insight.Tests,TestMultiLevelChildren,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetMultiLevelChildren,The following statement contains a magic number: Assert.AreEqual(2' root.List[0].ID);
Magic Number,Insight.Tests,TestMultiLevelChildren,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetMultiLevelChildren,The following statement contains a magic number: Assert.AreEqual(3' root.List[1].ID);
Magic Number,Insight.Tests,TestMultiLevelChildren,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetMultiLevelChildren,The following statement contains a magic number: Assert.AreEqual(2' level2.ID);
Magic Number,Insight.Tests,TestMultiLevelChildren,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\InterfaceTests.cs,CanGetMultiLevelChildren,The following statement contains a magic number: Assert.AreEqual(4' level2.List[0].ID);
Magic Number,Insight.Tests,JsonTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\JsonTests.cs,ClassCanBeSerializedAsJsonParameter,The following statement contains a magic number: input.SubClass = new JsonSubClass() { Foo = "foo"' Bar = 5 };
Magic Number,Insight.Tests,JsonTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\JsonTests.cs,StructCanBeSerializedAsJsonParameter,The following statement contains a magic number: input.SubStruct = new JsonSubStruct() { Foo = "foo"' Bar = 5 };
Magic Number,Insight.Tests,JsonTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\JsonTests.cs,ListOfClassCanBeSerializedAsJsonParameter,The following statement contains a magic number: input.ListOfClass.Add(new JsonSubClass() { Foo = "foo"' Bar = 5 });
Magic Number,Insight.Tests,JsonTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\JsonTests.cs,ListOfClassCanBeSerializedAsJsonParameter,The following statement contains a magic number: input.ListOfClass.Add(new JsonSubClass() { Foo = "foo2"' Bar = 6 });
Magic Number,Insight.Tests,JsonTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\JsonTests.cs,LargeSerialization,The following statement contains a magic number: var entity = new EntityDefinitionDataModel()  				{  					Definition = new EntityDefinition()  					{  						Name = new String('a'' 16384)  					}  				};
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,TestEnumerableValueParameters,The following statement contains a magic number: i < 3
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,TestEnumerableClassArrayParameters,The following statement contains a magic number: i < 3
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,TestEnumerableClassListParameters,The following statement contains a magic number: i < 3
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,SqlTextTVPShouldAutoDetectTableType,The following statement contains a magic number: i < 3
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,EnumerablePassedDirectlyToProcWithOneTVPParameterShouldMapListToParameter,The following statement contains a magic number: InsightTestData[] array = new InsightTestData[3];
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,EnumerablePassedDirectlyToProcWithOneTVPParameterShouldMapListToParameter,The following statement contains a magic number: j < 3
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,EnumerablePassedDirectlyToProcWithOneTVPParameterShouldMapListToParameter,The following statement contains a magic number: Assert.AreEqual(3' items.Count);
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,EnumerablePassedDirectlyToProcWithOneTVPParameterShouldMapListToParameter,The following statement contains a magic number: j < 3
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,ArrayOfValuesPassedDirectlyToProcWithOneTVPParameterShouldMapListToParameter,The following statement contains a magic number: int[] array = new int[3];
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,ArrayOfValuesPassedDirectlyToProcWithOneTVPParameterShouldMapListToParameter,The following statement contains a magic number: j < 3
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,ArrayOfValuesPassedDirectlyToProcWithOneTVPParameterShouldMapListToParameter,The following statement contains a magic number: Assert.AreEqual(3' items.Count);
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,ArrayOfValuesPassedDirectlyToProcWithOneTVPParameterShouldMapListToParameter,The following statement contains a magic number: j < 3
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,EnumerableOfValuesPassedDirectlyToProcWithOneTVPParameterShouldMapListToParameter,The following statement contains a magic number: j < 3
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,EnumerableOfValuesPassedDirectlyToProcWithOneTVPParameterShouldMapListToParameter,The following statement contains a magic number: Assert.AreEqual(3' items.Count);
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,EnumerableOfValuesPassedDirectlyToProcWithOneTVPParameterShouldMapListToParameter,The following statement contains a magic number: j < 3
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,TestEnumerableValueParametersToStoredProc,The following statement contains a magic number: Assert.AreEqual(3' Connection().Query<InsightTestData>("Int32TestProc"' new { p = new int?[] { 0' null' 1 } }).Count);
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,TestEnumerableValueParametersToStoredProc,The following statement contains a magic number: i < 3
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,TestEnumerableValueParametersToStoredProc,The following statement contains a magic number: Assert.AreEqual(3' Connection().Query<InsightTestData>("Int32TestProc"' new { p = new int?[] { 0' null' 1 } }).Count);
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,TestThatEvilTypesCanBeSentToServer,The following statement contains a magic number: var o = new Data()  			{  				a = 0.1m'  				b = 0.2m'  				c = DateTime.Now  			};
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,TestThatEvilTypesCanBeSentToServer,The following statement contains a magic number: var o = new Data()  			{  				a = 0.1m'  				b = 0.2m'  				c = DateTime.Now  			};
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,TestThatStringTypesAreReadProperly,The following statement contains a magic number: i < 3
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,TestThatIntsAreConvertedToStringsProperly,The following statement contains a magic number: i < 3
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,AsyncEnumerablePassedDirectlyToProcWithOneTVPParameterShouldMapListToParameter,The following statement contains a magic number: InsightTestData[] array = new InsightTestData[3];
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,AsyncEnumerablePassedDirectlyToProcWithOneTVPParameterShouldMapListToParameter,The following statement contains a magic number: j < 3
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,AsyncEnumerablePassedDirectlyToProcWithOneTVPParameterShouldMapListToParameter,The following statement contains a magic number: Assert.AreEqual(3' items.Count);
Magic Number,Insight.Tests,ListTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ListTests.cs,AsyncEnumerablePassedDirectlyToProcWithOneTVPParameterShouldMapListToParameter,The following statement contains a magic number: j < 3
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,OutputParameterShouldHonorParameterMappings,The following statement contains a magic number: Assert.AreEqual(5' output.foo);
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,SerializationHandlerSwitchesObjectToXmlWhenRecordTypeMatches,The following statement contains a magic number: input.SubClass = new JsonSubClass() { Foo = "foo"' Bar = 5 };
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,SerializationHandlerSwitchesObjectToXmlWhenNameMatches,The following statement contains a magic number: input.SubClass = new JsonSubClass() { Foo = "foo"' Bar = 5 };
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,SerializationHandlerSwitchesObjectToXmlWhenTypeMatches,The following statement contains a magic number: input.SubClass = new JsonSubClass() { Foo = "foo"' Bar = 5 };
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,SerializationHandlerDoesNotSwitchObjectToXmlWhenNameDoesNotMatch,The following statement contains a magic number: input.SubClass = new JsonSubClass() { Foo = "foo"' Bar = 5 };
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,IntefaceMethodsFlattenParameters,The following statement contains a magic number: FastExpando result = Connection().As<IFlattenParameters>().Flatten(1' new FlattenedParameters() { Y1 = 2' Y2 = 3 });
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,IntefaceMethodsFlattenParameters,The following statement contains a magic number: FastExpando result = Connection().As<IFlattenParameters>().Flatten(1' new FlattenedParameters() { Y1 = 2' Y2 = 3 });
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,IntefaceMethodsFlattenParameters,The following statement contains a magic number: Assert.AreEqual(2' result["y1"]);
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,IntefaceMethodsFlattenParameters,The following statement contains a magic number: Assert.AreEqual(3' result["y2"]);
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,IntefaceMethodsFlattenParameters2,The following statement contains a magic number: FastExpando result = Connection().As<IFlattenParameters>().Flatten(1' new FlattenedParameters() { Y1 = 2' Y2 = 3 }' new FlattenedParameters2() { Z1 = 4' Z2 = 5 });
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,IntefaceMethodsFlattenParameters2,The following statement contains a magic number: FastExpando result = Connection().As<IFlattenParameters>().Flatten(1' new FlattenedParameters() { Y1 = 2' Y2 = 3 }' new FlattenedParameters2() { Z1 = 4' Z2 = 5 });
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,IntefaceMethodsFlattenParameters2,The following statement contains a magic number: FastExpando result = Connection().As<IFlattenParameters>().Flatten(1' new FlattenedParameters() { Y1 = 2' Y2 = 3 }' new FlattenedParameters2() { Z1 = 4' Z2 = 5 });
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,IntefaceMethodsFlattenParameters2,The following statement contains a magic number: FastExpando result = Connection().As<IFlattenParameters>().Flatten(1' new FlattenedParameters() { Y1 = 2' Y2 = 3 }' new FlattenedParameters2() { Z1 = 4' Z2 = 5 });
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,IntefaceMethodsFlattenParameters2,The following statement contains a magic number: Assert.AreEqual(2' result["y1"]);
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,IntefaceMethodsFlattenParameters2,The following statement contains a magic number: Assert.AreEqual(3' result["y2"]);
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,IntefaceMethodsFlattenParameters2,The following statement contains a magic number: Assert.AreEqual(4' result["z1"]);
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,IntefaceMethodsFlattenParameters2,The following statement contains a magic number: Assert.AreEqual(5' result["z2"]);
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,AttributeCanDisableFlattening,The following statement contains a magic number: Assert.Throws<SqlException>(() => Connection().As<IFlattenParameters>().DontFlatten(1' new FlattenedParameters() { Y1 = 2' Y2 = 3 }));
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,AttributeCanDisableFlattening,The following statement contains a magic number: Assert.Throws<SqlException>(() => Connection().As<IFlattenParameters>().DontFlatten(1' new FlattenedParameters() { Y1 = 2' Y2 = 3 }));
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,InputParametersCanMapChildFields,The following statement contains a magic number: FastExpando result = (FastExpando)Connection().QuerySql("SELECT x=@x' y1=@y1' y2=@y2"' new { X = 1' Y = new { Y1 = 2' Y2 = 3 } }).First();
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,InputParametersCanMapChildFields,The following statement contains a magic number: FastExpando result = (FastExpando)Connection().QuerySql("SELECT x=@x' y1=@y1' y2=@y2"' new { X = 1' Y = new { Y1 = 2' Y2 = 3 } }).First();
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,InputParametersCanMapChildFields,The following statement contains a magic number: Assert.AreEqual(2' result["y1"]);
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,InputParametersCanMapChildFields,The following statement contains a magic number: Assert.AreEqual(3' result["y2"]);
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,DeepBindingDisabledByDefault,The following statement contains a magic number: Assert.Throws<SqlException>(() => Connection().QuerySql("SELECT xx=@x' y1=@y1' y2=@y2"' new { XX = 1' Y = new { Y1 = 2' Y2 = 3 } }).First());
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,DeepBindingDisabledByDefault,The following statement contains a magic number: Assert.Throws<SqlException>(() => Connection().QuerySql("SELECT xx=@x' y1=@y1' y2=@y2"' new { XX = 1' Y = new { Y1 = 2' Y2 = 3 } }).First());
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,InputParametersCanMapChildFields2,The following statement contains a magic number: FastExpando result = (FastExpando)Connection().QuerySql("SELECT x=@x' y1=@y1' y2=@y2' z1=@z1' z2=@z2"' new { X = 1' Y = new { Y1 = 2' Y2 = 3 }' Z = new { Z1 = 4' Z2 = 5 } }).First();
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,InputParametersCanMapChildFields2,The following statement contains a magic number: FastExpando result = (FastExpando)Connection().QuerySql("SELECT x=@x' y1=@y1' y2=@y2' z1=@z1' z2=@z2"' new { X = 1' Y = new { Y1 = 2' Y2 = 3 }' Z = new { Z1 = 4' Z2 = 5 } }).First();
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,InputParametersCanMapChildFields2,The following statement contains a magic number: FastExpando result = (FastExpando)Connection().QuerySql("SELECT x=@x' y1=@y1' y2=@y2' z1=@z1' z2=@z2"' new { X = 1' Y = new { Y1 = 2' Y2 = 3 }' Z = new { Z1 = 4' Z2 = 5 } }).First();
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,InputParametersCanMapChildFields2,The following statement contains a magic number: FastExpando result = (FastExpando)Connection().QuerySql("SELECT x=@x' y1=@y1' y2=@y2' z1=@z1' z2=@z2"' new { X = 1' Y = new { Y1 = 2' Y2 = 3 }' Z = new { Z1 = 4' Z2 = 5 } }).First();
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,InputParametersCanMapChildFields2,The following statement contains a magic number: Assert.AreEqual(2' result["y1"]);
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,InputParametersCanMapChildFields2,The following statement contains a magic number: Assert.AreEqual(3' result["y2"]);
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,InputParametersCanMapChildFields2,The following statement contains a magic number: Assert.AreEqual(4' result["z1"]);
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,InputParametersCanMapChildFields2,The following statement contains a magic number: Assert.AreEqual(5' result["z2"]);
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,InputParametersAreUndefinedWhenChildrenAreNull,The following statement contains a magic number: var parent = new ParameterParent() { parent = 3 };
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,OutputParametersCanMapChildFields,The following statement contains a magic number: Assert.AreEqual(2' output.Child.foo);
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,MergeCanMapChildFields,The following statement contains a magic number: Assert.AreEqual(2' parent.Child.foo);
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,ParentFieldOverridesChildField,The following statement contains a magic number: p.Child = new ChildWithConflictedField() { ID = 2 };
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,TVPCanMapChildField,The following statement contains a magic number: var parent = new TVPParent() { Child = new TVPChild() { Z = 2 } };
Magic Number,Insight.Tests,MappingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,CustomMapperCanMapFields,The following statement contains a magic number: Assert.AreEqual(results.First().ParentX' 2);
Magic Number,Insight.Tests,MappingProcTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,ColumnAttributesAreAppliedToTableValuedParameters,The following statement contains a magic number: var original = new ParentTestDataWithColumn() { ParentX = 5' X = 7 };
Magic Number,Insight.Tests,MappingProcTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,ColumnAttributesAreAppliedToTableValuedParameters,The following statement contains a magic number: var original = new ParentTestDataWithColumn() { ParentX = 5' X = 7 };
Magic Number,Insight.Tests,MappingProcTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,MappingsAreAppliedToBulkCopy,The following statement contains a magic number: i < 3
Magic Number,Insight.Tests,MappingProcTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MappingTests.cs,MappingsAreAppliedToParameters,The following statement contains a magic number: var parentTestData = new ParentTestData() { ParentX = 5 };
Magic Number,Insight.Tests,MultipleResultsTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MultipleResultsTests.cs,ResultWithDynamicCreatesFastExpando,The following statement contains a magic number: Assert.AreEqual(2' item["Y"]);
Magic Number,Insight.Tests,MultipleResultsTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\MultipleResultsTests.cs,DerivedRecordsetsCanBeReturned,The following statement contains a magic number: Assert.AreEqual(70' results.TotalCount);
Magic Number,Insight.Tests,ObjectReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ObjectReaderTests.cs,TestReadingClassTypesFromObjects,The following statement contains a magic number: TestReadingClassType<byte[]>("varbinary(MAX)"' new byte[10]' "bytearray");
Magic Number,Insight.Tests,ObjectReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ObjectReaderTests.cs,TestTablesInSchemasWithDots,The following statement contains a magic number: Connection().Execute("[vk.common].MyProc"' new { table = Enumerable.Range(1' 10) });
Magic Number,Insight.Tests,ObjectReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ObjectReaderTests.cs,CanInsertDataIntoTVPWithIdentityColumn,The following statement contains a magic number: Assert.AreEqual(new int[] { 1' 2' 3 }' result);
Magic Number,Insight.Tests,ObjectReaderTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ObjectReaderTests.cs,CanInsertDataIntoTVPWithIdentityColumn,The following statement contains a magic number: Assert.AreEqual(new int[] { 1' 2' 3 }' result);
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestClassOutputParameterWithDefault,The following statement contains a magic number: var command = connection.CreateCommand("TestOutputParameters"' new { p = 5 });
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestClassOutputParameterWithDefault,The following statement contains a magic number: Assert.AreEqual(9' outputData.p);
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestExpandoOutputParameterWithDefault,The following statement contains a magic number: Assert.AreEqual(9' output["p"]);
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestExpandoOutputParameterWithoutDefault,The following statement contains a magic number: var command = connection.CreateCommand("TestOutputParameters"' new { p = 5 });
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestExpandoOutputParameterWithoutDefault,The following statement contains a magic number: Assert.AreEqual(9' output["p"]);
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestTypes,The following statement contains a magic number: ReturnTypeTest<short>.Test(-2' _connection' "smallint");
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestTypes,The following statement contains a magic number: ReturnTypeTest<int>.Test(-120' _connection' "int");
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestTypes,The following statement contains a magic number: ReturnTypeTest<long>.Test(-120000000' _connection' "bigint");
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestTypes,The following statement contains a magic number: ReturnTypeTest<float>.Test(123.456f' _connection' "float");
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestTypes,The following statement contains a magic number: ReturnTypeTest<double>.Test(567' _connection' "real");
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestTypes,The following statement contains a magic number: ReturnTypeTest<decimal>.Test(890.12345m' _connection' "decimal(18'5)");
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestTypes,The following statement contains a magic number: ReturnTypeTest<Nullable<short>>.Test(-2' _connection' "smallint");
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestTypes,The following statement contains a magic number: ReturnTypeTest<Nullable<int>>.Test(-120' _connection' "int");
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestTypes,The following statement contains a magic number: ReturnTypeTest<Nullable<long>>.Test(-120000000' _connection' "bigint");
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestTypes,The following statement contains a magic number: ReturnTypeTest<Nullable<float>>.Test(123.456f' _connection' "float");
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestTypes,The following statement contains a magic number: ReturnTypeTest<Nullable<double>>.Test(567' _connection' "real");
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestTypes,The following statement contains a magic number: ReturnTypeTest<Nullable<decimal>>.Test(890.12345m' _connection' "decimal(18'5)");
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestQueryResults,The following statement contains a magic number: var result = Connection().QueryResults<Results<int>>("TestOutputParameters"' new { p = 5 });
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestQueryResults,The following statement contains a magic number: Assert.AreEqual(9' result.Outputs["p"]);
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestAsyncQueryResults,The following statement contains a magic number: var result = Connection().QueryResultsAsync<Results<int>>("TestOutputParameters"' new { p = 5 }).Result;
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestAsyncQueryResults,The following statement contains a magic number: Assert.AreEqual(9' result.Outputs["p"]);
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestXmlOutputParameters,The following statement contains a magic number: var input = new OutputXmlParameters() { Data = new OutputData() { p = 5 } };
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestXmlOutputParameters,The following statement contains a magic number: Assert.AreEqual(5' output.Data.p);
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,ExecuteProcShouldReturnValue,The following statement contains a magic number: Assert.AreEqual(11' output.Return_Value);
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,ReturnValueCanFillInADynamic,The following statement contains a magic number: Assert.AreEqual(11' output["Return_Value"]);
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,ReturnValueCanFillQueryResults,The following statement contains a magic number: Assert.AreEqual(11' results.Outputs["Return_Value"]);
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestAsyncWithOutputParameters,The following statement contains a magic number: var task = Connection().ExecuteAsync("TestOutputParameters"' new { p = 5 }' outputParameters: outputData);
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestAsyncWithOutputParameters,The following statement contains a magic number: Assert.AreEqual(9' outputData.p);
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestIAsyncWithOutputParameters,The following statement contains a magic number: var outputData = new OutputData() { p = 10 };
Magic Number,Insight.Tests,OutputParameterTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,TestIAsyncWithOutputParameters,The following statement contains a magic number: Assert.AreEqual(9' outputData.p);
Magic Number,Insight.Tests,ReturnTypeTest<T>,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\OutputParameterTests.cs,Test,The following statement contains a magic number: procName += sqlType.Split(new char[] { '(' }' 2)[0];
Magic Number,Insight.Tests,ParameterDataTypeMapperTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ParameterDataTypeMapperTests.cs,TestWithMappingChangeTypeToVarChar,The following statement contains a magic number: ConnectionStateCase.ForEach(c =>  			{  				var command = c.CreateCommand  				(  					sql: "SELECT * FROM dbo.Beer WHERE Style = @mystyle"'  					parameters: new { myStyle = "Lager" }'  					commandType: CommandType.Text'  					commandTimeout: 10'  					transaction: null  				);    				Assert.AreEqual(((IDataParameter)command.Parameters[0]).DbType' DbType.AnsiString);  			});
Magic Number,Insight.Tests,ParameterDataTypeMapperTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ParameterDataTypeMapperTests.cs,TestWithMappingTypeDoesNotChange,The following statement contains a magic number: ConnectionStateCase.ForEach(c =>  			{  				var command = c.CreateCommand  				(  					sql: "SELECT * FROM dbo.Beer WHERE Style = @changeMyType"'  					parameters: new { changeMyType = "Lager" }'  					commandType: CommandType.Text'  					commandTimeout: 10'  					transaction: null  				);    				Assert.AreEqual(((IDataParameter)command.Parameters[0]).DbType' DbType.String);  			});
Magic Number,Insight.Tests,ParameterDataTypeMapperTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ParameterDataTypeMapperTests.cs,TestWithMappingTypeOfListChanges,The following statement contains a magic number: ConnectionStateCase.ForEach(c =>  			{  				var command = c.CreateCommand  				(  					sql: "SELECT * FROM dbo.Beer WHERE Style IN (@listItem)"'  					parameters: new  					{  						listItem = new List<string>  						{  							"Lager"'  							"IPA"  						}  					}'  					commandType: CommandType.Text'  					commandTimeout: 10'  					transaction: null  				);    				Assert.AreEqual(((IDataParameter)command.Parameters[0]).DbType' DbType.AnsiString);  			});
Magic Number,Insight.Tests,ParentAndChildrenTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ParentAndChildTests.cs,Validate,The following statement contains a magic number: Assert.AreEqual(2' children.Count);
Magic Number,Insight.Tests,ParentAndChildrenTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ParentAndChildTests.cs,Validate,The following statement contains a magic number: Assert.AreEqual(11' children[0].ChildID);
Magic Number,Insight.Tests,ParentAndChildrenTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\ParentAndChildTests.cs,Validate,The following statement contains a magic number: Assert.AreEqual(12' children[1].ChildID);
Magic Number,Insight.Tests,RegressionTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RegressionTests.cs,TestIssue18,The following statement contains a magic number: Beer b = new Beer() { AlcoholPts = 11 };
Magic Number,Insight.Tests,RegressionTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RegressionTests.cs,TestIssue18,The following statement contains a magic number: Assert.AreEqual(11' connection.ExecuteScalarSql<int>("SELECT AlcoholPts FROM Beer18"));
Magic Number,Insight.Tests,RetryStrategyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RetryStrategyTests.cs,SetUp,The following statement contains a magic number: RetryStrategy.MaxBackOff = new TimeSpan(0' 0' 0' 0' 10);
Magic Number,Insight.Tests,RetryStrategyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RetryStrategyTests.cs,MaxRetryCountCapsNumberOfRetries,The following statement contains a magic number: RetryStrategy.MaxRetryCount = 5;
Magic Number,Insight.Tests,RetryStrategyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RetryStrategyTests.cs,MaxRetryCountCapsNumberOfRetries,The following statement contains a magic number: Assert.AreEqual(5' retries);
Magic Number,Insight.Tests,RetryStrategyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RetryStrategyTests.cs,ExecuteStoredProcWithTVPThroughReliableConnection,The following statement contains a magic number: var result = retry.Query<int>("ReflectInt32Table"' new int[] { 1' 2' 3' 4' 5 });
Magic Number,Insight.Tests,RetryStrategyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RetryStrategyTests.cs,ExecuteStoredProcWithTVPThroughReliableConnection,The following statement contains a magic number: var result = retry.Query<int>("ReflectInt32Table"' new int[] { 1' 2' 3' 4' 5 });
Magic Number,Insight.Tests,RetryStrategyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RetryStrategyTests.cs,ExecuteStoredProcWithTVPThroughReliableConnection,The following statement contains a magic number: var result = retry.Query<int>("ReflectInt32Table"' new int[] { 1' 2' 3' 4' 5 });
Magic Number,Insight.Tests,RetryStrategyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RetryStrategyTests.cs,ExecuteStoredProcWithTVPThroughReliableConnection,The following statement contains a magic number: var result = retry.Query<int>("ReflectInt32Table"' new int[] { 1' 2' 3' 4' 5 });
Magic Number,Insight.Tests,RetryStrategyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RetryStrategyTests.cs,ExecuteStoredProcWithTVPThroughReliableConnection,The following statement contains a magic number: Assert.AreEqual(5' result.Count());
Magic Number,Insight.Tests,RetryStrategyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RetryStrategyTests.cs,AsyncBadOpenPerformsRetry,The following statement contains a magic number: RetryStrategy.MaxRetryCount = 5;
Magic Number,Insight.Tests,RetryStrategyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RetryStrategyTests.cs,AsyncBadOpenPerformsRetry,The following statement contains a magic number: Assert.AreEqual(5' Retries);
Magic Number,Insight.Tests,RetryStrategyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RetryStrategyTests.cs,AsyncBadQueryPerformsRetry,The following statement contains a magic number: RetryStrategy.MaxRetryCount = 5;
Magic Number,Insight.Tests,RetryStrategyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RetryStrategyTests.cs,AsyncBadQueryPerformsRetry,The following statement contains a magic number: Assert.AreEqual(5' Retries);
Magic Number,Insight.Tests,RetryStrategyTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\RetryStrategyTests.cs,AsyncWorksWithReliableConnection,The following statement contains a magic number: Assert.AreEqual(10' result);
Magic Number,Insight.Tests,EncodedIntSerializer,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SerializationTests.cs,SerializeObject,The following statement contains a magic number: switch (o.ToString())                  {                      case "One":                          return 1;                      case "Two":                          return 2;                      default:                          return null;                  }
Magic Number,Insight.Tests,EncodedIntSerializer,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SerializationTests.cs,DeserializeObject,The following statement contains a magic number: switch((int)encoded)                  {                      case 1:                          return "One";                      case 2:                          return "Two";                      default:                          return null;                  }
Magic Number,Insight.Tests,EncodedTypeSerializer,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SerializationTests.cs,SerializeObject,The following statement contains a magic number: switch (encoded.Encoded)  				{  					case "One":  						return 1;  					case "Two":  						return 2;  					default:  						return null;  				}
Magic Number,Insight.Tests,EncodedTypeSerializer,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SerializationTests.cs,DeserializeObject,The following statement contains a magic number: switch ((int)encoded)  				{  					case 1:  						return new EncodedInt() { Encoded = "One" };  					case 2:  						return new EncodedInt() { Encoded = "Two" };  					default:  						return null;  				}
Magic Number,Insight.Tests,StructureTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,RecordsetAttributeShouldControlDefaultOneToOneMapping,The following statement contains a magic number: Assert.AreEqual(2' result.Beer.ID);
Magic Number,Insight.Tests,StructureTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,RecordIDAttributeShouldDefineParentID,The following statement contains a magic number: Assert.AreEqual(2' result.List[0].ID);
Magic Number,Insight.Tests,StructureTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,ChildRecordsAttributeShouldDefineList,The following statement contains a magic number: Assert.AreEqual(2' result.List[0].ID);
Magic Number,Insight.Tests,StructureTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,CanOverrideColumnsInline,The following statement contains a magic number: Assert.AreEqual(2' result.Beer.ID);
Magic Number,Insight.Tests,StructureTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,MultiReaderCanDeserializeDifferentClasses,The following statement contains a magic number: Assert.AreEqual(2' results.Count);
Magic Number,Insight.Tests,StructureTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,MultiReaderCanDeserializeDifferentClasses,The following statement contains a magic number: Assert.AreEqual(2' ((MyClassB)results[1]).B);
Magic Number,Insight.Tests,StructureTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,PostProcessCanReadFieldsInAnyOrder,The following statement contains a magic number: var pr = new PostProcessRecordReader<MyClassA>(                  (reader' a) =>                  {                      if (reader["Type"].ToString() == "a")                          a.A = 9;                      return a;                  });
Magic Number,Insight.Tests,StructureTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,PostProcessCanReadFieldsInAnyOrder,The following statement contains a magic number: Assert.AreEqual(9' ((MyClassA)results[0]).A);
Magic Number,Insight.Tests,StructureTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,ColumnMappingShouldWorkForChildRecordsets,The following statement contains a magic number: Assert.AreEqual(3' results.Children[0].Foo);
Magic Number,Insight.Tests,StructureTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,TestIssue199,The following statement contains a magic number: Assert.AreEqual(12345' result.Id);
Magic Number,Insight.Tests,StructureTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,TestIssue199,The following statement contains a magic number: Assert.AreEqual(99999' result.GrandChild.Id);
Magic Number,Insight.Tests,StructureTest_ChildMappingHelperUnitTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,GetIDAccessor_ByName,The following statement contains a magic number: Assert.AreEqual(2' result.Count());
Magic Number,Insight.Tests,StructureTest_ChildMappingHelperUnitTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,GetIDAccessor_ByName,The following statement contains a magic number: Assert.AreEqual(2' result.Count());
Magic Number,Insight.Tests,StructureTest_ChildMappingHelperUnitTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,GetIDAccessor_ByName,The following statement contains a magic number: Assert.AreEqual(2' result.Count());
Magic Number,Insight.Tests,StructureTest_ChildMappingHelperUnitTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,GetIDAccessor_ByMultiAttribute,The following statement contains a magic number: Assert.AreEqual(2' result.Count());
Magic Number,Insight.Tests,StructureTest_ChildMappingHelperUnitTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,GetParentIDAccessor_ByMultiAttribute,The following statement contains a magic number: Assert.AreEqual(2' result.Count());
Magic Number,Insight.Tests,Issue129,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,Test129,The following statement contains a magic number: Assert.AreEqual(2' result.ParentB);
Magic Number,Insight.Tests,Issue129,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,Test129,The following statement contains a magic number: Assert.AreEqual(3' result.Child.ChildA);
Magic Number,Insight.Tests,Issue129,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,Test129,The following statement contains a magic number: Assert.AreEqual(4' result.Child.ChildB);
Magic Number,Insight.Tests,Issue129,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,Test129,The following statement contains a magic number: Assert.AreEqual(2' result.ParentB);
Magic Number,Insight.Tests,Issue142,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,AtomicChildRecords,The following statement contains a magic number: Assert.AreEqual(2' result.Children.Count);
Magic Number,Insight.Tests,Issue160,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,CustomRecordReaderCanDropNulls,The following statement contains a magic number: var results = Connection().QuerySql("SELECT ID=1; SELECT ParentID=1' ChildA=2' ChildB=3"' null'                          Query.Returns(Some<TestParent>.Records)                              .ThenChildren(CustomRecordReader<TestChild>.Read(r =>                              {                                  var childValue = (int)r["ChildA"];                                  if (childValue != 2)                                      return new TestChild(childValue' (int)r["ChildB"]);                                  return null;                              })'                              into: (p' children) => p.Children = children.Where(c => c != null).ToList()));
Magic Number,Insight.Tests,Issue188,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,ResultsCanBeContinuedWithThenChildren,The following statement contains a magic number: Assert.AreEqual(2' results.Set2[0].ID);
Magic Number,Insight.Tests,Issue188,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,ResultsCanBeContinuedWithThenChildren,The following statement contains a magic number: Assert.AreEqual(3' results.Set2[0].Children[0].ID);
Magic Number,Insight.Tests,Issue188,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,ResultsCanBeContinuedWithThenChildren2,The following statement contains a magic number: Assert.AreEqual(2' results.Set2[0].ID);
Magic Number,Insight.Tests,Issue188,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,ResultsCanBeContinuedWithThenChildren2,The following statement contains a magic number: Assert.AreEqual(3' results.Set2[0].Children[0].ID);
Magic Number,Insight.Tests,Issue265,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,ChildMapsToParentWithNullableId,The following statement contains a magic number: Assert.AreEqual(2' results[0].Children[0]);
Magic Number,Insight.Tests,SelfReferencingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,SelfReferencingClassShouldAssignWithManualFunctions,The following statement contains a magic number: SelfReferencing child = results.First(s => s.ID == 2);
Magic Number,Insight.Tests,SelfReferencingTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\StructureTests.cs,SelfReferencingClassShouldAssignWithAutomaticFunctions,The following statement contains a magic number: SelfReferencing child = results.First(s => s.ID == 2);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SelectSubObject,The following statement contains a magic number: Assert.AreEqual(2' testData.SubDataID);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SelectSubObject,The following statement contains a magic number: Assert.AreEqual(2' testData.SubData.ID);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SelectSubObject,The following statement contains a magic number: Assert.AreEqual(3' testData.SubData.SubInt);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SelectWithEmptyLeftJoinShouldContainNullObject,The following statement contains a magic number: Assert.AreEqual(2' testData.SubDataID);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SelectTwoSubObjects,The following statement contains a magic number: Assert.AreEqual(2' testData.SubDataID);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SelectTwoSubObjects,The following statement contains a magic number: Assert.AreEqual(2' testData.SubData.ID);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SelectTwoSubObjects,The following statement contains a magic number: Assert.AreEqual(3' testData.SubData.SubInt);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SelectTwoSubObjects,The following statement contains a magic number: Assert.AreEqual(3' testData.SubData2.ID);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SelectTwoSubObjects,The following statement contains a magic number: Assert.AreEqual(4' testData.SubData2.SubInt);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SelectTwoSubObjectsWithMissingMiddleObjectShouldHaveNullMiddleObject,The following statement contains a magic number: Assert.AreEqual(3' testData.Foo' "Foo should be set");
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SelectTwoSubObjectsWithMissingMiddleObjectShouldHaveNullMiddleObject,The following statement contains a magic number: Assert.AreEqual(2' testData.OtherData.OtherID);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SelectTwoSubObjectsWithMissingMiddleObjectShouldHaveNullMiddleObject,The following statement contains a magic number: Assert.AreEqual(4' testData.OtherData.Bar);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SelectSubSubObjectWithoutCustomMapper,The following statement contains a magic number: Assert.AreEqual(2' testData.SubData.ID);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SelectSubSubObjectWithoutCustomMapper,The following statement contains a magic number: Assert.AreEqual(3' testData.SubData.SubSubData.ID);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SelectSubSubObjectWithoutCustomMapper,The following statement contains a magic number: Assert.AreEqual(4' testData.SubData.SubSubData.SubInt);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SelectSubSubObjectWithObjectArray,The following statement contains a magic number: Assert.AreEqual(2' testData.OtherData.OtherID);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SelectSubSubObjectWithObjectArray,The following statement contains a magic number: Assert.AreEqual(3' testData.OtherData.SubData.ID);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SelectSubSubObjectWithObjectArray,The following statement contains a magic number: Assert.AreEqual(4' testData.OtherData.SubData.SubInt);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,ShouldAutomaticallyDetectSplitBoundariesWhenNoKeysSpecified,The following statement contains a magic number: Assert.AreEqual(2' testData.SubData.ID);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,ShouldAutomaticallyDetectSplitBoundariesWhenNoKeysSpecified,The following statement contains a magic number: Assert.AreEqual(3' testData.SubData2.ID);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,ShouldAutomaticallyMapSubObjectsWhenNoMapProvided,The following statement contains a magic number: Assert.AreEqual(2' testData.SubData.ID);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,TestObjectWithPropertySubObject,The following statement contains a magic number: Assert.AreEqual(2' testData.SubData.ID);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,ParentIDFieldCanBeString,The following statement contains a magic number: Assert.AreEqual(3' result.Count);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,CanHaveDuplicateParentIDs,The following statement contains a magic number: Assert.AreEqual(2' result.Count);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SingleParentHandlesAllChildren,The following statement contains a magic number: Assert.AreEqual(2' result.List.Count);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SingleParentCanHaveMultipleLevels,The following statement contains a magic number: Assert.AreEqual(2' result.List.Count);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,SingleParentCanHaveMultipleLevels,The following statement contains a magic number: Assert.AreEqual(2' result.List[1].List[0].ID);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,CanReturnDuplicateChildren,The following statement contains a magic number: Assert.AreEqual(2' results.SubData2.SubInt);
Magic Number,Insight.Tests,SubObjectTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SubObjectTests.cs,InterfaceCanReturnDuplicateChildrenInNameOrder,The following statement contains a magic number: Assert.AreEqual(2' results.SubData2.SubInt);
Magic Number,Insight.Tests,SyncExecuteScalarTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncExecuteScalarTests.cs,TestOutputParameters,The following statement contains a magic number: var input = new InOutParameters { In = 5 };
Magic Number,Insight.Tests,SyncExecuteTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncExecuteTests.cs,TestOutputParameters,The following statement contains a magic number: var input = new InOutParameters { In = 5 };
Magic Number,Insight.Tests,SyncInsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncInsertTests.cs,TestAutoClose,The following statement contains a magic number: ConnectionStateCase.ForEach(c =>  			{  				var input = new InOutParameters { In = 5 };  				var result = c.InsertSql("SELECT @In"' input);  			});
Magic Number,Insight.Tests,SyncInsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncInsertTests.cs,TestForceClose,The following statement contains a magic number: ConnectionStateCase.ForEach(c =>  			{  				bool wasOpen = c.State == ConnectionState.Open;    				var input = new InOutParameters { In = 5 };  				var recordCount = c.InsertSql("SELECT @In"' input' commandBehavior: CommandBehavior.CloseConnection);    				Assert.AreEqual(ConnectionState.Closed' c.State);  				if (wasOpen)  					c.Open();  			});
Magic Number,Insight.Tests,SyncInsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncInsertTests.cs,TestOutputParameters,The following statement contains a magic number: var input = new InOutParameters { In = 5 };
Magic Number,Insight.Tests,SyncInsertTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncInsertTests.cs,TestOutputParametersInList,The following statement contains a magic number: var input = new InOutParameters { In = 5 };
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestOutputParameters,The following statement contains a magic number: var input = new InOutParameters { In = 5 };
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestFastExpandoResult,The following statement contains a magic number: Assert.AreEqual(row.Field123' 123);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestChildrenWithAutoMapping,The following statement contains a magic number: var result = Connection().QuerySql(                  Beer.GetSelectNestedChildren(1' 2)'                  null'                  Query.Returns(Some<InfiniteBeerList>.Records)                      .ThenChildren(OneToOne<InfiniteBeerList' InfiniteBeer>.Records));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestChildrenWithAutoMapping,The following statement contains a magic number: Assert.AreEqual(3' result.Count());
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestChildrenWithAutoMappingFields,The following statement contains a magic number: var result = Connection().QuerySql(                  Beer.GetSelectNestedChildren(1' 2)'                  null'                  Query.Returns(Some<InfiniteBeerListWithFields>.Records)                      .ThenChildren(Some<InfiniteBeerListWithFields>.Records));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestChildrenWithOneToOne,The following statement contains a magic number: var result = Connection().QuerySql(                  Beer.GetSelectNestedChildren(1' 2)'                  null'                  Query.Returns(Some<InfiniteBeerList>.Records)                      .ThenChildren(OneToOne<InfiniteBeerList' InfiniteBeer>.Records));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestChildrenWithOneToOne,The following statement contains a magic number: Assert.AreEqual(3' result.Count());
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithQueryStructure2,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllProcMultipleTimes(2)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithQueryStructure3,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllProcMultipleTimes(3)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithQueryStructure4,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllProcMultipleTimes(4)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithQueryStructure5,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllProcMultipleTimes(5)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithQueryStructure6,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllProcMultipleTimes(6)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithQueryStructure7,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllProcMultipleTimes(7)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithQueryStructure8,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllProcMultipleTimes(8)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithQueryStructure9,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllProcMultipleTimes(9)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithQueryStructure10,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllProcMultipleTimes(10)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithQueryStructure11,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllProcMultipleTimes(11)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithQueryStructure12,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllProcMultipleTimes(12)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithQueryStructure13,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllProcMultipleTimes(13)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithQueryStructure14,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllProcMultipleTimes(14)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithQueryStructure15,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllProcMultipleTimes(15)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithQueryStructure16,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllProcMultipleTimes(16)'  				null'  				Query.ReturnsResults(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  					.Then(Some<Beer>.Records)  				);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithGenerics2,The following statement contains a magic number: var result = Connection().QueryResultsSql<Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(2));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithGenerics3,The following statement contains a magic number: var result = Connection().QueryResultsSql<Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(3));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithGenerics4,The following statement contains a magic number: var result = Connection().QueryResultsSql<Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(4));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithGenerics5,The following statement contains a magic number: var result = Connection().QueryResultsSql<Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(5));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithGenerics6,The following statement contains a magic number: var result = Connection().QueryResultsSql<Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(6));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithGenerics7,The following statement contains a magic number: var result = Connection().QueryResultsSql<Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(7));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithGenerics8,The following statement contains a magic number: var result = Connection().QueryResultsSql<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(8));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithGenerics9,The following statement contains a magic number: var result = Connection().QueryResultsSql<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(9));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithGenerics10,The following statement contains a magic number: var result = Connection().QueryResultsSql<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(10));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithGenerics11,The following statement contains a magic number: var result = Connection().QueryResultsSql<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(11));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithGenerics12,The following statement contains a magic number: var result = Connection().QueryResultsSql<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(12));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithGenerics13,The following statement contains a magic number: var result = Connection().QueryResultsSql<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(13));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithGenerics14,The following statement contains a magic number: var result = Connection().QueryResultsSql<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(14));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithGenerics15,The following statement contains a magic number: var result = Connection().QueryResultsSql<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(15));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadResultsWithGenerics16,The following statement contains a magic number: var result = Connection().QueryResultsSql<Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer' Beer>(  				Beer.GetSelectAllProcMultipleTimes(16));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure2,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(2)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer>.Records));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure3,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(3)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure4,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(4)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure5,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(5)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure6,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(6)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure7,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(7)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure8,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(8)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure9,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(9)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure10,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(10)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure11,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(11)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure12,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(12)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure13,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(13)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure14,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(14)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure15,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(15)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithQueryStructure16,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(16)'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics2,The following statement contains a magic number: var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(2));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics3,The following statement contains a magic number: var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(3));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics4,The following statement contains a magic number: var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(4));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics5,The following statement contains a magic number: var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(5));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics6,The following statement contains a magic number: var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(6));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics7,The following statement contains a magic number: var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(7));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics8,The following statement contains a magic number: var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(8));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics9,The following statement contains a magic number: var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(9));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics10,The following statement contains a magic number: var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(10));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics11,The following statement contains a magic number: var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(11));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics12,The following statement contains a magic number: var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(12));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics13,The following statement contains a magic number: var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(13));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics14,The following statement contains a magic number: var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(14));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics15,The following statement contains a magic number: var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(15));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadNestedWithGenerics16,The following statement contains a magic number: var result = Connection().QuerySql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(16));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure2,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(2)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer>.Default);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure3,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(3)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure4,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(4)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure5,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(5)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure6,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(6)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure7,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(7)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure8,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(8)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure9,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(9)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure10,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(10)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure11,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(11)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure12,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(12)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure13,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(13)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure14,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(14)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure15,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(15)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithQueryStructure16,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectNested(16)'  				null'  				SingleReader<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Default);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics2,The following statement contains a magic number: var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(2));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics3,The following statement contains a magic number: var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(3));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics4,The following statement contains a magic number: var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(4));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics5,The following statement contains a magic number: var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(5));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics6,The following statement contains a magic number: var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(6));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics7,The following statement contains a magic number: var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(7));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics8,The following statement contains a magic number: var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(8));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics9,The following statement contains a magic number: var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(9));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics10,The following statement contains a magic number: var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(10));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics11,The following statement contains a magic number: var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(11));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics12,The following statement contains a magic number: var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(12));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics13,The following statement contains a magic number: var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(13));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics14,The following statement contains a magic number: var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(14));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics15,The following statement contains a magic number: var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(15));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,ReadSingleWithGenerics16,The following statement contains a magic number: var result = Connection().SingleSql<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>(Beer.GetSelectNested(16));
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_2_2,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 2).Select(_ => Beer.GetSelectNested(2)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_2_2,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 2).Select(_ => Beer.GetSelectNested(2)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_3_3,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 3).Select(_ => Beer.GetSelectNested(3)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_3_3,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 3).Select(_ => Beer.GetSelectNested(3)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_4_4,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 4).Select(_ => Beer.GetSelectNested(4)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_4_4,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 4).Select(_ => Beer.GetSelectNested(4)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_5_5,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 5).Select(_ => Beer.GetSelectNested(5)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_5_5,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 5).Select(_ => Beer.GetSelectNested(5)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_6_6,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 6).Select(_ => Beer.GetSelectNested(6)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_6_6,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 6).Select(_ => Beer.GetSelectNested(6)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_7_7,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 7).Select(_ => Beer.GetSelectNested(7)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_7_7,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 7).Select(_ => Beer.GetSelectNested(7)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 8).Select(_ => Beer.GetSelectNested(8)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_8_8,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 8).Select(_ => Beer.GetSelectNested(8)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 9).Select(_ => Beer.GetSelectNested(9)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_9_9,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 9).Select(_ => Beer.GetSelectNested(9)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 10).Select(_ => Beer.GetSelectNested(10)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_10_10,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 10).Select(_ => Beer.GetSelectNested(10)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 11).Select(_ => Beer.GetSelectNested(11)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_11_11,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 11).Select(_ => Beer.GetSelectNested(11)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 12).Select(_ => Beer.GetSelectNested(12)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_12_12,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 12).Select(_ => Beer.GetSelectNested(12)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 13).Select(_ => Beer.GetSelectNested(13)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_13_13,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 13).Select(_ => Beer.GetSelectNested(13)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 14).Select(_ => Beer.GetSelectNested(14)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_14_14,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 14).Select(_ => Beer.GetSelectNested(14)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 15).Select(_ => Beer.GetSelectNested(15)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_15_15,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 15).Select(_ => Beer.GetSelectNested(15)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 16).Select(_ => Beer.GetSelectNested(16)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestMixedHierarchy_16_16,The following statement contains a magic number: var result = Connection().QuerySql(  				String.Join(";"' Enumerable.Range(1' 16).Select(_ => Beer.GetSelectNested(16)).ToArray())'  				null'  				Query.ReturnsResults(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					.Then(OneToOne<InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer' InfiniteBeer>.Records)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy3,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllChildren(3)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy4,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllChildren(4)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy5,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllChildren(5)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy6,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllChildren(6)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy7,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllChildren(7)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy8,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllChildren(8)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy9,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllChildren(9)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy10,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllChildren(10)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy11,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllChildren(11)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy12,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllChildren(12)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy13,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllChildren(13)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy14,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllChildren(14)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy15,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllChildren(15)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					);
Magic Number,Insight.Tests,SyncQueryCoreTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\SyncQueryCoreTests.cs,TestHierarchy16,The following statement contains a magic number: var result = Connection().QuerySql(  				Beer.GetSelectAllChildren(16)'  				null'  				Query.Returns(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List)  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					.ThenChildren(Some<InfiniteBeerList>.Records' parents: b => b.List.SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List).SelectMany(b2 => b2.List)' into: (b' list) => b.List = list.ToList())  					);
Magic Number,Insight.Tests,Issue354Tests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TableValuedParametersTests.cs,TVPsShouldBeCached,The following statement contains a magic number: var values = Enumerable.Range(1' 4).Select(v => new SimpleInt(v)).ToArray();
Magic Number,Insight.Tests,ParentTestData,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TestDataClasses.cs,Verify,The following statement contains a magic number: Assert.AreEqual(2' ParentX);
Magic Number,Insight.Tests,ParentTestData,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TestDataClasses.cs,Verify,The following statement contains a magic number: Assert.AreEqual(5' TestData.X);
Magic Number,Insight.Tests,TestData2,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TestDataClasses.cs,Verify,The following statement contains a magic number: Assert.AreEqual(7' data.Y);
Magic Number,Insight.Tests,TupleTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TupleTests.cs,StructShouldBindToItemXFields,The following statement contains a magic number: var tuple = new FakeTuple { Item1 = 1' Item2 = 2 };
Magic Number,Insight.Tests,TupleTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TupleTests.cs,StructShouldBindToItemXFields,The following statement contains a magic number: Assert.AreEqual(2' two);
Magic Number,Insight.Tests,TupleTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TupleTests.cs,ReturningTuplesShouldBindToItemXColumns,The following statement contains a magic number: Assert.AreEqual(2' two);
Magic Number,Insight.Tests,TupleTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TupleTests.cs,TupleParametersShouldBindToItemXFields,The following statement contains a magic number: var tuple = (one: 1' two: 2);
Magic Number,Insight.Tests,TupleTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TupleTests.cs,TupleParametersShouldBindToItemXFields,The following statement contains a magic number: Assert.AreEqual(2' two);
Magic Number,Insight.Tests,TupleTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TupleTests.cs,TupleInterfaceListShouldBeDeconstructible,The following statement contains a magic number: Assert.AreEqual(2' two);
Magic Number,Insight.Tests,TupleTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TupleTests.cs,TupleInterfaceListShouldHaveNamedProperties,The following statement contains a magic number: Assert.AreEqual(2' tuple.two);
Magic Number,Insight.Tests,TupleTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TupleTests.cs,TupleInterfaceShouldHaveNamedProperties,The following statement contains a magic number: Assert.AreEqual(2' tuple.two);
Magic Number,Insight.Tests,TupleTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TupleTests.cs,TupleInterfaceShouldBeDeconstructible,The following statement contains a magic number: Assert.AreEqual(2' tuple.two);
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestTypes,The following statement contains a magic number: NullableData<short>.Test(-2' _connection' "smallint");
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestTypes,The following statement contains a magic number: NullableData<int>.Test(-120' _connection' "int");
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestTypes,The following statement contains a magic number: NullableData<long>.Test(-120000000' _connection' "bigint");
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestTypes,The following statement contains a magic number: NullableData<float>.Test(123.456f' _connection' "real");
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestTypes,The following statement contains a magic number: NullableData<double>.Test(567.134567' _connection' "float");
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestTypes,The following statement contains a magic number: NullableData<decimal>.Test(890.12345m' _connection' "decimal(18'5)");
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestTypes,The following statement contains a magic number: Data<byte[]>.Test(new byte[] { 1' 2' 3' 4 }' _connection' "varbinary(MAX)");
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestTypes,The following statement contains a magic number: Data<byte[]>.Test(new byte[] { 1' 2' 3' 4 }' _connection' "varbinary(MAX)");
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestTypes,The following statement contains a magic number: Data<byte[]>.Test(new byte[] { 1' 2' 3' 4 }' _connection' "varbinary(MAX)");
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestTypes,The following statement contains a magic number: Assert.AreEqual(2' data2.Count);
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestThatClassesCanBeDeserializedByConstructor,The following statement contains a magic number: TestConstructorConversion<double>(5' "real");
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestThatClassesCanBeDeserializedByConstructor,The following statement contains a magic number: TestConstructorConversion<byte>(5' "tinyint");
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestThatClassesCanBeDeserializedByConstructor,The following statement contains a magic number: TestConstructorConversion<short>(5' "smallint");
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestThatClassesCanBeDeserializedByConstructor,The following statement contains a magic number: TestConstructorConversion<int>(5' "int");
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestThatClassesCanBeDeserializedByConstructor,The following statement contains a magic number: TestConstructorConversion<long>(5' "bigint");
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestThatClassesCanBeDeserializedByConstructor,The following statement contains a magic number: TestConstructorConversion<float>(5' "real");
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestThatClassesCanBeDeserializedByConstructor,The following statement contains a magic number: TestConstructorConversion<double>(5' "real");
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestThatClassesCanBeDeserializedByConstructor,The following statement contains a magic number: TestConstructorConversion<decimal>(5' "decimal(18' 2)");
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestSettingMembersOfAStruct,The following statement contains a magic number: Assert.AreEqual(4' results[0].Foo);
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TestSettingNestedStructures,The following statement contains a magic number: Assert.AreEqual(4' results[0].Struct.Foo);
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,DateTimeMathShouldWorkOnBothSides,The following statement contains a magic number: DateTime now = new DateTime (1970' 2' 1' 1' 0' 5);
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,DateTimeMathShouldWorkOnBothSides,The following statement contains a magic number: DateTime now = new DateTime (1970' 2' 1' 1' 0' 5);
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,DateTimeMathShouldWorkOnBothSides,The following statement contains a magic number: DateTime now = new DateTime (1970' 2' 1' 1' 0' 5);
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,DateTimeMathShouldWorkOnBothSides,The following statement contains a magic number: TimeSpan adjust = new TimeSpan(2' 1' 5' 6);
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,DateTimeMathShouldWorkOnBothSides,The following statement contains a magic number: TimeSpan adjust = new TimeSpan(2' 1' 5' 6);
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,DateTimeMathShouldWorkOnBothSides,The following statement contains a magic number: TimeSpan adjust = new TimeSpan(2' 1' 5' 6);
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TimeSpanMathShouldWorkOnBothSides,The following statement contains a magic number: DateTime now = new DateTime(1970' 2' 1' 1' 0' 5);
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TimeSpanMathShouldWorkOnBothSides,The following statement contains a magic number: DateTime now = new DateTime(1970' 2' 1' 1' 0' 5);
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,TimeSpanMathShouldWorkOnBothSides,The following statement contains a magic number: DateTime now = new DateTime(1970' 2' 1' 1' 0' 5);
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,DatetimeFieldsShouldConvertInTVP,The following statement contains a magic number: var expected = new DateTime(2018' 11' 15' 14' 53' 48' 493);
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,DatetimeFieldsShouldConvertInTVP,The following statement contains a magic number: var expected = new DateTime(2018' 11' 15' 14' 53' 48' 493);
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,DatetimeFieldsShouldConvertInTVP,The following statement contains a magic number: var expected = new DateTime(2018' 11' 15' 14' 53' 48' 493);
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,DatetimeFieldsShouldConvertInTVP,The following statement contains a magic number: var expected = new DateTime(2018' 11' 15' 14' 53' 48' 493);
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,DatetimeFieldsShouldConvertInTVP,The following statement contains a magic number: var expected = new DateTime(2018' 11' 15' 14' 53' 48' 493);
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,DatetimeFieldsShouldConvertInTVP,The following statement contains a magic number: var expected = new DateTime(2018' 11' 15' 14' 53' 48' 493);
Magic Number,Insight.Tests,TypeTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,DatetimeFieldsShouldConvertInTVP,The following statement contains a magic number: var expected = new DateTime(2018' 11' 15' 14' 53' 48' 493);
Magic Number,Insight.Tests,NullableData<T>,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\TypeTests.cs,Test,The following statement contains a magic number: Assert.AreEqual(2' data2.Count);
Magic Number,Insight.Tests,XmlTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\XmlTests.cs,BigXmlIsDeserializedProperly,The following statement contains a magic number: c.ExecuteSql("INSERT INTO BigXml VALUES(@s)"' new { s = new String('x'' 10000) });
Magic Number,Insight.Tests.Cases,InsightTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\Cases\Issue281Test.cs,TestMethodNotFound,The following statement contains a magic number: var response = conn.QuerySql(@" SET NOCOUNT ON;                              --Parent                              SELECT ParentId' Name FROM Parent WHERE @ParentId = ParentId                              --Child                              SELECT ParentId' ChildId' Name FROM Child WHERE @ParentId = ParentId"' new { ParentId = 2 }'  					Query.ReturnsSingle(Some<Parent>.Records)  					.ThenChildren(Some<Children>.Records' id: (d) => d.ParentId' into: (p' c) => p.Children = c));
Magic Number,Insight.Tests.Cases,InsightTest,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\Cases\Issue281Test.cs,TestMethodNotFoundOneToOne,The following statement contains a magic number: var response = conn.QuerySql(@" SET NOCOUNT ON;                              --Parent                              SELECT ParentId' Name FROM Parent WHERE @ParentId = ParentId                              --Child                              SELECT ParentId' ChildId' Name FROM Child WHERE @ParentId = ParentId"' new { ParentId = 2 }'  					Query.ReturnsSingle(Some<Parent>.Records)  					.ThenChildren(OneToOne<Children>.Records' id: (d) => d.ParentId' into: (p' c) => p.Children = c));
Magic Number,Insight.Tests.Cases,Beer,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests\Cases\Records.cs,VerifyAll,The following statement contains a magic number: Assert.AreEqual(3' beer.Count());
