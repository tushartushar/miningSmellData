Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Insight.Database.Sample,Program,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Sample\Program.cs,Insert_Sql,The length of the statement  "	var insertedBeer = Database.Connection ().InsertSql ("INSERT INTO Beer (Name' Details) VALUES (@Name' @Details) SELECT SCOPE_IDENTITY() AS [Id]"' beer); " is 152.
Long Statement,Insight.Database.Sample,Program,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Sample\Program.cs,Dynamic_Query,The length of the statement  "		Database.Connection ().ExecuteSql ("UPDATE Beer Set OriginalGravity = @OriginalGravity WHERE Name = @Name"' (object)beer); " is 122.
Long Statement,Insight.Database.Sample,Program,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Sample\Program.cs,Dynamic_ForEach,The length of the statement  "		Database.Connection ().ExecuteSql ("UPDATE Beer Set OriginalGravity = @OriginalGravity WHERE Name = @Name"' (object)beer); " is 122.
Long Statement,Insight.Database.Sample,Program,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Sample\Program.cs,ObjectHierarchy,The length of the statement  "	var servings = Database.Connection ().QuerySql<Serving' Beer' Glass> ("SELECT s.*' b.*' g.* FROM Servings s JOIN Beer b ON (s.BeerID = b.ID) JOIN Glasses g ON (s.GlassesID = g.ID)"' Parameters.Empty); " is 200.
Magic Number,Insight.Database.Sample,BeerService,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Sample\BeerService.cs,StockBeer,The following statement contains a magic number: using (var tx = BeerRepository.OpenWithTransaction ()) {  	// add a 6-pack of each beer  	foreach (int id in beerIDs) {  		Beer b = BeerRepository.SelectBeer (id);  		b.InStock += 6;  		BeerRepository.UpdateBeer (b);  	}  	// don't forget to commit the transaction  	tx.Commit ();  }  
Magic Number,Insight.Database.Sample,BeerService,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Sample\BeerService.cs,StockBeer,The following statement contains a magic number: foreach (int id in beerIDs) {  	Beer b = BeerRepository.SelectBeer (id);  	b.InStock += 6;  	BeerRepository.UpdateBeer (b);  }  
Magic Number,Insight.Database.Sample,BeerService,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Sample\BeerService.cs,StockBeer,The following statement contains a magic number: b.InStock += 6;  
Magic Number,Insight.Database.Sample,Program,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Sample\Program.cs,List_ClassStoredProcedure,The following statement contains a magic number: beer.Add (new Beer () {  	Id = 2'  	Name = "Hoppopotamus"'  	Flavor = "hoppy"'  	OriginalGravity = 3.0m  });  
Magic Number,Insight.Database.Sample,Program,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Sample\Program.cs,PerfTest,The following statement contains a magic number: using (var connection = database.Connection ()) {  	connection.Open ();  	var results = connection.QuerySql<PerfTestData> ("SELECT Int=1' String='2'' Decimal=3' [Double]=4");  	PerformanceTest.WithDurationAndKeyWait (3' 1 * 1000' () => {  		results = connection.QuerySql<PerfTestData> ("SELECT Int=1' String='2'' Decimal=3' [Double]=4");  	});  }  
Magic Number,Insight.Database.Sample,Program,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Sample\Program.cs,PerfTest,The following statement contains a magic number: using (var connection = database.Connection ()) {  	connection.Open ();  	var results = connection.QuerySql<PerfTestData> ("SELECT Int=1' String='2'' Decimal=3' [Double]=4");  	PerformanceTest.WithDurationAndKeyWait (3' 1 * 1000' () => {  		results = connection.QuerySql<PerfTestData> ("SELECT Int=1' String='2'' Decimal=3' [Double]=4");  	});  }  
Magic Number,Insight.Database.Sample,Program,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Sample\Program.cs,PerfTest,The following statement contains a magic number: PerformanceTest.WithDurationAndKeyWait (3' 1 * 1000' () => {  	results = connection.QuerySql<PerfTestData> ("SELECT Int=1' String='2'' Decimal=3' [Double]=4");  });  
Magic Number,Insight.Database.Sample,Program,F:\newReposMay17\jonwagner_Insight.Database\Insight.Database.Sample\Program.cs,PerfTest,The following statement contains a magic number: PerformanceTest.WithDurationAndKeyWait (3' 1 * 1000' () => {  	results = connection.QuerySql<PerfTestData> ("SELECT Int=1' String='2'' Decimal=3' [Double]=4");  });  
