Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Insight.Database.Providers.PostgreSQL,PostgreSQLInsightDbProvider,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\PostgreSQLInsightDbProvider.cs,BulkCopy,Cyclomatic complexity of the method is 8
Long Parameter List,Insight.Database.Providers.PostgreSQL,PostgreSQLInsightDbProvider,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\PostgreSQLInsightDbProvider.cs,FixupParameter,The method has 5 parameters. Parameters: command' parameter' dbType' type' serializationMode
Long Parameter List,Insight.Database.Providers.PostgreSQL,PostgreSQLInsightDbProvider,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\PostgreSQLInsightDbProvider.cs,BulkCopy,The method has 6 parameters. Parameters: connection' tableName' reader' configure' options' transaction
Long Statement,Insight.Database.Providers.PostgreSQL,NpgsqlCommandWithRecordsets,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\NpgsqlCommandWithRecordsets.cs,ShouldDereference,The length of the statement  "				throw new InvalidOperationException("Command returns both cursor and non-cursor results. To read this data' please code your own FETCH commands for the cursor data."); " is 167.
Long Statement,Insight.Database.Providers.PostgreSQL,PostgreSQLInsightDbProvider,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\PostgreSQLInsightDbProvider.cs,BulkCopy,The length of the statement  "            using (var writer = pgconnection.BeginTextImport(String.Format(CultureInfo.InvariantCulture' "COPY {0} FROM STDIN WITH CSV"' tableName))) " is 137.
Complex Conditional,Insight.Database.Providers.PostgreSQL,PostgreSQLInsightDbProvider,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\PostgreSQLInsightDbProvider.cs,FixupCommand,The conditional expression  "p.Direction.HasFlag(ParameterDirection.Input) &&                      (p.NpgsqlDbType == NpgsqlDbType.Json || p.NpgsqlDbType == NpgsqlDbType.Jsonb) &&                      !(p.Value is String)"  is complex.
Magic Number,Insight.Database.Providers.PostgreSQL,PostgreSQLInsightDbProvider,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\PostgreSQLInsightDbProvider.cs,IsTransientException,The following statement contains a magic number: switch (mex.ErrorCode)              {                  case -2147467259:           // socket exception - could not connect to host                      return true;              }
Magic Number,Insight.Database.Providers.PostgreSQL,PostgreSQLInsightBulkCopy,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\PostgreSQLInsightDbProvider.cs,PostgreSQLInsightBulkCopy,The following statement contains a magic number: NotifyAfter = 1000;
Missing Default,Insight.Database.Providers.PostgreSQL,PostgreSQLInsightDbProvider,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\PostgreSQLInsightDbProvider.cs,FixupParameter,The following switch statement is missing a default case: switch (serializationMode)                  {                      case SerializationMode.Json:                          pgparam.NpgsqlDbType = NpgsqlDbType.Json;                          break;                        case SerializationMode.Xml:                          pgparam.NpgsqlDbType = NpgsqlDbType.Xml;                          break;                  }
Missing Default,Insight.Database.Providers.PostgreSQL,PostgreSQLInsightDbProvider,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Database.Providers.PostgreSQL\PostgreSQLInsightDbProvider.cs,IsTransientException,The following switch statement is missing a default case: switch (mex.ErrorCode)              {                  case -2147467259:           // socket exception - could not connect to host                      return true;              }
