Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestSchemaSwitching,The length of the statement  "                Assert.AreEqual(1' _connectionStringBuilder.ConnectionWithSchema("test1").ExecuteScalarSql<int>("SELECT * FROM InsightTestData")); " is 130.
Long Statement,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestSchemaSwitching,The length of the statement  "                Assert.AreEqual(2' _connectionStringBuilder.ConnectionWithSchema("test2").ExecuteScalarSql<int>("SELECT * FROM InsightTestData")); " is 130.
Long Statement,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestStringToJsonProcParameters,The length of the statement  "				var users = new Users() { Id = 1' JsonData = (string)JsonObjectSerializer.Serializer.SerializeObject(typeof(TestData)' input) }; " is 128.
Long Statement,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestStringToJsonbProcParameters,The length of the statement  "				var users = new Users() { Id = 1' JsonData = (string)JsonObjectSerializer.Serializer.SerializeObject(typeof(TestData)' input) }; " is 128.
Long Statement,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestIssue342,The length of the statement  "				_connection.ExecuteSql("CREATE TABLE InsightTestData (email varchar(256)' first_name varchar(256)' last_name varchar(256))"); " is 125.
Long Statement,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestEnumToSmallInt,The length of the statement  "				try { _connection.ExecuteSql("DROP FUNCTION PostgresSQLSmallInt (i smallint' NullableValue smallint' NullValue smallint)"); } catch { } " is 135.
Long Statement,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestReturnSetofTable,The length of the statement  "				connection.ExecuteSql("CREATE TABLE widget (id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL' name TEXT)"); " is 123.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestExecuteProcedure,The method has an empty catch block.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestExecuteProcedure,The method has an empty catch block.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestExecuteProcedureWithDateParameter,The method has an empty catch block.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestExecuteProcedureWithDateParameter,The method has an empty catch block.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestExecuteProcedureWithOutputParameter,The method has an empty catch block.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestMultipleRecordsets,The method has an empty catch block.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestMultipleRecordsets,The method has an empty catch block.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestMultipleRecordsetsAsync,The method has an empty catch block.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestMultipleRecordsetsAsync,The method has an empty catch block.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestDynamicExecute,The method has an empty catch block.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestDynamicExecute,The method has an empty catch block.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestQueryRecordset,The method has an empty catch block.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestQueryRecordset,The method has an empty catch block.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestXmlTypes,The method has an empty catch block.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestXmlTypes,The method has an empty catch block.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestBulkLoad,The method has an empty catch block.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,Cleanup,The method has an empty catch block.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestIssue342,The method has an empty catch block.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestEnumToSmallInt,The method has an empty catch block.
Empty Catch Block,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestEnumToSmallInt,The method has an empty catch block.
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestExecuteWithParameters,The following statement contains a magic number: var result = _connection.QuerySql<int>("SELECT @p as p"' new { p = 5 });
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestExecuteWithParameters,The following statement contains a magic number: Assert.AreEqual(5' result[0]);
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestExecuteProcedure,The following statement contains a magic number: var result = _connection.Execute("PostgreSQLTestExecute"' new { i = 5 });
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestExecuteProcedureWithOutputParameter,The following statement contains a magic number: var result = _connection.Query("PostgreSQLTestOutput"' new TestData() { X = 11' Z = 0 });
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestExecuteProcedureWithOutputParameter,The following statement contains a magic number: Assert.AreEqual(11' output.Z);
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestMultipleRecordsets,The following statement contains a magic number: var result = connection.QueryResults<int' int>(@"PostgreSQLTestProc"' new { i = 5 });
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestMultipleRecordsets,The following statement contains a magic number: Assert.AreEqual(5' result.Set1[0]);
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestMultipleRecordsets,The following statement contains a magic number: Assert.AreEqual(5' result.Set2[0]);
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestMultipleRecordsetsAsync,The following statement contains a magic number: var result = connection.QueryResultsAsync<int' int>(@"PostgreSQLTestProc"' new { i = 5 }).Result;
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestMultipleRecordsetsAsync,The following statement contains a magic number: Assert.AreEqual(5' result.Set1[0]);
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestMultipleRecordsetsAsync,The following statement contains a magic number: Assert.AreEqual(5' result.Set2[0]);
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestDynamicExecute,The following statement contains a magic number: var result = _connection.Dynamic<int>().PostgreSQLTestProc(i: 5);
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestDynamicExecute,The following statement contains a magic number: Assert.AreEqual(5' result[0]);
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestQueryRecordset,The following statement contains a magic number: Assert.AreEqual(2' result[0].X);
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestQueryRecordset,The following statement contains a magic number: Assert.AreEqual(3' result[0].Z);
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestEnumerableValueParameters,The following statement contains a magic number: i < 3
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestXmlTypes,The following statement contains a magic number: var testData = new TestData() { X = 9' Z = 13 };
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestXmlTypes,The following statement contains a magic number: var testData = new TestData() { X = 9' Z = 13 };
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestBulkLoad,The following statement contains a magic number: _connection.BulkCopy("InsightTestData"' array' configure: bulkCopy => bulkCopy.BatchSize = 10);
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestBulkLoad,The following statement contains a magic number: i < 3
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestSchemaSwitching,The following statement contains a magic number: Assert.AreEqual(2' _connectionStringBuilder.ConnectionWithSchema("test2").ExecuteScalarSql<int>("SELECT * FROM InsightTestData"));
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestSchemaSwitching,The following statement contains a magic number: Assert.AreEqual(2' parallel.SelectValue());
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestSchemaSwitching,The following statement contains a magic number: Assert.AreEqual(2' parallel.SelectValue());
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestStringToJsonProcParameters,The following statement contains a magic number: var input = new TestData() { X = 1' Z = 2 };
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestStringToJsonbProcParameters,The following statement contains a magic number: var input = new TestData() { X = 1' Z = 2 };
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestObjectToJsonProcParameters,The following statement contains a magic number: var input = new TestData() { X = 1' Z = 2 };
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestObjectToJsonbProcParameters,The following statement contains a magic number: var input = new TestData() { X = 1' Z = 2 };
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestStringToJsonSqlParameter,The following statement contains a magic number: var users = new Users()  				{  					Id = 1'  					JsonData = (string)JsonObjectSerializer.Serializer.SerializeObject(typeof (TestData)' new TestData() { X = 1' Z = 2 })  				};
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestObjectToJsonSqlParameter,The following statement contains a magic number: var input = new TestData() { X = 1' Z = 2 };
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestObjectToJsonbSqlParameter,The following statement contains a magic number: var input = new TestData() { X = 1' Z = 2 };
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestJsonQueryParameter,The following statement contains a magic number: var input = new TestData() { X = 1' Z = 2' Text = "MyText" };
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestIssue210,The following statement contains a magic number: connection.Execute("insert_foo"' new JsonColumn { Id = 1' List = new[] { 1' 2' 3' 4' 5 } });
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestIssue210,The following statement contains a magic number: connection.Execute("insert_foo"' new JsonColumn { Id = 1' List = new[] { 1' 2' 3' 4' 5 } });
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestIssue210,The following statement contains a magic number: connection.Execute("insert_foo"' new JsonColumn { Id = 1' List = new[] { 1' 2' 3' 4' 5 } });
Magic Number,Insight.Tests.PostgreSQL,PostgreSQLTests,D:\research\architectureSmells\repos\jonwagner_Insight.Database\Insight.Tests.PostgreSQL\PostgreSQLTests.cs,TestIssue210,The following statement contains a magic number: connection.Execute("insert_foo"' new JsonColumn { Id = 1' List = new[] { 1' 2' 3' 4' 5 } });
