Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Mina.Example.Chat.Server,ChatProtocolHandler,C:\repos\longshine_Mina.NET\Mina.Example\Chat\Server\ChatProtocolHandler.cs,MessageReceived,The following statement contains a magic number: String[] result = theMessage.Split(new Char[] { ' ' }' 2);
Magic Number,Mina.Example.Chat.Server,ChatProtocolHandler,C:\repos\longshine_Mina.NET\Mina.Example\Chat\Server\ChatProtocolHandler.cs,MessageReceived,The following statement contains a magic number: if (String.Equals("QUIT"' theCommand' StringComparison.OrdinalIgnoreCase))              {                  session.Write("QUIT OK");                  session.Close(true);              }              else if (String.Equals("LOGIN"' theCommand' StringComparison.OrdinalIgnoreCase))              {                  if (user != null)                  {                      session.Write("LOGIN ERROR user " + user + " already logged in.");                      return;                  }                    if (result.Length == 2)                  {                      user = result[1];                  }                  else                  {                      session.Write("LOGIN ERROR invalid login command.");                      return;                  }                    // check if the username is already used                  if (users.ContainsKey(user))                  {                      session.Write("LOGIN ERROR the name " + user + " is already used.");                      return;                  }                    sessions[session] = true;                  session.SetAttribute("user"' user);                    // Allow all users                  users[user] = true;                  session.Write("LOGIN OK");                  Broadcast("The user " + user + " has joined the chat session.");              }              else if (String.Equals("BROADCAST"' theCommand' StringComparison.OrdinalIgnoreCase))              {                  if (result.Length == 2)                  {                      Broadcast(user + ": " + result[1]);                  }              }              else              {                  Console.WriteLine("Unhandled command: " + theCommand);              }
Magic Number,Mina.Example.Chat.Server,ChatProtocolHandler,C:\repos\longshine_Mina.NET\Mina.Example\Chat\Server\ChatProtocolHandler.cs,MessageReceived,The following statement contains a magic number: if (String.Equals("QUIT"' theCommand' StringComparison.OrdinalIgnoreCase))              {                  session.Write("QUIT OK");                  session.Close(true);              }              else if (String.Equals("LOGIN"' theCommand' StringComparison.OrdinalIgnoreCase))              {                  if (user != null)                  {                      session.Write("LOGIN ERROR user " + user + " already logged in.");                      return;                  }                    if (result.Length == 2)                  {                      user = result[1];                  }                  else                  {                      session.Write("LOGIN ERROR invalid login command.");                      return;                  }                    // check if the username is already used                  if (users.ContainsKey(user))                  {                      session.Write("LOGIN ERROR the name " + user + " is already used.");                      return;                  }                    sessions[session] = true;                  session.SetAttribute("user"' user);                    // Allow all users                  users[user] = true;                  session.Write("LOGIN OK");                  Broadcast("The user " + user + " has joined the chat session.");              }              else if (String.Equals("BROADCAST"' theCommand' StringComparison.OrdinalIgnoreCase))              {                  if (result.Length == 2)                  {                      Broadcast(user + ": " + result[1]);                  }              }              else              {                  Console.WriteLine("Unhandled command: " + theCommand);              }
