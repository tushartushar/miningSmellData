Implementation smell,Namespace,Class,File,Method,Description
Long Method,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestAutoDecode,The method has 103 lines of code.
Long Identifier,Mina.Transport,AbstractConnectorTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractConnectorTest.cs,TestSessionCallbackInvocation,The length of the parameter sessionCreatedInvokedBeforeCallback is 35.
Long Statement,Mina.Filter.Codec,CumulativeProtocolDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\CumulativeProtocolDecoderTest.cs,SetUp,The length of the statement  "            session.SetTransportMetadata(new DefaultTransportMetadata("mina"' "dummy"' false' true' typeof(System.Net.IPEndPoint))); " is 120.
Long Statement,Mina.Filter.KeepAlive,KeepAliveFilterTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\KeepAlive\KeepAliveFilterTest.cs,KeepAliveFilterForIdleStatus,The length of the statement  "                KeepAliveFilter filter = new KeepAliveFilter(new ClientFactory()' status' KeepAliveRequestTimeoutHandler.Exception' INTERVAL' TIMEOUT); " is 135.
Long Statement,Mina.Transport,AbstractConnectorTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractConnectorTest.cs,TestSessionCallbackInvocation,The length of the statement  "                Assert.IsTrue(countdown.Wait(TimeSpan.FromSeconds(5))' "Timed out waiting for callback and IoHandler.sessionCreated to be invoked"); " is 132.
Long Statement,Mina.Transport,AbstractConnectorTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractConnectorTest.cs,TestSessionCallbackInvocation,The length of the statement  "                Assert.IsFalse(assertions[sessionCreatedInvokedBeforeCallback]' "IoHandler.sessionCreated was invoked before session callback"); " is 128.
Empty Catch Block,Mina.Filter.Codec,CumulativeProtocolDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\CumulativeProtocolDecoderTest.cs,TestWrongImplementationDetection,The method has an empty catch block.
Empty Catch Block,Mina.Transport,AbstractBindTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractBindTest.cs,Bind,The method has an empty catch block.
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestSliceAutoExpand,The following statement contains a magic number: IoBuffer buffer = ByteBufferAllocator.Instance.Allocate(8);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestNormalizeCapacity,The following statement contains a magic number: Assert.AreEqual(Int32.MaxValue' IoBuffer.NormalizeCapacity(-10));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestNormalizeCapacity,The following statement contains a magic number: Assert.AreEqual(Int32.MaxValue' IoBuffer.NormalizeCapacity(Int32.MaxValue - 10));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestNormalizeCapacity,The following statement contains a magic number: i < 30
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestNormalizeCapacity,The following statement contains a magic number: i < 1 << 27
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestNormalizeCapacity,The following statement contains a magic number: i > Int32.MaxValue - (1 << 27)
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestObjectSerialization,The following statement contains a magic number: IoBuffer buf = ByteBufferAllocator.Instance.Allocate(16);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAllocate,The following statement contains a magic number: Assert.IsTrue(buf.Capacity < i * 2);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAllocate,The following statement contains a magic number: i < 1048576 * 2
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAllocate,The following statement contains a magic number: i < 1048576 * 2
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoExpand,The following statement contains a magic number: Assert.AreEqual(2' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoExpand,The following statement contains a magic number: Assert.AreEqual(2' buf.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoExpand,The following statement contains a magic number: Assert.AreEqual(2' buf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoExpand,The following statement contains a magic number: buf.Put(3' (byte)0);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoExpand,The following statement contains a magic number: buf.Put(3' (byte)0);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoExpand,The following statement contains a magic number: Assert.AreEqual(2' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoExpand,The following statement contains a magic number: Assert.AreEqual(4' buf.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoExpand,The following statement contains a magic number: Assert.AreEqual(4' buf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoExpand,The following statement contains a magic number: Assert.AreEqual(lastCapacity * 2' buf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoExpand,The following statement contains a magic number: i < 1048576
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoExpandMark,The following statement contains a magic number: IoBuffer buf = ByteBufferAllocator.Instance.Allocate(4);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoExpandMark,The following statement contains a magic number: Assert.AreEqual(5' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoExpandMark,The following statement contains a magic number: Assert.AreEqual(3' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: IoBuffer buf = ByteBufferAllocator.Instance.Allocate(8);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: buf.Fill(7);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: Assert.AreEqual(8' buf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: Assert.AreEqual(8' buf.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: buf.Capacity = 32;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: Assert.AreEqual(32' buf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: buf.Fill(24);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: Assert.AreEqual(16' buf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: Assert.AreEqual(8' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: Assert.AreEqual(16' buf.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: i < 8
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: buf.Capacity = 32;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: Assert.AreEqual(32' buf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: buf.Fill(28);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: Assert.AreEqual(8' buf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: Assert.AreEqual(4' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: Assert.AreEqual(8' buf.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: i < 4
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: buf.Capacity = 32;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: Assert.AreEqual(32' buf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: buf.Fill(32);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: Assert.AreEqual(8' buf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: Assert.AreEqual(8' buf.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: buf.Capacity = 32;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: Assert.AreEqual(32' buf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: buf.Fill(23);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: Assert.AreEqual(32' buf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: Assert.AreEqual(9' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: Assert.AreEqual(32' buf.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestAutoShrink,The following statement contains a magic number: i < 9
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: IoBuffer buf = ByteBufferAllocator.Instance.Allocate(16);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: Assert.AreEqual(4' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: Assert.AreEqual("ABC"' buf.GetString(10' encoding));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: Assert.AreEqual(10' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: Assert.AreEqual("AB"' buf.GetString(4' encoding));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: Assert.AreEqual(4' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: Assert.AreEqual(8' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: buf.Limit = 2;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: Assert.AreEqual(2' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: buf.Limit = 3;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: Assert.AreEqual(2' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: Assert.AreEqual("ABC"' buf.GetString(10' encoding));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: Assert.AreEqual(10' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: Assert.AreEqual("A"' buf.GetString(2' encoding));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: Assert.AreEqual(2' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: Assert.AreEqual(""' buf.GetString(2' encoding));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: buf.Limit = 4;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: Assert.AreEqual(2' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: Assert.AreEqual(4' buf.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: Assert.AreEqual(""' buf.GetString(2' encoding));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: Assert.AreEqual(2' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetString,The following statement contains a magic number: Assert.AreEqual(4' buf.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: IoBuffer buf = ByteBufferAllocator.Instance.Allocate(16);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: Assert.AreEqual(3' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: Assert.AreEqual((Byte)'C'' buf.Get(2));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: buf.PutString("D"' 5' encoding);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: Assert.AreEqual(5' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: buf.PutString("EFG"' 2' encoding);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: Assert.AreEqual(2' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: Assert.AreEqual((Byte)'C'' buf.Get(2));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: Assert.AreEqual(6' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: Assert.AreEqual(0' buf.Get(2));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: Assert.AreEqual((Byte)'B'' buf.Get(3));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: Assert.AreEqual(0' buf.Get(4));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: Assert.AreEqual((Byte)'C'' buf.Get(5));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: buf.PutString("D"' 10' encoding);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: Assert.AreEqual(10' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: Assert.AreEqual(0' buf.Get(2));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: Assert.AreEqual(0' buf.Get(3));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: buf.PutString("EFG"' 4' encoding);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: Assert.AreEqual(4' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: Assert.AreEqual(0' buf.Get(2));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: Assert.AreEqual((Byte)'F'' buf.Get(3));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: Assert.AreEqual(0' buf.Get(4));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: Assert.AreEqual((Byte)'C'' buf.Get(5));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: buf.PutString(""' 4' encoding);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutString,The following statement contains a magic number: Assert.AreEqual(4' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetPrefixedString,The following statement contains a magic number: IoBuffer buf = IoBuffer.Allocate(16);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetPrefixedString,The following statement contains a magic number: buf.PutInt16((short)3);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: IoBuffer buf = IoBuffer.Allocate(16);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual(5' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual(3' buf.Get(1));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual((byte)'A'' buf.Get(2));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual((byte)'B'' buf.Get(3));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual((byte)'C'' buf.Get(4));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual(17' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual(15' buf.Get(1));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual((byte)'1'' buf.Get(2));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual((byte)'2'' buf.Get(3));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual((byte)'3'' buf.Get(4));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual((byte)'4'' buf.Get(5));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual((byte)'5'' buf.Get(6));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual((byte)'6'' buf.Get(7));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual((byte)'7'' buf.Get(8));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual((byte)'8'' buf.Get(9));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual((byte)'9'' buf.Get(10));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual((byte)'0'' buf.Get(11));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual((byte)'1'' buf.Get(12));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual((byte)'2'' buf.Get(13));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual((byte)'3'' buf.Get(14));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual((byte)'4'' buf.Get(15));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedString,The following statement contains a magic number: Assert.AreEqual((byte)'5'' buf.Get(16));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedStringWithPrefixLength,The following statement contains a magic number: IoBuffer buf = IoBuffer.Allocate(16).Sweep();
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedStringWithPrefixLength,The following statement contains a magic number: Assert.AreEqual(2' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedStringWithPrefixLength,The following statement contains a magic number: buf.PutPrefixedString("A"' 2' encoding);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedStringWithPrefixLength,The following statement contains a magic number: Assert.AreEqual(3' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedStringWithPrefixLength,The following statement contains a magic number: Assert.AreEqual((byte)'A'' buf.Get(2));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedStringWithPrefixLength,The following statement contains a magic number: buf.PutPrefixedString("A"' 4' encoding);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedStringWithPrefixLength,The following statement contains a magic number: Assert.AreEqual(5' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedStringWithPrefixLength,The following statement contains a magic number: Assert.AreEqual(0' buf.Get(2));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedStringWithPrefixLength,The following statement contains a magic number: Assert.AreEqual(1' buf.Get(3));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestPutPrefixedStringWithPrefixLength,The following statement contains a magic number: Assert.AreEqual((byte)'A'' buf.Get(4));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestSweepWithZeros,The following statement contains a magic number: IoBuffer buf = ByteBufferAllocator.Instance.Allocate(4);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestSweepWithZeros,The following statement contains a magic number: Assert.AreEqual(4' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestSweepWithZeros,The following statement contains a magic number: Assert.AreEqual(4' buf.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestSweepWithZeros,The following statement contains a magic number: Assert.AreEqual(4' buf.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestSweepNonZeros,The following statement contains a magic number: IoBuffer buf = ByteBufferAllocator.Instance.Allocate(4);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestSweepNonZeros,The following statement contains a magic number: Assert.AreEqual(4' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestSweepNonZeros,The following statement contains a magic number: Assert.AreEqual(4' buf.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestSweepNonZeros,The following statement contains a magic number: Assert.AreEqual(4' buf.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestWrapSubArray,The following statement contains a magic number: byte[] array = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestWrapSubArray,The following statement contains a magic number: byte[] array = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestWrapSubArray,The following statement contains a magic number: byte[] array = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestWrapSubArray,The following statement contains a magic number: byte[] array = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestWrapSubArray,The following statement contains a magic number: byte[] array = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestWrapSubArray,The following statement contains a magic number: byte[] array = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestWrapSubArray,The following statement contains a magic number: byte[] array = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestWrapSubArray,The following statement contains a magic number: byte[] array = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestWrapSubArray,The following statement contains a magic number: byte[] array = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10 };
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestWrapSubArray,The following statement contains a magic number: IoBuffer buf = ByteBufferAllocator.Instance.Wrap(array' 3' 4);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestWrapSubArray,The following statement contains a magic number: IoBuffer buf = ByteBufferAllocator.Instance.Wrap(array' 3' 4);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestWrapSubArray,The following statement contains a magic number: Assert.AreEqual(3' buf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestWrapSubArray,The following statement contains a magic number: Assert.AreEqual(7' buf.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestWrapSubArray,The following statement contains a magic number: Assert.AreEqual(10' buf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestWrapSubArray,The following statement contains a magic number: Assert.AreEqual(10' buf.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestWrapSubArray,The following statement contains a magic number: Assert.AreEqual(10' buf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestDuplicate,The following statement contains a magic number: original = ByteBufferAllocator.Instance.Allocate(16).Sweep();
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestDuplicate,The following statement contains a magic number: original.Position = 4;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestDuplicate,The following statement contains a magic number: original.Limit = 10;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestDuplicate,The following statement contains a magic number: original.Put(4' (byte)127);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestDuplicate,The following statement contains a magic number: original.Put(4' (byte)127);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestDuplicate,The following statement contains a magic number: Assert.AreEqual(4' duplicate.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestDuplicate,The following statement contains a magic number: Assert.AreEqual(10' duplicate.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestDuplicate,The following statement contains a magic number: Assert.AreEqual(16' duplicate.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestDuplicate,The following statement contains a magic number: Assert.AreEqual(127' duplicate.Get(4));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestDuplicate,The following statement contains a magic number: Assert.AreEqual(127' duplicate.Get(4));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestDuplicate,The following statement contains a magic number: original = ByteBufferAllocator.Instance.Allocate(16);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestDuplicate,The following statement contains a magic number: original = ByteBufferAllocator.Instance.Allocate(16);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestSlice,The following statement contains a magic number: original = ByteBufferAllocator.Instance.Allocate(16).Sweep();
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestSlice,The following statement contains a magic number: original.Position = 4;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestSlice,The following statement contains a magic number: original.Limit = 10;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestSlice,The following statement contains a magic number: original.Put(4' (byte)127);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestSlice,The following statement contains a magic number: original.Put(4' (byte)127);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestSlice,The following statement contains a magic number: Assert.AreEqual(6' slice.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestSlice,The following statement contains a magic number: Assert.AreEqual(6' slice.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestSlice,The following statement contains a magic number: Assert.AreEqual(127' slice.Get(0));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestReadOnlyBuffer,The following statement contains a magic number: original = ByteBufferAllocator.Instance.Allocate(16).Sweep();
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestReadOnlyBuffer,The following statement contains a magic number: original.Position = 4;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestReadOnlyBuffer,The following statement contains a magic number: original.Limit = 10;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestReadOnlyBuffer,The following statement contains a magic number: original.Put(4' (byte)127);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestReadOnlyBuffer,The following statement contains a magic number: original.Put(4' (byte)127);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestReadOnlyBuffer,The following statement contains a magic number: Assert.AreEqual(4' duplicate.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestReadOnlyBuffer,The following statement contains a magic number: Assert.AreEqual(10' duplicate.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestReadOnlyBuffer,The following statement contains a magic number: Assert.AreEqual(16' duplicate.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestReadOnlyBuffer,The following statement contains a magic number: Assert.AreEqual(127' duplicate.Get(4));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestReadOnlyBuffer,The following statement contains a magic number: Assert.AreEqual(127' duplicate.Get(4));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestReadOnlyBuffer,The following statement contains a magic number: original = ByteBufferAllocator.Instance.Allocate(16);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetUnsigned,The following statement contains a magic number: IoBuffer buf = IoBuffer.Allocate(16);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestIndexOf,The following statement contains a magic number: IoBuffer buf = IoBuffer.Allocate(16);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestIndexOf,The following statement contains a magic number: buf.Position = 2;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestIndexOf,The following statement contains a magic number: buf.Limit = 5;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestIndexOf,The following statement contains a magic number: Assert.AreEqual(4' buf.IndexOf((byte)0x1));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestIndexOf,The following statement contains a magic number: Assert.AreEqual(2' buf.IndexOf((byte)0x3));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestIndexOf,The following statement contains a magic number: Assert.AreEqual(3' buf.IndexOf((byte)0x4));
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestIndexOf,The following statement contains a magic number: i < 2
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetSlice,The following statement contains a magic number: IoBuffer buf = IoBuffer.Allocate(36);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetSlice,The following statement contains a magic number: i < 36
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetSlice,The following statement contains a magic number: IoBuffer res = buf.GetSlice(1' 3);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetSlice,The following statement contains a magic number: Assert.AreEqual(3' res.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetSlice,The following statement contains a magic number: res = buf.GetSlice(1' 3);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestGetSlice,The following statement contains a magic number: Assert.AreEqual(3' res.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink,The following statement contains a magic number: IoBuffer buf = IoBuffer.Allocate(36);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink,The following statement contains a magic number: buf.Limit = 18;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink,The following statement contains a magic number: Assert.AreEqual(18' buf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink,The following statement contains a magic number: buf.Limit = 9;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink,The following statement contains a magic number: Assert.AreEqual(9' buf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink,The following statement contains a magic number: buf.Limit = 4;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink,The following statement contains a magic number: Assert.AreEqual(4' buf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink,The following statement contains a magic number: buf.Limit = 2;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink,The following statement contains a magic number: Assert.AreEqual(2' buf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink2,The following statement contains a magic number: IoBuffer buf = IoBuffer.Allocate(36);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink2,The following statement contains a magic number: buf.Position = 4;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink2,The following statement contains a magic number: buf.MinimumCapacity = 8;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink2,The following statement contains a magic number: Assert.AreEqual(4' newBuf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink2,The following statement contains a magic number: Assert.AreEqual(6' newBuf.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink2,The following statement contains a magic number: Assert.AreEqual(9' newBuf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink2,The following statement contains a magic number: Assert.AreEqual(8' newBuf.MinimumCapacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink2,The following statement contains a magic number: buf = IoBuffer.Allocate(6);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink2,The following statement contains a magic number: buf.Position = 4;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink2,The following statement contains a magic number: Assert.AreEqual(4' newBuf.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink2,The following statement contains a magic number: Assert.AreEqual(6' newBuf.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink2,The following statement contains a magic number: Assert.AreEqual(6' newBuf.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestShrink2,The following statement contains a magic number: Assert.AreEqual(6' newBuf.MinimumCapacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestCapacity,The following statement contains a magic number: IoBuffer buffer = IoBuffer.Allocate(10);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestCapacity,The following statement contains a magic number: buffer.Capacity = 7;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestCapacity,The following statement contains a magic number: Assert.AreEqual(10' buffer.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestCapacity,The following statement contains a magic number: buffer = IoBuffer.Allocate(10);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestCapacity,The following statement contains a magic number: buffer.Capacity = 14;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestCapacity,The following statement contains a magic number: Assert.AreEqual(14' buffer.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestCapacity,The following statement contains a magic number: buffer = IoBuffer.Allocate(10);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestCapacity,The following statement contains a magic number: buffer.Capacity = 5;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestCapacity,The following statement contains a magic number: Assert.AreEqual(10' buffer.MinimumCapacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestCapacity,The following statement contains a magic number: Assert.AreEqual(10' buffer.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: IoBuffer buffer = IoBuffer.Allocate(10);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: Assert.AreEqual(6' buffer.Remaining);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: IoBuffer newBuffer = buffer.Expand(2);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: Assert.AreEqual(6' newBuffer.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: Assert.AreEqual(10' newBuffer.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: buffer = IoBuffer.Allocate(10);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: newBuffer = buffer.Expand(8);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: Assert.AreEqual(8' newBuffer.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: Assert.AreEqual(10' newBuffer.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: buffer = IoBuffer.Allocate(10);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: newBuffer = buffer.Expand(12);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: Assert.AreEqual(12' newBuffer.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: Assert.AreEqual(12' newBuffer.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: buffer = IoBuffer.Allocate(10);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: buffer.Position = 4;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: newBuffer = buffer.Expand(2);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: Assert.AreEqual(6' newBuffer.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: Assert.AreEqual(10' newBuffer.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: Assert.AreEqual(4' newBuffer.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: buffer = IoBuffer.Allocate(10);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: buffer.Position = 4;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: newBuffer = buffer.Expand(3);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: Assert.AreEqual(7' newBuffer.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: Assert.AreEqual(10' newBuffer.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: Assert.AreEqual(4' newBuffer.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: buffer = IoBuffer.Allocate(10);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: buffer.Position = 4;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: newBuffer = buffer.Expand(7);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: Assert.AreEqual(11' newBuffer.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: Assert.AreEqual(11' newBuffer.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpand,The following statement contains a magic number: Assert.AreEqual(4' newBuffer.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: IoBuffer buffer = IoBuffer.Allocate(10);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: Assert.AreEqual(6' buffer.Remaining);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: IoBuffer newBuffer = buffer.Expand(3' 2);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: IoBuffer newBuffer = buffer.Expand(3' 2);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: Assert.AreEqual(6' newBuffer.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: Assert.AreEqual(10' newBuffer.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: buffer = IoBuffer.Allocate(10);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: newBuffer = buffer.Expand(3' 5);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: newBuffer = buffer.Expand(3' 5);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: Assert.AreEqual(8' newBuffer.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: Assert.AreEqual(10' newBuffer.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: buffer = IoBuffer.Allocate(10);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: newBuffer = buffer.Expand(3' 9);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: newBuffer = buffer.Expand(3' 9);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: Assert.AreEqual(12' newBuffer.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: Assert.AreEqual(12' newBuffer.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: buffer = IoBuffer.Allocate(10);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: buffer.Position = 4;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: newBuffer = buffer.Expand(5' 1);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: Assert.AreEqual(6' newBuffer.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: Assert.AreEqual(10' newBuffer.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: Assert.AreEqual(4' newBuffer.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: buffer = IoBuffer.Allocate(10);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: buffer.Position = 4;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: newBuffer = buffer.Expand(5' 2);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: newBuffer = buffer.Expand(5' 2);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: Assert.AreEqual(7' newBuffer.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: Assert.AreEqual(10' newBuffer.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: Assert.AreEqual(4' newBuffer.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: buffer = IoBuffer.Allocate(10);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: buffer.Position = 4;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: newBuffer = buffer.Expand(5' 6);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: newBuffer = buffer.Expand(5' 6);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: Assert.AreEqual(11' newBuffer.Limit);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: Assert.AreEqual(11' newBuffer.Capacity);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestExpandPos,The following statement contains a magic number: Assert.AreEqual(4' newBuffer.Position);
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestFillByteSize,The following statement contains a magic number: int length = 1024 * 1020;
Magic Number,Mina.Core.Buffer,ByteBufferTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\Buffer\ByteBufferTest.cs,TestFillByteSize,The following statement contains a magic number: int length = 1024 * 1020;
Magic Number,Mina.Core,TestThread,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\FutureTest.cs,Run,The following statement contains a magic number: success = future.Await(10000);
Magic Number,Mina.Core,IoFilterChainTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\IoFilterChainTest.cs,FormatResult,The following statement contains a magic number: StringBuilder buf = new StringBuilder(newResult.Length * 4 / 3);
Magic Number,Mina.Core,IoFilterChainTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\IoFilterChainTest.cs,FormatResult,The following statement contains a magic number: StringBuilder buf = new StringBuilder(newResult.Length * 4 / 3);
Magic Number,Mina.Core,IoFilterChainTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\IoFilterChainTest.cs,FormatResult,The following statement contains a magic number: i % 3 == 2
Magic Number,Mina.Core,IoFilterChainTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Core\IoFilterChainTest.cs,FormatResult,The following statement contains a magic number: i % 3 == 2
Magic Number,Mina.Filter.Buffer,BufferedWriteFilterTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Buffer\BufferedWriteFilterTest.cs,TestBasicBuffering,The following statement contains a magic number: BufferedWriteFilter bFilter = new BufferedWriteFilter(10);
Magic Number,Mina.Filter.Buffer,BufferedWriteFilterTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Buffer\BufferedWriteFilterTest.cs,TestBasicBuffering,The following statement contains a magic number: i < 20
Magic Number,Mina.Filter.Buffer,DummyFilter,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Buffer\BufferedWriteFilterTest.cs,FilterClose,The following statement contains a magic number: Assert.AreEqual(3' _counter);
Magic Number,Mina.Filter.Buffer,DummyFilter,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Buffer\BufferedWriteFilterTest.cs,FilterWrite,The following statement contains a magic number: _counter == 3
Magic Number,Mina.Filter.Codec,CumulativeProtocolDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\CumulativeProtocolDecoderTest.cs,SetUp,The following statement contains a magic number: buf = IoBuffer.Allocate(16);
Magic Number,Mina.Filter.Codec,CumulativeProtocolDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\CumulativeProtocolDecoderTest.cs,TestRepeatitiveDecode,The following statement contains a magic number: i < 4
Magic Number,Mina.Filter.Codec,CumulativeProtocolDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\CumulativeProtocolDecoderTest.cs,TestRepeatitiveDecode,The following statement contains a magic number: Assert.AreEqual(4' session.DecoderOutputQueue.Count);
Magic Number,Mina.Filter.Codec,CumulativeProtocolDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\CumulativeProtocolDecoderTest.cs,TestRepeatitiveDecode,The following statement contains a magic number: i < 4
Magic Number,Mina.Filter.Codec,CumulativeProtocolDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\CumulativeProtocolDecoderTest.cs,TestBufferDerivation,The following statement contains a magic number: i < 10
Magic Number,Mina.Filter.Codec,IntegerDecoder,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\CumulativeProtocolDecoderTest.cs,DoDecode,The following statement contains a magic number: input.Remaining < 4
Magic Number,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestNormalDecode,The following statement contains a magic number: IoBuffer input = IoBuffer.Allocate(16);
Magic Number,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestNormalDecode,The following statement contains a magic number: Assert.AreEqual(2' session.DecoderOutputQueue.Count);
Magic Number,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestNormalDecode,The following statement contains a magic number: Assert.AreEqual(2' session.DecoderOutputQueue.Count);
Magic Number,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestNormalDecode,The following statement contains a magic number: Assert.AreEqual(2' session.DecoderOutputQueue.Count);
Magic Number,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestAutoDecode,The following statement contains a magic number: IoBuffer input = IoBuffer.Allocate(16);
Magic Number,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestAutoDecode,The following statement contains a magic number: Assert.AreEqual(2' session.DecoderOutputQueue.Count);
Magic Number,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestAutoDecode,The following statement contains a magic number: Assert.AreEqual(3' session.DecoderOutputQueue.Count);
Magic Number,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestAutoDecode,The following statement contains a magic number: Assert.AreEqual(2' session.DecoderOutputQueue.Count);
Magic Number,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestAutoDecode,The following statement contains a magic number: Assert.AreEqual(2' session.DecoderOutputQueue.Count);
Magic Number,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestAutoDecode,The following statement contains a magic number: String s = encoding.GetString(new byte[] { 0' 77' 105' 110' 97 });
Magic Number,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestAutoDecode,The following statement contains a magic number: String s = encoding.GetString(new byte[] { 0' 77' 105' 110' 97 });
Magic Number,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestAutoDecode,The following statement contains a magic number: String s = encoding.GetString(new byte[] { 0' 77' 105' 110' 97 });
Magic Number,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestAutoDecode,The following statement contains a magic number: String s = encoding.GetString(new byte[] { 0' 77' 105' 110' 97 });
Magic Number,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestOverflow,The following statement contains a magic number: decoder.MaxLineLength = 3;
Magic Number,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestOverflow,The following statement contains a magic number: IoBuffer input = IoBuffer.Allocate(16);
Magic Number,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestOverflow,The following statement contains a magic number: input = IoBuffer.Allocate(1048576 * 16).Sweep((byte)' ').Mark();
Magic Number,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestOverflow,The following statement contains a magic number: input = IoBuffer.Allocate(1048576 * 16).Sweep((byte)' ').Mark();
Magic Number,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestOverflow,The following statement contains a magic number: i < 10
Magic Number,Mina.Filter.Codec.TextLine,TextLineDecoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineDecoderTest.cs,TestSMTPDataBounds,The following statement contains a magic number: IoBuffer input = IoBuffer.Allocate(16);
Magic Number,Mina.Filter.Codec.TextLine,TextLineEncoderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Codec\TextLine\TextLineEncoderTest.cs,TestEncode,The following statement contains a magic number: Assert.AreEqual(5' buf.Remaining);
Magic Number,Mina.Filter.Executor,ExecutorFilterRegressionTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Executor\ExecutorFilterRegressionTest.cs,TestEventOrder,The following statement contains a magic number: Int32 loop = 1000000;
Magic Number,Mina.Filter.Executor,ExecutorFilterRegressionTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Executor\ExecutorFilterRegressionTest.cs,TestEventOrder,The following statement contains a magic number: System.Threading.Thread.Sleep(2000);
Magic Number,Mina.Filter.Firewall,ConnectionThrottleFilterTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Firewall\ConnectionThrottleFilterTest.cs,ConnectionThrottleFilterTest,The following statement contains a magic number: sessionOne.SetRemoteEndPoint(new IPEndPoint(IPAddress.Any' 1234));
Magic Number,Mina.Filter.Firewall,ConnectionThrottleFilterTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Firewall\ConnectionThrottleFilterTest.cs,ConnectionThrottleFilterTest,The following statement contains a magic number: sessionTwo.SetRemoteEndPoint(new IPEndPoint(IPAddress.Any' 1235));
Magic Number,Mina.Filter.Firewall,ConnectionThrottleFilterTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Firewall\ConnectionThrottleFilterTest.cs,TestGoodConnection,The following statement contains a magic number: filter.AllowedInterval = 100;
Magic Number,Mina.Filter.Firewall,ConnectionThrottleFilterTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Firewall\ConnectionThrottleFilterTest.cs,TestGoodConnection,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Mina.Filter.Firewall,ConnectionThrottleFilterTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Firewall\ConnectionThrottleFilterTest.cs,TestBadConnection,The following statement contains a magic number: filter.AllowedInterval = 1000;
Magic Number,Mina.Filter.Firewall,SubnetTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Firewall\SubnetTest.cs,TestIPv6,The following statement contains a magic number: new Subnet(addr' 24);
Magic Number,Mina.Filter.Firewall,SubnetTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Firewall\SubnetTest.cs,Test24,The following statement contains a magic number: Subnet mask = new Subnet(a' 24);
Magic Number,Mina.Filter.Firewall,SubnetTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Firewall\SubnetTest.cs,Test16,The following statement contains a magic number: Subnet mask = new Subnet(a' 16);
Magic Number,Mina.Filter.Firewall,SubnetTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Firewall\SubnetTest.cs,TestSingleIp,The following statement contains a magic number: Subnet mask = new Subnet(a' 32);
Magic Number,Mina.Filter.Firewall,SubnetTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Firewall\SubnetTest.cs,TestToString,The following statement contains a magic number: Subnet mask = new Subnet(a' 24);
Magic Number,Mina.Filter.Firewall,SubnetTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Firewall\SubnetTest.cs,TestToStringLiteral,The following statement contains a magic number: Subnet mask = new Subnet(a' 32);
Magic Number,Mina.Filter.Firewall,SubnetTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Firewall\SubnetTest.cs,TestEquals,The following statement contains a magic number: Subnet a = new Subnet(IPAddress.Parse("127.2.3.4")' 32);
Magic Number,Mina.Filter.Firewall,SubnetTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Firewall\SubnetTest.cs,TestEquals,The following statement contains a magic number: Subnet b = new Subnet(IPAddress.Parse("127.2.3.4")' 32);
Magic Number,Mina.Filter.Firewall,SubnetTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Firewall\SubnetTest.cs,TestEquals,The following statement contains a magic number: Subnet c = new Subnet(IPAddress.Parse("127.2.3.5")' 32);
Magic Number,Mina.Filter.Firewall,SubnetTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Firewall\SubnetTest.cs,TestEquals,The following statement contains a magic number: Subnet d = new Subnet(IPAddress.Parse("127.2.3.5")' 24);
Magic Number,Mina.Filter.KeepAlive,KeepAliveFilterTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\KeepAlive\KeepAliveFilterTest.cs,KeepAliveFilterForIdleStatus,The following statement contains a magic number: Thread.Sleep((INTERVAL + TIMEOUT + 3) * 1000);
Magic Number,Mina.Filter.KeepAlive,KeepAliveFilterTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\KeepAlive\KeepAliveFilterTest.cs,KeepAliveFilterForIdleStatus,The following statement contains a magic number: Thread.Sleep((INTERVAL + TIMEOUT + 3) * 1000);
Magic Number,Mina.Filter.KeepAlive,KeepAliveFilterTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\KeepAlive\KeepAliveFilterTest.cs,CheckResponse,The following statement contains a magic number: Boolean check = buff.Get() == 2;
Magic Number,Mina.Filter.Ssl,SslTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Ssl\SslTest.cs,StartServer,The following statement contains a magic number: acceptor.MessageReceived += (s' e) =>              {                  String line = (String)e.Message;                    if (line.StartsWith("hello"))                  {                      Debug.WriteLine("Server got: 'hello'' waiting for 'send'");                      Thread.Sleep(1500);                  }                  else if (line.StartsWith("send"))                  {                      Debug.WriteLine("Server got: 'send'' sending 'data'");                      e.Session.Write("data");                  }                  else                  {                      Debug.WriteLine("Server got: " + line);                  }              };
Magic Number,Mina.Filter.Ssl,SslTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Ssl\SslTest.cs,ClientConnect,The following statement contains a magic number: ready.Wait(3000);
Magic Number,Mina.Filter.Ssl,SslTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Ssl\SslTest.cs,ClientConnect,The following statement contains a magic number: ready.Wait(3000);
Magic Number,Mina.Filter.Ssl,SslTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Ssl\SslTest.cs,ReadMessage,The following statement contains a magic number: byte[] buffer = new byte[2048];
Magic Number,Mina.Filter.Stream,AbstractStreamWriteFilterTest<M;U>,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Stream\AbstractStreamWriteFilterTest.cs,TestSetWriteBufferSize,The following statement contains a magic number: filter.WriteBufferSize = -100;
Magic Number,Mina.Filter.Stream,AbstractStreamWriteFilterTest<M;U>,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Stream\AbstractStreamWriteFilterTest.cs,TestSetWriteBufferSize,The following statement contains a magic number: filter.WriteBufferSize = 1024;
Magic Number,Mina.Filter.Stream,AbstractStreamWriteFilterTest<M;U>,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Stream\AbstractStreamWriteFilterTest.cs,TestSetWriteBufferSize,The following statement contains a magic number: Assert.AreEqual(1024' filter.WriteBufferSize);
Magic Number,Mina.Filter.Stream,AbstractStreamWriteFilterTest<M;U>,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Stream\AbstractStreamWriteFilterTest.cs,TestWriteUsingSocketTransport,The following statement contains a magic number: IPEndPoint ep = new IPEndPoint(IPAddress.Loopback' 12345);
Magic Number,Mina.Filter.Stream,AbstractStreamWriteFilterTest<M;U>,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Stream\AbstractStreamWriteFilterTest.cs,TestWriteUsingSocketTransport,The following statement contains a magic number: Byte[] data = new Byte[4 * 1024 * 1024];
Magic Number,Mina.Filter.Stream,AbstractStreamWriteFilterTest<M;U>,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Stream\AbstractStreamWriteFilterTest.cs,TestWriteUsingSocketTransport,The following statement contains a magic number: Byte[] data = new Byte[4 * 1024 * 1024];
Magic Number,Mina.Filter.Stream,AbstractStreamWriteFilterTest<M;U>,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Stream\AbstractStreamWriteFilterTest.cs,TestWriteUsingSocketTransport,The following statement contains a magic number: Byte[] data = new Byte[4 * 1024 * 1024];
Magic Number,Mina.Filter.Stream,ReceiverHandler,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Filter\Stream\AbstractStreamWriteFilterTest.cs,SessionCreated,The following statement contains a magic number: session.Config.SetIdleTime(IdleStatus.ReaderIdle' 5);
Magic Number,Mina.Transport,AbstractBindTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractBindTest.cs,TestManyTimes,The following statement contains a magic number: i < 1024
Magic Number,Mina.Transport,AbstractBindTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractBindTest.cs,TestUnbindDisconnectsClients,The following statement contains a magic number: IoSession[] sessions = new IoSession[5];
Magic Number,Mina.Transport,AbstractBindTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractBindTest.cs,TestUnbindDisconnectsClients,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,Mina.Transport,AbstractBindTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractBindTest.cs,TestUnbindDisconnectsClients,The following statement contains a magic number: Assert.AreEqual(5' managedSessions.Count);
Magic Number,Mina.Transport,AbstractBindTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractBindTest.cs,TestUnbindDisconnectsClients,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,Mina.Transport,AbstractBindTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractBindTest.cs,TestUnbindResume,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,Mina.Transport,AbstractBindTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractBindTest.cs,TestUnbindResume,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,Mina.Transport,AbstractBindTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractBindTest.cs,TestUnbindResume,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,Mina.Transport,AbstractBindTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractBindTest.cs,Bind,The following statement contains a magic number: port <= 65535
Magic Number,Mina.Transport,EchoProtocolHandler,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractBindTest.cs,SessionCreated,The following statement contains a magic number: session.Config.SetIdleTime(IdleStatus.BothIdle' 10);
Magic Number,Mina.Transport,AbstractConnectorTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractConnectorTest.cs,TestConnectFutureSuccessTiming,The following statement contains a magic number: Int32 port = 12345;
Magic Number,Mina.Transport,AbstractConnectorTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractConnectorTest.cs,TestConnectFutureFailureTiming,The following statement contains a magic number: Int32 port = 12345;
Magic Number,Mina.Transport,AbstractConnectorTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractConnectorTest.cs,TestSessionCallbackInvocation,The following statement contains a magic number: Int32 sessionCreatedInvokedBeforeCallback = 2;
Magic Number,Mina.Transport,AbstractConnectorTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractConnectorTest.cs,TestSessionCallbackInvocation,The following statement contains a magic number: CountdownEvent countdown = new CountdownEvent(2);
Magic Number,Mina.Transport,AbstractConnectorTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractConnectorTest.cs,TestSessionCallbackInvocation,The following statement contains a magic number: Int32 port = 12345;
Magic Number,Mina.Transport,AbstractConnectorTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractConnectorTest.cs,TestSessionCallbackInvocation,The following statement contains a magic number: Assert.IsTrue(countdown.Wait(TimeSpan.FromSeconds(5))' "Timed out waiting for callback and IoHandler.sessionCreated to be invoked");
Magic Number,Mina.Transport,AbstractFileTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractFileTest.cs,TestSendLargeFile,The following statement contains a magic number: Int32 port = 12345;
Magic Number,Mina.Transport,AbstractFileTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractFileTest.cs,TestSendLargeFile,The following statement contains a magic number: acceptor.MessageReceived += (s' e) =>                  {                      IoBuffer buffer = (IoBuffer)e.Message;                      while (buffer.HasRemaining)                      {                          int x = buffer.GetInt32();                          if (x != index)                          {                              throw new Exception(String.Format("Integer at {0} was {1} but should have been {0}"' index' x));                          }                          index++;                      }                      if (index > FILE_SIZE / 4)                      {                          throw new Exception("Read too much data");                      }                      if (index == FILE_SIZE / 4)                      {                          success[0] = true;                          e.Session.Close(true);                      }                  };
Magic Number,Mina.Transport,AbstractFileTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractFileTest.cs,TestSendLargeFile,The following statement contains a magic number: acceptor.MessageReceived += (s' e) =>                  {                      IoBuffer buffer = (IoBuffer)e.Message;                      while (buffer.HasRemaining)                      {                          int x = buffer.GetInt32();                          if (x != index)                          {                              throw new Exception(String.Format("Integer at {0} was {1} but should have been {0}"' index' x));                          }                          index++;                      }                      if (index > FILE_SIZE / 4)                      {                          throw new Exception("Read too much data");                      }                      if (index == FILE_SIZE / 4)                      {                          success[0] = true;                          e.Session.Close(true);                      }                  };
Magic Number,Mina.Transport,AbstractFileTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractFileTest.cs,CreateLargeFile,The following statement contains a magic number: i < FILE_SIZE / 4
Magic Number,Mina.Transport,AbstractTrafficControlTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractTrafficControlTest.cs,TestSuspendResumeReadWrite,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Mina.Transport,AbstractTrafficControlTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractTrafficControlTest.cs,TestSuspendResumeReadWrite,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Mina.Transport,AbstractTrafficControlTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractTrafficControlTest.cs,TestSuspendResumeReadWrite,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Mina.Transport,AbstractTrafficControlTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractTrafficControlTest.cs,TestSuspendResumeReadWrite,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Mina.Transport,AbstractTrafficControlTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractTrafficControlTest.cs,TestSuspendResumeReadWrite,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Mina.Transport,AbstractTrafficControlTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractTrafficControlTest.cs,TestSuspendResumeReadWrite,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Mina.Transport,AbstractTrafficControlTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractTrafficControlTest.cs,TestSuspendResumeReadWrite,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Mina.Transport,AbstractTrafficControlTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractTrafficControlTest.cs,Read,The following statement contains a magic number: Monitor.Wait(sync' 200);
Magic Number,Mina.Transport,AbstractTrafficControlTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractTrafficControlTest.cs,Read,The following statement contains a magic number: i < 10 && pos == GetReceived(session).Length
Magic Number,Mina.Transport,AbstractTrafficControlTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\AbstractTrafficControlTest.cs,CanRead,The following statement contains a magic number: Monitor.Wait(sync' 250);
Magic Number,Mina.Transport.Loopback,LoopbackEventOrderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Loopback\LoopbackEventOrderTest.cs,TestSessionCreated,The following statement contains a magic number: Semaphore semaphore = new Semaphore(0' 10);
Magic Number,Mina.Transport.Loopback,LoopbackEventOrderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Loopback\LoopbackEventOrderTest.cs,TestSessionCreated,The following statement contains a magic number: LoopbackEndPoint lep = new LoopbackEndPoint(12345);
Magic Number,Mina.Transport.Loopback,LoopbackEventOrderTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Loopback\LoopbackEventOrderTest.cs,TestSessionCreated,The following statement contains a magic number: acceptor.SessionCreated += (s' e) =>              {                  // pretend we are doing some time-consuming work. For                  // performance reasons' you would never want to do time                  // consuming work in sessionCreated.                  // However' this increases the likelihood of the timing bug.                  Thread.Sleep(1000);                  sb.Append("A");              };
Magic Number,Mina.Transport.Socket,DatagramConfigTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramConfigTest.cs,TestAcceptorFilterChain,The following statement contains a magic number: Int32 port = 1024;
Magic Number,Mina.Transport.Socket,DatagramConfigTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramConfigTest.cs,TestAcceptorFilterChain,The following statement contains a magic number: IWriteFuture writeFuture = future.Session.Write(IoBuffer.Allocate(16).PutInt32(0).Flip());
Magic Number,Mina.Transport.Socket,DatagramConfigTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramConfigTest.cs,TestAcceptorFilterChain,The following statement contains a magic number: result.Length == 2
Magic Number,Mina.Transport.Socket,DatagramConfigTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramConfigTest.cs,TestAcceptorFilterChain,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Mina.Transport.Socket,DatagramConfigTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramConfigTest.cs,TestAcceptorFilterChain,The following statement contains a magic number: i < 30
Magic Number,Mina.Transport.Socket,DatagramRecyclerTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramRecyclerTest.cs,TestDatagramRecycler,The following statement contains a magic number: int port = 1024;
Magic Number,Mina.Transport.Socket,DatagramRecyclerTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramRecyclerTest.cs,TestDatagramRecycler,The following statement contains a magic number: acceptorHandler.session.CloseFuture.Await(3000);
Magic Number,Mina.Transport.Socket,DatagramRecyclerTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramRecyclerTest.cs,TestDatagramRecycler,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Mina.Transport.Socket,DatagramRecyclerTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramRecyclerTest.cs,TestCloseRequest,The following statement contains a magic number: int port = 1024;
Magic Number,Mina.Transport.Socket,DatagramRecyclerTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramRecyclerTest.cs,TestCloseRequest,The following statement contains a magic number: ExpiringSessionRecycler recycler = new ExpiringSessionRecycler(10' 1);
Magic Number,Mina.Transport.Socket,DatagramRecyclerTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramRecyclerTest.cs,TestCloseRequest,The following statement contains a magic number: Assert.IsTrue(acceptorHandler.session.CloseFuture.Await(3000));
Magic Number,Mina.Transport.Socket,DatagramRecyclerTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramRecyclerTest.cs,TestCloseRequest,The following statement contains a magic number: (DateTime.Now - startTime).TotalMilliseconds > 5000
Magic Number,Mina.Transport.Socket,DatagramRecyclerTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramRecyclerTest.cs,TestCloseRequest,The following statement contains a magic number: acceptorHandler.result.ToString().Length < 8
Magic Number,Mina.Transport.Socket,DatagramRecyclerTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramRecyclerTest.cs,TestCloseRequest,The following statement contains a magic number: Assert.IsTrue(acceptorHandler.session.CloseFuture.Await(3000));
Magic Number,Mina.Transport.Socket,DatagramSessionIdleTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramSessionIdleTest.cs,TestSessionIdle,The following statement contains a magic number: int READER_IDLE_TIME = 3;
Magic Number,Mina.Transport.Socket,DatagramSessionIdleTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramSessionIdleTest.cs,TestSessionIdle,The following statement contains a magic number: int WRITER_IDLE_TIME = READER_IDLE_TIME + 2;
Magic Number,Mina.Transport.Socket,DatagramSessionIdleTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramSessionIdleTest.cs,TestSessionIdle,The following statement contains a magic number: int BOTH_IDLE_TIME = WRITER_IDLE_TIME + 2;
Magic Number,Mina.Transport.Socket,DatagramSessionIdleTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramSessionIdleTest.cs,TestSessionIdle,The following statement contains a magic number: IPEndPoint ep = new IPEndPoint(IPAddress.Loopback' 1234);
Magic Number,Mina.Transport.Socket,DatagramSessionIdleTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramSessionIdleTest.cs,TestSessionIdle,The following statement contains a magic number: IoSession session = acceptor.NewSession(new IPEndPoint(IPAddress.Loopback' 1024)' ep);
Magic Number,Mina.Transport.Socket,DatagramSessionIdleTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramSessionIdleTest.cs,TestSessionIdle,The following statement contains a magic number: System.Threading.Monitor.Wait(mutex' READER_IDLE_TIME * 1000);
Magic Number,Mina.Transport.Socket,DatagramSessionIdleTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramSessionIdleTest.cs,TestSessionIdle,The following statement contains a magic number: !readerIdleReceived && (DateTime.Now - startTime).TotalMilliseconds < (READER_IDLE_TIME + 1) * 1000
Magic Number,Mina.Transport.Socket,DatagramSessionIdleTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramSessionIdleTest.cs,TestSessionIdle,The following statement contains a magic number: System.Threading.Monitor.Wait(mutex' (WRITER_IDLE_TIME - READER_IDLE_TIME) * 1000);
Magic Number,Mina.Transport.Socket,DatagramSessionIdleTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramSessionIdleTest.cs,TestSessionIdle,The following statement contains a magic number: !writerIdleReceived && (DateTime.Now - startTime).TotalMilliseconds < (WRITER_IDLE_TIME + 1) * 1000
Magic Number,Mina.Transport.Socket,DatagramSessionIdleTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramSessionIdleTest.cs,TestSessionIdle,The following statement contains a magic number: System.Threading.Monitor.Wait(mutex' (BOTH_IDLE_TIME - WRITER_IDLE_TIME) * 1000);
Magic Number,Mina.Transport.Socket,DatagramSessionIdleTest,D:\research\architectureSmells\repos\longshine_Mina.NET\Mina.Test\Transport\Socket\DatagramSessionIdleTest.cs,TestSessionIdle,The following statement contains a magic number: !bothIdleReceived && (DateTime.Now - startTime).TotalMilliseconds < (BOTH_IDLE_TIME + 1) * 1000
