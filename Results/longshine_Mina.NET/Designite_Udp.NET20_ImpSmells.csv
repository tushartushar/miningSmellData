Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Mina.Example.Udp,MemMonClient,C:\repos\longshine_Mina.NET\Mina.Example\Udp\MemMonClient.cs,Main,The following statement contains a magic number: connFuture.Complete += (s' e) =>              {                  IConnectFuture f = (IConnectFuture)e.Future;                  if (f.Connected)                  {                      Console.WriteLine("...connected");                      IoSession session = f.Session;                        for (int i = 0; i < 30; i++)                      {                          Int64 memory = GC.GetTotalMemory(false);                          IoBuffer buffer = IoBuffer.Allocate(8);                          buffer.PutInt64(memory);                          buffer.Flip();                          session.Write(buffer);                            try                          {                              Thread.Sleep(1000);                          }                          catch (ThreadInterruptedException)                          {                              break;                          }                      }                  }                  else                  {                      Console.WriteLine("Not connected...exiting");                  }              };
Magic Number,Mina.Example.Udp,MemMonClient,C:\repos\longshine_Mina.NET\Mina.Example\Udp\MemMonClient.cs,Main,The following statement contains a magic number: connFuture.Complete += (s' e) =>              {                  IConnectFuture f = (IConnectFuture)e.Future;                  if (f.Connected)                  {                      Console.WriteLine("...connected");                      IoSession session = f.Session;                        for (int i = 0; i < 30; i++)                      {                          Int64 memory = GC.GetTotalMemory(false);                          IoBuffer buffer = IoBuffer.Allocate(8);                          buffer.PutInt64(memory);                          buffer.Flip();                          session.Write(buffer);                            try                          {                              Thread.Sleep(1000);                          }                          catch (ThreadInterruptedException)                          {                              break;                          }                      }                  }                  else                  {                      Console.WriteLine("Not connected...exiting");                  }              };
Magic Number,Mina.Example.Udp,MemMonClient,C:\repos\longshine_Mina.NET\Mina.Example\Udp\MemMonClient.cs,Main,The following statement contains a magic number: connFuture.Complete += (s' e) =>              {                  IConnectFuture f = (IConnectFuture)e.Future;                  if (f.Connected)                  {                      Console.WriteLine("...connected");                      IoSession session = f.Session;                        for (int i = 0; i < 30; i++)                      {                          Int64 memory = GC.GetTotalMemory(false);                          IoBuffer buffer = IoBuffer.Allocate(8);                          buffer.PutInt64(memory);                          buffer.Flip();                          session.Write(buffer);                            try                          {                              Thread.Sleep(1000);                          }                          catch (ThreadInterruptedException)                          {                              break;                          }                      }                  }                  else                  {                      Console.WriteLine("Not connected...exiting");                  }              };
