Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AuftragabwicklungKomponente,AuftragabwicklungLogik,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragabwicklungLogik.cs,GetNextIdForType,Cyclomatic complexity of the method is 8
Long Parameter List,AuftragabwicklungKomponente,Angebot,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\Angebot.cs,Angebot,The method has 7 parameters.
Long Parameter List,AuftragabwicklungKomponente,AngebotVerwalter,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AngebotVerwalter.cs,AngebotErstellen,The method has 7 parameters.
Long Parameter List,AuftragabwicklungKomponente,Auftrag,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\Auftrag.cs,Auftrag,The method has 5 parameters.
Long Parameter List,AuftragabwicklungKomponente,AuftragabwicklungFassade,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragabwicklungFassade.cs,AngebotErstellen,The method has 6 parameters.
Long Parameter List,AuftragabwicklungKomponente,AuftragabwicklungFassade,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragabwicklungFassade.cs,AuftragErstellen,The method has 5 parameters.
Long Parameter List,AuftragabwicklungKomponente,AuftragabwicklungLogik,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragabwicklungLogik.cs,AngebotErstellen,The method has 6 parameters.
Long Parameter List,AuftragabwicklungKomponente,AuftragabwicklungLogik,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragabwicklungLogik.cs,AuftragErstellen,The method has 5 parameters.
Long Parameter List,AuftragabwicklungKomponente,AuftragVerwalter,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragVerwalter.cs,AuftragErstellen,The method has 5 parameters.
Long Parameter List,AuftragabwicklungKomponente,IAuftragMgmt,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\IAuftragMgmt.cs,AngebotErstellen,The method has 6 parameters.
Long Parameter List,AuftragabwicklungKomponente,IAuftragMgmt,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\IAuftragMgmt.cs,AuftragErstellen,The method has 5 parameters.
Long Parameter List,AuftragabwicklungKomponente.Mapping,AngebotMap,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\Mapping\AngebotMap.cs,AngebotMap,The method has 9 parameters.
Long Parameter List,AuftragabwicklungKomponente.Mapping,AuftragMap,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\Mapping\AuftragMap.cs,AuftragMap,The method has 8 parameters.
Long Parameter List,AuftragabwicklungKomponente.Mapping,PostenMap,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\Mapping\PostenMap.cs,PostenMap,The method has 5 parameters.
Long Statement,AuftragabwicklungKomponente,Angebot,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\Angebot.cs,GibTransportObjekt,The length of the statement  "	return new AngebotTyp (this.AngebotId' this.Kundennummer' this.Lieferadresse' this.Rechnungsadresse' postenTypen' this.GueltigAb' this.GueltigBis' this.GesamtPreisNetto); " is 170.
Long Statement,AuftragabwicklungKomponente,AngebotVerwalter,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AngebotVerwalter.cs,AngebotErstellen,The length of the statement  "	Angebot angebot = new Angebot (angebotId' kundennummer' lieferadresse' rechnungsadresse' posten' gueltigAb' gueltigBis); " is 120.
Long Statement,AuftragabwicklungKomponente,Auftrag,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\Auftrag.cs,GibTransportTyp,The length of the statement  "	return new AuftragTyp (this.AuftragId' this.Angebot.GibTransportObjekt ()' this.BeauftragtAm' this.LetzterPostenLieferbar' this.IstLieferbar' this.LieferDatum); " is 160.
Long Statement,AuftragabwicklungKomponente,AuftragabwicklungFassade,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragabwicklungFassade.cs,AngebotErstellen,The length of the statement  "	return this.AuftragabwicklungsLogik.AngebotErstellen (kundennummer' lieferadresse' rechnungsadresse' posten' gueltigAb' gueltigBis).AngebotId; " is 142.
Long Statement,AuftragabwicklungKomponente,AuftragabwicklungFassade,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragabwicklungFassade.cs,AuftragErstellen,The length of the statement  "	return AuftragabwicklungsLogik.AuftragErstellen (kundennummer' lieferadresse' rechnungsadresse' posten' beauftragtAm).AuftragId; " is 128.
Long Statement,AuftragabwicklungKomponente,AuftragabwicklungLogik,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragabwicklungLogik.cs,AngebotErstellen,The length of the statement  "	return this.AngebotVerwalter.AngebotErstellen (GetNextIdForType<Angebot> ()' kundennummer' lieferadresse' rechnungsadresse' posten' gueltigAb' gueltigBis); " is 155.
Long Statement,AuftragabwicklungKomponente,AuftragabwicklungLogik,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragabwicklungLogik.cs,AuftragErstellen,The length of the statement  "	Auftrag auftrag = this.AuftragVerwalter.AuftragErstellen (angebot' GetNextIdForType<Auftrag> ()' beauftragtAm' spaetestesLieferdatum); " is 134.
Long Statement,AuftragabwicklungKomponente,AuftragabwicklungLogik,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragabwicklungLogik.cs,AuftragErstellen,The length of the statement  "	Angebot angebot = this.AngebotErstellen (kundennummer' lieferadresse' rechnungsadresse' posten' DateTime.Now' gueltigBis); " is 122.
Long Statement,AuftragabwicklungKomponente,AuftragabwicklungLogik,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragabwicklungLogik.cs,AuftragErstellen,The length of the statement  "	Auftrag auftrag = this.AuftragVerwalter.AuftragErstellen (angebot' GetNextIdForType<Auftrag> ()' beauftragtAm' spaetestesLieferdatum); " is 134.
Long Statement,AuftragabwicklungKomponente,AuftragVerwalter,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragVerwalter.cs,AuftragAbschliessen,The length of the statement  "					Console.WriteLine ("Auftrag mit der Auftragsnummer: {0} (gesuchte AuftragsId: {1}) wurde als abgeschlossen = {2} markiert"' auftrag.AuftragId' auftragId' auftrag.IstAbgeschlossen); " is 180.
Magic Number,AuftragabwicklungKomponente,AngebotVerwalter,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AngebotVerwalter.cs,GetAngebot,The following statement contains a magic number: using (var session = sessionFactory.OpenSession ()) {  	using (session.BeginTransaction ()) {  		//angebot aus der datenbank rausholen anhand der angebotsnummer  		angebot = session.Get<Angebot> (Int32.Parse (angebotId.Substring (3)));  	}  	#if DEBUG  	Console.WriteLine ("Geladen: {0}"' angebot);  	#endif  }  
Magic Number,AuftragabwicklungKomponente,AngebotVerwalter,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AngebotVerwalter.cs,GetAngebot,The following statement contains a magic number: using (session.BeginTransaction ()) {  	//angebot aus der datenbank rausholen anhand der angebotsnummer  	angebot = session.Get<Angebot> (Int32.Parse (angebotId.Substring (3)));  }  
Magic Number,AuftragabwicklungKomponente,AngebotVerwalter,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AngebotVerwalter.cs,GetAngebot,The following statement contains a magic number: angebot = session.Get<Angebot> (Int32.Parse (angebotId.Substring (3)));  
Magic Number,AuftragabwicklungKomponente,AuftragabwicklungLogik,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragabwicklungLogik.cs,GetNextIdForType,The following statement contains a magic number: using (var session = sessionFactory.OpenSession ()) {  	using (session.BeginTransaction ()) {  		var allIdObjects = session.CreateCriteria (typeof(E)).List<E> ();  		foreach (IHasId IdObject in allIdObjects) {  			// get the number of the id' by cutting dwon the first 3 characters  			int id = Int32.Parse (IdObject.GetCustomId ().Substring (3));  			if (highestId < id) {  				highestId = id;  			}  		}  	}  	int nextId = highestId++;  	//build the id string  	StringBuilder idString = new StringBuilder (typeof(E).Name);  	//fill idString up with "_" to a length of 3 if necessary   	while (idString.Length < 3) {  		idString.Append ("_");  	}  	//just use the first 3 characters  	idString = new StringBuilder (idString.ToString (0' 3));  	//append the new id  	idString.Append (nextId);  	return nextId.ToString ();  }  
Magic Number,AuftragabwicklungKomponente,AuftragabwicklungLogik,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragabwicklungLogik.cs,GetNextIdForType,The following statement contains a magic number: using (var session = sessionFactory.OpenSession ()) {  	using (session.BeginTransaction ()) {  		var allIdObjects = session.CreateCriteria (typeof(E)).List<E> ();  		foreach (IHasId IdObject in allIdObjects) {  			// get the number of the id' by cutting dwon the first 3 characters  			int id = Int32.Parse (IdObject.GetCustomId ().Substring (3));  			if (highestId < id) {  				highestId = id;  			}  		}  	}  	int nextId = highestId++;  	//build the id string  	StringBuilder idString = new StringBuilder (typeof(E).Name);  	//fill idString up with "_" to a length of 3 if necessary   	while (idString.Length < 3) {  		idString.Append ("_");  	}  	//just use the first 3 characters  	idString = new StringBuilder (idString.ToString (0' 3));  	//append the new id  	idString.Append (nextId);  	return nextId.ToString ();  }  
Magic Number,AuftragabwicklungKomponente,AuftragabwicklungLogik,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragabwicklungLogik.cs,GetNextIdForType,The following statement contains a magic number: using (var session = sessionFactory.OpenSession ()) {  	using (session.BeginTransaction ()) {  		var allIdObjects = session.CreateCriteria (typeof(E)).List<E> ();  		foreach (IHasId IdObject in allIdObjects) {  			// get the number of the id' by cutting dwon the first 3 characters  			int id = Int32.Parse (IdObject.GetCustomId ().Substring (3));  			if (highestId < id) {  				highestId = id;  			}  		}  	}  	int nextId = highestId++;  	//build the id string  	StringBuilder idString = new StringBuilder (typeof(E).Name);  	//fill idString up with "_" to a length of 3 if necessary   	while (idString.Length < 3) {  		idString.Append ("_");  	}  	//just use the first 3 characters  	idString = new StringBuilder (idString.ToString (0' 3));  	//append the new id  	idString.Append (nextId);  	return nextId.ToString ();  }  
Magic Number,AuftragabwicklungKomponente,AuftragabwicklungLogik,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragabwicklungLogik.cs,GetNextIdForType,The following statement contains a magic number: using (session.BeginTransaction ()) {  	var allIdObjects = session.CreateCriteria (typeof(E)).List<E> ();  	foreach (IHasId IdObject in allIdObjects) {  		// get the number of the id' by cutting dwon the first 3 characters  		int id = Int32.Parse (IdObject.GetCustomId ().Substring (3));  		if (highestId < id) {  			highestId = id;  		}  	}  }  
Magic Number,AuftragabwicklungKomponente,AuftragabwicklungLogik,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragabwicklungLogik.cs,GetNextIdForType,The following statement contains a magic number: foreach (IHasId IdObject in allIdObjects) {  	// get the number of the id' by cutting dwon the first 3 characters  	int id = Int32.Parse (IdObject.GetCustomId ().Substring (3));  	if (highestId < id) {  		highestId = id;  	}  }  
Magic Number,AuftragabwicklungKomponente,AuftragabwicklungLogik,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragabwicklungLogik.cs,GetNextIdForType,The following statement contains a magic number: while (idString.Length < 3) {  	idString.Append ("_");  }  
Magic Number,AuftragabwicklungKomponente,AuftragabwicklungLogik,C:\repos\PhilipHAW_HES\AuftragabwicklungKomponente\AuftragabwicklungLogik.cs,GetNextIdForType,The following statement contains a magic number: idString = new StringBuilder (idString.ToString (0' 3));  
