Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,NMoneys.Demo.CodeProject,CurrencyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\CurrencyDemo.cs,all_currencies_can_be_obtained_and_linq_operators_applied,The length of the parameter allCurrenciesWithoutMinorUnits is 30.
Long Identifier,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,using_different_styles_for_currencies_taht_span_multiple_countries,The length of the parameter threeThousandAndTheHaldInFrench is 31.
Long Statement,NMoneys.Demo.CodeProject,CurrencyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\CurrencyDemo.cs,whats_in_a_currency_anyway,The length of the statement  "	Assert.That (euro.PaddedNumericCode' Is.EqualTo ("978")' "a string of 3 characters containing the numeric code and zeros if needed"); " is 133.
Long Statement,NMoneys.Demo.CodeProject,CurrencyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\CurrencyDemo.cs,some_currencies_have_an_character_reference_for_angly_bracket_languages,The length of the statement  "	Assert.That (reference' Is.Not.Null.And.Property ("IsEmpty").True' "the Rial does not have an reference' but a 'null' object"); " is 127.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,what_is_with_this_Major_thing,The length of the statement  "	Assert.That (Money.ForMajor (234' Currency.Gbp)' isMoneyWith (234' CurrencyIsoCode.GBP)' "instance created from the major units' in this case the Pound"); " is 154.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,what_is_with_this_Minor_thing,The length of the statement  "	Assert.That (Currency.Pound.SignificantDecimalDigits' Is.EqualTo (2)' "pounds have pence' which is a hundreth of the major unit"); " is 130.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,what_is_with_this_Minor_thing,The length of the statement  "	Assert.That (Money.ForMinor (50' Currency.Gbp)' isMoneyWith (0.5m' CurrencyIsoCode.GBP)' "fifty pence is half a pound"); " is 120.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,what_is_with_this_Minor_thing,The length of the statement  "	Assert.That (Money.ForMinor (-5' Currency.Gbp)' isMoneyWith (-0.05m' CurrencyIsoCode.GBP)' "you owe me five pence' but keep them"); " is 131.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,some_currencies_are_divided_into_more_than_100_units,The length of the statement  "	Assert.That (Money.ForMinor (-5' dinar)' isMoneyWith (-0.005m' CurrencyIsoCode.BHD)' "you owe me five fils' but keep them"); " is 124.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,some_currencies_are_divided_into_more_than_100_units,The length of the statement  "	Assert.That (.007m.ToMoney (dinar).MinorIntegralAmount' Is.EqualTo (7L)' "for fractional amounts' the minor unit prevails"); " is 124.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,and_some_currencies_do_not_have_minor_units,The length of the statement  "	Assert.That (3.7m.ToMoney (yen).MinorIntegralAmount' Is.EqualTo (3L)' "for fractional amounts' decimals are discarded"); " is 120.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,comparisons_only_possible_if_they_have_the_same_currency,The length of the statement  "	Assert.That (() => 3m.Usd ().CompareTo (CurrencyIsoCode.GBP.ToMoney (5m))' Throws.InstanceOf<DifferentCurrencyException> ()); " is 125.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,moneys_are_to_be_displayed,The length of the statement  "	Assert.That (10.536m.Eur ().ToString ()' Is.EqualTo ("10'54 €")' "default currency formatting according to instance's currency"); " is 129.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,moneys_are_to_be_displayed,The length of the statement  "	Assert.That (3.2m.Usd ().ToString ("N")' Is.EqualTo ("3.20")' "alternative formatting according to instance's currency"); " is 121.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,more_complex_formatting,The length of the statement  "	Assert.That (3m.Usd ().Format ("{0:00.00} {2}")' Is.EqualTo ("03.00 USD")' "formatting placeholders for code and amount"); " is 122.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,basic_arithmetic_operations_can_be_extended,The length of the statement  "	Money convolutedWayToCancelDebt = (-50m).Eur ().Perform (-1m.Eur ()' (amt1' amt2) => decimal.Multiply (amt1' decimal.Negate (amt2)) - amt1); " is 140.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,several_unary_operations_can_be_performed,The length of the statement  "	Assert.That (twoThirds.TruncateToSignificantDecimalDigits ().Amount' Is.EqualTo (0.66m)' "XXX has two significant decimals"); " is 125.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,several_unary_operations_can_be_performed,The length of the statement  "	Assert.That (.5m.ToMoney ().RoundToNearestInt (MidpointRounding.AwayFromZero)' isMoneyWith (1m)' "closest number away from zero is 1"); " is 135.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,several_unary_operations_can_be_performed,The length of the statement  "	Assert.That (1.5m.ToMoney ().RoundToNearestInt (MidpointRounding.ToEven)' isMoneyWith (2m)' "closest even number is 2"); " is 120.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,several_unary_operations_can_be_performed,The length of the statement  "	Assert.That (1.5m.ToMoney ().RoundToNearestInt (MidpointRounding.AwayFromZero)' isMoneyWith (2m)' "closest number away from zero is 2"); " is 136.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,moneys_can_be_parsed_to_a_known_currency,The length of the statement  "	Assert.That (Money.Parse ("$1.5"' Currency.Dollar)' isMoneyWith (1.5m' CurrencyIsoCode.USD)' "one-and-the-half dollars"); " is 121.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,moneys_can_be_parsed_to_a_known_currency,The length of the statement  "	Assert.That (Money.Parse ("(¤1.2)"' Currency.None)' isMoneyWith (-1.2m' CurrencyIsoCode.XXX)' "owe one point two' no currency"); " is 128.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,number_formatting_is_flexible_for_parsing_purposes,The length of the statement  "	Assert.That (Money.Parse ("-10"' Currency.Euro)' isMoneyWith (-10m' CurrencyIsoCode.EUR)' "negative euro style without no symbol"); " is 131.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,number_formatting_is_flexible_for_parsing_purposes,The length of the statement  "	Assert.That (Money.Parse ("(1.2)"' Currency.Euro)' isMoneyWith (-12m' CurrencyIsoCode.EUR)' "negative dollar style with no symbol"); " is 132.
Long Statement,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,currencies_have_to_be_compatible_for_parsing,The length of the statement  "	Assert.That (() => Money.Parse ("($1.5)"' Currency.Eur)' Throws.InstanceOf<FormatException> ()' "currency not compatible"); " is 123.
Magic Number,NMoneys.Demo.CodeProject,CurrencyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\CurrencyDemo.cs,whats_in_a_currency_anyway,The following statement contains a magic number: Assert.That (euro.NumericCode' Is.EqualTo (978));  
Magic Number,NMoneys.Demo.CodeProject,CurrencyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\CurrencyDemo.cs,some_currencies_have_an_character_reference_for_angly_bracket_languages,The following statement contains a magic number: Assert.That (reference.CodePoint' Is.EqualTo (8364));  
Magic Number,NMoneys.Demo.CodeProject,CurrencyIsoCodeDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\CurrencyIsoCodeDemo.cs,currency_codes_have_their_ISO_numeric_value,The following statement contains a magic number: Assert.That ((short)CurrencyIsoCode.USD' Is.EqualTo (840));  
Magic Number,NMoneys.Demo.CodeProject,CurrencyIsoCodeDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\CurrencyIsoCodeDemo.cs,currency_codes_have_their_ISO_numeric_value,The following statement contains a magic number: Assert.That ((short)CurrencyIsoCode.EUR' Is.EqualTo (978));  
Magic Number,NMoneys.Demo.CodeProject,CurrencyIsoCodeDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\CurrencyIsoCodeDemo.cs,currency_codes_have_their_ISO_numeric_value,The following statement contains a magic number: Assert.That ((short)CurrencyIsoCode.DKK' Is.EqualTo (208));  
Magic Number,NMoneys.Demo.CodeProject,CurrencyIsoCodeDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\CurrencyIsoCodeDemo.cs,currency_codes_have_their_ISO_numeric_value,The following statement contains a magic number: Assert.That ((short)CurrencyIsoCode.XXX' Is.EqualTo (999));  
Magic Number,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,what_is_with_this_Major_thing,The following statement contains a magic number: Assert.That (Money.ForMajor (234' Currency.Gbp)' isMoneyWith (234' CurrencyIsoCode.GBP)' "instance created from the major units' in this case the Pound");  
Magic Number,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,what_is_with_this_Major_thing,The following statement contains a magic number: Assert.That (Money.ForMajor (234' Currency.Gbp)' isMoneyWith (234' CurrencyIsoCode.GBP)' "instance created from the major units' in this case the Pound");  
Magic Number,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,what_is_with_this_Minor_thing,The following statement contains a magic number: Assert.That (Currency.Pound.SignificantDecimalDigits' Is.EqualTo (2)' "pounds have pence' which is a hundreth of the major unit");  
Magic Number,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,what_is_with_this_Minor_thing,The following statement contains a magic number: Assert.That (Money.ForMinor (234' Currency.Gbp)' isMoneyWith (2.34m' CurrencyIsoCode.GBP)' "234 pence is 2.34 pounds");  
Magic Number,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,what_is_with_this_Minor_thing,The following statement contains a magic number: Assert.That (Money.ForMinor (50' Currency.Gbp)' isMoneyWith (0.5m' CurrencyIsoCode.GBP)' "fifty pence is half a pound");  
Magic Number,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,what_is_with_this_Minor_thing,The following statement contains a magic number: Assert.That (Money.ForMinor (-5' Currency.Gbp)' isMoneyWith (-0.05m' CurrencyIsoCode.GBP)' "you owe me five pence' but keep them");  
Magic Number,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,some_currencies_are_divided_into_more_than_100_units,The following statement contains a magic number: Assert.That (dinar.SignificantDecimalDigits' Is.EqualTo (3)' "one dinar is 1000 fils");  
Magic Number,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,some_currencies_are_divided_into_more_than_100_units,The following statement contains a magic number: Assert.That (Money.ForMinor (2340' dinar)' isMoneyWith (2.34m' CurrencyIsoCode.BHD)' "2340 fils is 2.34 dinar");  
Magic Number,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,some_currencies_are_divided_into_more_than_100_units,The following statement contains a magic number: Assert.That (Money.ForMinor (500' dinar)' isMoneyWith (0.5m' CurrencyIsoCode.BHD)' "fifty fils is half a dinar");  
Magic Number,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,some_currencies_are_divided_into_more_than_100_units,The following statement contains a magic number: Assert.That (Money.ForMinor (-5' dinar)' isMoneyWith (-0.005m' CurrencyIsoCode.BHD)' "you owe me five fils' but keep them");  
Magic Number,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,and_some_currencies_do_not_have_minor_units,The following statement contains a magic number: Assert.That (Money.ForMinor (2340' yen)' isMoneyWith (2340m' CurrencyIsoCode.JPY)' "2340 yen are' well' 2340 yen");  
Magic Number,NMoneys.Demo.CodeProject,MoneyDemo,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Demo.CodeProject\MoneyDemo.cs,and_some_currencies_do_not_have_minor_units,The following statement contains a magic number: Assert.That (Money.ForMinor (-5' yen)' isMoneyWith (-5m' CurrencyIsoCode.JPY)' "you owe me five yen' but keep them");  
