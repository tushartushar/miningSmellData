Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,Cyclomatic complexity of the method is 29
Long Parameter List,NMoneys,Currency,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Currency.Serialization.Xml.net.cs,Currency,The method has 12 parameters.
Long Parameter List,NMoneys,Currency,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Currency.Serialization.Xml.net.cs,setAllFields,The method has 12 parameters.
Long Parameter List,NMoneys,Money,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Money.Creation.cs,TryParse,The method has 5 parameters.
Long Parameter List,NMoneys,CurrencyInfo,F:\newReposMay17\dgg_nmoneys\src\NMoneys\CurrencyInfo.cs,CurrencyInfo,The method has 12 parameters.
Long Statement,NMoneys,Currency,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Currency.Serialization.Xml.net.cs,ReadXml,The length of the statement  "	setAllFields (paradigm.IsoCode' paradigm.EnglishName' paradigm.NativeName' paradigm.Symbol' paradigm.SignificantDecimalDigits' paradigm.DecimalSeparator' paradigm.GroupSeparator' paradigm.GroupSizes' paradigm.PositivePattern' paradigm.NegativePattern' paradigm.IsObsolete' paradigm.Entity); " is 290.
Long Statement,NMoneys,Currency,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Currency.Serialization.Xml.net.cs,ReadXmlData,The length of the statement  "	CurrencyIsoCode isoCode = Code.ParseArgument (reader.ReadElementContentAsString (Serialization.Data.Currency.ISO_CODE' Serialization.Data.NAMESPACE)' Serialization.Data.Currency.ISO_CODE); " is 188.
Long Statement,NMoneys,Money,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Money.Creation.cs,ReadXml,The length of the statement  "	setAllFields (reader.ReadElementContentAsDecimal (Serialization.Data.Money.AMOUNT' Serialization.Data.NAMESPACE)' Currency.ReadXmlData (reader)); " is 145.
Long Statement,NMoneys,Money,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Money.Creation.cs,Format,The length of the statement  "	return string.Format (currency' format' Amount' currency.Symbol' currency.IsoCode' currency.EnglishName' currency.NativeName); " is 126.
Long Statement,NMoneys,Money,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Money.Creation.cs,Format,The length of the statement  "	return string.Format (provider' format' Amount' currency.Symbol' currency.IsoCode' currency.EnglishName' currency.NativeName); " is 126.
Long Statement,NMoneys,CurrencyEqualityComparer,F:\newReposMay17\dgg_nmoneys\src\NMoneys\CurrencyEqualityComparer.cs,Equals,The length of the statement  "	return x.IsoCode == y.IsoCode && _englishNameComparer.Equals (x.EnglishName' y.EnglishName) && _nativeNameComparer.Equals (x.NativeName' y.NativeName) && _symbolComparer.Equals (x.Symbol' y.Symbol) && x.SignificantDecimalDigits == y.SignificantDecimalDigits && _separatorComparer.Equals (x.DecimalSeparator' y.DecimalSeparator) && _separatorComparer.Equals (x.GroupSeparator' y.GroupSeparator) && x.GroupSizes.SequenceEqual (y.GroupSizes) && x.PositivePattern == y.PositivePattern && x.NegativePattern == y.NegativePattern && x.IsObsolete == y.IsObsolete && x.Entity.Equals (y.Entity); " is 585.
Long Statement,NMoneys,CharacterReference,F:\newReposMay17\dgg_nmoneys\src\NMoneys\CharacterReference.cs,IsEntityName,The length of the statement  "	return entityName.StartsWith (AMP' StringComparison.Ordinal) && entityName.EndsWith (SEMICOLON' StringComparison.Ordinal); " is 122.
Long Statement,NMoneys,EmbeddedXml,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Providers.cs,ReadInfo,The length of the statement  "	XPathNavigator node = navigator.SelectSingleNode (string.Format (CultureInfo.InvariantCulture' "/currencies/currency[@code='{0}']"' code)); " is 139.
Long Statement,NMoneys,EmbeddedXml,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Providers.cs,ReadInfo,The length of the statement  "	CurrencyInfo info = new CurrencyInfo (code' node.SelectMandatory (englishName)' node.SelectMandatory (nativeName)' node.SelectMandatory (symbol)' node.SelectMandatory (significantDecimalDigits' n => n.ValueAsInt)' node.SelectMandatory (decimalSeparator)' node.SelectMandatory (groupSeparator)' node.SelectMandatory (groupSizes)' node.SelectMandatory (positivePattern' n => n.ValueAsInt)' node.SelectMandatory (negativePattern' n => n.ValueAsInt)' node.SelectOptional (obsolete' n => n.ValueAsBoolean)' node.SelectOptional (entity' n => CurrencyCharacterReferences.Get (n.Value)' CharacterReference.Empty)); " is 606.
Long Statement,NMoneys.Serialization,DataContractSurrogate,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Serialization\DataContractSurrogate.net.cs,BuildSerializer,The length of the statement  "	var serializer = new DataContractJsonSerializer (Type<T> ()' KnownTypes<T> ()' MaxItemsInObjectGraph' IgnoreExtensionDataObject' this' AlwaysEmitTypeInformation); " is 162.
Long Statement,NMoneys.Support,UnicodeSymbol,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\UnicodeSymbol.cs,FromTokenizedCodePoints,The length of the statement  "		int[] codePoints = split (tokenizedCodePoints).Select (cp => Convert.ToInt32 (cp.Trim ()' CultureInfo.InvariantCulture)).ToArray (); " is 132.
Long Statement,NMoneys.Support,UnicodeSymbol,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\UnicodeSymbol.cs,FromTokenizedCodePoints,The length of the statement  "		string symbol = codePoints.Aggregate (string.Empty' (current' codePoint) => current + char.ConvertFromUtf32 (codePoint)); " is 121.
Long Statement,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,FromUnicodes,The length of the statement  "	return unicodes.emptyIfNull ().Aggregate (string.Empty' (current' item) => current + char.ConvertFromUtf32 (Convert.ToInt32 (item.Trim ()' CultureInfo.InvariantCulture))); " is 171.
Empty Catch Block,NMoneys.Support,Enumeration,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Enumeration.cs,checkDefined,The method has an empty catch block.
Magic Number,NMoneys,Money,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Money.Creation.cs,GetHashCode,The following statement contains a magic number: unchecked {  	return (CurrencyCode.GetHashCode () * 397) ^ Amount.GetHashCode ();  }  
Magic Number,NMoneys,Money,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Money.Creation.cs,GetHashCode,The following statement contains a magic number: return (CurrencyCode.GetHashCode () * 397) ^ Amount.GetHashCode ();  
Magic Number,NMoneys,CurrencyCharacterReferences,F:\newReposMay17\dgg_nmoneys\src\NMoneys\CurrencyCharacterReferences.cs,CurrencyCharacterReferences,The following statement contains a magic number: _currencyReferences = new Dictionary<string' CharacterReference> (6' StringComparer.OrdinalIgnoreCase) {  	{  		"cent"'  		Cent = new CharacterReference ("cent")  	}'  	{  		"pound"'  		Pound = new CharacterReference ("pound")  	}'  	{  		"curren"'  		Curren = new CharacterReference ("curren")  	}'  	{  		"yen"'  		Yen = new CharacterReference ("yen")  	}'  	{  		"fnof"'  		Fnof = new CharacterReference ("fnof")  	}'  	{  		"euro"'  		Euro = new CharacterReference ("euro")  	}  };  
Magic Number,NMoneys,CharacterReference,F:\newReposMay17\dgg_nmoneys\src\NMoneys\CharacterReference.cs,toSimpleName,The following statement contains a magic number: return lower (complexEntityName.Substring (1' complexEntityName.Length - 2));  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  case 4:  case 14:  case 15:  	numberNegativePattern = 0;  	break;  case 1:  case 2:  case 5:  case 8:  case 12:  	numberNegativePattern = 1;  	break;  case 9:  	numberNegativePattern = 2;  	break;  case 3:  case 6:  case 7:  case 11:  case 13:  	numberNegativePattern = 3;  	break;  case 10:  	numberNegativePattern = 4;  	break;  default:  	new Range<int> (0.Close ()' 15.Close ()).AssertArgument (nameof (currencyNegativePattern)' currencyNegativePattern);  	break;  }  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  case 4:  case 14:  case 15:  	numberNegativePattern = 0;  	break;  case 1:  case 2:  case 5:  case 8:  case 12:  	numberNegativePattern = 1;  	break;  case 9:  	numberNegativePattern = 2;  	break;  case 3:  case 6:  case 7:  case 11:  case 13:  	numberNegativePattern = 3;  	break;  case 10:  	numberNegativePattern = 4;  	break;  default:  	new Range<int> (0.Close ()' 15.Close ()).AssertArgument (nameof (currencyNegativePattern)' currencyNegativePattern);  	break;  }  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  case 4:  case 14:  case 15:  	numberNegativePattern = 0;  	break;  case 1:  case 2:  case 5:  case 8:  case 12:  	numberNegativePattern = 1;  	break;  case 9:  	numberNegativePattern = 2;  	break;  case 3:  case 6:  case 7:  case 11:  case 13:  	numberNegativePattern = 3;  	break;  case 10:  	numberNegativePattern = 4;  	break;  default:  	new Range<int> (0.Close ()' 15.Close ()).AssertArgument (nameof (currencyNegativePattern)' currencyNegativePattern);  	break;  }  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  case 4:  case 14:  case 15:  	numberNegativePattern = 0;  	break;  case 1:  case 2:  case 5:  case 8:  case 12:  	numberNegativePattern = 1;  	break;  case 9:  	numberNegativePattern = 2;  	break;  case 3:  case 6:  case 7:  case 11:  case 13:  	numberNegativePattern = 3;  	break;  case 10:  	numberNegativePattern = 4;  	break;  default:  	new Range<int> (0.Close ()' 15.Close ()).AssertArgument (nameof (currencyNegativePattern)' currencyNegativePattern);  	break;  }  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  case 4:  case 14:  case 15:  	numberNegativePattern = 0;  	break;  case 1:  case 2:  case 5:  case 8:  case 12:  	numberNegativePattern = 1;  	break;  case 9:  	numberNegativePattern = 2;  	break;  case 3:  case 6:  case 7:  case 11:  case 13:  	numberNegativePattern = 3;  	break;  case 10:  	numberNegativePattern = 4;  	break;  default:  	new Range<int> (0.Close ()' 15.Close ()).AssertArgument (nameof (currencyNegativePattern)' currencyNegativePattern);  	break;  }  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  case 4:  case 14:  case 15:  	numberNegativePattern = 0;  	break;  case 1:  case 2:  case 5:  case 8:  case 12:  	numberNegativePattern = 1;  	break;  case 9:  	numberNegativePattern = 2;  	break;  case 3:  case 6:  case 7:  case 11:  case 13:  	numberNegativePattern = 3;  	break;  case 10:  	numberNegativePattern = 4;  	break;  default:  	new Range<int> (0.Close ()' 15.Close ()).AssertArgument (nameof (currencyNegativePattern)' currencyNegativePattern);  	break;  }  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  case 4:  case 14:  case 15:  	numberNegativePattern = 0;  	break;  case 1:  case 2:  case 5:  case 8:  case 12:  	numberNegativePattern = 1;  	break;  case 9:  	numberNegativePattern = 2;  	break;  case 3:  case 6:  case 7:  case 11:  case 13:  	numberNegativePattern = 3;  	break;  case 10:  	numberNegativePattern = 4;  	break;  default:  	new Range<int> (0.Close ()' 15.Close ()).AssertArgument (nameof (currencyNegativePattern)' currencyNegativePattern);  	break;  }  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  case 4:  case 14:  case 15:  	numberNegativePattern = 0;  	break;  case 1:  case 2:  case 5:  case 8:  case 12:  	numberNegativePattern = 1;  	break;  case 9:  	numberNegativePattern = 2;  	break;  case 3:  case 6:  case 7:  case 11:  case 13:  	numberNegativePattern = 3;  	break;  case 10:  	numberNegativePattern = 4;  	break;  default:  	new Range<int> (0.Close ()' 15.Close ()).AssertArgument (nameof (currencyNegativePattern)' currencyNegativePattern);  	break;  }  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  case 4:  case 14:  case 15:  	numberNegativePattern = 0;  	break;  case 1:  case 2:  case 5:  case 8:  case 12:  	numberNegativePattern = 1;  	break;  case 9:  	numberNegativePattern = 2;  	break;  case 3:  case 6:  case 7:  case 11:  case 13:  	numberNegativePattern = 3;  	break;  case 10:  	numberNegativePattern = 4;  	break;  default:  	new Range<int> (0.Close ()' 15.Close ()).AssertArgument (nameof (currencyNegativePattern)' currencyNegativePattern);  	break;  }  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  case 4:  case 14:  case 15:  	numberNegativePattern = 0;  	break;  case 1:  case 2:  case 5:  case 8:  case 12:  	numberNegativePattern = 1;  	break;  case 9:  	numberNegativePattern = 2;  	break;  case 3:  case 6:  case 7:  case 11:  case 13:  	numberNegativePattern = 3;  	break;  case 10:  	numberNegativePattern = 4;  	break;  default:  	new Range<int> (0.Close ()' 15.Close ()).AssertArgument (nameof (currencyNegativePattern)' currencyNegativePattern);  	break;  }  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  case 4:  case 14:  case 15:  	numberNegativePattern = 0;  	break;  case 1:  case 2:  case 5:  case 8:  case 12:  	numberNegativePattern = 1;  	break;  case 9:  	numberNegativePattern = 2;  	break;  case 3:  case 6:  case 7:  case 11:  case 13:  	numberNegativePattern = 3;  	break;  case 10:  	numberNegativePattern = 4;  	break;  default:  	new Range<int> (0.Close ()' 15.Close ()).AssertArgument (nameof (currencyNegativePattern)' currencyNegativePattern);  	break;  }  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  case 4:  case 14:  case 15:  	numberNegativePattern = 0;  	break;  case 1:  case 2:  case 5:  case 8:  case 12:  	numberNegativePattern = 1;  	break;  case 9:  	numberNegativePattern = 2;  	break;  case 3:  case 6:  case 7:  case 11:  case 13:  	numberNegativePattern = 3;  	break;  case 10:  	numberNegativePattern = 4;  	break;  default:  	new Range<int> (0.Close ()' 15.Close ()).AssertArgument (nameof (currencyNegativePattern)' currencyNegativePattern);  	break;  }  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  case 4:  case 14:  case 15:  	numberNegativePattern = 0;  	break;  case 1:  case 2:  case 5:  case 8:  case 12:  	numberNegativePattern = 1;  	break;  case 9:  	numberNegativePattern = 2;  	break;  case 3:  case 6:  case 7:  case 11:  case 13:  	numberNegativePattern = 3;  	break;  case 10:  	numberNegativePattern = 4;  	break;  default:  	new Range<int> (0.Close ()' 15.Close ()).AssertArgument (nameof (currencyNegativePattern)' currencyNegativePattern);  	break;  }  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  case 4:  case 14:  case 15:  	numberNegativePattern = 0;  	break;  case 1:  case 2:  case 5:  case 8:  case 12:  	numberNegativePattern = 1;  	break;  case 9:  	numberNegativePattern = 2;  	break;  case 3:  case 6:  case 7:  case 11:  case 13:  	numberNegativePattern = 3;  	break;  case 10:  	numberNegativePattern = 4;  	break;  default:  	new Range<int> (0.Close ()' 15.Close ()).AssertArgument (nameof (currencyNegativePattern)' currencyNegativePattern);  	break;  }  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  case 4:  case 14:  case 15:  	numberNegativePattern = 0;  	break;  case 1:  case 2:  case 5:  case 8:  case 12:  	numberNegativePattern = 1;  	break;  case 9:  	numberNegativePattern = 2;  	break;  case 3:  case 6:  case 7:  case 11:  case 13:  	numberNegativePattern = 3;  	break;  case 10:  	numberNegativePattern = 4;  	break;  default:  	new Range<int> (0.Close ()' 15.Close ()).AssertArgument (nameof (currencyNegativePattern)' currencyNegativePattern);  	break;  }  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  case 4:  case 14:  case 15:  	numberNegativePattern = 0;  	break;  case 1:  case 2:  case 5:  case 8:  case 12:  	numberNegativePattern = 1;  	break;  case 9:  	numberNegativePattern = 2;  	break;  case 3:  case 6:  case 7:  case 11:  case 13:  	numberNegativePattern = 3;  	break;  case 10:  	numberNegativePattern = 4;  	break;  default:  	new Range<int> (0.Close ()' 15.Close ()).AssertArgument (nameof (currencyNegativePattern)' currencyNegativePattern);  	break;  }  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  case 4:  case 14:  case 15:  	numberNegativePattern = 0;  	break;  case 1:  case 2:  case 5:  case 8:  case 12:  	numberNegativePattern = 1;  	break;  case 9:  	numberNegativePattern = 2;  	break;  case 3:  case 6:  case 7:  case 11:  case 13:  	numberNegativePattern = 3;  	break;  case 10:  	numberNegativePattern = 4;  	break;  default:  	new Range<int> (0.Close ()' 15.Close ()).AssertArgument (nameof (currencyNegativePattern)' currencyNegativePattern);  	break;  }  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: switch (currencyNegativePattern) {  case 0:  case 4:  case 14:  case 15:  	numberNegativePattern = 0;  	break;  case 1:  case 2:  case 5:  case 8:  case 12:  	numberNegativePattern = 1;  	break;  case 9:  	numberNegativePattern = 2;  	break;  case 3:  case 6:  case 7:  case 11:  case 13:  	numberNegativePattern = 3;  	break;  case 10:  	numberNegativePattern = 4;  	break;  default:  	new Range<int> (0.Close ()' 15.Close ()).AssertArgument (nameof (currencyNegativePattern)' currencyNegativePattern);  	break;  }  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: numberNegativePattern = 2;  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: numberNegativePattern = 3;  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: numberNegativePattern = 4;  
Magic Number,NMoneys.Support.Ext,Extensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys\Support\Extensions.cs,TranslateNegativePattern,The following statement contains a magic number: new Range<int> (0.Close ()' 15.Close ()).AssertArgument (nameof (currencyNegativePattern)' currencyNegativePattern);  
