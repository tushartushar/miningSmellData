Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NMoneys.Serialization.Json_NET,CurrencyStyleReadExtensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Serialization\Json_NET\Json_NET.cs,GetValue,Cyclomatic complexity of the method is 10
Complex Method,NMoneys.Serialization.Json_NET,CurrencyStyleWriteExtensions,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Serialization\Json_NET\Json_NET.cs,WriteValue,Cyclomatic complexity of the method is 8
Long Statement,NMoneys.Serialization.Entity_Framework,MonetaryQuantity,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Serialization\Entity_Framework\MonetaryQuantity.cs,ToMoney,The length of the statement  "		string currency = string.IsNullOrWhiteSpace (quantity.Currency) ? CurrencyIsoCode.XXX.AlphabeticCode () : quantity.Currency; " is 124.
Long Statement,NMoneys.Serialization.Json_NET,CanonicalMoneyConverter,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Serialization\Json_NET\Json_NET.cs,ReadJson,The length of the statement  "	return new Money (_reader.ReadAmount (token' serializer.ContractResolver)' _reader.ReadCurrencyCode (token' serializer.ContractResolver)); " is 138.
Long Statement,NMoneys.Serialization.Json_NET,CanonicalNullableMoneyConverter,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Serialization\Json_NET\Json_NET.cs,ReadJson,The length of the statement  "		read = new Money (_reader.ReadAmount (token' serializer.ContractResolver)' _reader.ReadCurrencyCode (token' serializer.ContractResolver)); " is 138.
Long Statement,NMoneys.Serialization.Json_NET,DefaultMoneyConverter,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Serialization\Json_NET\Json_NET.cs,ReadJson,The length of the statement  "	return new Money (_reader.ReadAmount (token' serializer.ContractResolver)' _reader.ReadCurrencyCode (token' serializer.ContractResolver)); " is 138.
Long Statement,NMoneys.Serialization.Json_NET,DefaultNullableMoneyConverter,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Serialization\Json_NET\Json_NET.cs,ReadJson,The length of the statement  "		read = new Money (_reader.ReadAmount (token' serializer.ContractResolver)' _reader.ReadCurrencyCode (token' serializer.ContractResolver)); " is 138.
Long Statement,NMoneys.Serialization.Json_NET,CurrencyLessMoneyConverter,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Serialization\Json_NET\Json_NET.cs,WriteJson,The length of the statement  "	throw new NotImplementedException ("Deserialization only. Moneys should never be serialized without currency information."); " is 124.
Long Statement,NMoneys.Serialization.Json_NET,CurrencyLessMoneyConverter,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Serialization\Json_NET\Json_NET.cs,ReadJson,The length of the statement  "	return new Money (_reader.ReadAmount (token' serializer.ContractResolver)' _reader.ReadCurrencyCode (token' serializer.ContractResolver)); " is 138.
Long Statement,NMoneys.Serialization.Json_NET,CurrencyLessMoneyReader,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Serialization\Json_NET\Json_NET.cs,ReadAmount,The length of the statement  "	return token.Type == JTokenType.Object && token.HasValues ? token.Values ().First ().Value<decimal> () : token.Value<decimal> (); " is 129.
Long Statement,NMoneys.Serialization.Mongo_DB,DefaultMoneyWriter,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Serialization\Mongo_DB\Mongo_DB.cs,writeCurrency,The length of the statement  "	currency.GetSerializer (typeof(CurrencyIsoCode)).Serialize (writer' typeof(CurrencyIsoCode)' instance.CurrencyCode' currency.SerializationOptions); " is 147.
Long Statement,NMoneys.Serialization.Mongo_DB,DefaultMoneyReader,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Serialization\Mongo_DB\Mongo_DB.cs,readCurrency,The length of the statement  "	var currencyCode = (CurrencyIsoCode)currencyMap.GetSerializer (typeof(CurrencyIsoCode)).Deserialize (reader' typeof(CurrencyIsoCode)' currencyMap.SerializationOptions); " is 168.
Long Statement,NMoneys.Serialization.Service_Stack,CurrencyLessMoneySerializer,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Serialization\Service_Stack\Service_Stack.cs,Deserialize,The length of the statement  "	decimal amount = instanceValue == null ? JsonSerializer.DeserializeFromString<decimal> (json) : decimal.Parse (instanceValue' NumberStyles.Number' CultureInfo.InvariantCulture); " is 177.
Magic Number,NMoneys.Serialization.Entity_Framework,MonetaryQuantityCanonicalConfigurator,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Serialization\Entity_Framework\MonetaryQuantityCanonicalConfigurator.cs,Configure,The following statement contains a magic number: modelBuilder.ComplexType<MonetaryQuantity> ().Property (c => c.Currency).IsFixedLength ().HasMaxLength (3);  
Magic Number,NMoneys.Serialization.Entity_Framework,MonetaryQuantityCanonicalConfigurator,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Serialization\Entity_Framework\MonetaryQuantityCanonicalConfigurator.cs,Configure,The following statement contains a magic number: modelBuilder.ComplexType<MonetaryQuantity> ().Property (c => c.Amount).HasPrecision (19' 4);  
Magic Number,NMoneys.Serialization.Entity_Framework,MonetaryQuantityCanonicalConfigurator,F:\newReposMay17\dgg_nmoneys\src\NMoneys.Serialization\Entity_Framework\MonetaryQuantityCanonicalConfigurator.cs,Configure,The following statement contains a magic number: modelBuilder.ComplexType<MonetaryQuantity> ().Property (c => c.Amount).HasPrecision (19' 4);  
