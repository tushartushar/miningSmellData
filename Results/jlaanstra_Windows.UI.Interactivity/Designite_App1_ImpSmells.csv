Implementation smell,Namespace,Class,File,Method,Description
Complex Method,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,Cyclomatic complexity of the method is 24
Complex Method,App1.Common,RichTextColumns,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\Common\RichTextColumns.cs,MeasureOverride,Cyclomatic complexity of the method is 8
Long Parameter List,App1.Data,SampleDataCommon,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,SampleDataCommon,The method has 5 parameters.
Long Parameter List,App1.Data,SampleDataItem,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,SampleDataItem,The method has 8 parameters.
Long Parameter List,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,SampleDataGroup,The method has 6 parameters.
Long Parameter List,App1.Common,BooleanToVisibilityConverter,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\Common\BooleanToVisibilityConverter.cs,Convert,The method has 4 parameters.
Long Parameter List,App1.Common,BooleanToVisibilityConverter,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\Common\BooleanToVisibilityConverter.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,App1.Common,BooleanNegationConverter,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\Common\BooleanNegationConverter.cs,Convert,The method has 4 parameters.
Long Parameter List,App1.Common,BooleanNegationConverter,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\Common\BooleanNegationConverter.cs,ConvertBack,The method has 4 parameters.
Long Statement,App1.Common,LayoutAwarePage,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The length of the statement  "	if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) { " is 246.
Long Statement,App1.Common,SuspensionManager,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\Common\SuspensionManager.cs,SaveAsync,The length of the statement  "		StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync (sessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 141.
Long Statement,App1.Common,SuspensionManager,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\Common\SuspensionManager.cs,RegisterFrame,The length of the statement  "		throw new InvalidOperationException ("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 139.
Complex Conditional,App1.Common,LayoutAwarePage,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "(args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)"  is complex.
Complex Conditional,App1.Common,LayoutAwarePage,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)"  is complex.
Complex Conditional,App1.Common,LayoutAwarePage,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)"  is complex.
Empty Catch Block,App1,App,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\App.xaml.cs,OnLaunched,The method has an empty catch block.
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	if (TopItems.Count > 12) {  		TopItems.RemoveAt (12);  	}  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	if (TopItems.Count > 12) {  		TopItems.RemoveAt (12);  	}  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	if (TopItems.Count > 12) {  		TopItems.RemoveAt (12);  	}  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (TopItems.Count > 12) {  	TopItems.RemoveAt (12);  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (TopItems.Count > 12) {  	TopItems.RemoveAt (12);  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: TopItems.RemoveAt (12);  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  } else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  } else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  } else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  } else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  } else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  } else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: TopItems.Add (Items [11]);  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: TopItems.RemoveAt (12);  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	if (Items.Count >= 12) {  		TopItems.Add (Items [11]);  	}  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	if (Items.Count >= 12) {  		TopItems.Add (Items [11]);  	}  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	if (Items.Count >= 12) {  		TopItems.Add (Items [11]);  	}  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (Items.Count >= 12) {  	TopItems.Add (Items [11]);  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (Items.Count >= 12) {  	TopItems.Add (Items [11]);  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: TopItems.Add (Items [11]);  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  }  
Magic Number,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: while (TopItems.Count < Items.Count && TopItems.Count < 12) {  	TopItems.Add (Items [TopItems.Count]);  }  
Magic Number,App1.Common,LayoutAwarePage,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	} else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,App1.Common,LayoutAwarePage,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	} else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,App1.Common,LayoutAwarePage,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	} else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,App1.Common,LayoutAwarePage,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	} else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,App1.Common,LayoutAwarePage,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  	// When the previous key or Alt+Left are pressed navigate back  	args.Handled = true;  	this.GoBack (this' new RoutedEventArgs ());  } else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	args.Handled = true;  	this.GoForward (this' new RoutedEventArgs ());  }  
Magic Number,App1.Common,LayoutAwarePage,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  	// When the previous key or Alt+Left are pressed navigate back  	args.Handled = true;  	this.GoBack (this' new RoutedEventArgs ());  } else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	args.Handled = true;  	this.GoForward (this' new RoutedEventArgs ());  }  
Magic Number,App1.Common,LayoutAwarePage,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	args.Handled = true;  	this.GoForward (this' new RoutedEventArgs ());  }  
Missing Default,App1.Data,SampleDataGroup,D:\newReposJune17\jlaanstra_Windows.UI.Interactivity\App1\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following switch statement is missing a default case: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
