Implementation smell,Namespace,Class,File,Method,Description
Magic Number,CrystalQuartz.WebFramework.Request,AbstractFileRequestHandler,C:\repos\guryanovev_CrystalQuartz\src\CrystalQuartz.WebFramework\Request\AbstractFileRequestHandler.cs,WriteResourceToStream,The following statement contains a magic number: if (inputStream == null)              {                  return new RequestHandlingResult(true' new Response(null' 404' null)); // todo              }
Magic Number,CrystalQuartz.WebFramework.Request,AbstractFileRequestHandler,C:\repos\guryanovev_CrystalQuartz\src\CrystalQuartz.WebFramework\Request\AbstractFileRequestHandler.cs,WriteResourceToStream,The following statement contains a magic number: return new RequestHandlingResult(                  true'                  new Response(contentType' 200' outputStream =>                  {                      using (inputStream)                      {                          var buffer = new byte[Math.Min(inputStream.Length' 4096)];                          var readLength = inputStream.Read(buffer' 0' buffer.Length);                            while (readLength > 0)                          {                              outputStream.Write(buffer' 0' readLength);                              readLength = inputStream.Read(buffer' 0' buffer.Length);                          }                      }                  }));
Magic Number,CrystalQuartz.WebFramework.Request,AbstractFileRequestHandler,C:\repos\guryanovev_CrystalQuartz\src\CrystalQuartz.WebFramework\Request\AbstractFileRequestHandler.cs,WriteResourceToStream,The following statement contains a magic number: return new RequestHandlingResult(                  true'                  new Response(contentType' 200' outputStream =>                  {                      using (inputStream)                      {                          var buffer = new byte[Math.Min(inputStream.Length' 4096)];                          var readLength = inputStream.Read(buffer' 0' buffer.Length);                            while (readLength > 0)                          {                              outputStream.Write(buffer' 0' readLength);                              readLength = inputStream.Read(buffer' 0' buffer.Length);                          }                      }                  }));
