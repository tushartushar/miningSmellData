Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The length of the statement  "					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees))); " is 153.
Long Statement,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The length of the statement  "					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150)); " is 163.
Long Statement,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The length of the statement  "				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3))); " is 170.
Long Statement,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The length of the statement  "				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90))); " is 125.
Long Statement,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The length of the statement  "				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2))); " is 150.
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer simpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D simpleImageGraphics2D = simpleImage.NewGraphics2D();  				// clear the image to white  				simpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				simpleImageGraphics2D.Circle(50' 50' 30' RGBA_Bytes.Blue);  				// draw a line  				simpleImageGraphics2D.Line(10' 100' 520' 50' new RGBA_Bytes(20' 200' 200));  				// draw a filled box  				simpleImageGraphics2D.FillRectangle(60' 260' 200' 280' RGBA_Bytes.Yellow);  				// and an outline around it  				simpleImageGraphics2D.Rectangle(60' 260' 200' 280' RGBA_Bytes.Magenta);  				// draw some text  				simpleImageGraphics2D.DrawString("A Simple Example"' 300' 400' 20);    				// and save this image out  				ImageTgaIO.Save(simpleImage' "SimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
Magic Number,MatterHackers.Agg,SimpleDrawAndSave,C:\repos\MatterHackers_agg-sharp\examples\SimpleDrawAndSave\SimpleDrawAndSave.cs,Main,The following statement contains a magic number: {  				ImageBuffer lessSimpleImage = new ImageBuffer(640' 480' 32' new BlenderBGRA());  				Graphics2D lessSimpleImageGraphics2D = lessSimpleImage.NewGraphics2D();  				// clear the image to white  				lessSimpleImageGraphics2D.Clear(RGBA_Bytes.White);  				// draw a circle  				Ellipse ellipseTest = new Ellipse(0' 0' 100' 50);  				for (double angleDegrees = 0; angleDegrees < 180; angleDegrees += 22.5)  				{  					VertexSourceApplyTransform rotatedTransform = new VertexSourceApplyTransform(ellipseTest' Affine.NewRotation(MathHelper.DegreesToRadians(angleDegrees)));  					VertexSourceApplyTransform rotatedAndTranslatedTransform = new VertexSourceApplyTransform(rotatedTransform' Affine.NewTranslation(lessSimpleImage.Width / 2' 150));  					lessSimpleImageGraphics2D.Render(rotatedAndTranslatedTransform' RGBA_Bytes.Yellow);  					Stroke ellipseOutline = new Stroke(rotatedAndTranslatedTransform' 3);  					lessSimpleImageGraphics2D.Render(ellipseOutline' RGBA_Bytes.Blue);  				}    				// and a little polygon  				PathStorage littlePoly = new PathStorage();  				littlePoly.MoveTo(50' 50);  				littlePoly.LineTo(150' 50);  				littlePoly.LineTo(200' 200);  				littlePoly.LineTo(50' 150);  				littlePoly.LineTo(50' 50);  				lessSimpleImageGraphics2D.Render(littlePoly' RGBA_Bytes.Cyan);    				// draw some text  				TypeFacePrinter textPrinter = new TypeFacePrinter("Printing from a printer"' 30' justification: Justification.Center);  				IVertexSource translatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewTranslation(new Vector2(lessSimpleImage.Width / 2' lessSimpleImage.Height / 4 * 3)));  				lessSimpleImageGraphics2D.Render(translatedText' RGBA_Bytes.Red);  				Stroke strokedText = new Stroke(translatedText);  				lessSimpleImageGraphics2D.Render(strokedText' RGBA_Bytes.Black);    				IVertexSource rotatedText = new VertexSourceApplyTransform(textPrinter' Affine.NewRotation(MathHelper.DegreesToRadians(90)));  				IVertexSource rotatedTranslatedText = new VertexSourceApplyTransform(rotatedText' Affine.NewTranslation(new Vector2(40' lessSimpleImage.Height / 2)));  				lessSimpleImageGraphics2D.Render(rotatedTranslatedText' RGBA_Bytes.Black);    				// and save this image out  				ImageTgaIO.Save(lessSimpleImage' "LessSimpleDrawAndSave.tga");  			}
