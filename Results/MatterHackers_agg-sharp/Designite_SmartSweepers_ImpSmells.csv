Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,Render,Cyclomatic complexity of the method is 11
Long Parameter List,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,CController,The method has 9 parameters. Parameters: hwndMain' iNumSweepers' iNumMines' _dMutationRate' _dCrossoverRate' dMaxPerturbation' NumElite' NumCopiesElite' NumTicksPerGeneration
Long Statement,SmartSweeper,SmartSweepersApplication,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\SmartSweepers.cs,OnUpdate,The length of the statement  "			rtri += 0.2f;                                                       // Increase The Rotation Variable For The Triangle ( NEW ) " is 126.
Long Statement,SmartSweeper,SmartSweepersApplication,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\SmartSweepers.cs,OnUpdate,The length of the statement  "			rquad -= 0.15f;                                                     // Decrease The Rotation Variable For The Quad ( NEW ) " is 122.
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,PlotStats,The following statement contains a magic number: MatterHackers.Agg.UI.TextWidget InfoText = new MatterHackers.Agg.UI.TextWidget(s' 9);
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,PlotStats,The following statement contains a magic number: InfoText.OriginRelativeParent = new Vector2(5' 30);
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,PlotStats,The following statement contains a magic number: InfoText.OriginRelativeParent = new Vector2(5' 30);
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,PlotStats,The following statement contains a magic number: InfoText = new MatterHackers.Agg.UI.TextWidget(s' 9);
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,PlotStats,The following statement contains a magic number: InfoText.OriginRelativeParent = new Vector2(5' 45);
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,PlotStats,The following statement contains a magic number: InfoText.OriginRelativeParent = new Vector2(5' 45);
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,PlotStats,The following statement contains a magic number: double VSlice = (double)(cyClient / ((m_BestFitnessYet + 1) * 2));
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,CController,The following statement contains a magic number: m_SweeperScale = 3;
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,CController,The following statement contains a magic number: for (int i = 0; i < iNumSweepers; ++i)  			{  				m_vecSweepers.Add(new CMinesweeper((int)hwndMain.Width' (int)hwndMain.Height' m_SweeperScale' .3));  			}
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,CController,The following statement contains a magic number: m_BlackPen = new RGBA_Bytes(0' 0' 0' 255);
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,CController,The following statement contains a magic number: m_BluePen = new RGBA_Bytes(0' 0' 255);
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,CController,The following statement contains a magic number: m_RedPen = new RGBA_Bytes(255' 0' 0);
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,CController,The following statement contains a magic number: m_GreenPen = new RGBA_Bytes(0' 150' 0);
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,Render,The following statement contains a magic number: MatterHackers.Agg.UI.TextWidget GenerationText = new MatterHackers.Agg.UI.TextWidget(s' 9);
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,Render,The following statement contains a magic number: GenerationText.OriginRelativeParent = new Vector2(150' 10);
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,Render,The following statement contains a magic number: GenerationText.OriginRelativeParent = new Vector2(150' 10);
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,Render,The following statement contains a magic number: if (!m_bFastRender)  			{  				//render the mines  				for (int i = 0; i < m_vecMines.Count; ++i)  				{  					//grab the vertices for the mine shape  					List<Vector3> mineVB = new List<Vector3>();  					foreach (Vector3 vector in m_MineVB)  					{  						mineVB.Add(vector);  					}    					WorldTransform(mineVB' m_vecMines[i]);    					//draw the mines  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(mineVB[0].x' mineVB[0].y);  					for (int vert = 1; vert < mineVB.Count; ++vert)  					{  						m_LinesToDraw.LineTo(mineVB[vert].x' mineVB[vert].y);  					}    					renderer.Render(m_LinesToDraw' m_BlackPen);  				}    				RGBA_Bytes currentColor = m_RedPen;  				//render the sweepers  				for (int i = 0; i < m_vecSweepers.Count; i++)  				{  					//grab the sweeper vertices  					List<Vector3> sweeperVB = new List<Vector3>();  					foreach (Vector3 vector in m_SweeperVB)  					{  						sweeperVB.Add(vector);  					}    					//transform the vertex buffer  					m_vecSweepers[i].WorldTransform(sweeperVB);    					//draw the sweeper left track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[0].x' sweeperVB[0].y);  					for (int vert = 1; vert < 4; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}    					if (i == m_pGA.NumElite)  					{  						currentColor = m_BlackPen;  					}    					renderer.Render(m_LinesToDraw' currentColor);    					//draw the sweeper right track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[4].x' sweeperVB[4].y);  					for (int vert = 5; vert < 8; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);    					// draw the body  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[8].x' sweeperVB[8].y);  					m_LinesToDraw.LineTo(sweeperVB[9].x' sweeperVB[9].y);  					m_LinesToDraw.MoveTo(sweeperVB[10].x' sweeperVB[10].y);  					for (int vert = 11; vert < 16; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);  				}  			}  			else  			{  				PlotStats(renderer);  			}
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,Render,The following statement contains a magic number: if (!m_bFastRender)  			{  				//render the mines  				for (int i = 0; i < m_vecMines.Count; ++i)  				{  					//grab the vertices for the mine shape  					List<Vector3> mineVB = new List<Vector3>();  					foreach (Vector3 vector in m_MineVB)  					{  						mineVB.Add(vector);  					}    					WorldTransform(mineVB' m_vecMines[i]);    					//draw the mines  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(mineVB[0].x' mineVB[0].y);  					for (int vert = 1; vert < mineVB.Count; ++vert)  					{  						m_LinesToDraw.LineTo(mineVB[vert].x' mineVB[vert].y);  					}    					renderer.Render(m_LinesToDraw' m_BlackPen);  				}    				RGBA_Bytes currentColor = m_RedPen;  				//render the sweepers  				for (int i = 0; i < m_vecSweepers.Count; i++)  				{  					//grab the sweeper vertices  					List<Vector3> sweeperVB = new List<Vector3>();  					foreach (Vector3 vector in m_SweeperVB)  					{  						sweeperVB.Add(vector);  					}    					//transform the vertex buffer  					m_vecSweepers[i].WorldTransform(sweeperVB);    					//draw the sweeper left track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[0].x' sweeperVB[0].y);  					for (int vert = 1; vert < 4; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}    					if (i == m_pGA.NumElite)  					{  						currentColor = m_BlackPen;  					}    					renderer.Render(m_LinesToDraw' currentColor);    					//draw the sweeper right track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[4].x' sweeperVB[4].y);  					for (int vert = 5; vert < 8; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);    					// draw the body  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[8].x' sweeperVB[8].y);  					m_LinesToDraw.LineTo(sweeperVB[9].x' sweeperVB[9].y);  					m_LinesToDraw.MoveTo(sweeperVB[10].x' sweeperVB[10].y);  					for (int vert = 11; vert < 16; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);  				}  			}  			else  			{  				PlotStats(renderer);  			}
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,Render,The following statement contains a magic number: if (!m_bFastRender)  			{  				//render the mines  				for (int i = 0; i < m_vecMines.Count; ++i)  				{  					//grab the vertices for the mine shape  					List<Vector3> mineVB = new List<Vector3>();  					foreach (Vector3 vector in m_MineVB)  					{  						mineVB.Add(vector);  					}    					WorldTransform(mineVB' m_vecMines[i]);    					//draw the mines  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(mineVB[0].x' mineVB[0].y);  					for (int vert = 1; vert < mineVB.Count; ++vert)  					{  						m_LinesToDraw.LineTo(mineVB[vert].x' mineVB[vert].y);  					}    					renderer.Render(m_LinesToDraw' m_BlackPen);  				}    				RGBA_Bytes currentColor = m_RedPen;  				//render the sweepers  				for (int i = 0; i < m_vecSweepers.Count; i++)  				{  					//grab the sweeper vertices  					List<Vector3> sweeperVB = new List<Vector3>();  					foreach (Vector3 vector in m_SweeperVB)  					{  						sweeperVB.Add(vector);  					}    					//transform the vertex buffer  					m_vecSweepers[i].WorldTransform(sweeperVB);    					//draw the sweeper left track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[0].x' sweeperVB[0].y);  					for (int vert = 1; vert < 4; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}    					if (i == m_pGA.NumElite)  					{  						currentColor = m_BlackPen;  					}    					renderer.Render(m_LinesToDraw' currentColor);    					//draw the sweeper right track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[4].x' sweeperVB[4].y);  					for (int vert = 5; vert < 8; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);    					// draw the body  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[8].x' sweeperVB[8].y);  					m_LinesToDraw.LineTo(sweeperVB[9].x' sweeperVB[9].y);  					m_LinesToDraw.MoveTo(sweeperVB[10].x' sweeperVB[10].y);  					for (int vert = 11; vert < 16; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);  				}  			}  			else  			{  				PlotStats(renderer);  			}
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,Render,The following statement contains a magic number: if (!m_bFastRender)  			{  				//render the mines  				for (int i = 0; i < m_vecMines.Count; ++i)  				{  					//grab the vertices for the mine shape  					List<Vector3> mineVB = new List<Vector3>();  					foreach (Vector3 vector in m_MineVB)  					{  						mineVB.Add(vector);  					}    					WorldTransform(mineVB' m_vecMines[i]);    					//draw the mines  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(mineVB[0].x' mineVB[0].y);  					for (int vert = 1; vert < mineVB.Count; ++vert)  					{  						m_LinesToDraw.LineTo(mineVB[vert].x' mineVB[vert].y);  					}    					renderer.Render(m_LinesToDraw' m_BlackPen);  				}    				RGBA_Bytes currentColor = m_RedPen;  				//render the sweepers  				for (int i = 0; i < m_vecSweepers.Count; i++)  				{  					//grab the sweeper vertices  					List<Vector3> sweeperVB = new List<Vector3>();  					foreach (Vector3 vector in m_SweeperVB)  					{  						sweeperVB.Add(vector);  					}    					//transform the vertex buffer  					m_vecSweepers[i].WorldTransform(sweeperVB);    					//draw the sweeper left track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[0].x' sweeperVB[0].y);  					for (int vert = 1; vert < 4; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}    					if (i == m_pGA.NumElite)  					{  						currentColor = m_BlackPen;  					}    					renderer.Render(m_LinesToDraw' currentColor);    					//draw the sweeper right track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[4].x' sweeperVB[4].y);  					for (int vert = 5; vert < 8; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);    					// draw the body  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[8].x' sweeperVB[8].y);  					m_LinesToDraw.LineTo(sweeperVB[9].x' sweeperVB[9].y);  					m_LinesToDraw.MoveTo(sweeperVB[10].x' sweeperVB[10].y);  					for (int vert = 11; vert < 16; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);  				}  			}  			else  			{  				PlotStats(renderer);  			}
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,Render,The following statement contains a magic number: if (!m_bFastRender)  			{  				//render the mines  				for (int i = 0; i < m_vecMines.Count; ++i)  				{  					//grab the vertices for the mine shape  					List<Vector3> mineVB = new List<Vector3>();  					foreach (Vector3 vector in m_MineVB)  					{  						mineVB.Add(vector);  					}    					WorldTransform(mineVB' m_vecMines[i]);    					//draw the mines  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(mineVB[0].x' mineVB[0].y);  					for (int vert = 1; vert < mineVB.Count; ++vert)  					{  						m_LinesToDraw.LineTo(mineVB[vert].x' mineVB[vert].y);  					}    					renderer.Render(m_LinesToDraw' m_BlackPen);  				}    				RGBA_Bytes currentColor = m_RedPen;  				//render the sweepers  				for (int i = 0; i < m_vecSweepers.Count; i++)  				{  					//grab the sweeper vertices  					List<Vector3> sweeperVB = new List<Vector3>();  					foreach (Vector3 vector in m_SweeperVB)  					{  						sweeperVB.Add(vector);  					}    					//transform the vertex buffer  					m_vecSweepers[i].WorldTransform(sweeperVB);    					//draw the sweeper left track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[0].x' sweeperVB[0].y);  					for (int vert = 1; vert < 4; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}    					if (i == m_pGA.NumElite)  					{  						currentColor = m_BlackPen;  					}    					renderer.Render(m_LinesToDraw' currentColor);    					//draw the sweeper right track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[4].x' sweeperVB[4].y);  					for (int vert = 5; vert < 8; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);    					// draw the body  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[8].x' sweeperVB[8].y);  					m_LinesToDraw.LineTo(sweeperVB[9].x' sweeperVB[9].y);  					m_LinesToDraw.MoveTo(sweeperVB[10].x' sweeperVB[10].y);  					for (int vert = 11; vert < 16; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);  				}  			}  			else  			{  				PlotStats(renderer);  			}
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,Render,The following statement contains a magic number: if (!m_bFastRender)  			{  				//render the mines  				for (int i = 0; i < m_vecMines.Count; ++i)  				{  					//grab the vertices for the mine shape  					List<Vector3> mineVB = new List<Vector3>();  					foreach (Vector3 vector in m_MineVB)  					{  						mineVB.Add(vector);  					}    					WorldTransform(mineVB' m_vecMines[i]);    					//draw the mines  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(mineVB[0].x' mineVB[0].y);  					for (int vert = 1; vert < mineVB.Count; ++vert)  					{  						m_LinesToDraw.LineTo(mineVB[vert].x' mineVB[vert].y);  					}    					renderer.Render(m_LinesToDraw' m_BlackPen);  				}    				RGBA_Bytes currentColor = m_RedPen;  				//render the sweepers  				for (int i = 0; i < m_vecSweepers.Count; i++)  				{  					//grab the sweeper vertices  					List<Vector3> sweeperVB = new List<Vector3>();  					foreach (Vector3 vector in m_SweeperVB)  					{  						sweeperVB.Add(vector);  					}    					//transform the vertex buffer  					m_vecSweepers[i].WorldTransform(sweeperVB);    					//draw the sweeper left track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[0].x' sweeperVB[0].y);  					for (int vert = 1; vert < 4; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}    					if (i == m_pGA.NumElite)  					{  						currentColor = m_BlackPen;  					}    					renderer.Render(m_LinesToDraw' currentColor);    					//draw the sweeper right track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[4].x' sweeperVB[4].y);  					for (int vert = 5; vert < 8; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);    					// draw the body  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[8].x' sweeperVB[8].y);  					m_LinesToDraw.LineTo(sweeperVB[9].x' sweeperVB[9].y);  					m_LinesToDraw.MoveTo(sweeperVB[10].x' sweeperVB[10].y);  					for (int vert = 11; vert < 16; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);  				}  			}  			else  			{  				PlotStats(renderer);  			}
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,Render,The following statement contains a magic number: if (!m_bFastRender)  			{  				//render the mines  				for (int i = 0; i < m_vecMines.Count; ++i)  				{  					//grab the vertices for the mine shape  					List<Vector3> mineVB = new List<Vector3>();  					foreach (Vector3 vector in m_MineVB)  					{  						mineVB.Add(vector);  					}    					WorldTransform(mineVB' m_vecMines[i]);    					//draw the mines  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(mineVB[0].x' mineVB[0].y);  					for (int vert = 1; vert < mineVB.Count; ++vert)  					{  						m_LinesToDraw.LineTo(mineVB[vert].x' mineVB[vert].y);  					}    					renderer.Render(m_LinesToDraw' m_BlackPen);  				}    				RGBA_Bytes currentColor = m_RedPen;  				//render the sweepers  				for (int i = 0; i < m_vecSweepers.Count; i++)  				{  					//grab the sweeper vertices  					List<Vector3> sweeperVB = new List<Vector3>();  					foreach (Vector3 vector in m_SweeperVB)  					{  						sweeperVB.Add(vector);  					}    					//transform the vertex buffer  					m_vecSweepers[i].WorldTransform(sweeperVB);    					//draw the sweeper left track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[0].x' sweeperVB[0].y);  					for (int vert = 1; vert < 4; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}    					if (i == m_pGA.NumElite)  					{  						currentColor = m_BlackPen;  					}    					renderer.Render(m_LinesToDraw' currentColor);    					//draw the sweeper right track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[4].x' sweeperVB[4].y);  					for (int vert = 5; vert < 8; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);    					// draw the body  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[8].x' sweeperVB[8].y);  					m_LinesToDraw.LineTo(sweeperVB[9].x' sweeperVB[9].y);  					m_LinesToDraw.MoveTo(sweeperVB[10].x' sweeperVB[10].y);  					for (int vert = 11; vert < 16; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);  				}  			}  			else  			{  				PlotStats(renderer);  			}
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,Render,The following statement contains a magic number: if (!m_bFastRender)  			{  				//render the mines  				for (int i = 0; i < m_vecMines.Count; ++i)  				{  					//grab the vertices for the mine shape  					List<Vector3> mineVB = new List<Vector3>();  					foreach (Vector3 vector in m_MineVB)  					{  						mineVB.Add(vector);  					}    					WorldTransform(mineVB' m_vecMines[i]);    					//draw the mines  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(mineVB[0].x' mineVB[0].y);  					for (int vert = 1; vert < mineVB.Count; ++vert)  					{  						m_LinesToDraw.LineTo(mineVB[vert].x' mineVB[vert].y);  					}    					renderer.Render(m_LinesToDraw' m_BlackPen);  				}    				RGBA_Bytes currentColor = m_RedPen;  				//render the sweepers  				for (int i = 0; i < m_vecSweepers.Count; i++)  				{  					//grab the sweeper vertices  					List<Vector3> sweeperVB = new List<Vector3>();  					foreach (Vector3 vector in m_SweeperVB)  					{  						sweeperVB.Add(vector);  					}    					//transform the vertex buffer  					m_vecSweepers[i].WorldTransform(sweeperVB);    					//draw the sweeper left track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[0].x' sweeperVB[0].y);  					for (int vert = 1; vert < 4; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}    					if (i == m_pGA.NumElite)  					{  						currentColor = m_BlackPen;  					}    					renderer.Render(m_LinesToDraw' currentColor);    					//draw the sweeper right track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[4].x' sweeperVB[4].y);  					for (int vert = 5; vert < 8; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);    					// draw the body  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[8].x' sweeperVB[8].y);  					m_LinesToDraw.LineTo(sweeperVB[9].x' sweeperVB[9].y);  					m_LinesToDraw.MoveTo(sweeperVB[10].x' sweeperVB[10].y);  					for (int vert = 11; vert < 16; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);  				}  			}  			else  			{  				PlotStats(renderer);  			}
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,Render,The following statement contains a magic number: if (!m_bFastRender)  			{  				//render the mines  				for (int i = 0; i < m_vecMines.Count; ++i)  				{  					//grab the vertices for the mine shape  					List<Vector3> mineVB = new List<Vector3>();  					foreach (Vector3 vector in m_MineVB)  					{  						mineVB.Add(vector);  					}    					WorldTransform(mineVB' m_vecMines[i]);    					//draw the mines  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(mineVB[0].x' mineVB[0].y);  					for (int vert = 1; vert < mineVB.Count; ++vert)  					{  						m_LinesToDraw.LineTo(mineVB[vert].x' mineVB[vert].y);  					}    					renderer.Render(m_LinesToDraw' m_BlackPen);  				}    				RGBA_Bytes currentColor = m_RedPen;  				//render the sweepers  				for (int i = 0; i < m_vecSweepers.Count; i++)  				{  					//grab the sweeper vertices  					List<Vector3> sweeperVB = new List<Vector3>();  					foreach (Vector3 vector in m_SweeperVB)  					{  						sweeperVB.Add(vector);  					}    					//transform the vertex buffer  					m_vecSweepers[i].WorldTransform(sweeperVB);    					//draw the sweeper left track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[0].x' sweeperVB[0].y);  					for (int vert = 1; vert < 4; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}    					if (i == m_pGA.NumElite)  					{  						currentColor = m_BlackPen;  					}    					renderer.Render(m_LinesToDraw' currentColor);    					//draw the sweeper right track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[4].x' sweeperVB[4].y);  					for (int vert = 5; vert < 8; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);    					// draw the body  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[8].x' sweeperVB[8].y);  					m_LinesToDraw.LineTo(sweeperVB[9].x' sweeperVB[9].y);  					m_LinesToDraw.MoveTo(sweeperVB[10].x' sweeperVB[10].y);  					for (int vert = 11; vert < 16; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);  				}  			}  			else  			{  				PlotStats(renderer);  			}
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,Render,The following statement contains a magic number: if (!m_bFastRender)  			{  				//render the mines  				for (int i = 0; i < m_vecMines.Count; ++i)  				{  					//grab the vertices for the mine shape  					List<Vector3> mineVB = new List<Vector3>();  					foreach (Vector3 vector in m_MineVB)  					{  						mineVB.Add(vector);  					}    					WorldTransform(mineVB' m_vecMines[i]);    					//draw the mines  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(mineVB[0].x' mineVB[0].y);  					for (int vert = 1; vert < mineVB.Count; ++vert)  					{  						m_LinesToDraw.LineTo(mineVB[vert].x' mineVB[vert].y);  					}    					renderer.Render(m_LinesToDraw' m_BlackPen);  				}    				RGBA_Bytes currentColor = m_RedPen;  				//render the sweepers  				for (int i = 0; i < m_vecSweepers.Count; i++)  				{  					//grab the sweeper vertices  					List<Vector3> sweeperVB = new List<Vector3>();  					foreach (Vector3 vector in m_SweeperVB)  					{  						sweeperVB.Add(vector);  					}    					//transform the vertex buffer  					m_vecSweepers[i].WorldTransform(sweeperVB);    					//draw the sweeper left track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[0].x' sweeperVB[0].y);  					for (int vert = 1; vert < 4; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}    					if (i == m_pGA.NumElite)  					{  						currentColor = m_BlackPen;  					}    					renderer.Render(m_LinesToDraw' currentColor);    					//draw the sweeper right track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[4].x' sweeperVB[4].y);  					for (int vert = 5; vert < 8; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);    					// draw the body  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[8].x' sweeperVB[8].y);  					m_LinesToDraw.LineTo(sweeperVB[9].x' sweeperVB[9].y);  					m_LinesToDraw.MoveTo(sweeperVB[10].x' sweeperVB[10].y);  					for (int vert = 11; vert < 16; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);  				}  			}  			else  			{  				PlotStats(renderer);  			}
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,Render,The following statement contains a magic number: if (!m_bFastRender)  			{  				//render the mines  				for (int i = 0; i < m_vecMines.Count; ++i)  				{  					//grab the vertices for the mine shape  					List<Vector3> mineVB = new List<Vector3>();  					foreach (Vector3 vector in m_MineVB)  					{  						mineVB.Add(vector);  					}    					WorldTransform(mineVB' m_vecMines[i]);    					//draw the mines  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(mineVB[0].x' mineVB[0].y);  					for (int vert = 1; vert < mineVB.Count; ++vert)  					{  						m_LinesToDraw.LineTo(mineVB[vert].x' mineVB[vert].y);  					}    					renderer.Render(m_LinesToDraw' m_BlackPen);  				}    				RGBA_Bytes currentColor = m_RedPen;  				//render the sweepers  				for (int i = 0; i < m_vecSweepers.Count; i++)  				{  					//grab the sweeper vertices  					List<Vector3> sweeperVB = new List<Vector3>();  					foreach (Vector3 vector in m_SweeperVB)  					{  						sweeperVB.Add(vector);  					}    					//transform the vertex buffer  					m_vecSweepers[i].WorldTransform(sweeperVB);    					//draw the sweeper left track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[0].x' sweeperVB[0].y);  					for (int vert = 1; vert < 4; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}    					if (i == m_pGA.NumElite)  					{  						currentColor = m_BlackPen;  					}    					renderer.Render(m_LinesToDraw' currentColor);    					//draw the sweeper right track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[4].x' sweeperVB[4].y);  					for (int vert = 5; vert < 8; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);    					// draw the body  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[8].x' sweeperVB[8].y);  					m_LinesToDraw.LineTo(sweeperVB[9].x' sweeperVB[9].y);  					m_LinesToDraw.MoveTo(sweeperVB[10].x' sweeperVB[10].y);  					for (int vert = 11; vert < 16; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);  				}  			}  			else  			{  				PlotStats(renderer);  			}
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,Render,The following statement contains a magic number: if (!m_bFastRender)  			{  				//render the mines  				for (int i = 0; i < m_vecMines.Count; ++i)  				{  					//grab the vertices for the mine shape  					List<Vector3> mineVB = new List<Vector3>();  					foreach (Vector3 vector in m_MineVB)  					{  						mineVB.Add(vector);  					}    					WorldTransform(mineVB' m_vecMines[i]);    					//draw the mines  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(mineVB[0].x' mineVB[0].y);  					for (int vert = 1; vert < mineVB.Count; ++vert)  					{  						m_LinesToDraw.LineTo(mineVB[vert].x' mineVB[vert].y);  					}    					renderer.Render(m_LinesToDraw' m_BlackPen);  				}    				RGBA_Bytes currentColor = m_RedPen;  				//render the sweepers  				for (int i = 0; i < m_vecSweepers.Count; i++)  				{  					//grab the sweeper vertices  					List<Vector3> sweeperVB = new List<Vector3>();  					foreach (Vector3 vector in m_SweeperVB)  					{  						sweeperVB.Add(vector);  					}    					//transform the vertex buffer  					m_vecSweepers[i].WorldTransform(sweeperVB);    					//draw the sweeper left track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[0].x' sweeperVB[0].y);  					for (int vert = 1; vert < 4; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}    					if (i == m_pGA.NumElite)  					{  						currentColor = m_BlackPen;  					}    					renderer.Render(m_LinesToDraw' currentColor);    					//draw the sweeper right track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[4].x' sweeperVB[4].y);  					for (int vert = 5; vert < 8; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);    					// draw the body  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[8].x' sweeperVB[8].y);  					m_LinesToDraw.LineTo(sweeperVB[9].x' sweeperVB[9].y);  					m_LinesToDraw.MoveTo(sweeperVB[10].x' sweeperVB[10].y);  					for (int vert = 11; vert < 16; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);  				}  			}  			else  			{  				PlotStats(renderer);  			}
Magic Number,SmartSweeper,CController,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\Controller.cs,Render,The following statement contains a magic number: if (!m_bFastRender)  			{  				//render the mines  				for (int i = 0; i < m_vecMines.Count; ++i)  				{  					//grab the vertices for the mine shape  					List<Vector3> mineVB = new List<Vector3>();  					foreach (Vector3 vector in m_MineVB)  					{  						mineVB.Add(vector);  					}    					WorldTransform(mineVB' m_vecMines[i]);    					//draw the mines  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(mineVB[0].x' mineVB[0].y);  					for (int vert = 1; vert < mineVB.Count; ++vert)  					{  						m_LinesToDraw.LineTo(mineVB[vert].x' mineVB[vert].y);  					}    					renderer.Render(m_LinesToDraw' m_BlackPen);  				}    				RGBA_Bytes currentColor = m_RedPen;  				//render the sweepers  				for (int i = 0; i < m_vecSweepers.Count; i++)  				{  					//grab the sweeper vertices  					List<Vector3> sweeperVB = new List<Vector3>();  					foreach (Vector3 vector in m_SweeperVB)  					{  						sweeperVB.Add(vector);  					}    					//transform the vertex buffer  					m_vecSweepers[i].WorldTransform(sweeperVB);    					//draw the sweeper left track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[0].x' sweeperVB[0].y);  					for (int vert = 1; vert < 4; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}    					if (i == m_pGA.NumElite)  					{  						currentColor = m_BlackPen;  					}    					renderer.Render(m_LinesToDraw' currentColor);    					//draw the sweeper right track  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[4].x' sweeperVB[4].y);  					for (int vert = 5; vert < 8; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);    					// draw the body  					m_LinesToDraw.remove_all();  					m_LinesToDraw.MoveTo(sweeperVB[8].x' sweeperVB[8].y);  					m_LinesToDraw.LineTo(sweeperVB[9].x' sweeperVB[9].y);  					m_LinesToDraw.MoveTo(sweeperVB[10].x' sweeperVB[10].y);  					for (int vert = 11; vert < 16; ++vert)  					{  						m_LinesToDraw.LineTo(sweeperVB[vert].x' sweeperVB[vert].y);  					}  					renderer.Render(m_LinesToDraw' currentColor);  				}  			}  			else  			{  				PlotStats(renderer);  			}
Magic Number,SmartSweeper,CMinesweeper,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\MineSweeper.cs,CMinesweeper,The following statement contains a magic number: m_ItsBrain = new CNeuralNet(4' 2' 1' 6' -1' 1);
Magic Number,SmartSweeper,CMinesweeper,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\MineSweeper.cs,CMinesweeper,The following statement contains a magic number: m_ItsBrain = new CNeuralNet(4' 2' 1' 6' -1' 1);
Magic Number,SmartSweeper,CMinesweeper,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\MineSweeper.cs,CMinesweeper,The following statement contains a magic number: m_ItsBrain = new CNeuralNet(4' 2' 1' 6' -1' 1);
Magic Number,SmartSweeper,CMinesweeper,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\MineSweeper.cs,CMinesweeper,The following statement contains a magic number: m_dRotation = (Rand.NextDouble() * (System.Math.PI * 2));
Magic Number,SmartSweeper,CMinesweeper,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\MineSweeper.cs,CMinesweeper,The following statement contains a magic number: m_lTrack = (0.16);
Magic Number,SmartSweeper,CMinesweeper,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\MineSweeper.cs,CMinesweeper,The following statement contains a magic number: m_rTrack = (0.16);
Magic Number,SmartSweeper,CMinesweeper,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\MineSweeper.cs,GetClosestMine,The following statement contains a magic number: double closest_so_far = 99999;
Magic Number,SmartSweeper,CMinesweeper,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\MineSweeper.cs,CheckForMine,The following statement contains a magic number: if (DistToObject.Length < (size + 5))  			{  				return m_iClosestMine;  			}
Magic Number,SmartSweeper,CMinesweeper,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\MineSweeper.cs,Reset,The following statement contains a magic number: m_dRotation = Rand.NextDouble() * (System.Math.PI * 2);
Magic Number,SmartSweeper,SmartSweepersApplication,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\SmartSweepers.cs,OnDraw,The following statement contains a magic number: if (firstTime)  			{  				firstTime = false;  				m_SuperFast = new MatterHackers.Agg.UI.CheckBox(10' 10' "Run Super Fast");  				AddChild(m_SuperFast);  				m_Controller = new CController(backBuffer' 30' 40' .1' .7' .3' 4' 1' 2000);  			}
Magic Number,SmartSweeper,SmartSweepersApplication,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\SmartSweepers.cs,OnDraw,The following statement contains a magic number: if (firstTime)  			{  				firstTime = false;  				m_SuperFast = new MatterHackers.Agg.UI.CheckBox(10' 10' "Run Super Fast");  				AddChild(m_SuperFast);  				m_Controller = new CController(backBuffer' 30' 40' .1' .7' .3' 4' 1' 2000);  			}
Magic Number,SmartSweeper,SmartSweepersApplication,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\SmartSweepers.cs,OnDraw,The following statement contains a magic number: if (firstTime)  			{  				firstTime = false;  				m_SuperFast = new MatterHackers.Agg.UI.CheckBox(10' 10' "Run Super Fast");  				AddChild(m_SuperFast);  				m_Controller = new CController(backBuffer' 30' 40' .1' .7' .3' 4' 1' 2000);  			}
Magic Number,SmartSweeper,SmartSweepersApplication,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\SmartSweepers.cs,OnDraw,The following statement contains a magic number: if (firstTime)  			{  				firstTime = false;  				m_SuperFast = new MatterHackers.Agg.UI.CheckBox(10' 10' "Run Super Fast");  				AddChild(m_SuperFast);  				m_Controller = new CController(backBuffer' 30' 40' .1' .7' .3' 4' 1' 2000);  			}
Magic Number,SmartSweeper,SmartSweepersApplication,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\SmartSweepers.cs,OnDraw,The following statement contains a magic number: if (firstTime)  			{  				firstTime = false;  				m_SuperFast = new MatterHackers.Agg.UI.CheckBox(10' 10' "Run Super Fast");  				AddChild(m_SuperFast);  				m_Controller = new CController(backBuffer' 30' 40' .1' .7' .3' 4' 1' 2000);  			}
Magic Number,SmartSweeper,SmartSweepersApplication,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\SmartSweepers.cs,OnDraw,The following statement contains a magic number: if (firstTime)  			{  				firstTime = false;  				m_SuperFast = new MatterHackers.Agg.UI.CheckBox(10' 10' "Run Super Fast");  				AddChild(m_SuperFast);  				m_Controller = new CController(backBuffer' 30' 40' .1' .7' .3' 4' 1' 2000);  			}
Magic Number,SmartSweeper,SmartSweepersApplication,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\SmartSweepers.cs,OnDraw,The following statement contains a magic number: if (firstTime)  			{  				firstTime = false;  				m_SuperFast = new MatterHackers.Agg.UI.CheckBox(10' 10' "Run Super Fast");  				AddChild(m_SuperFast);  				m_Controller = new CController(backBuffer' 30' 40' .1' .7' .3' 4' 1' 2000);  			}
Magic Number,SmartSweeper,SmartSweepersApplication,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\SmartSweepers.cs,OnDraw,The following statement contains a magic number: if (firstTime)  			{  				firstTime = false;  				m_SuperFast = new MatterHackers.Agg.UI.CheckBox(10' 10' "Run Super Fast");  				AddChild(m_SuperFast);  				m_Controller = new CController(backBuffer' 30' 40' .1' .7' .3' 4' 1' 2000);  			}
Magic Number,SmartSweeper,SmartSweepersApplication,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\SmartSweepers.cs,OnDraw,The following statement contains a magic number: if (firstTime)  			{  				firstTime = false;  				m_SuperFast = new MatterHackers.Agg.UI.CheckBox(10' 10' "Run Super Fast");  				AddChild(m_SuperFast);  				m_Controller = new CController(backBuffer' 30' 40' .1' .7' .3' 4' 1' 2000);  			}
Magic Number,SmartSweeper,SmartSweepersApplication,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\SmartSweepers.cs,OnUpdate,The following statement contains a magic number: if (m_SuperFast.Checked)  			{  				for (int i = 0; i < 40; i++)  				{  					m_Controller.Update();  				}  			}
Magic Number,SmartSweeper,SmartSweepersApplication,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\SmartSweepers.cs,Main,The following statement contains a magic number: SmartSweepersApplication smartSweepers = new SmartSweepersApplication(640' 480);
Magic Number,SmartSweeper,SmartSweepersApplication,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\SmartSweepers.cs,Main,The following statement contains a magic number: SmartSweepersApplication smartSweepers = new SmartSweepersApplication(640' 480);
Magic Number,SmartSweeper,SmartSweepersFactory,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\SmartSweepers.cs,NewWidget,The following statement contains a magic number: return new SmartSweepersApplication(640' 480);
Magic Number,SmartSweeper,SmartSweepersFactory,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\SmartSweepers.cs,NewWidget,The following statement contains a magic number: return new SmartSweepersApplication(640' 480);
Magic Number,SmartSweeper,SmartSweepersFactory,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\SmartSweepers.cs,GetAppParameters,The following statement contains a magic number: AppWidgetInfo appWidgetInfo = new AppWidgetInfo(  				"Game"'  				"Smart Sweepers"'  				"Shows off a cool c# neral net framwork."'  				640'  				480);
Magic Number,SmartSweeper,SmartSweepersFactory,C:\repos\MatterHackers_agg-sharp\examples\SmartSweepers\SmartSweepers.cs,GetAppParameters,The following statement contains a magic number: AppWidgetInfo appWidgetInfo = new AppWidgetInfo(  				"Game"'  				"Smart Sweepers"'  				"Shows off a cool c# neral net framwork."'  				640'  				480);
