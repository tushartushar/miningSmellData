Implementation smell,Namespace,Class,File,Method,Description
Long Method,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,OnDraw,The method has 139 lines of code.
Virtual Method Call from Constructor,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The constructor "blur" calls a virtual method "AddChild".
Virtual Method Call from Constructor,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The constructor "blur" calls a virtual method "AddChild".
Virtual Method Call from Constructor,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The constructor "blur" calls a virtual method "AddChild".
Virtual Method Call from Constructor,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The constructor "blur" calls a virtual method "AddChild".
Virtual Method Call from Constructor,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The constructor "blur" calls a virtual method "AddChild".
Virtual Method Call from Constructor,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The constructor "blur" calls a virtual method "AddChild".
Virtual Method Call from Constructor,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The constructor "blur" calls a virtual method "AddChild".
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_method = new RadioButtonGroup(new Vector2(10.0' 10.0)' new Vector2(130.0' 60.0));
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_method = new RadioButtonGroup(new Vector2(10.0' 10.0)' new Vector2(130.0' 60.0));
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_method = new RadioButtonGroup(new Vector2(10.0' 10.0)' new Vector2(130.0' 60.0));
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_method = new RadioButtonGroup(new Vector2(10.0' 10.0)' new Vector2(130.0' 60.0));
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_radius = new Slider(new Vector2(130 + 10.0' 10.0 + 4.0)' new Vector2(290' 8.0));
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_radius = new Slider(new Vector2(130 + 10.0' 10.0 + 4.0)' new Vector2(290' 8.0));
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_radius = new Slider(new Vector2(130 + 10.0' 10.0 + 4.0)' new Vector2(290' 8.0));
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_radius = new Slider(new Vector2(130 + 10.0' 10.0 + 4.0)' new Vector2(290' 8.0));
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_radius = new Slider(new Vector2(130 + 10.0' 10.0 + 4.0)' new Vector2(290' 8.0));
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_radius = new Slider(new Vector2(130 + 10.0' 10.0 + 4.0)' new Vector2(290' 8.0));
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_shadow_ctrl = new PolygonEditWidget(4);
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_channel_r = new CheckBox(10.0' 80.0' "Red");
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_channel_r = new CheckBox(10.0' 80.0' "Red");
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_channel_g = new CheckBox(10.0' 95.0' "Green");
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_channel_g = new CheckBox(10.0' 95.0' "Green");
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_channel_b = new CheckBox(10.0' 110.0' "Blue");
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_channel_b = new CheckBox(10.0' 110.0' "Blue");
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_FlattenCurves = new CheckBox(10' 315' "Convert And Flatten Curves");
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_FlattenCurves = new CheckBox(10' 315' "Convert And Flatten Curves");
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_radius.SetRange(0.0' 40.0);
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_radius.Value = 15.0;
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: StyledTypeFace typeFaceForLargeA = new StyledTypeFace(LiberationSansFont.Instance' 300' flatenCurves: false);
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: shape_mtx *= Affine.NewTranslation(150' 100);
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: shape_mtx *= Affine.NewTranslation(150' 100);
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_shadow_ctrl.SetXN(2' m_shape_bounds.Right);
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_shadow_ctrl.SetYN(2' m_shape_bounds.Top);
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_shadow_ctrl.SetXN(3' m_shape_bounds.Left);
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_shadow_ctrl.SetYN(3' m_shape_bounds.Top);
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_shadow_ctrl.line_color(new RGBA_Floats(0' 0.3' 0.5' 0.3));
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_shadow_ctrl.line_color(new RGBA_Floats(0' 0.3' 0.5' 0.3));
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,blur,The following statement contains a magic number: m_shadow_ctrl.line_color(new RGBA_Floats(0' 0.3' 0.5' 0.3));
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,OnDraw,The following statement contains a magic number: Affine move = Affine.NewTranslation(10' 10);
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,OnDraw,The following statement contains a magic number: Affine move = Affine.NewTranslation(10' 10);
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,OnDraw,The following statement contains a magic number: scanlineRenderer.RenderSolid(clippingProxy' m_ras' m_sl' new RGBA_Floats(0.2' 0.3' 0).GetAsRGBA_Bytes());
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,OnDraw,The following statement contains a magic number: scanlineRenderer.RenderSolid(clippingProxy' m_ras' m_sl' new RGBA_Floats(0.2' 0.3' 0).GetAsRGBA_Bytes());
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,OnDraw,The following statement contains a magic number: if (m_method.SelectedIndex != 2)  			{  				// Create a new pixel renderer and attach it to the main one as a child image.  				// It returns true if the attachment succeeded. It fails if the rectangle  				// (bbox) is fully clipped.  				//------------------  #if SourceDepth24                  ImageBuffer image2 = new ImageBuffer(new BlenderBGR());  #else  				ImageBuffer image2 = new ImageBuffer(new BlenderBGRA());  #endif  				if (image2.Attach(widgetsSubImage' (int)bbox.Left' (int)bbox.Bottom' (int)bbox.Right' (int)bbox.Top))  				{  					// Blur it  					if (m_method.SelectedIndex == 0)  					{  						// More general method' but 30-40% slower.  						//------------------  						//m_stack_blur.blur(pixf2' agg::uround(m_radius.Value));    						// Faster' but bore specific.  						// Works only for 8 bits per channel and only with radii <= 254.  						//------------------  						stack_blur test = new stack_blur();  						test.Blur(image2' agg_basics.uround(m_radius.Value)' agg_basics.uround(m_radius.Value));  					}  					else  					{  						// True Gaussian Blur' 3-5 times slower than Stack Blur'  						// but still constant time of radius. Very sensitive  						// to precision' doubles are must here.  						//------------------  						m_recursive_blur.blur(image2' m_radius.Value);  					}  				}  			}  			else  			{  				/*  				// Blur separate channels  				//------------------  				if(m_channel_r.Checked)  				{  					typedef agg::pixfmt_alpha_blend_gray<  						agg::blender_gray8'  						agg::rendering_buffer'  						3' 2> pixfmt_gray8r;    					pixfmt_gray8r pixf2r(m_rbuf2);  					if(pixf2r.attach(pixf' int(bbox.x1)' int(bbox.y1)' int(bbox.x2)' int(bbox.y2)))  					{  						agg::stack_blur_gray8(pixf2r' agg::uround(m_radius.Value)'  													  agg::uround(m_radius.Value));  					}  				}    				if(m_channel_g.Checked)  				{  					typedef agg::pixfmt_alpha_blend_gray<  						agg::blender_gray8'  						agg::rendering_buffer'  						3' 1> pixfmt_gray8g;    					pixfmt_gray8g pixf2g(m_rbuf2);  					if(pixf2g.attach(pixf' int(bbox.x1)' int(bbox.y1)' int(bbox.x2)' int(bbox.y2)))  					{  						agg::stack_blur_gray8(pixf2g' agg::uround(m_radius.Value)'  													  agg::uround(m_radius.Value));  					}  				}    				if(m_channel_b.Checked)  				{  					typedef agg::pixfmt_alpha_blend_gray<  						agg::blender_gray8'  						agg::rendering_buffer'  						3' 0> pixfmt_gray8b;    					pixfmt_gray8b pixf2b(m_rbuf2);  					if(pixf2b.attach(pixf' int(bbox.x1)' int(bbox.y1)' int(bbox.x2)' int(bbox.y2)))  					{  						agg::stack_blur_gray8(pixf2b' agg::uround(m_radius.Value)'  													  agg::uround(m_radius.Value));  					}  				}  				 */  			}
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,OnDraw,The following statement contains a magic number: scanlineRenderer.RenderSolid(clippingProxy' m_ras' m_sl' new RGBA_Floats(0.6' 0.9' 0.7' 0.8).GetAsRGBA_Bytes());
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,OnDraw,The following statement contains a magic number: scanlineRenderer.RenderSolid(clippingProxy' m_ras' m_sl' new RGBA_Floats(0.6' 0.9' 0.7' 0.8).GetAsRGBA_Bytes());
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,OnDraw,The following statement contains a magic number: scanlineRenderer.RenderSolid(clippingProxy' m_ras' m_sl' new RGBA_Floats(0.6' 0.9' 0.7' 0.8).GetAsRGBA_Bytes());
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,OnDraw,The following statement contains a magic number: scanlineRenderer.RenderSolid(clippingProxy' m_ras' m_sl' new RGBA_Floats(0.6' 0.9' 0.7' 0.8).GetAsRGBA_Bytes());
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,OnDraw,The following statement contains a magic number: graphics2D.DrawString(string.Format("{0:F2} ms"' tm)' 140' 30);
Magic Number,MatterHackers.Agg,blur,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,OnDraw,The following statement contains a magic number: graphics2D.DrawString(string.Format("{0:F2} ms"' tm)' 140' 30);
Magic Number,MatterHackers.Agg,BlurFactory,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,GetAppParameters,The following statement contains a magic number: AppWidgetInfo appWidgetInfo = new AppWidgetInfo(  				"Bitmap"'  				"Gaussian and Stack Blur"'  				@"Now you can blur rendered images rather fast! There two algorithms are used:  Stack Blur by Mario Klingemann and Fast Recursive Gaussian Filter' described  here and here (PDF). The speed of both methods does not depend on the filter radius.  Mario's method works 3-5 times faster; it doesn't produce exactly Gaussian response'  but pretty fair for most practical purposes. The recursive filter uses floating  point arithmetic and works slower. But it is true Gaussian filter' with theoretically  infinite impulse response. The radius (actually 2*sigma value) can be fractional  and the filter produces quite adequate result."'  										   440'  										   330);
Magic Number,MatterHackers.Agg,BlurFactory,C:\repos\MatterHackers_agg-sharp\examples\blur\blur.cs,GetAppParameters,The following statement contains a magic number: AppWidgetInfo appWidgetInfo = new AppWidgetInfo(  				"Bitmap"'  				"Gaussian and Stack Blur"'  				@"Now you can blur rendered images rather fast! There two algorithms are used:  Stack Blur by Mario Klingemann and Fast Recursive Gaussian Filter' described  here and here (PDF). The speed of both methods does not depend on the filter radius.  Mario's method works 3-5 times faster; it doesn't produce exactly Gaussian response'  but pretty fair for most practical purposes. The recursive filter uses floating  point arithmetic and works slower. But it is true Gaussian filter' with theoretically  infinite impulse response. The radius (actually 2*sigma value) can be fractional  and the filter produces quite adequate result."'  										   440'  										   330);
