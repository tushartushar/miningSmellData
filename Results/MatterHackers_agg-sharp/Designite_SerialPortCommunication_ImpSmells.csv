Implementation smell,Namespace,Class,File,Method,Description
Long Method,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortStream,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialStream.cs,SetFrostedAttributes,The method has 108 lines of code.
Long Parameter List,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPort,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialPort.cs,FrostedSerialPort,The method has 5 parameters. Parameters: portName' baudRate' parity' dataBits' stopBits
Long Parameter List,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortFactory,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialPortFactory.cs,CreateFile,The method has 7 parameters. Parameters: lpFileName' dwDesiredAccess' dwShareMode' securityAttrs' dwCreationDisposition' dwFlagsAndAttributes' hTemplateFile
Long Parameter List,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortStream,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialStream.cs,set_attributes,The method has 6 parameters. Parameters: fd' baudRate' parity' dataBits' stopBits' handshake
Long Parameter List,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortStream,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialStream.cs,FrostedSerialPortStream,The method has 12 parameters. Parameters: portName' baudRate' dataBits' parity' stopBits' dtrEnable' rtsEnable' handshake' readTimeout' writeTimeout' readBufferSize' writeBufferSize
Long Parameter List,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortStream,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialStream.cs,SetFrostedAttributes,The method has 6 parameters. Parameters: fd' baudRate' parity' dataBits' stopBits' handshake
Long Parameter List,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortStream,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialStream.cs,write_serial,The method has 5 parameters. Parameters: fd' buffer' offset' count' timeout
Long Parameter List,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortStream,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialStream.cs,SetAttributes,The method has 5 parameters. Parameters: baud_rate' parity' data_bits' sb' hs
Long Parameter List,MatterHackers.SerialPortCommunication.FrostedSerial,IFrostedSerialStream,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\IFrostedSerialStream.cs,SetAttributes,The method has 5 parameters. Parameters: baud_rate' parity' data_bits' sb' hs
Long Parameter List,MatterHackers.SerialPortCommunication.FrostedSerial,SerialPortFixer,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\SerialPortFixer.cs,FormatMessage,The method has 7 parameters. Parameters: dwFlags' lpSource' dwMessageId' dwLanguageId' lpBuffer' nSize' arguments
Long Parameter List,MatterHackers.SerialPortCommunication.FrostedSerial,SerialPortFixer,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\SerialPortFixer.cs,CreateFile,The method has 7 parameters. Parameters: lpFileName' dwDesiredAccess' dwShareMode' securityAttrs' dwCreationDisposition' dwFlagsAndAttributes' hTemplateFile
Long Statement,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortFactory,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialPortFactory.cs,SerialPortAlreadyOpen,The length of the statement  "				using (SafeFileHandle hFile = CreateFile(@"\\.\" + portName' GENERIC_READ | GENERIC_WRITE' 0' IntPtr.Zero' 3' dwFlagsAndAttributes' IntPtr.Zero)) " is 145.
Long Statement,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortStream,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialStream.cs,SetFrostedAttributes,The length of the statement  "				newtio.c_lflag &= (uint)-(int)(e_c_lflag.ICANON | e_c_lflag.ECHO | e_c_lflag.ECHOE | e_c_lflag.ECHOK | e_c_lflag.ECHONL | e_c_lflag.ISIG | e_c_lflag.IEXTEN); " is 157.
Long Statement,MatterHackers.SerialPortCommunication.FrostedSerial,testCLass,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\TermiosH.cs,TestFunc,The length of the statement  "			//c_lflag &= (uint)-(e_c_lflag.ICANON | e_c_lflag.ECHO | e_c_lflag.ECHOE | e_c_lflag.ECHOK | e_c_lflag.ECHOL | e_c_lflag.ECHONL | e_c_lflag.ISIG | e_c_lflag.IEXTEN); " is 165.
Long Statement,MatterHackers.SerialPortCommunication.FrostedSerial,testCLass,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\TermiosH.cs,TestFunc,The length of the statement  "				c_lflag &= (uint)-(uint)(e_c_lflag.ICANON | e_c_lflag.ECHO | e_c_lflag.ECHOE | e_c_lflag.ECHOK | e_c_lflag.ECHONL | e_c_lflag.ISIG | e_c_lflag.IEXTEN); " is 151.
Complex Conditional,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortStream,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialStream.cs,SetSignal,The conditional expression  "signal < SerialSignal.Cd || signal > SerialSignal.Rts ||  					signal == SerialSignal.Cd ||  					signal == SerialSignal.Cts ||  					signal == SerialSignal.Dsr"  is complex.
Empty Catch Block,MatterHackers.SerialPortCommunication.FrostedSerial,CSharpSerialPortWrapper,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\CSharpSerialPortWrapper.cs,CSharpSerialPortWrapper,The method has an empty catch block.
Empty Catch Block,MatterHackers.SerialPortCommunication.FrostedSerial,CSharpSerialPortWrapper,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\CSharpSerialPortWrapper.cs,Close,The method has an empty catch block.
Magic Number,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPort,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialPort.cs,GetDefaultPortName,The following statement contains a magic number: if (ports.Length > 0)  			{  				return ports[0];  			}  			else  			{  				int p = (int)Environment.OSVersion.Platform;  				if (p == 4 || p == 128 || p == 6)  					return "ttyS0"; // Default for Unix  				else  					return "COM1"; // Default for Windows  			}
Magic Number,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPort,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialPort.cs,GetDefaultPortName,The following statement contains a magic number: if (ports.Length > 0)  			{  				return ports[0];  			}  			else  			{  				int p = (int)Environment.OSVersion.Platform;  				if (p == 4 || p == 128 || p == 6)  					return "ttyS0"; // Default for Unix  				else  					return "COM1"; // Default for Windows  			}
Magic Number,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPort,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialPort.cs,GetDefaultPortName,The following statement contains a magic number: if (ports.Length > 0)  			{  				return ports[0];  			}  			else  			{  				int p = (int)Environment.OSVersion.Platform;  				if (p == 4 || p == 128 || p == 6)  					return "ttyS0"; // Default for Unix  				else  					return "COM1"; // Default for Windows  			}
Magic Number,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPort,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialPort.cs,ReadChar,The following statement contains a magic number: byte[] buffer = new byte[16];
Magic Number,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortFactory,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialPortFactory.cs,SerialPortAlreadyOpen,The following statement contains a magic number: if (OsInformation.OperatingSystem == OSType.Windows)  			{  				const int dwFlagsAndAttributes = 0x40000000;  				const int GENERIC_READ = unchecked((int)0x80000000);  				const int GENERIC_WRITE = 0x40000000;    				//Borrowed from Microsoft's Serial Port Open Method :)  				using (SafeFileHandle hFile = CreateFile(@"\\.\" + portName' GENERIC_READ | GENERIC_WRITE' 0' IntPtr.Zero' 3' dwFlagsAndAttributes' IntPtr.Zero))  				{  					hFile.Close();  					return hFile.IsInvalid;  				}  			}  			else  			{  				return false;  			}
Magic Number,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortFactory,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialPortFactory.cs,CreateAndOpen,The following statement contains a magic number: bool customBaudAssignment = isLinux && baudRate > 115200;
Magic Number,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortFactory,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialPortFactory.cs,CreateAndOpen,The following statement contains a magic number: newPort.ReadTimeout = 500;
Magic Number,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortFactory,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialPortFactory.cs,CreateAndOpen,The following statement contains a magic number: newPort.WriteTimeout = 500;
Magic Number,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortStream,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialStream.cs,SetFrostedAttributes,The following statement contains a magic number: switch (dataBits)  			{  				case 5:  					newtio.c_cflag |= (uint)e_c_oflag.CS5;  					break;    				case 6:  					newtio.c_cflag |= (uint)e_c_oflag.CS6;  					break;    				case 7:  					newtio.c_cflag |= (uint)e_c_oflag.CS6;  					break;    				case 8:  				default:  					newtio.c_cflag |= (uint)e_c_oflag.CS8;  					break;  			}
Magic Number,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortStream,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialStream.cs,SetFrostedAttributes,The following statement contains a magic number: switch (dataBits)  			{  				case 5:  					newtio.c_cflag |= (uint)e_c_oflag.CS5;  					break;    				case 6:  					newtio.c_cflag |= (uint)e_c_oflag.CS6;  					break;    				case 7:  					newtio.c_cflag |= (uint)e_c_oflag.CS6;  					break;    				case 8:  				default:  					newtio.c_cflag |= (uint)e_c_oflag.CS8;  					break;  			}
Magic Number,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortStream,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialStream.cs,SetFrostedAttributes,The following statement contains a magic number: switch (dataBits)  			{  				case 5:  					newtio.c_cflag |= (uint)e_c_oflag.CS5;  					break;    				case 6:  					newtio.c_cflag |= (uint)e_c_oflag.CS6;  					break;    				case 7:  					newtio.c_cflag |= (uint)e_c_oflag.CS6;  					break;    				case 8:  				default:  					newtio.c_cflag |= (uint)e_c_oflag.CS8;  					break;  			}
Magic Number,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortStream,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialStream.cs,SetFrostedAttributes,The following statement contains a magic number: switch (dataBits)  			{  				case 5:  					newtio.c_cflag |= (uint)e_c_oflag.CS5;  					break;    				case 6:  					newtio.c_cflag |= (uint)e_c_oflag.CS6;  					break;    				case 7:  					newtio.c_cflag |= (uint)e_c_oflag.CS6;  					break;    				case 8:  				default:  					newtio.c_cflag |= (uint)e_c_oflag.CS8;  					break;  			}
Magic Number,MatterHackers.SerialPortCommunication.FrostedSerial,SerialPortFixer,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\SerialPortFixer.cs,SerialPortFixer,The following statement contains a magic number: SafeFileHandle hFile = CreateFile(@"\\.\" + portName' dwAccess' 0' IntPtr.Zero' 3' dwFlagsAndAttributes' IntPtr.Zero);
Magic Number,MatterHackers.SerialPortCommunication.FrostedSerial,SerialPortFixer,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\SerialPortFixer.cs,SerialPortFixer,The following statement contains a magic number: try  			{  				int fileType = GetFileType(hFile);  				if ((fileType != 2) && (fileType != 0))  				{  					throw new ArgumentException("Invalid Serial Port"' "portName");  				}  				m_Handle = hFile;  				InitializeDcb();  			}  			catch  			{  				hFile.Close();  				m_Handle = null;  				throw;  			}
Missing Default,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortStream,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialStream.cs,SetFrostedAttributes,The following switch statement is missing a default case: switch (stopBits)  			{  				case StopBits.None:  					break;    				case StopBits.One:  					unchecked  					{  						newtio.c_cflag &= (uint)-(uint)e_c_oflag.CSTOPB;  					}  					break;    				case StopBits.Two:  					newtio.c_cflag |= (uint)e_c_oflag.CSTOPB;  					break;    				case StopBits.OnePointFive:  					break;  			}
Missing Default,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortStream,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialStream.cs,SetFrostedAttributes,The following switch statement is missing a default case: switch (parity)  			{  				case Parity.None: /* None */  					newtio.c_cflag &= ~(uint)(e_c_oflag.PARENB | e_c_oflag.PARODD);  					break;    				case Parity.Odd: /* Odd */  					newtio.c_cflag |= (uint)(e_c_oflag.PARENB | e_c_oflag.PARODD);  					break;    				case Parity.Even: /* Even */  					newtio.c_cflag &= ~(uint)(e_c_oflag.PARODD);  					newtio.c_cflag |= (uint)(e_c_oflag.PARENB);  					break;    				case Parity.Mark: /* Mark */  					/* XXX unhandled */  					break;    				case Parity.Space: /* Space */  					/* XXX unhandled */  					break;  			}
Missing Default,MatterHackers.SerialPortCommunication.FrostedSerial,FrostedSerialPortStream,C:\repos\MatterHackers_agg-sharp\SerialPortCommunication\FrostedSerial\FrostedSerialStream.cs,SetFrostedAttributes,The following switch statement is missing a default case: switch (handshake)  			{  				case Handshake.None: /* None */  					/* do nothing */  					break;    				case Handshake.RequestToSend: /* RequestToSend (RTS) */  #if CRTSCTS  				newtio.c_cflag |= CRTSCTS;  #endif //* def CRTSCTS */  					break;    				case Handshake.RequestToSendXOnXOff: /* RequestToSendXOnXOff (RTS + XON/XOFF) */  #if CRTSCTS  				newtio.c_cflag |= CRTSCTS;  #endif //* def CRTSCTS */  				/* fall through */  				case Handshake.XOnXOff: /* XOnXOff */  					newtio.c_iflag |= (uint)(e_c_iflag.IXOFF | e_c_iflag.IXON);  					break;  			}
