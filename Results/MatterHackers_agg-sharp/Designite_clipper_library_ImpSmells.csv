Implementation smell,Namespace,Class,File,Method,Description
Long Method,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,ProcessBound,The method has 105 lines of code.
Long Method,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,AddPath,The method has 150 lines of code.
Long Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,IntersectEdges,The method has 190 lines of code.
Long Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,ProcessHorizontal,The method has 172 lines of code.
Long Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,JoinPoints,The method has 148 lines of code.
Long Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,CleanPolygon,The method has 107 lines of code.
Long Method,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,DoOffset,The method has 162 lines of code.
Complex Method,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,FindNextLocMin,Cyclomatic complexity of the method is 8
Complex Method,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,ProcessBound,Cyclomatic complexity of the method is 30
Complex Method,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,AddPath,Cyclomatic complexity of the method is 35
Complex Method,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,GetBounds,Cyclomatic complexity of the method is 9
Complex Method,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,SwapPositionsInAEL,Cyclomatic complexity of the method is 14
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,ExecuteInternal,Cyclomatic complexity of the method is 11
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,InsertLocalMinimaIntoAEL,Cyclomatic complexity of the method is 19
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,IsContributing,Cyclomatic complexity of the method is 24
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,SetWindingCount,Cyclomatic complexity of the method is 18
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,SwapPositionsInSEL,Cyclomatic complexity of the method is 15
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,GetBottomPt,Cyclomatic complexity of the method is 10
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,GetLowermostRec,Cyclomatic complexity of the method is 10
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,AppendPolygon,Cyclomatic complexity of the method is 10
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,IntersectEdges,Cyclomatic complexity of the method is 45
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,ProcessHorizontal,Cyclomatic complexity of the method is 36
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,BuildIntersectList,Cyclomatic complexity of the method is 8
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,IntersectPoint,Cyclomatic complexity of the method is 12
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,ProcessEdgesAtTopOfScanbeam,Cyclomatic complexity of the method is 15
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,DoMaxima,Cyclomatic complexity of the method is 10
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,BuildResult2,Cyclomatic complexity of the method is 8
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,JoinHorz,Cyclomatic complexity of the method is 17
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,JoinPoints,Cyclomatic complexity of the method is 28
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,PointInPolygon,Cyclomatic complexity of the method is 13
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,JoinCommonEdges,Cyclomatic complexity of the method is 18
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,CleanPolygon,Cyclomatic complexity of the method is 17
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,Minkowski,Cyclomatic complexity of the method is 9
Complex Method,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,AddPath,Cyclomatic complexity of the method is 11
Complex Method,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,DoOffset,Cyclomatic complexity of the method is 31
Complex Method,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,OffsetPoint,Cyclomatic complexity of the method is 9
Long Parameter List,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,SlopesEqual,The method has 5 parameters. Parameters: pt1' pt2' pt3' pt4' UseFullRange
Long Parameter List,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,GetOverlap,The method has 6 parameters. Parameters: a1' a2' b1' b2' Left' Right
Long Parameter List,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,JoinHorz,The method has 6 parameters. Parameters: op1' op1b' op2' op2b' Pt' DiscardLeft
Long Statement,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,CleanPolygon,The length of the statement  "        // We can't just merge each point in order or we can collapse curves that have small enough inter point deltas but large total curve. " is 133.
Long Statement,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,CleanPolygon,The length of the statement  "        // Imagine a very tessellated circle. As we walk the edge each triple can be collinear within our error and so we remove the middle point and move on to " is 152.
Long Statement,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,CleanPolygon,The length of the statement  "        // the next point. The new middle point is very close to the new third point and so we collapse and remove the second point. We can remove and create " is 149.
Complex Conditional,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,RangeTest,The conditional expression  "Pt.X > hiRange || Pt.Y > hiRange || -Pt.X > hiRange || -Pt.Y > hiRange"  is complex.
Complex Conditional,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,RangeTest,The conditional expression  "Pt.X > loRange || Pt.Y > loRange || -Pt.X > loRange || -Pt.Y > loRange"  is complex.
Complex Conditional,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,AddPath,The conditional expression  "(Closed && highI < 2) || (!Closed && highI < 1)"  is complex.
Complex Conditional,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,AddPath,The conditional expression  "Closed &&            SlopesEqual(E.Prev.Curr' E.Curr' E.Next.Curr' m_UseFullRange) &&             (!PreserveCollinear ||            !Pt2IsBetweenPt1AndPt3(E.Prev.Curr' E.Curr' E.Next.Curr))"  is complex.
Complex Conditional,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,AddPath,The conditional expression  "(!Closed && (E == E.Next)) || (Closed && (E.Prev == E.Next))"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,InsertLocalMinimaIntoAEL,The conditional expression  "Op1 != null && IsHorizontal(rb) &&               m_GhostJoins.Count > 0 && rb.WindDelta != 0"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,InsertLocalMinimaIntoAEL,The conditional expression  "lb.OutIdx >= 0 && lb.PrevInAEL != null &&              lb.PrevInAEL.Curr.X == lb.Bot.X &&              lb.PrevInAEL.OutIdx >= 0 &&              SlopesEqual(lb.PrevInAEL.Curr' lb.PrevInAEL.Top' lb.Curr' lb.Top' m_UseFullRange) &&              lb.WindDelta != 0 && lb.PrevInAEL.WindDelta != 0"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,InsertLocalMinimaIntoAEL,The conditional expression  "rb.OutIdx >= 0 && rb.PrevInAEL.OutIdx >= 0 &&                SlopesEqual(rb.PrevInAEL.Curr' rb.PrevInAEL.Top' rb.Curr' rb.Top' m_UseFullRange) &&                rb.WindDelta != 0 && rb.PrevInAEL.WindDelta != 0"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,AddLocalMinPoly,The conditional expression  "prevE != null && prevE.OutIdx >= 0 && prevE.Top.Y < pt.Y && e.Top.Y < pt.Y"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,AddLocalMinPoly,The conditional expression  "(xPrev == xE) && (e.WindDelta != 0) && (prevE.WindDelta != 0) &&              SlopesEqual(new IntPoint(xPrev' pt.Y)' prevE.Top' new IntPoint(xE' pt.Y)' e.Top' m_UseFullRange)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,IntersectEdges,The conditional expression  "(e1.WindDelta == 0) && Math.Abs(e2.WindCnt) == 1 &&                   (m_ClipType != ClipType.ctUnion || e2.WindCnt2 == 0)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,IntersectEdges,The conditional expression  "(e2.WindDelta == 0) && (Math.Abs(e1.WindCnt) == 1) &&                   (m_ClipType != ClipType.ctUnion || e1.WindCnt2 == 0)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,IntersectEdges,The conditional expression  "(e1Wc != 0 && e1Wc != 1) || (e2Wc != 0 && e2Wc != 1) ||                (e1.PolyTyp != e2.PolyTyp && m_ClipType != ClipType.ctXor)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,IntersectEdges,The conditional expression  "(e1Wc == 0 || e1Wc == 1) && (e2Wc == 0 || e2Wc == 1)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,IntersectEdges,The conditional expression  "((e1.PolyTyp == PolyType.ptClip) && (e1Wc2 > 0) && (e2Wc2 > 0)) ||                          ((e1.PolyTyp == PolyType.ptSubject) && (e1Wc2 <= 0) && (e2Wc2 <= 0))"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,ProcessHorizontal,The conditional expression  "(dir == Direction.dLeftToRight && e.Curr.X > horzRight) ||                  (dir == Direction.dRightToLeft && e.Curr.X < horzLeft)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,ProcessHorizontal,The conditional expression  "ePrev != null && ePrev.Curr.X == horzEdge.Bot.X &&                ePrev.Curr.Y == horzEdge.Bot.Y && ePrev.WindDelta != 0 &&                (ePrev.OutIdx >= 0 && ePrev.Curr.Y > ePrev.Top.Y &&                SlopesEqual(horzEdge' ePrev' m_UseFullRange))"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,ProcessHorizontal,The conditional expression  "eNext != null && eNext.Curr.X == horzEdge.Bot.X &&                eNext.Curr.Y == horzEdge.Bot.Y && eNext.WindDelta != 0 &&                eNext.OutIdx >= 0 && eNext.Curr.Y > eNext.Top.Y &&                SlopesEqual(horzEdge' eNext' m_UseFullRange)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,GetMaximaPairEx,The conditional expression  "result == null || result.OutIdx == Skip ||            ((result.NextInAEL == result.PrevInAEL) && !IsHorizontal(result))"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,ProcessEdgesAtTopOfScanbeam,The conditional expression  "(e.OutIdx >= 0) && (e.WindDelta != 0) && ePrev != null &&                  (ePrev.OutIdx >= 0) && (ePrev.Curr.X == e.Curr.X) &&                  (ePrev.WindDelta != 0)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,ProcessEdgesAtTopOfScanbeam,The conditional expression  "ePrev != null && ePrev.Curr.X == e.Bot.X &&                ePrev.Curr.Y == e.Bot.Y && op != null &&                ePrev.OutIdx >= 0 && ePrev.Curr.Y > ePrev.Top.Y &&                SlopesEqual(e.Curr' e.Top' ePrev.Curr' ePrev.Top' m_UseFullRange) &&                (e.WindDelta != 0) && (ePrev.WindDelta != 0)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,ProcessEdgesAtTopOfScanbeam,The conditional expression  "eNext != null && eNext.Curr.X == e.Bot.X &&                eNext.Curr.Y == e.Bot.Y && op != null &&                eNext.OutIdx >= 0 && eNext.Curr.Y > eNext.Top.Y &&                SlopesEqual(e.Curr' e.Top' eNext.Curr' eNext.Top' m_UseFullRange) &&                (e.WindDelta != 0) && (eNext.WindDelta != 0)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,BuildResult2,The conditional expression  "(outRec.IsOpen && cnt < 2) ||                   (!outRec.IsOpen && cnt < 3)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,FixupOutPolygon,The conditional expression  "(pp.Pt == pp.Next.Pt) || (pp.Pt == pp.Prev.Pt) ||                  (SlopesEqual(pp.Prev.Pt' pp.Pt' pp.Next.Pt' m_UseFullRange) &&                  (!preserveCol || !Pt2IsBetweenPt1AndPt3(pp.Prev.Pt' pp.Pt' pp.Next.Pt)))"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,JoinPoints,The conditional expression  "(op1b == op1) || (op2b == op2) || (op1b == op2b) ||              ((outRec1 == outRec2) && (Reverse1 == Reverse2))"  is complex.
Complex Conditional,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,DoOffset,The conditional expression  "len == 0 || (delta <= 0 && (len < 3 ||             node.m_endtype != EndType.etClosedPolygon))"  is complex.
Magic Number,ClipperLib,Int128,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,Int128Mul,The following statement contains a magic number: UInt64 int1Hi = (UInt64)lhs >> 32;
Magic Number,ClipperLib,Int128,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,Int128Mul,The following statement contains a magic number: UInt64 int2Hi = (UInt64)rhs >> 32;
Magic Number,ClipperLib,Int128,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,Int128Mul,The following statement contains a magic number: hi = (Int64)(a + (c >> 32));
Magic Number,ClipperLib,Int128,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,Int128Mul,The following statement contains a magic number: lo = (c << 32) + b;
Magic Number,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,AddPath,The following statement contains a magic number: (Closed && highI < 2) || (!Closed && highI < 1)
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,Round,The following statement contains a magic number: return value < 0 ? (cInt)(value - 0.5) : (cInt)(value + 0.5);
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,Round,The following statement contains a magic number: return value < 0 ? (cInt)(value - 0.5) : (cInt)(value + 0.5);
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,BuildResult,The following statement contains a magic number: cnt < 2
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,BuildResult2,The following statement contains a magic number: (outRec.IsOpen && cnt < 2) ||                   (!outRec.IsOpen && cnt < 3)
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,BuildResult2,The following statement contains a magic number: (outRec.IsOpen && cnt < 2) ||                   (!outRec.IsOpen && cnt < 3)
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,PointInPolygon,The following statement contains a magic number: cnt < 3
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,Area,The following statement contains a magic number: cnt < 3
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,Area,The following statement contains a magic number: return -a * 0.5;
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,Area,The following statement contains a magic number: return a * 0.5;
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,CleanPolygon,The following statement contains a magic number: cnt < 3
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,Minkowski,The following statement contains a magic number: Path quad = new Path(4);
Magic Number,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,Round,The following statement contains a magic number: return value < 0 ? (cInt)(value - 0.5) : (cInt)(value + 0.5);
Magic Number,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,Round,The following statement contains a magic number: return value < 0 ? (cInt)(value - 0.5) : (cInt)(value + 0.5);
Magic Number,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,AddPath,The following statement contains a magic number: endType == EndType.etClosedPolygon && j < 2
Magic Number,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,DoOffset,The following statement contains a magic number: m_miterLim = 2 / (MiterLimit * MiterLimit);
Magic Number,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,DoOffset,The following statement contains a magic number: MiterLimit > 2
Magic Number,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,DoOffset,The following statement contains a magic number: m_destPolys.Capacity = m_polyNodes.ChildCount * 2;
Magic Number,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,DoOffset,The following statement contains a magic number: len == 0 || (delta <= 0 && (len < 3 ||             node.m_endtype != EndType.etClosedPolygon))
Magic Number,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,DoSquare,The following statement contains a magic number: double dx = Math.Tan(Math.Atan2(m_sinA'            m_normals[k].X * m_normals[j].X + m_normals[k].Y * m_normals[j].Y) / 4);
Duplicate Code,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,JoinPoints,The method contains a code clone-set at the following line numbers (starting from the method definition): ((28' 50)' (133' 155))
Missing Default,ClipperLib,Clipper,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,IntersectEdges,The following switch statement is missing a default case: switch (m_ClipType)                  {                    case ClipType.ctIntersection:                      if (e1Wc2 > 0 && e2Wc2 > 0)                        AddLocalMinPoly(e1' e2' pt);                      break;                    case ClipType.ctUnion:                      if (e1Wc2 <= 0 && e2Wc2 <= 0)                        AddLocalMinPoly(e1' e2' pt);                      break;                    case ClipType.ctDifference:                      if (((e1.PolyTyp == PolyType.ptClip) && (e1Wc2 > 0) && (e2Wc2 > 0)) ||                          ((e1.PolyTyp == PolyType.ptSubject) && (e1Wc2 <= 0) && (e2Wc2 <= 0)))                            AddLocalMinPoly(e1' e2' pt);                      break;                    case ClipType.ctXor:                      AddLocalMinPoly(e1' e2' pt);                      break;                  }
Missing Default,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\MatterHackers_agg-sharp\clipper_library\clipper.cs,OffsetPoint,The following switch statement is missing a default case: switch (jointype)          {            case JoinType.jtMiter:              {                double r = 1 + (m_normals[j].X * m_normals[k].X +                  m_normals[j].Y * m_normals[k].Y);                if (r >= m_miterLim) DoMiter(j' k' r); else DoSquare(j' k);                break;              }            case JoinType.jtSquare: DoSquare(j' k); break;            case JoinType.jtRound: DoRound(j' k); break;          }
