Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Karcero.Visualizer,TileTypeToBackgroundColorConverter,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,Convert,The method has 4 parameters.
Long Parameter List,Karcero.Visualizer,TileTypeToBackgroundColorConverter,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,Karcero.Visualizer,WidthToContainerWidth,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,Convert,The method has 4 parameters.
Long Parameter List,Karcero.Visualizer,WidthToContainerWidth,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,Karcero.Visualizer,CellToDoorConverter,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,Convert,The method has 4 parameters.
Long Parameter List,Karcero.Visualizer,CellToDoorConverter,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConvertBack,The method has 4 parameters.
Long Parameter List,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,Convert,The method has 4 parameters.
Long Parameter List,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConvertBack,The method has 4 parameters.
Long Statement,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ShouldConsiderRockCell,The length of the statement  "	return (map.TryGetAdjacentCell (cell' direction' out adjacentCell) && adjacentCell.Terrain == TerrainType.Rock && map.GetAllAdjacentCells (adjacentCell' true).Any (c => c.Terrain != TerrainType.Rock)); " is 201.
Long Statement,Karcero.Visualizer,ViewModel,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ViewModel.cs,StartGeneration,The length of the statement  "	mGenerator.GenerateA ().MediumDungeon ().ABitRandom ().SomewhatSparse ().WithMediumChanceToRemoveDeadEnds ().WithSmallSizeRooms ().WithLargeNumberOfRooms ().AndTellMeWhenItsDone (map => { " is 187.
Long Statement,Karcero.Visualizer,MainWindow,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,OnMouseLeftButtonDown,The length of the statement  "	if (mousePos.X <= scrollViewer.ViewportWidth && mousePos.Y < scrollViewer.ViewportHeight)//make sure we still can use the scrollbars " is 132.
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells [SOUTH | WEST] = new Point (0' TILE_SIZE * 2);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells [SOUTH] = new Point (TILE_SIZE' TILE_SIZE * 2);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells [NORTH | EAST] = new Point (TILE_SIZE * 2' 0);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells [EAST] = new Point (TILE_SIZE * 2' TILE_SIZE);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells [SOUTH | EAST] = new Point (TILE_SIZE * 2' TILE_SIZE * 2);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells [SOUTH | EAST] = new Point (TILE_SIZE * 2' TILE_SIZE * 2);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells [NORTH | WEST | EAST] = new Point (TILE_SIZE * 3' 0);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells [EAST | WEST] = new Point (TILE_SIZE * 3' TILE_SIZE);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells [SOUTH | WEST | EAST] = new Point (TILE_SIZE * 3' TILE_SIZE * 2);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells [SOUTH | WEST | EAST] = new Point (TILE_SIZE * 3' TILE_SIZE * 2);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells [NORTH | WEST | SOUTH | EAST] = new Point (TILE_SIZE * 5' 0);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells [NORTH | WEST | SOUTH] = new Point (TILE_SIZE * 4' TILE_SIZE);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells [NORTH | SOUTH] = new Point (TILE_SIZE * 5' TILE_SIZE);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells [NORTH | EAST | SOUTH] = new Point (TILE_SIZE * 6' TILE_SIZE);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [0] = new Point (TILE_SIZE' TILE_SIZE * 4);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [EAST | SOUTH] = new Point (0' TILE_SIZE * 3);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [NORTH | SOUTH] = new Point (0' TILE_SIZE * 4);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [SOUTH] = new Point (0' TILE_SIZE * 4);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [NORTH] = new Point (0' TILE_SIZE * 4);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [NORTH | EAST] = new Point (0' TILE_SIZE * 5);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [WEST | EAST] = new Point (TILE_SIZE' TILE_SIZE * 3);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [EAST] = new Point (TILE_SIZE' TILE_SIZE * 3);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [WEST] = new Point (TILE_SIZE' TILE_SIZE * 3);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [WEST | SOUTH] = new Point (TILE_SIZE * 2' TILE_SIZE * 3);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [WEST | SOUTH] = new Point (TILE_SIZE * 2' TILE_SIZE * 3);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [WEST | NORTH] = new Point (TILE_SIZE * 2' TILE_SIZE * 5);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [WEST | NORTH] = new Point (TILE_SIZE * 2' TILE_SIZE * 5);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [EAST | NORTH | SOUTH] = new Point (TILE_SIZE * 3' TILE_SIZE * 4);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [EAST | NORTH | SOUTH] = new Point (TILE_SIZE * 3' TILE_SIZE * 4);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [WEST | EAST | SOUTH] = new Point (TILE_SIZE * 4' TILE_SIZE * 3);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [WEST | EAST | SOUTH] = new Point (TILE_SIZE * 4' TILE_SIZE * 3);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [NORTH | EAST | SOUTH | WEST] = new Point (TILE_SIZE * 4' TILE_SIZE * 4);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [NORTH | EAST | SOUTH | WEST] = new Point (TILE_SIZE * 4' TILE_SIZE * 4);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [EAST | NORTH | WEST] = new Point (TILE_SIZE * 4' TILE_SIZE * 5);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [EAST | NORTH | WEST] = new Point (TILE_SIZE * 4' TILE_SIZE * 5);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [SOUTH | NORTH | WEST] = new Point (TILE_SIZE * 5' TILE_SIZE * 4);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells [SOUTH | NORTH | WEST] = new Point (TILE_SIZE * 5' TILE_SIZE * 4);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConstructWallLocationAccordingToAdjacentWalls,The following statement contains a magic number: if (map.GetAllAdjacentCells (cell' true).All (c => c.Terrain == TerrainType.Rock))  	return new Point (TILE_SIZE * 6' TILE_SIZE * 5);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConstructWallLocationAccordingToAdjacentWalls,The following statement contains a magic number: if (map.GetAllAdjacentCells (cell' true).All (c => c.Terrain == TerrainType.Rock))  	return new Point (TILE_SIZE * 6' TILE_SIZE * 5);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConstructWallLocationAccordingToAdjacentWalls,The following statement contains a magic number: return new Point (TILE_SIZE * 6' TILE_SIZE * 5);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConstructWallLocationAccordingToAdjacentWalls,The following statement contains a magic number: return new Point (TILE_SIZE * 6' TILE_SIZE * 5);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConstructWallLocationAccordingToAdjacentWalls,The following statement contains a magic number: return new Point (TILE_SIZE * 6' TILE_SIZE * 5);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConstructWallLocationAccordingToAdjacentWalls,The following statement contains a magic number: return new Point (TILE_SIZE * 6' TILE_SIZE * 5);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConstructLocationAccordingToDoorOrientation,The following statement contains a magic number: if (map.TryGetAdjacentCell (cell' Direction.East' out adjacentCell) && adjacentCell.Terrain == TerrainType.Floor)  	return new Point (TILE_SIZE * 6' 0);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConstructLocationAccordingToDoorOrientation,The following statement contains a magic number: return new Point (TILE_SIZE * 6' 0);  
Magic Number,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConstructLocationAccordingToDoorOrientation,The following statement contains a magic number: return new Point (TILE_SIZE * 4' 0);  
Magic Number,Karcero.Visualizer,MainWindow,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,OnPreviewMouseWheel,The following statement contains a magic number: if (e.Delta > 0) {  	mZoomValue += 0.3;  }  
Magic Number,Karcero.Visualizer,MainWindow,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,OnPreviewMouseWheel,The following statement contains a magic number: mZoomValue += 0.3;  
Magic Number,Karcero.Visualizer,MainWindow,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,OnPreviewMouseWheel,The following statement contains a magic number: if (e.Delta < 0) {  	mZoomValue -= 0.3;  }  
Magic Number,Karcero.Visualizer,MainWindow,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,OnPreviewMouseWheel,The following statement contains a magic number: mZoomValue -= 0.3;  
Magic Number,Karcero.Visualizer,MainWindow,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,OnPreviewMouseWheel,The following statement contains a magic number: mZoomValue = Math.Max (mZoomValue' 0.1);  
Magic Number,Karcero.Visualizer,MainWindow,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,OnScrollViewerScrollChanged,The following statement contains a magic number: if (e.ExtentHeightChange != 0 || e.ExtentWidthChange != 0) {  	Point? targetBefore = null;  	Point? targetNow = null;  	if (!mLastMousePositionOnTarget.HasValue) {  		if (mLastCenterPositionOnTarget.HasValue) {  			var centerOfViewport = new Point (scrollViewer.ViewportWidth / 2' scrollViewer.ViewportHeight / 2);  			Point centerOfTargetNow = scrollViewer.TranslatePoint (centerOfViewport' ItemsControl);  			targetBefore = mLastCenterPositionOnTarget;  			targetNow = centerOfTargetNow;  		}  	} else {  		targetBefore = mLastMousePositionOnTarget;  		targetNow = Mouse.GetPosition (ItemsControl);  		mLastMousePositionOnTarget = null;  	}  	if (targetBefore.HasValue) {  		double dXInTargetPixels = targetNow.Value.X - targetBefore.Value.X;  		double dYInTargetPixels = targetNow.Value.Y - targetBefore.Value.Y;  		double multiplicatorX = e.ExtentWidth / ItemsControl.Width;  		double multiplicatorY = e.ExtentHeight / ItemsControl.Height;  		double newOffsetX = scrollViewer.HorizontalOffset - dXInTargetPixels * multiplicatorX;  		double newOffsetY = scrollViewer.VerticalOffset - dYInTargetPixels * multiplicatorY;  		if (double.IsNaN (newOffsetX) || double.IsNaN (newOffsetY)) {  			return;  		}  		scrollViewer.ScrollToHorizontalOffset (newOffsetX);  		scrollViewer.ScrollToVerticalOffset (newOffsetY);  	}  }  
Magic Number,Karcero.Visualizer,MainWindow,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,OnScrollViewerScrollChanged,The following statement contains a magic number: if (e.ExtentHeightChange != 0 || e.ExtentWidthChange != 0) {  	Point? targetBefore = null;  	Point? targetNow = null;  	if (!mLastMousePositionOnTarget.HasValue) {  		if (mLastCenterPositionOnTarget.HasValue) {  			var centerOfViewport = new Point (scrollViewer.ViewportWidth / 2' scrollViewer.ViewportHeight / 2);  			Point centerOfTargetNow = scrollViewer.TranslatePoint (centerOfViewport' ItemsControl);  			targetBefore = mLastCenterPositionOnTarget;  			targetNow = centerOfTargetNow;  		}  	} else {  		targetBefore = mLastMousePositionOnTarget;  		targetNow = Mouse.GetPosition (ItemsControl);  		mLastMousePositionOnTarget = null;  	}  	if (targetBefore.HasValue) {  		double dXInTargetPixels = targetNow.Value.X - targetBefore.Value.X;  		double dYInTargetPixels = targetNow.Value.Y - targetBefore.Value.Y;  		double multiplicatorX = e.ExtentWidth / ItemsControl.Width;  		double multiplicatorY = e.ExtentHeight / ItemsControl.Height;  		double newOffsetX = scrollViewer.HorizontalOffset - dXInTargetPixels * multiplicatorX;  		double newOffsetY = scrollViewer.VerticalOffset - dYInTargetPixels * multiplicatorY;  		if (double.IsNaN (newOffsetX) || double.IsNaN (newOffsetY)) {  			return;  		}  		scrollViewer.ScrollToHorizontalOffset (newOffsetX);  		scrollViewer.ScrollToVerticalOffset (newOffsetY);  	}  }  
Magic Number,Karcero.Visualizer,MainWindow,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,OnScrollViewerScrollChanged,The following statement contains a magic number: if (!mLastMousePositionOnTarget.HasValue) {  	if (mLastCenterPositionOnTarget.HasValue) {  		var centerOfViewport = new Point (scrollViewer.ViewportWidth / 2' scrollViewer.ViewportHeight / 2);  		Point centerOfTargetNow = scrollViewer.TranslatePoint (centerOfViewport' ItemsControl);  		targetBefore = mLastCenterPositionOnTarget;  		targetNow = centerOfTargetNow;  	}  } else {  	targetBefore = mLastMousePositionOnTarget;  	targetNow = Mouse.GetPosition (ItemsControl);  	mLastMousePositionOnTarget = null;  }  
Magic Number,Karcero.Visualizer,MainWindow,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,OnScrollViewerScrollChanged,The following statement contains a magic number: if (!mLastMousePositionOnTarget.HasValue) {  	if (mLastCenterPositionOnTarget.HasValue) {  		var centerOfViewport = new Point (scrollViewer.ViewportWidth / 2' scrollViewer.ViewportHeight / 2);  		Point centerOfTargetNow = scrollViewer.TranslatePoint (centerOfViewport' ItemsControl);  		targetBefore = mLastCenterPositionOnTarget;  		targetNow = centerOfTargetNow;  	}  } else {  	targetBefore = mLastMousePositionOnTarget;  	targetNow = Mouse.GetPosition (ItemsControl);  	mLastMousePositionOnTarget = null;  }  
Magic Number,Karcero.Visualizer,MainWindow,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,OnScrollViewerScrollChanged,The following statement contains a magic number: if (mLastCenterPositionOnTarget.HasValue) {  	var centerOfViewport = new Point (scrollViewer.ViewportWidth / 2' scrollViewer.ViewportHeight / 2);  	Point centerOfTargetNow = scrollViewer.TranslatePoint (centerOfViewport' ItemsControl);  	targetBefore = mLastCenterPositionOnTarget;  	targetNow = centerOfTargetNow;  }  
Magic Number,Karcero.Visualizer,MainWindow,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,OnScrollViewerScrollChanged,The following statement contains a magic number: if (mLastCenterPositionOnTarget.HasValue) {  	var centerOfViewport = new Point (scrollViewer.ViewportWidth / 2' scrollViewer.ViewportHeight / 2);  	Point centerOfTargetNow = scrollViewer.TranslatePoint (centerOfViewport' ItemsControl);  	targetBefore = mLastCenterPositionOnTarget;  	targetNow = centerOfTargetNow;  }  
Missing Default,Karcero.Visualizer,CellToSpriteRect,D:\newReposJune17\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,Convert,The following switch statement is missing a default case: switch (cell.Terrain) {  case TerrainType.Rock:  	var wallLocation = ConstructWallLocationAccordingToAdjacentWalls (cell' map);  	x = wallLocation.X;  	y = wallLocation.Y;  	break;  case TerrainType.Floor:  	var location = ConstructFloorLocationAccordingToWalls (cell' map);  	x = location.X;  	y = location.Y;  	break;  case TerrainType.Door:  	var doorLocation = ConstructLocationAccordingToDoorOrientation (cell' map);  	x = doorLocation.X;  	y = doorLocation.Y;  	break;  }  
