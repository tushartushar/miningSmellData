Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,,The length of the parameter mFloorLocationByAdjacentRockCells is 33.
Long Identifier,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,,The length of the parameter mWallLocationByAdjacentRockCells is 32.
Long Statement,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConstructFloorLocationAccordingToWalls,The length of the statement  "            if (map.TryGetAdjacentCell(cell' Direction.North' out adjacentCell) && adjacentCell.Terrain == TerrainType.Rock) wallsFlag |= NORTH; " is 132.
Long Statement,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConstructFloorLocationAccordingToWalls,The length of the statement  "            if (map.TryGetAdjacentCell(cell' Direction.West' out adjacentCell) && adjacentCell.Terrain == TerrainType.Rock) wallsFlag |= WEST; " is 130.
Long Statement,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConstructFloorLocationAccordingToWalls,The length of the statement  "            if (map.TryGetAdjacentCell(cell' Direction.South' out adjacentCell) && adjacentCell.Terrain == TerrainType.Rock) wallsFlag |= SOUTH; " is 132.
Long Statement,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConstructFloorLocationAccordingToWalls,The length of the statement  "            if (map.TryGetAdjacentCell(cell' Direction.East' out adjacentCell) && adjacentCell.Terrain == TerrainType.Rock) wallsFlag |= EAST; " is 130.
Long Statement,Karcero.Visualizer,MainWindow,C:\repos\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Grid)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.UIElement_OnMouseDown); " is 131.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\OdedW_karcero\Karcero.Visualizer\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Magic Number,Karcero.Visualizer,Screenshot,C:\repos\OdedW_karcero\Karcero.Visualizer\Screenshot.cs,GetPngImage,The following statement contains a magic number: var renderTarget = new RenderTargetBitmap((int)renderWidth' (int)renderHeight' 96' 96' PixelFormats.Pbgra32);
Magic Number,Karcero.Visualizer,Screenshot,C:\repos\OdedW_karcero\Karcero.Visualizer\Screenshot.cs,GetPngImage,The following statement contains a magic number: var renderTarget = new RenderTargetBitmap((int)renderWidth' (int)renderHeight' 96' 96' PixelFormats.Pbgra32);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells[SOUTH | WEST] = new Point(0' TILE_SIZE * 2);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells[SOUTH] = new Point(TILE_SIZE' TILE_SIZE*2);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells[NORTH | EAST] = new Point(TILE_SIZE*2'0);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells[EAST] = new Point(TILE_SIZE * 2' TILE_SIZE);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells[SOUTH | EAST] = new Point(TILE_SIZE * 2' TILE_SIZE*2);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells[SOUTH | EAST] = new Point(TILE_SIZE * 2' TILE_SIZE*2);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells[NORTH | WEST | EAST] = new Point(TILE_SIZE*3'0);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells[EAST | WEST] = new Point(TILE_SIZE * 3' TILE_SIZE);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells[SOUTH | WEST | EAST] = new Point(TILE_SIZE * 3' TILE_SIZE*2);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells[SOUTH | WEST | EAST] = new Point(TILE_SIZE * 3' TILE_SIZE*2);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells[NORTH | WEST | SOUTH | EAST] = new Point(TILE_SIZE*5'0);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells[NORTH | WEST | SOUTH] = new Point(TILE_SIZE * 4' TILE_SIZE);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells[NORTH | SOUTH] = new Point(TILE_SIZE * 5' TILE_SIZE);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mFloorLocationByAdjacentRockCells[NORTH | EAST | SOUTH] = new Point(TILE_SIZE * 6' TILE_SIZE);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[0] = new Point(TILE_SIZE' TILE_SIZE * 4);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[EAST | SOUTH] = new Point(0' TILE_SIZE * 3);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[NORTH | SOUTH] = new Point(0' TILE_SIZE * 4);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[SOUTH] = new Point(0' TILE_SIZE * 4);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[NORTH] = new Point(0' TILE_SIZE * 4);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[NORTH | EAST] = new Point(0' TILE_SIZE * 5);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[WEST | EAST] = new Point(TILE_SIZE' TILE_SIZE * 3);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[EAST] = new Point(TILE_SIZE' TILE_SIZE * 3);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[WEST] = new Point(TILE_SIZE' TILE_SIZE * 3);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[WEST | SOUTH] = new Point(TILE_SIZE*2' TILE_SIZE * 3);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[WEST | SOUTH] = new Point(TILE_SIZE*2' TILE_SIZE * 3);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[WEST | NORTH] = new Point(TILE_SIZE*2' TILE_SIZE * 5);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[WEST | NORTH] = new Point(TILE_SIZE*2' TILE_SIZE * 5);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[EAST | NORTH | SOUTH] = new Point(TILE_SIZE*3' TILE_SIZE * 4);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[EAST | NORTH | SOUTH] = new Point(TILE_SIZE*3' TILE_SIZE * 4);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[WEST | EAST | SOUTH] = new Point(TILE_SIZE*4' TILE_SIZE * 3);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[WEST | EAST | SOUTH] = new Point(TILE_SIZE*4' TILE_SIZE * 3);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[NORTH | EAST | SOUTH | WEST] = new Point(TILE_SIZE*4' TILE_SIZE * 4);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[NORTH | EAST | SOUTH | WEST] = new Point(TILE_SIZE*4' TILE_SIZE * 4);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[EAST | NORTH | WEST] = new Point(TILE_SIZE*4' TILE_SIZE * 5);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[EAST | NORTH | WEST] = new Point(TILE_SIZE*4' TILE_SIZE * 5);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[SOUTH | NORTH | WEST] = new Point(TILE_SIZE*5' TILE_SIZE * 4);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,CellToSpriteRect,The following statement contains a magic number: mWallLocationByAdjacentRockCells[SOUTH | NORTH | WEST] = new Point(TILE_SIZE*5' TILE_SIZE * 4);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,Convert,The following statement contains a magic number: var x = (double)(TILE_SIZE * 6);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,Convert,The following statement contains a magic number: var y = (double)(TILE_SIZE * 5);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConstructWallLocationAccordingToAdjacentWalls,The following statement contains a magic number: if (map.GetAllAdjacentCells(cell' true).All(c => c.Terrain == TerrainType.Rock))                  return new Point(TILE_SIZE*6' TILE_SIZE*5);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConstructWallLocationAccordingToAdjacentWalls,The following statement contains a magic number: if (map.GetAllAdjacentCells(cell' true).All(c => c.Terrain == TerrainType.Rock))                  return new Point(TILE_SIZE*6' TILE_SIZE*5);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConstructWallLocationAccordingToAdjacentWalls,The following statement contains a magic number: return new Point(TILE_SIZE*6' TILE_SIZE*5);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConstructWallLocationAccordingToAdjacentWalls,The following statement contains a magic number: return new Point(TILE_SIZE*6' TILE_SIZE*5);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConstructLocationAccordingToDoorOrientation,The following statement contains a magic number: if (map.TryGetAdjacentCell(cell' Direction.East' out adjacentCell) && adjacentCell.Terrain == TerrainType.Floor)                   return new Point(TILE_SIZE * 6'0);
Magic Number,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,ConstructLocationAccordingToDoorOrientation,The following statement contains a magic number: return new Point(TILE_SIZE * 4'0);
Magic Number,Karcero.Visualizer,MainWindow,C:\repos\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,OnPreviewMouseWheel,The following statement contains a magic number: if (e.Delta > 0)              {                  mZoomValue += 0.3;              }
Magic Number,Karcero.Visualizer,MainWindow,C:\repos\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,OnPreviewMouseWheel,The following statement contains a magic number: if (e.Delta < 0)              {                  mZoomValue -= 0.3;              }
Magic Number,Karcero.Visualizer,MainWindow,C:\repos\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,OnPreviewMouseWheel,The following statement contains a magic number: mZoomValue = Math.Max(mZoomValue' 0.1);
Magic Number,Karcero.Visualizer,MainWindow,C:\repos\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,OnPreviewMouseWheel,The following statement contains a magic number: var centerOfViewport = new Point(scrollViewer.ViewportWidth / 2'                                               scrollViewer.ViewportHeight / 2);
Magic Number,Karcero.Visualizer,MainWindow,C:\repos\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,OnPreviewMouseWheel,The following statement contains a magic number: var centerOfViewport = new Point(scrollViewer.ViewportWidth / 2'                                               scrollViewer.ViewportHeight / 2);
Magic Number,Karcero.Visualizer,MainWindow,C:\repos\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,OnScrollViewerScrollChanged,The following statement contains a magic number: if (e.ExtentHeightChange != 0 || e.ExtentWidthChange != 0)              {                  Point? targetBefore = null;                  Point? targetNow = null;                    if (!mLastMousePositionOnTarget.HasValue)                  {                      if (mLastCenterPositionOnTarget.HasValue)                      {                          var centerOfViewport = new Point(scrollViewer.ViewportWidth / 2'                                                           scrollViewer.ViewportHeight / 2);                          Point centerOfTargetNow =                                scrollViewer.TranslatePoint(centerOfViewport' ItemsControl);                            targetBefore = mLastCenterPositionOnTarget;                          targetNow = centerOfTargetNow;                      }                  }                  else                  {                      targetBefore = mLastMousePositionOnTarget;                      targetNow = Mouse.GetPosition(ItemsControl);                        mLastMousePositionOnTarget = null;                  }                    if (targetBefore.HasValue)                  {                      double dXInTargetPixels = targetNow.Value.X - targetBefore.Value.X;                      double dYInTargetPixels = targetNow.Value.Y - targetBefore.Value.Y;                        double multiplicatorX = e.ExtentWidth / ItemsControl.Width;                      double multiplicatorY = e.ExtentHeight / ItemsControl.Height;                        double newOffsetX = scrollViewer.HorizontalOffset -                                          dXInTargetPixels * multiplicatorX;                      double newOffsetY = scrollViewer.VerticalOffset -                                          dYInTargetPixels * multiplicatorY;                        if (double.IsNaN(newOffsetX) || double.IsNaN(newOffsetY))                      {                          return;                      }                        scrollViewer.ScrollToHorizontalOffset(newOffsetX);                      scrollViewer.ScrollToVerticalOffset(newOffsetY);                  }              }
Magic Number,Karcero.Visualizer,MainWindow,C:\repos\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,OnScrollViewerScrollChanged,The following statement contains a magic number: if (e.ExtentHeightChange != 0 || e.ExtentWidthChange != 0)              {                  Point? targetBefore = null;                  Point? targetNow = null;                    if (!mLastMousePositionOnTarget.HasValue)                  {                      if (mLastCenterPositionOnTarget.HasValue)                      {                          var centerOfViewport = new Point(scrollViewer.ViewportWidth / 2'                                                           scrollViewer.ViewportHeight / 2);                          Point centerOfTargetNow =                                scrollViewer.TranslatePoint(centerOfViewport' ItemsControl);                            targetBefore = mLastCenterPositionOnTarget;                          targetNow = centerOfTargetNow;                      }                  }                  else                  {                      targetBefore = mLastMousePositionOnTarget;                      targetNow = Mouse.GetPosition(ItemsControl);                        mLastMousePositionOnTarget = null;                  }                    if (targetBefore.HasValue)                  {                      double dXInTargetPixels = targetNow.Value.X - targetBefore.Value.X;                      double dYInTargetPixels = targetNow.Value.Y - targetBefore.Value.Y;                        double multiplicatorX = e.ExtentWidth / ItemsControl.Width;                      double multiplicatorY = e.ExtentHeight / ItemsControl.Height;                        double newOffsetX = scrollViewer.HorizontalOffset -                                          dXInTargetPixels * multiplicatorX;                      double newOffsetY = scrollViewer.VerticalOffset -                                          dYInTargetPixels * multiplicatorY;                        if (double.IsNaN(newOffsetX) || double.IsNaN(newOffsetY))                      {                          return;                      }                        scrollViewer.ScrollToHorizontalOffset(newOffsetX);                      scrollViewer.ScrollToVerticalOffset(newOffsetY);                  }              }
Magic Number,Karcero.Visualizer,MainWindow,C:\repos\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Window = ((Karcero.Visualizer.MainWindow)(target));                            #line 7 "..\..\MainWindow.xaml"              this.Window.SizeChanged += new System.Windows.SizeChangedEventHandler(this.MainWindow_OnSizeChanged);                            #line default              #line hidden                            #line 7 "..\..\MainWindow.xaml"              this.Window.KeyDown += new System.Windows.Input.KeyEventHandler(this.UIElement_OnKeyDown);                            #line default              #line hidden              return;              case 2:                            #line 15 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Grid)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.UIElement_OnMouseDown);                            #line default              #line hidden              return;              case 3:              this.scrollViewer = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 4:              this.ItemsControl = ((System.Windows.Controls.ItemsControl)(target));              return;              case 5:              this.scaleTransform = ((System.Windows.Media.ScaleTransform)(target));              return;              }
Magic Number,Karcero.Visualizer,MainWindow,C:\repos\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Window = ((Karcero.Visualizer.MainWindow)(target));                            #line 7 "..\..\MainWindow.xaml"              this.Window.SizeChanged += new System.Windows.SizeChangedEventHandler(this.MainWindow_OnSizeChanged);                            #line default              #line hidden                            #line 7 "..\..\MainWindow.xaml"              this.Window.KeyDown += new System.Windows.Input.KeyEventHandler(this.UIElement_OnKeyDown);                            #line default              #line hidden              return;              case 2:                            #line 15 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Grid)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.UIElement_OnMouseDown);                            #line default              #line hidden              return;              case 3:              this.scrollViewer = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 4:              this.ItemsControl = ((System.Windows.Controls.ItemsControl)(target));              return;              case 5:              this.scaleTransform = ((System.Windows.Media.ScaleTransform)(target));              return;              }
Magic Number,Karcero.Visualizer,MainWindow,C:\repos\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Window = ((Karcero.Visualizer.MainWindow)(target));                            #line 7 "..\..\MainWindow.xaml"              this.Window.SizeChanged += new System.Windows.SizeChangedEventHandler(this.MainWindow_OnSizeChanged);                            #line default              #line hidden                            #line 7 "..\..\MainWindow.xaml"              this.Window.KeyDown += new System.Windows.Input.KeyEventHandler(this.UIElement_OnKeyDown);                            #line default              #line hidden              return;              case 2:                            #line 15 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Grid)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.UIElement_OnMouseDown);                            #line default              #line hidden              return;              case 3:              this.scrollViewer = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 4:              this.ItemsControl = ((System.Windows.Controls.ItemsControl)(target));              return;              case 5:              this.scaleTransform = ((System.Windows.Media.ScaleTransform)(target));              return;              }
Magic Number,Karcero.Visualizer,MainWindow,C:\repos\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Window = ((Karcero.Visualizer.MainWindow)(target));                            #line 7 "..\..\MainWindow.xaml"              this.Window.SizeChanged += new System.Windows.SizeChangedEventHandler(this.MainWindow_OnSizeChanged);                            #line default              #line hidden                            #line 7 "..\..\MainWindow.xaml"              this.Window.KeyDown += new System.Windows.Input.KeyEventHandler(this.UIElement_OnKeyDown);                            #line default              #line hidden              return;              case 2:                            #line 15 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Grid)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.UIElement_OnMouseDown);                            #line default              #line hidden              return;              case 3:              this.scrollViewer = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 4:              this.ItemsControl = ((System.Windows.Controls.ItemsControl)(target));              return;              case 5:              this.scaleTransform = ((System.Windows.Media.ScaleTransform)(target));              return;              }
Missing Default,Karcero.Visualizer,CellToSpriteRect,C:\repos\OdedW_karcero\Karcero.Visualizer\ValueConverters.cs,Convert,The following switch statement is missing a default case: switch (cell.Terrain)                  {                      case TerrainType.Rock:                          var wallLocation = ConstructWallLocationAccordingToAdjacentWalls(cell' map);                          x = wallLocation.X;                          y = wallLocation.Y;                          break;                      case TerrainType.Floor:                          var location = ConstructFloorLocationAccordingToWalls(cell' map);                          x = location.X;                          y = location.Y;                          break;                      case TerrainType.Door:                          var doorLocation = ConstructLocationAccordingToDoorOrientation(cell' map);                          x = doorLocation.X;                          y = doorLocation.Y;                          break;                  }
Missing Default,Karcero.Visualizer,MainWindow,C:\repos\OdedW_karcero\Karcero.Visualizer\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.Window = ((Karcero.Visualizer.MainWindow)(target));                            #line 7 "..\..\MainWindow.xaml"              this.Window.SizeChanged += new System.Windows.SizeChangedEventHandler(this.MainWindow_OnSizeChanged);                            #line default              #line hidden                            #line 7 "..\..\MainWindow.xaml"              this.Window.KeyDown += new System.Windows.Input.KeyEventHandler(this.UIElement_OnKeyDown);                            #line default              #line hidden              return;              case 2:                            #line 15 "..\..\MainWindow.xaml"              ((System.Windows.Controls.Grid)(target)).MouseDown += new System.Windows.Input.MouseButtonEventHandler(this.UIElement_OnMouseDown);                            #line default              #line hidden              return;              case 3:              this.scrollViewer = ((System.Windows.Controls.ScrollViewer)(target));              return;              case 4:              this.ItemsControl = ((System.Windows.Controls.ItemsControl)(target));              return;              case 5:              this.scaleTransform = ((System.Windows.Media.ScaleTransform)(target));              return;              }
