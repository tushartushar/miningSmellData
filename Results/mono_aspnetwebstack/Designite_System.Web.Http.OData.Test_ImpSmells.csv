Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,System.Net.Http.Formatting,MediaTypeFormatterTestBase<TFormatter>,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Net.Http.Formatting.Test\Formatting\MediaTypeFormatterTestBase.cs,ReadFromStreamAsync_UsesCorrectCharacterEncodingHelper,The method has 6 parameters. Parameters: formatter' content' formattedContent' mediaType' encoding' isDefaultEncoding
Long Parameter List,System.Net.Http.Formatting,MediaTypeFormatterTestBase<TFormatter>,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Net.Http.Formatting.Test\Formatting\MediaTypeFormatterTestBase.cs,WriteToStreamAsync_UsesCorrectCharacterEncodingHelper,The method has 6 parameters. Parameters: formatter' content' formattedContent' mediaType' encoding' isDefaultEncoding
Long Parameter List,System.Net.Http.Formatting,MediaTypeFormatterTestBase<TFormatter>,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Net.Http.Formatting.Test\Formatting\MediaTypeFormatterTestBase.cs,ReadContentUsingCorrectCharacterEncodingHelper,The method has 6 parameters. Parameters: formatter' content' formattedContent' mediaType' encoding' isDefaultEncoding
Long Parameter List,System.Net.Http.Formatting,MediaTypeFormatterTestBase<TFormatter>,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Net.Http.Formatting.Test\Formatting\MediaTypeFormatterTestBase.cs,WriteContentUsingCorrectCharacterEncodingHelper,The method has 6 parameters. Parameters: formatter' content' formattedContent' mediaType' encoding' isDefaultEncoding
Long Parameter List,System.Web.Http.OData.Builder,EdmModelAsserts,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmModelAsserts.cs,AssertHasPrimitiveProperty,The method has 5 parameters. Parameters: edmType' model' propertyName' primitiveTypeKind' isNullable
Long Parameter List,System.Web.Http.OData.Builder,EdmModelAsserts,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmModelAsserts.cs,AssertHasComplexProperty,The method has 5 parameters. Parameters: edmType' model' propertyName' propertyType' isNullable
Long Parameter List,System.Web.Http.OData.Builder,EdmModelAsserts,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmModelAsserts.cs,AssertHasCollectionProperty,The method has 5 parameters. Parameters: edmType' model' propertyName' propertyType' isNullable
Long Parameter List,System.Web.Http.OData.Builder,EdmModelAsserts,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmModelAsserts.cs,AssertHasNavigationProperty,The method has 6 parameters. Parameters: edmType' model' propertyName' mappedPropertyClrType' isNullable' multiplicity
Long Parameter List,System.Web.Http.OData.Builder,EdmModelAsserts,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmModelAsserts.cs,AssertHasProperty,The method has 6 parameters. Parameters: edmType' model' propertyName' propertyType' isNullable' isCollection
Long Parameter List,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableFilter,The method has 5 parameters. Parameters: controllerName' useCustomEdmModel' filter' nullPropagation' customerIds
Long Parameter List,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,NullHandling,The method has 5 parameters. Parameters: filter' unitsInStock' unitsOnOrder' withNullPropagation' withoutNullPropagation
Long Parameter List,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,StringSubstringStart,The method has 5 parameters. Parameters: productName' startIndex' compareString' withNullPropagation' withoutNullPropagation
Long Parameter List,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,StringSubstringStartAndLength,The method has 6 parameters. Parameters: productName' startIndex' length' compareString' withNullPropagation' withoutNullPropagation
Long Identifier,System.Net.Http.Formatting,MediaTypeFormatterTestBase<TFormatter>,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Net.Http.Formatting.Test\Formatting\MediaTypeFormatterTestBase.cs,WriteToStreamAsync_WritesDataButDoesNotCloseStream,The length of the parameter actualSampleTypeByteRepresentation is 34.
Long Identifier,System.Web.Http.OData.Builder,EntitySetLinkConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetLinkConfigurationTest.cs,CanConfigureAllLinksViaEditLink,The length of the parameter entitySetLinkBuilderAnnotation is 30.
Long Identifier,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CanConfigureOptionalBinding_For_NavigationPropertiesInDerivedType,The length of the parameter motorcycleManufacturerProperty is 30.
Long Identifier,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CanConfigureOptionalBinding_For_NavigationPropertiesInDerivedType,The length of the parameter motorcycleManufacturerPropertyTargetSet is 39.
Long Identifier,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CanConfigureRequiredBinding_For_NavigationPropertiesInDerivedType,The length of the parameter motorcycleManufacturerProperty is 30.
Long Identifier,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CanConfigureRequiredBinding_For_NavigationPropertiesInDerivedType,The length of the parameter motorcycleManufacturerPropertyTargetSet is 39.
Long Identifier,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CanConfigureManyBinding_For_NavigationPropertiesInDerivedType,The length of the parameter motorcycleManufacturerProperty is 30.
Long Identifier,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CanConfigureManyBinding_For_NavigationPropertiesInDerivedType,The length of the parameter motorcycleManufacturerPropertyTargetSet is 39.
Long Identifier,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CanConfigureLinks_For_NavigationPropertiesInDerivedType,The length of the parameter motorcycleManufacturerProperty is 30.
Long Identifier,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,NavigationLinksGenerationConvention_GeneratesLinksWithoutCast_ForBaseProperties,The length of the parameter motorcycleManufacturerProperty is 30.
Long Identifier,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_SupportsPrimitiveCollection,The length of the parameter primitiveCollectionPropertyType is 31.
Long Identifier,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,EntityType_Containing_ComplexTypeContainingComplexCollection_Works,The length of the parameter complexTypeWithComplexCollection is 32.
Long Identifier,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,,The length of the parameter _totalExpectedSchemaTypesForVehiclesModel is 41.
Long Identifier,System.Web.Http.OData.Formatter,ODataTestUtil,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataTestUtil.cs,,The length of the parameter ApplicationJsonMediaTypeWithQuality is 35.
Long Identifier,System.Web.Http.OData.Formatter,ODataTestUtil,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataTestUtil.cs,,The length of the parameter ApplicationAtomMediaTypeWithQuality is 35.
Long Identifier,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,,The length of the parameter _queryCompositionCustomerModel is 30.
Long Identifier,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,VerifyQueryDeserialization,The length of the parameter expectedResultWithNullPropagation is 33.
Long Identifier,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,VerifyQueryDeserialization,The length of the parameter expectedResultWithNullPropagation is 33.
Long Statement,System.Net.Http.Formatting,MediaTypeFormatterTestBase<TFormatter>,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Net.Http.Formatting.Test\Formatting\MediaTypeFormatterTestBase.cs,ReadFromStreamAsync_WhenContentLengthIsZero_DoesNotReadStream,The length of the statement  "                        mockStream.Verify(s => s.BeginRead(It.IsAny<byte[]>()' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<AsyncCallback>()' It.IsAny<object>())' Times.Never()); " is 152.
Long Statement,System.Net.Http.Formatting,MediaTypeFormatterTestBase<TFormatter>,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Net.Http.Formatting.Test\Formatting\MediaTypeFormatterTestBase.cs,WriteToStreamAsync_ThrowsOnNull,The length of the statement  "            Assert.ThrowsArgumentNull(() => { formatter.WriteToStreamAsync(null' new object()' Stream.Null' null' null); }' "type"); " is 120.
Long Statement,System.Net.Http.Formatting,MediaTypeFormatterTestBase<TFormatter>,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Net.Http.Formatting.Test\Formatting\MediaTypeFormatterTestBase.cs,WriteToStreamAsync_ThrowsOnNull,The length of the statement  "            Assert.ThrowsArgumentNull(() => { formatter.WriteToStreamAsync(typeof(object)' new object()' null' null' null); }' "writeStream"); " is 130.
Long Statement,System.Net.Http.Formatting,MediaTypeFormatterTestBase<TFormatter>,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Net.Http.Formatting.Test\Formatting\MediaTypeFormatterTestBase.cs,WriteToStreamAsync_WhenObjectIsNull_WritesDataButDoesNotCloseStream,The length of the statement  "                    mockStream.Verify(s => s.BeginWrite(It.IsAny<byte[]>()' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<AsyncCallback>()' It.IsAny<object>())' Times.Never()); " is 153.
Long Statement,System.Web.Http.OData,DefaultODataActionResolverTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\DefaultODataActionResolverTest.cs,Throws_InvalidOperation_when_action_not_found,The length of the statement  "            ODataDeserializerContext context = new ODataDeserializerContext { Request = GetPostRequest("http://server/service/MissingOperation")' Model = GetModel() }; " is 155.
Long Statement,System.Web.Http.OData,DefaultODataActionResolverTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\DefaultODataActionResolverTest.cs,Throws_InvalidOperation_when_multiple_overloads_found,The length of the statement  "            ODataDeserializerContext context = new ODataDeserializerContext { Request = GetPostRequest("http://server/service/Vehicles/Container.Car(8)/Park")' Model = GetModel() }; " is 169.
Long Statement,System.Web.Http.OData,DefaultODataActionResolverTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\DefaultODataActionResolverTest.cs,Throws_InvalidOperation_when_multiple_overloads_found,The length of the statement  "            }' "Action resolution failed. Multiple actions matching the action identifier 'Park' were found. The matching actions are: org.odata.Container.Park' org.odata.Container.Park."); " is 177.
Long Statement,System.Web.Http.OData,ODataResultOfTTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\ODataResultOfTTest.cs,ODataResult_SerializesToJson,The length of the statement  "            ODataResult<string> result = new ODataResult<string>(new string[] { "a"' "b"' "c" }' new Uri("http://localhost/NextPage")' 3); " is 126.
Long Statement,System.Web.Http.OData,ODataResultOfTTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\ODataResultOfTTest.cs,ODataResult_SerializesToJson,The length of the statement  "            new JsonMediaTypeFormatter().WriteToStreamAsync(typeof(ODataResult<string>)' result' ms' content: null' transportContext: null).Wait(); " is 135.
Long Statement,System.Web.Http.OData,ODataResultOfTTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\ODataResultOfTTest.cs,ODataResult_SerializesToXml,The length of the statement  "            ODataResult<string> result = new ODataResult<string>(new string[] { "a"' "b"' "c" }' new Uri("http://localhost/NextPage")' 3); " is 126.
Long Statement,System.Web.Http.OData,ODataResultOfTTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\ODataResultOfTTest.cs,ODataResult_SerializesToXml,The length of the statement  "            new XmlMediaTypeFormatter().WriteToStreamAsync(typeof(ODataResult<string>)' result' ms' content: null' transportContext: null).Wait(); " is 134.
Long Statement,System.Web.Http.OData,ODataResultOfTTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\ODataResultOfTTest.cs,ODataResult_SerializesToXml,The length of the statement  "                @"<ODataResultOfstring xmlns:i=""http://www.w3.org/2001/XMLSchema-instance"" xmlns=""http://schemas.datacontract.org/2004/07/System.Web.Http.OData""><Count>3</Count><NextPageLink>http://localhost/NextPage</NextPageLink><Items xmlns:d2p1=""http://schemas.microsoft.com/2003/10/Serialization/Arrays""><d2p1:string>a</d2p1:string><d2p1:string>b</d2p1:string><d2p1:string>c</d2p1:string></Items></ODataResultOfstring>"' " is 415.
Long Statement,System.Web.Http.OData,ODataMediaTypeMapping,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\TestCommon\ODataMediaTypeMapping.cs,TryMatchMediaType,The length of the statement  "            return String.Equals(responseMediaType.ToString()' MediaType.ToString()' StringComparison.OrdinalIgnoreCase) && DoesQueryStringMatch(queryString) " is 145.
Long Statement,System.Web.Http.OData,DeltaTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\DeltaTest.cs,CanGetChangedPropertyNames,The length of the statement  "            var original = new AddressEntity { ID = 1' City = "Redmond"' State = "NY"' StreetAddress = "21110 NE 44th St"' ZipCode = 98074 }; " is 129.
Long Statement,System.Web.Http.OData,DeltaTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\DeltaTest.cs,CanPatch,The length of the statement  "            var original = new AddressEntity { ID = 1' City = "Redmond"' State = "WA"' StreetAddress = "21110 NE 44th St"' ZipCode = 98074 }; " is 129.
Long Statement,System.Web.Http.OData,DeltaTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\DeltaTest.cs,CanCopyUnchangedValues,The length of the statement  "            var original = new AddressEntity { ID = 1' City = "Redmond"' State = "WA"' StreetAddress = "21110 NE 44th St"' ZipCode = 98074 }; " is 129.
Long Statement,System.Web.Http.OData,DeltaTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\DeltaTest.cs,CanPut,The length of the statement  "            var original = new AddressEntity { ID = 1' City = "Redmond"' State = "WA"' StreetAddress = "21110 NE 44th St"' ZipCode = 98074 }; " is 129.
Long Statement,System.Web.Http.OData,EdmTestHelpers,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\TestCommon\EdmTestHelpers.cs,GetModel,The length of the statement  "                    _model.SetAnnotationValue<ClrTypeAnnotation>(_model.FindDeclaredType("ODataDemo.Product")' new ClrTypeAnnotation(typeof(ODataEntityDeserializerTests.Product))); " is 160.
Long Statement,System.Web.Http.OData,EdmTestHelpers,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\TestCommon\EdmTestHelpers.cs,GetModel,The length of the statement  "                    _model.SetAnnotationValue<ClrTypeAnnotation>(_model.FindDeclaredType("ODataDemo.Supplier")' new ClrTypeAnnotation(typeof(ODataEntityDeserializerTests.Supplier))); " is 162.
Long Statement,System.Web.Http.OData,EdmTestHelpers,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\TestCommon\EdmTestHelpers.cs,GetModel,The length of the statement  "                    _model.SetAnnotationValue<ClrTypeAnnotation>(_model.FindDeclaredType("ODataDemo.Address")' new ClrTypeAnnotation(typeof(ODataEntityDeserializerTests.Address))); " is 160.
Long Statement,System.Web.Http.OData,EdmTestHelpers,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\TestCommon\EdmTestHelpers.cs,GetModel,The length of the statement  "                    _model.SetAnnotationValue<ClrTypeAnnotation>(_model.FindDeclaredType("ODataDemo.Category")' new ClrTypeAnnotation(typeof(ODataEntityDeserializerTests.Category))); " is 162.
Long Statement,System.Web.Http.OData,EdmTestHelpers,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\TestCommon\EdmTestHelpers.cs,GetModel,The length of the statement  "                    throw new NotSupportedException(string.Format("Parsing csdl failed with errors {0}"' String.Join("\n"' edmErrors.Select((edmError => edmError.ErrorMessage))))); " is 160.
Long Statement,System.Web.Http.OData,EdmTestHelpers,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\TestCommon\EdmTestHelpers.cs,StructuralProperty,The length of the statement  "            return new EdmStructuralProperty(declaringType' pInfo.Name' propertyType ?? EdmLibHelpers.GetEdmPrimitiveTypeReferenceOrNull(pInfo.PropertyType)); " is 146.
Long Statement,System.Web.Http.OData,HttpConfigurationExtensionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\HttpConfigurationExtensionTests.cs,AddQuerySupport_ActionFilters_TakePrecedence,The length of the statement  "            HttpControllerDescriptor controllerDescriptor = new HttpControllerDescriptor(config' "FilterProviderTest"' typeof(FilterProviderTestController)); " is 145.
Long Statement,System.Web.Http.OData,HttpConfigurationExtensionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\HttpConfigurationExtensionTests.cs,AddQuerySupport_ActionFilters_TakePrecedence,The length of the statement  "            HttpActionDescriptor actionDescriptor = new ReflectedHttpActionDescriptor(controllerDescriptor' typeof(FilterProviderTestController).GetMethod("GetQueryableWithFilterAttribute")); " is 179.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,OnActionExecuted_Throws_Null_Request,The length of the statement  "                String.Format("The HttpExecutedActionContext.Request is null.{0}Parameter name: actionExecutedContext"' Environment.NewLine)); " is 126.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,OnActionExecuted_Throws_Null_Configuration,The length of the statement  "            HttpControllerContext controllerContext = new HttpControllerContext(config' new HttpRouteData(new HttpRoute())' request); " is 121.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,OnActionExecuted_Throws_Null_Configuration,The length of the statement  "            HttpControllerDescriptor controllerDescriptor = new HttpControllerDescriptor(new HttpConfiguration()' "CustomerHighLevel"' typeof(CustomerHighLevelController)); " is 160.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,OnActionExecuted_Throws_Null_Configuration,The length of the statement  "            HttpActionDescriptor actionDescriptor = new ReflectedHttpActionDescriptor(controllerDescriptor' typeof(CustomerHighLevelController).GetMethod("Get")); " is 150.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,OnActionExecuted_Throws_Null_Configuration,The length of the statement  "                String.Format("Request message does not contain an HttpConfiguration object.{0}Parameter name: actionExecutedContext"' Environment.NewLine)); " is 141.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,DifferentReturnTypeWorks,The length of the statement  "            HttpControllerContext controllerContext = new HttpControllerContext(config' new HttpRouteData(new HttpRoute())' request); " is 121.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,DifferentReturnTypeWorks,The length of the statement  "            HttpControllerDescriptor controllerDescriptor = new HttpControllerDescriptor(new HttpConfiguration()' "CustomerHighLevel"' typeof(CustomerHighLevelController)); " is 160.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,DifferentReturnTypeWorks,The length of the statement  "            HttpActionDescriptor actionDescriptor = new ReflectedHttpActionDescriptor(controllerDescriptor' typeof(CustomerHighLevelController).GetMethod(methodName)); " is 155.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,DifferentReturnTypeWorks,The length of the statement  "            context.Response.Content = new ObjectContent(typeof(IEnumerable<Customer>)' responseObject' new JsonMediaTypeFormatter()); " is 122.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,UnknownQueryNotStartingWithDollarSignWorks,The length of the statement  "            HttpControllerContext controllerContext = new HttpControllerContext(config' new HttpRouteData(new HttpRoute())' request); " is 121.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,UnknownQueryNotStartingWithDollarSignWorks,The length of the statement  "            HttpControllerDescriptor controllerDescriptor = new HttpControllerDescriptor(new HttpConfiguration()' "CustomerHighLevel"' typeof(CustomerHighLevelController)); " is 160.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,UnknownQueryNotStartingWithDollarSignWorks,The length of the statement  "            HttpActionDescriptor actionDescriptor = new ReflectedHttpActionDescriptor(controllerDescriptor' typeof(CustomerHighLevelController).GetMethod("Get")); " is 150.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,UnknownQueryNotStartingWithDollarSignWorks,The length of the statement  "            context.Response.Content = new ObjectContent(typeof(IEnumerable<Customer>)' new List<Customer>()' new JsonMediaTypeFormatter()); " is 128.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,UnknownQueryStartingWithDollarSignThrows,The length of the statement  "            HttpControllerContext controllerContext = new HttpControllerContext(config' new HttpRouteData(new HttpRoute())' request); " is 121.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,UnknownQueryStartingWithDollarSignThrows,The length of the statement  "            HttpControllerDescriptor controllerDescriptor = new HttpControllerDescriptor(new HttpConfiguration()' "CustomerHighLevel"' typeof(CustomerHighLevelController)); " is 160.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,UnknownQueryStartingWithDollarSignThrows,The length of the statement  "            HttpActionDescriptor actionDescriptor = new ReflectedHttpActionDescriptor(controllerDescriptor' typeof(CustomerHighLevelController).GetMethod("Get")); " is 150.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,UnknownQueryStartingWithDollarSignThrows,The length of the statement  "            context.Response.Content = new ObjectContent(typeof(IEnumerable<Customer>)' new List<Customer>()' new JsonMediaTypeFormatter()); " is 128.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,NonGenericEnumerableReturnTypeThrows,The length of the statement  "            HttpControllerContext controllerContext = new HttpControllerContext(config' new HttpRouteData(new HttpRoute())' request); " is 121.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,NonGenericEnumerableReturnTypeThrows,The length of the statement  "            HttpControllerDescriptor controllerDescriptor = new HttpControllerDescriptor(new HttpConfiguration()' "CustomerHighLevel"' typeof(CustomerHighLevelController)); " is 160.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,NonGenericEnumerableReturnTypeThrows,The length of the statement  "            HttpActionDescriptor actionDescriptor = new ReflectedHttpActionDescriptor(controllerDescriptor' typeof(CustomerHighLevelController).GetMethod("GetNonGenericEnumerable")); " is 170.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,NonGenericEnumerableReturnTypeThrows,The length of the statement  "            context.Response.Content = new ObjectContent(typeof(IEnumerable)' new NonGenericEnumerable()' new JsonMediaTypeFormatter()); " is 124.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,NonGenericEnumerableReturnTypeThrows,The length of the statement  "                "Cannot create an EDM model as the action 'QueryableAttribute' on controller 'GetNonGenericEnumerable' has a return type 'CustomerHighLevel' that does not implement IEnumerable<T>."); " is 183.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,NonObjectContentResponse_ThrowsInvalidOperationException,The length of the statement  "            HttpControllerContext controllerContext = new HttpControllerContext(config' new HttpRouteData(new HttpRoute())' request); " is 121.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,NonObjectContentResponse_ThrowsInvalidOperationException,The length of the statement  "            HttpControllerDescriptor controllerDescriptor = new HttpControllerDescriptor(new HttpConfiguration()' "CustomerHighLevel"' typeof(CustomerHighLevelController)); " is 160.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,NonObjectContentResponse_ThrowsInvalidOperationException,The length of the statement  "            HttpActionDescriptor actionDescriptor = new ReflectedHttpActionDescriptor(controllerDescriptor' typeof(CustomerHighLevelController).GetMethod("GetIEnumerableOfCustomer")); " is 171.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,NonObjectContentResponse_ThrowsInvalidOperationException,The length of the statement  "                "Queries can not be applied to a response content of type 'System.Net.Http.StreamContent'. The response content must be an ObjectContent."); " is 140.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,InvalidActionReturnType_Throws,The length of the statement  "            HttpControllerContext controllerContext = new HttpControllerContext(config' new HttpRouteData(new HttpRoute())' request); " is 121.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,InvalidActionReturnType_Throws,The length of the statement  "            HttpControllerDescriptor controllerDescriptor = new HttpControllerDescriptor(new HttpConfiguration()' "CustomerHighLevel"' typeof(CustomerHighLevelController)); " is 160.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,InvalidActionReturnType_Throws,The length of the statement  "            HttpActionDescriptor actionDescriptor = new ReflectedHttpActionDescriptor(controllerDescriptor' typeof(CustomerHighLevelController).GetMethod(actionName)); " is 155.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,InvalidActionReturnType_Throws,The length of the statement  "            object instance = returnType.IsArray ? Array.CreateInstance(returnType.GetElementType()' 5) : Activator.CreateInstance(returnType); " is 131.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,InvalidActionReturnType_Throws,The length of the statement  "                    "The action '{0}' on controller '{1}' with return type '{2}' cannot support querying. Ensure the type of the returned content is IEnumerable' IQueryable' or a generic form of either interface."' " is 194.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,Primitives_Can_Be_Used_For_Top_And_Skip,The length of the statement  "            HttpControllerContext controllerContext = new HttpControllerContext(config' new HttpRouteData(new HttpRoute())' request); " is 121.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,Primitives_Can_Be_Used_For_Top_And_Skip,The length of the statement  "            HttpControllerDescriptor controllerDescriptor = new HttpControllerDescriptor(new HttpConfiguration()' "Primitive"' typeof(PrimitiveController)); " is 144.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,Primitives_Can_Be_Used_For_Top_And_Skip,The length of the statement  "            HttpActionDescriptor actionDescriptor = new ReflectedHttpActionDescriptor(controllerDescriptor' typeof(PrimitiveController).GetMethod("GetIEnumerableOfInt")); " is 158.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,Primitives_Can_Be_Used_For_Top_And_Skip,The length of the statement  "            HttpContent expectedResponse = new ObjectContent(typeof(IEnumerable<int>)' new List<int>()' new JsonMediaTypeFormatter()); " is 122.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,Primitives_Cannot_Be_Used_By_Filter_And_OrderBy,The length of the statement  "            HttpControllerContext controllerContext = new HttpControllerContext(config' new HttpRouteData(new HttpRoute())' request); " is 121.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,Primitives_Cannot_Be_Used_By_Filter_And_OrderBy,The length of the statement  "            HttpControllerDescriptor controllerDescriptor = new HttpControllerDescriptor(new HttpConfiguration()' "Primitive"' typeof(PrimitiveController)); " is 144.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,Primitives_Cannot_Be_Used_By_Filter_And_OrderBy,The length of the statement  "            HttpActionDescriptor actionDescriptor = new ReflectedHttpActionDescriptor(controllerDescriptor' typeof(PrimitiveController).GetMethod("GetIEnumerableOfInt")); " is 158.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,Primitives_Cannot_Be_Used_By_Filter_And_OrderBy,The length of the statement  "            HttpResponseException responseException = Assert.Throws<HttpResponseException>(() => attribute.OnActionExecuted(context)); " is 122.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,ValidateQuery_Throws_With_Null_Request,The length of the statement  "            var options = new ODataQueryOptions(new ODataQueryContext(model' typeof(System.Web.Http.OData.Builder.TestModels.Customer)' "Customers")' new HttpRequestMessage()); " is 164.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,ValidateQuery_Accepts_All_Supported_QueryNames,The length of the statement  "            var options = new ODataQueryOptions(new ODataQueryContext(model' typeof(System.Web.Http.OData.Builder.TestModels.Customer)' "Customers")' request); " is 147.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,ValidateQuery_Sends_BadRequest_For_Unsupported_QueryNames,The length of the statement  "            var options = new ODataQueryOptions(new ODataQueryContext(model' typeof(System.Web.Http.OData.Builder.TestModels.Customer)' "Customers")' request); " is 147.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,ValidateQuery_Sends_BadRequest_For_Unrecognized_QueryNames,The length of the statement  "            var options = new ODataQueryOptions(new ODataQueryContext(model' typeof(System.Web.Http.OData.Builder.TestModels.Customer)' "Customers")' request); " is 147.
Long Statement,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,ValidateQuery_Can_Override_Base,The length of the statement  "            mockAttribute.Setup(m => m.ValidateQuery(It.IsAny<HttpRequestMessage>()' It.IsAny<ODataQueryOptions>())).Callback(() => { }).Verifiable(); " is 138.
Long Statement,System.Web.Http.OData.Builder,ActionConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ActionConfigurationTest.cs,CanCreateActionThatBindsToEntityCollection,The length of the statement  "            Assert.Equal(string.Format("Collection({0})"' typeof(Customer).FullName)' sendEmail.Parameters.Single().TypeConfiguration.FullName); " is 132.
Long Statement,System.Web.Http.OData.Builder,ActionConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ActionConfigurationTest.cs,CanCreateEdmModel_WithNonBindableAction,The length of the statement  "            Assert.Equal(typeof(Customer).FullName' (action.EntitySet as IEdmEntitySetReferenceExpression).ReferencedEntitySet.ElementType.FullName()); " is 139.
Long Statement,System.Web.Http.OData.Builder,ActionConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ActionConfigurationTest.cs,CanManuallyConfigureActionLinkFactory,The length of the statement  "            EntityInstanceContext<Customer> context = new EntityInstanceContext<Customer>(model' null' customerType' null' new Customer { CustomerId = 1 }); " is 144.
Long Statement,System.Web.Http.OData.Builder,ActionConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ActionConfigurationTest.cs,CanManuallyConfigureActionLinkFactory,The length of the statement  "            IEdmFunctionImport rewardAction = model.SchemaElements.OfType<IEdmEntityContainer>().SingleOrDefault().FunctionImports().SingleOrDefault(); " is 139.
Long Statement,System.Web.Http.OData.Builder,ActionConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ActionConfigurationTest.cs,WhenActionLinksNotManuallyConfigured_ConventionBasedBuilderUsesConventions,The length of the statement  "            EntityInstanceContext<Movie> context = new EntityInstanceContext<Movie>(model' entitySet' movieType' urlHelper' new Movie { ID = 1' Name = "Avatar" }' false); " is 158.
Long Statement,System.Web.Http.OData.Builder,BindableProcedureFinderAnnotationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\BindableProcedureFinderAnnotationTest.cs,CanBuildBoundProcedureCacheForIEdmModel,The length of the statement  "            IEntityTypeConfiguration movieConfiguration = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Single(t => t.Name == "Movie"); " is 136.
Long Statement,System.Web.Http.OData.Builder,ParameterConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ParameterConfigurationTest.cs,BindingParameterConfigurationThrowsWhenParameterTypeIsNotEntity,The length of the statement  "                BindingParameterConfiguration configuration = new BindingParameterConfiguration("name"' builder.GetTypeConfigurationOrNull(typeof(Address))' true); " is 147.
Long Statement,System.Web.Http.OData.Builder,ParameterConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ParameterConfigurationTest.cs,NonbindingParameterConfigurationThrowsWhenParameterTypeIsEntity,The length of the statement  "                NonbindingParameterConfiguration configuration = new NonbindingParameterConfiguration("name"' builder.GetTypeConfigurationOrNull(typeof(Customer))); " is 148.
Long Statement,System.Web.Http.OData.Builder,CollectionPropertyConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\CollectionPropertyConfigurationTest.cs,HasCollectionException,The length of the statement  "                CollectionPropertyConfiguration configuration = new CollectionPropertyConfiguration(nonCollectionProperty' structuralType.Object); " is 130.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,DerivedProperties_ReturnsAllDerivedProperties,The length of the statement  "            entityA.Setup(e => e.Properties).Returns(new[] { MockProperty("A1"' entityA.Object)' MockProperty("A2"' entityA.Object) }); " is 123.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,DerivedProperties_ReturnsAllDerivedProperties,The length of the statement  "            entityB.Setup(e => e.Properties).Returns(new[] { MockProperty("B1"' entityB.Object)' MockProperty("B2"' entityB.Object) }); " is 123.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,DerivedProperties_ReturnsAllDerivedProperties,The length of the statement  "            entityC.Setup(e => e.Properties).Returns(new[] { MockProperty("C1"' entityC.Object)' MockProperty("C2"' entityC.Object) }); " is 123.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,ThisAndBaseAndDerivedTypes_Works,The length of the statement  "            IEntityTypeConfiguration vehicle = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "vehicle").Single(); " is 135.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,BaseTypes_Works,The length of the statement  "            IEntityTypeConfiguration vehicle = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "vehicle").Single(); " is 135.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,BaseTypes_Works,The length of the statement  "            IEntityTypeConfiguration motorcycle = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "motorcycle").Single(); " is 141.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,BaseTypes_Works,The length of the statement  "            IEntityTypeConfiguration sportbike = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "sportbike").Single(); " is 139.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,DerivedTypes_Works,The length of the statement  "            IEntityTypeConfiguration vehicle = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "vehicle").Single(); " is 135.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,DerivedTypes_Works,The length of the statement  "            IEntityTypeConfiguration car = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "car").Single(); " is 127.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,DerivedTypes_Works,The length of the statement  "            IEntityTypeConfiguration motorcycle = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "motorcycle").Single(); " is 141.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,DerivedTypes_Works,The length of the statement  "            IEntityTypeConfiguration sportbike = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "sportbike").Single(); " is 139.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,IsAssignableFrom_ReturnsTrueForDerivedType,The length of the statement  "            IEntityTypeConfiguration vehicle = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "vehicle").Single(); " is 135.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,IsAssignableFrom_ReturnsTrueForDerivedType,The length of the statement  "            IEntityTypeConfiguration car = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "car").Single(); " is 127.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,IsAssignableFrom_ReturnsTrueForDerivedType,The length of the statement  "            IEntityTypeConfiguration motorcycle = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "motorcycle").Single(); " is 141.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,IsAssignableFrom_ReturnsTrueForDerivedType,The length of the statement  "            IEntityTypeConfiguration sportbike = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "sportbike").Single(); " is 139.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,IsAssignableFrom_ReturnsFalseForBaseType,The length of the statement  "            IEntityTypeConfiguration vehicle = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "vehicle").Single(); " is 135.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,IsAssignableFrom_ReturnsFalseForBaseType,The length of the statement  "            IEntityTypeConfiguration car = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "car").Single(); " is 127.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,IsAssignableFrom_ReturnsFalseForBaseType,The length of the statement  "            IEntityTypeConfiguration motorcycle = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "motorcycle").Single(); " is 141.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,IsAssignableFrom_ReturnsFalseForBaseType,The length of the statement  "            IEntityTypeConfiguration sportbike = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "sportbike").Single(); " is 139.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,IsAssignableFrom_ReturnsFalseForUnRelatedTypes,The length of the statement  "            IEntityTypeConfiguration vehicle = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "vehicle").Single(); " is 135.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,IsAssignableFrom_ReturnsFalseForUnRelatedTypes,The length of the statement  "            IEntityTypeConfiguration car = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "car").Single(); " is 127.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,IsAssignableFrom_ReturnsFalseForUnRelatedTypes,The length of the statement  "            IEntityTypeConfiguration motorcycle = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "motorcycle").Single(); " is 141.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,IsAssignableFrom_ReturnsFalseForUnRelatedTypes,The length of the statement  "            IEntityTypeConfiguration sportbike = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "sportbike").Single(); " is 139.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,ThisAndBaseTypes_ReturnsThisType,The length of the statement  "            IEntityTypeConfiguration sportbike = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "sportbike").Single(); " is 139.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,ThisAndBaseTypes_ReturnsAllTheBaseTypes,The length of the statement  "            IEntityTypeConfiguration vehicle = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "vehicle").Single(); " is 135.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,ThisAndBaseTypes_ReturnsAllTheBaseTypes,The length of the statement  "            IEntityTypeConfiguration motorcycle = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "motorcycle").Single(); " is 141.
Long Statement,System.Web.Http.OData.Builder,EdmTypeConfigurationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmTypeConfigurationExtensionsTest.cs,ThisAndBaseTypes_ReturnsAllTheBaseTypes,The length of the statement  "            IEntityTypeConfiguration sportbike = builder.StructuralTypes.OfType<IEntityTypeConfiguration>().Where(e => e.Name == "sportbike").Single(); " is 139.
Long Statement,System.Web.Http.OData.Builder,EdmModelAsserts,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmModelAsserts.cs,AssertHasNavigationTarget,The length of the statement  "            IEdmNavigationTargetMapping navMapping = entitySet.NavigationTargets.Where(n => n.NavigationProperty == navigationProperty).SingleOrDefault(); " is 142.
Long Statement,System.Web.Http.OData.Builder,EdmModelAsserts,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmModelAsserts.cs,AssertHasEntityType,The length of the statement  "            var entityType = model.SchemaElements.OfType<IEdmEntityType>().Where(t => model.GetEdmType(mappedEntityClrType).IsEquivalentTo(t)).SingleOrDefault(); " is 149.
Long Statement,System.Web.Http.OData.Builder,EdmModelAsserts,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmModelAsserts.cs,AssertHasComplexType,The length of the statement  "            var complexType = model.SchemaElements.OfType<IEdmComplexType>().Where(t => model.GetEdmType(mappedClrType).IsEquivalentTo(t)).SingleOrDefault(); " is 145.
Long Statement,System.Web.Http.OData.Builder,EdmModelAsserts,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmModelAsserts.cs,AssertHasPrimitiveProperty,The length of the statement  "            Type primitiveType = EdmLibHelpers.GetClrType(new EdmPrimitiveTypeReference(EdmCoreModel.Instance.GetPrimitiveType(primitiveTypeKind)' isNullable)' model); " is 155.
Long Statement,System.Web.Http.OData.Builder,EdmModelAsserts,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmModelAsserts.cs,AssertHasComplexProperty,The length of the statement  "            IEdmStructuralProperty complexProperty = edmType.AssertHasProperty<IEdmStructuralProperty>(model' propertyName' propertyType' isNullable); " is 138.
Long Statement,System.Web.Http.OData.Builder,EdmModelAsserts,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmModelAsserts.cs,AssertHasCollectionProperty,The length of the statement  "            IEdmStructuralProperty complexProperty = edmType.AssertHasProperty<IEdmStructuralProperty>(model' propertyName' propertyType' isNullable' isCollection: true); " is 158.
Long Statement,System.Web.Http.OData.Builder,EdmModelAsserts,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EdmModelAsserts.cs,AssertHasNavigationProperty,The length of the statement  "            IEdmNavigationProperty navigationProperty = edmType.AssertHasProperty<IEdmNavigationProperty>(model' propertyName' propertyType: null' isNullable: isNullable); " is 159.
Long Statement,System.Web.Http.OData.Builder,ComplexTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ComplexTypeTest.cs,CreateInfiniteRecursiveComplexTypeDefinitionFails,The length of the statement  "                "The complex type 'System.Web.Http.OData.Builder.TestModels.ZipCode' has a reference to itself through the property 'Recursive'. A recursive loop of complex types is not allowed."); " is 181.
Long Statement,System.Web.Http.OData.Builder,EntitySetLinkConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetLinkConfigurationTest.cs,CanConfigureAllLinksViaEditLink,The length of the statement  "            var entityContext = new EntityInstanceContext { EdmModel = model' EntitySet = productsSet' EntityType = productType' EntityInstance = productInstance' UrlHelper = new UrlHelper(new HttpRequestMessage()) }; " is 205.
Long Statement,System.Web.Http.OData.Builder,EntitySetLinkConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetLinkConfigurationTest.cs,CanConfigureLinksIndependently,The length of the statement  "            var entityContext = new EntityInstanceContext { EdmModel = model' EntitySet = productsSet' EntityType = productType' EntityInstance = productInstance' UrlHelper = new UrlHelper(new HttpRequestMessage()) }; " is 205.
Long Statement,System.Web.Http.OData.Builder,EntitySetLinkConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetLinkConfigurationTest.cs,FailingToConfigureNavigationLinks_Results_In_InvalidOperationException_When_BuildingNavigationLink,The length of the statement  "                "No NavigationLink factory was found for the navigation property 'Orders' from entity type 'System.Web.Http.OData.Builder.EntitySetLinkConfigurationTest_Product' on entity set 'Products'. " + " is 191.
Long Statement,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CanAddBinding_For_DerivedNavigationProperty,The length of the statement  "            var navProperty = motorcycle.AddNavigationProperty(typeof(Motorcycle).GetProperty("Manufacturer")' EdmMultiplicity.One); " is 120.
Long Statement,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CanAddBinding_For_DerivedNavigationProperty,The length of the statement  "            var edmNavProperty = motorcycleEdmType.AssertHasNavigationProperty(model' "Manufacturer"' typeof(MotorcycleManufacturer)' isNullable: false' multiplicity: EdmMultiplicity.ZeroOrOne); " is 182.
Long Statement,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CanAddNavigationLink_For_DerivedNavigationProperty,The length of the statement  "            var navProperty = motorcycle.AddNavigationProperty(typeof(Motorcycle).GetProperty("Manufacturer")' EdmMultiplicity.One); " is 120.
Long Statement,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CanAddNavigationLink_For_DerivedNavigationProperty,The length of the statement  "            var edmNavProperty = motorcycleEdmType.AssertHasNavigationProperty(model' "Manufacturer"' typeof(MotorcycleManufacturer)' isNullable: false' multiplicity: EdmMultiplicity.ZeroOrOne); " is 182.
Long Statement,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CanAddNavigationLink_For_DerivedNavigationProperty,The length of the statement  "                model.GetEntitySetLinkBuilder(vehiclesEdmSet).BuildNavigationLink(new EntityInstanceContext()' edmNavProperty).AbsoluteUri); " is 124.
Long Statement,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,AddBinding_For_NavigationPropertyInHierarchy_Throws,The length of the statement  "            var navProperty = motorcycle.AddNavigationProperty(typeof(Motorcycle).GetProperty("Manufacturer")' EdmMultiplicity.One); " is 120.
Long Statement,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,AddBinding_For_NavigationPropertyInHierarchy_Throws,The length of the statement  "                "The declaring entity type 'System.Web.Http.OData.Builder.TestModels.Motorcycle' of the given navigation property is not a part of the entity type 'System.Web.Http.OData.Builder.TestModels.Vehicle' hierarchy of the entity set 'vehicles'."); " is 240.
Long Statement,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,AddNavigationLink_For_NavigationPropertyInHierarchy_Throws,The length of the statement  "            var navProperty = motorcycle.AddNavigationProperty(typeof(Motorcycle).GetProperty("Manufacturer")' EdmMultiplicity.One); " is 120.
Long Statement,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,AddNavigationLink_For_NavigationPropertyInHierarchy_Throws,The length of the statement  "                "The declaring entity type 'System.Web.Http.OData.Builder.TestModels.Motorcycle' of the given navigation property is not a part of the entity type 'System.Web.Http.OData.Builder.TestModels.Vehicle' hierarchy of the entity set 'vehicles'."); " is 240.
Long Statement,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CanConfigureOptionalBinding_For_NavigationPropertiesInDerivedType,The length of the statement  "            var motorcycleManufacturerProperty = motorcycle.AssertHasNavigationProperty(model' "Manufacturer"' typeof(MotorcycleManufacturer)' isNullable: true' multiplicity: EdmMultiplicity.ZeroOrOne); " is 190.
Long Statement,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CanConfigureRequiredBinding_For_NavigationPropertiesInDerivedType,The length of the statement  "            var motorcycleManufacturerProperty = motorcycle.AssertHasNavigationProperty(model' "Manufacturer"' typeof(MotorcycleManufacturer)' isNullable: false' multiplicity: EdmMultiplicity.ZeroOrOne); " is 191.
Long Statement,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CanConfigureManyBinding_For_NavigationPropertiesInDerivedType,The length of the statement  "            var motorcycleManufacturerProperty = motorcycle.AssertHasNavigationProperty(model' "Manufacturers"' typeof(MotorcycleManufacturer)' isNullable: false' multiplicity: EdmMultiplicity.Many); " is 187.
Long Statement,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CanConfigureLinks_For_NavigationPropertiesInDerivedType,The length of the statement  "                (ctxt' property) => new Uri(String.Format("http://localhost/vehicles/{0}/{1}/{2}"' ctxt.EntityInstance.Model' ctxt.EntityInstance.Name' property.Name))); " is 153.
Long Statement,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CanConfigureLinks_For_NavigationPropertiesInDerivedType,The length of the statement  "            var motorcycleManufacturerProperty = motorcycle.AssertHasNavigationProperty(model' "Manufacturer"' typeof(MotorcycleManufacturer)' isNullable: true' multiplicity: EdmMultiplicity.ZeroOrOne); " is 190.
Long Statement,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CanConfigureLinks_For_NavigationPropertiesInDerivedType,The length of the statement  "                new EntityInstanceContext { EntityInstance = new Motorcycle { Name = "Motorcycle1"' Model = 2009 }' EdmModel = model' EntitySet = vehicles' EntityType = motorcycle }' " is 166.
Long Statement,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CannotBindNavigationPropertyAutmatically_WhenMultipleEntitySetsOfPropertyType_Exist,The length of the statement  "            builder.EntitySet<Motorcycle>("motorcycles1").HasRequiredBinding(m => m.Manufacturer' "NorthWestMotorcycleManufacturers"); " is 122.
Long Statement,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CannotBindNavigationPropertyAutmatically_WhenMultipleEntitySetsOfPropertyType_Exist,The length of the statement  "            "Cannot automatically bind the navigation property 'Manufacturer' on entity type 'System.Web.Http.OData.Builder.TestModels.Motorcycle' for the source entity set 'motorcycles2' because there are two or more matching target entity sets. " + " is 238.
Long Statement,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,CreateEntityTypeWithRelationship,The length of the statement  "            var builder = new ODataModelBuilder().Add_Customer_EntityType().Add_Order_EntityType().Add_OrderCustomer_Relationship(); " is 120.
Long Statement,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,CanCreateEntityWithCollectionProperties,The length of the statement  "            var aliasesProperty = customer.Properties.OfType<CollectionPropertyConfiguration>().SingleOrDefault(p => p.Name == "Aliases"); " is 126.
Long Statement,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,CanCreateEntityWithCollectionProperties,The length of the statement  "            var addressesProperty = customer.Properties.OfType<CollectionPropertyConfiguration>().SingleOrDefault(p => p.Name == "Addresses"); " is 130.
Long Statement,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,HasKeyOnDerivedTypes_Throws,The length of the statement  "                "Cannot define keys on type 'System.Web.Http.OData.Builder.TestModels.Motorcycle' deriving from 'System.Web.Http.OData.Builder.TestModels.Vehicle'. Only the root type in the entity inheritance hierarchy can contain keys."); " is 223.
Long Statement,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,RedefiningBaseTypeProperty_Throws,The length of the statement  "                "Cannot redefine property 'WheelCount' already defined on the base type 'System.Web.Http.OData.Builder.TestModels.Vehicle'."); " is 126.
Long Statement,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,DefiningPropertyOnBaseTypeAlreadyPresentInDerivedType_Throws,The length of the statement  "                "Cannot define property 'Model' in the base entity type 'System.Web.Http.OData.Builder.TestModels.Vehicle' as the derived type 'System.Web.Http.OData.Builder.TestModels.Motorcycle' already defines it."); " is 203.
Long Statement,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,DerivesFrom_Throws_IfDerivedTypeHasKeys,The length of the statement  "            "Cannot define keys on type 'System.Web.Http.OData.Builder.TestModels.Motorcycle' deriving from 'System.Web.Http.OData.Builder.TestModels.Vehicle'. Only the root type in the entity inheritance hierarchy can contain keys."); " is 223.
Long Statement,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,DerivesFrom_Throws_WhenSettingTheBaseType_IfDuplicatePropertyInBaseType,The length of the statement  "                "Cannot redefine property 'Model' already defined on the base type 'System.Web.Http.OData.Builder.TestModels.Vehicle'."); " is 121.
Long Statement,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,DerivesFrom_Throws_WhenSettingTheBaseType_IfDuplicatePropertyInDerivedType,The length of the statement  "                "Cannot define property 'Model' in the base entity type 'System.Web.Http.OData.Builder.TestModels.Motorcycle' as the derived type 'System.Web.Http.OData.Builder.TestModels.SportBike' already defines it."); " is 205.
Long Statement,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,CannotDeriveFromItself,The length of the statement  "            "'System.Web.Http.OData.Builder.TestModels.Vehicle' does not inherit from 'System.Web.Http.OData.Builder.TestModels.Vehicle'."); " is 128.
Long Statement,System.Web.Http.OData.Builder,MetadataTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\MetadataTest.cs,CanEmitModelWithTwoEntitiesAndARelationship,The length of the statement  "            var builder = new ODataModelBuilder().Add_Order_EntityType().Add_Customer_EntityType().Add_CustomerOrders_Relationship(); " is 121.
Long Statement,System.Web.Http.OData.Builder,ProgrammableBuilderApiTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ProgrammableBuilderApiTest.cs,CreateModelUsingProgrammableApi,The length of the statement  "            var ordersPropertyConfig = customerConfig.AddNavigationProperty(typeof(Customer).GetProperty("Orders")' EdmMultiplicity.Many); " is 126.
Long Statement,System.Web.Http.OData.Builder,RoutingTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\RoutingTest.cs,CanUseRelativeLinks,The length of the statement  "            customersSet.FindBinding("Orders").HasLinkFactory(o => string.Format("Orders/ByCustomerId/{0}"' ((Customer)o.EntityInstance).CustomerId)); " is 138.
Long Statement,System.Web.Http.OData.Builder,RoutingTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\RoutingTest.cs,CanUseRelativeLinks,The length of the statement  "            //var entityContext = new EntityInstanceContext<Customer>(model' customerEdmEntitySet' (IEdmEntityType)customerEdmEntitySet.ElementType' null' new Customer { CustomerId = 24 }); " is 177.
Long Statement,System.Web.Http.OData.Builder,ODataMetaDataControllerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\ODataMetaDataControllerTests.cs,DollarMetaData_Works_WithoutAcceptHeader,The length of the statement  "            server.Configuration.Routes.MapHttpRoute(ODataRouteNames.Metadata' "$metadata"' new { Controller = "ODataMetadata"' Action = "GetMetadata" }); " is 142.
Long Statement,System.Web.Http.OData.Builder,ODataMetaDataControllerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\ODataMetaDataControllerTests.cs,GetMetadata_Throws_IfModelIsNotSetOnConfiguration_And_ODataFormatterIsNotPresent,The length of the statement  "                "No OData formatter was found to write the OData metadata. Consider registering an appropriate ODataMediaTypeFormatter on the configuration's formatter collection."); " is 166.
Long Statement,System.Web.Http.OData.Builder,ODataMetaDataControllerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\ODataMetaDataControllerTests.cs,DollarMetaDataWorks_AfterTracingIsEnabled_IfModelIsSetOnConfiguration,The length of the statement  "            server.Configuration.Routes.MapHttpRoute(ODataRouteNames.Metadata' "$metadata"' new { Controller = "ODataMetadata"' Action = "GetMetadata" }); " is 142.
Long Statement,System.Web.Http.OData.Builder,ODataMetaDataControllerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\ODataMetaDataControllerTests.cs,ServiceDocumentWorks_AfterTracingIsEnabled_IfModelIsSetOnConfiguration,The length of the statement  "            server.Configuration.Routes.MapHttpRoute(ODataRouteNames.ServiceDocument' ""' new { Controller = "ODataMetadata"' Action = "GetServiceDocument" }); " is 147.
Long Statement,System.Web.Http.OData.Builder.Conventions,ActionLinkGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ActionLinkGenerationConventionTest.cs,GenerateActionLink_GeneratesLinkWithoutCast_IfEntitySetTypeDerivesFromActionEntityType,The length of the statement  "                new EntityInstanceContext(model' carsEdmSet' carsEdmSet.ElementType' request.GetUrlHelper()' new Car { Model = 2009' Name = "Accord" })' " is 136.
Long Statement,System.Web.Http.OData.Builder.Conventions,ActionLinkGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ActionLinkGenerationConventionTest.cs,GenerateActionLink_GeneratesLinkWithoutCast_IfEntitySetTypeMatchesActionEntityType,The length of the statement  "                new EntityInstanceContext(model' carsEdmSet' carsEdmSet.ElementType' request.GetUrlHelper()' new Car { Model = 2009' Name = "Accord" })' " is 136.
Long Statement,System.Web.Http.OData.Builder.Conventions,ActionLinkGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ActionLinkGenerationConventionTest.cs,GenerateActionLink_GeneratesLinkWithCast_IfEntitySetTypeDoesnotMatchActionEntityType,The length of the statement  "            configuration.Routes.MapHttpRoute(ODataRouteNames.InvokeBoundActionWithCast' "{controller}({boundId})/{entityType}/{odataAction}"); " is 131.
Long Statement,System.Web.Http.OData.Builder.Conventions,ActionLinkGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ActionLinkGenerationConventionTest.cs,GenerateActionLink_GeneratesLinkWithCast_IfEntitySetTypeDoesnotMatchActionEntityType,The length of the statement  "                new EntityInstanceContext(model' vehiclesEdmSet' carEdmType' request.GetUrlHelper()' new Car { Model = 2009' Name = "Accord" })' " is 128.
Long Statement,System.Web.Http.OData.Builder.Conventions,ActionLinkGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ActionLinkGenerationConventionTest.cs,GenerateActionLink_GeneratesLinkWithCast_IfEntitySetTypeDoesnotMatchActionEntityType,The length of the statement  "            Assert.Equal("http://localhost/vehicles(Model=2009'Name='Accord')/System.Web.Http.OData.Builder.TestModels.Car/Paint"' link.AbsoluteUri); " is 137.
Long Statement,System.Web.Http.OData.Builder.Conventions,ActionLinkGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ActionLinkGenerationConventionTest.cs,Apply_Doesnot_Override_UserConfiguration,The length of the statement  "            var paintEdmAction = model.GetAvailableProcedures(model.FindDeclaredType("System.Web.Http.OData.Builder.TestModels.Car") as IEdmEntityType).Single(); " is 149.
Long Statement,System.Web.Http.OData.Builder.Conventions,ActionLinkGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ActionLinkGenerationConventionTest.cs,Apply_Doesnot_Override_UserConfiguration,The length of the statement  "            Uri link = actionLinkBuilder.BuildActionLink(new EntityInstanceContext(model' vehiclesEdmSet' carEdmType' request.GetUrlHelper()' new Car { Model = 2009' Name = "Accord" })); " is 174.
Long Statement,System.Web.Http.OData.Builder.Conventions,AssociationSetDiscoveryConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\AssociationSetDiscoveryConventionTest.cs,AssociationSetDiscoveryConvention_AddsBindingForBaseAndDerivedNavigationProperties,The length of the statement  "            NavigationPropertyConfiguration carNavigationProperty = car.AddNavigationProperty(typeof(Car).GetProperty("Manufacturer")' EdmMultiplicity.ZeroOrOne); " is 150.
Long Statement,System.Web.Http.OData.Builder.Conventions,AssociationSetDiscoveryConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\AssociationSetDiscoveryConventionTest.cs,AssociationSetDiscoveryConvention_AddsBindingForBaseAndDerivedNavigationProperties,The length of the statement  "            NavigationPropertyConfiguration motorcycleNavigationProperty = motorcycle.AddNavigationProperty(typeof(Motorcycle).GetProperty("Manufacturer")' EdmMultiplicity.ZeroOrOne); " is 171.
Long Statement,System.Web.Http.OData.Builder.Conventions,AssociationSetDiscoveryConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\AssociationSetDiscoveryConventionTest.cs,AssociationSetDiscoveryConvention_AddsBindingForBaseAndDerivedNavigationProperties,The length of the statement  "            IEntityTypeConfiguration motorcycleManufacturer = builder.AddEntity(typeof(MotorcycleManufacturer)).DerivesFrom(manufacturer); " is 126.
Long Statement,System.Web.Http.OData.Builder.Conventions,AssociationSetDiscoveryConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\AssociationSetDiscoveryConventionTest.cs,AssociationSetDiscoveryConvention_AddsBindingForBaseAndDerivedNavigationProperties,The length of the statement  "            entitySet.Setup(v => v.AddBinding(motorcycleNavigationProperty' manufacturers)).Returns<NavigationPropertyConfiguration>(null); " is 127.
Long Statement,System.Web.Http.OData.Builder.Conventions,AssociationSetDiscoveryConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\AssociationSetDiscoveryConventionTest.cs,AssociationSetDiscoveryConvention_AddsBindingForBaseAndDerivedNavigationProperties,The length of the statement  "            entitySet.Setup(v => v.AddBinding(carNavigationProperty' manufacturers)).Returns<NavigationPropertyConfiguration>(null); " is 120.
Long Statement,System.Web.Http.OData.Builder.Conventions,AssociationSetDiscoveryConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\AssociationSetDiscoveryConventionTest.cs,GetTargetEntitySet_Throws_IfTargetEntityTypeIsMissing,The length of the statement  "            NavigationPropertyConfiguration config = new NavigationPropertyConfiguration(property.Object' EdmMultiplicity.ZeroOrOne' entityTypeConfiguration.Object); " is 153.
Long Statement,System.Web.Http.OData.Builder.Conventions,AssociationSetDiscoveryConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\AssociationSetDiscoveryConventionTest.cs,GetTargetEntitySet_Throws_IfTargetEntityTypeIsMissing,The length of the statement  "                "Could not find the target entity type for the navigation property 'SamplePropertyName' on entity type 'System.Web.Http.OData.Builder.Conventions.AssociationSetDiscoveryConventionTest'."); " is 188.
Long Statement,System.Web.Http.OData.Builder.Conventions,AssociationSetDiscoveryConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\AssociationSetDiscoveryConventionTest.cs,GetTargetEntitySet_Returns_Null_IfNoMatchingTargetEntitySet,The length of the statement  "            NavigationPropertyConfiguration navigationProperty = motorcycle.AddNavigationProperty(typeof(Motorcycle).GetProperty("Manufacturer")' EdmMultiplicity.ZeroOrOne); " is 161.
Long Statement,System.Web.Http.OData.Builder.Conventions,AssociationSetDiscoveryConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\AssociationSetDiscoveryConventionTest.cs,GetTargetEntitySet_Returns_Null_IfNoMatchingTargetEntitySet,The length of the statement  "            IEntitySetConfiguration targetEntitySet = AssociationSetDiscoveryConvention.GetTargetEntitySet(navigationProperty' builder); " is 124.
Long Statement,System.Web.Http.OData.Builder.Conventions,AssociationSetDiscoveryConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\AssociationSetDiscoveryConventionTest.cs,GetTargetEntitySet_Returns_TargetEntitySet,The length of the statement  "            NavigationPropertyConfiguration navigationProperty = motorcycle.AddNavigationProperty(typeof(Motorcycle).GetProperty("Manufacturer")' EdmMultiplicity.ZeroOrOne); " is 161.
Long Statement,System.Web.Http.OData.Builder.Conventions,AssociationSetDiscoveryConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\AssociationSetDiscoveryConventionTest.cs,GetTargetEntitySet_Returns_TargetEntitySet,The length of the statement  "            IEntitySetConfiguration targetEntitySet = AssociationSetDiscoveryConvention.GetTargetEntitySet(navigationProperty' builder); " is 124.
Long Statement,System.Web.Http.OData.Builder.Conventions,AssociationSetDiscoveryConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\AssociationSetDiscoveryConventionTest.cs,GetTargetEntitySet_Returns_Null_IfMultipleMatchingTargetEntitySet,The length of the statement  "            NavigationPropertyConfiguration navigationProperty = motorcycle.AddNavigationProperty(typeof(Motorcycle).GetProperty("Manufacturer")' EdmMultiplicity.ZeroOrOne); " is 161.
Long Statement,System.Web.Http.OData.Builder.Conventions,AssociationSetDiscoveryConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\AssociationSetDiscoveryConventionTest.cs,GetTargetEntitySet_Returns_Null_IfMultipleMatchingTargetEntitySet,The length of the statement  "            IEntitySetConfiguration targetEntitySet = AssociationSetDiscoveryConvention.GetTargetEntitySet(navigationProperty' builder); " is 124.
Long Statement,System.Web.Http.OData.Builder.Conventions,AssociationSetDiscoveryConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\AssociationSetDiscoveryConventionTest.cs,GetTargetEntitySet_Returns_BaseTypeEntitySet_IfNoMatchingEntitysetForCurrentType,The length of the statement  "            IEntityTypeConfiguration motorcycleManufacturer = builder.AddEntity(typeof(MotorcycleManufacturer)).DerivesFrom(manufacturer); " is 126.
Long Statement,System.Web.Http.OData.Builder.Conventions,AssociationSetDiscoveryConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\AssociationSetDiscoveryConventionTest.cs,GetTargetEntitySet_Returns_BaseTypeEntitySet_IfNoMatchingEntitysetForCurrentType,The length of the statement  "            NavigationPropertyConfiguration navigationProperty = motorcycle.AddNavigationProperty(typeof(Motorcycle).GetProperty("Manufacturer")' EdmMultiplicity.ZeroOrOne); " is 161.
Long Statement,System.Web.Http.OData.Builder.Conventions,AssociationSetDiscoveryConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\AssociationSetDiscoveryConventionTest.cs,GetTargetEntitySet_Returns_BaseTypeEntitySet_IfNoMatchingEntitysetForCurrentType,The length of the statement  "            IEntitySetConfiguration targetEntitySet = AssociationSetDiscoveryConvention.GetTargetEntitySet(navigationProperty' builder); " is 124.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,Apply_AddsNavigationLinkFor_AllBaseDeclaredAndDerivedProperties,The length of the statement  "            NavigationPropertyConfiguration carNavigationProperty = car.AddNavigationProperty(typeof(Car).GetProperty("Manufacturer")' EdmMultiplicity.ZeroOrOne); " is 150.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,Apply_AddsNavigationLinkFor_AllBaseDeclaredAndDerivedProperties,The length of the statement  "            NavigationPropertyConfiguration motorcycleNavigationProperty = motorcycle.AddNavigationProperty(typeof(Motorcycle).GetProperty("Manufacturer")' EdmMultiplicity.ZeroOrOne); " is 171.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,Apply_AddsNavigationLinkFor_AllBaseDeclaredAndDerivedProperties,The length of the statement  "            IEntityTypeConfiguration motorcycleManufacturer = builder.AddEntity(typeof(MotorcycleManufacturer)).DerivesFrom(manufacturer); " is 126.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,Apply_AddsNavigationLinkFor_AllBaseDeclaredAndDerivedProperties,The length of the statement  "            entitySet.Setup(v => v.GetNavigationPropertyLink(motorcycleNavigationProperty)).Returns<NavigationPropertyConfiguration>(null); " is 127.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,Apply_AddsNavigationLinkFor_AllBaseDeclaredAndDerivedProperties,The length of the statement  "            entitySet.Setup(v => v.GetNavigationPropertyLink(carNavigationProperty)).Returns<NavigationPropertyConfiguration>(null); " is 120.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,Apply_AddsNavigationLinkFor_AllBaseDeclaredAndDerivedProperties,The length of the statement  "                .Setup(v => v.HasNavigationPropertyLink(motorcycleNavigationProperty' It.IsAny<Func<EntityInstanceContext' IEdmNavigationProperty' Uri>>())) " is 140.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,Apply_AddsNavigationLinkFor_AllBaseDeclaredAndDerivedProperties,The length of the statement  "                .Setup(v => v.HasNavigationPropertyLink(carNavigationProperty' It.IsAny<Func<EntityInstanceContext' IEdmNavigationProperty' Uri>>())) " is 133.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,NavigationLinksGenerationConvention_GeneratesLinksWithCast_ForDerivedProperties,The length of the statement  "            IEdmNavigationProperty carManufacturerProperty = carType.AssertHasNavigationProperty(model' "Manufacturer"' typeof(CarManufacturer)' isNullable: true' multiplicity: EdmMultiplicity.ZeroOrOne); " is 192.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,NavigationLinksGenerationConvention_GeneratesLinksWithCast_ForDerivedProperties,The length of the statement  "            configuration.Routes.MapHttpRoute(ODataRouteNames.PropertyNavigationWithCast' "{controller}({parentid})/{entitytype}/{navigationproperty}"); " is 140.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,NavigationLinksGenerationConvention_GeneratesLinksWithCast_ForDerivedProperties,The length of the statement  "                new EntityInstanceContext(model' vehiclesEdmEntitySet' carType' request.GetUrlHelper()' new Car { Model = 2009' Name = "Accord" })' " is 131.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,NavigationLinksGenerationConvention_GeneratesLinksWithCast_ForDerivedProperties,The length of the statement  "            Assert.Equal("http://localhost/vehicles(Model=2009'Name='Accord')/System.Web.Http.OData.Builder.TestModels.Car/Manufacturer"' uri.AbsoluteUri); " is 143.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,Apply_AddsLinkBuilder_ForAllNavigationProperties,The length of the statement  "            NavigationPropertyConfiguration navigationProperty = new NavigationPropertyConfiguration(new MockPropertyInfo(typeof(Motorcycle)' "Motorcycle")' EdmMultiplicity.One' entity.Object); " is 181.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,Apply_AddsLinkBuilder_ForAllNavigationProperties,The length of the statement  "                .Setup(e => e.HasNavigationPropertyLink(navigationProperty' It.IsAny<Func<EntityInstanceContext' IEdmNavigationProperty' Uri>>())) " is 130.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,NavigationLinksGenerationConvention_GeneratesLinksWithoutCast_ForDeclaredProperties,The length of the statement  "            IEdmNavigationProperty carManufacturerProperty = carType.AssertHasNavigationProperty(model' "Manufacturer"' typeof(CarManufacturer)' isNullable: true' multiplicity: EdmMultiplicity.ZeroOrOne); " is 192.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,NavigationLinksGenerationConvention_GeneratesLinksWithoutCast_ForDeclaredProperties,The length of the statement  "                new EntityInstanceContext(model' vehiclesEdmEntitySet' carType' request.GetUrlHelper()' new Car { Model = 2009' Name = "Accord" })' " is 131.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,NavigationLinksGenerationConvention_GeneratesLinksWithoutCast_ForBaseProperties,The length of the statement  "            IEdmNavigationProperty motorcycleManufacturerProperty = sportbikeType.AssertHasNavigationProperty(model' "Manufacturer"' typeof(MotorcycleManufacturer)' isNullable: true' multiplicity: EdmMultiplicity.ZeroOrOne); " is 212.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,NavigationLinksGenerationConvention_GeneratesLinksWithoutCast_ForBaseProperties,The length of the statement  "                new EntityInstanceContext(model' vehiclesEdmEntitySet' sportbikeType' request.GetUrlHelper()' new SportBike { Model = 2009' Name = "Ninja" })' " is 142.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,GenerateNavigationLink_GeneratesLink,The length of the statement  "            var route = configuration.Routes.MapHttpRoute(ODataRouteNames.PropertyNavigation' "{controller}({parentId})/{navigationProperty}"); " is 131.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,GenerateNavigationLink_GeneratesCorrectLink_EvenIfRouteDataPointsToADifferentController,The length of the statement  "            var route = configuration.Routes.MapHttpRoute(ODataRouteNames.PropertyNavigation' "{controller}({parentId})/{navigationProperty}"); " is 131.
Long Statement,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,GenerateNavigationLink_GeneratesCorrectLink_EvenIfRouteDataPointsToADifferentController,The length of the statement  "            request.Properties[HttpPropertyKeys.HttpRouteDataKey] = new HttpRouteData(route' new HttpRouteValueDictionary(new { controller = "Customers" })); " is 145.
Long Statement,System.Web.Http.OData.Builder.Conventions,SelfLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\SelfLinksGenerationConventionTest.cs,Apply_AddsFeedSelfLink,The length of the statement  "            mockEntitySet.Setup(entitySet => entitySet.HasFeedSelfLink(It.IsAny<Func<FeedContext' Uri>>())).Returns(mockEntitySet.Object).Verifiable(); " is 139.
Long Statement,System.Web.Http.OData.Builder.Conventions,SelfLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\SelfLinksGenerationConventionTest.cs,Apply_DoesNotAddFeedSelfLink_IfOneIsPresent,The length of the statement  "            mockEntitySet.Setup(entitySet => entitySet.GetFeedSelfLink()).Returns(feedContext => new Uri("http://www.cool.com")).Verifiable(); " is 130.
Long Statement,System.Web.Http.OData.Builder.Conventions,SelfLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\SelfLinksGenerationConventionTest.cs,GenerateSelfLinkWithoutCast_Works,The length of the statement  "                new EntityInstanceContext(model' carsEdmEntitySet' carsEdmEntitySet.ElementType' request.GetUrlHelper()' new Car { Model = 2009' Name = "Accord" })' " is 148.
Long Statement,System.Web.Http.OData.Builder.Conventions,SelfLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\SelfLinksGenerationConventionTest.cs,GenerateSelfLinkWithCast_Works,The length of the statement  "                new EntityInstanceContext(model' carsEdmEntitySet' carsEdmEntitySet.ElementType' request.GetUrlHelper()' new Car { Model = 2009' Name = "Accord" })' " is 148.
Long Statement,System.Web.Http.OData.Builder.Conventions,SelfLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\SelfLinksGenerationConventionTest.cs,GenerateSelfLinkWithCast_Works,The length of the statement  "            Assert.Equal("http://localhost/cars(Model=2009'Name='Accord')/System.Web.Http.OData.Builder.TestModels.Car"' uri.AbsoluteUri); " is 126.
Long Statement,System.Web.Http.OData.Builder.Conventions,SelfLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\SelfLinksGenerationConventionTest.cs,SelfLinksGenerationConvention_Uses_GetByIdWithCast_IfDerivedTypeHasNavigationProperty,The length of the statement  "                new EntityInstanceContext(model' vehiclesEdmEntitySet' carType' request.GetUrlHelper()' new Car { Model = 2009' Name = "Accord" })); " is 132.
Long Statement,System.Web.Http.OData.Builder.Conventions,SelfLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\SelfLinksGenerationConventionTest.cs,SelfLinksGenerationConvention_Uses_GetByIdWithCast_IfDerivedTypeHasNavigationProperty,The length of the statement  "            Assert.Equal("http://localhost/vehicles(Model=2009'Name='Accord')/System.Web.Http.OData.Builder.TestModels.Car"' uri.AbsoluteUri); " is 130.
Long Statement,System.Web.Http.OData.Builder.Conventions,SelfLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\SelfLinksGenerationConventionTest.cs,SelfLinksGenerationConvention_Uses_GetByIdWithoutCast_IfDerivedTypeDoesnotHaveNavigationProperty,The length of the statement  "                new EntityInstanceContext(model' vehiclesEdmEntitySet' sportbikeType' request.GetUrlHelper()' new SportBike { Model = 2009' Name = "Ninja" })); " is 143.
Long Statement,System.Web.Http.OData.Builder.Conventions,SelfLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\SelfLinksGenerationConventionTest.cs,SelfLinksGenerationConvention_Throws_If_RouteInCorrect,The length of the statement  "                () => linkBuilder.BuildEditLink(new EntityInstanceContext(model' vehiclesEdmEntitySet' sportbikeType' request.GetUrlHelper()' new SportBike { Model = 2009' Name = "Ninja" }))' " is 175.
Long Statement,System.Web.Http.OData.Builder.Conventions,ConventionsHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ConventionsHelpersTests.cs,GetProperties_ReturnsProperties_FromBaseAndDerived,The length of the statement  "            var expectedProperties = new string[] { "Base_I"' "Base_Complex"' "Base_Str"' "Derived_I"' "Derived_Complex"' "Collection"' "PrivateSetPublicGet" }; " is 148.
Long Statement,System.Web.Http.OData.Builder.Conventions,ConventionsHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ConventionsHelpersTests.cs,GetProperties_ReturnsProperties_FromBaseAndDerived,The length of the statement  "            Assert.Equal(expectedProperties.OrderByDescending(name => name)' properties.Select(p => p.Name).OrderByDescending(name => name)); " is 129.
Long Statement,System.Web.Http.OData.Builder.Conventions,ConventionsHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ConventionsHelpersTests.cs,GetProperties_Ignores_IgnoredProperties,The length of the statement  "            edmType.Setup(t => t.IgnoredProperties).Returns(typeof(GetProperties_Derived).GetProperties().Where(p => new string[] { "Base_I"' "Derived_I" }.Contains(p.Name))); " is 163.
Long Statement,System.Web.Http.OData.Builder.Conventions,ConventionsHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ConventionsHelpersTests.cs,GetProperties_Ignores_IgnoredProperties,The length of the statement  "            var expectedProperties = new string[] { "Base_Complex"' "Base_Str"' "Derived_Complex"' "Collection"' "PrivateSetPublicGet" }; " is 125.
Long Statement,System.Web.Http.OData.Builder.Conventions,ConventionsHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ConventionsHelpersTests.cs,GetProperties_Ignores_IgnoredProperties,The length of the statement  "            Assert.Equal(expectedProperties.OrderByDescending(name => name)' properties.Select(p => p.Name).OrderByDescending(name => name)); " is 129.
Long Statement,System.Web.Http.OData.Builder.Conventions,ConventionsHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ConventionsHelpersTests.cs,GetEntityKeyValue_SingleKey,The length of the statement  "            PrimitivePropertyConfiguration[] keys = { new PrimitivePropertyConfiguration(entityInstance.GetType().GetProperty("Key")' structuralType) }; " is 140.
Long Statement,System.Web.Http.OData.Builder.Conventions,ConventionsHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ConventionsHelpersTests.cs,GetEntityKeyValue_SingleKey,The length of the statement  "            var keyValue = ConventionsHelpers.GetEntityKeyValue(new EntityInstanceContext { EntityInstance = entityInstance }' entityType.Object); " is 134.
Long Statement,System.Web.Http.OData.Builder.Conventions,ConventionsHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ConventionsHelpersTests.cs,GetEntityKeyValue_SingleKey_DifferentDataTypes,The length of the statement  "            PrimitivePropertyConfiguration[] keys = { new PrimitivePropertyConfiguration(entityInstance.GetType().GetProperty("Key")' structuralType) }; " is 140.
Long Statement,System.Web.Http.OData.Builder.Conventions,ConventionsHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ConventionsHelpersTests.cs,GetEntityKeyValue_SingleKey_DifferentDataTypes,The length of the statement  "            var keyValue = ConventionsHelpers.GetEntityKeyValue(new EntityInstanceContext { EntityInstance = entityInstance }' entityType.Object); " is 134.
Long Statement,System.Web.Http.OData.Builder.Conventions,ConventionsHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ConventionsHelpersTests.cs,GetEntityKeyValue_MultipleKeys,The length of the statement  "            var keyValue = ConventionsHelpers.GetEntityKeyValue(new EntityInstanceContext { EntityInstance = entityInstance }' entityType.Object); " is 134.
Long Statement,System.Web.Http.OData.Builder.Conventions,ConventionsHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ConventionsHelpersTests.cs,GetEntityKeyValue_ThrowsForNullKeys,The length of the statement  "            PrimitivePropertyConfiguration[] keys = { new PrimitivePropertyConfiguration(entityInstance.GetType().GetProperty("Key")' structuralType) }; " is 140.
Long Statement,System.Web.Http.OData.Builder.Conventions,ConventionsHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ConventionsHelpersTests.cs,GetEntityKeyValue_ThrowsForNullKeys,The length of the statement  "                () => ConventionsHelpers.GetEntityKeyValue(new EntityInstanceContext { EntityInstance = entityInstance }' entityType.Object)' " is 125.
Long Statement,System.Web.Http.OData.Builder.Conventions,ConventionsHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ConventionsHelpersTests.cs,GetEntityKeyValue_ThrowsForNullKeys_WithMultipleKeys,The length of the statement  "                () => ConventionsHelpers.GetEntityKeyValue(new EntityInstanceContext { EntityInstance = entityInstance }' entityType.Object)' " is 125.
Long Statement,System.Web.Http.OData.Builder.Conventions,ConventionsHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ConventionsHelpersTests.cs,GetEntityKeyValue_DerivedType,The length of the statement  "            PrimitivePropertyConfiguration[] keys = { new PrimitivePropertyConfiguration(entityInstance.GetType().GetProperty("Key")' baseEntityType.Object) }; " is 147.
Long Statement,System.Web.Http.OData.Builder.Conventions,ConventionsHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ConventionsHelpersTests.cs,GetEntityKeyValue_DerivedType,The length of the statement  "            var keyValue = ConventionsHelpers.GetEntityKeyValue(new EntityInstanceContext { EntityInstance = entityInstance }' derivedEntityType.Object); " is 141.
Long Statement,System.Web.Http.OData.Builder.Conventions,ConventionsHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ConventionsHelpersTests.cs,GetEntityKeyValue_MultipleKeys_DerivedType,The length of the statement  "            var keyValue = ConventionsHelpers.GetEntityKeyValue(new EntityInstanceContext { EntityInstance = entityInstance }' derivedEntityType.Object); " is 141.
Long Statement,System.Web.Http.OData.Builder.Conventions,EntityKeyConventionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\EntityKeyConventionTests.cs,Apply_Calls_HasKey_OnEdmType,The length of the statement  "            Mock<PropertyConfiguration> property = new Mock<PropertyConfiguration>(typeof(EntityKeyConventionTests_EntityType).GetProperty(propertyName)' mockEntityType.Object); " is 165.
Long Statement,System.Web.Http.OData.Builder.Conventions,EntityKeyConventionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\EntityKeyConventionTests.cs,Apply_Calls_HasKey_OnEdmType,The length of the statement  "            mockEntityType.Setup(entityType => entityType.HasKey(typeof(EntityKeyConventionTests_EntityType).GetProperty(propertyName))).Returns(mockEntityType.Object).Verifiable(); " is 169.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Products,The length of the statement  "            product.AssertHasNavigationProperty(model' "Category"' typeof(Category)' isNullable: true' multiplicity: EdmMultiplicity.ZeroOrOne); " is 132.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Products,The length of the statement  "            category.AssertHasNavigationProperty(model' "Products"' typeof(Product)' isNullable: false' multiplicity: EdmMultiplicity.Many); " is 128.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_ProductsWithKeyAttribute,The length of the statement  "            var product = model.AssertHasEntitySet(entitySetName: "Products"' mappedEntityClrType: typeof(ProductWithKeyAttribute)); " is 120.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_ProductsWithKeyAttribute,The length of the statement  "            product.AssertHasNavigationProperty(model' "Category"' typeof(CategoryWithKeyAttribute)' isNullable: true' multiplicity: EdmMultiplicity.ZeroOrOne); " is 148.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_ProductsWithKeyAttribute,The length of the statement  "            category.AssertHasNavigationProperty(model' "Products"' typeof(ProductWithKeyAttribute)' isNullable: false' multiplicity: EdmMultiplicity.Many); " is 144.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_SupportsComplexCollectionWhenNotToldElementTypeIsComplex,The length of the statement  "            IEdmStructuralProperty property1 = entity.DeclaredProperties.OfType<IEdmStructuralProperty>().SingleOrDefault(p => p.Name == "Property1"); " is 138.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_SupportsComplexCollectionWhenToldElementTypeIsComplex,The length of the statement  "            IEdmStructuralProperty property1 = entity.DeclaredProperties.OfType<IEdmStructuralProperty>().SingleOrDefault(p => p.Name == "Property1"); " is 138.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_SupportsPrimitiveCollection,The length of the statement  "            IEdmStructuralProperty property1 = entity.DeclaredProperties.OfType<IEdmStructuralProperty>().SingleOrDefault(p => p.Name == "Property1"); " is 138.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_CanBuild_ModelWithInheritance,The length of the statement  "            motorcycle.AssertHasNavigationProperty(model' "Manufacturer"' typeof(MotorcycleManufacturer)' isNullable: true' multiplicity: EdmMultiplicity.ZeroOrOne); " is 153.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_CanBuild_ModelWithInheritance,The length of the statement  "            car.AssertHasNavigationProperty(model' "Manufacturer"' typeof(CarManufacturer)' isNullable: true' multiplicity: EdmMultiplicity.ZeroOrOne); " is 139.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Ignores_IgnoredTypeAndTheirDerivedTypes,The length of the statement  "            car.AssertHasNavigationProperty(model' "Manufacturer"' typeof(CarManufacturer)' isNullable: true' multiplicity: EdmMultiplicity.ZeroOrOne); " is 139.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Can_Add_DerivedTypeOfAnIgnoredType,The length of the statement  "            car.AssertHasNavigationProperty(model' "Manufacturer"' typeof(CarManufacturer)' isNullable: true' multiplicity: EdmMultiplicity.ZeroOrOne); " is 139.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Can_Add_DerivedTypeOfAnIgnoredType,The length of the statement  "            sportbike.AssertHasNavigationProperty(model' "Manufacturer"' typeof(MotorcycleManufacturer)' isNullable: true' multiplicity: EdmMultiplicity.ZeroOrOne); " is 152.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_CanHaveAnAbstractDerivedTypeOfConcreteBaseType,The length of the statement  "            Assert.Equal(model.AssertHasEntityType(typeof(SportBike)).BaseEntityType()' model.AssertHasEntityType(typeof(Motorcycle))); " is 123.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Figures_Bindings_For_DerivedNavigationProperties,The length of the statement  "                car.AssertHasNavigationProperty(model' "Manufacturer"' typeof(CarManufacturer)' isNullable: true' multiplicity: EdmMultiplicity.ZeroOrOne)' " is 139.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Figures_Bindings_For_DerivedNavigationProperties,The length of the statement  "                motorcycle.AssertHasNavigationProperty(model' "Manufacturer"' typeof(MotorcycleManufacturer)' isNullable: true' multiplicity: EdmMultiplicity.ZeroOrOne)' " is 153.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Figures_Bindings_For_DerivedNavigationProperties,The length of the statement  "                sportbike.AssertHasNavigationProperty(model' "Manufacturer"' typeof(MotorcycleManufacturer)' isNullable: true' multiplicity: EdmMultiplicity.ZeroOrOne)' " is 152.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_BindsToTheClosestEntitySet_ForNavigationProperties,The length of the statement  "                car.AssertHasNavigationProperty(model' "Manufacturer"' typeof(CarManufacturer)' isNullable: true' multiplicity: EdmMultiplicity.ZeroOrOne)' " is 139.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_BindsToTheClosestEntitySet_ForNavigationProperties,The length of the statement  "                motorcycle.AssertHasNavigationProperty(model' "Manufacturer"' typeof(MotorcycleManufacturer)' isNullable: true' multiplicity: EdmMultiplicity.ZeroOrOne)' " is 153.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_BindsToTheClosestEntitySet_ForNavigationProperties,The length of the statement  "                sportbike.AssertHasNavigationProperty(model' "Manufacturer"' typeof(MotorcycleManufacturer)' isNullable: true' multiplicity: EdmMultiplicity.ZeroOrOne)' " is 152.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_DerivedTypeDeclaringKeyThrows,The length of the statement  "            "Cannot define keys on type 'DefaultNamespace.DerivedType' deriving from 'DefaultNamespace.BaseType'. Only the root type in the entity inheritance hierarchy can contain keys."); " is 177.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_DerivedComplexTypeHavingKeys_Throws,The length of the statement  "                "Cannot define keys on type 'DefaultNamespace.DerivedComplexType' deriving from 'DefaultNamespace.BaseComplexType'. Only the root type in the entity inheritance hierarchy can contain keys."); " is 191.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ComplexType_Containing_EntityCollection_Throws,The length of the statement  "                "The complex type 'DefaultNamespace.ComplexTypeWithEntityCollection' refers to the entity type 'DefaultNamespace.EntityType' through the property 'CollectionProperty'."); " is 170.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ComplexType_Containing_ComplexCollection_works,The length of the statement  "            var collectionProperty = complexEdmType.DeclaredProperties.Where(p => p.Name == "CollectionProperty").SingleOrDefault(); " is 120.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,EntityType_Containing_ComplexTypeContainingComplexCollection_Works,The length of the statement  "            var collectionProperty = edmComplexType.DeclaredProperties.Where(p => p.Name == "ComplexCollectionProperty").SingleOrDefault(); " is 127.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Doesnot_Override_NavigationPropertyConfiguration,The length of the statement  "            entity.AssertHasNavigationProperty(model' "Relation"' type1' isNullable: false' multiplicity: EdmMultiplicity.ZeroOrOne); " is 121.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,CanBuildModelForAnonymousTypes,The length of the statement  "            entity.AssertHasCollectionProperty(model' "ComplexCollection"' new { ComplexProperty = default(string) }.GetType()' isNullable: true); " is 134.
Long Statement,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,CanBuildModelForAnonymousTypes,The length of the statement  "            entity.AssertHasNavigationProperty(model' "NavigationCollection"' new { ID = default(int) }.GetType()' isNullable: false' multiplicity: EdmMultiplicity.ZeroOrOne); " is 163.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,DataMemberAttributeEdmPropertyConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\DataMemberAttributeEdmPropertyConventionTest.cs,Apply_SetsRequiredProperty,The length of the statement  "            type.Setup(t => t.GetCustomAttributes(It.IsAny<Type>()' It.IsAny<bool>())).Returns(new[] { new DataContractAttribute() }); " is 122.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,DataMemberAttributeEdmPropertyConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\DataMemberAttributeEdmPropertyConventionTest.cs,Apply_SetsRequiredProperty,The length of the statement  "            Mock<StructuralPropertyConfiguration> structuralProperty = new Mock<StructuralPropertyConfiguration>(property' structuralType.Object); " is 134.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,DataMemberAttributeEdmPropertyConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\DataMemberAttributeEdmPropertyConventionTest.cs,Apply_DoesnotSetRequiredProperty,The length of the statement  "            type.Setup(t => t.GetCustomAttributes(It.IsAny<Type>()' It.IsAny<bool>())).Returns(new[] { new DataContractAttribute() }); " is 122.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,DataMemberAttributeEdmPropertyConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\DataMemberAttributeEdmPropertyConventionTest.cs,Apply_DoesnotSetRequiredProperty,The length of the statement  "            Mock<StructuralPropertyConfiguration> structuralProperty = new Mock<StructuralPropertyConfiguration>(property' structuralType.Object); " is 134.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,DataMemberAttributeEdmPropertyConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\DataMemberAttributeEdmPropertyConventionTest.cs,Apply_DoesnotSetRequiredProperty_IfTypeIsNotADataContract,The length of the statement  "            Mock<StructuralPropertyConfiguration> structuralProperty = new Mock<StructuralPropertyConfiguration>(property' structuralType.Object); " is 134.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,DataMemberAttributeEdmPropertyConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\DataMemberAttributeEdmPropertyConventionTest.cs,DataMemberAttributeEdmPropertyConvention_ConfiguresRequiredDataMembersAsRequired,The length of the statement  "            type.Setup(t => t.GetCustomAttributes(It.IsAny<Type>()' It.IsAny<bool>())).Returns(new[] { new DataContractAttribute() }); " is 122.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,DataMemberAttributeEdmPropertyConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\DataMemberAttributeEdmPropertyConventionTest.cs,DataMemberAttributeEdmPropertyConvention_ConfiguresNonRequiredDataMembersAsOptional,The length of the statement  "            type.Setup(t => t.GetCustomAttributes(It.IsAny<Type>()' It.IsAny<bool>())).Returns(new[] { new DataContractAttribute() }); " is 122.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,DataMemberAttributeEdmPropertyConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\DataMemberAttributeEdmPropertyConventionTest.cs,DataMemberAttributeEdmPropertyConvention_DoesnotOverwriteExistingConfiguration,The length of the statement  "            type.Setup(t => t.GetCustomAttributes(It.IsAny<Type>()' It.IsAny<bool>())).Returns(new[] { new DataContractAttribute() }); " is 122.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,DataMemberAttributeEdmPropertyConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\DataMemberAttributeEdmPropertyConventionTest.cs,DerivedType_DataMemberRequired_IsNotHonored_IfDerivedtypeIsNotDataContract,The length of the statement  "            baseType.Setup(t => t.GetCustomAttributes(It.IsAny<Type>()' It.IsAny<bool>())).Returns(new[] { new DataContractAttribute() }); " is 126.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,DataMemberAttributeEdmPropertyConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\DataMemberAttributeEdmPropertyConventionTest.cs,DerivedType_DataMemberRequired_IsNotHonored_IfDerivedtypeIsNotDataContract,The length of the statement  "            Mock<StructuralPropertyConfiguration> structuralProperty = new Mock<StructuralPropertyConfiguration>(property' structuralType.Object); " is 134.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,DataMemberAttributeEdmPropertyConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\DataMemberAttributeEdmPropertyConventionTest.cs,DerivedType_DataMemberRequired_IsHonored_IfDerivedtypeIsDataContract,The length of the statement  "            baseType.Setup(t => t.GetCustomAttributes(It.IsAny<Type>()' It.IsAny<bool>())).Returns(new[] { new DataContractAttribute() }); " is 126.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,DataMemberAttributeEdmPropertyConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\DataMemberAttributeEdmPropertyConventionTest.cs,DerivedType_DataMemberRequired_IsHonored_IfDerivedtypeIsDataContract,The length of the statement  "            Mock<StructuralPropertyConfiguration> structuralProperty = new Mock<StructuralPropertyConfiguration>(property' structuralType.Object); " is 134.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,AttributeEdmTypeConventionOfTEdmTypeConfigurationTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\AttributeEdmTypeConventionTests.cs,Apply_AppliesOnly_ForMatchingTEdmTypeConfiguration,The length of the statement  "            Assert.Equal(shouldbeApplied' (bool)applyMethod.MakeGenericMethod(tEdmTypeConfiguration' tConventionType).Invoke(null' null)); " is 126.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,AttributeEdmTypeConventionOfTEdmTypeConfigurationTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\AttributeEdmTypeConventionTests.cs,Apply,The length of the statement  "            Mock<TEdmTypeConfiguration> structuralType = new Mock<TEdmTypeConfiguration>(MockBehavior.Strict' builder' type.Object); " is 120.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,AttributeEdmTypeConventionOfTEdmTypeConfigurationTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\AttributeEdmTypeConventionTests.cs,Apply,The length of the statement  "            Mock<AttributeEdmTypeConvention<TConventionType>> convention = new Mock<AttributeEdmTypeConvention<TConventionType>>(matchAllFilter' false); " is 140.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,AttributeEdmTypeConventionOfTEdmTypeConfigurationTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\AttributeEdmTypeConventionTests.cs,Apply,The length of the statement  "            convention.Setup(c => c.Apply(It.IsAny<TConventionType>()' builder' attribute)).Callback(() => { applyCalled = true; }); " is 120.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,IgnoreDataMemberAttributeEdmPropertyConventionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\IgnoreDataMemberAttributeEdmPropertyConventionTests.cs,Apply_Calls_RemovesProperty,The length of the statement  "            Mock<PropertyConfiguration> primitiveProperty = new Mock<PropertyConfiguration>(property.Object' structuralType.Object); " is 120.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,IgnoreDataMemberAttributeEdmPropertyConventionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\IgnoreDataMemberAttributeEdmPropertyConventionTests.cs,Apply_DoesnotRemoveProperty_TypeIsDataContractAndPropertyHasDataMember,The length of the statement  "            property.Setup(p => p.GetCustomAttributes(It.IsAny<Type>()' It.IsAny<bool>())).Returns(new Attribute[] { new IgnoreDataMemberAttribute()' new DataContractAttribute() }); " is 169.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,IgnoreDataMemberAttributeEdmPropertyConventionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\IgnoreDataMemberAttributeEdmPropertyConventionTests.cs,Apply_DoesnotRemoveProperty_TypeIsDataContractAndPropertyHasDataMember,The length of the statement  "            property.Setup(p => p.GetCustomAttributes(It.IsAny<bool>())).Returns(new Attribute[] { new IgnoreDataMemberAttribute()' new DataContractAttribute() }); " is 151.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,IgnoreDataMemberAttributeEdmPropertyConventionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\IgnoreDataMemberAttributeEdmPropertyConventionTests.cs,Apply_DoesnotRemoveProperty_TypeIsDataContractAndPropertyHasDataMember,The length of the statement  "            type.Setup(t => t.GetCustomAttributes(It.IsAny<Type>()' It.IsAny<bool>())).Returns(new[] { new DataContractAttribute() }); " is 122.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,IgnoreDataMemberAttributeEdmPropertyConventionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\IgnoreDataMemberAttributeEdmPropertyConventionTests.cs,Apply_DoesnotRemoveProperty_TypeIsDataContractAndPropertyHasDataMember,The length of the statement  "            Mock<PropertyConfiguration> primitiveProperty = new Mock<PropertyConfiguration>(property.Object' structuralType.Object); " is 120.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,RequiredAttributeEdmPropertyConventionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\RequiredAttributeEdmPropertyConventionTests.cs,Apply_SetsOptionalProperty,The length of the statement  "            Mock<StructuralPropertyConfiguration> structuralProperty = new Mock<StructuralPropertyConfiguration>(property.Object' structuralType.Object); " is 141.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,AttributeConventionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\AttributeConventionTests.cs,Ctor_ThrowsFor_Null_attributeFilter,The length of the statement  "            Assert.ThrowsArgumentNull(() => { AttributeConvention convention = new Mock<AttributeConvention>(null' true).Object; }' "attributeFilter"); " is 139.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,AttributeConventionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\AttributeConventionTests.cs,GetAttributes_Throws_IfMultipleAttributesPresentAndAllowMultipleIsFalse,The length of the statement  "                () => convention.GetAttributes(GetType().GetMethod("GetAttributes_Throws_IfMultipleAttributesPresentAndAllowMultipleIsFalse"))' " is 127.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,AttributeConventionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\AttributeConventionTests.cs,GetAttributes_Throws_IfMultipleAttributesPresentAndAllowMultipleIsFalse,The length of the statement  "                "The member 'GetAttributes_Throws_IfMultipleAttributesPresentAndAllowMultipleIsFalse' on type 'AttributeConventionTests' contains multiple instances of the attribute 'SampleAttribute'."); " is 187.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,AttributeEdmPropertyConventionOfTPropertyConfigurationTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\AttributeEdmPropertyConventionTests.cs,Apply_AppliesOnly_ForMatchingTPropertyConfiguration,The length of the statement  "            Assert.Equal(shouldbeApplied' (bool)applyMethod.MakeGenericMethod(tPropertyConfiguration' edmPropertyType).Invoke(null' null)); " is 127.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,AttributeEdmPropertyConventionOfTPropertyConfigurationTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\AttributeEdmPropertyConventionTests.cs,Apply,The length of the statement  "            Mock<AttributeEdmPropertyConvention<TPropertyConfiguration>> convention = new Mock<AttributeEdmPropertyConvention<TPropertyConfiguration>>(matchAllFilter' false); " is 162.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,AttributeEdmPropertyConventionOfTPropertyConfigurationTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\AttributeEdmPropertyConventionTests.cs,Apply,The length of the statement  "            convention.Setup(c => c.Apply(It.IsAny<TPropertyConfiguration>()' It.IsAny<IStructuralTypeConfiguration>()' It.IsAny<Attribute>())).Callback(() => { applyCalled = true; }); " is 172.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,NotMappedAttributeConventionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\NotMappedAttributeConventionTests.cs,Apply_Calls_RemovesProperty,The length of the statement  "            Mock<PropertyConfiguration> primitiveProperty = new Mock<PropertyConfiguration>(property.Object' structuralType.Object); " is 120.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,KeyAttributeEdmPropertyConventionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\KeyAttributeEdmPropertyConventionTests.cs,Apply_AddsKey_EntityTypeConfiguration,The length of the statement  "            Mock<PrimitivePropertyConfiguration> primitiveProperty = new Mock<PrimitivePropertyConfiguration>(property.Object' entityType.Object); " is 134.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,KeyAttributeEdmPropertyConventionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\KeyAttributeEdmPropertyConventionTests.cs,Apply_IgnoresKey_NonEntityTypeConfiguration,The length of the statement  "            Mock<PrimitivePropertyConfiguration> primitiveProperty = new Mock<PrimitivePropertyConfiguration>(property.Object' complexType.Object); " is 135.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,KeyAttributeEdmPropertyConventionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\KeyAttributeEdmPropertyConventionTests.cs,Apply_IgnoresKey_ComplexProperty,The length of the statement  "            Mock<ComplexPropertyConfiguration> complexProperty = new Mock<ComplexPropertyConfiguration>(property.Object' entityType.Object); " is 128.
Long Statement,System.Web.Http.OData.Builder.Conventions.Attributes,KeyAttributeEdmPropertyConventionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\KeyAttributeEdmPropertyConventionTests.cs,Apply_IgnoresKey_NavigationProperty,The length of the statement  "            Mock<NavigationPropertyConfiguration> navigationProperty = new Mock<NavigationPropertyConfiguration>(property.Object' EdmMultiplicity.ZeroOrOne' entityType.Object); " is 164.
Long Statement,System.Web.Http.OData.OData.Formatter,CollectionsTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,ComplexCollectionProperty_Deserialize,The length of the statement  "            string message = "{ \"ID\" : 42' \"ComplexCollection\" : { \"results\":[  { \"A\": 1 }' { \"A\": 2 }' { \"A\": 3 } ] } }"; " is 122.
Long Statement,System.Web.Http.OData.OData.Formatter,CollectionsTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,EntityCollectionProperty_Deserialize,The length of the statement  "                "{ '__metadata' : { 'type': 'System.Web.Http.OData.Builder.TestModels.Motorcycle' }' 'Model': 2010' 'Name': 'Motorcycle'}' " + " is 126.
Long Statement,System.Web.Http.OData.OData.Formatter,CollectionsTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,EntityCollectionProperty_Deserialize,The length of the statement  "                "{ '__metadata' : { 'type': 'System.Web.Http.OData.Builder.TestModels.SportBike' }' 'Model': 2012' 'Name': 'SportBike'} " + " is 123.
Long Statement,System.Web.Http.OData.OData.Formatter,CollectionsTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,Posting_A_Feed_To_NonCollectionProperty_ODataLibThrows,The length of the statement  "                "{ '__metadata' : { 'type': 'System.Web.Http.OData.Builder.TestModels.Motorcycle' }' 'Model': 2010' 'Name': 'Motorcycle'}' " + " is 126.
Long Statement,System.Web.Http.OData.OData.Formatter,CollectionsTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,Posting_A_Feed_To_NonCollectionProperty_ODataLibThrows,The length of the statement  "                "{ '__metadata' : { 'type': 'System.Web.Http.OData.Builder.TestModels.SportBike' }' 'Model': 2012' 'Name': 'SportBike'} " + " is 123.
Long Statement,System.Web.Http.OData.OData.Formatter,InheritanceTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\InheritanceTests.cs,Action_Can_Take_Entity_In_Inheritance,The length of the statement  "            HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post' "http://localhost/PostMotorcycle_When_Expecting_Motorcycle"); " is 130.
Long Statement,System.Web.Http.OData.OData.Formatter,InheritanceTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\InheritanceTests.cs,Can_Post_DerivedType_To_Action_Expecting_BaseType,The length of the statement  "            HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post' "http://localhost/PostMotorcycle_When_Expecting_Vehicle"); " is 127.
Long Statement,System.Web.Http.OData.OData.Formatter,InheritanceTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\InheritanceTests.cs,Posting_NonDerivedType_To_Action_Expecting_BaseType_Throws,The length of the statement  "            HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post' "http://localhost/PostMotorcycle_When_Expecting_Car"); " is 123.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,CollectionDeserializationHelpersTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\CollectionDeserializationHelpersTest.cs,CopyItemsToCollection,The length of the statement  "            oldCollection.AddToCollection(newCollection' typeof(int)' typeof(CollectionDeserializationHelpersTest)' "PropertyName"' newCollection.GetType()); " is 145.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,CollectionDeserializationHelpersTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\CollectionDeserializationHelpersTest.cs,CopyItemsToCollection_CanConvertToNonStandardEdm,The length of the statement  "            IList source = new List<string> { SimpleEnum.First.ToString()' SimpleEnum.Second.ToString()' SimpleEnum.Third.ToString() }; " is 123.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,CollectionDeserializationHelpersTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\CollectionDeserializationHelpersTest.cs,CopyItemsToCollection_CanConvertToNonStandardEdm,The length of the statement  "            source.AddToCollection(newCollection' typeof(SimpleEnum)' typeof(CollectionDeserializationHelpersTest)' "PropertyName"' newCollection.GetType()); " is 145.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,CollectionDeserializationHelpersTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\CollectionDeserializationHelpersTest.cs,CopyItemsToCollection_CanConvertToNonStandardEdm,The length of the statement  "            Assert.Equal(new[] { SimpleEnum.First' SimpleEnum.Second' SimpleEnum.Third }' newCollection as IEnumerable<SimpleEnum>); " is 120.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_primitive_parameters,The length of the statement  "            ODataMessageReader reader = new ODataMessageReader(message as IODataRequestMessage' new ODataMessageReaderSettings()' model); " is 125.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_primitive_parameters,The length of the statement  "            ODataActionPayloadDeserializer deserializer = new ODataActionPayloadDeserializer(typeof(ODataActionParameters)' new DefaultODataDeserializerProvider(model)); " is 157.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_primitive_parameters,The length of the statement  "            Assert.Same(model.EntityContainers().Single().FunctionImports().SingleOrDefault(f => f.Name == "Primitive")' payload.GetFunctionImport(context)); " is 145.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_complex_parameters,The length of the statement  "            string body = @"{ ""Quantity"": 1 ' ""Address"": { ""StreetAddress"":""1 Microsoft Way""' ""City"": ""Redmond""' ""State"": ""WA""' ""ZipCode"": 98052 } }"; " is 156.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_complex_parameters,The length of the statement  "            ODataMessageReader reader = new ODataMessageReader(message as IODataRequestMessage' new ODataMessageReaderSettings()' model); " is 125.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_complex_parameters,The length of the statement  "            ODataActionPayloadDeserializer deserializer = new ODataActionPayloadDeserializer(typeof(ODataActionParameters)' new DefaultODataDeserializerProvider(model)); " is 157.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_complex_parameters,The length of the statement  "            Assert.Same(model.EntityContainers().Single().FunctionImports().SingleOrDefault(f => f.Name == "Complex")' payload.GetFunctionImport(context)); " is 143.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_primitive_collection_parameters,The length of the statement  "            ODataMessageReader reader = new ODataMessageReader(message as IODataRequestMessage' new ODataMessageReaderSettings()' model); " is 125.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_primitive_collection_parameters,The length of the statement  "            ODataActionPayloadDeserializer deserializer = new ODataActionPayloadDeserializer(typeof(ODataActionParameters)' new DefaultODataDeserializerProvider(model)); " is 157.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_primitive_collection_parameters,The length of the statement  "            Assert.Same(model.EntityContainers().Single().FunctionImports().SingleOrDefault(f => f.Name == "PrimitiveCollection")' payload.GetFunctionImport(context)); " is 155.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_complex_collection_parameters,The length of the statement  "            string body = @"{ ""Name"": ""Microsoft""' ""Addresses"": [ { ""StreetAddress"":""1 Microsoft Way""' ""City"": ""Redmond""' ""State"": ""WA""' ""ZipCode"": 98052 } ] }"; " is 169.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_complex_collection_parameters,The length of the statement  "            ODataMessageReader reader = new ODataMessageReader(message as IODataRequestMessage' new ODataMessageReaderSettings()' model); " is 125.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_complex_collection_parameters,The length of the statement  "            ODataActionPayloadDeserializer deserializer = new ODataActionPayloadDeserializer(typeof(ODataActionParameters)' new DefaultODataDeserializerProvider(model)); " is 157.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Throws_ODataException_when_parameter_not_found,The length of the statement  "            ODataMessageReader reader = new ODataMessageReader(message as IODataRequestMessage' new ODataMessageReaderSettings()' model); " is 125.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Throws_ODataException_when_parameter_not_found,The length of the statement  "            ODataActionPayloadDeserializer deserializer = new ODataActionPayloadDeserializer(typeof(ODataActionParameters)' new DefaultODataDeserializerProvider(model)); " is 157.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Throws_ODataException_when_parameter_not_found,The length of the statement  "            }' "The parameter 'MissingParameter' in the request payload is not a valid parameter for the function import 'Primitive'."); " is 124.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataCollectionDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataCollectionDeserializerTests.cs,Read_Roundtrip_ComplexCollection,The length of the statement  "            ODataCollectionSerializer serializer = new ODataCollectionSerializer(_addressCollectionType' new DefaultODataSerializerProvider(_model)); " is 137.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataCollectionDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataCollectionDeserializerTests.cs,Read_Roundtrip_ComplexCollection,The length of the statement  "            ODataCollectionDeserializer deserializer = new ODataCollectionDeserializer(_addressCollectionType' _deserializerProvider); " is 122.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataCollectionDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataCollectionDeserializerTests.cs,Read_Roundtrip_ComplexCollection,The length of the statement  "            serializer.WriteObject(addresses' new ODataMessageWriter(message as IODataResponseMessage' new ODataMessageWriterSettings()' _model)' new ODataSerializerContext { ServiceOperationName = "Property" }); " is 200.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataCollectionDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataCollectionDeserializerTests.cs,Read_Roundtrip_ComplexCollection,The length of the statement  "            IEnumerable readAddresses = deserializer.Read(new ODataMessageReader(message as IODataResponseMessage' new ODataMessageReaderSettings()' _model)' new ODataDeserializerContext()) as IEnumerable; " is 193.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataCollectionDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataCollectionDeserializerTests.cs,Read_Roundtrip_PrimitiveCollection,The length of the statement  "            ODataCollectionSerializer serializer = new ODataCollectionSerializer(_intCollectionType' new DefaultODataSerializerProvider(_model)); " is 133.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataCollectionDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataCollectionDeserializerTests.cs,Read_Roundtrip_PrimitiveCollection,The length of the statement  "            serializer.WriteObject(numbers' new ODataMessageWriter(message as IODataResponseMessage' new ODataMessageWriterSettings()' _model)' new ODataSerializerContext { ServiceOperationName = "Property" }); " is 198.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataCollectionDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataCollectionDeserializerTests.cs,Read_Roundtrip_PrimitiveCollection,The length of the statement  "            IEnumerable readnumbers = deserializer.Read(new ODataMessageReader(message as IODataResponseMessage' new ODataMessageReaderSettings()' _model)' new ODataDeserializerContext()) as IEnumerable; " is 191.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,AddressComparer,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataCollectionDeserializerTests.cs,Equals,The length of the statement  "                return x.City == y.City && x.Country == y.Country && x.State == y.State && x.Street == y.Street && x.ZipCode == y.ZipCode; " is 122.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerOfTItemTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerOfTItemTests.cs,ReadInline_ThrowsArgument_TypeMismatch,The length of the statement  "            ODataEntryDeserializer deserializer = GetType().GetMethod("CreateDeserializer").MakeGenericMethod(deserializerType).Invoke(null' null) as ODataEntryDeserializer; " is 161.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerOfTItemTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerOfTItemTests.cs,CreateDeserializer,The length of the statement  "            Mock<ODataEntryDeserializer<TItem>> deserializer = new Mock<ODataEntryDeserializer<TItem>>(new Mock<IEdmTypeReference>().Object' ODataPayloadKind.Unsupported); " is 159.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_CollectionTypeCannotBeInstantiated_And_SettableProperty_Throws,The length of the statement  "                () => ODataEntityDeserializer.SetCollectionProperty(value' propertyName' isDelta: false' value: new List<int> { 1' 2' 3 })' " is 123.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_CollectionTypeCannotBeInstantiated_And_SettableProperty_Throws,The length of the statement  "                String.Format("The property '{0}' on type 'System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializerTests+SampleClassWithSettableCollectionProperties' returned a null value. " + " is 190.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_NonSettableProperty_ArrayValue_FixedSize_Throws,The length of the statement  "                () => ODataEntityDeserializer.SetCollectionProperty(value' propertyName' isDelta: false' value: new List<int> { 1' 2' 3 })' " is 123.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_NonSettableProperty_ArrayValue_FixedSize_Throws,The length of the statement  "                String.Format("The value of the property '{0}' on type 'System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializerTests+SampleClassWithNonSettableCollectionProperties' is an array. " + " is 196.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_NonSettableProperty_NonNullValue_NoAdd_Throws,The length of the statement  "                () => ODataEntityDeserializer.SetCollectionProperty(value' propertyName' isDelta: false' value: new List<int> { 1' 2' 3 })' " is 123.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_NonSettableProperty_NonNullValue_NoAdd_Throws,The length of the statement  "                String.Format("The type '{0}' of the property '{1}' on type 'System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializerTests+SampleClassWithNonSettableCollectionProperties' does not have an Add method. " + " is 217.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_NonSettableProperty_NonNullValue_NoAdd_Throws,The length of the statement  "                "Consider using a collection type that does have an Add method - for example IList<T> or ICollection<T>."' propertyType.FullName' propertyName)); " is 145.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_NonSettableProperty_NullValue_Throws,The length of the statement  "                 () => ODataEntityDeserializer.SetCollectionProperty(value' propertyName' isDelta: false' value: new List<int> { 1' 2' 3 })' " is 123.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_NonSettableProperty_NullValue_Throws,The length of the statement  "                 String.Format("The property '{0}' on type 'System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializerTests+SampleClassWithNonSettableCollectionProperties' returned a null value. " + " is 193.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_CanConvertNonStandardEdmTypes,The length of the statement  "            ODataEntityDeserializer.SetCollectionProperty(value' "UnsignedArray"' isDelta: false' value: new List<int> { 1' 2' 3 }); " is 120.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_CanConvertEnumCollection,The length of the statement  "            ODataEntityDeserializer.SetCollectionProperty(value' "FlagsEnum"' isDelta: false' value: new List<string> { "One"' "Four' Two" }); " is 130.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_OnNonCollection_ThrowsInvalidOp,The length of the statement  "            () => ODataEntityDeserializer.SetCollectionProperty(value' propertyName' isDelta: false' value: new List<int> { 1' 2' 3 })' " is 123.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_OnNonCollection_ThrowsInvalidOp,The length of the statement  "            "The type '{0}' of the property '{1}' on type 'System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializerTests+SampleClassWithDifferentCollectionProperties' must be a collection."' " is 192.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,ApplyProperty_IgnoresKeyProperty_WhenPatchKeyModeIsIgnore,The length of the statement  "            entityType.AddKeys(new EdmStructuralProperty(entityType' "Key1"' EdmLibHelpers.GetEdmPrimitiveTypeReferenceOrNull(typeof(string)))); " is 132.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,ApplyProperty_IgnoresKeyProperty_WhenPatchKeyModeIsIgnore,The length of the statement  "            ODataEntryDeserializer.ApplyProperty(property' entityTypeReference' resource.Object' provider' new ODataDeserializerContext { IsPatchMode = true' PatchKeyMode = PatchKeyMode.Ignore }); " is 184.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,ApplyProperty_AppliesKeyProperty_WhenPatchKeyModeIsPatch,The length of the statement  "            entityType.AddKeys(new EdmStructuralProperty(entityType' "Key1"' EdmLibHelpers.GetEdmPrimitiveTypeReferenceOrNull(typeof(string)))); " is 132.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,ApplyProperty_AppliesKeyProperty_WhenPatchKeyModeIsPatch,The length of the statement  "            ODataEntryDeserializer.ApplyProperty(property' entityTypeReference' resource.Object' provider' new ODataDeserializerContext { IsPatchMode = true' PatchKeyMode = PatchKeyMode.Patch }); " is 183.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,ApplyProperty_ThrowsOnKeyProperty_WhenPatchKeyModeIsThrow,The length of the statement  "            entityType.AddKeys(new EdmStructuralProperty(entityType' "Key1"' EdmLibHelpers.GetEdmPrimitiveTypeReferenceOrNull(typeof(string)))); " is 132.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,ApplyProperty_ThrowsOnKeyProperty_WhenPatchKeyModeIsThrow,The length of the statement  "                () => ODataEntryDeserializer.ApplyProperty(property' entityTypeReference' resource.Object' provider' new ODataDeserializerContext { IsPatchMode = true' PatchKeyMode = PatchKeyMode.Throw })' " is 189.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataFeedDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataFeedDeserializerTests.cs,Read_Roundtrip,The length of the statement  "            ODataFeedSerializer serializer = new ODataFeedSerializer(_customersCollectionType' new DefaultODataSerializerProvider(_model)); " is 127.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataFeedDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataFeedDeserializerTests.cs,Read_Roundtrip,The length of the statement  "            serializer.WriteObject(customers' new ODataMessageWriter(message as IODataResponseMessage' new ODataMessageWriterSettings()' _model)' new ODataSerializerContext()); " is 164.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataFeedDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataFeedDeserializerTests.cs,Read_Roundtrip,The length of the statement  "            IEnumerable readCustomers = _instance.Read(new ODataMessageReader(message as IODataResponseMessage' new ODataMessageReaderSettings()' _model)' new ODataDeserializerContext()) as IEnumerable; " is 190.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataPrimitiveDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataPrimitiveDeserializerTests.cs,Default_Ctor,The length of the statement  "            Assert.DoesNotThrow(() => new ODataPrimitiveDeserializer(EdmLibHelpers.GetEdmPrimitiveTypeReferenceOrNull(typeof(int)))); " is 121.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,DefaultODataDeserializerProviderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\DefaultODataDeserializerProviderTests.cs,GetODataDeserializer_Entity,The length of the statement  "            ODataDeserializer deserializer = deserializerProvider.GetODataDeserializer(typeof(ODataEntityDeserializerTests.Product)); " is 121.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,DefaultODataDeserializerProviderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\DefaultODataDeserializerProviderTests.cs,GetODataDeserializer_Entity,The length of the statement  "            Assert.True(entityDeserializer.EdmEntityType.IsEquivalentTo(_edmModel.GetEdmTypeReference(typeof(ODataEntityDeserializerTests.Product)))); " is 138.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,DefaultODataDeserializerProviderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\DefaultODataDeserializerProviderTests.cs,GetODataDeserializer_Complex,The length of the statement  "            ODataDeserializer deserializer = deserializerProvider.GetODataDeserializer(typeof(ODataEntityDeserializerTests.Address)); " is 121.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,DefaultODataDeserializerProviderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\DefaultODataDeserializerProviderTests.cs,GetODataDeserializer_Complex,The length of the statement  "            Assert.True(complexDeserializer.EdmComplexType.IsEquivalentTo(_edmModel.GetEdmTypeReference(typeof(ODataEntityDeserializerTests.Address)))); " is 140.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,DefaultODataDeserializerProviderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\DefaultODataDeserializerProviderTests.cs,GetODataSerializer_ReturnsSameSerializer_ForSameType,The length of the statement  "            ODataDeserializer firstCallDeserializer = deserializerProvider.GetODataDeserializer(typeof(ODataEntityDeserializerTests.Supplier)); " is 131.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,DefaultODataDeserializerProviderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\DefaultODataDeserializerProviderTests.cs,GetODataSerializer_ReturnsSameSerializer_ForSameType,The length of the statement  "            ODataDeserializer secondCallDeserializer = deserializerProvider.GetODataDeserializer(typeof(ODataEntityDeserializerTests.Supplier)); " is 132.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,DefaultODataDeserializerProviderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\DefaultODataDeserializerProviderTests.cs,GetODataSerializer_ActionPayload,The length of the statement  "            ODataActionPayloadDeserializer basicActionPayload = deserializerProvider.GetODataDeserializer(typeof(ODataActionParameters)) as ODataActionPayloadDeserializer; " is 159.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,DefaultODataDeserializerProviderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\DefaultODataDeserializerProviderTests.cs,GetODataSerializer_Derived_ActionPayload,The length of the statement  "            ODataActionPayloadDeserializer derivedActionPayload = deserializerProvider.GetODataDeserializer(typeof(MyActionPayload)) as ODataActionPayloadDeserializer; " is 155.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntityDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntityDeserializerTests.cs,ReadFromStreamAsync,The length of the statement  "            Product product = deserializer.Read(GetODataMessageReader(GetODataMessage(BaselineResource.ProductInsertData)' _edmModel)' _readContext) as Product; " is 148.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntityDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntityDeserializerTests.cs,ReadFromStreamAsync_ComplexTypeAndInlineData,The length of the statement  "            Supplier supplier = deserializer.Read(GetODataMessageReader(GetODataMessage(BaselineResource.SuppliersInsertData)' _edmModel)' _readContext) as Supplier; " is 153.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntityDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntityDeserializerTests.cs,Read_PatchMode,The length of the statement  "            Delta<Supplier> supplier = deserializer.Read(GetODataMessageReader(GetODataMessage(BaselineResource.SuppliersPatchData)' _edmModel)' _readContext) as Delta<Supplier>; " is 166.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntityDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntityDeserializerTests.cs,Read_PatchMode_PatchKeyModeIsIgnore,The length of the statement  "            Delta<Supplier> supplier = deserializer.Read(GetODataMessageReader(GetODataMessage(BaselineResource.SuppliersPatchData)' _edmModel)' _readContext) as Delta<Supplier>; " is 166.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntityDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntityDeserializerTests.cs,Read_PatchMode_PatchKeyModeIsThrow,The length of the statement  "                () => deserializer.Read(GetODataMessageReader(GetODataMessage(BaselineResource.SuppliersPatchData)' _edmModel)' _readContext)' " is 126.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntityDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntityDeserializerTests.cs,Read_PatchMode_PatchKeyModeIsPatch,The length of the statement  "            Delta<Supplier> supplier = deserializer.Read(GetODataMessageReader(GetODataMessage(BaselineResource.SuppliersPatchData)' _edmModel)' _readContext) as Delta<Supplier>; " is 166.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntityDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntityDeserializerTests.cs,Read_Throws_On_UnknownEntityType,The length of the statement  "                () => deserializer.Read(GetODataMessageReader(GetODataMessage(BaselineResource.SuppliersInsertData)' _edmModel)' _readContext)' " is 127.
Long Statement,System.Web.Http.OData.Formatter.Deserialization,ODataEntityDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntityDeserializerTests.cs,Read_Throws_On_UnknownEntityType,The length of the statement  "                "An entry with type 'ODataDemo.Supplier' was found' but it is not assignable to the expected type 'ODataDemo.Product'. The type specified in the entry must be equal to either the expected type or a derived type."); " is 214.
Long Statement,System.Web.Http.OData.Formatter,ODataModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataModelBinderProviderTest.cs,ODataModelBinderProvider_Works,The length of the statement  "            string url = String.Format("http://localhost/ODataModelBinderProviderTest/{0}({1})"' action' Uri.EscapeDataString(ODataUriUtils.ConvertToUriLiteral(value' ODataVersion.V3))); " is 174.
Long Statement,System.Web.Http.OData.Formatter,ODataModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataModelBinderProviderTest.cs,ODataModelBinderProvider_Throws,The length of the statement  "            string url = String.Format("http://localhost/ODataModelBinderProviderThrowsTest/{0}({1})"' action' Uri.EscapeDataString(ODataUriUtils.ConvertToUriLiteral(value' ODataVersion.V3))); " is 180.
Long Statement,System.Web.Http.OData.Formatter,ODataModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataModelBinderProviderTest.cs,ODataModelBinderProvider_ModelStateErrors_InvalidODataRepresentations,The length of the statement  "            string url = String.Format("http://localhost/ODataModelBinderProviderThrowsTest/{0}({1})"' action' Uri.EscapeDataString(value)); " is 128.
Long Statement,System.Web.Http.OData.Formatter,ODataModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataModelBinderProviderTest.cs,ODataModelBinderProvider_ModelStateErrors_InvalidConversions,The length of the statement  "            string url = String.Format("http://localhost/ODataModelBinderProviderThrowsTest/{0}({1})"' action' Uri.EscapeDataString(value)); " is 128.
Long Statement,System.Web.Http.OData.Formatter,ODataKeysValueProvider,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataModelBinderProviderTest.cs,GetValue,The length of the statement  "                    IEnumerable<KeyValuePair<string' object>> match = _routeData.Values.Where(kvp => kvp.Value.Equals(key) && kvp.Key.StartsWith("key")); " is 133.
Long Statement,System.Web.Http.OData.Formatter,PartialTrustTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\PartialTrustTest.cs,PostEntry_InODataAtomFormat,The length of the statement  "                requestMessage.Content = new StringContent(BaselineResource.EntryTypePersonAtom' Encoding.UTF8' "application/atom+xml"); " is 120.
Long Statement,System.Web.Http.OData.Formatter,PartialTrustTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\PartialTrustTest.cs,PostEntry_InODataJsonFormat,The length of the statement  "                HttpRequestMessage requestMessage = new HttpRequestMessage(System.Net.Http.HttpMethod.Post' new Uri(baseAddress + "People")); " is 125.
Long Statement,System.Web.Http.OData.Formatter,EdmLibHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\EdmLibHelpersTests.cs,GetEdmType_ReturnsBaseType,The length of the statement  "            Assert.Equal(model.GetEdmType(typeof(BaseType))' model.SchemaElements.OfType<IEdmEntityType>().Where(t => t.Name == "BaseType").Single()); " is 138.
Long Statement,System.Web.Http.OData.Formatter,EdmLibHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\EdmLibHelpersTests.cs,GetEdmType_ReturnsDerivedType,The length of the statement  "            Assert.Equal(model.GetEdmType(typeof(DerivedTypeA))' model.SchemaElements.OfType<IEdmEntityType>().Where(t => t.Name == "DerivedTypeA").Single()); " is 146.
Long Statement,System.Web.Http.OData.Formatter,EdmLibHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\EdmLibHelpersTests.cs,GetEdmType_ReturnsDerivedType,The length of the statement  "            Assert.Equal(model.GetEdmType(typeof(DerivedTypeB))' model.SchemaElements.OfType<IEdmEntityType>().Where(t => t.Name == "DerivedTypeB").Single()); " is 146.
Long Statement,System.Web.Http.OData.Formatter,EdmLibHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\EdmLibHelpersTests.cs,GetEdmType_Returns_NearestDerivedType,The length of the statement  "            Assert.Equal(model.GetEdmType(typeof(DerivedTypeAA))' model.SchemaElements.OfType<IEdmEntityType>().Where(t => t.Name == "DerivedTypeA").Single()); " is 147.
Long Statement,System.Web.Http.OData.Formatter,ODataFormatterConstantsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataFormatterConstantsTest.cs,ApplicationAtomXmlMediaType_ReturnsDifferentInstances,The length of the statement  "            Assert.NotSame(ODataFormatterConstants.ApplicationAtomXmlMediaType' ODataFormatterConstants.ApplicationAtomXmlMediaType); " is 121.
Long Statement,System.Web.Http.OData.Formatter,PeopleController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\PeopleController.cs,GetPeople,The length of the statement  "                new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902d")' PerId = 0' Age = 10' Name = "Asha"' Order = new FormatterOrder() { OrderName = "FirstOrder"' OrderAmount = 235342 }}' " is 198.
Long Statement,System.Web.Http.OData.Formatter,PeopleController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\PeopleController.cs,GetPeople,The length of the statement  "                new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902e")' PerId = 1' Age = 11' Name = "Bsha"' Order = new FormatterOrder() { OrderName = "SecondOrder"' OrderAmount = 123 }}' " is 196.
Long Statement,System.Web.Http.OData.Formatter,PeopleController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\PeopleController.cs,GetPeople,The length of the statement  "                new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902f")' PerId = 2' Age = 12' Name = "Csha"' Order = new FormatterOrder() { OrderName = "ThirdOrder"' OrderAmount = 456 }} " is 194.
Long Statement,System.Web.Http.OData.Formatter,PeopleController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\PeopleController.cs,GetPerson,The length of the statement  "            FormatterPerson obj = new FormatterPerson() { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902d")' PerId = id' Age = 10' Name = "Asha"' Order = new FormatterOrder() { OrderName = "FirstOrder"' OrderAmount = 235342 } }; " is 224.
Long Statement,System.Web.Http.OData.Formatter,ODataTestUtil,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataTestUtil.cs,GenerateRequestMessage,The length of the statement  "            MediaTypeWithQualityHeaderValue mediaType = isAtom ? ApplicationAtomMediaTypeWithQuality : ApplicationJsonMediaTypeWithQuality; " is 127.
Long Statement,System.Web.Http.OData.Formatter,ODataTestUtil,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataTestUtil.cs,GetEdmModel,The length of the statement  "                people.HasIdLink(context => context.UrlHelper.Link(ODataRouteNames.GetById' new { Id = (context.EntityInstance as FormatterPerson).PerId })); " is 141.
Long Statement,System.Web.Http.OData.Formatter,ODataTestUtil,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataTestUtil.cs,GetEdmModel,The length of the statement  "                people.HasEditLink(context => new Uri(context.UrlHelper.Link(ODataRouteNames.GetById' new { Id = (context.EntityInstance as FormatterPerson).PerId }))); " is 152.
Long Statement,System.Web.Http.OData.Formatter,ODataTestUtil,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataTestUtil.cs,GetEdmModel,The length of the statement  "                people.HasReadLink(context => new Uri(context.UrlHelper.Link(ODataRouteNames.GetById' new { Id = (context.EntityInstance as FormatterPerson).PerId }))); " is 152.
Long Statement,System.Web.Http.OData.Formatter,ODataFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataFormatterTests.cs,Get_Entry_In_OData_Atom_Format,The length of the statement  "                HttpRequestMessage requestMessage = new HttpRequestMessage(System.Net.Http.HttpMethod.Get' new Uri(baseAddress + "People(10)")); " is 128.
Long Statement,System.Web.Http.OData.Formatter,ODataFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataFormatterTests.cs,Get_Entry_In_OData_Json_Format,The length of the statement  "                HttpRequestMessage requestMessage = new HttpRequestMessage(System.Net.Http.HttpMethod.Get' new Uri(baseAddress + "People(10)")); " is 128.
Long Statement,System.Web.Http.OData.Formatter,ODataFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataFormatterTests.cs,Support_Only_OData_Atom_Format,The length of the statement  "                HttpRequestMessage requestMessage = new HttpRequestMessage(System.Net.Http.HttpMethod.Get' new Uri(baseAddress + "People(10)")); " is 128.
Long Statement,System.Web.Http.OData.Formatter,ODataFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataFormatterTests.cs,Support_Only_OData_Atom_Format,The length of the statement  "                HttpRequestMessage messageWithJsonHeader = new HttpRequestMessage(System.Net.Http.HttpMethod.Get' new Uri(baseAddress + "People(10)")); " is 135.
Long Statement,System.Web.Http.OData.Formatter,ODataFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataFormatterTests.cs,Support_Only_OData_Atom_Format,The length of the statement  "                    Assert.Equal(response.Content.Headers.ContentType.MediaType' ODataTestUtil.ApplicationJsonMediaTypeWithQuality.MediaType); " is 122.
Long Statement,System.Web.Http.OData.Formatter,ODataFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataFormatterTests.cs,Conditionally_Support_OData_If_Query_String_Present,The length of the statement  "                HttpRequestMessage requestMessage = ODataTestUtil.GenerateRequestMessage(new Uri(baseAddress + "People(10)?format=odata")' isAtom: true); " is 137.
Long Statement,System.Web.Http.OData.Formatter,ODataFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataFormatterTests.cs,Conditionally_Support_OData_If_Query_String_Present,The length of the statement  "                    Assert.Equal(ODataTestUtil.ApplicationAtomMediaTypeWithQuality.MediaType' response.Content.Headers.ContentType.MediaType); " is 122.
Long Statement,System.Web.Http.OData.Formatter,ODataFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataFormatterTests.cs,Conditionally_Support_OData_If_Query_String_Present,The length of the statement  "                HttpRequestMessage messageWithJsonHeader = ODataTestUtil.GenerateRequestMessage(new Uri(baseAddress + "People(10)?format=odata")' isAtom: false); " is 145.
Long Statement,System.Web.Http.OData.Formatter,ODataFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataFormatterTests.cs,Conditionally_Support_OData_If_Query_String_Present,The length of the statement  "                    Assert.Equal(response.Content.Headers.ContentType.MediaType' ODataTestUtil.ApplicationJsonMediaTypeWithQuality.MediaType); " is 122.
Long Statement,System.Web.Http.OData.Formatter,ODataFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataFormatterTests.cs,GetFeedInODataAtomFormat_LimitsResults,The length of the statement  "                HttpRequestMessage requestMessage = new HttpRequestMessage(HttpMethod.Get' new Uri(baseAddress + "People?$orderby=Name")); " is 122.
Long Statement,System.Web.Http.OData.Formatter,ODataFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataFormatterTests.cs,HttpErrorInODataFormat_GetsSerializedCorrectly,The length of the statement  "                HttpRequestMessage requestMessage = new HttpRequestMessage(HttpMethod.Get' new Uri(baseAddress + "People?$filter=abc+eq+null")); " is 128.
Long Statement,System.Web.Http.OData.Formatter,ODataFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataFormatterTests.cs,HttpErrorInODataFormat_GetsSerializedCorrectly,The length of the statement  "                    Assert.Equal("The query specified in the URI is not valid."' xml.Element(XName.Get("{http://schemas.microsoft.com/ado/2007/08/dataservices/metadata}message")).Value); " is 166.
Long Statement,System.Web.Http.OData.Formatter,ODataFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataFormatterTests.cs,HttpErrorInODataFormat_GetsSerializedCorrectly,The length of the statement  "                    XElement innerErrorXml = xml.Element(XName.Get("{http://schemas.microsoft.com/ado/2007/08/dataservices/metadata}innererror")); " is 126.
Long Statement,System.Web.Http.OData.Formatter,ODataFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataFormatterTests.cs,HttpErrorInODataFormat_GetsSerializedCorrectly,The length of the statement  "                    Assert.Equal("Type 'System.Web.Http.OData.Formatter.FormatterPerson' does not have a property 'abc'."' innerErrorXml.Element(XName.Get("{http://schemas.microsoft.com/ado/2007/08/dataservices/metadata}message")).Value); " is 218.
Long Statement,System.Web.Http.OData.Formatter,ODataFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataFormatterTests.cs,HttpErrorInODataFormat_GetsSerializedCorrectly,The length of the statement  "                    Assert.Equal("Microsoft.Data.OData.ODataException"' innerErrorXml.Element(XName.Get("{http://schemas.microsoft.com/ado/2007/08/dataservices/metadata}type")).Value); " is 164.
Long Statement,System.Web.Http.OData.Formatter,ODataMediaTypeFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataMediaTypeFormatterTests.cs,Constructor,The length of the statement  "            Assert.True(formatter.SupportedMediaTypes.Contains(MediaTypeHeaderValue.Parse(mediaType))' string.Format("SupportedMediaTypes should have included {0}."' mediaType.ToString())); " is 177.
Long Statement,System.Web.Http.OData.Formatter,ODataMediaTypeFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataMediaTypeFormatterTests.cs,WriteToStreamAsyncReturnsODataRepresentation,The length of the statement  "            ObjectContent<WorkItem> content = new ObjectContent<WorkItem>((WorkItem)TypeInitializer.GetInstance(SupportedTypes.WorkItem)' formatter); " is 137.
Long Statement,System.Web.Http.OData.Formatter,ODataMediaTypeFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataMediaTypeFormatterTests.cs,WriteToStreamAsyncReturnsODataRepresentation,The length of the statement  "            Assert.Xml.Equal(BaselineResource.TestEntityWorkItem' content.ReadAsStringAsync().Result' regexReplacements: replaceUpdateTime); " is 128.
Long Statement,System.Web.Http.OData.Formatter,ODataMediaTypeFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataMediaTypeFormatterTests.cs,WriteToStreamAsync_WhenObjectIsNull_WritesDataButDoesNotCloseStream,The length of the statement  "                    mockStream.Verify(s => s.BeginWrite(It.IsAny<byte[]>()' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<AsyncCallback>()' It.IsAny<object>())' Times.Never()); " is 153.
Long Statement,System.Web.Http.OData.Formatter,ODataMediaTypeFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataMediaTypeFormatterTests.cs,WriteToStreamAsync_ThrowsNotSupported_WithoutRequest,The length of the statement  "                () => formatter.WriteToStreamAsync(typeof(Customer)' new Customer()' new MemoryStream()' content: null' transportContext: null)' " is 128.
Long Statement,System.Web.Http.OData.Formatter,ODataMediaTypeFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataMediaTypeFormatterTests.cs,WriteToStreamAsync_ThrowsNotSupported_WithoutRequest,The length of the statement  "                "The OData formatter does not support writing client requests. This formatter instance must have an associated request."); " is 122.
Long Statement,System.Web.Http.OData.Formatter,ODataMediaTypeFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataMediaTypeFormatterTests.cs,ReadFromStreamAsync_PassesPatchKeyModeToTheDeserializers,The length of the statement  "            ODataMediaTypeFormatter formatter = new ODataMediaTypeFormatter(deserializerProvider.Object' new DefaultODataSerializerProvider(EdmCoreModel.Instance)); " is 152.
Long Statement,System.Web.Http.OData.Formatter.Serialization,ODataErrorSerializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ODataErrorSerializerTest.cs,WriteObject_SupportsHttpError,The length of the statement  "            Assert.DoesNotThrow(() => serializer.WriteObject(error' new ODataMessageWriter(mockResponseMessage.Object)' new ODataSerializerContext())); " is 139.
Long Statement,System.Web.Http.OData.Formatter.Serialization,DefaultODataSerializerProviderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\DefaultODataSerializerProviderTests.cs,GetODataSerializer_Entity,The length of the statement  "            Assert.True(entitySerializer.EdmType.IsEquivalentTo(_edmModel.GetEdmTypeReference(typeof(ODataEntityDeserializerTests.Product)))); " is 130.
Long Statement,System.Web.Http.OData.Formatter.Serialization,DefaultODataSerializerProviderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\DefaultODataSerializerProviderTests.cs,GetODataSerializer_Complex,The length of the statement  "            Assert.True(complexSerializer.EdmType.IsEquivalentTo(_edmModel.GetEdmTypeReference(typeof(ODataEntityDeserializerTests.Address)))); " is 131.
Long Statement,System.Web.Http.OData.Formatter.Serialization,DefaultODataSerializerProviderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\DefaultODataSerializerProviderTests.cs,GetODataSerializer_Feed,The length of the statement  "            Assert.True(feedSerializer.EdmType.AsCollection().ElementType().IsEquivalentTo(_edmModel.GetEdmTypeReference(typeof(ODataEntityDeserializerTests.Supplier)))); " is 158.
Long Statement,System.Web.Http.OData.Formatter.Serialization,DefaultODataSerializerProviderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\DefaultODataSerializerProviderTests.cs,GetODataSerializer_ComplexCollection,The length of the statement  "            var serializer = serializerProvider.GetODataPayloadSerializer(typeof(IEnumerable<ODataEntityDeserializerTests.Address>)); " is 121.
Long Statement,System.Web.Http.OData.Formatter.Serialization,DefaultODataSerializerProviderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\DefaultODataSerializerProviderTests.cs,GetODataSerializer_ReturnsSameSerializer_ForSameType,The length of the statement  "            ODataSerializer firstCallSerializer = serializerProvider.GetODataPayloadSerializer(typeof(ODataEntityDeserializerTests.Supplier)); " is 130.
Long Statement,System.Web.Http.OData.Formatter.Serialization,DefaultODataSerializerProviderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\DefaultODataSerializerProviderTests.cs,GetODataSerializer_ReturnsSameSerializer_ForSameType,The length of the statement  "            ODataSerializer secondCallSerializer = serializerProvider.GetODataPayloadSerializer(typeof(ODataEntityDeserializerTests.Supplier)); " is 131.
Long Statement,System.Web.Http.OData.Formatter.Serialization,ODataEntityTypeSerializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ODataEntityTypeSerializerTests.cs,SimpleCustomerOrderModel,The length of the statement  "            customerType.AddUnidirectionalNavigation(new EdmNavigationPropertyInfo() { Name = "Orders"' Target = orderType' TargetMultiplicity = EdmMultiplicity.Many }); " is 157.
Long Statement,System.Web.Http.OData.Formatter.Serialization,ODataEntityTypeSerializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ODataEntityTypeSerializerTests.cs,SimpleCustomerOrderModel,The length of the statement  "            orderType.AddUnidirectionalNavigation(new EdmNavigationPropertyInfo() { Name = "Customer"' Target = customerType' TargetMultiplicity = EdmMultiplicity.One }); " is 158.
Long Statement,System.Web.Http.OData.Formatter.Serialization,ODataPrimitiveSerializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ODataPrimitiveSerializerTests.cs,WriteObject_EdmPrimitives,The length of the statement  "            ODataMessageWriter writer = new ODataMessageWriter(new ODataMessageWrapper(new MemoryStream()) as IODataResponseMessage); " is 121.
Long Statement,System.Web.Http.OData.Formatter.Serialization,ODataPrimitiveSerializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ODataPrimitiveSerializerTests.cs,WriteObject_EdmPrimitives,The length of the statement  "            Assert.DoesNotThrow(() => serializer.WriteObject(graph' writer' new ODataSerializerContext() { ServiceOperationName = "PropertyName" })); " is 137.
Long Statement,System.Web.Http.OData.Formatter.Serialization,ODataUriHelperTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ODataUriHelperTest.cs,CreateCustomerProductsModel,The length of the statement  "            customerType.AddUnidirectionalNavigation(new EdmNavigationPropertyInfo() { Name = "Products"' Target = productType' TargetMultiplicity = EdmMultiplicity.Many }); " is 161.
Long Statement,System.Web.Http.OData.Formatter.Serialization,ODataUriHelperTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ODataUriHelperTest.cs,CreateCustomerProductsModel,The length of the statement  "            productType.AddUnidirectionalNavigation(new EdmNavigationPropertyInfo() { Name = "Customers"' Target = customerType' TargetMultiplicity = EdmMultiplicity.Many }); " is 162.
Long Statement,System.Web.Http.OData.Formatter.Serialization,CollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\CollectionTest.cs,ContentHeadersAreAddedForXmlMediaType,The length of the statement  "            ObjectContent<IEnumerable<Person>> content = new ObjectContent<IEnumerable<Person>>(new Person[] { new Person(0' new ReferenceDepthContext(7)) }' _formatter); " is 158.
Long Statement,System.Web.Http.OData.Formatter.Serialization,CollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\CollectionTest.cs,ContentHeadersAreAddedForJsonMediaType,The length of the statement  "            HttpContent content = new ObjectContent<Person[]>(new Person[] { new Person(0' new ReferenceDepthContext(7)) }' _formatter' "application/json"); " is 144.
Long Statement,System.Web.Http.OData.Formatter.Serialization,ComplexTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ComplexTypeTest.cs,ContentHeadersAreAddedForJsonMediaType,The length of the statement  "            HttpContent content = new ObjectContent<Person>(new Person(0' new ReferenceDepthContext(7))' _formatter' "application/json"); " is 125.
Long Statement,System.Web.Http.OData.Formatter.Serialization,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\EntityTypeTest.cs,EntityTypeSerializesAsODataEntry,The length of the statement  "            Assert.Xml.Equal(BaselineResource.TestEntityTypeBasic' content.ReadAsStringAsync().Result' regexReplacements: replaceUpdateTime); " is 129.
Long Statement,System.Web.Http.OData.Formatter.Serialization,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\EntityTypeTest.cs,ContentHeadersAreAddedForXmlMediaType,The length of the statement  "            ObjectContent<Employee> content = new ObjectContent<Employee>(new Employee(0' new ReferenceDepthContext(7))' formatter); " is 120.
Long Statement,System.Web.Http.OData.Formatter.Serialization,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\EntityTypeTest.cs,ContentHeadersAreAddedForJsonMediaType,The length of the statement  "            HttpContent content = new ObjectContent<Employee>(new Employee(0' new ReferenceDepthContext(7))' formatter' "application/json"); " is 128.
Long Statement,System.Web.Http.OData.Formatter.Serialization,FeedTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\FeedTest.cs,IEnumerableOfEntityTypeSerializesAsODataFeed,The length of the statement  "            Assert.Xml.Equal(BaselineResource.TestFeedOfEmployee' content.ReadAsStringAsync().Result' regexReplacements: replaceUpdateTime); " is 128.
Long Statement,System.Web.Http.OData.Formatter.Serialization,FeedTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\FeedTest.cs,ContentHeadersAreAddedForXmlMediaType,The length of the statement  "            ObjectContent<IEnumerable<Employee>> content = new ObjectContent<IEnumerable<Employee>>(new Employee[] { new Employee(0' new ReferenceDepthContext(7)) }' formatter); " is 165.
Long Statement,System.Web.Http.OData.Formatter.Serialization,FeedTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\FeedTest.cs,ContentHeadersAreAddedForJsonMediaType,The length of the statement  "            HttpContent content = new ObjectContent<IEnumerable<Employee>>(new Employee[] { new Employee(0' new ReferenceDepthContext(7)) }' formatter' "application/json"); " is 160.
Long Statement,System.Web.Http.OData.Formatter.Serialization,SerializationTestsHelpers,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\SerializationTestsHelpers.cs,SimpleCustomerOrderModel,The length of the statement  "            customerType.AddUnidirectionalNavigation(new EdmNavigationPropertyInfo() { Name = "Orders"' Target = orderType' TargetMultiplicity = EdmMultiplicity.Many }); " is 157.
Long Statement,System.Web.Http.OData.Formatter.Serialization,SerializationTestsHelpers,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\SerializationTestsHelpers.cs,SimpleCustomerOrderModel,The length of the statement  "            orderType.AddUnidirectionalNavigation(new EdmNavigationPropertyInfo() { Name = "Customer"' Target = customerType' TargetMultiplicity = EdmMultiplicity.One }); " is 158.
Long Statement,System.Web.Http.OData.Query,QueryableFilterProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryableFilterProviderTest.cs,GetFilters_ReturnsQueryableFilter_ForQueryableActions,The length of the statement  "            HttpControllerDescriptor controllerDescriptor = new HttpControllerDescriptor(config' "FilterProviderTest"' typeof(FilterProviderTestController)); " is 145.
Long Statement,System.Web.Http.OData.Query,QueryableFilterProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryableFilterProviderTest.cs,GetFilters_ReturnsQueryableFilter_ForQueryableActions,The length of the statement  "            HttpActionDescriptor actionDescriptor = new ReflectedHttpActionDescriptor(controllerDescriptor' typeof(FilterProviderTestController).GetMethod(actionName)); " is 156.
Long Statement,System.Web.Http.OData.Query,QueryableFilterProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryableFilterProviderTest.cs,GetFilters_ReturnsQueryableFilter_ForQueryableActions,The length of the statement  "            FilterInfo[] filters = new QueryFilterProvider(new QueryableAttribute()).GetFilters(config' actionDescriptor).ToArray(); " is 120.
Long Statement,System.Web.Http.OData.Query,QueryableFilterProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryableFilterProviderTest.cs,GetFilters_ReturnsEmptyCollection_ForNonQueryableActions,The length of the statement  "            HttpControllerDescriptor controllerDescriptor = new HttpControllerDescriptor(config' "FilterProviderTest"' typeof(FilterProviderTestController)); " is 145.
Long Statement,System.Web.Http.OData.Query,QueryableFilterProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryableFilterProviderTest.cs,GetFilters_ReturnsEmptyCollection_ForNonQueryableActions,The length of the statement  "            HttpActionDescriptor actionDescriptor = new ReflectedHttpActionDescriptor(controllerDescriptor' typeof(FilterProviderTestController).GetMethod(actionName)); " is 156.
Long Statement,System.Web.Http.OData.Query,QueryableFilterProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryableFilterProviderTest.cs,GetFilters_ReturnsEmptyCollection_ForNonQueryableActions,The length of the statement  "            FilterInfo[] filters = new QueryFilterProvider(new QueryableAttribute()).GetFilters(config' actionDescriptor).ToArray(); " is 120.
Long Statement,System.Web.Http.OData.Query,ODataQueryOptionsOfTEntityTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionsOfTEntityTest.cs,Ctor_Throws_Argument_IfContextIsofDifferentEntityType,The length of the statement  "                "context"' "The entity type 'System.Web.Http.OData.TestCommon.Models.Customer' does not match the expected entity type 'System.Int32' as set on the query context."); " is 165.
Long Statement,System.Web.Http.OData.Query,ODataQueryOptionsOfTEntityTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionsOfTEntityTest.cs,Ctor_SuccedsIfEntityTypesMatch,The length of the statement  "            ODataQueryOptions<Customer> query = new ODataQueryOptions<Customer>(context' new HttpRequestMessage(HttpMethod.Get' "http://server/?$top=10")); " is 143.
Long Statement,System.Web.Http.OData.Query,ODataQueryOptionsOfTEntityTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionsOfTEntityTest.cs,ApplyTo_ThrowsInvalidOp_If_QueryTypeDoesnotMatch,The length of the statement  "            ODataQueryOptions<Customer> query = new ODataQueryOptions<Customer>(context' new HttpRequestMessage(HttpMethod.Get' "http://server/?$top=10")); " is 143.
Long Statement,System.Web.Http.OData.Query,ODataQueryOptionsOfTEntityTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionsOfTEntityTest.cs,ApplyTo_ThrowsInvalidOp_If_QueryTypeDoesnotMatch,The length of the statement  "                "Cannot apply ODataQueryOptions of 'System.Web.Http.OData.TestCommon.Models.Customer' to IQueryable of 'System.Int32'."); " is 121.
Long Statement,System.Web.Http.OData.Query,ODataQueryOptionsOfTEntityTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionsOfTEntityTest.cs,ApplyTo_Succeeds_If_QueryTypeDerivesFromOptionsType,The length of the statement  "            ODataQueryOptions<Customer> query = new ODataQueryOptions<Customer>(context' new HttpRequestMessage(HttpMethod.Get' "http://server/?$top=10")); " is 143.
Long Statement,System.Web.Http.OData.Query,ODataQueryOptionsOfTEntityTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionsOfTEntityTest.cs,ApplyTo_Succeeds_If_QueryTypeMatchesOptionsType,The length of the statement  "            ODataQueryOptions<Customer> query = new ODataQueryOptions<Customer>(context' new HttpRequestMessage(HttpMethod.Get' "http://server/?$top=10")); " is 143.
Long Statement,System.Web.Http.OData.Query,ODataQueryOptionsOfTEntityTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionsOfTEntityTest.cs,ApplyTo_WithQuerySettings_ThrowsInvalidOp_If_QueryTypeDoesnotMatch,The length of the statement  "            ODataQueryOptions<Customer> query = new ODataQueryOptions<Customer>(context' new HttpRequestMessage(HttpMethod.Get' "http://server/?$top=10")); " is 143.
Long Statement,System.Web.Http.OData.Query,ODataQueryOptionsOfTEntityTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionsOfTEntityTest.cs,ApplyTo_WithQuerySettings_ThrowsInvalidOp_If_QueryTypeDoesnotMatch,The length of the statement  "                "Cannot apply ODataQueryOptions of 'System.Web.Http.OData.TestCommon.Models.Customer' to IQueryable of 'System.Int32'."); " is 121.
Long Statement,System.Web.Http.OData.Query,ODataQueryOptionsOfTEntityTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionsOfTEntityTest.cs,ApplyTo_WithQuerySettings_Succeeds_If_QueryTypeDerivesFromOptionsType,The length of the statement  "            ODataQueryOptions<Customer> query = new ODataQueryOptions<Customer>(context' new HttpRequestMessage(HttpMethod.Get' "http://server/?$top=10")); " is 143.
Long Statement,System.Web.Http.OData.Query,ODataQueryOptionsOfTEntityTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionsOfTEntityTest.cs,ApplyTo_WithQuerySettings_Succeeds_If_QueryTypeMatchesOptionsType,The length of the statement  "            ODataQueryOptions<Customer> query = new ODataQueryOptions<Customer>(context' new HttpRequestMessage(HttpMethod.Get' "http://server/?$top=10")); " is 143.
Long Statement,System.Web.Http.OData.Query,FilterQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\FilterQueryOptionTest.cs,CanConstructValidAnyQueryOverPrimitiveCollectionProperty,The length of the statement  "            var model = new ODataModelBuilder().Add_Customer_EntityType_With_CollectionProperties().Add_Customers_EntitySet().GetEdmModel(); " is 128.
Long Statement,System.Web.Http.OData.Query,FilterQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\FilterQueryOptionTest.cs,CanConstructValidAnyQueryOverComplexCollectionProperty,The length of the statement  "            var model = new ODataModelBuilder().Add_Customer_EntityType_With_CollectionProperties().Add_Customers_EntitySet().Add_Address_ComplexType().GetEdmModel(); " is 154.
Long Statement,System.Web.Http.OData.Query,FilterQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\FilterQueryOptionTest.cs,ApplyTo_Throws_Null_Query,The length of the statement  "            var model = new ODataModelBuilder().Add_Customer_EntityType_With_CollectionProperties().Add_Customers_EntitySet().Add_Address_ComplexType().GetEdmModel(); " is 154.
Long Statement,System.Web.Http.OData.Query,FilterQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\FilterQueryOptionTest.cs,ApplyTo_Throws_Null_QuerySettings,The length of the statement  "            var model = new ODataModelBuilder().Add_Customer_EntityType_With_CollectionProperties().Add_Customers_EntitySet().Add_Address_ComplexType().GetEdmModel(); " is 154.
Long Statement,System.Web.Http.OData.Query,FilterQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\FilterQueryOptionTest.cs,ApplyTo_Throws_Null_AssembliesResolver,The length of the statement  "            var model = new ODataModelBuilder().Add_Customer_EntityType_With_CollectionProperties().Add_Customers_EntitySet().Add_Address_ComplexType().GetEdmModel(); " is 154.
Long Statement,System.Web.Http.OData.Query,FilterQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\FilterQueryOptionTest.cs,ApplyTo_Throws_Null_AssembliesResolver,The length of the statement  "            Assert.ThrowsArgumentNull(() => filter.ApplyTo(new Customer[0].AsQueryable()' new ODataQuerySettings()' null)' "assembliesResolver"); " is 133.
Long Statement,System.Web.Http.OData.Query,FilterQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\FilterQueryOptionTest.cs,ApplyTo_Returns_Correct_Queryable,The length of the statement  "            IQueryable queryable = filterOption.ApplyTo(customers.AsQueryable()' new ODataQuerySettings { HandleNullPropagation = HandleNullPropagationOption.True }); " is 154.
Long Statement,System.Web.Http.OData.Query,FilterQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\FilterQueryOptionTest.cs,ApplyToEnums_ReturnsCorrectQueryable,The length of the statement  "            IQueryable queryable = filterOption.ApplyTo(enumModels.AsQueryable()' new ODataQuerySettings { HandleNullPropagation = HandleNullPropagationOption.True }); " is 155.
Long Statement,System.Web.Http.OData.Query,FilterQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\FilterQueryOptionTest.cs,ApplyToEnums_ThrowsNotSupported_ForStringFunctions,The length of the statement  "                () => filterOption.ApplyTo(enumModels.AsQueryable()' new ODataQuerySettings { HandleNullPropagation = HandleNullPropagationOption.True })' " is 138.
Long Statement,System.Web.Http.OData.Query,ODataQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionTest.cs,CanExtractQueryOptionsCorrectly,The length of the statement  "                new Uri("http://server/service/Customers/?$filter=Filter&$select=Select&$orderby=OrderBy&$expand=Expand&$top=10&$skip=20&$inlinecount=allpages&$skiptoken=SkipToken") " is 165.
Long Statement,System.Web.Http.OData.Query,ODataQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionTest.cs,ApplyTo_Throws_With_Null_Queryable,The length of the statement  "                new Uri("http://server/service/Customers/?$filter=Filter&$select=Select&$orderby=OrderBy&$expand=Expand&$top=10&$skip=20&$inlinecount=allpages&$skiptoken=SkipToken") " is 165.
Long Statement,System.Web.Http.OData.Query,ODataQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionTest.cs,ApplyTo_With_QuerySettings_Throws_With_Null_Queryable,The length of the statement  "                new Uri("http://server/service/Customers/?$filter=Filter&$select=Select&$orderby=OrderBy&$expand=Expand&$top=10&$skip=20&$inlinecount=allpages&$skiptoken=SkipToken") " is 165.
Long Statement,System.Web.Http.OData.Query,ODataQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionTest.cs,ApplyTo_Throws_With_Null_QuerySettings,The length of the statement  "                new Uri("http://server/service/Customers/?$filter=Filter&$select=Select&$orderby=OrderBy&$expand=Expand&$top=10&$skip=20&$inlinecount=allpages&$skiptoken=SkipToken") " is 165.
Long Statement,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByThenBy,The length of the statement  "            var orderByOption = new OrderByQueryOption("Name'Website"' new ODataQueryContext(model' typeof(Customer)' "Customers")); " is 120.
Long Statement,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByDescThenBy,The length of the statement  "            var orderByOption = new OrderByQueryOption("Name desc'Website"' new ODataQueryContext(model' typeof(Customer)' "Customers")); " is 125.
Long Statement,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByDescThenByDesc,The length of the statement  "            var orderByOption = new OrderByQueryOption("Name desc'Website desc"' new ODataQueryContext(model' typeof(Customer)' "Customers")); " is 130.
Long Statement,System.Web.Http.OData.Query,QueryCompositionCustomerWithTaskOfIEnumerableController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionControllers.cs,Get,The length of the statement  "            return TaskHelpers.FromResult(QueryCompositionCustomerController.CustomerList as IEnumerable<QueryCompositionCustomer>); " is 120.
Long Statement,System.Web.Http.OData.Query,QueryCompositionCustomerLowLevelController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionControllers.cs,Get,The length of the statement  "                result = queryOptions.ApplyTo(QueryCompositionCustomerController.CustomerList.AsQueryable()) as IQueryable<QueryCompositionCustomer>; " is 133.
Long Statement,System.Web.Http.OData.Query,QueryCompositionCustomerLowLevel_ODataQueryOptionsOfTController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionControllers.cs,GetCount,The length of the statement  "                result = queryOptions.ApplyTo(QueryCompositionCustomerController.CustomerList.AsQueryable()) as IQueryable<QueryCompositionCustomer>; " is 133.
Long Statement,System.Web.Http.OData.Query,QueryCompositionCustomerLowLevelWithoutDefaultOrderController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionControllers.cs,Get,The length of the statement  "                result = queryOptions.ApplyTo(QueryCompositionCustomerController.CustomerList.AsQueryable()' querySettings) as IQueryable<QueryCompositionCustomer>; " is 148.
Long Statement,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionOrderByIdReturnedOrderedList,The length of the statement  "            HttpResponseMessage response = client.GetAsync(string.Format("http://localhost:8080/{0}/?$orderby=Id"' controllerName)).Result; " is 127.
Long Statement,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionOrderByIdTopSkipReturnsCorrectList,The length of the statement  "            HttpResponseMessage response = client.GetAsync(string.Format("http://localhost:8080/{0}/?$orderby=Id&$skip=1&$top=2"' controllerName)).Result; " is 142.
Long Statement,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionTopSkipChoosesDefaultOrderReturnsCorrectList,The length of the statement  "            HttpResponseMessage response = client.GetAsync(string.Format("http://localhost:8080/{0}/?$skip=1&$top=2"' controllerName)).Result; " is 130.
Long Statement,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionTopSkipFallsBackToBackendOrderIf_EnsureStableOrdering_IsFalse,The length of the statement  "            HttpResponseMessage response = client.GetAsync(string.Format("http://localhost:8080/{0}/?$skip=1&$top=2"' controllerName)).Result; " is 130.
Long Statement,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionOrderByNameReturnsCorrectList,The length of the statement  "            HttpResponseMessage response = client.GetAsync(string.Format("http://localhost:8080/{0}/?$orderby=Name"' controllerName)).Result; " is 129.
Long Statement,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionUnknownOperatorIsAllowed,The length of the statement  "            HttpResponseMessage response = client.GetAsync(string.Format("http://localhost:8080/{0}/?$orderby=Name&unknown=12"' controllerName)).Result; " is 140.
Long Statement,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionUnknownOperatorStartingDollarSignThrows,The length of the statement  "            HttpResponseMessage response = client.GetAsync(string.Format("http://localhost:8080/{0}/?$orderby=Name&$unknown=12"' controllerName)).Result; " is 141.
Long Statement,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionUnknownOperatorStartingDollarSignIsAllowedForLowLevelApi,The length of the statement  "            HttpResponseMessage response = client.GetAsync(string.Format("http://localhost:8080/{0}/?$orderby=Name&$unknown=12"' controllerName)).Result; " is 141.
Long Statement,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionOrderByUnknownPropertyThrows,The length of the statement  "            HttpResponseMessage response = client.GetAsync(string.Format("http://localhost:8080/{0}/?$orderby=UnknownPropertyName"' controllerName)).Result; " is 144.
Long Statement,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableFilter,The length of the statement  "            HttpResponseMessage response = client.GetAsync(string.Format("http://localhost:8080/{0}/?$filter={1}"' controllerName' filter)).Result; " is 135.
Long Statement,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableUsesConfiguredAssembliesResolver,The length of the statement  "            model.SetAnnotationValue<ClrTypeAnnotation>(model.FindType("System.Web.Http.OData.Query.QueryCompositionCustomer")' null); " is 122.
Long Statement,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableWorksWithModelsWithPrimitiveCollectionAndComplexCollection,The length of the statement  "            HttpServer server = new HttpServer(InitializeConfiguration("QueryCompositionCategoryController"' useCustomEdmModel: false)); " is 124.
Long Statement,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableWorksWithModelsWithPrimitiveCollectionAndComplexCollection,The length of the statement  "            HttpResponseMessage response = client.GetAsync("http://localhost:8080/QueryCompositionCategory/?$filter=" + filter).Result; " is 123.
Long Statement,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,ODataQueryOptionsOfT_Works,The length of the statement  "            HttpServer server = new HttpServer(InitializeConfiguration("QueryCompositionCustomerLowLevel_ODataQueryOptionsOfT"' false)); " is 124.
Long Statement,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,ODataQueryOptionsOfT_Works,The length of the statement  "            HttpResponseMessage response = client.GetAsync("http://localhost:8080/QueryCompositionCustomerLowLevel_ODataQueryOptionsOfT/?$filter=Id ge 22").Result; " is 151.
Long Statement,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,AnonymousTypes_Work_With_QueryableAttribute,The length of the statement  "            HttpServer server = new HttpServer(InitializeConfiguration("QueryCompositionAnonymousTypesController"' useCustomEdmModel: false)); " is 130.
Long Statement,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,AnonymousTypes_Work_With_QueryableAttribute,The length of the statement  "            HttpResponseMessage response = client.GetAsync("http://localhost:8080/QueryCompositionAnonymousTypes/?$filter=Id ge 5").Result; " is 127.
Long Statement,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableFilter_StringComparisons_Work,The length of the statement  "            HttpResponseMessage response = client.GetAsync(string.Format("http://localhost:8080/{0}/?$filter={1}"' "QueryCompositionCustomer"' filter)).Result; " is 147.
Long Statement,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableWorksWith_ByteArrayComparison,The length of the statement  "            HttpResponseMessage response = client.GetAsync("http://localhost:8080/QueryCompositionCustomer/?$filter=Image eq binary'010203'").Result; " is 137.
Long Statement,System.Web.Http.OData.Query,HttpActionDescriptorExtensionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\HttpActionDescriptorExtensionTests.cs,GetEdmModelWorks,The length of the statement  "            HttpControllerDescriptor controllerDescriptor = new HttpControllerDescriptor(new HttpConfiguration()' "CustomerLowLevel"' typeof(CustomerHighLevelController)); " is 159.
Long Statement,System.Web.Http.OData.Query,HttpActionDescriptorExtensionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\HttpActionDescriptorExtensionTests.cs,GetEdmModelWorks,The length of the statement  "            HttpActionDescriptor actionDescriptor = new ReflectedHttpActionDescriptor(controllerDescriptor' typeof(CustomerHighLevelController).GetMethod(methodName)); " is 155.
Long Statement,System.Web.Http.OData.Query,HttpActionDescriptorExtensionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\HttpActionDescriptorExtensionTests.cs,GetEdmModelForMultipleTypesWorks,The length of the statement  "            HttpControllerDescriptor controllerDescriptor = new HttpControllerDescriptor(new HttpConfiguration()' "CustomerLowLevel"' typeof(CustomerHighLevelController)); " is 159.
Long Statement,System.Web.Http.OData.Query,HttpActionDescriptorExtensionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\HttpActionDescriptorExtensionTests.cs,GetEdmModelForMultipleTypesWorks,The length of the statement  "            HttpActionDescriptor actionDescriptor = new ReflectedHttpActionDescriptor(controllerDescriptor' typeof(CustomerHighLevelController).GetMethod("GetObject")); " is 156.
Long Statement,System.Web.Http.OData.Query,ODataQueryParameterBindingAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryParameterBindingAttributeTests.cs,DifferentReturnTypeWorks,The length of the statement  "            HttpControllerContext controllerContext = new HttpControllerContext(config' new HttpRouteData(new HttpRoute())' request); " is 121.
Long Statement,System.Web.Http.OData.Query,ODataQueryParameterBindingAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryParameterBindingAttributeTests.cs,DifferentReturnTypeWorks,The length of the statement  "            HttpControllerDescriptor controllerDescriptor = new HttpControllerDescriptor(new HttpConfiguration()' "CustomerLowLevel"' typeof(CustomerHighLevelController)); " is 159.
Long Statement,System.Web.Http.OData.Query,ODataQueryParameterBindingAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryParameterBindingAttributeTests.cs,DifferentReturnTypeWorks,The length of the statement  "            attribute.GetBinding(parameterDescriptor).ExecuteBindingAsync((ModelMetadataProvider)null' actionContext' CancellationToken.None).Wait(); " is 137.
Long Statement,System.Web.Http.OData.Query,ODataQueryParameterBindingAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryParameterBindingAttributeTests.cs,BadReturnTypeThrows,The length of the statement  "            HttpControllerContext controllerContext = new HttpControllerContext(config' new HttpRouteData(new HttpRoute())' request); " is 121.
Long Statement,System.Web.Http.OData.Query,ODataQueryParameterBindingAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryParameterBindingAttributeTests.cs,BadReturnTypeThrows,The length of the statement  "            HttpControllerDescriptor controllerDescriptor = new HttpControllerDescriptor(new HttpConfiguration()' "CustomerLowLevel"' typeof(CustomerHighLevelController)); " is 159.
Long Statement,System.Web.Http.OData.Query,ODataQueryParameterBindingAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryParameterBindingAttributeTests.cs,BadReturnTypeThrows,The length of the statement  "                        "Cannot create an EDM model as the action '{0}' on controller '{1}' has a return type '{2}' that does not implement IEnumerable<T>."' " is 133.
Long Statement,System.Web.Http.OData.Query,ODataQueryParameterBindingAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryParameterBindingAttributeTests.cs,VoidReturnTypeThrows,The length of the statement  "            HttpControllerContext controllerContext = new HttpControllerContext(config' new HttpRouteData(new HttpRoute())' request); " is 121.
Long Statement,System.Web.Http.OData.Query,ODataQueryParameterBindingAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryParameterBindingAttributeTests.cs,VoidReturnTypeThrows,The length of the statement  "            HttpControllerDescriptor controllerDescriptor = new HttpControllerDescriptor(new HttpConfiguration()' "CustomerLowLevel"' typeof(CustomerHighLevelController)); " is 159.
Long Statement,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,OrOperator,The length of the statement  "                Error.Format("$it => (($it.UnitPrice == Convert({0:0.00})) OrElse (Convert($it.UnitsInStock) == Convert({1})))"' 5.0' 0)' " is 121.
Long Statement,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,AndOperator,The length of the statement  "                Error.Format("$it => (($it.UnitPrice == Convert({0:0.00})) AndAlso (Convert($it.UnitsInStock) == Convert({1:0.00})))"' 5.0' 10.0)' " is 130.
Long Statement,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,RecursiveAllAny,The length of the statement  "               "$it => $it.Category.QueryableProducts.All(P => P.Category.EnumerableProducts.Any(PP => (PP.ProductName == \"Snacks\")))"' " is 122.
Long Statement,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,AnyAnyNestedBeyondLimit,The length of the statement  "            Assert.Throws<ODataException>(() => Bind(filter' settings)' "The Any/All nesting limit of 1 has been exceeded. LambdaNestingLimit can be configured on ODataQuerySettings or QueryableAttribute."); " is 195.
Long Statement,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,AllAllNestedBeyondLimit,The length of the statement  "            Assert.Throws<ODataException>(() => Bind(filter' settings)' "The Any/All nesting limit of 1 has been exceeded. LambdaNestingLimit can be configured on ODataQuerySettings or QueryableAttribute."); " is 195.
Long Statement,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,AnyAllNestedBeyondLimit,The length of the statement  "            Assert.Throws<ODataException>(() => Bind(filter' settings)' "The Any/All nesting limit of 1 has been exceeded. LambdaNestingLimit can be configured on ODataQuerySettings or QueryableAttribute."); " is 195.
Long Statement,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,AllAnyNestedBeyondLimit,The length of the statement  "            Assert.Throws<ODataException>(() => Bind(filter' settings)' "The Any/All nesting limit of 1 has been exceeded. LambdaNestingLimit can be configured on ODataQuerySettings or QueryableAttribute."); " is 195.
Long Statement,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,AnyInSequenceNotNested,The length of the statement  "               "Category/QueryableProducts/any(P: P/ProductName eq 'Snacks') or Category/QueryableProducts/any(P2: P2/ProductName eq 'Snacks')"' " is 129.
Long Statement,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,AnyInSequenceNotNested,The length of the statement  "               "$it => ($it.Category.QueryableProducts.Any(P => (P.ProductName == \"Snacks\")) OrElse $it.Category.QueryableProducts.Any(P2 => (P2.ProductName == \"Snacks\")))"' " is 162.
Long Statement,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,AllInSequenceNotNested,The length of the statement  "               "Category/QueryableProducts/all(P: P/ProductName eq 'Snacks') or Category/QueryableProducts/all(P2: P2/ProductName eq 'Snacks')"' " is 129.
Long Statement,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,AllInSequenceNotNested,The length of the statement  "               "$it => ($it.Category.QueryableProducts.All(P => (P.ProductName == \"Snacks\")) OrElse $it.Category.QueryableProducts.All(P2 => (P2.ProductName == \"Snacks\")))"' " is 162.
Long Statement,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,RecursiveMethodCall,The length of the statement  "                "$it => ((IIF((IIF(($it.UnitPrice == null)' null' Convert(Floor($it.UnitPrice.Value))) == null)' null' Convert(Floor(Floor($it.UnitPrice.Value)))) == Convert(123)) == True)"); " is 175.
Long Statement,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,DisAllowed_ByteArrayComparisons,The length of the statement  "                Error.Format("A binary operator with incompatible types was detected. Found operand types 'Edm.Binary' and 'Edm.Binary' for operator kind '{0}'."' op)); " is 152.
Long Statement,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,GetLongInputsTestData,The length of the statement  "                    " Category/Products/any(" + Enumerable.Range(1'maxCount/4).Aggregate(""' (prev'i) => String.Format("p{1}: p{1}/Category/Products/any({0})"' prev' i)) +")" " is 154.
Long Statement,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,VerifyQueryDeserialization,The length of the statement  "            return VerifyQueryDeserialization<Product>(filter' expectedResult' expectedResultWithNullPropagation' settingsCustomizer); " is 122.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,Parse_ForInvalidCast_ThrowsODataException,The length of the statement  "                "Invalid cast encountered. Cast type 'System.Web.Http.OData.Routing.Product' must be the same as or derive from the previous segment's type 'System.Web.Http.OData.Routing.Customer'."); " is 184.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParseEntitySetUrl,The length of the statement  "            IEdmEntitySet expectedSet = _parser.Model.EntityContainers().First().EntitySets().SingleOrDefault(s => s.Name == "Customers"); " is 126.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParseKeyUrl,The length of the statement  "            IEdmEntitySet expectedSet = _parser.Model.EntityContainers().First().EntitySets().SingleOrDefault(s => s.Name == "Customers"); " is 126.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParseCastCollectionSegment,The length of the statement  "            IEdmEntitySet expectedSet = _parser.Model.EntityContainers().First().EntitySets().SingleOrDefault(s => s.Name == "Customers"); " is 126.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParseCastCollectionSegment,The length of the statement  "            IEdmEntityType expectedType = _parser.Model.SchemaElements.OfType<IEdmEntityType>().SingleOrDefault(s => s.Name == "VIP"); " is 122.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParseCastEntitySegment,The length of the statement  "            IEdmEntitySet expectedSet = _parser.Model.EntityContainers().First().EntitySets().SingleOrDefault(s => s.Name == "Customers"); " is 126.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParseCastEntitySegment,The length of the statement  "            IEdmEntityType expectedType = _parser.Model.SchemaElements.OfType<IEdmEntityType>().SingleOrDefault(s => s.Name == "VIP"); " is 122.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParseNavigateToCollectionSegment,The length of the statement  "            IEdmEntitySet expectedSet = _parser.Model.EntityContainers().First().EntitySets().SingleOrDefault(s => s.Name == "Products"); " is 125.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParseNavigateToCollectionSegment,The length of the statement  "            IEdmNavigationProperty expectedEdmElement = _parser.Model.SchemaElements.OfType<IEdmEntityType>().SingleOrDefault(s => s.Name == "Customer").NavigationProperties().SingleOrDefault(n => n.Name == "Products"); " is 207.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParseNavigateToSingleSegment,The length of the statement  "            IEdmEntitySet expectedSet = _parser.Model.EntityContainers().First().EntitySets().SingleOrDefault(s => s.Name == "SalesPeople"); " is 128.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParseNavigateToSingleSegment,The length of the statement  "            IEdmNavigationProperty expectedEdmElement = _parser.Model.SchemaElements.OfType<IEdmEntityType>().SingleOrDefault(s => s.Name == "VIP").NavigationProperties().SingleOrDefault(n => n.Name == "RelationshipManager"); " is 213.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParseRootProcedureSegment,The length of the statement  "            IEdmEntitySet expectedSet = _parser.Model.EntityContainers().First().EntitySets().SingleOrDefault(s => s.Name == "Customers"); " is 126.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParseRootProcedureSegment,The length of the statement  "            IEdmFunctionImport expectedEdmElement = _parser.Model.EntityContainers().First().FunctionImports().SingleOrDefault(s => s.Name == "GetCustomerById"); " is 149.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParsePropertySegment,The length of the statement  "            IEdmProperty expectedEdmElement = _parser.Model.SchemaElements.OfType<IEdmEntityType>().SingleOrDefault(e => e.Name == "Customer").Properties().SingleOrDefault(p => p.Name == "Name"); " is 183.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParseComplexPropertySegment,The length of the statement  "            IEdmProperty expectedEdmElement = _parser.Model.SchemaElements.OfType<IEdmEntityType>().SingleOrDefault(e => e.Name == "Customer").Properties().SingleOrDefault(p => p.Name == "Address"); " is 186.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParsePropertyOfComplexSegment,The length of the statement  "            IEdmProperty expectedEdmElement = _parser.Model.SchemaElements.OfType<IEdmComplexType>().SingleOrDefault(e => e.Name == "Address").Properties().SingleOrDefault(p => p.Name == "Street"); " is 185.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParseEntityLinksSegment,The length of the statement  "            IEdmEntitySet expectedSet = _parser.Model.EntityContainers().First().EntitySets().SingleOrDefault(s => s.Name == "Products"); " is 125.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParseActionBoundToEntitySegment,The length of the statement  "            IEdmFunctionImport expectedEdmElement = _parser.Model.EntityContainers().First().FunctionImports().SingleOrDefault(p => p.Name == "GetRelatedCustomers"); " is 153.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParseActionBoundToEntitySegment,The length of the statement  "            IEdmEntitySet expectedSet = _parser.Model.EntityContainers().First().EntitySets().SingleOrDefault(e => e.Name == "Customers"); " is 126.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParseActionBoundToCollectionSegment,The length of the statement  "            IEdmFunctionImport expectedEdmElement = _parser.Model.EntityContainers().First().FunctionImports().SingleOrDefault(p => p.Name == "GetMostProfitable"); " is 151.
Long Statement,System.Web.Http.OData.Routing,ODataPathParserTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Routing\ODataPathParserTest.cs,CanParseActionBoundToCollectionSegment,The length of the statement  "            IEdmEntitySet expectedSet = _parser.Model.EntityContainers().First().EntitySets().SingleOrDefault(e => e.Name == "Customers"); " is 126.
Magic Number,System.Net.Http.Formatting,MediaTypeFormatterTestBase<TFormatter>,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Net.Http.Formatting.Test\Formatting\MediaTypeFormatterTestBase.cs,ReadFromStreamAsync_ReadsDataButDoesNotCloseStream,The following statement contains a magic number: return formatter.ReadFromStreamAsync(typeof(SampleType)' memStream' content' null).ContinueWith(                  readTask =>                  {                      // Assert                      Assert.Equal(TaskStatus.RanToCompletion' readTask.Status);                      Assert.True(memStream.CanRead);                        var value = Assert.IsType<SampleType>(readTask.Result);                      Assert.Equal(42' value.Number);                  });
Magic Number,System.Net.Http.Formatting,MediaTypeFormatterTestBase<TFormatter>,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Net.Http.Formatting.Test\Formatting\MediaTypeFormatterTestBase.cs,ReadFromStreamAsync_WhenContentLengthIsNull_ReadsDataButDoesNotCloseStream,The following statement contains a magic number: return formatter.ReadFromStreamAsync(typeof(SampleType)' memStream' content' null).ContinueWith(                  readTask =>                  {                      // Assert                      Assert.Equal(TaskStatus.RanToCompletion' readTask.Status);                      Assert.True(memStream.CanRead);                        var value = Assert.IsType<SampleType>(readTask.Result);                      Assert.Equal(42' value.Number);                  });
Magic Number,System.Net.Http.Formatting,MediaTypeFormatterTestBase<TFormatter>,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Net.Http.Formatting.Test\Formatting\MediaTypeFormatterTestBase.cs,WriteToStreamAsync_WritesDataButDoesNotCloseStream,The following statement contains a magic number: SampleType sampleType = new SampleType { Number = 42 };
Magic Number,System.Web.Http.OData,ODataResultOfTTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\ODataResultOfTTest.cs,ODataResult_SerializesToJson,The following statement contains a magic number: ODataResult<string> result = new ODataResult<string>(new string[] { "a"' "b"' "c" }' new Uri("http://localhost/NextPage")' 3);
Magic Number,System.Web.Http.OData,ODataResultOfTTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\ODataResultOfTTest.cs,ODataResult_SerializesToXml,The following statement contains a magic number: ODataResult<string> result = new ODataResult<string>(new string[] { "a"' "b"' "c" }' new Uri("http://localhost/NextPage")' 3);
Magic Number,System.Web.Http.OData,DeltaTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\DeltaTest.cs,CanGetChangedPropertyNames,The following statement contains a magic number: var original = new AddressEntity { ID = 1' City = "Redmond"' State = "NY"' StreetAddress = "21110 NE 44th St"' ZipCode = 98074 };
Magic Number,System.Web.Http.OData,DeltaTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\DeltaTest.cs,CanGetChangedPropertyNames,The following statement contains a magic number: Assert.Equal(2' mods.Count());
Magic Number,System.Web.Http.OData,DeltaTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\DeltaTest.cs,CanPatch,The following statement contains a magic number: var original = new AddressEntity { ID = 1' City = "Redmond"' State = "WA"' StreetAddress = "21110 NE 44th St"' ZipCode = 98074 };
Magic Number,System.Web.Http.OData,DeltaTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\DeltaTest.cs,CanPatch,The following statement contains a magic number: Assert.Equal(98074' original.ZipCode);
Magic Number,System.Web.Http.OData,DeltaTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\DeltaTest.cs,CanCopyUnchangedValues,The following statement contains a magic number: var original = new AddressEntity { ID = 1' City = "Redmond"' State = "WA"' StreetAddress = "21110 NE 44th St"' ZipCode = 98074 };
Magic Number,System.Web.Http.OData,DeltaTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\DeltaTest.cs,CanPut,The following statement contains a magic number: var original = new AddressEntity { ID = 1' City = "Redmond"' State = "WA"' StreetAddress = "21110 NE 44th St"' ZipCode = 98074 };
Magic Number,System.Web.Http.OData,HttpConfigurationExtensionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\HttpConfigurationExtensionTests.cs,AddQuerySupport_ActionFilters_TakePrecedence,The following statement contains a magic number: Assert.Equal(100' ((QueryableAttribute)filters[0].Instance).ResultLimit);
Magic Number,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,LambdaNestingLimit_Property_RoundTrips,The following statement contains a magic number: Assert.Reflection.IntegerProperty<QueryableAttribute' int>(                  new QueryableAttribute()'                  o => o.LambdaNestingLimit'                  expectedDefaultValue: 1'                  minLegalValue: 1'                  illegalLowerValue: 0'                  illegalUpperValue: null'                  maxLegalValue: int.MaxValue'                  roundTripTestValue: 2);
Magic Number,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,ResultLimit_Property_RoundTrips,The following statement contains a magic number: Assert.Reflection.IntegerProperty<QueryableAttribute' int>(                  new QueryableAttribute()'                  o => o.ResultLimit'                  expectedDefaultValue: 0'                  minLegalValue: 1'                  illegalLowerValue: 0'                  illegalUpperValue: null'                  maxLegalValue: int.MaxValue'                  roundTripTestValue: 2);
Magic Number,System.Web.Http.OData,QueryableAttributeTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\QueryableAttributeTests.cs,InvalidActionReturnType_Throws,The following statement contains a magic number: object instance = returnType.IsArray ? Array.CreateInstance(returnType.GetElementType()' 5) : Activator.CreateInstance(returnType);
Magic Number,System.Web.Http.OData.Builder,ActionConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ActionConfigurationTest.cs,CanCreateActionWithNonBindingParameters,The following statement contains a magic number: Assert.Equal(2' complexTypes.Length);
Magic Number,System.Web.Http.OData.Builder,ActionConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ActionConfigurationTest.cs,CanCreateActionWithNonBindingParameters,The following statement contains a magic number: Assert.Equal(6' parameters.Length);
Magic Number,System.Web.Http.OData.Builder,ActionConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ActionConfigurationTest.cs,CanCreateActionWithNonBindingParameters,The following statement contains a magic number: Assert.Equal("p2"' parameters[2].Name);
Magic Number,System.Web.Http.OData.Builder,ActionConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ActionConfigurationTest.cs,CanCreateActionWithNonBindingParameters,The following statement contains a magic number: Assert.Equal(typeof(Address).FullName' parameters[2].TypeConfiguration.FullName);
Magic Number,System.Web.Http.OData.Builder,ActionConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ActionConfigurationTest.cs,CanCreateActionWithNonBindingParameters,The following statement contains a magic number: Assert.Equal("p3"' parameters[3].Name);
Magic Number,System.Web.Http.OData.Builder,ActionConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ActionConfigurationTest.cs,CanCreateActionWithNonBindingParameters,The following statement contains a magic number: Assert.Equal("Collection(Edm.String)"' parameters[3].TypeConfiguration.FullName);
Magic Number,System.Web.Http.OData.Builder,ActionConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ActionConfigurationTest.cs,CanCreateActionWithNonBindingParameters,The following statement contains a magic number: Assert.Equal("p4"' parameters[4].Name);
Magic Number,System.Web.Http.OData.Builder,ActionConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ActionConfigurationTest.cs,CanCreateActionWithNonBindingParameters,The following statement contains a magic number: Assert.Equal("Collection(Edm.Int32)"' parameters[4].TypeConfiguration.FullName);
Magic Number,System.Web.Http.OData.Builder,ActionConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ActionConfigurationTest.cs,CanCreateActionWithNonBindingParameters,The following statement contains a magic number: Assert.Equal("p5"' parameters[5].Name);
Magic Number,System.Web.Http.OData.Builder,ActionConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ActionConfigurationTest.cs,CanCreateActionWithNonBindingParameters,The following statement contains a magic number: Assert.Equal(string.Format("Collection({0})"' typeof(ZipCode).FullName)' parameters[5].TypeConfiguration.FullName);
Magic Number,System.Web.Http.OData.Builder,BindableProcedureFinderAnnotationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\BindableProcedureFinderAnnotationTest.cs,CanBuildBoundProcedureCacheForIEdmModel,The following statement contains a magic number: Assert.Equal(2' customerActions.Length);
Magic Number,System.Web.Http.OData.Builder,BindableProcedureFinderAnnotationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\BindableProcedureFinderAnnotationTest.cs,CanBuildBoundProcedureCacheForIEdmModel,The following statement contains a magic number: Assert.Equal(2' movieActions.Length);
Magic Number,System.Web.Http.OData.Builder,BindableProcedureFinderAnnotationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\BindableProcedureFinderAnnotationTest.cs,CanBuildBoundProcedureCacheForIEdmModel,The following statement contains a magic number: Assert.Equal(3' blockBusterActions.Length);
Magic Number,System.Web.Http.OData.Builder,ComplexTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ComplexTypeTest.cs,CreateComplexTypeByConvention,The following statement contains a magic number: Assert.Equal(4' addressType.DeclaredProperties.Count());
Magic Number,System.Web.Http.OData.Builder,EntitySetLinkConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetLinkConfigurationTest.cs,CanConfigureAllLinksViaEditLink,The following statement contains a magic number: var productInstance = new EntitySetLinkConfigurationTest_Product { ID = 15 };
Magic Number,System.Web.Http.OData.Builder,EntitySetLinkConfigurationTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetLinkConfigurationTest.cs,CanConfigureLinksIndependently,The following statement contains a magic number: var productInstance = new EntitySetLinkConfigurationTest_Product { ID = 15 };
Magic Number,System.Web.Http.OData.Builder,EntitySetTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntitySetTest.cs,CanConfigureLinks_For_NavigationPropertiesInDerivedType,The following statement contains a magic number: Uri link = model.GetEntitySetLinkBuilder(vehicles).BuildNavigationLink(                  new EntityInstanceContext { EntityInstance = new Motorcycle { Name = "Motorcycle1"' Model = 2009 }' EdmModel = model' EntitySet = vehicles' EntityType = motorcycle }'                  motorcycleManufacturerProperty);
Magic Number,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,CreateEntityType,The following statement contains a magic number: Assert.Equal(5' customerType.DeclaredProperties.Count());
Magic Number,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,CreateEntityTypeWithRelationship,The following statement contains a magic number: Assert.Equal(5' orderType.DeclaredProperties.Count());
Magic Number,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,CreateEntityTypeWithRelationship,The following statement contains a magic number: Assert.Equal(5' customerType.DeclaredProperties.Count());
Magic Number,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,CanCreateEntityWithCompoundKey,The following statement contains a magic number: Assert.Equal(5' customerType.Properties().Count());
Magic Number,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,CanCreateEntityWithCompoundKey,The following statement contains a magic number: Assert.Equal(2' customerType.DeclaredKey.Count());
Magic Number,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,CanCreateEntityWithCollectionProperties,The following statement contains a magic number: Assert.Equal(3' customer.Properties.Count());
Magic Number,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,CanCreateEntityWithCollectionProperties,The following statement contains a magic number: Assert.Equal(2' customer.Properties.OfType<CollectionPropertyConfiguration>().Count());
Magic Number,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,CanCreateEntityWithCollectionProperties,The following statement contains a magic number: Assert.Equal(2' builder.StructuralTypes.Count());
Magic Number,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,CanCreateDerivedtypes,The following statement contains a magic number: Assert.Equal(2' edmVehicle.Key().Count());
Magic Number,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,CanCreateDerivedtypes,The following statement contains a magic number: Assert.Equal(3' edmVehicle.Properties().Count());
Magic Number,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,CanCreateDerivedtypes,The following statement contains a magic number: Assert.Equal(2' edmMotorcycle.Key().Count());
Magic Number,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,CanCreateDerivedtypes,The following statement contains a magic number: Assert.Equal(4' edmMotorcycle.Properties().Count());
Magic Number,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,CanCreateDerivedtypes,The following statement contains a magic number: Assert.Equal(2' edmCar.Key().Count());
Magic Number,System.Web.Http.OData.Builder,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\EntityTypeTest.cs,CanCreateDerivedtypes,The following statement contains a magic number: Assert.Equal(4' edmCar.Properties().Count());
Magic Number,System.Web.Http.OData.Builder,ProgrammableBuilderApiTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\ProgrammableBuilderApiTest.cs,CreateModelUsingProgrammableApi,The following statement contains a magic number: Assert.Equal(3' customerType.DeclaredProperties.Count());
Magic Number,System.Web.Http.OData.Builder,PropertySelectorVisitorTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\PropertySelectorVisitorTest.cs,CanGetMultipleSelectedProperties,The following statement contains a magic number: Assert.Equal(2' properties.Length);
Magic Number,System.Web.Http.OData.Builder.Conventions,ActionLinkGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ActionLinkGenerationConventionTest.cs,GenerateActionLink_GeneratesLinkWithoutCast_IfEntitySetTypeDerivesFromActionEntityType,The following statement contains a magic number: Uri link = ActionLinkGenerationConvention.GenerateActionLink(                  new EntityInstanceContext(model' carsEdmSet' carsEdmSet.ElementType' request.GetUrlHelper()' new Car { Model = 2009' Name = "Accord" })'                  paintAction);
Magic Number,System.Web.Http.OData.Builder.Conventions,ActionLinkGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ActionLinkGenerationConventionTest.cs,GenerateActionLink_GeneratesLinkWithoutCast_IfEntitySetTypeMatchesActionEntityType,The following statement contains a magic number: Uri link = ActionLinkGenerationConvention.GenerateActionLink(                  new EntityInstanceContext(model' carsEdmSet' carsEdmSet.ElementType' request.GetUrlHelper()' new Car { Model = 2009' Name = "Accord" })'                  paintAction);
Magic Number,System.Web.Http.OData.Builder.Conventions,ActionLinkGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ActionLinkGenerationConventionTest.cs,GenerateActionLink_GeneratesLinkWithCast_IfEntitySetTypeDoesnotMatchActionEntityType,The following statement contains a magic number: Uri link = ActionLinkGenerationConvention.GenerateActionLink(                  new EntityInstanceContext(model' vehiclesEdmSet' carEdmType' request.GetUrlHelper()' new Car { Model = 2009' Name = "Accord" })'                  paintAction);
Magic Number,System.Web.Http.OData.Builder.Conventions,ActionLinkGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ActionLinkGenerationConventionTest.cs,Apply_Doesnot_Override_UserConfiguration,The following statement contains a magic number: Uri link = actionLinkBuilder.BuildActionLink(new EntityInstanceContext(model' vehiclesEdmSet' carEdmType' request.GetUrlHelper()' new Car { Model = 2009' Name = "Accord" }));
Magic Number,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,NavigationLinksGenerationConvention_GeneratesLinksWithCast_ForDerivedProperties,The following statement contains a magic number: Uri uri = linkBuilder.BuildNavigationLink(                  new EntityInstanceContext(model' vehiclesEdmEntitySet' carType' request.GetUrlHelper()' new Car { Model = 2009' Name = "Accord" })'                  carManufacturerProperty);
Magic Number,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,NavigationLinksGenerationConvention_GeneratesLinksWithoutCast_ForDeclaredProperties,The following statement contains a magic number: Uri uri = linkBuilder.BuildNavigationLink(                  new EntityInstanceContext(model' vehiclesEdmEntitySet' carType' request.GetUrlHelper()' new Car { Model = 2009' Name = "Accord" })'                  carManufacturerProperty);
Magic Number,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,NavigationLinksGenerationConvention_GeneratesLinksWithoutCast_ForBaseProperties,The following statement contains a magic number: Uri uri = linkBuilder.BuildNavigationLink(                  new EntityInstanceContext(model' vehiclesEdmEntitySet' sportbikeType' request.GetUrlHelper()' new SportBike { Model = 2009' Name = "Ninja" })'                  motorcycleManufacturerProperty);
Magic Number,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,GenerateNavigationLink_GeneratesLink,The following statement contains a magic number: Uri uri =                  NavigationLinksGenerationConvention.GenerateNavigationPropertyLink(                  new EntityInstanceContext                  {                      EdmModel = model'                      EntityInstance = new NavigationLinksGenerationConventionTest_Order { ID = 100 }'                      EntitySet = edmEntitySet'                      EntityType = edmEntitySet.ElementType'                      UrlHelper = request.GetUrlHelper()                  }'                  edmEntitySet.ElementType.NavigationProperties().Single()'                  orders'                  includeCast: false);
Magic Number,System.Web.Http.OData.Builder.Conventions,NavigationLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\NavigationLinksGenerationConventionTest.cs,GenerateNavigationLink_GeneratesCorrectLink_EvenIfRouteDataPointsToADifferentController,The following statement contains a magic number: Uri uri =                  NavigationLinksGenerationConvention.GenerateNavigationPropertyLink(                  new EntityInstanceContext                  {                      EdmModel = model'                      EntityInstance = new NavigationLinksGenerationConventionTest_Order { ID = 100 }'                      EntitySet = edmEntitySet'                      EntityType = edmEntitySet.ElementType'                      UrlHelper = request.GetUrlHelper()                  }'                  edmEntitySet.ElementType.NavigationProperties().Single()'                  orders'                  includeCast: false);
Magic Number,System.Web.Http.OData.Builder.Conventions,SelfLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\SelfLinksGenerationConventionTest.cs,GenerateSelfLinkWithoutCast_Works,The following statement contains a magic number: Uri uri =                  SelfLinksGenerationConvention.GenerateSelfLink(                  vehicles'                  new EntityInstanceContext(model' carsEdmEntitySet' carsEdmEntitySet.ElementType' request.GetUrlHelper()' new Car { Model = 2009' Name = "Accord" })'                  includeCast: false);
Magic Number,System.Web.Http.OData.Builder.Conventions,SelfLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\SelfLinksGenerationConventionTest.cs,GenerateSelfLinkWithCast_Works,The following statement contains a magic number: Uri uri =                  SelfLinksGenerationConvention.GenerateSelfLink(                  vehicles'                  new EntityInstanceContext(model' carsEdmEntitySet' carsEdmEntitySet.ElementType' request.GetUrlHelper()' new Car { Model = 2009' Name = "Accord" })'                  includeCast: true);
Magic Number,System.Web.Http.OData.Builder.Conventions,SelfLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\SelfLinksGenerationConventionTest.cs,SelfLinksGenerationConvention_Uses_GetByIdWithCast_IfDerivedTypeHasNavigationProperty,The following statement contains a magic number: Uri uri = linkBuilder.BuildEditLink(                  new EntityInstanceContext(model' vehiclesEdmEntitySet' carType' request.GetUrlHelper()' new Car { Model = 2009' Name = "Accord" }));
Magic Number,System.Web.Http.OData.Builder.Conventions,SelfLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\SelfLinksGenerationConventionTest.cs,SelfLinksGenerationConvention_Uses_GetByIdWithoutCast_IfDerivedTypeDoesnotHaveNavigationProperty,The following statement contains a magic number: Uri uri = linkBuilder.BuildEditLink(                  new EntityInstanceContext(model' vehiclesEdmEntitySet' sportbikeType' request.GetUrlHelper()' new SportBike { Model = 2009' Name = "Ninja" }));
Magic Number,System.Web.Http.OData.Builder.Conventions,SelfLinksGenerationConventionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\SelfLinksGenerationConventionTest.cs,SelfLinksGenerationConvention_Throws_If_RouteInCorrect,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(                  () => linkBuilder.BuildEditLink(new EntityInstanceContext(model' vehiclesEdmEntitySet' sportbikeType' request.GetUrlHelper()' new SportBike { Model = 2009' Name = "Ninja" }))'                  "EditLink generation failed. Check that you have the 'OData.GetById' route correctly registered.");
Magic Number,System.Web.Http.OData.Builder.Conventions,ConventionsHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ConventionsHelpersTests.cs,GetEntityKeyValue_MultipleKeys,The following statement contains a magic number: var entityInstance = new { Key1 = "key1"' Key2 = 2' Key3 = true };
Magic Number,System.Web.Http.OData.Builder.Conventions,ConventionsHelpersTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ConventionsHelpersTests.cs,GetEntityKeyValue_MultipleKeys_DerivedType,The following statement contains a magic number: var entityInstance = new { Key1 = "key1"' Key2 = 2' Key3 = true };
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Products,The following statement contains a magic number: Assert.Equal(model.SchemaElements.OfType<IEdmSchemaType>().Count()' 3);
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Products,The following statement contains a magic number: Assert.Equal(4' product.StructuralProperties().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Products,The following statement contains a magic number: Assert.Equal(2' category.StructuralProperties().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Products,The following statement contains a magic number: Assert.Equal(2' version.StructuralProperties().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_ProductsWithKeyAttribute,The following statement contains a magic number: Assert.Equal(model.SchemaElements.OfType<IEdmSchemaType>().Count()' 3);
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_ProductsWithKeyAttribute,The following statement contains a magic number: Assert.Equal(4' product.StructuralProperties().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_ProductsWithKeyAttribute,The following statement contains a magic number: Assert.Equal(2' category.StructuralProperties().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_ProductsWithKeyAttribute,The following statement contains a magic number: Assert.Equal(2' version.StructuralProperties().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_SupportsComplexCollectionWhenNotToldElementTypeIsComplex,The following statement contains a magic number: Assert.Equal(2' entity.DeclaredProperties.Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_SupportsComplexCollectionWhenToldElementTypeIsComplex,The following statement contains a magic number: Assert.Equal(2' entity.DeclaredProperties.Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_SupportsPrimitiveCollection,The following statement contains a magic number: Assert.Equal(2' entity.DeclaredProperties.Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_CanBuild_ModelWithInheritance,The following statement contains a magic number: Assert.Equal(2' vehicle.Key().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_CanBuild_ModelWithInheritance,The following statement contains a magic number: Assert.Equal(3' vehicle.Properties().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_CanBuild_ModelWithInheritance,The following statement contains a magic number: Assert.Equal(2' motorcycle.Key().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_CanBuild_ModelWithInheritance,The following statement contains a magic number: Assert.Equal(5' motorcycle.Properties().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_CanBuild_ModelWithInheritance,The following statement contains a magic number: Assert.Equal(2' car.Key().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_CanBuild_ModelWithInheritance,The following statement contains a magic number: Assert.Equal(5' car.Properties().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_CanBuild_ModelWithInheritance,The following statement contains a magic number: Assert.Equal(2' sportbike.Key().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_CanBuild_ModelWithInheritance,The following statement contains a magic number: Assert.Equal(5' sportbike.Properties().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Ignores_IgnoredTypeAndTheirDerivedTypes,The following statement contains a magic number: Assert.Equal(_totalExpectedSchemaTypesForVehiclesModel - 3' model.SchemaElements.Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Ignores_IgnoredTypeAndTheirDerivedTypes,The following statement contains a magic number: Assert.Equal(2' vehicle.Key().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Ignores_IgnoredTypeAndTheirDerivedTypes,The following statement contains a magic number: Assert.Equal(3' vehicle.Properties().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Ignores_IgnoredTypeAndTheirDerivedTypes,The following statement contains a magic number: Assert.Equal(2' car.Key().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Ignores_IgnoredTypeAndTheirDerivedTypes,The following statement contains a magic number: Assert.Equal(5' car.Properties().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Can_Add_DerivedTypeOfAnIgnoredType,The following statement contains a magic number: Assert.Equal(2' vehicle.Key().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Can_Add_DerivedTypeOfAnIgnoredType,The following statement contains a magic number: Assert.Equal(3' vehicle.Properties().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Can_Add_DerivedTypeOfAnIgnoredType,The following statement contains a magic number: Assert.Equal(2' car.Key().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Can_Add_DerivedTypeOfAnIgnoredType,The following statement contains a magic number: Assert.Equal(5' car.Properties().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Can_Add_DerivedTypeOfAnIgnoredType,The following statement contains a magic number: Assert.Equal(2' sportbike.Key().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Can_Add_DerivedTypeOfAnIgnoredType,The following statement contains a magic number: Assert.Equal(5' sportbike.Properties().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_DoesnotPatch_BaseType_IfBaseTypeIsExplicitlySet,The following statement contains a magic number: Assert.Equal(2' vehicle.Key().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_DoesnotPatch_BaseType_IfBaseTypeIsExplicitlySet,The following statement contains a magic number: Assert.Equal(2' motorcycle.Key().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_DoesnotPatch_BaseType_IfBaseTypeIsExplicitlySet,The following statement contains a magic number: Assert.Equal(5' motorcycle.Properties().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_DoesnotPatch_BaseType_IfBaseTypeIsExplicitlySet,The following statement contains a magic number: Assert.Equal(2' car.Key().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_DoesnotPatch_BaseType_IfBaseTypeIsExplicitlySet,The following statement contains a magic number: Assert.Equal(5' car.Properties().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_DoesnotPatch_BaseType_IfBaseTypeIsExplicitlySet,The following statement contains a magic number: Assert.Equal(2' sportbike.Key().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_DoesnotPatch_BaseType_IfBaseTypeIsExplicitlySet,The following statement contains a magic number: Assert.Equal(5' sportbike.Properties().Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_Figures_Bindings_For_DerivedNavigationProperties,The following statement contains a magic number: Assert.Equal(2' vehicles.NavigationTargets.Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_BindsToTheClosestEntitySet_ForNavigationProperties,The following statement contains a magic number: Assert.Equal(2' vehicles.NavigationTargets.Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_BindsToAllEntitySets,The following statement contains a magic number: Assert.Equal(2' vehicles.NavigationTargets.Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ModelBuilder_DerivedComplexTypeHavingKeys_SuccedsIfToldToBeComplex,The following statement contains a magic number: Assert.Equal(3' model.SchemaElements.Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,ObjectCollectionsAreIgnoredByDefault,The following statement contains a magic number: Assert.Equal(2' model.SchemaElements.Count());
Magic Number,System.Web.Http.OData.Builder.Conventions,ODataConventionModelBuilderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\ODataConventionModelBuilderTests.cs,CanMapObjectArrayAsAComplexProperty,The following statement contains a magic number: Assert.Equal(3' model.SchemaElements.Count());
Magic Number,System.Web.Http.OData.Builder.Conventions.Attributes,DataContractAttributeEdmTypeConventionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Builder\Conventions\Attributes\DataContractAttributeEdmTypeConventionTests.cs,Apply_RemovesAllPropertiesThatAreNotDataMembers,The following statement contains a magic number: type.Setup(t => t.RemoveProperty(mockProperties[2].PropertyInfo)).Verifiable();
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,CollectionProperties_Deserialize,The following statement contains a magic number: Assert.Equal(new[] { 1' 2' 3 }' (IEnumerable<int>)result[propertyName]["results"].Values<int>());
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,CollectionProperties_Deserialize,The following statement contains a magic number: Assert.Equal(new[] { 1' 2' 3 }' (IEnumerable<int>)result[propertyName]["results"].Values<int>());
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,ComplexCollectionProperty_Deserialize,The following statement contains a magic number: Assert.Equal(                  new[] { 1' 2' 3 }'                  complexCollection.AsQueryable().Select(v => (int)v.Property("A")));
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,ComplexCollectionProperty_Deserialize,The following statement contains a magic number: Assert.Equal(                  new[] { 1' 2' 3 }'                  complexCollection.AsQueryable().Select(v => (int)v.Property("A")));
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTestsController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,Post,The following statement contains a magic number: Assert.Equal(3' model.Vehicles.Length);
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTestsController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,Post,The following statement contains a magic number: Assert.Equal(2009' model.Vehicles[0].Model);
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTestsController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,Post,The following statement contains a magic number: Assert.Equal(2010' model.Vehicles[1].Model);
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTestsController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,Post,The following statement contains a magic number: Assert.IsType(typeof(SportBike)' model.Vehicles[2]);
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTestsController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,Post,The following statement contains a magic number: Assert.Equal(2012' model.Vehicles[2].Model);
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTestsController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,Post,The following statement contains a magic number: Assert.Equal(2012' model.Vehicles[2].Model);
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTestsController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,Post,The following statement contains a magic number: Assert.Equal("SportBike"' model.Vehicles[2].Name);
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTestsController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,Post,The following statement contains a magic number: model.ID == 44
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTestsModel,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,CollectionsTestsModel,The following statement contains a magic number: Array = new int[] { 42 };
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTestsModel,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,CollectionsTestsModel,The following statement contains a magic number: IEnumerable = new int[] { 42 };
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTestsModel,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,CollectionsTestsModel,The following statement contains a magic number: ICollection = new int[] { 42 };
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTestsModel,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,CollectionsTestsModel,The following statement contains a magic number: IList = new int[] { 42 };
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTestsModel,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,CollectionsTestsModel,The following statement contains a magic number: List = new List<int> { 42 };
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTestsModel,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,CollectionsTestsModel,The following statement contains a magic number: Collection = new Collection<int> { 42 };
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTestsModel,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,CollectionsTestsModel,The following statement contains a magic number: ComplexCollection = new Complex[] { new Complex { A = 42 } };
Magic Number,System.Web.Http.OData.OData.Formatter,CollectionsTestsModel,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\CollectionsTests.cs,CollectionsTestsModel,The following statement contains a magic number: CustomCollection = new CustomCollection_CollectionsTestsModel<int> { 42 };
Magic Number,System.Web.Http.OData.OData.Formatter,InheritanceTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\InheritanceTests.cs,Action_Can_Return_CollectionOfEntities,The following statement contains a magic number: ValidateSportbike(result.results[2]);
Magic Number,System.Web.Http.OData.OData.Formatter,InheritanceTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\InheritanceTests.cs,ValidateMotorcycle,The following statement contains a magic number: Assert.Equal(2' (int)result.WheelCount);
Magic Number,System.Web.Http.OData.OData.Formatter,InheritanceTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\InheritanceTests.cs,ValidateCar,The following statement contains a magic number: Assert.Equal(4' (int)result.WheelCount);
Magic Number,System.Web.Http.OData.OData.Formatter,InheritanceTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\InheritanceTests.cs,ValidateCar,The following statement contains a magic number: Assert.Equal(5' (int)result.SeatingCapacity);
Magic Number,System.Web.Http.OData.OData.Formatter,InheritanceTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\InheritanceTests.cs,ValidateSportbike,The following statement contains a magic number: Assert.Equal(2' (int)result.WheelCount);
Magic Number,System.Web.Http.OData.Formatter.Deserialization,CollectionDeserializationHelpersTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\CollectionDeserializationHelpersTest.cs,CopyItemsToCollection,The following statement contains a magic number: Assert.Equal(                  new[] { 1' 2' 3 }'                  newCollection as IEnumerable<int>);
Magic Number,System.Web.Http.OData.Formatter.Deserialization,CollectionDeserializationHelpersTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\CollectionDeserializationHelpersTest.cs,CopyItemsToCollection,The following statement contains a magic number: Assert.Equal(                  new[] { 1' 2' 3 }'                  newCollection as IEnumerable<int>);
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_complex_parameters,The following statement contains a magic number: Assert.Equal(98052' address.ZipCode);
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_primitive_collection_parameters,The following statement contains a magic number: int[] expectedRatings = new int[] { 5' 5' 3' 4' 5' 5' 4' 5' 5' 4 };
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_primitive_collection_parameters,The following statement contains a magic number: int[] expectedRatings = new int[] { 5' 5' 3' 4' 5' 5' 4' 5' 5' 4 };
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_primitive_collection_parameters,The following statement contains a magic number: int[] expectedRatings = new int[] { 5' 5' 3' 4' 5' 5' 4' 5' 5' 4 };
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_primitive_collection_parameters,The following statement contains a magic number: int[] expectedRatings = new int[] { 5' 5' 3' 4' 5' 5' 4' 5' 5' 4 };
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_primitive_collection_parameters,The following statement contains a magic number: int[] expectedRatings = new int[] { 5' 5' 3' 4' 5' 5' 4' 5' 5' 4 };
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_primitive_collection_parameters,The following statement contains a magic number: int[] expectedRatings = new int[] { 5' 5' 3' 4' 5' 5' 4' 5' 5' 4 };
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_primitive_collection_parameters,The following statement contains a magic number: int[] expectedRatings = new int[] { 5' 5' 3' 4' 5' 5' 4' 5' 5' 4 };
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_primitive_collection_parameters,The following statement contains a magic number: int[] expectedRatings = new int[] { 5' 5' 3' 4' 5' 5' 4' 5' 5' 4 };
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_primitive_collection_parameters,The following statement contains a magic number: int[] expectedRatings = new int[] { 5' 5' 3' 4' 5' 5' 4' 5' 5' 4 };
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_primitive_collection_parameters,The following statement contains a magic number: int[] expectedRatings = new int[] { 5' 5' 3' 4' 5' 5' 4' 5' 5' 4 };
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_primitive_collection_parameters,The following statement contains a magic number: Assert.Equal(10' ratings.Count);
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataActionPayloadDeserializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataActionPayloadDeserializerTest.cs,Can_deserialize_payload_with_complex_collection_parameters,The following statement contains a magic number: Assert.Equal(98052' address.ZipCode);
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataCollectionDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataCollectionDeserializerTests.cs,Read_Roundtrip_PrimitiveCollection,The following statement contains a magic number: int[] numbers = Enumerable.Range(0' 100).ToArray();
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_CollectionTypeCanBeInstantiated_And_SettableProperty,The following statement contains a magic number: ODataEntityDeserializer.SetCollectionProperty(value' propertyName' isDelta: false' value: new List<int> { 1' 2' 3 });
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_CollectionTypeCanBeInstantiated_And_SettableProperty,The following statement contains a magic number: ODataEntityDeserializer.SetCollectionProperty(value' propertyName' isDelta: false' value: new List<int> { 1' 2' 3 });
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_CollectionTypeCanBeInstantiated_And_SettableProperty,The following statement contains a magic number: Assert.Equal(                  new[] { 1' 2' 3 }'                  value.GetType().GetProperty(propertyName).GetValue(value' index: null) as IEnumerable<int>);
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_CollectionTypeCanBeInstantiated_And_SettableProperty,The following statement contains a magic number: Assert.Equal(                  new[] { 1' 2' 3 }'                  value.GetType().GetProperty(propertyName).GetValue(value' index: null) as IEnumerable<int>);
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_CollectionTypeCannotBeInstantiated_And_SettableProperty_Throws,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(                  () => ODataEntityDeserializer.SetCollectionProperty(value' propertyName' isDelta: false' value: new List<int> { 1' 2' 3 })'                  String.Format("The property '{0}' on type 'System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializerTests+SampleClassWithSettableCollectionProperties' returned a null value. " +                  "The input stream contains collection items which cannot be added if the instance is null."' propertyName));
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_CollectionTypeCannotBeInstantiated_And_SettableProperty_Throws,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(                  () => ODataEntityDeserializer.SetCollectionProperty(value' propertyName' isDelta: false' value: new List<int> { 1' 2' 3 })'                  String.Format("The property '{0}' on type 'System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializerTests+SampleClassWithSettableCollectionProperties' returned a null value. " +                  "The input stream contains collection items which cannot be added if the instance is null."' propertyName));
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_NonSettableProperty_NonNullValue_WithAddMethod,The following statement contains a magic number: ODataEntityDeserializer.SetCollectionProperty(value' propertyName' isDelta: false' value: new List<int> { 1' 2' 3 });
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_NonSettableProperty_NonNullValue_WithAddMethod,The following statement contains a magic number: ODataEntityDeserializer.SetCollectionProperty(value' propertyName' isDelta: false' value: new List<int> { 1' 2' 3 });
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_NonSettableProperty_NonNullValue_WithAddMethod,The following statement contains a magic number: Assert.Equal(                  new[] { 1' 2' 3 }'                  value.GetType().GetProperty(propertyName).GetValue(value' index: null) as IEnumerable<int>);
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_NonSettableProperty_NonNullValue_WithAddMethod,The following statement contains a magic number: Assert.Equal(                  new[] { 1' 2' 3 }'                  value.GetType().GetProperty(propertyName).GetValue(value' index: null) as IEnumerable<int>);
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_NonSettableProperty_ArrayValue_FixedSize_Throws,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(                  () => ODataEntityDeserializer.SetCollectionProperty(value' propertyName' isDelta: false' value: new List<int> { 1' 2' 3 })'                  String.Format("The value of the property '{0}' on type 'System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializerTests+SampleClassWithNonSettableCollectionProperties' is an array. " +                  "Consider adding a setter for the property."' propertyName));
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_NonSettableProperty_ArrayValue_FixedSize_Throws,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(                  () => ODataEntityDeserializer.SetCollectionProperty(value' propertyName' isDelta: false' value: new List<int> { 1' 2' 3 })'                  String.Format("The value of the property '{0}' on type 'System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializerTests+SampleClassWithNonSettableCollectionProperties' is an array. " +                  "Consider adding a setter for the property."' propertyName));
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_NonSettableProperty_NonNullValue_NoAdd_Throws,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(                  () => ODataEntityDeserializer.SetCollectionProperty(value' propertyName' isDelta: false' value: new List<int> { 1' 2' 3 })'                  String.Format("The type '{0}' of the property '{1}' on type 'System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializerTests+SampleClassWithNonSettableCollectionProperties' does not have an Add method. " +                  "Consider using a collection type that does have an Add method - for example IList<T> or ICollection<T>."' propertyType.FullName' propertyName));
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_NonSettableProperty_NonNullValue_NoAdd_Throws,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(                  () => ODataEntityDeserializer.SetCollectionProperty(value' propertyName' isDelta: false' value: new List<int> { 1' 2' 3 })'                  String.Format("The type '{0}' of the property '{1}' on type 'System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializerTests+SampleClassWithNonSettableCollectionProperties' does not have an Add method. " +                  "Consider using a collection type that does have an Add method - for example IList<T> or ICollection<T>."' propertyType.FullName' propertyName));
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_NonSettableProperty_NullValue_Throws,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(                   () => ODataEntityDeserializer.SetCollectionProperty(value' propertyName' isDelta: false' value: new List<int> { 1' 2' 3 })'                   String.Format("The property '{0}' on type 'System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializerTests+SampleClassWithNonSettableCollectionProperties' returned a null value. " +                   "The input stream contains collection items which cannot be added if the instance is null."' propertyName));
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_NonSettableProperty_NullValue_Throws,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(                   () => ODataEntityDeserializer.SetCollectionProperty(value' propertyName' isDelta: false' value: new List<int> { 1' 2' 3 })'                   String.Format("The property '{0}' on type 'System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializerTests+SampleClassWithNonSettableCollectionProperties' returned a null value. " +                   "The input stream contains collection items which cannot be added if the instance is null."' propertyName));
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_CanConvertNonStandardEdmTypes,The following statement contains a magic number: ODataEntityDeserializer.SetCollectionProperty(value' "UnsignedArray"' isDelta: false' value: new List<int> { 1' 2' 3 });
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_CanConvertNonStandardEdmTypes,The following statement contains a magic number: ODataEntityDeserializer.SetCollectionProperty(value' "UnsignedArray"' isDelta: false' value: new List<int> { 1' 2' 3 });
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_CanConvertNonStandardEdmTypes,The following statement contains a magic number: Assert.Equal(                  new uint[] { 1' 2' 3 }'                 value.UnsignedArray);
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_CanConvertNonStandardEdmTypes,The following statement contains a magic number: Assert.Equal(                  new uint[] { 1' 2' 3 }'                 value.UnsignedArray);
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_OnNonCollection_ThrowsInvalidOp,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(              () => ODataEntityDeserializer.SetCollectionProperty(value' propertyName' isDelta: false' value: new List<int> { 1' 2' 3 })'              Error.Format(              "The type '{0}' of the property '{1}' on type 'System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializerTests+SampleClassWithDifferentCollectionProperties' must be a collection."'              propertyType.FullName'              propertyName));
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntryDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SetCollectionProperty_OnNonCollection_ThrowsInvalidOp,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(              () => ODataEntityDeserializer.SetCollectionProperty(value' propertyName' isDelta: false' value: new List<int> { 1' 2' 3 })'              Error.Format(              "The type '{0}' of the property '{1}' on type 'System.Web.Http.OData.Formatter.Deserialization.ODataEntryDeserializerTests+SampleClassWithDifferentCollectionProperties' must be a collection."'              propertyType.FullName'              propertyName));
Magic Number,System.Web.Http.OData.Formatter.Deserialization,SampleClassWithNonSettableCollectionProperties,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntryDeserializerTests.cs,SampleClassWithNonSettableCollectionProperties,The following statement contains a magic number: CustomCollectionWithNoEmptyCtor = new CustomCollectionWithNoEmptyCtor(100);
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataFeedDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataFeedDeserializerTests.cs,Read_Roundtrip,The following statement contains a magic number: Customer[] customers = new[]                  {                      new Customer { ID =1' FirstName = "A"' LastName = "1" }'                      new Customer { ID =2' FirstName = "B"' LastName = "2" }'                  };
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataComplexTypeDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataComplexTypeDeserializerTests.cs,ReadInline_Throws_ForNonODataComplexValues,The following statement contains a magic number: Assert.ThrowsArgument(() =>              {                  deserializer.ReadInline(10' new ODataDeserializerContext());              }' "item");
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntityDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntityDeserializerTests.cs,ReadFromStreamAsync,The following statement contains a magic number: Assert.Equal(product.Rating' 4);
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntityDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntityDeserializerTests.cs,ReadFromStreamAsync,The following statement contains a magic number: Assert.Equal(product.Price' 2.5m);
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntityDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntityDeserializerTests.cs,ReadFromStreamAsync,The following statement contains a magic number: Assert.Equal(product.ReleaseDate' new DateTime(1992' 1' 1' 0' 0' 0));
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntityDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntityDeserializerTests.cs,ReadFromStreamAsync_ComplexTypeAndInlineData,The following statement contains a magic number: Assert.Equal(6' supplier.Products.Count);
Magic Number,System.Web.Http.OData.Formatter.Deserialization,ODataEntityDeserializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Deserialization\ODataEntityDeserializerTests.cs,Read_PatchMode_PatchKeyModeIsPatch,The following statement contains a magic number: Assert.Equal(123' (supplier as dynamic).ID);
Magic Number,System.Web.Http.OData.Formatter,CustomersController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataActionTests.cs,ValidateAddress,The following statement contains a magic number: Assert.Equal(98052' address.ZipCode);
Magic Number,System.Web.Http.OData.Formatter,CustomersController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataActionTests.cs,ValidateNumbers,The following statement contains a magic number: Assert.Equal(2' numbers.Count);
Magic Number,System.Web.Http.OData.Formatter,EdmPrimitiveHelpersTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\EdmPrimitiveHelpersTest.cs,ConvertPrimitiveValueToXElement_Throws_IfInputIsNotString,The following statement contains a magic number: Assert.Throws<ValidationException>(                  () => EdmPrimitiveHelpers.ConvertPrimitiveValue(123' typeof(XElement))'                  "The value must be a string.");
Magic Number,System.Web.Http.OData.Formatter,ODataModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataModelBinderProviderTest.cs,TestMultipleKeys,The following statement contains a magic number: string url = String.Format(                  "http://localhost/ODataModeBinderMultipleKeys/GetMultipleKeys(name={0}'model={1})"'                  Uri.EscapeDataString(ODataUriUtils.ConvertToUriLiteral("name"' ODataVersion.V3))'                  Uri.EscapeDataString(ODataUriUtils.ConvertToUriLiteral(2009' ODataVersion.V3)));
Magic Number,System.Web.Http.OData.Formatter,PeopleController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\PeopleController.cs,GetPeople,The following statement contains a magic number: return new FormatterPerson[]              {                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902d")' PerId = 0' Age = 10' Name = "Asha"' Order = new FormatterOrder() { OrderName = "FirstOrder"' OrderAmount = 235342 }}'                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902e")' PerId = 1' Age = 11' Name = "Bsha"' Order = new FormatterOrder() { OrderName = "SecondOrder"' OrderAmount = 123 }}'                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902f")' PerId = 2' Age = 12' Name = "Csha"' Order = new FormatterOrder() { OrderName = "ThirdOrder"' OrderAmount = 456 }}              };
Magic Number,System.Web.Http.OData.Formatter,PeopleController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\PeopleController.cs,GetPeople,The following statement contains a magic number: return new FormatterPerson[]              {                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902d")' PerId = 0' Age = 10' Name = "Asha"' Order = new FormatterOrder() { OrderName = "FirstOrder"' OrderAmount = 235342 }}'                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902e")' PerId = 1' Age = 11' Name = "Bsha"' Order = new FormatterOrder() { OrderName = "SecondOrder"' OrderAmount = 123 }}'                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902f")' PerId = 2' Age = 12' Name = "Csha"' Order = new FormatterOrder() { OrderName = "ThirdOrder"' OrderAmount = 456 }}              };
Magic Number,System.Web.Http.OData.Formatter,PeopleController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\PeopleController.cs,GetPeople,The following statement contains a magic number: return new FormatterPerson[]              {                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902d")' PerId = 0' Age = 10' Name = "Asha"' Order = new FormatterOrder() { OrderName = "FirstOrder"' OrderAmount = 235342 }}'                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902e")' PerId = 1' Age = 11' Name = "Bsha"' Order = new FormatterOrder() { OrderName = "SecondOrder"' OrderAmount = 123 }}'                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902f")' PerId = 2' Age = 12' Name = "Csha"' Order = new FormatterOrder() { OrderName = "ThirdOrder"' OrderAmount = 456 }}              };
Magic Number,System.Web.Http.OData.Formatter,PeopleController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\PeopleController.cs,GetPeople,The following statement contains a magic number: return new FormatterPerson[]              {                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902d")' PerId = 0' Age = 10' Name = "Asha"' Order = new FormatterOrder() { OrderName = "FirstOrder"' OrderAmount = 235342 }}'                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902e")' PerId = 1' Age = 11' Name = "Bsha"' Order = new FormatterOrder() { OrderName = "SecondOrder"' OrderAmount = 123 }}'                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902f")' PerId = 2' Age = 12' Name = "Csha"' Order = new FormatterOrder() { OrderName = "ThirdOrder"' OrderAmount = 456 }}              };
Magic Number,System.Web.Http.OData.Formatter,PeopleController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\PeopleController.cs,GetPeople,The following statement contains a magic number: return new FormatterPerson[]              {                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902d")' PerId = 0' Age = 10' Name = "Asha"' Order = new FormatterOrder() { OrderName = "FirstOrder"' OrderAmount = 235342 }}'                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902e")' PerId = 1' Age = 11' Name = "Bsha"' Order = new FormatterOrder() { OrderName = "SecondOrder"' OrderAmount = 123 }}'                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902f")' PerId = 2' Age = 12' Name = "Csha"' Order = new FormatterOrder() { OrderName = "ThirdOrder"' OrderAmount = 456 }}              };
Magic Number,System.Web.Http.OData.Formatter,PeopleController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\PeopleController.cs,GetPeople,The following statement contains a magic number: return new FormatterPerson[]              {                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902d")' PerId = 0' Age = 10' Name = "Asha"' Order = new FormatterOrder() { OrderName = "FirstOrder"' OrderAmount = 235342 }}'                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902e")' PerId = 1' Age = 11' Name = "Bsha"' Order = new FormatterOrder() { OrderName = "SecondOrder"' OrderAmount = 123 }}'                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902f")' PerId = 2' Age = 12' Name = "Csha"' Order = new FormatterOrder() { OrderName = "ThirdOrder"' OrderAmount = 456 }}              };
Magic Number,System.Web.Http.OData.Formatter,PeopleController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\PeopleController.cs,GetPeople,The following statement contains a magic number: return new FormatterPerson[]              {                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902d")' PerId = 0' Age = 10' Name = "Asha"' Order = new FormatterOrder() { OrderName = "FirstOrder"' OrderAmount = 235342 }}'                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902e")' PerId = 1' Age = 11' Name = "Bsha"' Order = new FormatterOrder() { OrderName = "SecondOrder"' OrderAmount = 123 }}'                  new FormatterPerson { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902f")' PerId = 2' Age = 12' Name = "Csha"' Order = new FormatterOrder() { OrderName = "ThirdOrder"' OrderAmount = 456 }}              };
Magic Number,System.Web.Http.OData.Formatter,PeopleController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\PeopleController.cs,GetPerson,The following statement contains a magic number: FormatterPerson obj = new FormatterPerson() { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902d")' PerId = id' Age = 10' Name = "Asha"' Order = new FormatterOrder() { OrderName = "FirstOrder"' OrderAmount = 235342 } };
Magic Number,System.Web.Http.OData.Formatter,PeopleController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\PeopleController.cs,GetPerson,The following statement contains a magic number: FormatterPerson obj = new FormatterPerson() { MyGuid = new Guid("f99080c0-2f9e-472e-8c72-1a8ecd9f902d")' PerId = id' Age = 10' Name = "Asha"' Order = new FormatterOrder() { OrderName = "FirstOrder"' OrderAmount = 235342 } };
Magic Number,System.Web.Http.OData.Formatter,ODataFormatterTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\ODataFormatterTests.cs,GetFeedInODataAtomFormat_LimitsResults,The following statement contains a magic number: Assert.Equal(2' entries.Length);
Magic Number,System.Web.Http.OData.Formatter.Serialization,ODataCollectionSerializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ODataCollectionSerializerTests.cs,ODataCollectionSerializerTests,The following statement contains a magic number: _customer = new Customer()              {                  FirstName = "Foo"'                  LastName = "Bar"'                  ID = 10'              };
Magic Number,System.Web.Http.OData.Formatter.Serialization,ODataCollectionSerializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ODataCollectionSerializerTests.cs,CreateProperty_Serializes_AllElementsInTheCollection,The following statement contains a magic number: var property = _serializer.CreateProperty(new int[] { 1' 2' 3 }' "TestCollection"' new ODataSerializerContext());
Magic Number,System.Web.Http.OData.Formatter.Serialization,ODataCollectionSerializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ODataCollectionSerializerTests.cs,CreateProperty_Serializes_AllElementsInTheCollection,The following statement contains a magic number: var property = _serializer.CreateProperty(new int[] { 1' 2' 3 }' "TestCollection"' new ODataSerializerContext());
Magic Number,System.Web.Http.OData.Formatter.Serialization,ODataCollectionSerializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ODataCollectionSerializerTests.cs,CreateProperty_Serializes_AllElementsInTheCollection,The following statement contains a magic number: Assert.Equal(elements' new int[] { 1' 2' 3 });
Magic Number,System.Web.Http.OData.Formatter.Serialization,ODataCollectionSerializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ODataCollectionSerializerTests.cs,CreateProperty_Serializes_AllElementsInTheCollection,The following statement contains a magic number: Assert.Equal(elements' new int[] { 1' 2' 3 });
Magic Number,System.Web.Http.OData.Formatter.Serialization,ODataEntityTypeSerializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ODataEntityTypeSerializerTests.cs,ODataEntityTypeSerializerTests,The following statement contains a magic number: _customer = new Customer()              {                  FirstName = "Foo"'                  LastName = "Bar"'                  ID = 10'              };
Magic Number,System.Web.Http.OData.Formatter.Serialization,ODataFeedSerializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ODataFeedSerializerTests.cs,ODataFeedSerializerTests,The following statement contains a magic number: _customers = new[] {                  new Customer()                  {                      FirstName = "Foo"'                      LastName = "Bar"'                      ID = 10'                  }'                  new Customer()                  {                      FirstName = "Foo"'                      LastName = "Bar"'                      ID = 42'                  }              };
Magic Number,System.Web.Http.OData.Formatter.Serialization,ODataFeedSerializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ODataFeedSerializerTests.cs,ODataFeedSerializerTests,The following statement contains a magic number: _customers = new[] {                  new Customer()                  {                      FirstName = "Foo"'                      LastName = "Bar"'                      ID = 10'                  }'                  new Customer()                  {                      FirstName = "Foo"'                      LastName = "Bar"'                      ID = 42'                  }              };
Magic Number,System.Web.Http.OData.Formatter.Serialization,ODataFeedSerializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ODataFeedSerializerTests.cs,WriteObjectInline_Writes_InlineCountAndNextLink,The following statement contains a magic number: long expectedInlineCount = 1000;
Magic Number,System.Web.Http.OData.Formatter.Serialization,ODataPrimitiveSerializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ODataPrimitiveSerializerTests.cs,CreateProperty,The following statement contains a magic number: var odataProperty = serializer.CreateProperty(20' "elementName"' writeContext: null);
Magic Number,System.Web.Http.OData.Formatter.Serialization,ODataPrimitiveSerializerTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ODataPrimitiveSerializerTests.cs,CreateProperty,The following statement contains a magic number: Assert.Equal(odataProperty.Value' 20);
Magic Number,System.Web.Http.OData.Formatter.Serialization,CollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\CollectionTest.cs,ArrayOfIntsSerializesAsOData,The following statement contains a magic number: ObjectContent<int[]> content = new ObjectContent<int[]>(new int[] { 10' 20' 30' 40' 50 }' _formatter);
Magic Number,System.Web.Http.OData.Formatter.Serialization,CollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\CollectionTest.cs,ArrayOfIntsSerializesAsOData,The following statement contains a magic number: ObjectContent<int[]> content = new ObjectContent<int[]>(new int[] { 10' 20' 30' 40' 50 }' _formatter);
Magic Number,System.Web.Http.OData.Formatter.Serialization,CollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\CollectionTest.cs,ArrayOfIntsSerializesAsOData,The following statement contains a magic number: ObjectContent<int[]> content = new ObjectContent<int[]>(new int[] { 10' 20' 30' 40' 50 }' _formatter);
Magic Number,System.Web.Http.OData.Formatter.Serialization,CollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\CollectionTest.cs,ArrayOfIntsSerializesAsOData,The following statement contains a magic number: ObjectContent<int[]> content = new ObjectContent<int[]>(new int[] { 10' 20' 30' 40' 50 }' _formatter);
Magic Number,System.Web.Http.OData.Formatter.Serialization,CollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\CollectionTest.cs,ArrayOfIntsSerializesAsOData,The following statement contains a magic number: ObjectContent<int[]> content = new ObjectContent<int[]>(new int[] { 10' 20' 30' 40' 50 }' _formatter);
Magic Number,System.Web.Http.OData.Formatter.Serialization,CollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\CollectionTest.cs,CollectionOfComplexTypeSerializesAsOData,The following statement contains a magic number: IEnumerable<Person> collectionOfPerson = new Collection<Person>()               {                  (Person)TypeInitializer.GetInstance(SupportedTypes.Person' 0)'                  (Person)TypeInitializer.GetInstance(SupportedTypes.Person' 1)'                  (Person)TypeInitializer.GetInstance(SupportedTypes.Person' 2)              };
Magic Number,System.Web.Http.OData.Formatter.Serialization,CollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\CollectionTest.cs,ContentHeadersAreAddedForXmlMediaType,The following statement contains a magic number: ObjectContent<IEnumerable<Person>> content = new ObjectContent<IEnumerable<Person>>(new Person[] { new Person(0' new ReferenceDepthContext(7)) }' _formatter);
Magic Number,System.Web.Http.OData.Formatter.Serialization,CollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\CollectionTest.cs,ContentHeadersAreAddedForJsonMediaType,The following statement contains a magic number: HttpContent content = new ObjectContent<Person[]>(new Person[] { new Person(0' new ReferenceDepthContext(7)) }' _formatter' "application/json");
Magic Number,System.Web.Http.OData.Formatter.Serialization,ComplexTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ComplexTypeTest.cs,ComplexTypeSerializesAsOData,The following statement contains a magic number: ObjectContent<Person> content = new ObjectContent<Person>(new Person(0' new ReferenceDepthContext(7))' _formatter);
Magic Number,System.Web.Http.OData.Formatter.Serialization,ComplexTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ComplexTypeTest.cs,ContentHeadersAreAddedForXmlMediaType,The following statement contains a magic number: ObjectContent<Person> content = new ObjectContent<Person>(new Person(0' new ReferenceDepthContext(7))' _formatter);
Magic Number,System.Web.Http.OData.Formatter.Serialization,ComplexTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\ComplexTypeTest.cs,ContentHeadersAreAddedForJsonMediaType,The following statement contains a magic number: HttpContent content = new ObjectContent<Person>(new Person(0' new ReferenceDepthContext(7))' _formatter' "application/json");
Magic Number,System.Web.Http.OData.Formatter.Serialization,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\EntityTypeTest.cs,ContentHeadersAreAddedForXmlMediaType,The following statement contains a magic number: ObjectContent<Employee> content = new ObjectContent<Employee>(new Employee(0' new ReferenceDepthContext(7))' formatter);
Magic Number,System.Web.Http.OData.Formatter.Serialization,EntityTypeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\EntityTypeTest.cs,ContentHeadersAreAddedForJsonMediaType,The following statement contains a magic number: HttpContent content = new ObjectContent<Employee>(new Employee(0' new ReferenceDepthContext(7))' formatter' "application/json");
Magic Number,System.Web.Http.OData.Formatter.Serialization,FeedTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\FeedTest.cs,ContentHeadersAreAddedForXmlMediaType,The following statement contains a magic number: ObjectContent<IEnumerable<Employee>> content = new ObjectContent<IEnumerable<Employee>>(new Employee[] { new Employee(0' new ReferenceDepthContext(7)) }' formatter);
Magic Number,System.Web.Http.OData.Formatter.Serialization,FeedTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Formatter\Serialization\FeedTest.cs,ContentHeadersAreAddedForJsonMediaType,The following statement contains a magic number: HttpContent content = new ObjectContent<IEnumerable<Employee>>(new Employee[] { new Employee(0' new ReferenceDepthContext(7)) }' formatter' "application/json");
Magic Number,System.Web.Http.OData.Query.Controllers,PrimitiveController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Controllers\PrimitiveController.cs,GetIEnumerableOfInt,The following statement contains a magic number: return new List<int>() { 1' 2' 3' 4' 5 };
Magic Number,System.Web.Http.OData.Query.Controllers,PrimitiveController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Controllers\PrimitiveController.cs,GetIEnumerableOfInt,The following statement contains a magic number: return new List<int>() { 1' 2' 3' 4' 5 };
Magic Number,System.Web.Http.OData.Query.Controllers,PrimitiveController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Controllers\PrimitiveController.cs,GetIEnumerableOfInt,The following statement contains a magic number: return new List<int>() { 1' 2' 3' 4' 5 };
Magic Number,System.Web.Http.OData.Query.Controllers,PrimitiveController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Controllers\PrimitiveController.cs,GetIEnumerableOfInt,The following statement contains a magic number: return new List<int>() { 1' 2' 3' 4' 5 };
Magic Number,System.Web.Http.OData.Query,ODataQuerySettingsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQuerySettingsTest.cs,LambdaNestingLimit_Property_RoundTrips,The following statement contains a magic number: Assert.Reflection.IntegerProperty<ODataQuerySettings' int>(                  new ODataQuerySettings()'                  o => o.LambdaNestingLimit'                  expectedDefaultValue: 1'                  minLegalValue: 1'                  maxLegalValue: int.MaxValue'                  illegalLowerValue: 0'                  illegalUpperValue: null'                  roundTripTestValue: 2);
Magic Number,System.Web.Http.OData.Query,ODataQuerySettingsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQuerySettingsTest.cs,ResultLimit_Property_RoundTrips,The following statement contains a magic number: Assert.Reflection.NullableIntegerProperty<ODataQuerySettings' int>(                  new ODataQuerySettings()'                  o => o.ResultLimit'                  expectedDefaultValue: null'                  minLegalValue: 1'                  maxLegalValue: int.MaxValue'                  illegalLowerValue: 0'                  illegalUpperValue: null'                  roundTripTestValue: 2);
Magic Number,System.Web.Http.OData.Query,OrderByPropertyNodeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByPropertyNodeTest.cs,CreateCollection_From_OrderByQueryNode_Succeeds,The following statement contains a magic number: Assert.Equal(2' nodes.Count);
Magic Number,System.Web.Http.OData.Query,ODataQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionTest.cs,ApplyTo_Adds_Missing_Keys_To_OrderBy,The following statement contains a magic number: queryExpression = queryExpression.Substring(queryExpression.IndexOf("]") + 2);
Magic Number,System.Web.Http.OData.Query,ODataQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionTest.cs,ApplyTo_Adds_Missing_NonKey_Properties_To_OrderBy,The following statement contains a magic number: queryExpression = queryExpression.Substring(queryExpression.IndexOf("]") + 2);
Magic Number,System.Web.Http.OData.Query,ODataQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionTest.cs,ApplyTo_Builds_Default_OrderBy_With_Keys,The following statement contains a magic number: queryExpression = queryExpression.Substring(queryExpression.IndexOf("]") + 2);
Magic Number,System.Web.Http.OData.Query,ODataQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionTest.cs,ApplyTo_Builds_Default_OrderBy_No_Keys,The following statement contains a magic number: queryExpression = queryExpression.Substring(queryExpression.IndexOf("]") + 2);
Magic Number,System.Web.Http.OData.Query,ODataQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionTest.cs,LimitResults_LimitsResults,The following statement contains a magic number: IQueryable<Customer> queryable = new List<Customer>() {                  new Customer() { CustomerId = 0 }'                   new Customer() { CustomerId = 1 }'                  new Customer() { CustomerId = 2 }'                  new Customer() { CustomerId = 3 }              }.AsQueryable();
Magic Number,System.Web.Http.OData.Query,ODataQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionTest.cs,LimitResults_LimitsResults,The following statement contains a magic number: IQueryable<Customer> queryable = new List<Customer>() {                  new Customer() { CustomerId = 0 }'                   new Customer() { CustomerId = 1 }'                  new Customer() { CustomerId = 2 }'                  new Customer() { CustomerId = 3 }              }.AsQueryable();
Magic Number,System.Web.Http.OData.Query,ODataQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\ODataQueryOptionTest.cs,LimitResults_LimitsResults,The following statement contains a magic number: Assert.Equal(Math.Min(limit' 4)' result.Count());
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,PropertyNodes_Getter_Parses_Query,The following statement contains a magic number: Assert.Equal(2' nodes.Count);
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderBy,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "Andy" }'                  new Customer { CustomerId = 2' Name = "Aaron" }'                  new Customer { CustomerId = 3' Name = "Alex" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderBy,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "Andy" }'                  new Customer { CustomerId = 2' Name = "Aaron" }'                  new Customer { CustomerId = 3' Name = "Alex" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderBy,The following statement contains a magic number: Assert.Equal(2' results[0].CustomerId);
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderBy,The following statement contains a magic number: Assert.Equal(3' results[1].CustomerId);
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderBy,The following statement contains a magic number: Assert.Equal(1' results[2].CustomerId);
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByAsc,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "Andy" }'                  new Customer { CustomerId = 2' Name = "Aaron" }'                  new Customer { CustomerId = 3' Name = "Alex" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByAsc,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "Andy" }'                  new Customer { CustomerId = 2' Name = "Aaron" }'                  new Customer { CustomerId = 3' Name = "Alex" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByAsc,The following statement contains a magic number: Assert.Equal(2' results[0].CustomerId);
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByAsc,The following statement contains a magic number: Assert.Equal(3' results[1].CustomerId);
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByAsc,The following statement contains a magic number: Assert.Equal(1' results[2].CustomerId);
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByDescending,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "Andy" }'                  new Customer { CustomerId = 2' Name = "Aaron" }'                  new Customer { CustomerId = 3' Name = "Alex" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByDescending,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "Andy" }'                  new Customer { CustomerId = 2' Name = "Aaron" }'                  new Customer { CustomerId = 3' Name = "Alex" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByDescending,The following statement contains a magic number: Assert.Equal(3' results[1].CustomerId);
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByDescending,The following statement contains a magic number: Assert.Equal(2' results[2].CustomerId);
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByDescending,The following statement contains a magic number: Assert.Equal(2' results[2].CustomerId);
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByThenBy,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "ACME"' Website = "http://www.acme.net" }'                  new Customer { CustomerId = 2' Name = "AAAA"' Website = "http://www.aaaa.com" }'                  new Customer { CustomerId = 3' Name = "ACME"' Website = "http://www.acme.com" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByThenBy,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "ACME"' Website = "http://www.acme.net" }'                  new Customer { CustomerId = 2' Name = "AAAA"' Website = "http://www.aaaa.com" }'                  new Customer { CustomerId = 3' Name = "ACME"' Website = "http://www.acme.com" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByThenBy,The following statement contains a magic number: Assert.Equal(2' results[0].CustomerId);
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByThenBy,The following statement contains a magic number: Assert.Equal(3' results[1].CustomerId);
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByThenBy,The following statement contains a magic number: Assert.Equal(1' results[2].CustomerId);
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByDescThenBy,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "ACME"' Website = "http://www.acme.net" }'                  new Customer { CustomerId = 2' Name = "AAAA"' Website = "http://www.aaaa.com" }'                  new Customer { CustomerId = 3' Name = "ACME"' Website = "http://www.acme.com" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByDescThenBy,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "ACME"' Website = "http://www.acme.net" }'                  new Customer { CustomerId = 2' Name = "AAAA"' Website = "http://www.aaaa.com" }'                  new Customer { CustomerId = 3' Name = "ACME"' Website = "http://www.acme.com" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByDescThenBy,The following statement contains a magic number: Assert.Equal(3' results[0].CustomerId);
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByDescThenBy,The following statement contains a magic number: Assert.Equal(2' results[2].CustomerId);
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByDescThenBy,The following statement contains a magic number: Assert.Equal(2' results[2].CustomerId);
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByDescThenByDesc,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "ACME"' Website = "http://www.acme.net" }'                  new Customer { CustomerId = 2' Name = "AAAA"' Website = "http://www.aaaa.com" }'                  new Customer { CustomerId = 3' Name = "ACME"' Website = "http://www.acme.com" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByDescThenByDesc,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "ACME"' Website = "http://www.acme.net" }'                  new Customer { CustomerId = 2' Name = "AAAA"' Website = "http://www.aaaa.com" }'                  new Customer { CustomerId = 3' Name = "ACME"' Website = "http://www.acme.com" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByDescThenByDesc,The following statement contains a magic number: Assert.Equal(3' results[1].CustomerId);
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByDescThenByDesc,The following statement contains a magic number: Assert.Equal(2' results[2].CustomerId);
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,CanApplyOrderByDescThenByDesc,The following statement contains a magic number: Assert.Equal(2' results[2].CustomerId);
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,ApplyToEnums_ReturnsCorrectQueryable,The following statement contains a magic number: Assert.Equal(                  new int[] { 2' 1' 3 }'                  actualCustomers.Select(enumModel => enumModel.Id));
Magic Number,System.Web.Http.OData.Query,OrderByQueryOptionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\OrderByQueryOptionTest.cs,ApplyToEnums_ReturnsCorrectQueryable,The following statement contains a magic number: Assert.Equal(                  new int[] { 2' 1' 3 }'                  actualCustomers.Select(enumModel => enumModel.Id));
Magic Number,System.Web.Http.OData.Query,QueryCompositionAnonymousTypesController,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionControllers.cs,Get,The following statement contains a magic number: return                  Enumerable                  .Range(1' 10)                  .Select(i => new { Id = i })                  .AsQueryable();
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionOrderByIdReturnedOrderedList,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                  {                         new QueryCompositionCustomer { Id = 3' Name = "NewLow" }'                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                       new QueryCompositionCustomer { Id = 33' Name = "Highest" }'                  }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionOrderByIdReturnedOrderedList,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                  {                         new QueryCompositionCustomer { Id = 3' Name = "NewLow" }'                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                       new QueryCompositionCustomer { Id = 33' Name = "Highest" }'                  }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionOrderByIdReturnedOrderedList,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                  {                         new QueryCompositionCustomer { Id = 3' Name = "NewLow" }'                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                       new QueryCompositionCustomer { Id = 33' Name = "Highest" }'                  }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionOrderByIdReturnedOrderedList,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                  {                         new QueryCompositionCustomer { Id = 3' Name = "NewLow" }'                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                       new QueryCompositionCustomer { Id = 33' Name = "Highest" }'                  }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionOrderByIdTopSkipReturnsCorrectList,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                  {                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                   }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionOrderByIdTopSkipReturnsCorrectList,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                  {                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                   }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionTopSkipChoosesDefaultOrderReturnsCorrectList,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                  {                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                   }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionTopSkipChoosesDefaultOrderReturnsCorrectList,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                  {                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                   }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionTopSkipFallsBackToBackendOrderIf_EnsureStableOrdering_IsFalse,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                  {                      new QueryCompositionCustomer { Id = 33' Name = "Highest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                   }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionTopSkipFallsBackToBackendOrderIf_EnsureStableOrdering_IsFalse,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                  {                      new QueryCompositionCustomer { Id = 33' Name = "Highest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                   }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionOrderByNameReturnsCorrectList,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                    {                         new QueryCompositionCustomer { Id = 33' Name = "Highest" }'                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                       new QueryCompositionCustomer { Id = 3' Name = "NewLow" }'                  }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionOrderByNameReturnsCorrectList,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                    {                         new QueryCompositionCustomer { Id = 33' Name = "Highest" }'                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                       new QueryCompositionCustomer { Id = 3' Name = "NewLow" }'                  }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionOrderByNameReturnsCorrectList,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                    {                         new QueryCompositionCustomer { Id = 33' Name = "Highest" }'                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                       new QueryCompositionCustomer { Id = 3' Name = "NewLow" }'                  }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionOrderByNameReturnsCorrectList,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                    {                         new QueryCompositionCustomer { Id = 33' Name = "Highest" }'                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                       new QueryCompositionCustomer { Id = 3' Name = "NewLow" }'                  }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionUnknownOperatorIsAllowed,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                    {                         new QueryCompositionCustomer { Id = 33' Name = "Highest" }'                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                       new QueryCompositionCustomer { Id = 3' Name = "NewLow" }'                  }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionUnknownOperatorIsAllowed,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                    {                         new QueryCompositionCustomer { Id = 33' Name = "Highest" }'                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                       new QueryCompositionCustomer { Id = 3' Name = "NewLow" }'                  }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionUnknownOperatorIsAllowed,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                    {                         new QueryCompositionCustomer { Id = 33' Name = "Highest" }'                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                       new QueryCompositionCustomer { Id = 3' Name = "NewLow" }'                  }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionUnknownOperatorIsAllowed,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                    {                         new QueryCompositionCustomer { Id = 33' Name = "Highest" }'                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                       new QueryCompositionCustomer { Id = 3' Name = "NewLow" }'                  }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionUnknownOperatorStartingDollarSignIsAllowedForLowLevelApi,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                    {                         new QueryCompositionCustomer { Id = 33' Name = "Highest" }'                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                       new QueryCompositionCustomer { Id = 3' Name = "NewLow" }'                  }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionUnknownOperatorStartingDollarSignIsAllowedForLowLevelApi,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                    {                         new QueryCompositionCustomer { Id = 33' Name = "Highest" }'                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                       new QueryCompositionCustomer { Id = 3' Name = "NewLow" }'                  }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionUnknownOperatorStartingDollarSignIsAllowedForLowLevelApi,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                    {                         new QueryCompositionCustomer { Id = 33' Name = "Highest" }'                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                       new QueryCompositionCustomer { Id = 3' Name = "NewLow" }'                  }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableOnActionUnknownOperatorStartingDollarSignIsAllowedForLowLevelApi,The following statement contains a magic number: AreEqual(                  new List<QueryCompositionCustomer>                    {                         new QueryCompositionCustomer { Id = 33' Name = "Highest" }'                      new QueryCompositionCustomer { Id = 11' Name = "Lowest" }'                       new QueryCompositionCustomer { Id = 22' Name = "Middle" }'                       new QueryCompositionCustomer { Id = 3' Name = "NewLow" }'                  }'                  customers);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,ODataQueryOptionsOfT_Works,The following statement contains a magic number: Assert.Equal(2' count);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,AnonymousTypes_Work_With_QueryableAttribute,The following statement contains a magic number: Assert.Equal(5' result[0].Id);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,AnonymousTypes_Work_With_QueryableAttribute,The following statement contains a magic number: Assert.Equal(6' result.Length);
Magic Number,System.Web.Http.OData.Query,QueryCompositionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\QueryCompositionTests.cs,QueryableWorksWith_ByteArrayComparison,The following statement contains a magic number: Assert.Equal(new[] { 11 }' customers.Select(customer => customer.Id));
Magic Number,System.Web.Http.OData.Query,SkipQueryOptionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\SkipQueryOptionTests.cs,CanApplySkip,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "Andy" }'                  new Customer { CustomerId = 2' Name = "Aaron" }'                  new Customer { CustomerId = 3' Name = "Alex" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,SkipQueryOptionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\SkipQueryOptionTests.cs,CanApplySkip,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "Andy" }'                  new Customer { CustomerId = 2' Name = "Aaron" }'                  new Customer { CustomerId = 3' Name = "Alex" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,SkipQueryOptionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\SkipQueryOptionTests.cs,CanApplySkip,The following statement contains a magic number: Assert.Equal(2' results.Length);
Magic Number,System.Web.Http.OData.Query,SkipQueryOptionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\SkipQueryOptionTests.cs,CanApplySkip,The following statement contains a magic number: Assert.Equal(2' results[0].CustomerId);
Magic Number,System.Web.Http.OData.Query,SkipQueryOptionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\SkipQueryOptionTests.cs,CanApplySkip,The following statement contains a magic number: Assert.Equal(3' results[1].CustomerId);
Magic Number,System.Web.Http.OData.Query,SkipQueryOptionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\SkipQueryOptionTests.cs,CanApplySkipOrderby,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "Andy" }'                  new Customer { CustomerId = 2' Name = "Aaron" }'                  new Customer { CustomerId = 3' Name = "Alex" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,SkipQueryOptionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\SkipQueryOptionTests.cs,CanApplySkipOrderby,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "Andy" }'                  new Customer { CustomerId = 2' Name = "Aaron" }'                  new Customer { CustomerId = 3' Name = "Alex" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,SkipQueryOptionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\SkipQueryOptionTests.cs,CanApplySkipOrderby,The following statement contains a magic number: Assert.Equal(2' results.Length);
Magic Number,System.Web.Http.OData.Query,SkipQueryOptionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\SkipQueryOptionTests.cs,CanApplySkipOrderby,The following statement contains a magic number: Assert.Equal(3' results[0].CustomerId);
Magic Number,System.Web.Http.OData.Query,TopQueryOptionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\TopQueryOptionTests.cs,CanApplyTop,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "Andy" }'                  new Customer { CustomerId = 2' Name = "Aaron" }'                  new Customer { CustomerId = 3' Name = "Alex" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,TopQueryOptionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\TopQueryOptionTests.cs,CanApplyTop,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "Andy" }'                  new Customer { CustomerId = 2' Name = "Aaron" }'                  new Customer { CustomerId = 3' Name = "Alex" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,TopQueryOptionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\TopQueryOptionTests.cs,CanApplySkipTopOrderby,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "Andy" }'                  new Customer { CustomerId = 2' Name = "Aaron" }'                  new Customer { CustomerId = 3' Name = "Alex" }'                  new Customer { CustomerId = 4' Name = "Ace" }'                  new Customer { CustomerId = 5' Name = "Abner" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,TopQueryOptionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\TopQueryOptionTests.cs,CanApplySkipTopOrderby,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "Andy" }'                  new Customer { CustomerId = 2' Name = "Aaron" }'                  new Customer { CustomerId = 3' Name = "Alex" }'                  new Customer { CustomerId = 4' Name = "Ace" }'                  new Customer { CustomerId = 5' Name = "Abner" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,TopQueryOptionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\TopQueryOptionTests.cs,CanApplySkipTopOrderby,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "Andy" }'                  new Customer { CustomerId = 2' Name = "Aaron" }'                  new Customer { CustomerId = 3' Name = "Alex" }'                  new Customer { CustomerId = 4' Name = "Ace" }'                  new Customer { CustomerId = 5' Name = "Abner" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,TopQueryOptionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\TopQueryOptionTests.cs,CanApplySkipTopOrderby,The following statement contains a magic number: var customers = (new List<Customer>{                  new Customer { CustomerId = 1' Name = "Andy" }'                  new Customer { CustomerId = 2' Name = "Aaron" }'                  new Customer { CustomerId = 3' Name = "Alex" }'                  new Customer { CustomerId = 4' Name = "Ace" }'                  new Customer { CustomerId = 5' Name = "Abner" }              }).AsQueryable();
Magic Number,System.Web.Http.OData.Query,TopQueryOptionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\TopQueryOptionTests.cs,CanApplySkipTopOrderby,The following statement contains a magic number: Assert.Equal(2' results.Length);
Magic Number,System.Web.Http.OData.Query,TopQueryOptionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\TopQueryOptionTests.cs,CanApplySkipTopOrderby,The following statement contains a magic number: Assert.Equal(4' results[0].CustomerId);
Magic Number,System.Web.Http.OData.Query,TopQueryOptionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\TopQueryOptionTests.cs,CanApplySkipTopOrderby,The following statement contains a magic number: Assert.Equal(3' results[1].CustomerId);
Magic Number,System.Web.Http.OData.Query,HttpActionDescriptorExtensionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\HttpActionDescriptorExtensionTests.cs,GetEdmModelWorks,The following statement contains a magic number: Assert.Equal(8' model.SchemaElements.Count());
Magic Number,System.Web.Http.OData.Query,HttpActionDescriptorExtensionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\HttpActionDescriptorExtensionTests.cs,GetEdmModelForMultipleTypesWorks,The following statement contains a magic number: Assert.Equal(8' model1.SchemaElements.Count());
Magic Number,System.Web.Http.OData.Query,HttpActionDescriptorExtensionTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\HttpActionDescriptorExtensionTests.cs,GetEdmModelForMultipleTypesWorks,The following statement contains a magic number: Assert.Equal(2' model2.SchemaElements.Count());
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,GreaterThanOperator,The following statement contains a magic number: var filters = VerifyQueryDeserialization(                  "UnitPrice gt 5.00m"'                  Error.Format("$it => ($it.UnitPrice > Convert({0:0.00}))"' 5.0)'                  Error.Format("$it => (($it.UnitPrice > Convert({0:0.00})) == True)"' 5.0));
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,GreaterThanOperator,The following statement contains a magic number: var filters = VerifyQueryDeserialization(                  "UnitPrice gt 5.00m"'                  Error.Format("$it => ($it.UnitPrice > Convert({0:0.00}))"' 5.0)'                  Error.Format("$it => (($it.UnitPrice > Convert({0:0.00})) == True)"' 5.0));
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,GreaterThanEqualOperator,The following statement contains a magic number: var filters = VerifyQueryDeserialization(                  "UnitPrice ge 5.00m"'                  Error.Format("$it => ($it.UnitPrice >= Convert({0:0.00}))"' 5.0)'                  Error.Format("$it => (($it.UnitPrice >= Convert({0:0.00})) == True)"' 5.0));
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,GreaterThanEqualOperator,The following statement contains a magic number: var filters = VerifyQueryDeserialization(                  "UnitPrice ge 5.00m"'                  Error.Format("$it => ($it.UnitPrice >= Convert({0:0.00}))"' 5.0)'                  Error.Format("$it => (($it.UnitPrice >= Convert({0:0.00})) == True)"' 5.0));
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,LessThanOperator,The following statement contains a magic number: var filters = VerifyQueryDeserialization(                  "UnitPrice lt 5.00m"'                  Error.Format("$it => ($it.UnitPrice < Convert({0:0.00}))"' 5.0)'                  NotTesting);
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,LessThanOrEqualOperator,The following statement contains a magic number: var filters = VerifyQueryDeserialization(                  "UnitPrice le 5.00m"'                  Error.Format("$it => ($it.UnitPrice <= Convert({0:0.00}))"' 5.0)'                  NotTesting);
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,NegativeNumbers,The following statement contains a magic number: VerifyQueryDeserialization(                  "UnitPrice le -5.00m"'                  Error.Format("$it => ($it.UnitPrice <= Convert({0:0.00}))"' -5.0)'                  NotTesting);
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,BooleanOperatorNullableTypes,The following statement contains a magic number: VerifyQueryDeserialization(                  "UnitPrice eq 5.00m or CategoryID eq 0"'                  Error.Format("$it => (($it.UnitPrice == Convert(5.00)) OrElse ($it.CategoryID == 0))"' 5.0' 0)'                  NotTesting);
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,OrOperator,The following statement contains a magic number: var filters = VerifyQueryDeserialization(                  "UnitPrice eq 5.00m or UnitsInStock eq 0"'                  Error.Format("$it => (($it.UnitPrice == Convert({0:0.00})) OrElse (Convert($it.UnitsInStock) == Convert({1})))"' 5.0' 0)'                  NotTesting);
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,AndOperator,The following statement contains a magic number: var filters = VerifyQueryDeserialization(                  "UnitPrice eq 5.00m and UnitsInStock eq 10.00m"'                  Error.Format("$it => (($it.UnitPrice == Convert({0:0.00})) AndAlso (Convert($it.UnitsInStock) == Convert({1:0.00})))"' 5.0' 10.0)'                  NotTesting);
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,AndOperator,The following statement contains a magic number: var filters = VerifyQueryDeserialization(                  "UnitPrice eq 5.00m and UnitsInStock eq 10.00m"'                  Error.Format("$it => (($it.UnitPrice == Convert({0:0.00})) AndAlso (Convert($it.UnitsInStock) == Convert({1:0.00})))"' 5.0' 10.0)'                  NotTesting);
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,Negation,The following statement contains a magic number: var filters = VerifyQueryDeserialization(                  "not (UnitPrice eq 5.00m)"'                  Error.Format("$it => Not(($it.UnitPrice == Convert({0:0.00})))"' 5.0)'                  NotTesting);
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,Subtraction,The following statement contains a magic number: var filters = VerifyQueryDeserialization(                  "UnitPrice sub 1.00m lt 5.00m"'                  Error.Format("$it => (($it.UnitPrice - Convert({0:0.00})) < Convert({1:0.00}))"' 1.0' 5.0)'                  Error.Format("$it => ((($it.UnitPrice - Convert({0:0.00})) < Convert({1:0.00})) == True)"' 1.0' 5.0));
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,Subtraction,The following statement contains a magic number: var filters = VerifyQueryDeserialization(                  "UnitPrice sub 1.00m lt 5.00m"'                  Error.Format("$it => (($it.UnitPrice - Convert({0:0.00})) < Convert({1:0.00}))"' 1.0' 5.0)'                  Error.Format("$it => ((($it.UnitPrice - Convert({0:0.00})) < Convert({1:0.00})) == True)"' 1.0' 5.0));
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,Addition,The following statement contains a magic number: VerifyQueryDeserialization(                  "UnitPrice add 1.00m lt 5.00m"'                  Error.Format("$it => (($it.UnitPrice + Convert({0:0.00})) < Convert({1:0.00}))"' 1.0' 5.0)'                  NotTesting);
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,Multiplication,The following statement contains a magic number: VerifyQueryDeserialization(                  "UnitPrice mul 1.00m lt 5.00m"'                  Error.Format("$it => (($it.UnitPrice * Convert({0:0.00})) < Convert({1:0.00}))"' 1.0' 5.0)'                  NotTesting);
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,Division,The following statement contains a magic number: VerifyQueryDeserialization(                  "UnitPrice div 1.00m lt 5.00m"'                  Error.Format("$it => (($it.UnitPrice / Convert({0:0.00})) < Convert({1:0.00}))"' 1.0' 5.0)'                  NotTesting);
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,Modulo,The following statement contains a magic number: VerifyQueryDeserialization(                  "UnitPrice mod 1.00m lt 5.00m"'                  Error.Format("$it => (($it.UnitPrice % Convert({0:0.00})) < Convert({1:0.00}))"' 1.0' 5.0)'                  NotTesting);
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,Grouping,The following statement contains a magic number: var filters = VerifyQueryDeserialization(                  "((ProductName ne 'Doritos') or (UnitPrice lt 5.00m))"'                  Error.Format("$it => (($it.ProductName != \"Doritos\") OrElse ($it.UnitPrice < Convert({0:0.00})))"' 5.0)'                  NotTesting);
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,RecursiveAllAny,The following statement contains a magic number: Action<ODataQuerySettings> customizeSettings = (settings) => settings.LambdaNestingLimit = 2;
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,DateDay,The following statement contains a magic number: RunFilters(filters'                 new Product { DiscontinuedDate = new DateTime(2000' 10' 8) }'                 new { WithNullPropagation = true' WithoutNullPropagation = true });
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,DateDay,The following statement contains a magic number: RunFilters(filters'                 new Product { DiscontinuedDate = new DateTime(2000' 10' 8) }'                 new { WithNullPropagation = true' WithoutNullPropagation = true });
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,DateDay,The following statement contains a magic number: RunFilters(filters'                 new Product { DiscontinuedDate = new DateTime(2000' 10' 8) }'                 new { WithNullPropagation = true' WithoutNullPropagation = true });
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,MathRound,The following statement contains a magic number: var filters = VerifyQueryDeserialization(                  "round(UnitPrice) gt 5.00m"'                  Error.Format("$it => (Round($it.UnitPrice.Value) > {0:0.00})"' 5.0)'                  NotTesting);
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,DateTimeExpression,The following statement contains a magic number: var dateTime = new DateTime(2000' 12' 12' 12' 0' 0);
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,DateTimeExpression,The following statement contains a magic number: var dateTime = new DateTime(2000' 12' 12' 12' 0' 0);
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,DateTimeExpression,The following statement contains a magic number: var dateTime = new DateTime(2000' 12' 12' 12' 0' 0);
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,DateTimeExpression,The following statement contains a magic number: var dateTime = new DateTime(2000' 12' 12' 12' 0' 0);
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,DateTimeOffsetExpression,The following statement contains a magic number: var dateTimeOffset = new DateTimeOffset(2002' 10' 10' 17' 0' 0' TimeSpan.FromHours(offsetHours));
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,DateTimeOffsetExpression,The following statement contains a magic number: var dateTimeOffset = new DateTimeOffset(2002' 10' 10' 17' 0' 0' TimeSpan.FromHours(offsetHours));
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,DateTimeOffsetExpression,The following statement contains a magic number: var dateTimeOffset = new DateTimeOffset(2002' 10' 10' 17' 0' 0' TimeSpan.FromHours(offsetHours));
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,DateTimeOffsetExpression,The following statement contains a magic number: var dateTimeOffset = new DateTimeOffset(2002' 10' 10' 17' 0' 0' TimeSpan.FromHours(offsetHours));
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,RealLiteralSuffixes,The following statement contains a magic number: VerifyQueryDeserialization<DataTypes>(                  "FloatProp lt 4321.56F and FloatProp gt 1234.56f"'                  Error.Format("$it => (($it.FloatProp < {0:0.00}) AndAlso ($it.FloatProp > {1:0.00}))"' 4321.56' 1234.56));
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,RealLiteralSuffixes,The following statement contains a magic number: VerifyQueryDeserialization<DataTypes>(                  "FloatProp lt 4321.56F and FloatProp gt 1234.56f"'                  Error.Format("$it => (($it.FloatProp < {0:0.00}) AndAlso ($it.FloatProp > {1:0.00}))"' 4321.56' 1234.56));
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,RealLiteralSuffixes,The following statement contains a magic number: VerifyQueryDeserialization<DataTypes>(                  "DecimalProp lt 4321.56M and DecimalProp gt 1234.56m"'                  Error.Format("$it => (($it.DecimalProp < {0:0.00}) AndAlso ($it.DecimalProp > {1:0.00}))"' 4321.56' 1234.56));
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,RealLiteralSuffixes,The following statement contains a magic number: VerifyQueryDeserialization<DataTypes>(                  "DecimalProp lt 4321.56M and DecimalProp gt 1234.56m"'                  Error.Format("$it => (($it.DecimalProp < {0:0.00}) AndAlso ($it.DecimalProp > {1:0.00}))"' 4321.56' 1234.56));
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,NonstandardEdmPrimtives,The following statement contains a magic number: RunFilters(filters'                  new DataTypes                  {                      UShortProp = 12'                      ULongProp = 12'                      UIntProp = 12'                      CharProp = 'a''                      CharArrayProp = new[] { 'a' }'                      BinaryProp = new Binary(new byte[] { 35' 171' 255 })'                      XElementProp = new XElement("name")                  }'                  new { WithNullPropagation = true' WithoutNullPropagation = true });
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,NonstandardEdmPrimtives,The following statement contains a magic number: RunFilters(filters'                  new DataTypes                  {                      UShortProp = 12'                      ULongProp = 12'                      UIntProp = 12'                      CharProp = 'a''                      CharArrayProp = new[] { 'a' }'                      BinaryProp = new Binary(new byte[] { 35' 171' 255 })'                      XElementProp = new XElement("name")                  }'                  new { WithNullPropagation = true' WithoutNullPropagation = true });
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,NonstandardEdmPrimtives,The following statement contains a magic number: RunFilters(filters'                  new DataTypes                  {                      UShortProp = 12'                      ULongProp = 12'                      UIntProp = 12'                      CharProp = 'a''                      CharArrayProp = new[] { 'a' }'                      BinaryProp = new Binary(new byte[] { 35' 171' 255 })'                      XElementProp = new XElement("name")                  }'                  new { WithNullPropagation = true' WithoutNullPropagation = true });
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,NonstandardEdmPrimtives,The following statement contains a magic number: RunFilters(filters'                  new DataTypes                  {                      UShortProp = 12'                      ULongProp = 12'                      UIntProp = 12'                      CharProp = 'a''                      CharArrayProp = new[] { 'a' }'                      BinaryProp = new Binary(new byte[] { 35' 171' 255 })'                      XElementProp = new XElement("name")                  }'                  new { WithNullPropagation = true' WithoutNullPropagation = true });
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,NonstandardEdmPrimtives,The following statement contains a magic number: RunFilters(filters'                  new DataTypes                  {                      UShortProp = 12'                      ULongProp = 12'                      UIntProp = 12'                      CharProp = 'a''                      CharArrayProp = new[] { 'a' }'                      BinaryProp = new Binary(new byte[] { 35' 171' 255 })'                      XElementProp = new XElement("name")                  }'                  new { WithNullPropagation = true' WithoutNullPropagation = true });
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,NonstandardEdmPrimtives,The following statement contains a magic number: RunFilters(filters'                  new DataTypes                  {                      UShortProp = 12'                      ULongProp = 12'                      UIntProp = 12'                      CharProp = 'a''                      CharArrayProp = new[] { 'a' }'                      BinaryProp = new Binary(new byte[] { 35' 171' 255 })'                      XElementProp = new XElement("name")                  }'                  new { WithNullPropagation = true' WithoutNullPropagation = true });
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,ByteArrayComparisons,The following statement contains a magic number: RunFilters(filters'                  new DataTypes                  {                      BinaryProp = new Binary(new byte[] { 35' 171' 255 })'                      ByteArrayProp = new byte[] { 35' 171' 255 }                  }'                  new { WithNullPropagation = withNullPropagation' WithoutNullPropagation = withoutNullPropagation });
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,ByteArrayComparisons,The following statement contains a magic number: RunFilters(filters'                  new DataTypes                  {                      BinaryProp = new Binary(new byte[] { 35' 171' 255 })'                      ByteArrayProp = new byte[] { 35' 171' 255 }                  }'                  new { WithNullPropagation = withNullPropagation' WithoutNullPropagation = withoutNullPropagation });
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,ByteArrayComparisons,The following statement contains a magic number: RunFilters(filters'                  new DataTypes                  {                      BinaryProp = new Binary(new byte[] { 35' 171' 255 })'                      ByteArrayProp = new byte[] { 35' 171' 255 }                  }'                  new { WithNullPropagation = withNullPropagation' WithoutNullPropagation = withoutNullPropagation });
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,ByteArrayComparisons,The following statement contains a magic number: RunFilters(filters'                  new DataTypes                  {                      BinaryProp = new Binary(new byte[] { 35' 171' 255 })'                      ByteArrayProp = new byte[] { 35' 171' 255 }                  }'                  new { WithNullPropagation = withNullPropagation' WithoutNullPropagation = withoutNullPropagation });
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,ByteArrayComparisons,The following statement contains a magic number: RunFilters(filters'                  new DataTypes                  {                      BinaryProp = new Binary(new byte[] { 35' 171' 255 })'                      ByteArrayProp = new byte[] { 35' 171' 255 }                  }'                  new { WithNullPropagation = withNullPropagation' WithoutNullPropagation = withoutNullPropagation });
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,ByteArrayComparisons,The following statement contains a magic number: RunFilters(filters'                  new DataTypes                  {                      BinaryProp = new Binary(new byte[] { 35' 171' 255 })'                      ByteArrayProp = new byte[] { 35' 171' 255 }                  }'                  new { WithNullPropagation = withNullPropagation' WithoutNullPropagation = withoutNullPropagation });
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,GetLongInputsTestData,The following statement contains a magic number: return new TheoryDataSet<string>                  {                      "" + String.Join(" and "' Enumerable.Range(1' (maxCount/5) + 1).Select(_ => "SupplierID eq 1"))'                      "" + String.Join(" "' Enumerable.Range(1' maxCount).Select(_ => "not")) + " Discontinued"'                      "" + String.Join(" add "' Enumerable.Range(1' maxCount/2)) + " eq 5050"'                      "" + String.Join("/"' Enumerable.Range(1' maxCount/2).Select(_ => "Category/Product")) + "/ProductID eq 1"'                      "" + String.Join("/"' Enumerable.Range(1' maxCount/2).Select(_ => "Category/Product")) + "/UnsignedReorderLevel eq 1"'                      "" + Enumerable.Range(1'maxCount).Aggregate("'abc'"' (prev'i) => String.Format("trim({0})"' prev)) + " eq '123'"'                      " Category/Products/any(" + Enumerable.Range(1'maxCount/4).Aggregate(""' (prev'i) => String.Format("p{1}: p{1}/Category/Products/any({0})"' prev' i)) +")"                  };
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,GetLongInputsTestData,The following statement contains a magic number: return new TheoryDataSet<string>                  {                      "" + String.Join(" and "' Enumerable.Range(1' (maxCount/5) + 1).Select(_ => "SupplierID eq 1"))'                      "" + String.Join(" "' Enumerable.Range(1' maxCount).Select(_ => "not")) + " Discontinued"'                      "" + String.Join(" add "' Enumerable.Range(1' maxCount/2)) + " eq 5050"'                      "" + String.Join("/"' Enumerable.Range(1' maxCount/2).Select(_ => "Category/Product")) + "/ProductID eq 1"'                      "" + String.Join("/"' Enumerable.Range(1' maxCount/2).Select(_ => "Category/Product")) + "/UnsignedReorderLevel eq 1"'                      "" + Enumerable.Range(1'maxCount).Aggregate("'abc'"' (prev'i) => String.Format("trim({0})"' prev)) + " eq '123'"'                      " Category/Products/any(" + Enumerable.Range(1'maxCount/4).Aggregate(""' (prev'i) => String.Format("p{1}: p{1}/Category/Products/any({0})"' prev' i)) +")"                  };
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,GetLongInputsTestData,The following statement contains a magic number: return new TheoryDataSet<string>                  {                      "" + String.Join(" and "' Enumerable.Range(1' (maxCount/5) + 1).Select(_ => "SupplierID eq 1"))'                      "" + String.Join(" "' Enumerable.Range(1' maxCount).Select(_ => "not")) + " Discontinued"'                      "" + String.Join(" add "' Enumerable.Range(1' maxCount/2)) + " eq 5050"'                      "" + String.Join("/"' Enumerable.Range(1' maxCount/2).Select(_ => "Category/Product")) + "/ProductID eq 1"'                      "" + String.Join("/"' Enumerable.Range(1' maxCount/2).Select(_ => "Category/Product")) + "/UnsignedReorderLevel eq 1"'                      "" + Enumerable.Range(1'maxCount).Aggregate("'abc'"' (prev'i) => String.Format("trim({0})"' prev)) + " eq '123'"'                      " Category/Products/any(" + Enumerable.Range(1'maxCount/4).Aggregate(""' (prev'i) => String.Format("p{1}: p{1}/Category/Products/any({0})"' prev' i)) +")"                  };
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,GetLongInputsTestData,The following statement contains a magic number: return new TheoryDataSet<string>                  {                      "" + String.Join(" and "' Enumerable.Range(1' (maxCount/5) + 1).Select(_ => "SupplierID eq 1"))'                      "" + String.Join(" "' Enumerable.Range(1' maxCount).Select(_ => "not")) + " Discontinued"'                      "" + String.Join(" add "' Enumerable.Range(1' maxCount/2)) + " eq 5050"'                      "" + String.Join("/"' Enumerable.Range(1' maxCount/2).Select(_ => "Category/Product")) + "/ProductID eq 1"'                      "" + String.Join("/"' Enumerable.Range(1' maxCount/2).Select(_ => "Category/Product")) + "/UnsignedReorderLevel eq 1"'                      "" + Enumerable.Range(1'maxCount).Aggregate("'abc'"' (prev'i) => String.Format("trim({0})"' prev)) + " eq '123'"'                      " Category/Products/any(" + Enumerable.Range(1'maxCount/4).Aggregate(""' (prev'i) => String.Format("p{1}: p{1}/Category/Products/any({0})"' prev' i)) +")"                  };
Magic Number,System.Web.Http.OData.Query.Expressions,FilterBinderTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\OData\Query\Expressions\FilterBinderTests.cs,GetLongInputsTestData,The following statement contains a magic number: return new TheoryDataSet<string>                  {                      "" + String.Join(" and "' Enumerable.Range(1' (maxCount/5) + 1).Select(_ => "SupplierID eq 1"))'                      "" + String.Join(" "' Enumerable.Range(1' maxCount).Select(_ => "not")) + " Discontinued"'                      "" + String.Join(" add "' Enumerable.Range(1' maxCount/2)) + " eq 5050"'                      "" + String.Join("/"' Enumerable.Range(1' maxCount/2).Select(_ => "Category/Product")) + "/ProductID eq 1"'                      "" + String.Join("/"' Enumerable.Range(1' maxCount/2).Select(_ => "Category/Product")) + "/UnsignedReorderLevel eq 1"'                      "" + Enumerable.Range(1'maxCount).Aggregate("'abc'"' (prev'i) => String.Format("trim({0})"' prev)) + " eq '123'"'                      " Category/Products/any(" + Enumerable.Range(1'maxCount/4).Aggregate(""' (prev'i) => String.Format("p{1}: p{1}/Category/Products/any({0})"' prev' i)) +")"                  };
Magic Number,System.Web.Http.OData.TestCommon.Models,Person,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\TestCommon\Models\ComplexTypes\Attributed\Person.cs,Person,The following statement contains a magic number: this.Age = index + 20;
Magic Number,System.Web.Http.OData.TestCommon.Models,Employee,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\TestCommon\Models\EntityTypes\Attributed\Employee.cs,Employee,The following statement contains a magic number: this.WorkItem = new WorkItem() { EmployeeID = index' IsCompleted = false' NumberOfHours = ((index + 100) / 6)' WorkItemID = index + 25 };
Magic Number,System.Web.Http.OData.TestCommon.Models,Employee,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\TestCommon\Models\EntityTypes\Attributed\Employee.cs,Employee,The following statement contains a magic number: this.WorkItem = new WorkItem() { EmployeeID = index' IsCompleted = false' NumberOfHours = ((index + 100) / 6)' WorkItemID = index + 25 };
Magic Number,System.Web.Http.OData.TestCommon.Models,Employee,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\TestCommon\Models\EntityTypes\Attributed\Employee.cs,Employee,The following statement contains a magic number: this.WorkItem = new WorkItem() { EmployeeID = index' IsCompleted = false' NumberOfHours = ((index + 100) / 6)' WorkItemID = index + 25 };
Magic Number,System.Web.Http.OData.TestCommon.Models,Employee,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\System.Web.Http.OData.Test\TestCommon\Models\EntityTypes\Attributed\Employee.cs,Employee,The following statement contains a magic number: Employee directEmployee = (Employee)TypeInitializer.InternalGetInstance(SupportedTypes.Employee' (index + 2) % (DataSource.MaxIndex + 1)' context);
