Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ExtensibleModelBinderAdapterTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ExtensibleModelBinderAdapterTest.cs,BindModel_PropertyFilterIsSet_Throws,The length of the statement  "                @"The new model binding system cannot be used when a property whitelist or blacklist has been specified in [Bind] or via the call to UpdateModel() / TryUpdateModel(). Use the [BindRequired] and [BindNever] attributes on the model type or its properties instead."); " is 264.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ExtensibleModelBinderAdapterTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ExtensibleModelBinderAdapterTest.cs,BindModel_UnsuccessfulBind_BinderFails_ReturnsNull,The length of the statement  "            mockListBinder.Setup(o => o.BindModel(controllerContext' It.IsAny<ExtensibleModelBindingContext>())).Returns(false).Verifiable(); " is 129.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ExtensibleModelBinderAdapterTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ExtensibleModelBinderAdapterTest.cs,BindModel_UnsuccessfulBind_SimpleTypeNoFallback_ReturnsNull,The length of the statement  "            mockBinderProvider.Setup(o => o.GetBinder(controllerContext' It.IsAny<ExtensibleModelBindingContext>())).Returns((IExtensibleModelBinder)null).Verifiable(); " is 156.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ExtensibleModelBinderAdapterTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ExtensibleModelBinderAdapterTest.cs,BindModel_UnsuccessfulBind_SimpleTypeNoFallback_ReturnsNull,The length of the statement  "            mockBinderProvider.Verify(o => o.GetBinder(controllerContext' It.IsAny<ExtensibleModelBindingContext>())' Times.AtMostOnce()); " is 126.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ExtensibleModelBindingContextTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ExtensibleModelBindingContextTest.cs,ModelBinderProvidersProperty,The length of the statement  "            MemberHelper.TestPropertyWithDefaultInstance(bindingContext' "ModelBinderProviders"' new ModelBinderProviderCollection()' ModelBinderProviders.Providers); " is 154.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ExtensibleModelBindingContextTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ExtensibleModelBindingContextTest.cs,ValidationNodeProperty,The length of the statement  "            MemberHelper.TestPropertyWithDefaultInstance(bindingContext' "ValidationNode"' new ModelValidationNode(bindingContext.ModelMetadata' "someName")); " is 146.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,GenericModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\GenericModelBinderProviderTest.cs,Constructor_WithFactory_ThrowsIfModelBinderFactoryIsNull,The length of the statement  "                delegate { new GenericModelBinderProvider(typeof(List<>)' (Func<Type[]' IExtensibleModelBinder>)null); }' "modelBinderFactory"); " is 128.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,GenericModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\GenericModelBinderProviderTest.cs,Constructor_WithType_ThrowsIfModelBinderTypeIsNotModelBinder,The length of the statement  "                "The type 'System.String' does not implement the interface 'Microsoft.Web.Mvc.ModelBinding.IExtensibleModelBinder'." + Environment.NewLine " is 138.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,GenericModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\GenericModelBinderProviderTest.cs,Constructor_WithType_ThrowsIfModelBinderTypeTypeArgumentMismatch,The length of the statement  "                "The open model type 'System.Collections.Generic.List`1[T]' has 1 generic type argument(s)' but the open binder type 'Microsoft.Web.Mvc.ModelBinding.DictionaryModelBinder`2[TKey'TValue]' has 2 generic type argument(s). The binder type must not be an open generic type or must have the same number of generic arguments as the open model type." + Environment.NewLine " is 364.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,GenericModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\GenericModelBinderProviderTest.cs,GetBinder_TypeDoesNotMatch_ModelTypeIsInterface_ReturnsNull,The length of the statement  "            GenericModelBinderProvider provider = new GenericModelBinderProvider(typeof(IEnumerable<>)' typeof(CollectionModelBinder<>)) " is 124.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,GenericModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\GenericModelBinderProviderTest.cs,GetBinderThrowsIfBindingContextIsNull,The length of the statement  "            GenericModelBinderProvider provider = new GenericModelBinderProvider(typeof(IEnumerable<>)' typeof(CollectionModelBinder<>)); " is 125.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindComplexCollectionFromIndexes_FiniteIndexes,The length of the statement  "            bindingContext.ModelBinderProviders.RegisterBinderForType(typeof(int)' mockIntBinder.Object' false /* suppressPrefixCheck */); " is 126.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindComplexCollectionFromIndexes_FiniteIndexes,The length of the statement  "            List<int> boundCollection = CollectionModelBinder<int>.BindComplexCollectionFromIndexes(controllerContext' bindingContext' new[] { "foo"' "bar"' "baz" }); " is 154.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindComplexCollectionFromIndexes_FiniteIndexes,The length of the statement  "            Assert.Equal(new[] { "someName[foo]"' "someName[baz]" }' bindingContext.ValidationNode.ChildNodes.Select(o => o.ModelStateKey).ToArray()); " is 138.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindComplexCollectionFromIndexes_InfiniteIndexes,The length of the statement  "            bindingContext.ModelBinderProviders.RegisterBinderForType(typeof(int)' mockIntBinder.Object' false /* suppressPrefixCheck */); " is 126.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindComplexCollectionFromIndexes_InfiniteIndexes,The length of the statement  "            List<int> boundCollection = CollectionModelBinder<int>.BindComplexCollectionFromIndexes(controllerContext' bindingContext' null /* indexNames */); " is 146.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindComplexCollectionFromIndexes_InfiniteIndexes,The length of the statement  "            Assert.Equal(new[] { "someName[0]"' "someName[1]" }' bindingContext.ValidationNode.ChildNodes.Select(o => o.ModelStateKey).ToArray()); " is 134.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindModel_ComplexCollection,The length of the statement  "            bindingContext.ModelBinderProviders.RegisterBinderForType(typeof(int)' mockIntBinder.Object' true /* suppressPrefixCheck */); " is 125.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindModel_SimpleCollection,The length of the statement  "            bindingContext.ModelBinderProviders.RegisterBinderForType(typeof(int)' mockIntBinder.Object' true /* suppressPrefixCheck */); " is 125.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindSimpleCollection_SubBinderDoesNotExist,The length of the statement  "            List<int> boundCollection = CollectionModelBinder<int>.BindSimpleCollection(controllerContext' bindingContext' new int[1]' culture); " is 132.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindSimpleCollection_SubBindingSucceeds,The length of the statement  "            bindingContext.ModelBinderProviders.RegisterBinderForType(typeof(int)' mockIntBinder.Object' true /* suppressPrefixCheck */); " is 125.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindSimpleCollection_SubBindingSucceeds,The length of the statement  "            List<int> boundCollection = CollectionModelBinder<int>.BindSimpleCollection(controllerContext' bindingContext' new int[1]' culture); " is 132.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelImmutable_CreatesNewInstance,The length of the statement  "                ModelMetadata = new EmptyModelMetadataProvider().GetMetadataForType(() => new ReadOnlyCollection<int>(new int[0])' typeof(ICollection<int>)) " is 140.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceDictionary_OriginalModelImmutable_CreatesNewInstance,The length of the statement  "                ModelMetadata = new EmptyModelMetadataProvider().GetMetadataForType(() => originalModel' typeof(IDictionary<string' string>)) " is 125.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceDictionary_OriginalModelMutable_UpdatesOriginalInstance,The length of the statement  "                ModelMetadata = new EmptyModelMetadataProvider().GetMetadataForType(() => originalInstance' typeof(IDictionary<string' string>)) " is 128.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,GetTypeArgumentsForUpdatableGenericCollection_ModelTypeNotGeneric_Fail,The length of the statement  "            Type[] typeArguments = CollectionModelBinderUtil.GetTypeArgumentsForUpdatableGenericCollection(null' null' modelMetadata); " is 122.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,GetTypeArgumentsForUpdatableGenericCollection_ModelTypeOpenGeneric_Fail,The length of the statement  "            Type[] typeArguments = CollectionModelBinderUtil.GetTypeArgumentsForUpdatableGenericCollection(null' null' modelMetadata); " is 122.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,GetTypeArgumentsForUpdatableGenericCollection_ModelTypeWrongNumberOfGenericArguments_Fail,The length of the statement  "            ModelMetadata modelMetadata = new EmptyModelMetadataProvider().GetMetadataForType(null' typeof(KeyValuePair<int' string>)); " is 123.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,GetTypeArgumentsForUpdatableGenericCollection_ModelTypeWrongNumberOfGenericArguments_Fail,The length of the statement  "            Type[] typeArguments = CollectionModelBinderUtil.GetTypeArgumentsForUpdatableGenericCollection(typeof(ICollection<>)' null' modelMetadata); " is 139.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,GetTypeArgumentsForUpdatableGenericCollection_ReadOnlyReference_ModelInstanceImmutable_Valid,The length of the statement  "            ModelMetadata modelMetadata = new EmptyModelMetadataProvider().GetMetadataForType(() => new int[0]' typeof(IList<int>)); " is 120.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,GetTypeArgumentsForUpdatableGenericCollection_ReadOnlyReference_ModelInstanceImmutable_Valid,The length of the statement  "            Type[] typeArguments = CollectionModelBinderUtil.GetTypeArgumentsForUpdatableGenericCollection(typeof(IList<>)' typeof(List<>)' modelMetadata); " is 143.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,GetTypeArgumentsForUpdatableGenericCollection_ReadOnlyReference_ModelInstanceMutable_Valid,The length of the statement  "            ModelMetadata modelMetadata = new EmptyModelMetadataProvider().GetMetadataForType(() => new List<int>()' typeof(IList<int>)); " is 125.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,GetTypeArgumentsForUpdatableGenericCollection_ReadOnlyReference_ModelInstanceMutable_Valid,The length of the statement  "            Type[] typeArguments = CollectionModelBinderUtil.GetTypeArgumentsForUpdatableGenericCollection(typeof(IList<>)' typeof(List<>)' modelMetadata); " is 143.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,GetTypeArgumentsForUpdatableGenericCollection_ReadOnlyReference_ModelInstanceOfWrongType_Fail,The length of the statement  "            ModelMetadata modelMetadata = new EmptyModelMetadataProvider().GetMetadataForType(() => new HashSet<int>()' typeof(ICollection<int>)); " is 134.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,GetTypeArgumentsForUpdatableGenericCollection_ReadOnlyReference_ModelInstanceOfWrongType_Fail,The length of the statement  "            Type[] typeArguments = CollectionModelBinderUtil.GetTypeArgumentsForUpdatableGenericCollection(typeof(IList<>)' typeof(List<>)' modelMetadata); " is 143.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,GetTypeArgumentsForUpdatableGenericCollection_ReadOnlyReference_ModelIsNull_Fail,The length of the statement  "            Type[] typeArguments = CollectionModelBinderUtil.GetTypeArgumentsForUpdatableGenericCollection(typeof(ICollection<>)' typeof(List<>)' modelMetadata); " is 149.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,GetTypeArgumentsForUpdatableGenericCollection_ReadWriteReference_NewInstanceAssignableToModelType_Success,The length of the statement  "            Type[] typeArguments = CollectionModelBinderUtil.GetTypeArgumentsForUpdatableGenericCollection(typeof(ICollection<>)' typeof(List<>)' modelMetadata); " is 149.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,GetTypeArgumentsForUpdatableGenericCollection_ReadWriteReference_NewInstanceNotAssignableToModelType_MutableInstance_Success,The length of the statement  "            ModelMetadata modelMetadata = new EmptyModelMetadataProvider().GetMetadataForType(() => new Collection<int>()' typeof(Collection<int>)); " is 136.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,GetTypeArgumentsForUpdatableGenericCollection_ReadWriteReference_NewInstanceNotAssignableToModelType_MutableInstance_Success,The length of the statement  "            Type[] typeArguments = CollectionModelBinderUtil.GetTypeArgumentsForUpdatableGenericCollection(typeof(ICollection<>)' typeof(List<>)' modelMetadata); " is 149.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ComplexModelDtoModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ComplexModelDtoModelBinderTest.cs,BindModel,The length of the statement  "            ComplexModelDtoResult stringDtoResult = dto.Results[dto.PropertyMetadata.Where(m => m.ModelType == typeof(string)).First()]; " is 124.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ComplexModelDtoModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ComplexModelDtoModelBinderTest.cs,BindModel,The length of the statement  "            ComplexModelDtoResult dateTimeDtoResult = dto.Results[dto.PropertyMetadata.Where(m => m.ModelType == typeof(DateTime)).First()]; " is 128.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ArrayModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ArrayModelBinderTest.cs,BindModel,The length of the statement  "            bindingContext.ModelBinderProviders.RegisterBinderForType(typeof(int)' mockIntBinder.Object' false /* suppressPrefixCheck */); " is 126.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,DictionaryModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\DictionaryModelBinderTest.cs,BindModel,The length of the statement  "            bindingContext.ModelBinderProviders.RegisterBinderForType(typeof(KeyValuePair<int' string>)' mockKvpBinder.Object' false /* suppressPrefixCheck */); " is 148.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,KeyValuePairModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\KeyValuePairModelBinderUtilTest.cs,TryBindStrongModel_BinderExists_BinderReturnsCorrectlyTypedObject_ReturnsTrue,The length of the statement  "            bindingContext.ModelBinderProviders.RegisterBinderForType(typeof(int)' mockIntBinder.Object' true /* suppressPrefixCheck */); " is 125.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,KeyValuePairModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\KeyValuePairModelBinderUtilTest.cs,TryBindStrongModel_BinderExists_BinderReturnsCorrectlyTypedObject_ReturnsTrue,The length of the statement  "            bool retVal = KeyValuePairModelBinderUtil.TryBindStrongModel(controllerContext' bindingContext' "key"' new EmptyModelMetadataProvider()' out model); " is 148.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,KeyValuePairModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\KeyValuePairModelBinderUtilTest.cs,TryBindStrongModel_BinderExists_BinderReturnsIncorrectlyTypedObject_ReturnsTrue,The length of the statement  "            bindingContext.ModelBinderProviders.RegisterBinderForType(typeof(int)' mockIntBinder.Object' true /* suppressPrefixCheck */); " is 125.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,KeyValuePairModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\KeyValuePairModelBinderUtilTest.cs,TryBindStrongModel_BinderExists_BinderReturnsIncorrectlyTypedObject_ReturnsTrue,The length of the statement  "            bool retVal = KeyValuePairModelBinderUtil.TryBindStrongModel(controllerContext' bindingContext' "key"' new EmptyModelMetadataProvider()' out model); " is 148.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,KeyValuePairModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\KeyValuePairModelBinderUtilTest.cs,TryBindStrongModel_NoBinder_ReturnsFalse,The length of the statement  "            bool retVal = KeyValuePairModelBinderUtil.TryBindStrongModel(controllerContext' bindingContext' "key"' new EmptyModelMetadataProvider()' out model); " is 148.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,KeyValuePairModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\KeyValuePairModelBinderTest.cs,BindModel_MissingValue_ReturnsTrue,The length of the statement  "            bindingContext.ModelBinderProviders.RegisterBinderForType(typeof(int)' mockIntBinder.Object' true /* suppressPrefixCheck */); " is 125.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,KeyValuePairModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\KeyValuePairModelBinderTest.cs,BindModel_MissingValue_ReturnsTrue,The length of the statement  "            Assert.Equal(new[] { "someName.key" }' bindingContext.ValidationNode.ChildNodes.Select(n => n.ModelStateKey).ToArray()); " is 120.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,KeyValuePairModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\KeyValuePairModelBinderTest.cs,BindModel_SubBindingSucceeds,The length of the statement  "            bindingContext.ModelBinderProviders.RegisterBinderForType(typeof(int)' mockIntBinder.Object' true /* suppressPrefixCheck */); " is 125.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,KeyValuePairModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\KeyValuePairModelBinderTest.cs,BindModel_SubBindingSucceeds,The length of the statement  "            bindingContext.ModelBinderProviders.RegisterBinderForType(typeof(string)' mockStringBinder.Object' true /* suppressPrefixCheck */); " is 131.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,KeyValuePairModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\KeyValuePairModelBinderTest.cs,BindModel_SubBindingSucceeds,The length of the statement  "            Assert.Equal(new[] { "someName.key"' "someName.value" }' bindingContext.ValidationNode.ChildNodes.Select(n => n.ModelStateKey).ToArray()); " is 138.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,BindModel,The length of the statement  "            bindingContext.ModelBinderProviders.RegisterBinderForType(typeof(ComplexModelDto)' mockDtoBinder.Object' true /* suppressPrefixCheck */); " is 137.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,BindModel,The length of the statement  "            Mock<TestableMutableObjectModelBinder> mockTestableBinder = new Mock<TestableMutableObjectModelBinder> { CallBase = true }; " is 123.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,BindModel,The length of the statement  "            mockTestableBinder.Setup(o => o.GetMetadataForPropertiesPublic(controllerContext' bindingContext)).Returns(new ModelMetadata[0]).Verifiable(); " is 142.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,EnsureModel_ModelIsNotNull_DoesNothing,The length of the statement  "            Mock<TestableMutableObjectModelBinder> mockTestableBinder = new Mock<TestableMutableObjectModelBinder> { CallBase = true }; " is 123.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,EnsureModel_ModelIsNull_CallsCreateModel,The length of the statement  "            Mock<TestableMutableObjectModelBinder> mockTestableBinder = new Mock<TestableMutableObjectModelBinder> { CallBase = true }; " is 123.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,GetMetadataForProperties_WithoutBindAttribute,The length of the statement  "            string[] expectedPropertyNames = new[] { "DateOfBirth"' "DateOfDeath"' "ValueTypeRequired"' "FirstName"' "LastName"' "PropertyWithDefaultValue" }; " is 146.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,NullCheckFailedHandler_ModelStateAlreadyInvalid_DoesNothing,The length of the statement  "            EventHandler<ModelValidatedEventArgs> handler = MutableObjectModelBinder.CreateNullCheckFailedHandler(controllerContext' modelMetadata' null /* incomingValue */); " is 162.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,NullCheckFailedHandler_ModelStateValid_AddsErrorString,The length of the statement  "            EventHandler<ModelValidatedEventArgs> handler = MutableObjectModelBinder.CreateNullCheckFailedHandler(controllerContext' modelMetadata' null /* incomingValue */); " is 162.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,NullCheckFailedHandler_ModelStateValid_CallbackReturnsNull_DoesNothing,The length of the statement  "                EventHandler<ModelValidatedEventArgs> handler = MutableObjectModelBinder.CreateNullCheckFailedHandler(controllerContext' modelMetadata' null /* incomingValue */); " is 162.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,SetProperty_PropertyHasDefaultValue_SetsDefaultValue,The length of the statement  "            ModelMetadata propertyMetadata = bindingContext.ModelMetadata.Properties.Single(o => o.PropertyName == "PropertyWithDefaultValue"); " is 131.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,SetProperty_PropertyIsReadOnly_DoesNothing,The length of the statement  "            ModelMetadata propertyMetadata = bindingContext.ModelMetadata.Properties.Single(o => o.PropertyName == "NonUpdateableProperty"); " is 128.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,SetProperty_SettingNonNullableValueTypeToNull_RequiredValidatorPresent_AddsModelError,The length of the statement  "            ModelMetadata propertyMetadata = bindingContext.ModelMetadata.Properties.Single(o => o.PropertyName == "ValueTypeRequired"); " is 124.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,SetProperty_SettingNullableTypeToNull_RequiredValidatorNotPresent_PropertySetterThrows_AddsRequiredMessageString,The length of the statement  "            ModelMetadata propertyMetadata = bindingContext.ModelMetadata.Properties.Single(o => o.PropertyName == "NameNoAttribute"); " is 122.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,SetProperty_SettingNullableTypeToNull_RequiredValidatorPresent_PropertySetterThrows_AddsRequiredMessageString,The length of the statement  "            Assert.Equal("This message comes from the [Required] attribute."' bindingContext.ModelState["foo.Name"].Errors[0].ErrorMessage); " is 128.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,TypeConverterModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\TypeConverterModelBinderTest.cs,BindModel_Error_FormatExceptionsTurnedIntoStringsInModelState,The length of the statement  "            Assert.Equal("The value 'not an integer' is not valid for Int32."' bindingContext.ModelState["theModelName"].Errors[0].ErrorMessage); " is 133.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,TypeConverterModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\TypeConverterModelBinderTest.cs,BindModel_Error_GeneralExceptionsSavedInModelState,The length of the statement  "            Assert.Equal("The parameter conversion from type 'System.String' to type 'Microsoft.Web.Mvc.ModelBinding.Test.TypeConverterModelBinderTest+Dummy' failed. See the inner exception for more information."' bindingContext.ModelState["theModelName"].Errors[0].Exception.Message); " is 273.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,TypeConverterModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\TypeConverterModelBinderTest.cs,BindModel_Error_GeneralExceptionsSavedInModelState,The length of the statement  "            Assert.Equal("From DummyTypeConverter: foo"' bindingContext.ModelState["theModelName"].Errors[0].Exception.InnerException.Message); " is 131.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,TypeConverterModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\TypeConverterModelBinderProviderTest.cs,GetBinder_NoTypeConverterExistsFromString_ReturnsNull,The length of the statement  "            ExtensibleModelBindingContext bindingContext = GetBindingContext(typeof(void)); // no TypeConverter exists Void -> String " is 121.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderConfigTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderConfigTest.cs,GetUserResourceString_NullControllerContext_ReturnsNull,The length of the statement  "            string customResourceString = ModelBinderConfig.GetUserResourceString(null /* controllerContext */' "someResourceName"' "someResourceClassKey"); " is 144.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderConfigTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderConfigTest.cs,GetUserResourceString_NullHttpContext_ReturnsNull,The length of the statement  "            string customResourceString = ModelBinderConfig.GetUserResourceString(mockControllerContext.Object' "someResourceName"' "someResourceClassKey"); " is 144.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderConfigTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderConfigTest.cs,GetUserResourceString_NullResourceKey_ReturnsNull,The length of the statement  "            string customResourceString = ModelBinderConfig.GetUserResourceString(mockControllerContext.Object' "someResourceName"' null /* resourceClassKey */); " is 149.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderConfigTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderConfigTest.cs,GetUserResourceString_ValidResourceObject_ReturnsResourceString,The length of the statement  "            mockControllerContext.Setup(o => o.HttpContext.GetGlobalResourceObject("someResourceClassKey"' "someResourceName"' CultureInfo.CurrentUICulture)).Returns("My custom resource string"); " is 183.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderConfigTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderConfigTest.cs,GetUserResourceString_ValidResourceObject_ReturnsResourceString,The length of the statement  "            string customResourceString = ModelBinderConfig.GetUserResourceString(mockControllerContext.Object' "someResourceName"' "someResourceClassKey"); " is 144.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderConfigTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderConfigTest.cs,TypeConversionErrorMessageProvider_DefaultValue,The length of the statement  "            ModelMetadata metadata = new ModelMetadata(new Mock<ModelMetadataProvider>().Object' null' null' typeof(int)' "SomePropertyName"); " is 130.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderConfigTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderConfigTest.cs,TypeConversionErrorMessageProvider_Property,The length of the statement  "                MemberHelper.TestPropertyWithDefaultInstance(wrapper' "TypeConversionErrorMessageProvider"' (ModelBinderErrorMessageProvider)DummyErrorSelector); " is 145.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderConfigTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderConfigTest.cs,ValueRequiredErrorMessageProvider_DefaultValue,The length of the statement  "            ModelMetadata metadata = new ModelMetadata(new Mock<ModelMetadataProvider>().Object' null' null' typeof(int)' "SomePropertyName"); " is 130.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderConfigTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderConfigTest.cs,ValueRequiredErrorMessageProvider_Property,The length of the statement  "                MemberHelper.TestPropertyWithDefaultInstance(wrapper' "ValueRequiredErrorMessageProvider"' (ModelBinderErrorMessageProvider)DummyErrorSelector); " is 144.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,SimpleModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\SimpleModelBinderProviderTest.cs,GetBinder_TypeDoesNotMatch_ReturnsNull,The length of the statement  "            SimpleModelBinderProvider provider = new SimpleModelBinderProvider(typeof(string)' new Mock<IExtensibleModelBinder>().Object) " is 125.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,SimpleModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\SimpleModelBinderProviderTest.cs,GetBinderThrowsIfBindingContextIsNull,The length of the statement  "            SimpleModelBinderProvider provider = new SimpleModelBinderProvider(typeof(string)' new Mock<IExtensibleModelBinder>().Object); " is 126.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,SimpleModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\SimpleModelBinderProviderTest.cs,ModelTypeProperty,The length of the statement  "            SimpleModelBinderProvider provider = new SimpleModelBinderProvider(typeof(string)' new Mock<IExtensibleModelBinder>().Object); " is 126.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,TypeMatchModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\TypeMatchModelBinderProviderTest.cs,ProviderIsMarkedFrontOfList,The length of the statement  "            Assert.True(t.GetCustomAttributes(typeof(ModelBinderProviderOptionsAttribute)' true /* inherit */).Cast<ModelBinderProviderOptionsAttribute>().Single().FrontOfList); " is 165.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderProviderCollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderProviderCollectionTest.cs,GetBinder_FromAttribute_BadAttribute_Throws,The length of the statement  "                ModelMetadata = new EmptyModelMetadataProvider().GetMetadataForType(null' typeof(ModelWithProviderAttribute_BadAttribute)) " is 122.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderProviderCollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderProviderCollectionTest.cs,GetBinder_FromAttribute_BadAttribute_Throws,The length of the statement  "                @"The type 'System.Object' does not subclass Microsoft.Web.Mvc.ModelBinding.ModelBinderProvider or implement the interface Microsoft.Web.Mvc.ModelBinding.IExtensibleModelBinder."); " is 180.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderProviderCollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderProviderCollectionTest.cs,GetBinder_FromAttribute_Binder_Generic_ReturnsBinder,The length of the statement  "                ModelMetadata = new EmptyModelMetadataProvider().GetMetadataForType(null' typeof(ModelWithProviderAttribute_Binder_Generic<int>))' " is 130.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderProviderCollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderProviderCollectionTest.cs,GetBinder_FromAttribute_Binder_Generic_ReturnsBinder,The length of the statement  "            providers.RegisterBinderForType(typeof(ModelWithProviderAttribute_Binder_Generic<int>)' new Mock<IExtensibleModelBinder>().Object' true /* suppressPrefix */); " is 158.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderProviderCollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderProviderCollectionTest.cs,GetBinder_FromAttribute_Binder_SuppressPrefixCheck_ReturnsBinder,The length of the statement  "                ModelMetadata = new EmptyModelMetadataProvider().GetMetadataForType(null' typeof(ModelWithProviderAttribute_Binder_SuppressPrefix))' " is 132.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderProviderCollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderProviderCollectionTest.cs,GetBinder_FromAttribute_Binder_SuppressPrefixCheck_ReturnsBinder,The length of the statement  "            providers.RegisterBinderForType(typeof(ModelWithProviderAttribute_Binder_SuppressPrefix)' new Mock<IExtensibleModelBinder>().Object' true /* suppressPrefix */); " is 160.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderProviderCollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderProviderCollectionTest.cs,GetBinder_FromAttribute_Binder_ValueNotPresent_ReturnsNull,The length of the statement  "            providers.RegisterBinderForType(typeof(ModelWithProviderAttribute_Binder)' new Mock<IExtensibleModelBinder>().Object' true /* suppressPrefix */); " is 145.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderProviderCollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderProviderCollectionTest.cs,GetBinder_FromAttribute_Binder_ValuePresent_ReturnsBinder,The length of the statement  "            providers.RegisterBinderForType(typeof(ModelWithProviderAttribute_Binder)' new Mock<IExtensibleModelBinder>().Object' true /* suppressPrefix */); " is 145.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderProviderCollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderProviderCollectionTest.cs,GetBinder_FromAttribute_Provider_ReturnsBinder,The length of the statement  "            providers.RegisterBinderForType(typeof(ModelWithProviderAttribute_Provider)' new Mock<IExtensibleModelBinder>().Object' true /* suppressPrefix */); " is 147.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderProviderCollectionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderProviderCollectionTest.cs,GetBinderThrowsIfModelTypeHasBindAttribute,The length of the statement  "                @"The model of type 'Microsoft.Web.Mvc.ModelBinding.Test.ModelBinderProviderCollectionTest+ModelWithBindAttribute' has a [Bind] attribute. The new model binding system cannot be used with models that have type-level [Bind] attributes. Use the [BindRequired] and [BindNever] attributes on the model type or its properties instead."); " is 332.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,GetPossibleBinderInstance_Match_ReturnsBinder,The length of the statement  "            IExtensibleModelBinder binder = ModelBinderUtil.GetPossibleBinderInstance(typeof(List<int>)' typeof(List<>)' typeof(SampleGenericBinder<>)); " is 140.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,GetPossibleBinderInstance_NoMatch_ReturnsNull,The length of the statement  "            IExtensibleModelBinder binder = ModelBinderUtil.GetPossibleBinderInstance(typeof(ArraySegment<int>)' typeof(List<>)' typeof(SampleGenericBinder<>)); " is 148.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,ValidateBindingContextThrowsIfModelInstanceIsWrongType,The length of the statement  "                "The binding context has a Model of type 'System.Int32'' but this binder can only operate on models of type 'System.String'." + Environment.NewLine " is 147.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,ValidateBindingContextThrowsIfModelIsNullButCannotBe,The length of the statement  "                "The binding context has a null Model' but this binder requires a non-null model of type 'System.String'." + Environment.NewLine " is 128.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,ValidateBindingContextThrowsIfModelTypeIsWrong,The length of the statement  "                "The binding context has a ModelType of 'System.Object'' but this binder can only operate on models of type 'System.String'." + Environment.NewLine " is 147.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelValidationNodeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelValidationNodeTest.cs,CombineWith,The length of the statement  "            Assert.Equal(new[] { "Validating parent1."' "Validating parent2."' "Validated parent1."' "Validated parent2." }' log.ToArray()); " is 128.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelValidationNodeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelValidationNodeTest.cs,Validate_Ordering,The length of the statement  "            ModelMetadata childMetadata = new EmptyModelMetadataProvider().GetMetadataForProperty(() => model' model.GetType()' "ValidStringProperty"); " is 139.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelValidationNodeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelValidationNodeTest.cs,Validate_Ordering,The length of the statement  "            Assert.Equal(new[] { "In OnValidating()"' "In IDataErrorInfo.get_Item('ValidStringProperty')"' "In IDataErrorInfo.get_Error()"' "In OnValidated()" }' log.ToArray()); " is 165.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelValidationNodeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelValidationNodeTest.cs,Validate_SkipsRemainingValidationIfModelStateIsInvalid,The length of the statement  "            ModelMetadata childMetadata = new EmptyModelMetadataProvider().GetMetadataForProperty(() => model' model.GetType()' "InvalidStringProperty"); " is 141.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelValidationNodeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelValidationNodeTest.cs,Validate_SkipsRemainingValidationIfModelStateIsInvalid,The length of the statement  "            Assert.Equal(new[] { "In OnValidating()"' "In IDataErrorInfo.get_Item('InvalidStringProperty')"' "In OnValidated()" }' log.ToArray()); " is 134.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelValidationNodeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelValidationNodeTest.cs,Validate_SkipsRemainingValidationIfModelStateIsInvalid,The length of the statement  "            Assert.Equal("Sample error message"' controllerContext.Controller.ViewData.ModelState["theKey.InvalidStringProperty"].Errors[0].ErrorMessage); " is 142.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelValidationNodeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelValidationNodeTest.cs,Validate_ValidateAllProperties_AddsValidationErrors,The length of the statement  "            Assert.Equal("existing Error Text"' controllerContext.Controller.ViewData.ModelState["theKey.RequiredString.Dummy"].Errors[0].ErrorMessage); " is 140.
Long Statement,Microsoft.Web.Mvc.ModelBinding.Test,ModelValidationNodeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelValidationNodeTest.cs,Validate_ValidateAllProperties_AddsValidationErrors,The length of the statement  "            Assert.Equal("The field RangedInt must be between 10 and 30."' controllerContext.Controller.ViewData.ModelState["theKey.RangedInt"].Errors[0].ErrorMessage); " is 156.
Long Statement,Microsoft.Web.Mvc.Test,ButtonTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ButtonTest.cs,ButtonRendersBaseAttributes,The length of the statement  "            Assert.Equal("<button name=\"nameAttr\" onclick=\"onclickAttr\" type=\"reset\">buttonText</button>"' result.ToHtmlString()); " is 124.
Long Statement,Microsoft.Web.Mvc.Test,ButtonTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ButtonTest.cs,ButtonAllowsInnerHtml,The length of the statement  "            Assert.Equal("<button name=\"nameAttr\" onclick=\"onclickAttr\" type=\"submit\"><img src=\"puppy.jpg\" /></button>"' result.ToHtmlString()); " is 140.
Long Statement,Microsoft.Web.Mvc.Test,ButtonTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ButtonTest.cs,ButtonRendersExplicitAttributes,The length of the statement  "            MvcHtmlString result = html.Button("nameAttr"' "buttonText"' HtmlButtonType.Reset' "onclickAttr"' new { title = "the-title" }); " is 127.
Long Statement,Microsoft.Web.Mvc.Test,ButtonTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ButtonTest.cs,ButtonRendersExplicitAttributes,The length of the statement  "            Assert.Equal("<button name=\"nameAttr\" onclick=\"onclickAttr\" title=\"the-title\" type=\"reset\">buttonText</button>"' result.ToHtmlString()); " is 144.
Long Statement,Microsoft.Web.Mvc.Test,ButtonTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ButtonTest.cs,ButtonRendersExplicitAttributesWithUnderscores,The length of the statement  "            MvcHtmlString result = html.Button("nameAttr"' "buttonText"' HtmlButtonType.Reset' "onclickAttr"' new { foo_bar = "baz" }); " is 123.
Long Statement,Microsoft.Web.Mvc.Test,ButtonTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ButtonTest.cs,ButtonRendersExplicitAttributesWithUnderscores,The length of the statement  "            Assert.Equal("<button foo-bar=\"baz\" name=\"nameAttr\" onclick=\"onclickAttr\" type=\"reset\">buttonText</button>"' result.ToHtmlString()); " is 140.
Long Statement,Microsoft.Web.Mvc.Test,ButtonTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ButtonTest.cs,ButtonRendersExplicitDictionaryAttributes,The length of the statement  "            MvcHtmlString result = html.Button("nameAttr"' "buttonText"' HtmlButtonType.Button' "onclickAttr"' new RouteValueDictionary(new { title = "the-title" })); " is 154.
Long Statement,Microsoft.Web.Mvc.Test,ButtonTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ButtonTest.cs,ButtonRendersExplicitDictionaryAttributes,The length of the statement  "            Assert.Equal("<button name=\"nameAttr\" onclick=\"onclickAttr\" title=\"the-title\" type=\"button\">buttonText</button>"' result.ToHtmlString()); " is 145.
Long Statement,Microsoft.Web.Mvc.Test,ContentTypeAttributeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ContentTypeAttributeTest.cs,ExecuteResultSetsContentType,The length of the statement  "            var controllerContext = new ControllerContext(new RequestContext(mockHttpContext.Object' new RouteData())' mockController.Object); " is 130.
Long Statement,Microsoft.Web.Mvc.Test,ControllerExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ControllerExtensionsTest.cs,RedirectToAction_DifferentController,The length of the statement  "            RedirectToRouteResult result = new SampleController().RedirectToAction<DifferentController>(x => x.SomeOtherMethod(84)); " is 120.
Long Statement,Microsoft.Web.Mvc.Test,AjaxOnlyAttributeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\AjaxOnlyAttributeTest.cs,GetControllerContext,The length of the statement  "            mockContext.Setup(o => o.HttpContext.Request["X-Requested-With"]).Returns("XMLHttpRequest"); // always assume the request contains this' e.g. as a form value " is 157.
Long Statement,Microsoft.Web.Mvc.Test,AsyncManagerExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\AsyncManagerExtensionsTest.cs,RegisterTask_ResetsOutstandingOperationCountIfBeginMethodThrows,The length of the statement  "            Func<AsyncCallback' IAsyncResult> beginDelegate = cb => { throw new InvalidOperationException("BeginDelegate throws."); }; " is 122.
Long Statement,Microsoft.Web.Mvc.Test,FileExtensionsAttributeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\FileExtensionsAttributeTest.cs,ClientRule,The length of the statement  "            Assert.Equal("The PropertyName field only accepts files with the following extensions: .foo' .bar' .baz"' clientRule.ErrorMessage); " is 131.
Long Statement,Microsoft.Web.Mvc.Test,UrlAttributeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\UrlAttributeTest.cs,ClientRule,The length of the statement  "            Assert.Equal("The PropertyName field is not a valid fully-qualified http' https' or ftp URL."' clientRule.ErrorMessage); " is 120.
Long Statement,Microsoft.Web.Mvc.Test,ValueProviderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ValueProviderUtilTest.cs,IsPrefixMatch_Misses,The length of the statement  "                new { Prefix = "Foo"' TestString = "FooBar"' Reason = "Prefix 'foo' was not followed by a delimiter in the test string." } " is 122.
Long Statement,Microsoft.Web.Mvc.Test,CssExtensionsTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\CssExtensionsTests.cs,CssWithRootedPathRendersProperElement,The length of the statement  "            Assert.Equal("<link href=\"/$(SESSION)/Correct/Path.css\" rel=\"stylesheet\" type=\"text/css\" />"' result.ToHtmlString()); " is 123.
Long Statement,Microsoft.Web.Mvc.Test,CssExtensionsTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\CssExtensionsTests.cs,CssWithContentRelativePathRendersProperElement,The length of the statement  "            Assert.Equal("<link href=\"/$(SESSION)/Content/Correct/Path.css\" rel=\"stylesheet\" type=\"text/css\" />"' result.ToHtmlString()); " is 131.
Long Statement,Microsoft.Web.Mvc.Test,CssExtensionsTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\CssExtensionsTests.cs,CssWithNullMediaTypeRendersProperElement,The length of the statement  "            Assert.Equal("<link href=\"/$(SESSION)/Content/Correct/Path.css\" rel=\"stylesheet\" type=\"text/css\" />"' result.ToHtmlString()); " is 131.
Long Statement,Microsoft.Web.Mvc.Test,CssExtensionsTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\CssExtensionsTests.cs,CssWithEmptyMediaTypeRendersProperElement,The length of the statement  "            Assert.Equal("<link href=\"/$(SESSION)/Content/Correct/Path.css\" media=\"\" rel=\"stylesheet\" type=\"text/css\" />"' result.ToHtmlString()); " is 142.
Long Statement,Microsoft.Web.Mvc.Test,CssExtensionsTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\CssExtensionsTests.cs,CssWithMediaTypeRendersProperElement,The length of the statement  "            Assert.Equal("<link href=\"/$(SESSION)/Content/Correct/Path.css\" media=\"Print\" rel=\"stylesheet\" type=\"text/css\" />"' result.ToHtmlString()); " is 147.
Long Statement,Microsoft.Web.Mvc.Test,CssExtensionsTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\CssExtensionsTests.cs,CssWithUrlRendersProperElement,The length of the statement  "            Assert.Equal("<link href=\"http://ajax.Correct.com/Path.js\" rel=\"stylesheet\" type=\"text/css\" />"' result.ToHtmlString()); " is 126.
Long Statement,Microsoft.Web.Mvc.Test,CssExtensionsTests,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\CssExtensionsTests.cs,CssWithSecureUrlRendersProperElement,The length of the statement  "            Assert.Equal("<link href=\"https://ajax.Correct.com/Path.js\" rel=\"stylesheet\" type=\"text/css\" />"' result.ToHtmlString()); " is 127.
Long Statement,Microsoft.Web.Mvc.Test,DeserializeAttributeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\DeserializeAttributeTest.cs,BinderReturnsDeserializedValue,The length of the statement  "            DeserializeAttribute attr = new DeserializeAttribute(SerializationMode.EncryptedAndSigned) { Serializer = mockSerializer.Object }; " is 130.
Long Statement,Microsoft.Web.Mvc.Test,DeserializeAttributeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\DeserializeAttributeTest.cs,BinderThrowsIfDataCorrupt,The length of the statement  "            mockSerializer.Setup(o => o.Deserialize(It.IsAny<string>()' It.IsAny<SerializationMode>())).Throws(new SerializationException()); " is 129.
Long Statement,Microsoft.Web.Mvc.Test,ScriptExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ScriptExtensionsTest.cs,ScriptWithScriptRelativePathRendersProperElement,The length of the statement  "            Assert.Equal("<script src=\"/$(SESSION)/Scripts/Correct/Path.js\" type=\"text/javascript\"></script>"' result.ToHtmlString()); " is 126.
Long Statement,Microsoft.Web.Mvc.Test,ScriptExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ScriptExtensionsTest.cs,ScriptWithUrlRendersProperElement,The length of the statement  "            Assert.Equal("<script src=\"http://ajax.Correct.com/Path.js\" type=\"text/javascript\"></script>"' result.ToHtmlString()); " is 122.
Long Statement,Microsoft.Web.Mvc.Test,ScriptExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ScriptExtensionsTest.cs,ScriptWithSecureUrlRendersProperElement,The length of the statement  "            Assert.Equal("<script src=\"https://ajax.Correct.com/Path.js\" type=\"text/javascript\"></script>"' result.ToHtmlString()); " is 123.
Long Statement,Microsoft.Web.Mvc.Test,ScriptExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ScriptExtensionsTest.cs,ScriptWithDebuggingOnUsesDebugUrl,The length of the statement  "            Assert.Equal("<script src=\"/$(SESSION)/Scripts/Correct/Debug/Path.js\" type=\"text/javascript\"></script>"' result.ToHtmlString()); " is 132.
Long Statement,Microsoft.Web.Mvc.Test,MvcSerializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\MvcSerializerTest.cs,DeserializeThrowsIfSerializedValueIsCorrupt,The length of the statement  "                @"Deserialization failed. Verify that the data is being deserialized using the same SerializationMode with which it was serialized. Otherwise see the inner exception."); " is 169.
Long Statement,Microsoft.Web.Mvc.Test,MvcSerializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\MvcSerializerTest.cs,SerializeAllowsNullValues,The length of the statement  "            Assert.Equal(@"All-LPgGI1dzEbp3B2FueVR5cGUuA25pbIYJAXozaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS8yMDAzLzEwL1NlcmlhbGl6YXRpb24vCQFpKWh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlAQ=="' serializedValue); " is 207.
Long Statement,Microsoft.Web.Mvc.Test,MvcSerializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\MvcSerializerTest.cs,SerializeAndDeserializeRoundTripsValue,The length of the statement  "            object deserializedValue = MvcSerializer.Deserialize(serializedValue' SerializationMode.EncryptedAndSigned' machineKey); " is 120.
Long Statement,Microsoft.Web.Mvc.Test,MailToExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\MailToExtensionsTest.cs,MailToWithLinkTextEmailAndHtmlAttributesDictionaryRendersAttributes,The length of the statement  "            MvcHtmlString result = html.Mailto("This is a test"' "test@example.com"' new RouteValueDictionary(new { title = "this is a test" })); " is 133.
Long Statement,Microsoft.Web.Mvc.Test,MailToExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\MailToExtensionsTest.cs,MailToWithSubjectAndHtmlAttributesRendersAttributes,The length of the statement  "            MvcHtmlString result = html.Mailto("This is a test"' "test@example.com"' "The subject"' new { title = "this is a test" }); " is 122.
Long Statement,Microsoft.Web.Mvc.Test,MailToExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\MailToExtensionsTest.cs,MailToWithSubjectAndHtmlAttributesRendersAttributes,The length of the statement  "            Assert.Equal("<a href=\"mailto:test@example.com?subject=The subject\" title=\"this is a test\">This is a test</a>"' result.ToHtmlString()); " is 139.
Long Statement,Microsoft.Web.Mvc.Test,MailToExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\MailToExtensionsTest.cs,MailToWithSubjectAndHtmlAttributesDictionaryRendersAttributes,The length of the statement  "            MvcHtmlString result = html.Mailto("This is a test"' "test@example.com"' "The subject"' new RouteValueDictionary(new { title = "this is a test" })); " is 148.
Long Statement,Microsoft.Web.Mvc.Test,MailToExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\MailToExtensionsTest.cs,MailToWithSubjectAndHtmlAttributesDictionaryRendersAttributes,The length of the statement  "            Assert.Equal("<a href=\"mailto:test@example.com?subject=The subject\" title=\"this is a test\">This is a test</a>"' result.ToHtmlString()); " is 139.
Long Statement,Microsoft.Web.Mvc.Test,MailToExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\MailToExtensionsTest.cs,MailToWithSubjectAppendsSubjectQuery,The length of the statement  "            Assert.Equal("<a href=\"mailto:test@example.com?subject=This is the subject\">This is a test</a>"' result.ToHtmlString()); " is 122.
Long Statement,Microsoft.Web.Mvc.Test,MailToExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\MailToExtensionsTest.cs,MailToWithMultipartBodyRendersProperMailtoEncoding,The length of the statement  "            Assert.Equal("<a href=\"mailto:test@example.com?body=Line one%0ALine two%0ALine three\">email me</a>"' result.ToHtmlString()); " is 126.
Long Statement,Microsoft.Web.Mvc.Test,MailToExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\MailToExtensionsTest.cs,MailToWithAllValuesProvidedRendersCorrectTag,The length of the statement  "            MvcHtmlString result = html.Mailto("email me"' "test@example.com"' "the subject"' body' "cc@example.com"' "bcc@example.com"' new { title = "email test" }); " is 155.
Long Statement,Microsoft.Web.Mvc.Test,MailToExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\MailToExtensionsTest.cs,MailToWithAllValuesProvidedRendersCorrectTag,The length of the statement  "            string expected = @"<a href=""mailto:test@example.com?subject=the subject&amp;cc=cc@example.com&amp;bcc=bcc@example.com&amp;body=Line one%0ALine two%0ALine three"" title=""email test"">email me</a>"; " is 199.
Long Statement,Microsoft.Web.Mvc.Test,MailToExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\MailToExtensionsTest.cs,MailToWithAttributesWithUnderscores,The length of the statement  "            MvcHtmlString result = html.Mailto("email me"' "test@example.com"' "the subject"' body' "cc@example.com"' "bcc@example.com"' new { foo_bar = "baz" }); " is 150.
Long Statement,Microsoft.Web.Mvc.Test,MailToExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\MailToExtensionsTest.cs,MailToWithAttributesWithUnderscores,The length of the statement  "            string expected = @"<a foo-bar=""baz"" href=""mailto:test@example.com?subject=the subject&amp;cc=cc@example.com&amp;bcc=bcc@example.com&amp;body=Line one%0ALine two%0ALine three"">email me</a>"; " is 194.
Long Statement,Microsoft.Web.Mvc.Test,RenderActionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RenderActionTest.cs,GetHtmlHelper,The length of the statement  "                    MvcHandler mvcHandler = _h.GetType().GetProperty("InnerHandler"' BindingFlags.Instance | BindingFlags.NonPublic).GetValue(_h' null) as MvcHandler; " is 146.
Long Statement,Microsoft.Web.Mvc.Test,FormExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\FormExtensionsTest.cs,FormWithPostActionAndObjectAttributes,The length of the statement  "            IDisposable formDisposable = htmlHelper.BeginForm<FormController>(action => action.About()' FormMethod.Get' new { baz = "baz" }); " is 129.
Long Statement,Microsoft.Web.Mvc.Test,FormExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\FormExtensionsTest.cs,FormWithPostActionAndObjectAttributes,The length of the statement  "            Assert.Equal(@"<form action=""" + AppPathModifier + @"/Form/About"" baz=""baz"" method=""get""></form>"' writer.ToString()); " is 124.
Long Statement,Microsoft.Web.Mvc.Test,FormExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\FormExtensionsTest.cs,FormWithPostActionAndObjectAttributesWithUnderscores,The length of the statement  "            IDisposable formDisposable = htmlHelper.BeginForm<FormController>(action => action.About()' FormMethod.Get' new { foo_baz = "baz" }); " is 133.
Long Statement,Microsoft.Web.Mvc.Test,FormExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\FormExtensionsTest.cs,FormWithPostActionAndObjectAttributesWithUnderscores,The length of the statement  "            Assert.Equal(@"<form action=""" + AppPathModifier + @"/Form/About"" foo-baz=""baz"" method=""get""></form>"' writer.ToString()); " is 128.
Long Statement,Microsoft.Web.Mvc.Test,FormExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\FormExtensionsTest.cs,GetFormHelper,The length of the statement  "            rt.Add(new Route("{controller}/{action}/{id}"' null) { Defaults = new RouteValueDictionary(new { id = "defaultid" }) }); " is 120.
Long Statement,Microsoft.Web.Mvc.Test,FormExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\FormExtensionsTest.cs,GetFormHelper,The length of the statement  "            rt.Add("namedroute"' new Route("named/{controller}/{action}/{id}"' null) { Defaults = new RouteValueDictionary(new { id = "defaultid" }) }); " is 140.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListItemSelected,The length of the statement  "            Assert.Equal(@"<input checked=""checked"" id=""FooList"" name=""FooList"" type=""radio"" value=""baz"" />"' html[2].ToHtmlString()); " is 132.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListItemSelectedWithValueFromViewData,The length of the statement  "            Assert.Equal(@"<input checked=""checked"" id=""FooList"" name=""FooList"" type=""radio"" value=""bar"" />"' html[1].ToHtmlString()); " is 132.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithObjectAttributes,The length of the statement  "            Assert.Equal(@"<input attr1=""value1"" id=""FooList"" name=""FooList"" type=""radio"" value=""foo"" />"' html[0].ToHtmlString()); " is 129.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithObjectAttributes,The length of the statement  "            Assert.Equal(@"<input attr1=""value1"" id=""FooList"" name=""FooList"" type=""radio"" value=""bar"" />"' html[1].ToHtmlString()); " is 129.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithObjectAttributes,The length of the statement  "            Assert.Equal(@"<input attr1=""value1"" checked=""checked"" id=""FooList"" name=""FooList"" type=""radio"" value=""baz"" />"' html[2].ToHtmlString()); " is 149.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithObjectAttributesWithUnderscores,The length of the statement  "            Assert.Equal(@"<input foo-bar=""baz"" id=""FooList"" name=""FooList"" type=""radio"" value=""foo"" />"' html[0].ToHtmlString()); " is 128.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithObjectAttributesWithUnderscores,The length of the statement  "            Assert.Equal(@"<input foo-bar=""baz"" id=""FooList"" name=""FooList"" type=""radio"" value=""bar"" />"' html[1].ToHtmlString()); " is 128.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithObjectAttributesWithUnderscores,The length of the statement  "            Assert.Equal(@"<input checked=""checked"" foo-bar=""baz"" id=""FooList"" name=""FooList"" type=""radio"" value=""baz"" />"' html[2].ToHtmlString()); " is 148.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithDictionaryAttributes,The length of the statement  "            MvcHtmlString[] html = htmlHelper.RadioButtonList("FooList"' GetRadioButtonListData(true)' new RouteValueDictionary(new { attr1 = "value1" })); " is 143.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithDictionaryAttributes,The length of the statement  "            Assert.Equal(@"<input attr1=""value1"" id=""FooList"" name=""FooList"" type=""radio"" value=""foo"" />"' html[0].ToHtmlString()); " is 129.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithDictionaryAttributes,The length of the statement  "            Assert.Equal(@"<input attr1=""value1"" id=""FooList"" name=""FooList"" type=""radio"" value=""bar"" />"' html[1].ToHtmlString()); " is 129.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithDictionaryAttributes,The length of the statement  "            Assert.Equal(@"<input attr1=""value1"" checked=""checked"" id=""FooList"" name=""FooList"" type=""radio"" value=""baz"" />"' html[2].ToHtmlString()); " is 149.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListItemSelectedWithSelectListFromViewData,The length of the statement  "            Assert.Equal(@"<input checked=""checked"" id=""FooList"" name=""FooList"" type=""radio"" value=""baz"" />"' html[2].ToHtmlString()); " is 132.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithObjectAttributesWithSelectListFromViewData,The length of the statement  "            Assert.Equal(@"<input attr1=""value1"" id=""FooList"" name=""FooList"" type=""radio"" value=""foo"" />"' html[0].ToHtmlString()); " is 129.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithObjectAttributesWithSelectListFromViewData,The length of the statement  "            Assert.Equal(@"<input attr1=""value1"" id=""FooList"" name=""FooList"" type=""radio"" value=""bar"" />"' html[1].ToHtmlString()); " is 129.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithObjectAttributesWithSelectListFromViewData,The length of the statement  "            Assert.Equal(@"<input attr1=""value1"" checked=""checked"" id=""FooList"" name=""FooList"" type=""radio"" value=""baz"" />"' html[2].ToHtmlString()); " is 149.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithObjectAttributesWithUnderscoresWithSelectListFromViewData,The length of the statement  "            Assert.Equal(@"<input foo-bar=""baz"" id=""FooList"" name=""FooList"" type=""radio"" value=""foo"" />"' html[0].ToHtmlString()); " is 128.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithObjectAttributesWithUnderscoresWithSelectListFromViewData,The length of the statement  "            Assert.Equal(@"<input foo-bar=""baz"" id=""FooList"" name=""FooList"" type=""radio"" value=""bar"" />"' html[1].ToHtmlString()); " is 128.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithObjectAttributesWithUnderscoresWithSelectListFromViewData,The length of the statement  "            Assert.Equal(@"<input checked=""checked"" foo-bar=""baz"" id=""FooList"" name=""FooList"" type=""radio"" value=""baz"" />"' html[2].ToHtmlString()); " is 148.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithDictionaryAttributesWithSelectListFromViewData,The length of the statement  "            Assert.Equal(@"<input attr1=""value1"" id=""FooList"" name=""FooList"" type=""radio"" value=""foo"" />"' html[0].ToHtmlString()); " is 129.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithDictionaryAttributesWithSelectListFromViewData,The length of the statement  "            Assert.Equal(@"<input attr1=""value1"" id=""FooList"" name=""FooList"" type=""radio"" value=""bar"" />"' html[1].ToHtmlString()); " is 129.
Long Statement,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithDictionaryAttributesWithSelectListFromViewData,The length of the statement  "            Assert.Equal(@"<input attr1=""value1"" checked=""checked"" id=""FooList"" name=""FooList"" type=""radio"" value=""baz"" />"' html[2].ToHtmlString()); " is 149.
Long Statement,Microsoft.Web.Mvc.Test,SubmitImageExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\SubmitImageExtensionsTest.cs,SubmitImageWithAttributesWithUnderscores,The length of the statement  "            Assert.Equal("<input foo-bar=\"baz\" id=\"specified-name\" name=\"specified-name\" src=\"/mvc.jpg\" type=\"image\" />"' button.ToHtmlString()); " is 143.
Long Statement,Microsoft.Web.Mvc.Test,SubmitImageExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\SubmitImageExtensionsTest.cs,SubmitImageWithTypeAttributeRendersExplicitTypeAttribute,The length of the statement  "            Assert.Equal("<input id=\"specified-name\" name=\"specified-name\" src=\"/mvc.jpg\" type=\"not-image\" />"' button.ToHtmlString()); " is 131.
Long Statement,Microsoft.Web.Mvc.Test,SubmitImageExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\SubmitImageExtensionsTest.cs,SubmitImageWithNameAndImageUrlRendersNameAndSrcAttributes,The length of the statement  "            Assert.Equal("<input id=\"button-name\" name=\"button-name\" src=\"/mvc.gif\" type=\"image\" />"' button.ToHtmlString()); " is 121.
Long Statement,Microsoft.Web.Mvc.Test,SubmitImageExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\SubmitImageExtensionsTest.cs,SubmitImageWithImageUrlStartingWithTildeRendersAppPath,The length of the statement  "            Assert.Equal("<input id=\"button-name\" name=\"button-name\" src=\"/$(SESSION)/app/mvc.gif\" type=\"image\" />"' button.ToHtmlString()); " is 136.
Long Statement,Microsoft.Web.Mvc.Test,SubmitImageExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\SubmitImageExtensionsTest.cs,SubmitButtonWithNameAndValueSpecifiedAndPassedInAsAttributeChoosesExplicitAttributes,The length of the statement  "            MvcHtmlString button = html.SubmitImage("specified-name"' "/specified-src.bmp"' new RouteValueDictionary(new { name = "name-attribute"' src = "src-attribute" })); " is 162.
Long Statement,Microsoft.Web.Mvc.Test,SubmitImageExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\SubmitImageExtensionsTest.cs,SubmitButtonWithNameAndValueSpecifiedAndPassedInAsAttributeChoosesExplicitAttributes,The length of the statement  "            Assert.Equal("<input id=\"specified-name\" name=\"name-attribute\" src=\"src-attribute\" type=\"image\" />"' button.ToHtmlString()); " is 132.
Long Statement,Microsoft.Web.Mvc.Test,ImageExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ImageExtensionsTest.cs,ImageWithAltValueRendersImageWithAltTag,The length of the statement  "            Assert.Equal("<img alt=\"this is an alt value\" src=\"/system/web/mvc.jpg\" title=\"this is an alt value\" />"' imageResult.ToHtmlString()); " is 140.
Long Statement,Microsoft.Web.Mvc.Test,ImageExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ImageExtensionsTest.cs,ImageWithAltValueInObjectDictionaryRendersImageWithAltAndTitleTag,The length of the statement  "            Assert.Equal("<img alt=\"this is an alt value\" src=\"/system/web/mvc.jpg\" title=\"this is an alt value\" />"' imageResult.ToHtmlString()); " is 140.
Long Statement,Microsoft.Web.Mvc.Test,ImageExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ImageExtensionsTest.cs,ImageWithAltValueHtmlAttributeEncodesAltTag,The length of the statement  "            Assert.Equal("<img alt=\"&lt;&quot;>\" src=\"/system/web/mvc.jpg\" title=\"&lt;&quot;>\" />"' imageResult.ToHtmlString()); " is 122.
Long Statement,Microsoft.Web.Mvc.Test,ImageExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ImageExtensionsTest.cs,ImageWithAltValueInObjectDictionaryHtmlAttributeEncodesAltTag,The length of the statement  "            Assert.Equal("<img alt=\"this is an alt value\" src=\"/system/web/mvc.jpg\" title=\"this is an alt value\" />"' imageResult.ToHtmlString()); " is 140.
Long Statement,Microsoft.Web.Mvc.Test,ImageExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ImageExtensionsTest.cs,ImageWithAltSpecifiedAndInDictionaryRendersExplicit,The length of the statement  "            Assert.Equal("<img alt=\"object-dictionary-alt\" src=\"/system/web/mvc.jpg\" title=\"object-dictionary-alt\" />"' imageResult.ToHtmlString()); " is 142.
Long Statement,Microsoft.Web.Mvc.Test,ImageExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ImageExtensionsTest.cs,ImageWithAltAndAttributesWithUnderscores,The length of the statement  "            Assert.Equal("<img alt=\"specified-alt\" foo-bar=\"baz\" src=\"/system/web/mvc.jpg\" title=\"specified-alt\" />"' imageResult.ToHtmlString()); " is 142.
Long Statement,Microsoft.Web.Mvc.Test,SubmitButtonExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\SubmitButtonExtensionsTest.cs,SubmitButtonWithNameAndTextRendersAttributes,The length of the statement  "            Assert.Equal("<input id=\"button-name\" name=\"button-name\" type=\"submit\" value=\"button-text\" />"' button.ToHtmlString()); " is 127.
Long Statement,Microsoft.Web.Mvc.Test,SubmitButtonExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\SubmitButtonExtensionsTest.cs,SubmitButtonWithNameAndValueRendersBothAttributes,The length of the statement  "            Assert.Equal("<input id=\"button-id\" name=\"button-name\" type=\"submit\" value=\"button-value\" />"' button.ToHtmlString()); " is 126.
Long Statement,Microsoft.Web.Mvc.Test,SubmitButtonExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\SubmitButtonExtensionsTest.cs,SubmitButtonWithNameAndIdRendersBothAttributesCorrectly,The length of the statement  "            Assert.Equal("<input id=\"button-id\" name=\"button-name\" type=\"submit\" value=\"button-value\" />"' button.ToHtmlString()); " is 126.
Long Statement,Microsoft.Web.Mvc.Test,SubmitButtonExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\SubmitButtonExtensionsTest.cs,SubmitButtonWithTypeAttributeRendersCorrectType,The length of the statement  "            Assert.Equal("<input id=\"specified-name\" name=\"specified-name\" type=\"not-submit\" value=\"button-value\" />"' button.ToHtmlString()); " is 138.
Long Statement,Microsoft.Web.Mvc.Test,SubmitButtonExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\SubmitButtonExtensionsTest.cs,SubmitButtonWithNameAndValueSpecifiedAndPassedInAsAttributeChoosesSpecified,The length of the statement  "            MvcHtmlString button = html.SubmitButton("specified-name"' "button-value"' new RouteValueDictionary(new { name = "name-attribute-value"' value = "value-attribute" })); " is 167.
Long Statement,Microsoft.Web.Mvc.Test,SubmitButtonExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\SubmitButtonExtensionsTest.cs,SubmitButtonWithNameAndValueSpecifiedAndPassedInAsAttributeChoosesSpecified,The length of the statement  "            Assert.Equal("<input id=\"specified-name\" name=\"name-attribute-value\" type=\"submit\" value=\"value-attribute\" />"' button.ToHtmlString()); " is 143.
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,BindingBehaviorAttributeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\BindingBehaviorAttributeTest.cs,Behavior_Property,The following statement contains a magic number: BindingBehavior expectedBehavior = (BindingBehavior)(-20);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ExtensibleModelBinderAdapterTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ExtensibleModelBinderAdapterTest.cs,BindModel_SuccessfulBind_RunsValidationAndReturnsModel,The following statement contains a magic number: mockIntBinder                  .Setup(o => o.BindModel(controllerContext' It.IsAny<ExtensibleModelBindingContext>()))                  .Returns(                      delegate(ControllerContext cc' ExtensibleModelBindingContext mbc)                      {                          Assert.Same(bindingContext.ModelMetadata' mbc.ModelMetadata);                          Assert.Equal("someName"' mbc.ModelName);                          Assert.Same(bindingContext.ValueProvider' mbc.ValueProvider);                            mbc.Model = 42;                          mbc.ValidationNode.Validating += delegate { validationCalled = true; };                          return true;                      });
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ExtensibleModelBinderAdapterTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ExtensibleModelBinderAdapterTest.cs,BindModel_SuccessfulBind_RunsValidationAndReturnsModel,The following statement contains a magic number: Assert.Equal(42' retVal);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ExtensibleModelBinderAdapterTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ExtensibleModelBinderAdapterTest.cs,BindModel_SuccessfulBind_ComplexTypeFallback_RunsValidationAndReturnsModel,The following statement contains a magic number: List<int> expectedModel = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ExtensibleModelBinderAdapterTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ExtensibleModelBinderAdapterTest.cs,BindModel_SuccessfulBind_ComplexTypeFallback_RunsValidationAndReturnsModel,The following statement contains a magic number: List<int> expectedModel = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ExtensibleModelBinderAdapterTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ExtensibleModelBinderAdapterTest.cs,BindModel_SuccessfulBind_ComplexTypeFallback_RunsValidationAndReturnsModel,The following statement contains a magic number: List<int> expectedModel = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ExtensibleModelBinderAdapterTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ExtensibleModelBinderAdapterTest.cs,BindModel_SuccessfulBind_ComplexTypeFallback_RunsValidationAndReturnsModel,The following statement contains a magic number: List<int> expectedModel = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ExtensibleModelBindingContextTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ExtensibleModelBindingContextTest.cs,ModelProperty,The following statement contains a magic number: MemberHelper.TestPropertyValue(bindingContext' "Model"' 42);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ExtensibleModelBindingContextTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ExtensibleModelBindingContextTest.cs,ModelAndModelTypeAreFedFromModelMetadata,The following statement contains a magic number: ExtensibleModelBindingContext bindingContext = new ExtensibleModelBindingContext              {                  ModelMetadata = ModelMetadataProviders.Current.GetMetadataForType(() => 42' typeof(int))              };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ExtensibleModelBindingContextTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ExtensibleModelBindingContextTest.cs,ModelAndModelTypeAreFedFromModelMetadata,The following statement contains a magic number: Assert.Equal(42' bindingContext.Model);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ExtensibleModelBindingContextTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ExtensibleModelBindingContextTest.cs,ValidationNodeProperty,The following statement contains a magic number: ExtensibleModelBindingContext bindingContext = new ExtensibleModelBindingContext              {                  ModelMetadata = ModelMetadataProviders.Current.GetMetadataForType(() => 42' typeof(int))              };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ExtensibleModelBindingContextTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ExtensibleModelBindingContextTest.cs,ValidationNodeProperty_DefaultValues,The following statement contains a magic number: ExtensibleModelBindingContext bindingContext = new ExtensibleModelBindingContext              {                  ModelMetadata = ModelMetadataProviders.Current.GetMetadataForType(() => 42' typeof(int))'                  ModelName = "theInt"              };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindComplexCollectionFromIndexes_FiniteIndexes,The following statement contains a magic number: Assert.Equal(new[] { 42' 0' 200 }' boundCollection.ToArray());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindComplexCollectionFromIndexes_FiniteIndexes,The following statement contains a magic number: Assert.Equal(new[] { 42' 0' 200 }' boundCollection.ToArray());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindComplexCollectionFromIndexes_InfiniteIndexes,The following statement contains a magic number: Assert.Equal(new[] { 42' 100 }' boundCollection.ToArray());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindComplexCollectionFromIndexes_InfiniteIndexes,The following statement contains a magic number: Assert.Equal(new[] { 42' 100 }' boundCollection.ToArray());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindModel_ComplexCollection,The following statement contains a magic number: Assert.Equal(new[] { 42' 100' 200 }' ((List<int>)bindingContext.Model).ToArray());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindModel_ComplexCollection,The following statement contains a magic number: Assert.Equal(new[] { 42' 100' 200 }' ((List<int>)bindingContext.Model).ToArray());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindModel_ComplexCollection,The following statement contains a magic number: Assert.Equal(new[] { 42' 100' 200 }' ((List<int>)bindingContext.Model).ToArray());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindModel_SimpleCollection,The following statement contains a magic number: Assert.Equal(new[] { 42' 100' 200 }' ((List<int>)bindingContext.Model).ToArray());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindModel_SimpleCollection,The following statement contains a magic number: Assert.Equal(new[] { 42' 100' 200 }' ((List<int>)bindingContext.Model).ToArray());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindModel_SimpleCollection,The following statement contains a magic number: Assert.Equal(new[] { 42' 100' 200 }' ((List<int>)bindingContext.Model).ToArray());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindSimpleCollection_SubBindingSucceeds,The following statement contains a magic number: mockIntBinder                  .Setup(o => o.BindModel(controllerContext' It.IsAny<ExtensibleModelBindingContext>()))                  .Returns(                      delegate(ControllerContext cc' ExtensibleModelBindingContext mbc)                      {                          Assert.Equal("someName"' mbc.ModelName);                          childValidationNode = mbc.ValidationNode;                          mbc.Model = 42;                          return true;                      });
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderTest.cs,BindSimpleCollection_SubBindingSucceeds,The following statement contains a magic number: Assert.Equal(new[] { 42 }' boundCollection.ToArray());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelImmutable_CreatesNewInstance,The following statement contains a magic number: CollectionModelBinderUtil.CreateOrReplaceCollection(bindingContext' new[] { 10' 20' 30 }' () => new List<int>());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelImmutable_CreatesNewInstance,The following statement contains a magic number: CollectionModelBinderUtil.CreateOrReplaceCollection(bindingContext' new[] { 10' 20' 30 }' () => new List<int>());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelImmutable_CreatesNewInstance,The following statement contains a magic number: CollectionModelBinderUtil.CreateOrReplaceCollection(bindingContext' new[] { 10' 20' 30 }' () => new List<int>());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelImmutable_CreatesNewInstance,The following statement contains a magic number: Assert.Equal(new[] { 10' 20' 30 }' newModel);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelImmutable_CreatesNewInstance,The following statement contains a magic number: Assert.Equal(new[] { 10' 20' 30 }' newModel);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelImmutable_CreatesNewInstance,The following statement contains a magic number: Assert.Equal(new[] { 10' 20' 30 }' newModel);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelMutable_UpdatesOriginalInstance,The following statement contains a magic number: List<int> originalInstance = new List<int> { 10' 20' 30 };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelMutable_UpdatesOriginalInstance,The following statement contains a magic number: List<int> originalInstance = new List<int> { 10' 20' 30 };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelMutable_UpdatesOriginalInstance,The following statement contains a magic number: List<int> originalInstance = new List<int> { 10' 20' 30 };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelMutable_UpdatesOriginalInstance,The following statement contains a magic number: CollectionModelBinderUtil.CreateOrReplaceCollection(bindingContext' new[] { 40' 50' 60 }' () => new List<int>());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelMutable_UpdatesOriginalInstance,The following statement contains a magic number: CollectionModelBinderUtil.CreateOrReplaceCollection(bindingContext' new[] { 40' 50' 60 }' () => new List<int>());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelMutable_UpdatesOriginalInstance,The following statement contains a magic number: CollectionModelBinderUtil.CreateOrReplaceCollection(bindingContext' new[] { 40' 50' 60 }' () => new List<int>());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelMutable_UpdatesOriginalInstance,The following statement contains a magic number: Assert.Equal(new[] { 40' 50' 60 }' originalInstance.ToArray());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelMutable_UpdatesOriginalInstance,The following statement contains a magic number: Assert.Equal(new[] { 40' 50' 60 }' originalInstance.ToArray());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelMutable_UpdatesOriginalInstance,The following statement contains a magic number: Assert.Equal(new[] { 40' 50' 60 }' originalInstance.ToArray());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelNotCollection_CreatesNewInstance,The following statement contains a magic number: CollectionModelBinderUtil.CreateOrReplaceCollection(bindingContext' new[] { 10' 20' 30 }' () => new List<int>());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelNotCollection_CreatesNewInstance,The following statement contains a magic number: CollectionModelBinderUtil.CreateOrReplaceCollection(bindingContext' new[] { 10' 20' 30 }' () => new List<int>());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelNotCollection_CreatesNewInstance,The following statement contains a magic number: CollectionModelBinderUtil.CreateOrReplaceCollection(bindingContext' new[] { 10' 20' 30 }' () => new List<int>());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelNotCollection_CreatesNewInstance,The following statement contains a magic number: Assert.Equal(new[] { 10' 20' 30 }' newModel);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelNotCollection_CreatesNewInstance,The following statement contains a magic number: Assert.Equal(new[] { 10' 20' 30 }' newModel);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceCollection_OriginalModelNotCollection_CreatesNewInstance,The following statement contains a magic number: Assert.Equal(new[] { 10' 20' 30 }' newModel);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceDictionary_DisallowsDuplicateKeys,The following statement contains a magic number: CollectionModelBinderUtil.CreateOrReplaceDictionary(                  bindingContext'                  new[]                  {                      new KeyValuePair<string' int>("forty-two"' 40)'                      new KeyValuePair<string' int>("forty-two"' 2)'                      new KeyValuePair<string' int>("forty-two"' 42)                  }'                  () => new Dictionary<string' int>());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceDictionary_DisallowsDuplicateKeys,The following statement contains a magic number: CollectionModelBinderUtil.CreateOrReplaceDictionary(                  bindingContext'                  new[]                  {                      new KeyValuePair<string' int>("forty-two"' 40)'                      new KeyValuePair<string' int>("forty-two"' 2)'                      new KeyValuePair<string' int>("forty-two"' 42)                  }'                  () => new Dictionary<string' int>());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceDictionary_DisallowsDuplicateKeys,The following statement contains a magic number: CollectionModelBinderUtil.CreateOrReplaceDictionary(                  bindingContext'                  new[]                  {                      new KeyValuePair<string' int>("forty-two"' 40)'                      new KeyValuePair<string' int>("forty-two"' 2)'                      new KeyValuePair<string' int>("forty-two"' 42)                  }'                  () => new Dictionary<string' int>());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceDictionary_DisallowsDuplicateKeys,The following statement contains a magic number: Assert.Equal(42' newModel["forty-two"]);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceDictionary_DisallowsNullKeys,The following statement contains a magic number: CollectionModelBinderUtil.CreateOrReplaceDictionary(                  bindingContext'                  new[]                  {                      new KeyValuePair<string' int>("forty-two"' 42)'                      new KeyValuePair<string' int>(null' 84)                  }'                  () => new Dictionary<string' int>());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceDictionary_DisallowsNullKeys,The following statement contains a magic number: CollectionModelBinderUtil.CreateOrReplaceDictionary(                  bindingContext'                  new[]                  {                      new KeyValuePair<string' int>("forty-two"' 42)'                      new KeyValuePair<string' int>(null' 84)                  }'                  () => new Dictionary<string' int>());
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,CreateOrReplaceDictionary_DisallowsNullKeys,The following statement contains a magic number: Assert.Equal(42' newModel["forty-two"]);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,CollectionModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\CollectionModelBinderUtilTest.cs,GetZeroBasedIndexes,The following statement contains a magic number: string[] indexes = CollectionModelBinderUtil.GetZeroBasedIndexes().Take(5).ToArray();
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ComplexModelDtoModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ComplexModelDtoModelBinderTest.cs,BindModel,The following statement contains a magic number: mockIntBinder                  .Setup(b => b.BindModel(controllerContext' It.IsAny<ExtensibleModelBindingContext>()))                  .Returns(                      delegate(ControllerContext cc' ExtensibleModelBindingContext mbc)                      {                          Assert.Equal(typeof(int)' mbc.ModelType);                          Assert.Equal("theModel.IntProperty"' mbc.ModelName);                          mbc.ValidationNode = new ModelValidationNode(mbc.ModelMetadata' "theModel.IntProperty");                          mbc.Model = 42;                          return true;                      });
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ComplexModelDtoModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ComplexModelDtoModelBinderTest.cs,BindModel,The following statement contains a magic number: Assert.Equal(42' intDtoResult.Model);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ArrayModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ArrayModelBinderTest.cs,BindModel,The following statement contains a magic number: Assert.Equal(new[] { 42' 84 }' array);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ArrayModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ArrayModelBinderTest.cs,BindModel,The following statement contains a magic number: Assert.Equal(new[] { 42' 84 }' array);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,DictionaryModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\DictionaryModelBinderTest.cs,BindModel,The following statement contains a magic number: ExtensibleModelBindingContext bindingContext = new ExtensibleModelBindingContext              {                  ModelMetadata = new EmptyModelMetadataProvider().GetMetadataForType(null' typeof(IDictionary<int' string>))'                  ModelName = "someName"'                  ModelBinderProviders = new ModelBinderProviderCollection()'                  ValueProvider = new SimpleValueProvider                  {                      { "someName[0]"' new KeyValuePair<int' string>(42' "forty-two") }'                      { "someName[1]"' new KeyValuePair<int' string>(84' "eighty-four") }                  }              };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,DictionaryModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\DictionaryModelBinderTest.cs,BindModel,The following statement contains a magic number: ExtensibleModelBindingContext bindingContext = new ExtensibleModelBindingContext              {                  ModelMetadata = new EmptyModelMetadataProvider().GetMetadataForType(null' typeof(IDictionary<int' string>))'                  ModelName = "someName"'                  ModelBinderProviders = new ModelBinderProviderCollection()'                  ValueProvider = new SimpleValueProvider                  {                      { "someName[0]"' new KeyValuePair<int' string>(42' "forty-two") }'                      { "someName[1]"' new KeyValuePair<int' string>(84' "eighty-four") }                  }              };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,DictionaryModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\DictionaryModelBinderTest.cs,BindModel,The following statement contains a magic number: Assert.Equal(2' dictionary.Count);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,DictionaryModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\DictionaryModelBinderTest.cs,BindModel,The following statement contains a magic number: Assert.Equal("forty-two"' dictionary[42]);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,DictionaryModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\DictionaryModelBinderTest.cs,BindModel,The following statement contains a magic number: Assert.Equal("eighty-four"' dictionary[84]);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,KeyValuePairModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\KeyValuePairModelBinderUtilTest.cs,TryBindStrongModel_BinderExists_BinderReturnsCorrectlyTypedObject_ReturnsTrue,The following statement contains a magic number: mockIntBinder                  .Setup(o => o.BindModel(controllerContext' It.IsAny<ExtensibleModelBindingContext>()))                  .Returns(                      delegate(ControllerContext cc' ExtensibleModelBindingContext mbc)                      {                          Assert.Equal("someName.key"' mbc.ModelName);                          mbc.Model = 42;                          return true;                      });
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,KeyValuePairModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\KeyValuePairModelBinderUtilTest.cs,TryBindStrongModel_BinderExists_BinderReturnsCorrectlyTypedObject_ReturnsTrue,The following statement contains a magic number: Assert.Equal(42' model);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,KeyValuePairModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\KeyValuePairModelBinderTest.cs,BindModel_MissingValue_ReturnsTrue,The following statement contains a magic number: mockIntBinder                  .Setup(o => o.BindModel(controllerContext' It.IsAny<ExtensibleModelBindingContext>()))                  .Returns(                      delegate(ControllerContext cc' ExtensibleModelBindingContext mbc)                      {                          mbc.Model = 42;                          return true;                      });
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,KeyValuePairModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\KeyValuePairModelBinderTest.cs,BindModel_SubBindingSucceeds,The following statement contains a magic number: mockIntBinder                  .Setup(o => o.BindModel(controllerContext' It.IsAny<ExtensibleModelBindingContext>()))                  .Returns(                      delegate(ControllerContext cc' ExtensibleModelBindingContext mbc)                      {                          mbc.Model = 42;                          return true;                      });
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,KeyValuePairModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\KeyValuePairModelBinderTest.cs,BindModel_SubBindingSucceeds,The following statement contains a magic number: Assert.Equal(new KeyValuePair<int' string>(42' "forty-two")' bindingContext.Model);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,KeyValuePairModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\KeyValuePairModelBinderProviderTest.cs,GetBinder_CorrectModelTypeAndValueProviderEntries_ReturnsBinder,The following statement contains a magic number: ExtensibleModelBindingContext bindingContext = new ExtensibleModelBindingContext              {                  ModelMetadata = new EmptyModelMetadataProvider().GetMetadataForType(null' typeof(KeyValuePair<int' string>))'                  ModelName = "foo"'                  ValueProvider = new SimpleValueProvider                  {                      { "foo.key"' 42 }'                      { "foo.value"' "someValue" }                  }              };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,KeyValuePairModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\KeyValuePairModelBinderProviderTest.cs,GetBinder_ModelTypeIsIncorrect_ReturnsNull,The following statement contains a magic number: ExtensibleModelBindingContext bindingContext = new ExtensibleModelBindingContext              {                  ModelMetadata = new EmptyModelMetadataProvider().GetMetadataForType(null' typeof(List<int>))'                  ModelName = "foo"'                  ValueProvider = new SimpleValueProvider                  {                      { "foo.key"' 42 }'                      { "foo.value"' "someValue" }                  }              };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,KeyValuePairModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\KeyValuePairModelBinderProviderTest.cs,GetBinder_ValueProviderDoesNotContainValueProperty_ReturnsNull,The following statement contains a magic number: ExtensibleModelBindingContext bindingContext = new ExtensibleModelBindingContext              {                  ModelMetadata = new EmptyModelMetadataProvider().GetMetadataForType(null' typeof(KeyValuePair<int' string>))'                  ModelName = "foo"'                  ValueProvider = new SimpleValueProvider                  {                      { "foo.key"' 42 }                  }              };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderProviderTest.cs,GetBinder_NoPrefixInValueProvider_ReturnsNull,The following statement contains a magic number: ExtensibleModelBindingContext bindingContext = new ExtensibleModelBindingContext              {                  ModelMetadata = new EmptyModelMetadataProvider().GetMetadataForType(() => 42' typeof(int))'                  ModelName = "foo"'                  ValueProvider = new SimpleValueProvider()              };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderProviderTest.cs,GetBinder_PrefixInValueProvider_ReturnsBinder,The following statement contains a magic number: ExtensibleModelBindingContext bindingContext = new ExtensibleModelBindingContext              {                  ModelMetadata = new EmptyModelMetadataProvider().GetMetadataForType(() => 42' typeof(int))'                  ModelName = "foo"'                  ValueProvider = new SimpleValueProvider                  {                      { "foo.bar"' "someValue" }                  }              };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,ProcessDto_BindRequiredFieldMissing_Throws,The following statement contains a magic number: ModelWithBindRequired model = new ModelWithBindRequired              {                  Name = "original value"'                  Age = -20              };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,ProcessDto_BindRequiredFieldMissing_Throws,The following statement contains a magic number: Assert.Equal(-20' model.Age);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,ProcessDto_Success,The following statement contains a magic number: DateTime dob = new DateTime(2001' 1' 1);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,SetProperty_PropertyHasDefaultValue_SetsDefaultValue,The following statement contains a magic number: Assert.Equal(123.456m' person.PropertyWithDefaultValue);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,SetProperty_PropertyIsSettable_CallsSetter,The following statement contains a magic number: ComplexModelDtoResult dtoResult = new ComplexModelDtoResult(new DateTime(2001' 1' 1)' validationNode);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,SetProperty_PropertyIsSettable_CallsSetter,The following statement contains a magic number: Assert.Equal(new DateTime(2001' 1' 1)' model.DateOfBirth);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,SetProperty_PropertyIsSettable_SetterThrows_RecordsError,The following statement contains a magic number: Person model = new Person              {                  DateOfBirth = new DateTime(1900' 1' 1)              };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,MutableObjectModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\MutableObjectModelBinderTest.cs,SetProperty_PropertyIsSettable_SetterThrows_RecordsError,The following statement contains a magic number: ComplexModelDtoResult dtoResult = new ComplexModelDtoResult(new DateTime(1800' 1' 1)' validationNode);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,TypeConverterModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\TypeConverterModelBinderTest.cs,BindModel_ValidValueProviderResult_ReturnsModel,The following statement contains a magic number: Assert.Equal(42' bindingContext.Model);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,SimpleModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\SimpleModelBinderProviderTest.cs,GetBinder_TypeMatches_PrefixSuppressed_ReturnsFactoryInstance,The following statement contains a magic number: Assert.Equal(2' numExecutions);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,TypeMatchModelBinderProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\TypeMatchModelBinderProviderTest.cs,BindModel_ValidValueProviderResult_ReturnsBinder,The following statement contains a magic number: bindingContext.ValueProvider = new SimpleValueProvider              {                  { "theModelName"' 42 }              };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,TypeMatchModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\TypeMatchModelBinderTest.cs,BindModel_ValidValueProviderResult_ReturnsTrue,The following statement contains a magic number: bindingContext.ValueProvider = new SimpleValueProvider              {                  { "theModelName"' 42 }              };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,TypeMatchModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\TypeMatchModelBinderTest.cs,BindModel_ValidValueProviderResult_ReturnsTrue,The following statement contains a magic number: Assert.Equal(42' bindingContext.Model);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,TypeMatchModelBinderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\TypeMatchModelBinderTest.cs,GetCompatibleValueProviderResult_ValueProviderResultValid_ReturnsValueProviderResult,The following statement contains a magic number: bindingContext.ValueProvider = new SimpleValueProvider              {                  { "theModelName"' 42 }              };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,CastOrDefault_CorrectType_ReturnsInput,The following statement contains a magic number: int retVal = ModelBinderUtil.CastOrDefault<int>(42);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,CastOrDefault_CorrectType_ReturnsInput,The following statement contains a magic number: Assert.Equal(42' retVal);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,CastOrDefault_IncorrectType_ReturnsDefaultTModel,The following statement contains a magic number: DateTime retVal = ModelBinderUtil.CastOrDefault<DateTime>(42);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,CreateIndexModelName_EmptyParentName,The following statement contains a magic number: string fullChildName = ModelBinderUtil.CreateIndexModelName(""' 42);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,CreateIndexModelName_IntIndex,The following statement contains a magic number: string fullChildName = ModelBinderUtil.CreateIndexModelName("parentName"' 42);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,RawValueToObjectArray_RawValueIsEnumerable_ReturnsInputAsArray,The following statement contains a magic number: List<int> original = new List<int> { 1' 2' 3' 4 };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,RawValueToObjectArray_RawValueIsEnumerable_ReturnsInputAsArray,The following statement contains a magic number: List<int> original = new List<int> { 1' 2' 3' 4 };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,RawValueToObjectArray_RawValueIsEnumerable_ReturnsInputAsArray,The following statement contains a magic number: List<int> original = new List<int> { 1' 2' 3' 4 };
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,RawValueToObjectArray_RawValueIsEnumerable_ReturnsInputAsArray,The following statement contains a magic number: Assert.Equal(new object[] { 1' 2' 3' 4 }' retVal);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,RawValueToObjectArray_RawValueIsEnumerable_ReturnsInputAsArray,The following statement contains a magic number: Assert.Equal(new object[] { 1' 2' 3' 4 }' retVal);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,RawValueToObjectArray_RawValueIsEnumerable_ReturnsInputAsArray,The following statement contains a magic number: Assert.Equal(new object[] { 1' 2' 3' 4 }' retVal);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,RawValueToObjectArray_RawValueIsObject_WrapsObjectInSingleElementArray,The following statement contains a magic number: object[] retVal = ModelBinderUtil.RawValueToObjectArray(42);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,RawValueToObjectArray_RawValueIsObject_WrapsObjectInSingleElementArray,The following statement contains a magic number: Assert.Equal(new object[] { 42 }' retVal);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,RawValueToObjectArray_RawValueIsObjectArray_ReturnsInputInstance,The following statement contains a magic number: object[] original = new object[2];
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,ReplaceEmptyStringWithNull_ConvertEmptyStringToNullDisabled_ModelIsNotEmptyString_LeavesModelAlone,The following statement contains a magic number: object model = 42;
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,ReplaceEmptyStringWithNull_ConvertEmptyStringToNullDisabled_ModelIsNotEmptyString_LeavesModelAlone,The following statement contains a magic number: Assert.Equal(42' model);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ModelBinderUtilTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelBinderUtilTest.cs,ValidateBindingContextThrowsIfModelInstanceIsWrongType,The following statement contains a magic number: bindingContext.ModelMetadata.Model = 42;
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ModelValidationNodeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelValidationNodeTest.cs,CombineWith,The following statement contains a magic number: parentNode2.ChildNodes.Add(allChildNodes[2]);
Magic Number,Microsoft.Web.Mvc.ModelBinding.Test,ModelValidationNodeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\ModelBinding\Test\ModelValidationNodeTest.cs,CombineWith_OtherNodeIsSuppressed_DoesNothing,The following statement contains a magic number: parentNode2.ChildNodes.Add(allChildNodes[2]);
Magic Number,Microsoft.Web.Mvc.Test,ControllerExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ControllerExtensionsTest.cs,RedirectToAction_DifferentController,The following statement contains a magic number: RedirectToRouteResult result = new SampleController().RedirectToAction<DifferentController>(x => x.SomeOtherMethod(84));
Magic Number,Microsoft.Web.Mvc.Test,ControllerExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ControllerExtensionsTest.cs,RedirectToAction_DifferentController,The following statement contains a magic number: Assert.Equal(3' result.RouteValues.Count);
Magic Number,Microsoft.Web.Mvc.Test,ControllerExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ControllerExtensionsTest.cs,RedirectToAction_DifferentController,The following statement contains a magic number: Assert.Equal(84' result.RouteValues["someOtherParameter"]);
Magic Number,Microsoft.Web.Mvc.Test,ControllerExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ControllerExtensionsTest.cs,RedirectToAction_SameController,The following statement contains a magic number: RedirectToRouteResult result = new SampleController().RedirectToAction(x => x.SomeMethod(42));
Magic Number,Microsoft.Web.Mvc.Test,ControllerExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ControllerExtensionsTest.cs,RedirectToAction_SameController,The following statement contains a magic number: Assert.Equal(3' result.RouteValues.Count);
Magic Number,Microsoft.Web.Mvc.Test,ControllerExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ControllerExtensionsTest.cs,RedirectToAction_SameController,The following statement contains a magic number: Assert.Equal(42' result.RouteValues["someParameter"]);
Magic Number,Microsoft.Web.Mvc.Test,ControllerExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ControllerExtensionsTest.cs,RedirectToAction_ThrowsIfControllerIsNull,The following statement contains a magic number: Assert.ThrowsArgumentNull(                  delegate { ((SampleController)null).RedirectToAction(x => x.SomeMethod(42)); }' "controller");
Magic Number,Microsoft.Web.Mvc.Test,CookieTempDataProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\CookieTempDataProviderTest.cs,SaveTempDataStoresSerializedFormInCookie,The following statement contains a magic number: tempData.Add("Testing2"' 1.23);
Magic Number,Microsoft.Web.Mvc.Test,CookieTempDataProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\CookieTempDataProviderTest.cs,SaveTempDataStoresSerializedFormInCookie,The following statement contains a magic number: Assert.Equal(1.23' deserializedTempData["Testing2"]);
Magic Number,Microsoft.Web.Mvc.Test,CookieTempDataProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\CookieTempDataProviderTest.cs,CanLoadTempDataFromCookie,The following statement contains a magic number: tempData.Add("price"' 1.234);
Magic Number,Microsoft.Web.Mvc.Test,CookieTempDataProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\CookieTempDataProviderTest.cs,CanLoadTempDataFromCookie,The following statement contains a magic number: Assert.Equal(2' loadedTempData.Count);
Magic Number,Microsoft.Web.Mvc.Test,CookieTempDataProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\CookieTempDataProviderTest.cs,CanLoadTempDataFromCookie,The following statement contains a magic number: Assert.Equal(1.234' loadedTempData["price"]);
Magic Number,Microsoft.Web.Mvc.Test,DynamicReflectionObjectTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\DynamicReflectionObjectTest.cs,UnknownPropertyThrows,The following statement contains a magic number: dynamic dro = DynamicReflectionObject.Wrap(new { foo = 3.4' biff = "Two"' bar = 1 });
Magic Number,Microsoft.Web.Mvc.Test,DynamicReflectionObjectTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\DynamicReflectionObjectTest.cs,CanAccessProperties,The following statement contains a magic number: dynamic dro = DynamicReflectionObject.Wrap(new { foo = "Hello world!"' bar = 42 });
Magic Number,Microsoft.Web.Mvc.Test,DynamicReflectionObjectTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\DynamicReflectionObjectTest.cs,CanAccessProperties,The following statement contains a magic number: Assert.Equal(42' dro.bar);
Magic Number,Microsoft.Web.Mvc.Test,DynamicViewDataDictionaryTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\DynamicViewDataDictionaryTest.cs,Indexer_GuardClauses,The following statement contains a magic number: Assert.Throws<ArgumentException>(                  () => { var x = dvdd[42]; }'                  "DynamicViewDataDictionary only supports string-based indexers.");
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_FromIsNull_DoesNothing,The following statement contains a magic number: List<int> to = new List<int> { 1' 2' 3 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_FromIsNull_DoesNothing,The following statement contains a magic number: List<int> to = new List<int> { 1' 2' 3 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_FromIsNull_DoesNothing,The following statement contains a magic number: Assert.Equal(new[] { 1' 2' 3 }' to.ToArray());
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_FromIsNull_DoesNothing,The following statement contains a magic number: Assert.Equal(new[] { 1' 2' 3 }' to.ToArray());
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsImmutable_DoesNothing,The following statement contains a magic number: List<int> from = new List<int> { 1' 2' 3 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsImmutable_DoesNothing,The following statement contains a magic number: List<int> from = new List<int> { 1' 2' 3 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsImmutable_DoesNothing,The following statement contains a magic number: ICollection<int> to = new ReadOnlyCollection<int>(new[] { 4' 5' 6 });
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsImmutable_DoesNothing,The following statement contains a magic number: ICollection<int> to = new ReadOnlyCollection<int>(new[] { 4' 5' 6 });
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsImmutable_DoesNothing,The following statement contains a magic number: ICollection<int> to = new ReadOnlyCollection<int>(new[] { 4' 5' 6 });
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsImmutable_DoesNothing,The following statement contains a magic number: Assert.Equal(new[] { 1' 2' 3 }' from.ToArray());
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsImmutable_DoesNothing,The following statement contains a magic number: Assert.Equal(new[] { 1' 2' 3 }' from.ToArray());
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsImmutable_DoesNothing,The following statement contains a magic number: Assert.Equal(new[] { 4' 5' 6 }' to.ToArray());
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsImmutable_DoesNothing,The following statement contains a magic number: Assert.Equal(new[] { 4' 5' 6 }' to.ToArray());
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsImmutable_DoesNothing,The following statement contains a magic number: Assert.Equal(new[] { 4' 5' 6 }' to.ToArray());
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsMmutable_ClearsAndCopies,The following statement contains a magic number: List<int> from = new List<int> { 1' 2' 3 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsMmutable_ClearsAndCopies,The following statement contains a magic number: List<int> from = new List<int> { 1' 2' 3 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsMmutable_ClearsAndCopies,The following statement contains a magic number: ICollection<int> to = new List<int> { 4' 5' 6 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsMmutable_ClearsAndCopies,The following statement contains a magic number: ICollection<int> to = new List<int> { 4' 5' 6 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsMmutable_ClearsAndCopies,The following statement contains a magic number: ICollection<int> to = new List<int> { 4' 5' 6 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsMmutable_ClearsAndCopies,The following statement contains a magic number: Assert.Equal(new[] { 1' 2' 3 }' from.ToArray());
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsMmutable_ClearsAndCopies,The following statement contains a magic number: Assert.Equal(new[] { 1' 2' 3 }' from.ToArray());
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsMmutable_ClearsAndCopies,The following statement contains a magic number: Assert.Equal(new[] { 1' 2' 3 }' to.ToArray());
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsMmutable_ClearsAndCopies,The following statement contains a magic number: Assert.Equal(new[] { 1' 2' 3 }' to.ToArray());
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsNull_DoesNothing,The following statement contains a magic number: List<int> from = new List<int> { 1' 2' 3 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsNull_DoesNothing,The following statement contains a magic number: List<int> from = new List<int> { 1' 2' 3 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsNull_DoesNothing,The following statement contains a magic number: Assert.Equal(new[] { 1' 2' 3 }' from.ToArray());
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyCollection_ToIsNull_DoesNothing,The following statement contains a magic number: Assert.Equal(new[] { 1' 2' 3 }' from.ToArray());
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_ExactTypeMatch_Copies,The following statement contains a magic number: GenericModel<int> from = new GenericModel<int> { TheProperty = 21 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_ExactTypeMatch_Copies,The following statement contains a magic number: GenericModel<int> to = new GenericModel<int> { TheProperty = 42 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_ExactTypeMatch_Copies,The following statement contains a magic number: Assert.Equal(21' from.TheProperty);
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_ExactTypeMatch_Copies,The following statement contains a magic number: Assert.Equal(21' to.TheProperty);
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_FromIsNull_DoesNothing,The following statement contains a magic number: GenericModel<int> to = new GenericModel<int> { TheProperty = 42 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_FromIsNull_DoesNothing,The following statement contains a magic number: Assert.Equal(42' to.TheProperty);
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_LiftedTypeMatch_ActualValueIsNotNull_Copies,The following statement contains a magic number: GenericModel<int?> from = new GenericModel<int?> { TheProperty = 21 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_LiftedTypeMatch_ActualValueIsNotNull_Copies,The following statement contains a magic number: GenericModel<int> to = new GenericModel<int> { TheProperty = 42 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_LiftedTypeMatch_ActualValueIsNotNull_Copies,The following statement contains a magic number: Assert.Equal(21' from.TheProperty);
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_LiftedTypeMatch_ActualValueIsNotNull_Copies,The following statement contains a magic number: Assert.Equal(21' to.TheProperty);
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_LiftedTypeMatch_ActualValueIsNull_DoesNothing,The following statement contains a magic number: GenericModel<int> to = new GenericModel<int> { TheProperty = 42 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_LiftedTypeMatch_ActualValueIsNull_DoesNothing,The following statement contains a magic number: Assert.Equal(42' to.TheProperty);
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_NoTypeMatch_DoesNothing,The following statement contains a magic number: GenericModel<int> from = new GenericModel<int> { TheProperty = 21 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_NoTypeMatch_DoesNothing,The following statement contains a magic number: GenericModel<long> to = new GenericModel<long> { TheProperty = 42 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_NoTypeMatch_DoesNothing,The following statement contains a magic number: Assert.Equal(21' from.TheProperty);
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_NoTypeMatch_DoesNothing,The following statement contains a magic number: Assert.Equal(42' to.TheProperty);
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_SubclassedTypeMatch_Copies,The following statement contains a magic number: GenericModel<object> to = new GenericModel<object> { TheProperty = 42 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_ToDoesNotContainProperty_DoesNothing,The following statement contains a magic number: GenericModel<int> from = new GenericModel<int> { TheProperty = 21 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_ToDoesNotContainProperty_DoesNothing,The following statement contains a magic number: OtherGenericModel<int> to = new OtherGenericModel<int> { SomeOtherProperty = 42 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_ToDoesNotContainProperty_DoesNothing,The following statement contains a magic number: Assert.Equal(21' from.TheProperty);
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_ToDoesNotContainProperty_DoesNothing,The following statement contains a magic number: Assert.Equal(42' to.SomeOtherProperty);
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_ToIsNull_DoesNothing,The following statement contains a magic number: GenericModel<int> from = new GenericModel<int> { TheProperty = 21 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_ToIsNull_DoesNothing,The following statement contains a magic number: Assert.Equal(21' from.TheProperty);
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_ToIsReadOnly_DoesNothing,The following statement contains a magic number: GenericModel<int> from = new GenericModel<int> { TheProperty = 21 };
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_ToIsReadOnly_DoesNothing,The following statement contains a magic number: ReadOnlyGenericModel<int> to = new ReadOnlyGenericModel<int>(42);
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_ToIsReadOnly_DoesNothing,The following statement contains a magic number: Assert.Equal(21' from.TheProperty);
Magic Number,Microsoft.Web.Mvc.Test,ModelCopierTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ModelCopierTest.cs,CopyModel_ToIsReadOnly_DoesNothing,The following statement contains a magic number: Assert.Equal(42' to.TheProperty);
Magic Number,Microsoft.Web.Mvc.Test,ElementalValueProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ElementalValueProviderTest.cs,ContainsPrefix,The following statement contains a magic number: ElementalValueProvider valueProvider = new ElementalValueProvider("foo"' 42' null);
Magic Number,Microsoft.Web.Mvc.Test,ElementalValueProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ElementalValueProviderTest.cs,GetValue_NameDoesNotMatch_ReturnsNull,The following statement contains a magic number: DateTime rawValue = new DateTime(2001' 1' 2);
Magic Number,Microsoft.Web.Mvc.Test,ElementalValueProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ElementalValueProviderTest.cs,GetValue_NameDoesNotMatch_ReturnsNull,The following statement contains a magic number: DateTime rawValue = new DateTime(2001' 1' 2);
Magic Number,Microsoft.Web.Mvc.Test,ElementalValueProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ElementalValueProviderTest.cs,GetValue_NameMatches_ReturnsValueProviderResult,The following statement contains a magic number: DateTime rawValue = new DateTime(2001' 1' 2);
Magic Number,Microsoft.Web.Mvc.Test,ElementalValueProviderTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ElementalValueProviderTest.cs,GetValue_NameMatches_ReturnsValueProviderResult,The following statement contains a magic number: DateTime rawValue = new DateTime(2001' 1' 2);
Magic Number,Microsoft.Web.Mvc.Test,DeserializeAttributeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\DeserializeAttributeTest.cs,BinderReturnsDeserializedValue,The following statement contains a magic number: mockSerializer.Setup(o => o.Deserialize("some-value"' SerializationMode.EncryptedAndSigned)).Returns(42);
Magic Number,Microsoft.Web.Mvc.Test,DeserializeAttributeTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\DeserializeAttributeTest.cs,BinderReturnsDeserializedValue,The following statement contains a magic number: Assert.Equal(42' retVal);
Magic Number,Microsoft.Web.Mvc.Test,SerializationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\SerializationExtensionsTest.cs,SerializeFromProvidedValueOverridesViewData,The following statement contains a magic number: ViewDataDictionary vdd = new ViewDataDictionary              {                  { "someKey"' 42 }              };
Magic Number,Microsoft.Web.Mvc.Test,SerializationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\SerializationExtensionsTest.cs,SerializeFromViewData,The following statement contains a magic number: ViewDataDictionary vdd = new ViewDataDictionary              {                  { "someKey"' 42 }              };
Magic Number,Microsoft.Web.Mvc.Test,SerializationExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\SerializationExtensionsTest.cs,SerializeFromViewData,The following statement contains a magic number: mockSerializer.Setup(o => o.Serialize(42' SerializationMode.EncryptedAndSigned)).Returns("some-other-value");
Magic Number,Microsoft.Web.Mvc.Test,MvcSerializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\MvcSerializerTest.cs,SerializeAndDeserializeRoundTripsValue,The following statement contains a magic number: string serializedValue = MvcSerializer.Serialize(42' SerializationMode.EncryptedAndSigned' machineKey);
Magic Number,Microsoft.Web.Mvc.Test,MvcSerializerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\MvcSerializerTest.cs,SerializeAndDeserializeRoundTripsValue,The following statement contains a magic number: Assert.Equal(42' deserializedValue);
Magic Number,Microsoft.Web.Mvc.Test,ExpressionHelperTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ExpressionHelperTest.cs,BuildRouteValueDictionaryWithoutControllerSuffixThrowsInvalidOperationException,The following statement contains a magic number: Expression<Action<TestControllerNot>> index = (c => c.Index(123));
Magic Number,Microsoft.Web.Mvc.Test,ExpressionHelperTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ExpressionHelperTest.cs,BuildRouteValueDictionaryAddsControllerNameToDictionary,The following statement contains a magic number: Expression<Action<TestController>> index = (c => c.Index(123));
Magic Number,Microsoft.Web.Mvc.Test,ExpressionHelperTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ExpressionHelperTest.cs,BuildRouteValueDictionaryFromExpressionReturnsCorrectDictionary,The following statement contains a magic number: Expression<Action<TestController>> index = (c => c.Index(123));
Magic Number,Microsoft.Web.Mvc.Test,ExpressionHelperTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ExpressionHelperTest.cs,BuildRouteValueDictionaryFromExpressionReturnsCorrectDictionary,The following statement contains a magic number: Assert.Equal(123' rvd["page"]);
Magic Number,Microsoft.Web.Mvc.Test,ReaderWriterCacheTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ReaderWriterCacheTest.cs,PublicFetchOrCreateItemCreatesItemIfNotAlreadyInCache,The following statement contains a magic number: string item = helper.PublicFetchOrCreateItem(42' () => "new");
Magic Number,Microsoft.Web.Mvc.Test,ReaderWriterCacheTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ReaderWriterCacheTest.cs,PublicFetchOrCreateItemCreatesItemIfNotAlreadyInCache,The following statement contains a magic number: Assert.Equal("new"' cache[42]);
Magic Number,Microsoft.Web.Mvc.Test,ReaderWriterCacheTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ReaderWriterCacheTest.cs,PublicFetchOrCreateItemReturnsExistingItemIfFound,The following statement contains a magic number: helper.PublicCache[42] = "original";
Magic Number,Microsoft.Web.Mvc.Test,ReaderWriterCacheTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ReaderWriterCacheTest.cs,PublicFetchOrCreateItemReturnsExistingItemIfFound,The following statement contains a magic number: string item = helper.PublicFetchOrCreateItem(42' () => "new");
Magic Number,Microsoft.Web.Mvc.Test,ReaderWriterCacheTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ReaderWriterCacheTest.cs,PublicFetchOrCreateItemReturnsExistingItemIfFound,The following statement contains a magic number: Assert.Equal("original"' cache[42]);
Magic Number,Microsoft.Web.Mvc.Test,ReaderWriterCacheTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ReaderWriterCacheTest.cs,PublicFetchOrCreateItemReturnsFirstItemIfTwoThreadsUpdateCacheSimultaneously,The following statement contains a magic number: Func<string> creator = delegate              {                  // fake a second thread coming along when we weren't looking                  string firstItem = helper.PublicFetchOrCreateItem(42' () => "original");                    Assert.Equal("original"' cache[42]);                  Assert.Equal("original"' firstItem);                  return "new";              };
Magic Number,Microsoft.Web.Mvc.Test,ReaderWriterCacheTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ReaderWriterCacheTest.cs,PublicFetchOrCreateItemReturnsFirstItemIfTwoThreadsUpdateCacheSimultaneously,The following statement contains a magic number: Func<string> creator = delegate              {                  // fake a second thread coming along when we weren't looking                  string firstItem = helper.PublicFetchOrCreateItem(42' () => "original");                    Assert.Equal("original"' cache[42]);                  Assert.Equal("original"' firstItem);                  return "new";              };
Magic Number,Microsoft.Web.Mvc.Test,ReaderWriterCacheTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ReaderWriterCacheTest.cs,PublicFetchOrCreateItemReturnsFirstItemIfTwoThreadsUpdateCacheSimultaneously,The following statement contains a magic number: string secondItem = helper.PublicFetchOrCreateItem(42' creator);
Magic Number,Microsoft.Web.Mvc.Test,ReaderWriterCacheTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ReaderWriterCacheTest.cs,PublicFetchOrCreateItemReturnsFirstItemIfTwoThreadsUpdateCacheSimultaneously,The following statement contains a magic number: Assert.Equal("original"' cache[42]);
Magic Number,Microsoft.Web.Mvc.Test,RenderActionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RenderActionTest.cs,RenderActionUsingExpressionRendersCorrectly,The following statement contains a magic number: html.RenderAction<TestController>(c => c.About(76));
Magic Number,Microsoft.Web.Mvc.Test,RenderActionTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RenderActionTest.cs,RenderActionUsingExpressionRendersCorrectly,The following statement contains a magic number: Assert.Equal(76' requestContext.RouteData.Values["page"]);
Magic Number,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListNothingSelected,The following statement contains a magic number: Assert.Equal(@"<input id=""FooList"" name=""FooList"" type=""radio"" value=""baz"" />"' html[2].ToHtmlString());
Magic Number,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListItemSelected,The following statement contains a magic number: Assert.Equal(@"<input checked=""checked"" id=""FooList"" name=""FooList"" type=""radio"" value=""baz"" />"' html[2].ToHtmlString());
Magic Number,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListItemSelectedWithValueFromViewData,The following statement contains a magic number: Assert.Equal(@"<input id=""FooList"" name=""FooList"" type=""radio"" value=""baz"" />"' html[2].ToHtmlString());
Magic Number,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithObjectAttributes,The following statement contains a magic number: Assert.Equal(@"<input attr1=""value1"" checked=""checked"" id=""FooList"" name=""FooList"" type=""radio"" value=""baz"" />"' html[2].ToHtmlString());
Magic Number,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithObjectAttributesWithUnderscores,The following statement contains a magic number: Assert.Equal(@"<input checked=""checked"" foo-bar=""baz"" id=""FooList"" name=""FooList"" type=""radio"" value=""baz"" />"' html[2].ToHtmlString());
Magic Number,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithDictionaryAttributes,The following statement contains a magic number: Assert.Equal(@"<input attr1=""value1"" checked=""checked"" id=""FooList"" name=""FooList"" type=""radio"" value=""baz"" />"' html[2].ToHtmlString());
Magic Number,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListNothingSelectedWithSelectListFromViewData,The following statement contains a magic number: Assert.Equal(@"<input id=""FooList"" name=""FooList"" type=""radio"" value=""baz"" />"' html[2].ToHtmlString());
Magic Number,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListItemSelectedWithSelectListFromViewData,The following statement contains a magic number: Assert.Equal(@"<input checked=""checked"" id=""FooList"" name=""FooList"" type=""radio"" value=""baz"" />"' html[2].ToHtmlString());
Magic Number,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithObjectAttributesWithSelectListFromViewData,The following statement contains a magic number: Assert.Equal(@"<input attr1=""value1"" checked=""checked"" id=""FooList"" name=""FooList"" type=""radio"" value=""baz"" />"' html[2].ToHtmlString());
Magic Number,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithObjectAttributesWithUnderscoresWithSelectListFromViewData,The following statement contains a magic number: Assert.Equal(@"<input checked=""checked"" foo-bar=""baz"" id=""FooList"" name=""FooList"" type=""radio"" value=""baz"" />"' html[2].ToHtmlString());
Magic Number,Microsoft.Web.Mvc.Test,RadioExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\RadioExtensionsTest.cs,RadioButtonListWithDictionaryAttributesWithSelectListFromViewData,The following statement contains a magic number: Assert.Equal(@"<input attr1=""value1"" checked=""checked"" id=""FooList"" name=""FooList"" type=""radio"" value=""baz"" />"' html[2].ToHtmlString());
Magic Number,Microsoft.Web.Mvc.Test,ImageExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ImageExtensionsTest.cs,ImageWithOtherAttributesRendersThoseAttributesCaseSensitively,The following statement contains a magic number: MvcHtmlString imageResult = html.Image("/system/web/mvc.jpg"' new { width = 100' Height = 200 });
Magic Number,Microsoft.Web.Mvc.Test,ImageExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ImageExtensionsTest.cs,ImageWithOtherAttributesRendersThoseAttributesCaseSensitively,The following statement contains a magic number: MvcHtmlString imageResult = html.Image("/system/web/mvc.jpg"' new { width = 100' Height = 200 });
Magic Number,Microsoft.Web.Mvc.Test,ImageExtensionsTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\Microsoft.Web.Mvc.Test\Test\ImageExtensionsTest.cs,ImageWithUrlAndDictionaryRendersAttributes,The following statement contains a magic number: var attributes = new RouteValueDictionary(new { width = 125 });
