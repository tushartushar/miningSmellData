Implementation smell,Namespace,Class,File,Method,Description
Long Statement,WebMatrix.Data.Test,ConfigurationManagerWrapperTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\WebMatrix.Data.Test\ConfigurationManagerWrapperTest.cs,GetConnectionGetsConnectionFromDataDirectoryIfFileWithSupportedExtensionExists,The length of the statement  "            mockHandler.Setup(m => m.GetConnectionConfiguration(@"DataDirectory\Bar.foo")).Returns(new MockConnectionConfiguration("some file based connection")); " is 150.
Long Statement,WebMatrix.Data.Test,ConfigurationManagerWrapperTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\WebMatrix.Data.Test\ConfigurationManagerWrapperTest.cs,GetConnectionSdfAndMdfFile_MdfFileWins,The length of the statement  "            mockSdfHandler.Setup(m => m.GetConnectionConfiguration(@"DataDirectory\Bar.sdf")).Returns(new MockConnectionConfiguration("sdf connection")); " is 141.
Long Statement,WebMatrix.Data.Test,ConfigurationManagerWrapperTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\WebMatrix.Data.Test\ConfigurationManagerWrapperTest.cs,GetConnectionSdfAndMdfFile_MdfFileWins,The length of the statement  "            mockMdfHandler.Setup(m => m.GetConnectionConfiguration(@"DataDirectory\Bar.mdf")).Returns(new MockConnectionConfiguration("mdf connection")); " is 141.
Long Statement,WebMatrix.Data.Test,DynamicRecordTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\WebMatrix.Data.Test\DynamicRecordTest.cs,SetAndResetValueOnPropertyDescriptorThrows,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => aDescriptor.SetValue(record' 1)' "Unable to modify the value of column \"A\" because the record is read only."); " is 159.
Long Statement,WebMatrix.Data.Test,DynamicRecordTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\WebMatrix.Data.Test\DynamicRecordTest.cs,SetAndResetValueOnPropertyDescriptorThrows,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => aDescriptor.ResetValue(record)' "Unable to modify the value of column \"A\" because the record is read only."); " is 158.
Long Statement,WebMatrix.Data.Test,FileHandlerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\WebMatrix.Data.Test\FileHandlerTest.cs,SqlServerFileHandlerReturnsDataDirectoryRelativeConnectionStringIfPathIsNotRooted,The length of the statement  "            Assert.Equal(@"Data Source=.\SQLEXPRESS;AttachDbFilename=|DataDirectory|\foo.mdf;Initial Catalog=datadir\foo.mdf;Integrated Security=True;User Instance=True;MultipleActiveResultSets=True"' " is 188.
Long Statement,WebMatrix.Data.Test,FileHandlerTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\WebMatrix.Data.Test\FileHandlerTest.cs,SqlServerFileHandlerReturnsFullPathConnectionStringIfPathIsNotRooted,The length of the statement  "            Assert.Equal(@"Data Source=.\SQLEXPRESS;AttachDbFilename=c:\foo.mdf;Initial Catalog=c:\foo.mdf;Integrated Security=True;User Instance=True;MultipleActiveResultSets=True"' connectionString); " is 189.
Long Statement,WebMatrix.Data.Test,DatabaseTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\WebMatrix.Data.Test\DatabaseTest.cs,OpenNamedConnectionUsesConnectionStringFromConfigurationIfExists,The length of the statement  "            mockConfigurationManager.AddConnection("foo"' new ConnectionConfiguration(mockProviderFactory.Object' "connection string")); " is 124.
Long Statement,WebMatrix.Data.Test,DatabaseTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\WebMatrix.Data.Test\DatabaseTest.cs,OpenNamedConnectionThrowsIfNoConnectionFound,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Database.OpenNamedConnection("foo"' mockConfigurationManager)' "Connection string \"foo\" was not found."); " is 154.
Long Statement,WebMatrix.Data.Test,DatabaseTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\WebMatrix.Data.Test\DatabaseTest.cs,GetConnectionConfigurationGetConnectionForFileHandlersIfRegistered,The length of the statement  "            mockHandler.Setup(m => m.GetConnectionConfiguration("filename.foo")).Returns(new MockConnectionConfiguration("some file based connection")); " is 140.
Long Statement,WebMatrix.Data.Test,DatabaseTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\WebMatrix.Data.Test\DatabaseTest.cs,GetConnectionThrowsIfNoHandlersRegisteredForExtension,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => Database.GetConnectionConfiguration("filename.foo"' handlers)' "Unable to determine the provider for the database file \"filename.foo\"."); " is 186.
Magic Number,WebMatrix.Data.Test,DynamicRecordTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\WebMatrix.Data.Test\DynamicRecordTest.cs,GetFieldValueByNameAccessesUnderlyingRecordForValue,The following statement contains a magic number: mockRecord.SetupGet(m => m["B"]).Returns(2);
Magic Number,WebMatrix.Data.Test,DynamicRecordTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\WebMatrix.Data.Test\DynamicRecordTest.cs,GetFieldValueByNameAccessesUnderlyingRecordForValue,The following statement contains a magic number: Assert.Equal(2' record.B);
Magic Number,WebMatrix.Data.Test,DynamicRecordTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\WebMatrix.Data.Test\DynamicRecordTest.cs,GetFieldValueByIndexAccessesUnderlyingRecordForValue,The following statement contains a magic number: mockRecord.SetupGet(m => m[1]).Returns(2);
Magic Number,WebMatrix.Data.Test,DynamicRecordTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\WebMatrix.Data.Test\DynamicRecordTest.cs,GetFieldValueByIndexAccessesUnderlyingRecordForValue,The following statement contains a magic number: Assert.Equal(2' record[1]);
Magic Number,WebMatrix.Data.Test,DynamicRecordTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\WebMatrix.Data.Test\DynamicRecordTest.cs,VerfiyCustomTypeDescriptorMethods,The following statement contains a magic number: mockRecord.SetupGet(m => m["B"]).Returns(2);
Magic Number,WebMatrix.Data.Test,DynamicRecordTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\WebMatrix.Data.Test\DynamicRecordTest.cs,VerfiyCustomTypeDescriptorMethods,The following statement contains a magic number: Assert.Equal(2' record.GetProperties().Count);
Magic Number,WebMatrix.Data.Test,DynamicRecordTest,C:\research\architectureSmells\repos\mono_aspnetwebstack\test\WebMatrix.Data.Test\DynamicRecordTest.cs,VerfiyCustomTypeDescriptorMethods,The following statement contains a magic number: Assert.Equal(2' record.GetProperties(null).Count);
