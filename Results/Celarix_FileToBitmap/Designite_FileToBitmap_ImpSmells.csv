Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FileToBitmap.Forms,MainForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\MainForm.cs,ButtonSaveFile_Click,Cyclomatic complexity of the method is 14
Complex Method,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,Palette,Cyclomatic complexity of the method is 15
Long Parameter List,FileToBitmap.Drawing,TwoBppBitmap,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppBitmap.cs,TwoBppBitmap,The method has 6 parameters.
Long Statement,FileToBitmap.Drawing,BitmapBase,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\BitmapBase.cs,ToBitmap,The length of the statement  "	BitmapData data = bitmap.LockBits (new Rectangle (0' 0' bitmap.Width' bitmap.Height)' ImageLockMode.ReadWrite' PixelFormat.Format24bppRgb); " is 139.
Long Statement,FileToBitmap.Drawing,FourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\FourBppDrawer.cs,Draw,The length of the statement  "	FourBppBitmap bitmap = new FourBppBitmap (Drawer.GetImageSize (pixels.Length)' pixels' palette.Colors.ToArray<Color> ()); " is 121.
Long Statement,FileToBitmap.Drawing,OneBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\OneBppDrawer.cs,Draw,The length of the statement  "	OneBppBitmap bitmap = new OneBppBitmap (Drawer.GetImageSize (bits.Length)' bits' palette.GetColor (0)' palette.GetColor (1)); " is 125.
Long Statement,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The length of the statement  "	TwoBppBitmap bitmap = new TwoBppBitmap (Drawer.GetImageSize (twoBppValues.Length)' twoBppValues' palette.GetColor (0)' palette.GetColor (1)' palette.GetColor (2)' palette.GetColor (3)); " is 185.
Long Statement,FileToBitmap.Forms,MainForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\MainForm.cs,ButtonSaveFile_Click,The length of the statement  "		string extension = fileName.Substring (fileName.LastIndexOf ('.') + 1' (fileName.Length - 1) - fileName.LastIndexOf ('.')).ToLower (); " is 134.
Complex Conditional,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,ContainsOnlyHexDigits,The conditional expression  "!((c >= '0' && c <= '9') || (c >= 'A' && c <= 'F'))"  is complex.
Magic Number,FileToBitmap.Drawing,BitmapBase,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\BitmapBase.cs,ToBitmap,The following statement contains a magic number: for (int r = 0; r < bitmap.Height; r++) {  	for (int c = 0; c < bitmap.Width; c++) {  		Color color = Color.FromArgb (pixels [r' c]);  		bytes [(r * stride) + c * 3] = color.B;  		bytes [(r * stride) + c * 3 + 1] = color.G;  		bytes [(r * stride) + c * 3 + 2] = color.R;  	}  	if (worker.CancellationPending) {  		break;  	}  	worker.ReportProgress ((int)(((decimal)r / (decimal)bitmap.Height) * 100m));  }  
Magic Number,FileToBitmap.Drawing,BitmapBase,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\BitmapBase.cs,ToBitmap,The following statement contains a magic number: for (int r = 0; r < bitmap.Height; r++) {  	for (int c = 0; c < bitmap.Width; c++) {  		Color color = Color.FromArgb (pixels [r' c]);  		bytes [(r * stride) + c * 3] = color.B;  		bytes [(r * stride) + c * 3 + 1] = color.G;  		bytes [(r * stride) + c * 3 + 2] = color.R;  	}  	if (worker.CancellationPending) {  		break;  	}  	worker.ReportProgress ((int)(((decimal)r / (decimal)bitmap.Height) * 100m));  }  
Magic Number,FileToBitmap.Drawing,BitmapBase,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\BitmapBase.cs,ToBitmap,The following statement contains a magic number: for (int r = 0; r < bitmap.Height; r++) {  	for (int c = 0; c < bitmap.Width; c++) {  		Color color = Color.FromArgb (pixels [r' c]);  		bytes [(r * stride) + c * 3] = color.B;  		bytes [(r * stride) + c * 3 + 1] = color.G;  		bytes [(r * stride) + c * 3 + 2] = color.R;  	}  	if (worker.CancellationPending) {  		break;  	}  	worker.ReportProgress ((int)(((decimal)r / (decimal)bitmap.Height) * 100m));  }  
Magic Number,FileToBitmap.Drawing,BitmapBase,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\BitmapBase.cs,ToBitmap,The following statement contains a magic number: for (int r = 0; r < bitmap.Height; r++) {  	for (int c = 0; c < bitmap.Width; c++) {  		Color color = Color.FromArgb (pixels [r' c]);  		bytes [(r * stride) + c * 3] = color.B;  		bytes [(r * stride) + c * 3 + 1] = color.G;  		bytes [(r * stride) + c * 3 + 2] = color.R;  	}  	if (worker.CancellationPending) {  		break;  	}  	worker.ReportProgress ((int)(((decimal)r / (decimal)bitmap.Height) * 100m));  }  
Magic Number,FileToBitmap.Drawing,BitmapBase,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\BitmapBase.cs,ToBitmap,The following statement contains a magic number: for (int c = 0; c < bitmap.Width; c++) {  	Color color = Color.FromArgb (pixels [r' c]);  	bytes [(r * stride) + c * 3] = color.B;  	bytes [(r * stride) + c * 3 + 1] = color.G;  	bytes [(r * stride) + c * 3 + 2] = color.R;  }  
Magic Number,FileToBitmap.Drawing,BitmapBase,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\BitmapBase.cs,ToBitmap,The following statement contains a magic number: for (int c = 0; c < bitmap.Width; c++) {  	Color color = Color.FromArgb (pixels [r' c]);  	bytes [(r * stride) + c * 3] = color.B;  	bytes [(r * stride) + c * 3 + 1] = color.G;  	bytes [(r * stride) + c * 3 + 2] = color.R;  }  
Magic Number,FileToBitmap.Drawing,BitmapBase,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\BitmapBase.cs,ToBitmap,The following statement contains a magic number: for (int c = 0; c < bitmap.Width; c++) {  	Color color = Color.FromArgb (pixels [r' c]);  	bytes [(r * stride) + c * 3] = color.B;  	bytes [(r * stride) + c * 3 + 1] = color.G;  	bytes [(r * stride) + c * 3 + 2] = color.R;  }  
Magic Number,FileToBitmap.Drawing,BitmapBase,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\BitmapBase.cs,ToBitmap,The following statement contains a magic number: for (int c = 0; c < bitmap.Width; c++) {  	Color color = Color.FromArgb (pixels [r' c]);  	bytes [(r * stride) + c * 3] = color.B;  	bytes [(r * stride) + c * 3 + 1] = color.G;  	bytes [(r * stride) + c * 3 + 2] = color.R;  }  
Magic Number,FileToBitmap.Drawing,BitmapBase,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\BitmapBase.cs,ToBitmap,The following statement contains a magic number: bytes [(r * stride) + c * 3] = color.B;  
Magic Number,FileToBitmap.Drawing,BitmapBase,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\BitmapBase.cs,ToBitmap,The following statement contains a magic number: bytes [(r * stride) + c * 3 + 1] = color.G;  
Magic Number,FileToBitmap.Drawing,BitmapBase,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\BitmapBase.cs,ToBitmap,The following statement contains a magic number: bytes [(r * stride) + c * 3 + 2] = color.R;  
Magic Number,FileToBitmap.Drawing,BitmapBase,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\BitmapBase.cs,ToBitmap,The following statement contains a magic number: bytes [(r * stride) + c * 3 + 2] = color.R;  
Magic Number,FileToBitmap.Drawing,EightBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\EightBppDrawer.cs,Draw,The following statement contains a magic number: if (palette.Colors.Count != 256) {  	throw new Exception ("Palette mismatch.");  }  
Magic Number,FileToBitmap.Drawing,FourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\FourBppDrawer.cs,Draw,The following statement contains a magic number: if (palette.Colors.Count != 16) {  	throw new Exception ("Palette mismatch.");  }  
Magic Number,FileToBitmap.Drawing,FourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\FourBppDrawer.cs,Draw,The following statement contains a magic number: file.Length.Times (i =>  {  	pixels [(i * 2)] = (byte)(file [i] >> 4);  	pixels [(i * 2) + 1] = (byte)(file [i] & 0xF);  });  
Magic Number,FileToBitmap.Drawing,FourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\FourBppDrawer.cs,Draw,The following statement contains a magic number: file.Length.Times (i =>  {  	pixels [(i * 2)] = (byte)(file [i] >> 4);  	pixels [(i * 2) + 1] = (byte)(file [i] & 0xF);  });  
Magic Number,FileToBitmap.Drawing,FourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\FourBppDrawer.cs,Draw,The following statement contains a magic number: file.Length.Times (i =>  {  	pixels [(i * 2)] = (byte)(file [i] >> 4);  	pixels [(i * 2) + 1] = (byte)(file [i] & 0xF);  });  
Magic Number,FileToBitmap.Drawing,FourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\FourBppDrawer.cs,Draw,The following statement contains a magic number: pixels [(i * 2)] = (byte)(file [i] >> 4);  
Magic Number,FileToBitmap.Drawing,FourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\FourBppDrawer.cs,Draw,The following statement contains a magic number: pixels [(i * 2)] = (byte)(file [i] >> 4);  
Magic Number,FileToBitmap.Drawing,FourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\FourBppDrawer.cs,Draw,The following statement contains a magic number: pixels [(i * 2) + 1] = (byte)(file [i] & 0xF);  
Magic Number,FileToBitmap.Drawing,OneBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\OneBppDrawer.cs,Draw,The following statement contains a magic number: if (palette.Colors.Count != 2) {  	throw new Exception ("Palette mismatch.");  }  
Magic Number,FileToBitmap.Drawing,SixteenBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\SixteenBppDrawer.cs,Draw,The following statement contains a magic number: if (file.Length % 2 == 0) {  	pixels = new ushort[file.Length / 2];  }  else {  	pixels = new ushort[file.Length / 2 + 1];  }  
Magic Number,FileToBitmap.Drawing,SixteenBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\SixteenBppDrawer.cs,Draw,The following statement contains a magic number: if (file.Length % 2 == 0) {  	pixels = new ushort[file.Length / 2];  }  else {  	pixels = new ushort[file.Length / 2 + 1];  }  
Magic Number,FileToBitmap.Drawing,SixteenBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\SixteenBppDrawer.cs,Draw,The following statement contains a magic number: if (file.Length % 2 == 0) {  	pixels = new ushort[file.Length / 2];  }  else {  	pixels = new ushort[file.Length / 2 + 1];  }  
Magic Number,FileToBitmap.Drawing,SixteenBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\SixteenBppDrawer.cs,Draw,The following statement contains a magic number: pixels = new ushort[file.Length / 2];  
Magic Number,FileToBitmap.Drawing,SixteenBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\SixteenBppDrawer.cs,Draw,The following statement contains a magic number: pixels = new ushort[file.Length / 2 + 1];  
Magic Number,FileToBitmap.Drawing,SixteenBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\SixteenBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < file.Length; i += 2) {  	if (i + 1 < file.Length) {  		int pixelIndex = i / 2;  		pixels [pixelIndex] = (ushort)((file [i] << 8) + file [i + 1]);  	}  	else {  		int pixelIndex = i / 2;  		pixels [pixelIndex] = (ushort)(file [i] << 8);  	}  }  
Magic Number,FileToBitmap.Drawing,SixteenBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\SixteenBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < file.Length; i += 2) {  	if (i + 1 < file.Length) {  		int pixelIndex = i / 2;  		pixels [pixelIndex] = (ushort)((file [i] << 8) + file [i + 1]);  	}  	else {  		int pixelIndex = i / 2;  		pixels [pixelIndex] = (ushort)(file [i] << 8);  	}  }  
Magic Number,FileToBitmap.Drawing,SixteenBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\SixteenBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < file.Length; i += 2) {  	if (i + 1 < file.Length) {  		int pixelIndex = i / 2;  		pixels [pixelIndex] = (ushort)((file [i] << 8) + file [i + 1]);  	}  	else {  		int pixelIndex = i / 2;  		pixels [pixelIndex] = (ushort)(file [i] << 8);  	}  }  
Magic Number,FileToBitmap.Drawing,SixteenBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\SixteenBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < file.Length; i += 2) {  	if (i + 1 < file.Length) {  		int pixelIndex = i / 2;  		pixels [pixelIndex] = (ushort)((file [i] << 8) + file [i + 1]);  	}  	else {  		int pixelIndex = i / 2;  		pixels [pixelIndex] = (ushort)(file [i] << 8);  	}  }  
Magic Number,FileToBitmap.Drawing,SixteenBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\SixteenBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < file.Length; i += 2) {  	if (i + 1 < file.Length) {  		int pixelIndex = i / 2;  		pixels [pixelIndex] = (ushort)((file [i] << 8) + file [i + 1]);  	}  	else {  		int pixelIndex = i / 2;  		pixels [pixelIndex] = (ushort)(file [i] << 8);  	}  }  
Magic Number,FileToBitmap.Drawing,SixteenBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\SixteenBppDrawer.cs,Draw,The following statement contains a magic number: i += 2
Magic Number,FileToBitmap.Drawing,SixteenBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\SixteenBppDrawer.cs,Draw,The following statement contains a magic number: if (i + 1 < file.Length) {  	int pixelIndex = i / 2;  	pixels [pixelIndex] = (ushort)((file [i] << 8) + file [i + 1]);  }  else {  	int pixelIndex = i / 2;  	pixels [pixelIndex] = (ushort)(file [i] << 8);  }  
Magic Number,FileToBitmap.Drawing,SixteenBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\SixteenBppDrawer.cs,Draw,The following statement contains a magic number: if (i + 1 < file.Length) {  	int pixelIndex = i / 2;  	pixels [pixelIndex] = (ushort)((file [i] << 8) + file [i + 1]);  }  else {  	int pixelIndex = i / 2;  	pixels [pixelIndex] = (ushort)(file [i] << 8);  }  
Magic Number,FileToBitmap.Drawing,SixteenBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\SixteenBppDrawer.cs,Draw,The following statement contains a magic number: if (i + 1 < file.Length) {  	int pixelIndex = i / 2;  	pixels [pixelIndex] = (ushort)((file [i] << 8) + file [i + 1]);  }  else {  	int pixelIndex = i / 2;  	pixels [pixelIndex] = (ushort)(file [i] << 8);  }  
Magic Number,FileToBitmap.Drawing,SixteenBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\SixteenBppDrawer.cs,Draw,The following statement contains a magic number: if (i + 1 < file.Length) {  	int pixelIndex = i / 2;  	pixels [pixelIndex] = (ushort)((file [i] << 8) + file [i + 1]);  }  else {  	int pixelIndex = i / 2;  	pixels [pixelIndex] = (ushort)(file [i] << 8);  }  
Magic Number,FileToBitmap.Drawing,SixteenBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\SixteenBppDrawer.cs,Draw,The following statement contains a magic number: pixels [pixelIndex] = (ushort)((file [i] << 8) + file [i + 1]);  
Magic Number,FileToBitmap.Drawing,SixteenBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\SixteenBppDrawer.cs,Draw,The following statement contains a magic number: pixels [pixelIndex] = (ushort)(file [i] << 8);  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: if (file.Length % 4 == 0) {  	pixels = new int[file.Length / 4];  }  else {  	int pixelCount = file.Length / 4;  	while (pixelCount % 4 != 0) {  		pixelCount++;  	}  	pixels = new int[pixelCount];  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: if (file.Length % 4 == 0) {  	pixels = new int[file.Length / 4];  }  else {  	int pixelCount = file.Length / 4;  	while (pixelCount % 4 != 0) {  		pixelCount++;  	}  	pixels = new int[pixelCount];  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: if (file.Length % 4 == 0) {  	pixels = new int[file.Length / 4];  }  else {  	int pixelCount = file.Length / 4;  	while (pixelCount % 4 != 0) {  		pixelCount++;  	}  	pixels = new int[pixelCount];  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: if (file.Length % 4 == 0) {  	pixels = new int[file.Length / 4];  }  else {  	int pixelCount = file.Length / 4;  	while (pixelCount % 4 != 0) {  		pixelCount++;  	}  	pixels = new int[pixelCount];  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: pixels = new int[file.Length / 4];  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: while (pixelCount % 4 != 0) {  	pixelCount++;  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	alpha = (byte)((i * 4 < file.Length) ? file [i * 4] : 0);  	red = (byte)((((i * 4) + 1) < file.Length) ? file [(i * 4) + 1] : 0);  	green = (byte)((((i * 4) + 2) < file.Length) ? file [(i * 4) + 2] : 0);  	blue = (byte)((((i * 4) + 3) < file.Length) ? file [(i * 4) + 3] : 0);  	pixels [i] = (alpha << 24) + (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	alpha = (byte)((i * 4 < file.Length) ? file [i * 4] : 0);  	red = (byte)((((i * 4) + 1) < file.Length) ? file [(i * 4) + 1] : 0);  	green = (byte)((((i * 4) + 2) < file.Length) ? file [(i * 4) + 2] : 0);  	blue = (byte)((((i * 4) + 3) < file.Length) ? file [(i * 4) + 3] : 0);  	pixels [i] = (alpha << 24) + (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	alpha = (byte)((i * 4 < file.Length) ? file [i * 4] : 0);  	red = (byte)((((i * 4) + 1) < file.Length) ? file [(i * 4) + 1] : 0);  	green = (byte)((((i * 4) + 2) < file.Length) ? file [(i * 4) + 2] : 0);  	blue = (byte)((((i * 4) + 3) < file.Length) ? file [(i * 4) + 3] : 0);  	pixels [i] = (alpha << 24) + (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	alpha = (byte)((i * 4 < file.Length) ? file [i * 4] : 0);  	red = (byte)((((i * 4) + 1) < file.Length) ? file [(i * 4) + 1] : 0);  	green = (byte)((((i * 4) + 2) < file.Length) ? file [(i * 4) + 2] : 0);  	blue = (byte)((((i * 4) + 3) < file.Length) ? file [(i * 4) + 3] : 0);  	pixels [i] = (alpha << 24) + (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	alpha = (byte)((i * 4 < file.Length) ? file [i * 4] : 0);  	red = (byte)((((i * 4) + 1) < file.Length) ? file [(i * 4) + 1] : 0);  	green = (byte)((((i * 4) + 2) < file.Length) ? file [(i * 4) + 2] : 0);  	blue = (byte)((((i * 4) + 3) < file.Length) ? file [(i * 4) + 3] : 0);  	pixels [i] = (alpha << 24) + (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	alpha = (byte)((i * 4 < file.Length) ? file [i * 4] : 0);  	red = (byte)((((i * 4) + 1) < file.Length) ? file [(i * 4) + 1] : 0);  	green = (byte)((((i * 4) + 2) < file.Length) ? file [(i * 4) + 2] : 0);  	blue = (byte)((((i * 4) + 3) < file.Length) ? file [(i * 4) + 3] : 0);  	pixels [i] = (alpha << 24) + (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	alpha = (byte)((i * 4 < file.Length) ? file [i * 4] : 0);  	red = (byte)((((i * 4) + 1) < file.Length) ? file [(i * 4) + 1] : 0);  	green = (byte)((((i * 4) + 2) < file.Length) ? file [(i * 4) + 2] : 0);  	blue = (byte)((((i * 4) + 3) < file.Length) ? file [(i * 4) + 3] : 0);  	pixels [i] = (alpha << 24) + (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	alpha = (byte)((i * 4 < file.Length) ? file [i * 4] : 0);  	red = (byte)((((i * 4) + 1) < file.Length) ? file [(i * 4) + 1] : 0);  	green = (byte)((((i * 4) + 2) < file.Length) ? file [(i * 4) + 2] : 0);  	blue = (byte)((((i * 4) + 3) < file.Length) ? file [(i * 4) + 3] : 0);  	pixels [i] = (alpha << 24) + (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	alpha = (byte)((i * 4 < file.Length) ? file [i * 4] : 0);  	red = (byte)((((i * 4) + 1) < file.Length) ? file [(i * 4) + 1] : 0);  	green = (byte)((((i * 4) + 2) < file.Length) ? file [(i * 4) + 2] : 0);  	blue = (byte)((((i * 4) + 3) < file.Length) ? file [(i * 4) + 3] : 0);  	pixels [i] = (alpha << 24) + (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	alpha = (byte)((i * 4 < file.Length) ? file [i * 4] : 0);  	red = (byte)((((i * 4) + 1) < file.Length) ? file [(i * 4) + 1] : 0);  	green = (byte)((((i * 4) + 2) < file.Length) ? file [(i * 4) + 2] : 0);  	blue = (byte)((((i * 4) + 3) < file.Length) ? file [(i * 4) + 3] : 0);  	pixels [i] = (alpha << 24) + (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	alpha = (byte)((i * 4 < file.Length) ? file [i * 4] : 0);  	red = (byte)((((i * 4) + 1) < file.Length) ? file [(i * 4) + 1] : 0);  	green = (byte)((((i * 4) + 2) < file.Length) ? file [(i * 4) + 2] : 0);  	blue = (byte)((((i * 4) + 3) < file.Length) ? file [(i * 4) + 3] : 0);  	pixels [i] = (alpha << 24) + (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	alpha = (byte)((i * 4 < file.Length) ? file [i * 4] : 0);  	red = (byte)((((i * 4) + 1) < file.Length) ? file [(i * 4) + 1] : 0);  	green = (byte)((((i * 4) + 2) < file.Length) ? file [(i * 4) + 2] : 0);  	blue = (byte)((((i * 4) + 3) < file.Length) ? file [(i * 4) + 3] : 0);  	pixels [i] = (alpha << 24) + (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	alpha = (byte)((i * 4 < file.Length) ? file [i * 4] : 0);  	red = (byte)((((i * 4) + 1) < file.Length) ? file [(i * 4) + 1] : 0);  	green = (byte)((((i * 4) + 2) < file.Length) ? file [(i * 4) + 2] : 0);  	blue = (byte)((((i * 4) + 3) < file.Length) ? file [(i * 4) + 3] : 0);  	pixels [i] = (alpha << 24) + (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	alpha = (byte)((i * 4 < file.Length) ? file [i * 4] : 0);  	red = (byte)((((i * 4) + 1) < file.Length) ? file [(i * 4) + 1] : 0);  	green = (byte)((((i * 4) + 2) < file.Length) ? file [(i * 4) + 2] : 0);  	blue = (byte)((((i * 4) + 3) < file.Length) ? file [(i * 4) + 3] : 0);  	pixels [i] = (alpha << 24) + (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	alpha = (byte)((i * 4 < file.Length) ? file [i * 4] : 0);  	red = (byte)((((i * 4) + 1) < file.Length) ? file [(i * 4) + 1] : 0);  	green = (byte)((((i * 4) + 2) < file.Length) ? file [(i * 4) + 2] : 0);  	blue = (byte)((((i * 4) + 3) < file.Length) ? file [(i * 4) + 3] : 0);  	pixels [i] = (alpha << 24) + (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: alpha = (byte)((i * 4 < file.Length) ? file [i * 4] : 0);  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: alpha = (byte)((i * 4 < file.Length) ? file [i * 4] : 0);  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: red = (byte)((((i * 4) + 1) < file.Length) ? file [(i * 4) + 1] : 0);  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: red = (byte)((((i * 4) + 1) < file.Length) ? file [(i * 4) + 1] : 0);  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: green = (byte)((((i * 4) + 2) < file.Length) ? file [(i * 4) + 2] : 0);  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: green = (byte)((((i * 4) + 2) < file.Length) ? file [(i * 4) + 2] : 0);  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: green = (byte)((((i * 4) + 2) < file.Length) ? file [(i * 4) + 2] : 0);  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: green = (byte)((((i * 4) + 2) < file.Length) ? file [(i * 4) + 2] : 0);  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: blue = (byte)((((i * 4) + 3) < file.Length) ? file [(i * 4) + 3] : 0);  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: blue = (byte)((((i * 4) + 3) < file.Length) ? file [(i * 4) + 3] : 0);  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: blue = (byte)((((i * 4) + 3) < file.Length) ? file [(i * 4) + 3] : 0);  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: blue = (byte)((((i * 4) + 3) < file.Length) ? file [(i * 4) + 3] : 0);  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: pixels [i] = (alpha << 24) + (red << 16) + (green << 8) + blue;  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: pixels [i] = (alpha << 24) + (red << 16) + (green << 8) + blue;  
Magic Number,FileToBitmap.Drawing,ThirtyTwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\ThirtyTwoBppDrawer.cs,Draw,The following statement contains a magic number: pixels [i] = (alpha << 24) + (red << 16) + (green << 8) + blue;  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: if (file.Length % 3 == 0) {  	pixels = new int[file.Length / 3];  }  else {  	int pixelCount = (int)Math.Floor (file.Length / 3m);  	while (pixelCount % 3 != 0) {  		pixelCount++;  	}  	pixels = new int[pixelCount];  }  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: if (file.Length % 3 == 0) {  	pixels = new int[file.Length / 3];  }  else {  	int pixelCount = (int)Math.Floor (file.Length / 3m);  	while (pixelCount % 3 != 0) {  		pixelCount++;  	}  	pixels = new int[pixelCount];  }  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: if (file.Length % 3 == 0) {  	pixels = new int[file.Length / 3];  }  else {  	int pixelCount = (int)Math.Floor (file.Length / 3m);  	while (pixelCount % 3 != 0) {  		pixelCount++;  	}  	pixels = new int[pixelCount];  }  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: pixels = new int[file.Length / 3];  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: while (pixelCount % 3 != 0) {  	pixelCount++;  }  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	// Pattern: xxRRGGBB  	// Red byte comes from file[i * 3] shifted by 16  	// Green byte comes from file[(i * 3) + 1] shifted by 8  	// Blue byte comes from file[(i * 3) + 2] shifted by 8  	red = (byte)((i * 3 < file.Length) ? file [i * 3] : 0);  	green = (byte)((((i * 3) + 1) < file.Length) ? file [(i * 3) + 1] : 0);  	blue = (byte)((((i * 3) + 2) < file.Length) ? file [(i * 3) + 2] : 0);  	pixels [i] = (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	// Pattern: xxRRGGBB  	// Red byte comes from file[i * 3] shifted by 16  	// Green byte comes from file[(i * 3) + 1] shifted by 8  	// Blue byte comes from file[(i * 3) + 2] shifted by 8  	red = (byte)((i * 3 < file.Length) ? file [i * 3] : 0);  	green = (byte)((((i * 3) + 1) < file.Length) ? file [(i * 3) + 1] : 0);  	blue = (byte)((((i * 3) + 2) < file.Length) ? file [(i * 3) + 2] : 0);  	pixels [i] = (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	// Pattern: xxRRGGBB  	// Red byte comes from file[i * 3] shifted by 16  	// Green byte comes from file[(i * 3) + 1] shifted by 8  	// Blue byte comes from file[(i * 3) + 2] shifted by 8  	red = (byte)((i * 3 < file.Length) ? file [i * 3] : 0);  	green = (byte)((((i * 3) + 1) < file.Length) ? file [(i * 3) + 1] : 0);  	blue = (byte)((((i * 3) + 2) < file.Length) ? file [(i * 3) + 2] : 0);  	pixels [i] = (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	// Pattern: xxRRGGBB  	// Red byte comes from file[i * 3] shifted by 16  	// Green byte comes from file[(i * 3) + 1] shifted by 8  	// Blue byte comes from file[(i * 3) + 2] shifted by 8  	red = (byte)((i * 3 < file.Length) ? file [i * 3] : 0);  	green = (byte)((((i * 3) + 1) < file.Length) ? file [(i * 3) + 1] : 0);  	blue = (byte)((((i * 3) + 2) < file.Length) ? file [(i * 3) + 2] : 0);  	pixels [i] = (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	// Pattern: xxRRGGBB  	// Red byte comes from file[i * 3] shifted by 16  	// Green byte comes from file[(i * 3) + 1] shifted by 8  	// Blue byte comes from file[(i * 3) + 2] shifted by 8  	red = (byte)((i * 3 < file.Length) ? file [i * 3] : 0);  	green = (byte)((((i * 3) + 1) < file.Length) ? file [(i * 3) + 1] : 0);  	blue = (byte)((((i * 3) + 2) < file.Length) ? file [(i * 3) + 2] : 0);  	pixels [i] = (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	// Pattern: xxRRGGBB  	// Red byte comes from file[i * 3] shifted by 16  	// Green byte comes from file[(i * 3) + 1] shifted by 8  	// Blue byte comes from file[(i * 3) + 2] shifted by 8  	red = (byte)((i * 3 < file.Length) ? file [i * 3] : 0);  	green = (byte)((((i * 3) + 1) < file.Length) ? file [(i * 3) + 1] : 0);  	blue = (byte)((((i * 3) + 2) < file.Length) ? file [(i * 3) + 2] : 0);  	pixels [i] = (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	// Pattern: xxRRGGBB  	// Red byte comes from file[i * 3] shifted by 16  	// Green byte comes from file[(i * 3) + 1] shifted by 8  	// Blue byte comes from file[(i * 3) + 2] shifted by 8  	red = (byte)((i * 3 < file.Length) ? file [i * 3] : 0);  	green = (byte)((((i * 3) + 1) < file.Length) ? file [(i * 3) + 1] : 0);  	blue = (byte)((((i * 3) + 2) < file.Length) ? file [(i * 3) + 2] : 0);  	pixels [i] = (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	// Pattern: xxRRGGBB  	// Red byte comes from file[i * 3] shifted by 16  	// Green byte comes from file[(i * 3) + 1] shifted by 8  	// Blue byte comes from file[(i * 3) + 2] shifted by 8  	red = (byte)((i * 3 < file.Length) ? file [i * 3] : 0);  	green = (byte)((((i * 3) + 1) < file.Length) ? file [(i * 3) + 1] : 0);  	blue = (byte)((((i * 3) + 2) < file.Length) ? file [(i * 3) + 2] : 0);  	pixels [i] = (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	// Pattern: xxRRGGBB  	// Red byte comes from file[i * 3] shifted by 16  	// Green byte comes from file[(i * 3) + 1] shifted by 8  	// Blue byte comes from file[(i * 3) + 2] shifted by 8  	red = (byte)((i * 3 < file.Length) ? file [i * 3] : 0);  	green = (byte)((((i * 3) + 1) < file.Length) ? file [(i * 3) + 1] : 0);  	blue = (byte)((((i * 3) + 2) < file.Length) ? file [(i * 3) + 2] : 0);  	pixels [i] = (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: for (int i = 0; i < pixels.Length; i++) {  	// Pattern: xxRRGGBB  	// Red byte comes from file[i * 3] shifted by 16  	// Green byte comes from file[(i * 3) + 1] shifted by 8  	// Blue byte comes from file[(i * 3) + 2] shifted by 8  	red = (byte)((i * 3 < file.Length) ? file [i * 3] : 0);  	green = (byte)((((i * 3) + 1) < file.Length) ? file [(i * 3) + 1] : 0);  	blue = (byte)((((i * 3) + 2) < file.Length) ? file [(i * 3) + 2] : 0);  	pixels [i] = (red << 16) + (green << 8) + blue;  }  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: red = (byte)((i * 3 < file.Length) ? file [i * 3] : 0);  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: red = (byte)((i * 3 < file.Length) ? file [i * 3] : 0);  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: green = (byte)((((i * 3) + 1) < file.Length) ? file [(i * 3) + 1] : 0);  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: green = (byte)((((i * 3) + 1) < file.Length) ? file [(i * 3) + 1] : 0);  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: blue = (byte)((((i * 3) + 2) < file.Length) ? file [(i * 3) + 2] : 0);  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: blue = (byte)((((i * 3) + 2) < file.Length) ? file [(i * 3) + 2] : 0);  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: blue = (byte)((((i * 3) + 2) < file.Length) ? file [(i * 3) + 2] : 0);  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: blue = (byte)((((i * 3) + 2) < file.Length) ? file [(i * 3) + 2] : 0);  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: pixels [i] = (red << 16) + (green << 8) + blue;  
Magic Number,FileToBitmap.Drawing,TwentyFourBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwentyFourBppDrawer.cs,Draw,The following statement contains a magic number: pixels [i] = (red << 16) + (green << 8) + blue;  
Magic Number,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The following statement contains a magic number: if (palette.Colors.Count != 4) {  	throw new Exception ("Palette mismatch.");  }  
Magic Number,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The following statement contains a magic number: bytes.Length.Times (i =>  {  	twoBppValues [(i * 4)] = (byte)((bytes [i] & 0xC0) >> 6);  	twoBppValues [(i * 4) + 1] = (byte)((bytes [i] & 0x30) >> 4);  	twoBppValues [(i * 4) + 2] = (byte)((bytes [i] & 0x0C) >> 2);  	twoBppValues [(i * 4) + 3] = (byte)((bytes [i] & 0x03));  });  
Magic Number,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The following statement contains a magic number: bytes.Length.Times (i =>  {  	twoBppValues [(i * 4)] = (byte)((bytes [i] & 0xC0) >> 6);  	twoBppValues [(i * 4) + 1] = (byte)((bytes [i] & 0x30) >> 4);  	twoBppValues [(i * 4) + 2] = (byte)((bytes [i] & 0x0C) >> 2);  	twoBppValues [(i * 4) + 3] = (byte)((bytes [i] & 0x03));  });  
Magic Number,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The following statement contains a magic number: bytes.Length.Times (i =>  {  	twoBppValues [(i * 4)] = (byte)((bytes [i] & 0xC0) >> 6);  	twoBppValues [(i * 4) + 1] = (byte)((bytes [i] & 0x30) >> 4);  	twoBppValues [(i * 4) + 2] = (byte)((bytes [i] & 0x0C) >> 2);  	twoBppValues [(i * 4) + 3] = (byte)((bytes [i] & 0x03));  });  
Magic Number,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The following statement contains a magic number: bytes.Length.Times (i =>  {  	twoBppValues [(i * 4)] = (byte)((bytes [i] & 0xC0) >> 6);  	twoBppValues [(i * 4) + 1] = (byte)((bytes [i] & 0x30) >> 4);  	twoBppValues [(i * 4) + 2] = (byte)((bytes [i] & 0x0C) >> 2);  	twoBppValues [(i * 4) + 3] = (byte)((bytes [i] & 0x03));  });  
Magic Number,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The following statement contains a magic number: bytes.Length.Times (i =>  {  	twoBppValues [(i * 4)] = (byte)((bytes [i] & 0xC0) >> 6);  	twoBppValues [(i * 4) + 1] = (byte)((bytes [i] & 0x30) >> 4);  	twoBppValues [(i * 4) + 2] = (byte)((bytes [i] & 0x0C) >> 2);  	twoBppValues [(i * 4) + 3] = (byte)((bytes [i] & 0x03));  });  
Magic Number,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The following statement contains a magic number: bytes.Length.Times (i =>  {  	twoBppValues [(i * 4)] = (byte)((bytes [i] & 0xC0) >> 6);  	twoBppValues [(i * 4) + 1] = (byte)((bytes [i] & 0x30) >> 4);  	twoBppValues [(i * 4) + 2] = (byte)((bytes [i] & 0x0C) >> 2);  	twoBppValues [(i * 4) + 3] = (byte)((bytes [i] & 0x03));  });  
Magic Number,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The following statement contains a magic number: bytes.Length.Times (i =>  {  	twoBppValues [(i * 4)] = (byte)((bytes [i] & 0xC0) >> 6);  	twoBppValues [(i * 4) + 1] = (byte)((bytes [i] & 0x30) >> 4);  	twoBppValues [(i * 4) + 2] = (byte)((bytes [i] & 0x0C) >> 2);  	twoBppValues [(i * 4) + 3] = (byte)((bytes [i] & 0x03));  });  
Magic Number,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The following statement contains a magic number: bytes.Length.Times (i =>  {  	twoBppValues [(i * 4)] = (byte)((bytes [i] & 0xC0) >> 6);  	twoBppValues [(i * 4) + 1] = (byte)((bytes [i] & 0x30) >> 4);  	twoBppValues [(i * 4) + 2] = (byte)((bytes [i] & 0x0C) >> 2);  	twoBppValues [(i * 4) + 3] = (byte)((bytes [i] & 0x03));  });  
Magic Number,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The following statement contains a magic number: bytes.Length.Times (i =>  {  	twoBppValues [(i * 4)] = (byte)((bytes [i] & 0xC0) >> 6);  	twoBppValues [(i * 4) + 1] = (byte)((bytes [i] & 0x30) >> 4);  	twoBppValues [(i * 4) + 2] = (byte)((bytes [i] & 0x0C) >> 2);  	twoBppValues [(i * 4) + 3] = (byte)((bytes [i] & 0x03));  });  
Magic Number,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The following statement contains a magic number: twoBppValues [(i * 4)] = (byte)((bytes [i] & 0xC0) >> 6);  
Magic Number,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The following statement contains a magic number: twoBppValues [(i * 4)] = (byte)((bytes [i] & 0xC0) >> 6);  
Magic Number,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The following statement contains a magic number: twoBppValues [(i * 4) + 1] = (byte)((bytes [i] & 0x30) >> 4);  
Magic Number,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The following statement contains a magic number: twoBppValues [(i * 4) + 1] = (byte)((bytes [i] & 0x30) >> 4);  
Magic Number,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The following statement contains a magic number: twoBppValues [(i * 4) + 2] = (byte)((bytes [i] & 0x0C) >> 2);  
Magic Number,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The following statement contains a magic number: twoBppValues [(i * 4) + 2] = (byte)((bytes [i] & 0x0C) >> 2);  
Magic Number,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The following statement contains a magic number: twoBppValues [(i * 4) + 2] = (byte)((bytes [i] & 0x0C) >> 2);  
Magic Number,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The following statement contains a magic number: twoBppValues [(i * 4) + 3] = (byte)((bytes [i] & 0x03));  
Magic Number,FileToBitmap.Drawing,TwoBppDrawer,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Drawing\TwoBppDrawer.cs,Draw,The following statement contains a magic number: twoBppValues [(i * 4) + 3] = (byte)((bytes [i] & 0x03));  
Magic Number,FileToBitmap,NumericExtensions,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\NumericExtensions.cs,GetFactors,The following statement contains a magic number: for (int i = 1; i <= value / 2; i++) {  	if (value % i == 0)  		result.Add (i);  }  
Magic Number,FileToBitmap,NumericExtensions,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\NumericExtensions.cs,GetFileSizeString,The following statement contains a magic number: if (prefixIndex == -1) {  	return string.Format ("{0} bytes"' length);  }  else {  	return string.Format ("{0} {1}B"' Decimal.Round (lengthValue' 2)' prefixes [prefixIndex]);  }  
Magic Number,FileToBitmap,NumericExtensions,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\NumericExtensions.cs,GetFileSizeString,The following statement contains a magic number: return string.Format ("{0} {1}B"' Decimal.Round (lengthValue' 2)' prefixes [prefixIndex]);  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,CreatePanels,The following statement contains a magic number: foreach (Color color in palette.Colors) {  	Panel panel = new Panel ();  	panel.BackColor = color;  	panel.Size = new Size (20' 20);  	this.panels.Add (panel);  }  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,CreatePanels,The following statement contains a magic number: foreach (Color color in palette.Colors) {  	Panel panel = new Panel ();  	panel.BackColor = color;  	panel.Size = new Size (20' 20);  	this.panels.Add (panel);  }  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,CreatePanels,The following statement contains a magic number: panel.Size = new Size (20' 20);  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,CreatePanels,The following statement contains a magic number: panel.Size = new Size (20' 20);  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,LayoutPanels,The following statement contains a magic number: foreach (Panel panel in panels) {  	panel.Location = new Point ((currentColumn * 22) + horizontalOffset' (currentRow * 22) + verticalOffset);  	panel.Click += new EventHandler (PanelClicked);  	this.GroupColorPanels.Controls.Add (panel);  	if (currentColumn == 15) {  		currentRow++;  		currentColumn = 0;  	}  	else {  		currentColumn++;  	}  }  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,LayoutPanels,The following statement contains a magic number: foreach (Panel panel in panels) {  	panel.Location = new Point ((currentColumn * 22) + horizontalOffset' (currentRow * 22) + verticalOffset);  	panel.Click += new EventHandler (PanelClicked);  	this.GroupColorPanels.Controls.Add (panel);  	if (currentColumn == 15) {  		currentRow++;  		currentColumn = 0;  	}  	else {  		currentColumn++;  	}  }  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,LayoutPanels,The following statement contains a magic number: foreach (Panel panel in panels) {  	panel.Location = new Point ((currentColumn * 22) + horizontalOffset' (currentRow * 22) + verticalOffset);  	panel.Click += new EventHandler (PanelClicked);  	this.GroupColorPanels.Controls.Add (panel);  	if (currentColumn == 15) {  		currentRow++;  		currentColumn = 0;  	}  	else {  		currentColumn++;  	}  }  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,LayoutPanels,The following statement contains a magic number: panel.Location = new Point ((currentColumn * 22) + horizontalOffset' (currentRow * 22) + verticalOffset);  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,LayoutPanels,The following statement contains a magic number: panel.Location = new Point ((currentColumn * 22) + horizontalOffset' (currentRow * 22) + verticalOffset);  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,LayoutPanels,The following statement contains a magic number: if (currentColumn == 15) {  	currentRow++;  	currentColumn = 0;  }  else {  	currentColumn++;  }  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,NumericGreen_ValueChanged,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.TextHex.Text)) {  	StringBuilder hexBulilder = new StringBuilder (this.TextHex.Text);  	string greenHex = value.ToString ("X2");  	hexBulilder [2] = greenHex [0];  	hexBulilder [3] = greenHex [1];  	this.TextHex.Text = hexBulilder.ToString ();  }  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,NumericGreen_ValueChanged,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.TextHex.Text)) {  	StringBuilder hexBulilder = new StringBuilder (this.TextHex.Text);  	string greenHex = value.ToString ("X2");  	hexBulilder [2] = greenHex [0];  	hexBulilder [3] = greenHex [1];  	this.TextHex.Text = hexBulilder.ToString ();  }  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,NumericGreen_ValueChanged,The following statement contains a magic number: hexBulilder [2] = greenHex [0];  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,NumericGreen_ValueChanged,The following statement contains a magic number: hexBulilder [3] = greenHex [1];  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,NumericBlue_ValueChanged,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.TextHex.Text)) {  	StringBuilder hexBulilder = new StringBuilder (this.TextHex.Text);  	string blueHex = value.ToString ("X2");  	hexBulilder [4] = blueHex [0];  	hexBulilder [5] = blueHex [1];  	this.TextHex.Text = hexBulilder.ToString ();  }  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,NumericBlue_ValueChanged,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.TextHex.Text)) {  	StringBuilder hexBulilder = new StringBuilder (this.TextHex.Text);  	string blueHex = value.ToString ("X2");  	hexBulilder [4] = blueHex [0];  	hexBulilder [5] = blueHex [1];  	this.TextHex.Text = hexBulilder.ToString ();  }  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,NumericBlue_ValueChanged,The following statement contains a magic number: hexBulilder [4] = blueHex [0];  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,NumericBlue_ValueChanged,The following statement contains a magic number: hexBulilder [5] = blueHex [1];  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,TextHex_TextChanged,The following statement contains a magic number: if (this.selectedPanel != null) {  	// First' verify the input.  	string input = this.TextHex.Text.ToUpper ();  	if (input.Length != 6 || !this.ContainsOnlyHexDigits (input)) {  		this.LabelInvalidHex.Visible = true;  		return;  	}  	else {  		this.LabelInvalidHex.Visible = false;  	}  	string redHex = input.Substring (0' 2);  	string greenHex = input.Substring (2' 2);  	string blueHex = input.Substring (4' 2);  	int red = Int32.Parse (redHex' System.Globalization.NumberStyles.HexNumber);  	int green = Int32.Parse (greenHex' System.Globalization.NumberStyles.HexNumber);  	int blue = Int32.Parse (blueHex' System.Globalization.NumberStyles.HexNumber);  	this.NumericRed.Value = red;  	this.NumericGreen.Value = green;  	this.NumericBlue.Value = blue;  }  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,TextHex_TextChanged,The following statement contains a magic number: if (this.selectedPanel != null) {  	// First' verify the input.  	string input = this.TextHex.Text.ToUpper ();  	if (input.Length != 6 || !this.ContainsOnlyHexDigits (input)) {  		this.LabelInvalidHex.Visible = true;  		return;  	}  	else {  		this.LabelInvalidHex.Visible = false;  	}  	string redHex = input.Substring (0' 2);  	string greenHex = input.Substring (2' 2);  	string blueHex = input.Substring (4' 2);  	int red = Int32.Parse (redHex' System.Globalization.NumberStyles.HexNumber);  	int green = Int32.Parse (greenHex' System.Globalization.NumberStyles.HexNumber);  	int blue = Int32.Parse (blueHex' System.Globalization.NumberStyles.HexNumber);  	this.NumericRed.Value = red;  	this.NumericGreen.Value = green;  	this.NumericBlue.Value = blue;  }  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,TextHex_TextChanged,The following statement contains a magic number: if (this.selectedPanel != null) {  	// First' verify the input.  	string input = this.TextHex.Text.ToUpper ();  	if (input.Length != 6 || !this.ContainsOnlyHexDigits (input)) {  		this.LabelInvalidHex.Visible = true;  		return;  	}  	else {  		this.LabelInvalidHex.Visible = false;  	}  	string redHex = input.Substring (0' 2);  	string greenHex = input.Substring (2' 2);  	string blueHex = input.Substring (4' 2);  	int red = Int32.Parse (redHex' System.Globalization.NumberStyles.HexNumber);  	int green = Int32.Parse (greenHex' System.Globalization.NumberStyles.HexNumber);  	int blue = Int32.Parse (blueHex' System.Globalization.NumberStyles.HexNumber);  	this.NumericRed.Value = red;  	this.NumericGreen.Value = green;  	this.NumericBlue.Value = blue;  }  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,TextHex_TextChanged,The following statement contains a magic number: if (this.selectedPanel != null) {  	// First' verify the input.  	string input = this.TextHex.Text.ToUpper ();  	if (input.Length != 6 || !this.ContainsOnlyHexDigits (input)) {  		this.LabelInvalidHex.Visible = true;  		return;  	}  	else {  		this.LabelInvalidHex.Visible = false;  	}  	string redHex = input.Substring (0' 2);  	string greenHex = input.Substring (2' 2);  	string blueHex = input.Substring (4' 2);  	int red = Int32.Parse (redHex' System.Globalization.NumberStyles.HexNumber);  	int green = Int32.Parse (greenHex' System.Globalization.NumberStyles.HexNumber);  	int blue = Int32.Parse (blueHex' System.Globalization.NumberStyles.HexNumber);  	this.NumericRed.Value = red;  	this.NumericGreen.Value = green;  	this.NumericBlue.Value = blue;  }  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,TextHex_TextChanged,The following statement contains a magic number: if (this.selectedPanel != null) {  	// First' verify the input.  	string input = this.TextHex.Text.ToUpper ();  	if (input.Length != 6 || !this.ContainsOnlyHexDigits (input)) {  		this.LabelInvalidHex.Visible = true;  		return;  	}  	else {  		this.LabelInvalidHex.Visible = false;  	}  	string redHex = input.Substring (0' 2);  	string greenHex = input.Substring (2' 2);  	string blueHex = input.Substring (4' 2);  	int red = Int32.Parse (redHex' System.Globalization.NumberStyles.HexNumber);  	int green = Int32.Parse (greenHex' System.Globalization.NumberStyles.HexNumber);  	int blue = Int32.Parse (blueHex' System.Globalization.NumberStyles.HexNumber);  	this.NumericRed.Value = red;  	this.NumericGreen.Value = green;  	this.NumericBlue.Value = blue;  }  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,TextHex_TextChanged,The following statement contains a magic number: if (this.selectedPanel != null) {  	// First' verify the input.  	string input = this.TextHex.Text.ToUpper ();  	if (input.Length != 6 || !this.ContainsOnlyHexDigits (input)) {  		this.LabelInvalidHex.Visible = true;  		return;  	}  	else {  		this.LabelInvalidHex.Visible = false;  	}  	string redHex = input.Substring (0' 2);  	string greenHex = input.Substring (2' 2);  	string blueHex = input.Substring (4' 2);  	int red = Int32.Parse (redHex' System.Globalization.NumberStyles.HexNumber);  	int green = Int32.Parse (greenHex' System.Globalization.NumberStyles.HexNumber);  	int blue = Int32.Parse (blueHex' System.Globalization.NumberStyles.HexNumber);  	this.NumericRed.Value = red;  	this.NumericGreen.Value = green;  	this.NumericBlue.Value = blue;  }  
Magic Number,FileToBitmap.Forms,PaletteEditorForm,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Forms\PaletteEditorForm.cs,TextHex_TextChanged,The following statement contains a magic number: if (input.Length != 6 || !this.ContainsOnlyHexDigits (input)) {  	this.LabelInvalidHex.Visible = true;  	return;  }  else {  	this.LabelInvalidHex.Visible = false;  }  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,Palette,The following statement contains a magic number: switch (this.BitDepth) {  case BitDepth.OneBpp:  	this.colors = new Color[2];  	break;  case BitDepth.TwoBpp:  	this.colors = new Color[4];  	break;  case BitDepth.FourBpp:  	this.colors = new Color[16];  	break;  case BitDepth.EightBpp:  	this.colors = new Color[256];  	break;  default:  	throw new Exception (String.Format ("Invalid bit depth {0}."' bitDepth.ToString ()));  }  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,Palette,The following statement contains a magic number: switch (this.BitDepth) {  case BitDepth.OneBpp:  	this.colors = new Color[2];  	break;  case BitDepth.TwoBpp:  	this.colors = new Color[4];  	break;  case BitDepth.FourBpp:  	this.colors = new Color[16];  	break;  case BitDepth.EightBpp:  	this.colors = new Color[256];  	break;  default:  	throw new Exception (String.Format ("Invalid bit depth {0}."' bitDepth.ToString ()));  }  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,Palette,The following statement contains a magic number: switch (this.BitDepth) {  case BitDepth.OneBpp:  	this.colors = new Color[2];  	break;  case BitDepth.TwoBpp:  	this.colors = new Color[4];  	break;  case BitDepth.FourBpp:  	this.colors = new Color[16];  	break;  case BitDepth.EightBpp:  	this.colors = new Color[256];  	break;  default:  	throw new Exception (String.Format ("Invalid bit depth {0}."' bitDepth.ToString ()));  }  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,Palette,The following statement contains a magic number: switch (this.BitDepth) {  case BitDepth.OneBpp:  	this.colors = new Color[2];  	break;  case BitDepth.TwoBpp:  	this.colors = new Color[4];  	break;  case BitDepth.FourBpp:  	this.colors = new Color[16];  	break;  case BitDepth.EightBpp:  	this.colors = new Color[256];  	break;  default:  	throw new Exception (String.Format ("Invalid bit depth {0}."' bitDepth.ToString ()));  }  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,Palette,The following statement contains a magic number: this.colors = new Color[2];  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,Palette,The following statement contains a magic number: this.colors = new Color[4];  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,Palette,The following statement contains a magic number: this.colors = new Color[16];  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,Palette,The following statement contains a magic number: this.colors = new Color[256];  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: sixBitRange = this.GetEquidistantHexValues (64);  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: fiveBitRange = this.GetEquidistantHexValues (32);  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: TwoBppGrayscalePalette.SetColor (1' Color.FromArgb (85' 85' 85));  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: TwoBppGrayscalePalette.SetColor (1' Color.FromArgb (85' 85' 85));  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: TwoBppGrayscalePalette.SetColor (1' Color.FromArgb (85' 85' 85));  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: TwoBppGrayscalePalette.SetColor (2' Color.FromArgb (170' 170' 170));  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: TwoBppGrayscalePalette.SetColor (2' Color.FromArgb (170' 170' 170));  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: TwoBppGrayscalePalette.SetColor (2' Color.FromArgb (170' 170' 170));  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: TwoBppGrayscalePalette.SetColor (2' Color.FromArgb (170' 170' 170));  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: TwoBppGrayscalePalette.SetColor (3' Color.White);  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: for (int i = 1; i <= 14; i++) {  	FourBppGrayscalePalette.SetColor (i' Color.FromArgb (i * 18' i * 18' i * 18));  }  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: for (int i = 1; i <= 14; i++) {  	FourBppGrayscalePalette.SetColor (i' Color.FromArgb (i * 18' i * 18' i * 18));  }  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: for (int i = 1; i <= 14; i++) {  	FourBppGrayscalePalette.SetColor (i' Color.FromArgb (i * 18' i * 18' i * 18));  }  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: for (int i = 1; i <= 14; i++) {  	FourBppGrayscalePalette.SetColor (i' Color.FromArgb (i * 18' i * 18' i * 18));  }  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: FourBppGrayscalePalette.SetColor (i' Color.FromArgb (i * 18' i * 18' i * 18));  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: FourBppGrayscalePalette.SetColor (i' Color.FromArgb (i * 18' i * 18' i * 18));  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: FourBppGrayscalePalette.SetColor (i' Color.FromArgb (i * 18' i * 18' i * 18));  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: FourBppGrayscalePalette.SetColor (15' Color.White);  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	FourBppWindowsPalette.SetColor (i' Color.FromArgb (reds [i]' greens [i]' blues [i]));  }  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	EightBppGrayscalePalette.SetColor (i' Color.FromArgb (i' i' i));  }  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	int red = (i & 0xE0) >> 5;  	int green = (i & 0x1C) >> 2;  	int blue = i & 0x03;  	EightBppColorPalette.SetColor (i' Color.FromArgb (threeBitValues [red]' threeBitValues [green]' twoBitValues [blue]));  }  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	int red = (i & 0xE0) >> 5;  	int green = (i & 0x1C) >> 2;  	int blue = i & 0x03;  	EightBppColorPalette.SetColor (i' Color.FromArgb (threeBitValues [red]' threeBitValues [green]' twoBitValues [blue]));  }  
Magic Number,FileToBitmap.Colors,Palette,C:\repos\Celarix_FileToBitmap\FileToBitmap\FileToBitmap\Colors\Palette.cs,AssignPalettes,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	int red = (i & 0xE0) >> 5;  	int green = (i & 0x1C) >> 2;  	int blue = i & 0x03;  	EightBppColorPalette.SetColor (i' Color.FromArgb (threeBitValues [red]' threeBitValues [green]' twoBitValues [blue]));  }  
