Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BusinessApps.O365ProjectsApp.Infrastructure.MicrosoftGraph,MicrosoftGraphHelper,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\MicrosoftGraph\MicrosoftGraphHelper.cs,MakeHttpRequest,Cyclomatic complexity of the method is 8
Long Parameter List,BusinessApps.O365ProjectsApp.Infrastructure,SharePointContext,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\SharePointContext.cs,SharePointContext,The method has 5 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber
Long Parameter List,BusinessApps.O365ProjectsApp.Infrastructure,SharePointContextProvider,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,BusinessApps.O365ProjectsApp.Infrastructure,SharePointAcsContext,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\SharePointContext.cs,SharePointAcsContext,The method has 7 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' contextToken' contextTokenObj
Long Parameter List,BusinessApps.O365ProjectsApp.Infrastructure,SharePointAcsContextProvider,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,BusinessApps.O365ProjectsApp.Infrastructure,SharePointHighTrustContext,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\SharePointContext.cs,SharePointHighTrustContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' logonUserIdentity
Long Parameter List,BusinessApps.O365ProjectsApp.Infrastructure,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,BusinessApps.O365ProjectsApp.Infrastructure,TokenHelper,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,GetAccessToken,The method has 5 parameters. Parameters: authorizationCode' targetPrincipalName' targetHost' targetRealm' redirectUri
Long Parameter List,BusinessApps.O365ProjectsApp.Infrastructure,TokenHelper,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,GetClientContextWithAuthorizationCode,The method has 5 parameters. Parameters: targetUrl' targetPrincipalName' authorizationCode' targetRealm' redirectUri
Long Parameter List,BusinessApps.O365ProjectsApp.Infrastructure,TokenHelper,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,IssueToken,The method has 9 parameters. Parameters: sourceApplication' issuerApplication' sourceRealm' targetApplication' targetRealm' targetApplicationHostName' trustedForDelegation' claims' appOnly
Long Parameter List,BusinessApps.O365ProjectsApp.Infrastructure,SharePointContextToken,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,SharePointContextToken,The method has 5 parameters. Parameters: issuer' audience' validFrom' validTo' claims
Long Parameter List,BusinessApps.O365ProjectsApp.Infrastructure,SharePointContextToken,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,SharePointContextToken,The method has 7 parameters. Parameters: issuer' audience' validFrom' validTo' claims' issuerToken' actorToken
Long Parameter List,BusinessApps.O365ProjectsApp.Infrastructure,SharePointContextToken,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,SharePointContextToken,The method has 6 parameters. Parameters: issuer' audience' validFrom' validTo' claims' signingCredentials
Long Parameter List,BusinessApps.O365ProjectsApp.Infrastructure.MicrosoftGraph,MicrosoftGraphHelper,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\MicrosoftGraph\MicrosoftGraphHelper.cs,MakeHttpRequest,The method has 7 parameters. Parameters: httpMethod' requestUrl' accept' content' contentType' accessToken' resultPredicate
Long Identifier,BusinessApps.O365ProjectsApp.Infrastructure.Configuration,O365ProjectsConfigurationGeneralSettings,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\Configuration\O365ProjectsConfiguration.cs,,The length of the parameter appOnlyCertificateThumbprintField is 33.
Long Identifier,BusinessApps.O365ProjectsApp.Infrastructure,SharePointContextProvider,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\SharePointContext.cs,CheckRedirectionStatus,The length of the parameter SPHasRedirectedToSharePointKey is 30.
Long Identifier,BusinessApps.O365ProjectsApp.Infrastructure,TokenHelper,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,,The length of the parameter AcsMetadataEndPointRelativeUrl is 30.
Long Identifier,BusinessApps.O365ProjectsApp.Infrastructure,TokenHelper,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,,The length of the parameter TrustedForImpersonationClaimType is 32.
Long Identifier,BusinessApps.O365ProjectsApp.Infrastructure,TokenHelper,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,,The length of the parameter ClientSigningCertificatePassword is 32.
Long Identifier,BusinessApps.O365ProjectsApp.Infrastructure,AcsMetadataParser,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,GetMetadataDocument,The length of the parameter acsMetadataEndpointUrlWithRealm is 31.
Long Statement,BusinessApps.O365ProjectsApp.Infrastructure,SharePointContextProvider,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\SharePointContext.cs,CheckRedirectionStatus,The length of the statement  "            // Removes the values that are included in {StandardTokens}' as {StandardTokens} will be inserted at the beginning of the query string. " is 135.
Long Statement,BusinessApps.O365ProjectsApp.Infrastructure,SharePointContextProvider,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\SharePointContext.cs,CheckRedirectionStatus,The length of the statement  "            string redirectUrlString = TokenHelper.GetAppContextTokenRequestUrl(spHostUrl.AbsoluteUri' Uri.EscapeDataString(returnUrlString)); " is 130.
Long Statement,BusinessApps.O365ProjectsApp.Infrastructure,SharePointAcsContextProvider,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\SharePointContext.cs,CreateSharePointContext,The length of the statement  "            return new SharePointAcsContext(spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' contextTokenString' contextToken); " is 132.
Long Statement,BusinessApps.O365ProjectsApp.Infrastructure,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\SharePointContext.cs,CreateSharePointContext,The length of the statement  "            if (logonUserIdentity == null || !logonUserIdentity.IsAuthenticated || logonUserIdentity.IsGuest || logonUserIdentity.User == null) " is 131.
Long Statement,BusinessApps.O365ProjectsApp.Infrastructure,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\SharePointContext.cs,CreateSharePointContext,The length of the statement  "            return new SharePointHighTrustContext(spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' logonUserIdentity); " is 123.
Long Statement,BusinessApps.O365ProjectsApp.Infrastructure,SPORemoteActions,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\SPORemoteActions.cs,ProvisionArtifactsByCode,The length of the statement  "                        customAction.Url = $"{O365ProjectsAppContext.CurrentAppSiteUrl}Project/?SiteUrl={{SiteUrl}}&ListId={{ListId}}&ItemId={{ItemId}}&ItemUrl={{ItemUrl}}"; " is 149.
Long Statement,BusinessApps.O365ProjectsApp.Infrastructure,SPORemoteActions,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\SPORemoteActions.cs,ProvisionArtifactsByCode,The length of the statement  "                        customAction.Url = $"{O365ProjectsAppContext.CurrentAppSiteUrl}Project/?SiteUrl={{SiteUrl}}&ListId={{ListId}}&ItemId={{ItemId}}&ItemUrl={{ItemUrl}}"; " is 149.
Long Statement,BusinessApps.O365ProjectsApp.Infrastructure,TokenHelper,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,GetAccessToken,The length of the statement  "            OAuth2AccessTokenRequest oauth2Request = OAuth2MessageFactory.CreateAccessTokenRequestWithRefreshToken(clientId' ClientSecret' refreshToken' resource); " is 151.
Long Statement,BusinessApps.O365ProjectsApp.Infrastructure,TokenHelper,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,GetAppOnlyAccessToken,The length of the statement  "            OAuth2AccessTokenRequest oauth2Request = OAuth2MessageFactory.CreateAccessTokenRequestWithClientCredentials(clientId' ClientSecret' resource); " is 142.
Long Statement,BusinessApps.O365ProjectsApp.Infrastructure,TokenHelper,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,CreateAppEventClientContext,The length of the statement  "            Uri sharepointUrl = useAppWeb ? properties.AppEventProperties.AppWebFullUrl : properties.AppEventProperties.HostWebFullUrl; " is 123.
Long Statement,BusinessApps.O365ProjectsApp.Infrastructure,TokenHelper,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,GetClientContextWithAuthorizationCode,The length of the statement  "            return GetClientContextWithAuthorizationCode(targetUrl' SharePointPrincipal' authorizationCode' GetRealmFromTargetUrl(new Uri(targetUrl))' redirectUri); " is 152.
Long Statement,BusinessApps.O365ProjectsApp.Infrastructure,TokenHelper,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,CreateAcsClientContextForUrl,The length of the statement  "            SharePointContextToken contextToken = ReadAndValidateContextToken(contextTokenString' OperationContext.Current.IncomingMessageHeaders.To.Host); " is 143.
Long Statement,BusinessApps.O365ProjectsApp.Infrastructure,TokenHelper,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,IssueToken,The length of the statement  "            string issuer = string.IsNullOrEmpty(sourceRealm) ? issuerApplication : string.Format("{0}@{1}"' issuerApplication' sourceRealm); " is 129.
Long Statement,BusinessApps.O365ProjectsApp.Infrastructure,TokenHelper,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,IssueToken,The length of the statement  "            string nameid = string.IsNullOrEmpty(sourceRealm) ? sourceApplication : string.Format("{0}@{1}"' sourceApplication' sourceRealm); " is 129.
Long Statement,BusinessApps.O365ProjectsApp.Infrastructure,TokenHelper,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,IssueToken,The length of the statement  "            List<JsonWebTokenClaim> outerClaims = null == claims ? new List<JsonWebTokenClaim>() : new List<JsonWebTokenClaim>(claims); " is 123.
Long Statement,BusinessApps.O365ProjectsApp.Infrastructure,SharePointContextToken,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,Create,The length of the statement  "            return new SharePointContextToken(contextToken.Issuer' contextToken.Audience' contextToken.ValidFrom' contextToken.ValidTo' contextToken.Claims); " is 145.
Complex Conditional,BusinessApps.O365ProjectsApp.Infrastructure,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\SharePointContext.cs,CreateSharePointContext,The conditional expression  "logonUserIdentity == null || !logonUserIdentity.IsAuthenticated || logonUserIdentity.IsGuest || logonUserIdentity.User == null"  is complex.
Complex Conditional,BusinessApps.O365ProjectsApp.Infrastructure.MicrosoftGraph,MicrosoftGraphHelper,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\MicrosoftGraph\MicrosoftGraphHelper.cs,GetAccessTokenForCurrentContextAsync,The conditional expression  "!forceAppOnlyContext &&                      System.Security.Claims.ClaimsPrincipal.Current != null &&                      System.Security.Claims.ClaimsPrincipal.Current.Identity != null &&                      System.Security.Claims.ClaimsPrincipal.Current.Identity.IsAuthenticated"  is complex.
Empty Catch Block,BusinessApps.O365ProjectsApp.Infrastructure,SharePointAcsContext,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\SharePointContext.cs,RenewAccessTokenIfNeeded,The method has an empty catch block.
Empty Catch Block,BusinessApps.O365ProjectsApp.Infrastructure.MicrosoftGraph,GraphRemoteActions,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\MicrosoftGraph\GraphRemoteActions.cs,CreateOffice365Group,The method has an empty catch block.
Magic Number,BusinessApps.O365ProjectsApp.Infrastructure,SPORemoteActions,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\SPORemoteActions.cs,ProvisionArtifactsByCode,The following statement contains a magic number: using (ClientContext context = am.GetAzureADAppOnlyAuthenticatedContext(                  O365ProjectsAppContext.CurrentSiteUrl' O365ProjectsAppSettings.ClientId'                  O365ProjectsAppSettings.TenantId' O365ProjectsAppSettings.AppOnlyCertificate))              {                  Web web = context.Web;                  List targetLibrary = null;                    // If the target library does not exist (PnP extension method)                  if (!web.ListExists(O365ProjectsAppSettings.LibraryTitle))                  {                      // Create it using another PnP extension method                      targetLibrary = web.CreateList(ListTemplateType.DocumentLibrary'                          O365ProjectsAppSettings.LibraryTitle' true' true);                  }                  else                  {                      targetLibrary = web.GetListByTitle(O365ProjectsAppSettings.LibraryTitle);                  }                    // If the target library exists                  if (targetLibrary != null)                  {                      // Try to get the user's custom action                      UserCustomAction customAction = targetLibrary.GetCustomAction(O365ProjectsAppConstants.ECB_Menu_Name);                        // If it doesn't exist                      if (customAction == null)                      {                          // Add the user custom action to the list                          customAction = targetLibrary.UserCustomActions.Add();                          customAction.Name = O365ProjectsAppConstants.ECB_Menu_Name;                          customAction.Location = "EditControlBlock";                          customAction.Sequence = 100;                          customAction.Title = "Manage Business Project";                          customAction.Url = $"{O365ProjectsAppContext.CurrentAppSiteUrl}Project/?SiteUrl={{SiteUrl}}&ListId={{ListId}}&ItemId={{ItemId}}&ItemUrl={{ItemUrl}}";                      }                      else                      {                          // Update the already existing Custom Action                          customAction.Name = O365ProjectsAppConstants.ECB_Menu_Name;                          customAction.Location = "EditControlBlock";                          customAction.Sequence = 100;                          customAction.Title = "Manage Business Project";                          customAction.Url = $"{O365ProjectsAppContext.CurrentAppSiteUrl}Project/?SiteUrl={{SiteUrl}}&ListId={{ListId}}&ItemId={{ItemId}}&ItemUrl={{ItemUrl}}";                      }                        customAction.Update();                      context.ExecuteQueryRetry();                    }              }
Magic Number,BusinessApps.O365ProjectsApp.Infrastructure,SPORemoteActions,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\SPORemoteActions.cs,ProvisionArtifactsByCode,The following statement contains a magic number: using (ClientContext context = am.GetAzureADAppOnlyAuthenticatedContext(                  O365ProjectsAppContext.CurrentSiteUrl' O365ProjectsAppSettings.ClientId'                  O365ProjectsAppSettings.TenantId' O365ProjectsAppSettings.AppOnlyCertificate))              {                  Web web = context.Web;                  List targetLibrary = null;                    // If the target library does not exist (PnP extension method)                  if (!web.ListExists(O365ProjectsAppSettings.LibraryTitle))                  {                      // Create it using another PnP extension method                      targetLibrary = web.CreateList(ListTemplateType.DocumentLibrary'                          O365ProjectsAppSettings.LibraryTitle' true' true);                  }                  else                  {                      targetLibrary = web.GetListByTitle(O365ProjectsAppSettings.LibraryTitle);                  }                    // If the target library exists                  if (targetLibrary != null)                  {                      // Try to get the user's custom action                      UserCustomAction customAction = targetLibrary.GetCustomAction(O365ProjectsAppConstants.ECB_Menu_Name);                        // If it doesn't exist                      if (customAction == null)                      {                          // Add the user custom action to the list                          customAction = targetLibrary.UserCustomActions.Add();                          customAction.Name = O365ProjectsAppConstants.ECB_Menu_Name;                          customAction.Location = "EditControlBlock";                          customAction.Sequence = 100;                          customAction.Title = "Manage Business Project";                          customAction.Url = $"{O365ProjectsAppContext.CurrentAppSiteUrl}Project/?SiteUrl={{SiteUrl}}&ListId={{ListId}}&ItemId={{ItemId}}&ItemUrl={{ItemUrl}}";                      }                      else                      {                          // Update the already existing Custom Action                          customAction.Name = O365ProjectsAppConstants.ECB_Menu_Name;                          customAction.Location = "EditControlBlock";                          customAction.Sequence = 100;                          customAction.Title = "Manage Business Project";                          customAction.Url = $"{O365ProjectsAppContext.CurrentAppSiteUrl}Project/?SiteUrl={{SiteUrl}}&ListId={{ListId}}&ItemId={{ItemId}}&ItemUrl={{ItemUrl}}";                      }                        customAction.Update();                      context.ExecuteQueryRetry();                    }              }
Magic Number,BusinessApps.O365ProjectsApp.Infrastructure,TokenHelper,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,GetRealmFromTargetUrl,The following statement contains a magic number: try              {                  using (request.GetResponse())                  {                  }              }              catch (WebException e)              {                  if (e.Response == null)                  {                      return null;                  }                    string bearerResponseHeader = e.Response.Headers["WWW-Authenticate"];                  if (string.IsNullOrEmpty(bearerResponseHeader))                  {                      return null;                  }                    const string bearer = "Bearer realm=\"";                  int bearerIndex = bearerResponseHeader.IndexOf(bearer' StringComparison.Ordinal);                  if (bearerIndex < 0)                  {                      return null;                  }                    int realmIndex = bearerIndex + bearer.Length;                    if (bearerResponseHeader.Length >= realmIndex + 36)                  {                      string targetRealm = bearerResponseHeader.Substring(realmIndex' 36);                        Guid realmGuid;                        if (Guid.TryParse(targetRealm' out realmGuid))                      {                          return targetRealm;                      }                  }              }
Magic Number,BusinessApps.O365ProjectsApp.Infrastructure,TokenHelper,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\TokenHelper.cs,GetRealmFromTargetUrl,The following statement contains a magic number: try              {                  using (request.GetResponse())                  {                  }              }              catch (WebException e)              {                  if (e.Response == null)                  {                      return null;                  }                    string bearerResponseHeader = e.Response.Headers["WWW-Authenticate"];                  if (string.IsNullOrEmpty(bearerResponseHeader))                  {                      return null;                  }                    const string bearer = "Bearer realm=\"";                  int bearerIndex = bearerResponseHeader.IndexOf(bearer' StringComparison.Ordinal);                  if (bearerIndex < 0)                  {                      return null;                  }                    int realmIndex = bearerIndex + bearer.Length;                    if (bearerResponseHeader.Length >= realmIndex + 36)                  {                      string targetRealm = bearerResponseHeader.Substring(realmIndex' 36);                        Guid realmGuid;                        if (Guid.TryParse(targetRealm' out realmGuid))                      {                          return targetRealm;                      }                  }              }
Magic Number,BusinessApps.O365ProjectsApp.Infrastructure.MicrosoftGraph,GraphRemoteActions,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\MicrosoftGraph\GraphRemoteActions.cs,CreateOffice365Group,The following statement contains a magic number: if (photo != null)              {                  // Retry up to 10 times within 5 seconds' because the                   // Office 365 Group sometime takes long to be ready                  Int32 retryCount = 0;                  while (true)                  {                      retryCount++;                        try                      {                          if (retryCount > 10) break;                          System.Threading.Thread.Sleep(TimeSpan.FromMilliseconds(500));                            photo.Position = 0;                          MemoryStream photoCopy = new MemoryStream();                          photo.CopyTo(photoCopy);                          photoCopy.Position = 0;                            MicrosoftGraphHelper.MakePatchRequestForString(                              String.Format("{0}groups/{1}/photo/$value"'                                  MicrosoftGraphHelper.MicrosoftGraphV1BaseUri'                                  addedGroup.Id)'                              photoCopy' "image/jpeg"' accessToken: accessToken);                            break;                      }                      catch                      {                          // Ignore any exception' just wait for a while and retry                      }                  }              }
Magic Number,BusinessApps.O365ProjectsApp.Infrastructure.MicrosoftGraph,GraphRemoteActions,C:\repos\OfficeDev_PnP\Samples\BusinessApps.O365ProjectsApp\BusinessApps.O365ProjectsApp.Infrastructure\MicrosoftGraph\GraphRemoteActions.cs,CreateOffice365Group,The following statement contains a magic number: if (photo != null)              {                  // Retry up to 10 times within 5 seconds' because the                   // Office 365 Group sometime takes long to be ready                  Int32 retryCount = 0;                  while (true)                  {                      retryCount++;                        try                      {                          if (retryCount > 10) break;                          System.Threading.Thread.Sleep(TimeSpan.FromMilliseconds(500));                            photo.Position = 0;                          MemoryStream photoCopy = new MemoryStream();                          photo.CopyTo(photoCopy);                          photoCopy.Position = 0;                            MicrosoftGraphHelper.MakePatchRequestForString(                              String.Format("{0}groups/{1}/photo/$value"'                                  MicrosoftGraphHelper.MicrosoftGraphV1BaseUri'                                  addedGroup.Id)'                              photoCopy' "image/jpeg"' accessToken: accessToken);                            break;                      }                      catch                      {                          // Ignore any exception' just wait for a while and retry                      }                  }              }
