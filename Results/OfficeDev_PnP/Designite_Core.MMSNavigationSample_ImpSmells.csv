Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Core.MMSNavigationSample,Program,C:\repos\OfficeDev_PnP\Samples\Core.MMSNavigationSample\Core.MMSNavigationSample\Program.cs,CreateTermSetAndTerms,Cyclomatic complexity of the method is 12
Long Statement,Core.MMSNavigationSample,Program,C:\repos\OfficeDev_PnP\Samples\Core.MMSNavigationSample\Core.MMSNavigationSample\Program.cs,Main,The length of the statement  "                //Let's connect to the Taxonomy Session. The hierarchy for connection is Taxonomy Session --> Term Store --> Term Group --> Term Set --> Terms " is 142.
Long Statement,Core.MMSNavigationSample,Program,C:\repos\OfficeDev_PnP\Samples\Core.MMSNavigationSample\Core.MMSNavigationSample\Program.cs,CreateTermSetAndTerms,The length of the statement  "                        term.SetLocalCustomProperty("_Sys_Nav_ExcludedProviders"' String.Concat("GlobalNavigationTaxonomyProvider"' "'"' "CurrentNavigationTaxonomyProvider")); " is 151.
Magic Number,Core.MMSNavigationSample,Program,C:\repos\OfficeDev_PnP\Samples\Core.MMSNavigationSample\Core.MMSNavigationSample\Program.cs,CreateTermSetAndTerms,The following statement contains a magic number: if (termSet == null)              {                  termSet = termGroup.CreateTermSet(termSetElementName' new Guid(termSetElementGuid)' 1033);              }
Magic Number,Core.MMSNavigationSample,Program,C:\repos\OfficeDev_PnP\Samples\Core.MMSNavigationSample\Core.MMSNavigationSample\Program.cs,CreateTermSetAndTerms,The following statement contains a magic number: foreach (XElement termElement in termSetElement.Elements())              {                  #region set properties for each Term                  string termElementName = termElement.Attribute("Name").Value;                  Term term = termSet.Terms.FirstOrDefault(e => e.Name.Equals(termElementName) == true);                  if (term == null)                  {                      term = termSet.CreateTerm(termElementName' 1033' Guid.NewGuid());                  }                  //clientContext.Load(term); clientContext.ExecuteQuery();                  if (termElement.Attribute("NavNodeTitle").Value.Length>0)                  {                      term.SetLocalCustomProperty("_Sys_Nav_Title"' termElement.Attribute("NavNodeTitle").Value);                  }                  bool showinGlobal = Convert.ToBoolean(termElement.Attribute("ShowinGlobal").Value);                  bool showinLocal = Convert.ToBoolean(termElement.Attribute("ShowinLocal").Value);                  if (!showinGlobal || !showinLocal)                  {                      if(!showinGlobal && !showinLocal)                      {                          term.SetLocalCustomProperty("_Sys_Nav_ExcludedProviders"' String.Concat("GlobalNavigationTaxonomyProvider"' "'"' "CurrentNavigationTaxonomyProvider"));                      }                      if(!showinGlobal)                      {                          term.SetLocalCustomProperty("_Sys_Nav_ExcludedProviders"' "\"GlobalNavigationTaxonomyProvider\"");                      }                      else                      {                          term.SetLocalCustomProperty("_Sys_Nav_ExcludedProviders"' "\"CurrentNavigationTaxonomyProvider\"");                      }                  }                  if(termElement.Attribute("NavNodeSimpleLink").Value.Length>0)                  {                      term.SetLocalCustomProperty("_Sys_Nav_SimpleLinkUrl"' termElement.Attribute("NavNodeSimpleLink").Value);                  }                  if(termElement.Attribute("termFriendlyURLLink").Value.Length>0)                  {                      term.SetLocalCustomProperty("_Sys_Nav_FriendlyUrlSegment"' termElement.Attribute("termFriendlyURLLink").Value);                  }                  if (termElement.Attribute("NavTargetURL").Value.Length > 0)                  {                      term.SetLocalCustomProperty("_Sys_Nav_TargetUrl"' termElement.Attribute("NavTargetURL").Value);                  }                  clientContext.Load(term);clientContext.ExecuteQuery();                  #endregion              }
