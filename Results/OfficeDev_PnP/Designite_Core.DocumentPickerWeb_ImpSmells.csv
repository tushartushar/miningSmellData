Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Core.DocumentPickerWeb,SharePointContext,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\SharePointContext.cs,SharePointContext,The method has 5 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber
Long Parameter List,Core.DocumentPickerWeb,SharePointContextProvider,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,Core.DocumentPickerWeb,SharePointAcsContext,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\SharePointContext.cs,SharePointAcsContext,The method has 7 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' contextToken' contextTokenObj
Long Parameter List,Core.DocumentPickerWeb,SharePointAcsContextProvider,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,Core.DocumentPickerWeb,SharePointHighTrustContext,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\SharePointContext.cs,SharePointHighTrustContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' logonUserIdentity
Long Parameter List,Core.DocumentPickerWeb,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,Core.DocumentPickerWeb,TokenHelper,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,GetAccessToken,The method has 5 parameters. Parameters: authorizationCode' targetPrincipalName' targetHost' targetRealm' redirectUri
Long Parameter List,Core.DocumentPickerWeb,TokenHelper,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,GetClientContextWithAuthorizationCode,The method has 5 parameters. Parameters: targetUrl' targetPrincipalName' authorizationCode' targetRealm' redirectUri
Long Parameter List,Core.DocumentPickerWeb,TokenHelper,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,IssueToken,The method has 9 parameters. Parameters: sourceApplication' issuerApplication' sourceRealm' targetApplication' targetRealm' targetApplicationHostName' trustedForDelegation' claims' appOnly
Long Parameter List,Core.DocumentPickerWeb,SharePointContextToken,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,SharePointContextToken,The method has 5 parameters. Parameters: issuer' audience' validFrom' validTo' claims
Long Parameter List,Core.DocumentPickerWeb,SharePointContextToken,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,SharePointContextToken,The method has 7 parameters. Parameters: issuer' audience' validFrom' validTo' claims' issuerToken' actorToken
Long Parameter List,Core.DocumentPickerWeb,SharePointContextToken,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,SharePointContextToken,The method has 6 parameters. Parameters: issuer' audience' validFrom' validTo' claims' signingCredentials
Long Identifier,Core.DocumentPickerWeb,Default,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\Pages\Default.aspx.cs,,The length of the parameter DocumentPickerWithOptionsValue is 30.
Long Identifier,Core.DocumentPickerWeb,Default,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\Pages\Default.aspx.cs,,The length of the parameter DocumentPickerWithCustomDataSourceValue is 39.
Long Identifier,Core.DocumentPickerWeb,SharePointContext,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\SharePointContext.cs,GetDatabaseConnectionString,The length of the parameter LocalDBInstanceForDebuggingKey is 30.
Long Identifier,Core.DocumentPickerWeb,SharePointContextProvider,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\SharePointContext.cs,CheckRedirectionStatus,The length of the parameter SPHasRedirectedToSharePointKey is 30.
Long Identifier,Core.DocumentPickerWeb,TokenHelper,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,,The length of the parameter AcsMetadataEndPointRelativeUrl is 30.
Long Identifier,Core.DocumentPickerWeb,TokenHelper,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,,The length of the parameter TrustedForImpersonationClaimType is 32.
Long Identifier,Core.DocumentPickerWeb,TokenHelper,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,,The length of the parameter ClientSigningCertificatePassword is 32.
Long Identifier,Core.DocumentPickerWeb,AcsMetadataParser,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,GetMetadataDocument,The length of the parameter acsMetadataEndpointUrlWithRealm is 31.
Long Statement,Core.DocumentPickerWeb,Provisionner,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\Provisionner.cs,ProvisionData,The length of the statement  "                    string assemblyPath = System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase); " is 124.
Long Statement,Core.DocumentPickerWeb,SharePointContextProvider,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\SharePointContext.cs,CheckRedirectionStatus,The length of the statement  "            // Removes the values that are included in {StandardTokens}' as {StandardTokens} will be inserted at the beginning of the query string. " is 135.
Long Statement,Core.DocumentPickerWeb,SharePointContextProvider,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\SharePointContext.cs,CheckRedirectionStatus,The length of the statement  "            string redirectUrlString = TokenHelper.GetAppContextTokenRequestUrl(spHostUrl.AbsoluteUri' Uri.EscapeDataString(returnUrlString)); " is 130.
Long Statement,Core.DocumentPickerWeb,SharePointAcsContextProvider,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\SharePointContext.cs,CreateSharePointContext,The length of the statement  "            return new SharePointAcsContext(spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' contextTokenString' contextToken); " is 132.
Long Statement,Core.DocumentPickerWeb,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\SharePointContext.cs,CreateSharePointContext,The length of the statement  "            if (logonUserIdentity == null || !logonUserIdentity.IsAuthenticated || logonUserIdentity.IsGuest || logonUserIdentity.User == null) " is 131.
Long Statement,Core.DocumentPickerWeb,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\SharePointContext.cs,CreateSharePointContext,The length of the statement  "            return new SharePointHighTrustContext(spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' logonUserIdentity); " is 123.
Long Statement,Core.DocumentPickerWeb,TokenHelper,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,GetAccessToken,The length of the statement  "            OAuth2AccessTokenRequest oauth2Request = OAuth2MessageFactory.CreateAccessTokenRequestWithRefreshToken(clientId' ClientSecret' refreshToken' resource); " is 151.
Long Statement,Core.DocumentPickerWeb,TokenHelper,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,GetAppOnlyAccessToken,The length of the statement  "            OAuth2AccessTokenRequest oauth2Request = OAuth2MessageFactory.CreateAccessTokenRequestWithClientCredentials(clientId' ClientSecret' resource); " is 142.
Long Statement,Core.DocumentPickerWeb,TokenHelper,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,CreateAppEventClientContext,The length of the statement  "            Uri sharepointUrl = useAppWeb ? properties.AppEventProperties.AppWebFullUrl : properties.AppEventProperties.HostWebFullUrl; " is 123.
Long Statement,Core.DocumentPickerWeb,TokenHelper,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,GetClientContextWithAuthorizationCode,The length of the statement  "            return GetClientContextWithAuthorizationCode(targetUrl' SharePointPrincipal' authorizationCode' GetRealmFromTargetUrl(new Uri(targetUrl))' redirectUri); " is 152.
Long Statement,Core.DocumentPickerWeb,TokenHelper,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,CreateAcsClientContextForUrl,The length of the statement  "            SharePointContextToken contextToken = ReadAndValidateContextToken(contextTokenString' OperationContext.Current.IncomingMessageHeaders.To.Host); " is 143.
Long Statement,Core.DocumentPickerWeb,TokenHelper,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,IssueToken,The length of the statement  "            string issuer = string.IsNullOrEmpty(sourceRealm) ? issuerApplication : string.Format("{0}@{1}"' issuerApplication' sourceRealm); " is 129.
Long Statement,Core.DocumentPickerWeb,TokenHelper,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,IssueToken,The length of the statement  "            string nameid = string.IsNullOrEmpty(sourceRealm) ? sourceApplication : string.Format("{0}@{1}"' sourceApplication' sourceRealm); " is 129.
Long Statement,Core.DocumentPickerWeb,TokenHelper,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,IssueToken,The length of the statement  "            List<JsonWebTokenClaim> outerClaims = null == claims ? new List<JsonWebTokenClaim>() : new List<JsonWebTokenClaim>(claims); " is 123.
Long Statement,Core.DocumentPickerWeb,SharePointContextToken,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,Create,The length of the statement  "            return new SharePointContextToken(contextToken.Issuer' contextToken.Audience' contextToken.ValidFrom' contextToken.ValidTo' contextToken.Claims); " is 145.
Complex Conditional,Core.DocumentPickerWeb,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\SharePointContext.cs,CreateSharePointContext,The conditional expression  "logonUserIdentity == null || !logonUserIdentity.IsAuthenticated || logonUserIdentity.IsGuest || logonUserIdentity.User == null"  is complex.
Empty Catch Block,Core.DocumentPickerWeb,SharePointAcsContext,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\SharePointContext.cs,RenewAccessTokenIfNeeded,The method has an empty catch block.
Magic Number,Core.DocumentPickerWeb,Provisionner,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\Provisionner.cs,ProvisionData,The following statement contains a magic number: using (var clientContext = spContext.CreateUserClientContextForSPHost())              {                  if (!IsContentProvisionned(clientContext))                  {                      //get document path                      string assemblyPath = System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase);                      assemblyPath = assemblyPath.Substring(6);                        //create library 1                      var docLibrary1 = CreateDocumentLibrary(clientContext' DocLibrary1Name);                      ProvisionnedList1Id = docLibrary1.Id;                        //create folders for library 1                      var folderImportantDocuments = CreateFolder(clientContext' docLibrary1.RootFolder' "Important documents");                      var folderFlagged = CreateFolder(clientContext' folderImportantDocuments' "Flagged");                      var folderOther = CreateFolder(clientContext' docLibrary1.RootFolder' "Other");                        //add files for library 1                      UploadFile(clientContext' docLibrary1.RootFolder' assemblyPath' "sample txt.txt");                      UploadFile(clientContext' docLibrary1.RootFolder' assemblyPath' "Sample word doc 1.docx");                      UploadFile(clientContext' folderImportantDocuments' assemblyPath' "Sample word doc 2.docx");                      UploadFile(clientContext' folderImportantDocuments' assemblyPath' "Sample ppt1.pptx");                      UploadFile(clientContext' folderFlagged' assemblyPath' "sample excel 1.xlsx");                      UploadFile(clientContext' folderOther' assemblyPath' "Sample ppt2.pptx");                        //create library 2                      var docLibrary2 = CreateDocumentLibrary(clientContext' DocLibrary2Name);                      ProvisionnedList2Id = docLibrary2.Id;                        //create folders for library 2                      var folderMixedFiles = CreateFolder(clientContext' docLibrary2.RootFolder' "Mixed documents");                      var folderOldDocuments = CreateFolder(clientContext' docLibrary2.RootFolder' "Old documents");                        //add files for library 2                      UploadFile(clientContext' folderMixedFiles' assemblyPath' "sample excel 1.xlsx");                      UploadFile(clientContext' folderMixedFiles' assemblyPath' "Sample word doc 1.docx");                      UploadFile(clientContext' folderOldDocuments' assemblyPath' "sample excel 2.xlsx");                  }              }
Magic Number,Core.DocumentPickerWeb,TokenHelper,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,GetRealmFromTargetUrl,The following statement contains a magic number: try              {                  using (request.GetResponse())                  {                  }              }              catch (WebException e)              {                  if (e.Response == null)                  {                      return null;                  }                    string bearerResponseHeader = e.Response.Headers["WWW-Authenticate"];                  if (string.IsNullOrEmpty(bearerResponseHeader))                  {                      return null;                  }                    const string bearer = "Bearer realm=\"";                  int bearerIndex = bearerResponseHeader.IndexOf(bearer' StringComparison.Ordinal);                  if (bearerIndex < 0)                  {                      return null;                  }                    int realmIndex = bearerIndex + bearer.Length;                    if (bearerResponseHeader.Length >= realmIndex + 36)                  {                      string targetRealm = bearerResponseHeader.Substring(realmIndex' 36);                        Guid realmGuid;                        if (Guid.TryParse(targetRealm' out realmGuid))                      {                          return targetRealm;                      }                  }              }
Magic Number,Core.DocumentPickerWeb,TokenHelper,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\TokenHelper.cs,GetRealmFromTargetUrl,The following statement contains a magic number: try              {                  using (request.GetResponse())                  {                  }              }              catch (WebException e)              {                  if (e.Response == null)                  {                      return null;                  }                    string bearerResponseHeader = e.Response.Headers["WWW-Authenticate"];                  if (string.IsNullOrEmpty(bearerResponseHeader))                  {                      return null;                  }                    const string bearer = "Bearer realm=\"";                  int bearerIndex = bearerResponseHeader.IndexOf(bearer' StringComparison.Ordinal);                  if (bearerIndex < 0)                  {                      return null;                  }                    int realmIndex = bearerIndex + bearer.Length;                    if (bearerResponseHeader.Length >= realmIndex + 36)                  {                      string targetRealm = bearerResponseHeader.Substring(realmIndex' 36);                        Guid realmGuid;                        if (Guid.TryParse(targetRealm' out realmGuid))                      {                          return targetRealm;                      }                  }              }
Missing Default,Core.DocumentPickerWeb,Default,C:\repos\OfficeDev_PnP\Components\Core.DocumentPicker\Core.DocumentPickerWeb\Pages\Default.aspx.cs,Page_PreInit,The following switch statement is missing a default case: switch (SharePointContextProvider.CheckRedirectionStatus(Context' out redirectUrl))              {                  case RedirectionStatus.Ok:                      return;                  case RedirectionStatus.ShouldRedirect:                      Response.Redirect(redirectUrl.AbsoluteUri' endResponse: true);                      break;                  case RedirectionStatus.CanNotRedirect:                      Response.Write("An error occurred while processing your request.");                      Response.End();                      break;              }
