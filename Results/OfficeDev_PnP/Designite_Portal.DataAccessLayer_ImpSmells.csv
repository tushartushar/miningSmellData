Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureGlobalNavConfigList,Cyclomatic complexity of the method is 8
Complex Method,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureCompanyLinksConfigList,Cyclomatic complexity of the method is 8
Complex Method,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureLocalNavConfigList,Cyclomatic complexity of the method is 8
Long Parameter List,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,UploadMasterPage,The method has 5 parameters. Parameters: web' mpFileName' localFilePath' title' description
Long Identifier,Portal.DataAccessLayer,Constants,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Constants.cs,,The length of the parameter PropertyBagInheritsCustomMaster is 31.
Long Identifier,Portal.DataAccessLayer,Constants,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Constants.cs,,The length of the parameter ConfigurationListWebRelativeUrl is 31.
Long Identifier,Portal.DataAccessLayer,Constants,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Constants.cs,,The length of the parameter CompanyLinksListWebRelativeUrl is 30.
Long Statement,Portal.DataAccessLayer,ConfigureAdminSite,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\ConfigureAdminSite.cs,DoWork,The length of the statement  "            string adminUsername = String.Format("{0}{1}"' (String.IsNullOrEmpty(Program.AdminDomain) ? "" : String.Format("{0}\\"' Program.AdminDomain))' Program.AdminUsername); " is 166.
Long Statement,Portal.DataAccessLayer,ConfigureAdminSite,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\ConfigureAdminSite.cs,ProcessSite,The length of the statement  "                using (ClientContext userContext = Helper.CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl)) " is 149.
Long Statement,Portal.DataAccessLayer,ConfigureCdnSite,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\ConfigureCdnSite.cs,DoWork,The length of the statement  "            string adminUsername = String.Format("{0}{1}"' (String.IsNullOrEmpty(Program.AdminDomain) ? "" : String.Format("{0}\\"' Program.AdminDomain))' Program.AdminUsername); " is 166.
Long Statement,Portal.DataAccessLayer,ConfigureCdnSite,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\ConfigureCdnSite.cs,ProcessSite,The length of the statement  "                using (ClientContext userContext = Helper.CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl)) " is 149.
Long Statement,Portal.DataAccessLayer,ConfigureCdnSite,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\ConfigureCdnSite.cs,EnsureCdn,The length of the statement  "                    "NOTE: Ensure that the 'src' attribute is set to [{0}] for all CDN file <script> tags in the custom masterpage file [{1}]"'  " is 123.
Long Statement,Portal.DataAccessLayer,ConfigureCdnSite,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\ConfigureCdnSite.cs,EnsureCdnFiles,The length of the statement  "                    Logger.LogInfoMessage(String.Format("{1} files found in local file path [{0}]..."' localFilePath' sourceFiles.Length)' false); " is 126.
Long Statement,Portal.DataAccessLayer,ConfigureCdnSite,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\ConfigureCdnSite.cs,EnsureCdnFiles,The length of the statement  "                Logger.LogErrorMessage(String.Format("EnsureCdnFiles() GetFile() failed for local file path [{0}]: Error={1}"' localFilePath' ex.Message)' false); " is 146.
Long Statement,Portal.DataAccessLayer,ConfigureDemoSite,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\ConfigureDemoSite.cs,DoWork,The length of the statement  "            string adminUsername = String.Format("{0}{1}"' (String.IsNullOrEmpty(Program.AdminDomain) ? "" : String.Format("{0}\\"' Program.AdminDomain))' Program.AdminUsername); " is 166.
Long Statement,Portal.DataAccessLayer,ConfigureDemoSite,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\ConfigureDemoSite.cs,ProcessSite,The length of the statement  "                using (ClientContext userContext = Helper.CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl)) " is 149.
Long Statement,Portal.DataAccessLayer,ConfigureDemoSite,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\ConfigureDemoSite.cs,ProcessDemoWeb,The length of the statement  "                Logger.LogInfoMessage(String.Format("Processing DAL Demo Web: {0}/{1} ..."' parentWeb.Url' Constants.DalDemoWebLeafUrl)' true); " is 127.
Long Statement,Portal.DataAccessLayer,ConfigureDemoSite,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\ConfigureDemoSite.cs,ProcessDemoWeb,The length of the statement  "                    parentWeb.CreateWeb(Constants.DalDemoWebTitle' Constants.DalDemoWebLeafUrl' Constants.DalDemoWebDescription' "BLANKINTERNET#0"' 1033' true' true); " is 146.
Long Statement,Portal.DataAccessLayer,ConfigureDemoSite,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\ConfigureDemoSite.cs,EnsureWelcomePage,The length of the statement  "                        Logger.LogErrorMessage(String.Format("EnsureWelcomePage() failed for {0}: Error=Could not retrieve newly-created Welcome Page."' web.Url)' false); " is 146.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The length of the statement  "                        Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true); " is 174.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The length of the statement  "                        Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true); " is 173.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The length of the statement  "                        Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true); " is 217.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The length of the statement  "                    userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl); " is 121.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The length of the statement  "                    Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true); " is 174.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The length of the statement  "                    Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true); " is 173.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The length of the statement  "                    Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true); " is 217.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The length of the statement  "                userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl); " is 121.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The length of the statement  "                Logger.LogErrorMessage(String.Format("\nCreateAuthenticatedUserContext() failed for {0}: Error={1}"' siteUrl' ex.Message)' false); " is 130.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,SetMasterPages,The length of the statement  "                    Logger.LogSuccessMessage(String.Format("Set Site Master Page to {0}{1}"' (inheritMaster ? "inherit " : "")' mpServerRelativeUrl)' false); " is 137.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,SetMasterPages,The length of the statement  "                    Logger.LogSuccessMessage(String.Format("Set System Master Page to {0}{1}"' (inheritMaster ? "inherit " : "")' mpServerRelativeUrl)' false); " is 139.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureSiteColumns,The length of the statement  "                fieldAsXML = String.Format(@"<Field ID='{0}' Name='{1}' DisplayName='{2}' Group='{3}' Description='{2}' Type='Text' />"' " is 120.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureSiteColumns,The length of the statement  "                    Constants.PnPConfigKey_GUID' Constants.PnPConfigKey_InternalName' Constants.PnPConfigKey_DisplayName' Constants.PnPSiteColumns_GroupName); " is 138.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureSiteColumns,The length of the statement  "                fieldAsXML = String.Format(@"<Field ID='{0}' Name='{1}' DisplayName='{2}' Group='{3}' Description='{2}' Type='Note' NumLines='6' />"' " is 133.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureSiteColumns,The length of the statement  "                    Constants.PnPConfigValue_GUID' Constants.PnPConfigValue_InternalName' Constants.PnPConfigValue_DisplayName' Constants.PnPSiteColumns_GroupName); " is 144.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureSiteColumns,The length of the statement  "                fieldAsXML = String.Format(@"<Field ID='{0}' Name='{1}' DisplayName='{2}' Group='{3}' Description='{2}' Type='Text' />"' " is 120.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureSiteColumns,The length of the statement  "                    Constants.PnPLinkText_GUID' Constants.PnPLinkText_InternalName' Constants.PnPLinkText_DisplayName' Constants.PnPSiteColumns_GroupName); " is 135.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureSiteColumns,The length of the statement  "                fieldAsXML = String.Format(@"<Field ID='{0}' Name='{1}' DisplayName='{2}' Group='{3}' Description='{2}' Type='Text' />"' " is 120.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureSiteColumns,The length of the statement  "                    Constants.PnPLinkUrl_GUID' Constants.PnPLinkUrl_InternalName' Constants.PnPLinkUrl_DisplayName' Constants.PnPSiteColumns_GroupName); " is 132.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureSiteColumns,The length of the statement  "                fieldAsXML = String.Format(@"<Field ID='{0}' Name='{1}' DisplayName='{2}' Group='{3}' Description='{2}' Type='Number' Decimals='0' Min='1'/>"' " is 142.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureSiteColumns,The length of the statement  "                    Constants.PnPDisplayOrder_GUID' Constants.PnPDisplayOrder_InternalName' Constants.PnPDisplayOrder_DisplayName' Constants.PnPSiteColumns_GroupName); " is 147.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsurePortalConfigList,The length of the statement  "                    list = web.CreateList(Microsoft.SharePoint.Client.ListTemplateType.GenericList' Constants.ConfigurationListTitle' false' true' Constants.ConfigurationListWebRelativeUrl' false); " is 177.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsurePortalConfigList,The length of the statement  "                Logger.LogErrorMessage(String.Format("EnsurePortalConfigList() failed for {0}: Error={1}"' web.Url' ex.Message)' false); " is 120.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureGlobalNavConfigList,The length of the statement  "                    list = web.CreateList(Microsoft.SharePoint.Client.ListTemplateType.GenericList' Constants.GlobalNavListTitle' false' true' Constants.GlobalNavListWebRelativeUrl' false); " is 169.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureGlobalNavConfigList,The length of the statement  "                Logger.LogErrorMessage(String.Format("EnsureGlobalNavConfigList() failed for {0}: Error={1}"' web.Url' ex.Message)' false); " is 123.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureCompanyLinksConfigList,The length of the statement  "                    list = web.CreateList(Microsoft.SharePoint.Client.ListTemplateType.GenericList' Constants.CompanyLinksListTitle' false' true' Constants.CompanyLinksListWebRelativeUrl' false); " is 175.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureCompanyLinksConfigList,The length of the statement  "                Logger.LogErrorMessage(String.Format("EnsureCompanyLinksConfigList() failed for {0}: Error={1}"' web.Url' ex.Message)' false); " is 126.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureLocalNavConfigList,The length of the statement  "                    list = web.CreateList(Microsoft.SharePoint.Client.ListTemplateType.GenericList' Constants.LocalNavListTitle' false' true' Constants.LocalNavListWebRelativeUrl' false); " is 167.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureLocalNavConfigList,The length of the statement  "                Logger.LogErrorMessage(String.Format("EnsureLocalNavConfigList() failed for {0}: Error={1}"' web.Url' ex.Message)' false); " is 122.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureMasterPage,The length of the statement  "                    mpServerRelativeUrl = Helper.UploadMasterPage(web' mpFileName' localFilePath' Constants.PortalMasterPageTitle' Constants.PortalMasterPageDescription); " is 150.
Long Statement,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureMasterPage,The length of the statement  "                    mpServerRelativeUrl = Helper.PublishMasterPage(web' mpServerRelativeUrl' Constants.PortalMasterPageTitle' Constants.PortalMasterPageDescription); " is 145.
Long Statement,Portal.DataAccessLayer,Program,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Program.cs,ShowUsage,The length of the statement  "            System.Console.WriteLine("3. Configure Demo Site Collection - ensures Site Columns' Custom Lists' Master Page' and Demo web"); " is 126.
Long Statement,Portal.DataAccessLayer,Program,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Program.cs,ShowUsage,The length of the statement  "            System.Console.WriteLine("NOTE: These operations will not overwrite existing PnP DAL assets (sites' webs' files' lists' list items' or settings)"); " is 147.
Empty Catch Block,Portal.DataAccessLayer,ConfigureCdnSite,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\ConfigureCdnSite.cs,EnsureCdnFile,The method has an empty catch block.
Empty Catch Block,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,GetFileFromWeb,The method has an empty catch block.
Magic Number,Portal.DataAccessLayer,ConfigureDemoSite,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\ConfigureDemoSite.cs,ProcessDemoWeb,The following statement contains a magic number: try              {                  Logger.LogInfoMessage(String.Format("Processing DAL Demo Web: {0}/{1} ..."' parentWeb.Url' Constants.DalDemoWebLeafUrl)' true);                    // Create and configure the demo subweb                  if (!parentWeb.WebExists(Constants.DalDemoWebLeafUrl))                  {                      Logger.LogInfoMessage(String.Format("Creating SubWeb: {0} ..."' Constants.DalDemoWebTitle)' true);                      parentWeb.CreateWeb(Constants.DalDemoWebTitle' Constants.DalDemoWebLeafUrl' Constants.DalDemoWebDescription' "BLANKINTERNET#0"' 1033' true' true);                  }                    Web dalWeb = parentWeb.GetWeb(Constants.DalDemoWebLeafUrl);                  parentWeb.Context.Load(dalWeb);                  parentWeb.Context.ExecuteQueryRetry();                    Helper.SetMasterPages(dalWeb' mpServerRelativeUrl' true' Helper.MasterPageOptions.SiteMasterPageOnly);                  Helper.EnsureLocalNavConfigList(dalWeb);                  EnsureWelcomePage(dalWeb);                    // Force the crawler to re-index the lists of the web                  Logger.LogInfoMessage(String.Format("Scheduling Re-Index of DAL Demo Web: {0} ..."' dalWeb.Url)' true);                  dalWeb.ReIndexWeb();              }              catch (Exception ex)              {                  Logger.LogErrorMessage(String.Format("ProcessDemoWeb() failed for {0}: Error={1}"' parentWeb.Url' ex.Message)' false);              }
Magic Number,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The following statement contains a magic number: try              {                  if (String.IsNullOrEmpty(domain))                  {                      // use o365 authentication (SPO-MT or vNext)                      userContext.Credentials = new SharePointOnlineCredentials(username' password);                  }                  else                  {                      // use Windows authentication (SPO-D or On-Prem)                       userContext.Credentials = new NetworkCredential(username' password' domain);                  }                    // Let's prevent account lock-outs...                  if (alreadyAuthorized == false)                  {                      Web web = userContext.Web;                      userContext.Load(web);                      userContext.ExecuteQueryRetry();                      contextCount = 0;                      alreadyAuthorized = true;                  }                  return userContext;              }              catch (System.Net.WebException ex)              {                  if (ex.Message.ToLower().Contains("unauthorized") && alreadyAuthorized == false)                  {                      contextCount++;                      if (contextCount == 1)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 2)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 3)                      {                          System.Console.WriteLine();                          Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                            System.Console.ReadKey();                          Environment.Exit(0);                      }                        Program.GetCredentials();                      userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);                  }              }              catch (System.ArgumentNullException ex)              {                  contextCount++;                  if (contextCount == 1)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 2)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 3)                  {                      System.Console.WriteLine();                      Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                        System.Console.ReadKey();                      Environment.Exit(0);                  }                    Program.GetCredentials();                  userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);              }                catch (Exception ex)              {                  Logger.LogErrorMessage(String.Format("\nCreateAuthenticatedUserContext() failed for {0}: Error={1}"' siteUrl' ex.Message)' false);              }
Magic Number,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The following statement contains a magic number: try              {                  if (String.IsNullOrEmpty(domain))                  {                      // use o365 authentication (SPO-MT or vNext)                      userContext.Credentials = new SharePointOnlineCredentials(username' password);                  }                  else                  {                      // use Windows authentication (SPO-D or On-Prem)                       userContext.Credentials = new NetworkCredential(username' password' domain);                  }                    // Let's prevent account lock-outs...                  if (alreadyAuthorized == false)                  {                      Web web = userContext.Web;                      userContext.Load(web);                      userContext.ExecuteQueryRetry();                      contextCount = 0;                      alreadyAuthorized = true;                  }                  return userContext;              }              catch (System.Net.WebException ex)              {                  if (ex.Message.ToLower().Contains("unauthorized") && alreadyAuthorized == false)                  {                      contextCount++;                      if (contextCount == 1)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 2)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 3)                      {                          System.Console.WriteLine();                          Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                            System.Console.ReadKey();                          Environment.Exit(0);                      }                        Program.GetCredentials();                      userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);                  }              }              catch (System.ArgumentNullException ex)              {                  contextCount++;                  if (contextCount == 1)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 2)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 3)                  {                      System.Console.WriteLine();                      Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                        System.Console.ReadKey();                      Environment.Exit(0);                  }                    Program.GetCredentials();                  userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);              }                catch (Exception ex)              {                  Logger.LogErrorMessage(String.Format("\nCreateAuthenticatedUserContext() failed for {0}: Error={1}"' siteUrl' ex.Message)' false);              }
Magic Number,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The following statement contains a magic number: try              {                  if (String.IsNullOrEmpty(domain))                  {                      // use o365 authentication (SPO-MT or vNext)                      userContext.Credentials = new SharePointOnlineCredentials(username' password);                  }                  else                  {                      // use Windows authentication (SPO-D or On-Prem)                       userContext.Credentials = new NetworkCredential(username' password' domain);                  }                    // Let's prevent account lock-outs...                  if (alreadyAuthorized == false)                  {                      Web web = userContext.Web;                      userContext.Load(web);                      userContext.ExecuteQueryRetry();                      contextCount = 0;                      alreadyAuthorized = true;                  }                  return userContext;              }              catch (System.Net.WebException ex)              {                  if (ex.Message.ToLower().Contains("unauthorized") && alreadyAuthorized == false)                  {                      contextCount++;                      if (contextCount == 1)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 2)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 3)                      {                          System.Console.WriteLine();                          Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                            System.Console.ReadKey();                          Environment.Exit(0);                      }                        Program.GetCredentials();                      userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);                  }              }              catch (System.ArgumentNullException ex)              {                  contextCount++;                  if (contextCount == 1)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 2)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 3)                  {                      System.Console.WriteLine();                      Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                        System.Console.ReadKey();                      Environment.Exit(0);                  }                    Program.GetCredentials();                  userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);              }                catch (Exception ex)              {                  Logger.LogErrorMessage(String.Format("\nCreateAuthenticatedUserContext() failed for {0}: Error={1}"' siteUrl' ex.Message)' false);              }
Magic Number,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The following statement contains a magic number: try              {                  if (String.IsNullOrEmpty(domain))                  {                      // use o365 authentication (SPO-MT or vNext)                      userContext.Credentials = new SharePointOnlineCredentials(username' password);                  }                  else                  {                      // use Windows authentication (SPO-D or On-Prem)                       userContext.Credentials = new NetworkCredential(username' password' domain);                  }                    // Let's prevent account lock-outs...                  if (alreadyAuthorized == false)                  {                      Web web = userContext.Web;                      userContext.Load(web);                      userContext.ExecuteQueryRetry();                      contextCount = 0;                      alreadyAuthorized = true;                  }                  return userContext;              }              catch (System.Net.WebException ex)              {                  if (ex.Message.ToLower().Contains("unauthorized") && alreadyAuthorized == false)                  {                      contextCount++;                      if (contextCount == 1)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 2)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 3)                      {                          System.Console.WriteLine();                          Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                            System.Console.ReadKey();                          Environment.Exit(0);                      }                        Program.GetCredentials();                      userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);                  }              }              catch (System.ArgumentNullException ex)              {                  contextCount++;                  if (contextCount == 1)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 2)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 3)                  {                      System.Console.WriteLine();                      Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                        System.Console.ReadKey();                      Environment.Exit(0);                  }                    Program.GetCredentials();                  userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);              }                catch (Exception ex)              {                  Logger.LogErrorMessage(String.Format("\nCreateAuthenticatedUserContext() failed for {0}: Error={1}"' siteUrl' ex.Message)' false);              }
Magic Number,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The following statement contains a magic number: try              {                  if (String.IsNullOrEmpty(domain))                  {                      // use o365 authentication (SPO-MT or vNext)                      userContext.Credentials = new SharePointOnlineCredentials(username' password);                  }                  else                  {                      // use Windows authentication (SPO-D or On-Prem)                       userContext.Credentials = new NetworkCredential(username' password' domain);                  }                    // Let's prevent account lock-outs...                  if (alreadyAuthorized == false)                  {                      Web web = userContext.Web;                      userContext.Load(web);                      userContext.ExecuteQueryRetry();                      contextCount = 0;                      alreadyAuthorized = true;                  }                  return userContext;              }              catch (System.Net.WebException ex)              {                  if (ex.Message.ToLower().Contains("unauthorized") && alreadyAuthorized == false)                  {                      contextCount++;                      if (contextCount == 1)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 2)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 3)                      {                          System.Console.WriteLine();                          Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                            System.Console.ReadKey();                          Environment.Exit(0);                      }                        Program.GetCredentials();                      userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);                  }              }              catch (System.ArgumentNullException ex)              {                  contextCount++;                  if (contextCount == 1)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 2)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 3)                  {                      System.Console.WriteLine();                      Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                        System.Console.ReadKey();                      Environment.Exit(0);                  }                    Program.GetCredentials();                  userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);              }                catch (Exception ex)              {                  Logger.LogErrorMessage(String.Format("\nCreateAuthenticatedUserContext() failed for {0}: Error={1}"' siteUrl' ex.Message)' false);              }
Magic Number,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The following statement contains a magic number: try              {                  if (String.IsNullOrEmpty(domain))                  {                      // use o365 authentication (SPO-MT or vNext)                      userContext.Credentials = new SharePointOnlineCredentials(username' password);                  }                  else                  {                      // use Windows authentication (SPO-D or On-Prem)                       userContext.Credentials = new NetworkCredential(username' password' domain);                  }                    // Let's prevent account lock-outs...                  if (alreadyAuthorized == false)                  {                      Web web = userContext.Web;                      userContext.Load(web);                      userContext.ExecuteQueryRetry();                      contextCount = 0;                      alreadyAuthorized = true;                  }                  return userContext;              }              catch (System.Net.WebException ex)              {                  if (ex.Message.ToLower().Contains("unauthorized") && alreadyAuthorized == false)                  {                      contextCount++;                      if (contextCount == 1)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 2)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 3)                      {                          System.Console.WriteLine();                          Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                            System.Console.ReadKey();                          Environment.Exit(0);                      }                        Program.GetCredentials();                      userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);                  }              }              catch (System.ArgumentNullException ex)              {                  contextCount++;                  if (contextCount == 1)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 2)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 3)                  {                      System.Console.WriteLine();                      Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                        System.Console.ReadKey();                      Environment.Exit(0);                  }                    Program.GetCredentials();                  userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);              }                catch (Exception ex)              {                  Logger.LogErrorMessage(String.Format("\nCreateAuthenticatedUserContext() failed for {0}: Error={1}"' siteUrl' ex.Message)' false);              }
Magic Number,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The following statement contains a magic number: try              {                  if (String.IsNullOrEmpty(domain))                  {                      // use o365 authentication (SPO-MT or vNext)                      userContext.Credentials = new SharePointOnlineCredentials(username' password);                  }                  else                  {                      // use Windows authentication (SPO-D or On-Prem)                       userContext.Credentials = new NetworkCredential(username' password' domain);                  }                    // Let's prevent account lock-outs...                  if (alreadyAuthorized == false)                  {                      Web web = userContext.Web;                      userContext.Load(web);                      userContext.ExecuteQueryRetry();                      contextCount = 0;                      alreadyAuthorized = true;                  }                  return userContext;              }              catch (System.Net.WebException ex)              {                  if (ex.Message.ToLower().Contains("unauthorized") && alreadyAuthorized == false)                  {                      contextCount++;                      if (contextCount == 1)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 2)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 3)                      {                          System.Console.WriteLine();                          Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                            System.Console.ReadKey();                          Environment.Exit(0);                      }                        Program.GetCredentials();                      userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);                  }              }              catch (System.ArgumentNullException ex)              {                  contextCount++;                  if (contextCount == 1)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 2)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 3)                  {                      System.Console.WriteLine();                      Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                        System.Console.ReadKey();                      Environment.Exit(0);                  }                    Program.GetCredentials();                  userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);              }                catch (Exception ex)              {                  Logger.LogErrorMessage(String.Format("\nCreateAuthenticatedUserContext() failed for {0}: Error={1}"' siteUrl' ex.Message)' false);              }
Magic Number,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The following statement contains a magic number: try              {                  if (String.IsNullOrEmpty(domain))                  {                      // use o365 authentication (SPO-MT or vNext)                      userContext.Credentials = new SharePointOnlineCredentials(username' password);                  }                  else                  {                      // use Windows authentication (SPO-D or On-Prem)                       userContext.Credentials = new NetworkCredential(username' password' domain);                  }                    // Let's prevent account lock-outs...                  if (alreadyAuthorized == false)                  {                      Web web = userContext.Web;                      userContext.Load(web);                      userContext.ExecuteQueryRetry();                      contextCount = 0;                      alreadyAuthorized = true;                  }                  return userContext;              }              catch (System.Net.WebException ex)              {                  if (ex.Message.ToLower().Contains("unauthorized") && alreadyAuthorized == false)                  {                      contextCount++;                      if (contextCount == 1)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 2)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 3)                      {                          System.Console.WriteLine();                          Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                            System.Console.ReadKey();                          Environment.Exit(0);                      }                        Program.GetCredentials();                      userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);                  }              }              catch (System.ArgumentNullException ex)              {                  contextCount++;                  if (contextCount == 1)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 2)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 3)                  {                      System.Console.WriteLine();                      Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                        System.Console.ReadKey();                      Environment.Exit(0);                  }                    Program.GetCredentials();                  userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);              }                catch (Exception ex)              {                  Logger.LogErrorMessage(String.Format("\nCreateAuthenticatedUserContext() failed for {0}: Error={1}"' siteUrl' ex.Message)' false);              }
Magic Number,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The following statement contains a magic number: try              {                  if (String.IsNullOrEmpty(domain))                  {                      // use o365 authentication (SPO-MT or vNext)                      userContext.Credentials = new SharePointOnlineCredentials(username' password);                  }                  else                  {                      // use Windows authentication (SPO-D or On-Prem)                       userContext.Credentials = new NetworkCredential(username' password' domain);                  }                    // Let's prevent account lock-outs...                  if (alreadyAuthorized == false)                  {                      Web web = userContext.Web;                      userContext.Load(web);                      userContext.ExecuteQueryRetry();                      contextCount = 0;                      alreadyAuthorized = true;                  }                  return userContext;              }              catch (System.Net.WebException ex)              {                  if (ex.Message.ToLower().Contains("unauthorized") && alreadyAuthorized == false)                  {                      contextCount++;                      if (contextCount == 1)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 2)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 3)                      {                          System.Console.WriteLine();                          Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                            System.Console.ReadKey();                          Environment.Exit(0);                      }                        Program.GetCredentials();                      userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);                  }              }              catch (System.ArgumentNullException ex)              {                  contextCount++;                  if (contextCount == 1)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 2)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 3)                  {                      System.Console.WriteLine();                      Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                        System.Console.ReadKey();                      Environment.Exit(0);                  }                    Program.GetCredentials();                  userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);              }                catch (Exception ex)              {                  Logger.LogErrorMessage(String.Format("\nCreateAuthenticatedUserContext() failed for {0}: Error={1}"' siteUrl' ex.Message)' false);              }
Magic Number,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The following statement contains a magic number: try              {                  if (String.IsNullOrEmpty(domain))                  {                      // use o365 authentication (SPO-MT or vNext)                      userContext.Credentials = new SharePointOnlineCredentials(username' password);                  }                  else                  {                      // use Windows authentication (SPO-D or On-Prem)                       userContext.Credentials = new NetworkCredential(username' password' domain);                  }                    // Let's prevent account lock-outs...                  if (alreadyAuthorized == false)                  {                      Web web = userContext.Web;                      userContext.Load(web);                      userContext.ExecuteQueryRetry();                      contextCount = 0;                      alreadyAuthorized = true;                  }                  return userContext;              }              catch (System.Net.WebException ex)              {                  if (ex.Message.ToLower().Contains("unauthorized") && alreadyAuthorized == false)                  {                      contextCount++;                      if (contextCount == 1)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 2)                      {                          System.Console.WriteLine();                          Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                      }                      else if (contextCount == 3)                      {                          System.Console.WriteLine();                          Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                            System.Console.ReadKey();                          Environment.Exit(0);                      }                        Program.GetCredentials();                      userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);                  }              }              catch (System.ArgumentNullException ex)              {                  contextCount++;                  if (contextCount == 1)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 2 more attempts allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 2)                  {                      System.Console.WriteLine();                      Logger.LogWarningMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have 1 more attempt allowed."' contextCount' 3 - contextCount)' true);                  }                  else if (contextCount == 3)                  {                      System.Console.WriteLine();                      Logger.LogErrorMessage(String.Format("Attempt [{0}]: You have entered invalid login credentials. You have no more attempts allowed. Press any key to terminate the application."' contextCount' 3 - contextCount)' true);                        System.Console.ReadKey();                      Environment.Exit(0);                  }                    Program.GetCredentials();                  userContext = CreateAuthenticatedUserContext(Program.AdminDomain' Program.AdminUsername' Program.AdminPassword' siteUrl);              }                catch (Exception ex)              {                  Logger.LogErrorMessage(String.Format("\nCreateAuthenticatedUserContext() failed for {0}: Error={1}"' siteUrl' ex.Message)' false);              }
Magic Number,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureGlobalNavConfigList,The following statement contains a magic number: try              {                  Logger.LogInfoMessage(String.Format("Ensuring Global Nav Config list for {0} ..."' web.Url)' true);                    list = web.GetListByUrl(Constants.GlobalNavListWebRelativeUrl);                  if (list == null)                  {                      Logger.LogInfoMessage(String.Format("Creating Global Nav Config list ...")' true);                      list = web.CreateList(Microsoft.SharePoint.Client.ListTemplateType.GenericList' Constants.GlobalNavListTitle' false' true' Constants.GlobalNavListWebRelativeUrl' false);                  }                    FieldCollection fields = list.Fields;                  View defaultView = list.DefaultView;                  ViewFieldCollection viewFields = defaultView.ViewFields;                  web.Context.Load(fields);                  web.Context.Load(defaultView);                  web.Context.Load(viewFields);                  web.Context.ExecuteQueryRetry();                    Logger.LogInfoMessage(String.Format("- Ensuring List Field [{0}] ..."' Constants.PnPDisplayOrder_DisplayName)' false);                  if (list.FieldExistsById(new Guid(Constants.PnPDisplayOrder_GUID)) == false)                  {                      fields.Add(web.GetFieldById<Field>(new Guid(Constants.PnPDisplayOrder_GUID)' true));                      viewFields.Add(Constants.PnPDisplayOrder_InternalName);                      defaultView.Update();                  }                  Logger.LogInfoMessage(String.Format("- Ensuring List Field [{0}] ..."' Constants.PnPLinkText_DisplayName)' false);                  if (list.FieldExistsById(new Guid(Constants.PnPLinkText_GUID)) == false)                  {                      fields.Add(web.GetFieldById<Field>(new Guid(Constants.PnPLinkText_GUID)' true));                      viewFields.Add(Constants.PnPLinkText_InternalName);                      defaultView.Update();                  }                  Logger.LogInfoMessage(String.Format("- Ensuring List Field [{0}] ..."' Constants.PnPLinkUrl_DisplayName)' false);                  if (list.FieldExistsById(new Guid(Constants.PnPLinkUrl_GUID)) == false)                  {                      fields.Add(web.GetFieldById<Field>(new Guid(Constants.PnPLinkUrl_GUID)' true));                      viewFields.Add(Constants.PnPLinkUrl_InternalName);                      defaultView.Update();                  }                  string viewQuery = String.Format(Constants.ListViewQueryFormatString' Constants.PnPDisplayOrder_InternalName);                  if (!defaultView.ViewQuery.Equals(viewQuery' StringComparison.InvariantCultureIgnoreCase))                  {                      defaultView.ViewQuery = viewQuery;                      defaultView.Update();                  }                  list.Update();                  web.Context.ExecuteQueryRetry();                    //Initialize the list                  ListItemCollection listItems = list.GetItems(CamlQuery.CreateAllItemsQuery());                  web.Context.Load(listItems);                  web.Context.ExecuteQueryRetry();                    // Initialize the list only if it is empty.                  if (listItems.Count == 0)                  {                      Logger.LogInfoMessage(String.Format("Initializing Global Nav Config list ...")' false);                        for (int i = 0; i < 5; i++)                      {                          Logger.LogInfoMessage(String.Format("- Adding list item...")' false);                            ListItemCreationInformation itemCreateInfo = new ListItemCreationInformation();                          ListItem listItem = list.AddItem(itemCreateInfo);                            listItem["Title"] = String.Format("Global Link {0}"' i + 1);                          listItem[Constants.PnPDisplayOrder_InternalName] = (i + 1);                          listItem[Constants.PnPLinkText_InternalName] = String.Format("Global {0}"' i + 1);                          listItem[Constants.PnPLinkUrl_InternalName] = Constants.GlobalNavLinkUrl;                          listItem.Update();                          web.Context.ExecuteQueryRetry();                      }                  }                  Logger.LogSuccessMessage(String.Format("Ensured Global Nav Config list for {0}"' web.Url)' false);              }              catch (Exception ex)              {                  Logger.LogErrorMessage(String.Format("EnsureGlobalNavConfigList() failed for {0}: Error={1}"' web.Url' ex.Message)' false);              }
Magic Number,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,EnsureLocalNavConfigList,The following statement contains a magic number: try              {                  Logger.LogInfoMessage(String.Format("Ensuring Local Nav Config list for {0} ..."' web.Url)' true);                    list = web.GetListByUrl(Constants.LocalNavListWebRelativeUrl);                  if (list == null)                  {                      Logger.LogInfoMessage(String.Format("Creating Local Nav Config list ...")' true);                      list = web.CreateList(Microsoft.SharePoint.Client.ListTemplateType.GenericList' Constants.LocalNavListTitle' false' true' Constants.LocalNavListWebRelativeUrl' false);                  }                    FieldCollection fields = list.Fields;                  View defaultView = list.DefaultView;                  ViewFieldCollection viewFields = defaultView.ViewFields;                  web.Context.Load(fields);                  web.Context.Load(defaultView);                  web.Context.Load(viewFields);                  web.Context.ExecuteQueryRetry();                    Logger.LogInfoMessage(String.Format("- Ensuring List Field [{0}] ..."' Constants.PnPDisplayOrder_DisplayName)' false);                  if (list.FieldExistsById(new Guid(Constants.PnPDisplayOrder_GUID)) == false)                  {                      fields.Add(web.GetFieldById<Field>(new Guid(Constants.PnPDisplayOrder_GUID)' true));                      viewFields.Add(Constants.PnPDisplayOrder_InternalName);                      defaultView.Update();                  }                  Logger.LogInfoMessage(String.Format("- Ensuring List Field [{0}] ..."' Constants.PnPLinkText_DisplayName)' false);                  if (list.FieldExistsById(new Guid(Constants.PnPLinkText_GUID)) == false)                  {                      fields.Add(web.GetFieldById<Field>(new Guid(Constants.PnPLinkText_GUID)' true));                      viewFields.Add(Constants.PnPLinkText_InternalName);                      defaultView.Update();                  }                  Logger.LogInfoMessage(String.Format("- Ensuring List Field [{0}] ..."' Constants.PnPLinkUrl_DisplayName)' false);                  if (list.FieldExistsById(new Guid(Constants.PnPLinkUrl_GUID)) == false)                  {                      fields.Add(web.GetFieldById<Field>(new Guid(Constants.PnPLinkUrl_GUID)' true));                      viewFields.Add(Constants.PnPLinkUrl_InternalName);                      defaultView.Update();                  }                  string viewQuery = String.Format(Constants.ListViewQueryFormatString' Constants.PnPDisplayOrder_InternalName);                  if (!defaultView.ViewQuery.Equals(viewQuery' StringComparison.InvariantCultureIgnoreCase))                  {                      defaultView.ViewQuery = viewQuery;                      defaultView.Update();                  }                  list.Update();                  web.Context.ExecuteQueryRetry();                    //Initialize the list                  ListItemCollection listItems = list.GetItems(CamlQuery.CreateAllItemsQuery());                  web.Context.Load(listItems);                  web.Context.ExecuteQueryRetry();                    // Initialize the list only if it is empty.                  if (listItems.Count == 0)                  {                      Logger.LogInfoMessage(String.Format("Initializing Local Nav Config list ...")' false);                        for (int i=0; i<5; i++)                      {                          Logger.LogInfoMessage(String.Format("- Adding list item...")' false);                            ListItemCreationInformation itemCreateInfo = new ListItemCreationInformation();                          ListItem listItem = list.AddItem(itemCreateInfo);                            listItem["Title"] = String.Format("Local Link {0}"' i + 1);                          listItem[Constants.PnPDisplayOrder_InternalName] = (i + 1);                          listItem[Constants.PnPLinkText_InternalName] = String.Format("{0} Link {1}"' web.Title' i + 1);                          listItem[Constants.PnPLinkUrl_InternalName] = Constants.LocalNavLinkUrl;                          listItem.Update();                          web.Context.ExecuteQueryRetry();                      }                  }                  Logger.LogSuccessMessage(String.Format("Ensured Local Nav Config list for {0}"' web.Url)' false);              }              catch (Exception ex)              {                  Logger.LogErrorMessage(String.Format("EnsureLocalNavConfigList() failed for {0}: Error={1}"' web.Url' ex.Message)' false);              }
Duplicate Code,Portal.DataAccessLayer,Helper,C:\repos\OfficeDev_PnP\Samples\Portal.DataAccessLayer\Portal.DataAccessLayer\Helper.cs,CreateAuthenticatedUserContext,The method contains a code clone-set at the following line numbers (starting from the method definition): ((30' 53)' (56' 79))
