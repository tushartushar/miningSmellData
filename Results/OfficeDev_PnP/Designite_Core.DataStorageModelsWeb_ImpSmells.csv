Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Core.DataStorageModelsWeb,SharePointContext,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\SharePointContext.cs,SharePointContext,The method has 5 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber
Long Parameter List,Core.DataStorageModelsWeb,SharePointContextProvider,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,Core.DataStorageModelsWeb,SharePointAcsContext,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\SharePointContext.cs,SharePointAcsContext,The method has 7 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' contextToken' contextTokenObj
Long Parameter List,Core.DataStorageModelsWeb,SharePointAcsContextProvider,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,Core.DataStorageModelsWeb,SharePointHighTrustContext,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\SharePointContext.cs,SharePointHighTrustContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' logonUserIdentity
Long Parameter List,Core.DataStorageModelsWeb,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,Core.DataStorageModelsWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,GetAccessToken,The method has 5 parameters. Parameters: authorizationCode' targetPrincipalName' targetHost' targetRealm' redirectUri
Long Parameter List,Core.DataStorageModelsWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,GetClientContextWithAuthorizationCode,The method has 5 parameters. Parameters: targetUrl' targetPrincipalName' authorizationCode' targetRealm' redirectUri
Long Parameter List,Core.DataStorageModelsWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,IssueToken,The method has 9 parameters. Parameters: sourceApplication' issuerApplication' sourceRealm' targetApplication' targetRealm' targetApplicationHostName' trustedForDelegation' claims' appOnly
Long Parameter List,Core.DataStorageModelsWeb,SharePointContextToken,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,SharePointContextToken,The method has 5 parameters. Parameters: issuer' audience' validFrom' validTo' claims
Long Parameter List,Core.DataStorageModelsWeb,SharePointContextToken,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,SharePointContextToken,The method has 7 parameters. Parameters: issuer' audience' validFrom' validTo' claims' issuerToken' actorToken
Long Parameter List,Core.DataStorageModelsWeb,SharePointContextToken,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,SharePointContextToken,The method has 6 parameters. Parameters: issuer' audience' validFrom' validTo' claims' signingCredentials
Long Parameter List,Core.DataStorageModelsWeb,Util,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Util\Util.cs,CreateList,The method has 5 parameters. Parameters: ctx' templateType' title' url' quickLaunchOptions
Long Parameter List,Core.DataStorageModelsWeb,Util,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Util\Util.cs,AddDemoDataToSupportCasesList,The method has 6 parameters. Parameters: ctx' list' title' status' csr' customerID
Long Parameter List,Core.DataStorageModelsWeb,Util,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Util\Util.cs,CreatePublishingPage,The method has 5 parameters. Parameters: clientContext' pageName' pagelayoutname' url' queryurl
Long Identifier,Core.DataStorageModelsWeb,SharePointContext,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\SharePointContext.cs,GetDatabaseConnectionString,The length of the parameter LocalDBInstanceForDebuggingKey is 30.
Long Identifier,Core.DataStorageModelsWeb,SharePointContextProvider,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\SharePointContext.cs,CheckRedirectionStatus,The length of the parameter SPHasRedirectedToSharePointKey is 30.
Long Identifier,Core.DataStorageModelsWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,,The length of the parameter AcsMetadataEndPointRelativeUrl is 30.
Long Identifier,Core.DataStorageModelsWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,,The length of the parameter TrustedForImpersonationClaimType is 32.
Long Identifier,Core.DataStorageModelsWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,,The length of the parameter ClientSigningCertificatePassword is 32.
Long Identifier,Core.DataStorageModelsWeb,AcsMetadataParser,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,GetMetadataDocument,The length of the parameter acsMetadataEndpointUrlWithRealm is 31.
Long Identifier,Core.DataStorageModelsWeb.Services,CallQueueService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\CallQueueService.cs,CallQueueService,The length of the parameter storageConnectionStringConfigName is 33.
Long Identifier,Core.DataStorageModelsWeb.Services,SurveyRatingsService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SurveyRatingsService.cs,SurveyRatingsService,The length of the parameter storageConnectionStringConfigName is 33.
Long Statement,Core.DataStorageModelsWeb,NorthWindEntities,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Northwind.Context.cs,CustOrderHist,The length of the statement  "            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustOrderHist_Result>("CustOrderHist"' customerIDParameter); " is 127.
Long Statement,Core.DataStorageModelsWeb,NorthWindEntities,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Northwind.Context.cs,CustOrdersDetail,The length of the statement  "            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustOrdersDetail_Result>("CustOrdersDetail"' orderIDParameter); " is 130.
Long Statement,Core.DataStorageModelsWeb,NorthWindEntities,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Northwind.Context.cs,CustOrdersOrders,The length of the statement  "            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustOrdersOrders_Result>("CustOrdersOrders"' customerIDParameter); " is 133.
Long Statement,Core.DataStorageModelsWeb,NorthWindEntities,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Northwind.Context.cs,Employee_Sales_by_Country,The length of the statement  "            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee_Sales_by_Country_Result>("Employee_Sales_by_Country"' beginning_DateParameter' ending_DateParameter); " is 177.
Long Statement,Core.DataStorageModelsWeb,NorthWindEntities,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Northwind.Context.cs,Sales_by_Year,The length of the statement  "            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sales_by_Year_Result>("Sales_by_Year"' beginning_DateParameter' ending_DateParameter); " is 153.
Long Statement,Core.DataStorageModelsWeb,NorthWindEntities,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Northwind.Context.cs,SalesByCategory,The length of the statement  "            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesByCategory_Result>("SalesByCategory"' categoryNameParameter' ordYearParameter); " is 151.
Long Statement,Core.DataStorageModelsWeb,NorthWindEntities,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Northwind.Context.cs,Ten_Most_Expensive_Products,The length of the statement  "            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ten_Most_Expensive_Products_Result>("Ten_Most_Expensive_Products"); " is 134.
Long Statement,Core.DataStorageModelsWeb,SharePointContextProvider,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\SharePointContext.cs,CheckRedirectionStatus,The length of the statement  "            // Removes the values that are included in {StandardTokens}' as {StandardTokens} will be inserted at the beginning of the query string. " is 135.
Long Statement,Core.DataStorageModelsWeb,SharePointContextProvider,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\SharePointContext.cs,CheckRedirectionStatus,The length of the statement  "            string redirectUrlString = TokenHelper.GetAppContextTokenRequestUrl(spHostUrl.AbsoluteUri' Uri.EscapeDataString(returnUrlString)); " is 130.
Long Statement,Core.DataStorageModelsWeb,SharePointAcsContextProvider,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\SharePointContext.cs,CreateSharePointContext,The length of the statement  "            return new SharePointAcsContext(spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' contextTokenString' contextToken); " is 132.
Long Statement,Core.DataStorageModelsWeb,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\SharePointContext.cs,CreateSharePointContext,The length of the statement  "            if (logonUserIdentity == null || !logonUserIdentity.IsAuthenticated || logonUserIdentity.IsGuest || logonUserIdentity.User == null) " is 131.
Long Statement,Core.DataStorageModelsWeb,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\SharePointContext.cs,CreateSharePointContext,The length of the statement  "            return new SharePointHighTrustContext(spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' logonUserIdentity); " is 123.
Long Statement,Core.DataStorageModelsWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,GetAccessToken,The length of the statement  "            OAuth2AccessTokenRequest oauth2Request = OAuth2MessageFactory.CreateAccessTokenRequestWithRefreshToken(clientId' ClientSecret' refreshToken' resource); " is 151.
Long Statement,Core.DataStorageModelsWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,GetAppOnlyAccessToken,The length of the statement  "            OAuth2AccessTokenRequest oauth2Request = OAuth2MessageFactory.CreateAccessTokenRequestWithClientCredentials(clientId' ClientSecret' resource); " is 142.
Long Statement,Core.DataStorageModelsWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,CreateAppEventClientContext,The length of the statement  "            Uri sharepointUrl = useAppWeb ? properties.AppEventProperties.AppWebFullUrl : properties.AppEventProperties.HostWebFullUrl; " is 123.
Long Statement,Core.DataStorageModelsWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,GetClientContextWithAuthorizationCode,The length of the statement  "            return GetClientContextWithAuthorizationCode(targetUrl' SharePointPrincipal' authorizationCode' GetRealmFromTargetUrl(new Uri(targetUrl))' redirectUri); " is 152.
Long Statement,Core.DataStorageModelsWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,CreateAcsClientContextForUrl,The length of the statement  "            SharePointContextToken contextToken = ReadAndValidateContextToken(contextTokenString' OperationContext.Current.IncomingMessageHeaders.To.Host); " is 143.
Long Statement,Core.DataStorageModelsWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,IssueToken,The length of the statement  "            string issuer = string.IsNullOrEmpty(sourceRealm) ? issuerApplication : string.Format("{0}@{1}"' issuerApplication' sourceRealm); " is 129.
Long Statement,Core.DataStorageModelsWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,IssueToken,The length of the statement  "            string nameid = string.IsNullOrEmpty(sourceRealm) ? sourceApplication : string.Format("{0}@{1}"' sourceApplication' sourceRealm); " is 129.
Long Statement,Core.DataStorageModelsWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,IssueToken,The length of the statement  "            List<JsonWebTokenClaim> outerClaims = null == claims ? new List<JsonWebTokenClaim>() : new List<JsonWebTokenClaim>(claims); " is 123.
Long Statement,Core.DataStorageModelsWeb,SharePointContextToken,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,Create,The length of the statement  "            return new SharePointContextToken(contextToken.Issuer' contextToken.Audience' contextToken.ValidFrom' contextToken.ValidTo' contextToken.Claims); " is 145.
Long Statement,Core.DataStorageModelsWeb,Util,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Util\Util.cs,CreatePublishingPage,The length of the statement  "                clientContext.Load(allItems' items => items.Include(item => item.DisplayName).Where(obj => obj.DisplayName == pagelayoutname)); " is 127.
Long Statement,Core.DataStorageModelsWeb,Util,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Util\Util.cs,SetSupportCaseContent,The length of the statement  "            string qlwebPartXml = "<?xml version=\"1.0\" encoding=\"utf-8\"?><webParts><webPart xmlns=\"http://schemas.microsoft.com/WebPart/v3\"><metaData><type name=\"Microsoft.SharePoint.WebPartPages.ScriptEditorWebPart' Microsoft.SharePoint' Version=15.0.0.0' Culture=neutral' PublicKeyToken=71e9bce111e9429c\" /><importErrorMessage>Cannot import this Web Part.</importErrorMessage></metaData><data><properties><property name=\"Content\" type=\"string\"><![CDATA[" + quicklaunchmenu + "​​​]]></property><property name=\"ChromeType\" type=\"chrometype\">None</property></properties></data></webPart></webParts>"; " is 603.
Long Statement,Core.DataStorageModelsWeb,Util,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Util\Util.cs,SetSupportCaseContent,The length of the statement  "            string dpwebPartXml = System.IO.File.ReadAllText(System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath + "Assets/CustomerDropDownlist.webpart"); " is 152.
Long Statement,Core.DataStorageModelsWeb,Util,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Util\Util.cs,SetSupportCaseContent,The length of the statement  "            string cbsInfoWebPartXml = System.IO.File.ReadAllText(System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath + "Assets/SupportCaseCBSWebPartInfo.webpart"); " is 162.
Long Statement,Core.DataStorageModelsWeb,Util,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Util\Util.cs,SetSupportCaseContent,The length of the statement  "            string cbswebPartXml = System.IO.File.ReadAllText(System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath + "Assets/SupportCase CBS Webpart/SupportCaseCBS.webpart"); " is 171.
Long Statement,Core.DataStorageModelsWeb,Util,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Util\Util.cs,SetSupportCaseContent,The length of the statement  "            string appPartXml = System.IO.File.ReadAllText(System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath + "Assets/SupportCaseAppPart.webpart"); " is 148.
Long Statement,Core.DataStorageModelsWeb,Util,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Util\Util.cs,SetSupportCaseContent,The length of the statement  "            string querywebPartXml = System.IO.File.ReadAllText(System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath + "Assets/GetHostWebQueryStringAndShowList.webpart"); " is 167.
Long Statement,Core.DataStorageModelsWeb,Util,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Util\Util.cs,UploadItemTemplateJS,The length of the statement  "            newFile.Content = System.IO.File.ReadAllBytes(System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath + "Assets/SupportCase CBS Webpart/" + fileName); " is 156.
Long Statement,Core.DataStorageModelsWeb,Util,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Util\Util.cs,UploadItemTemplateJS,The length of the statement  "            listItem["ManagedPropertyMapping"] = "'Title'{Title}:'Title'''ID'{ID}:'ListItemId'''Status'{Status}:'FTCAMStatusOWSTEXT'''CSR'{CSR}:'FTCAMCSROWSTEXT'''Customer ID'{Customer ID}:'FTCAMCustomerIDOWSTEXT'"; " is 203.
Long Statement,Core.DataStorageModelsWeb,Util,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Util\Util.cs,UploadControlTemplateJS,The length of the statement  "            newFile.Content = System.IO.File.ReadAllBytes(System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath + "Assets/SupportCase CBS Webpart/" + fileName); " is 156.
Long Statement,Core.DataStorageModelsWeb.Controllers,DefaultController,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Controllers\DefaultController.cs,FillAppWebNotesWith1G,The length of the statement  "            TempData["Message"] = count + " items have been added to the App Web Notes list' and every item size is more than 1MB."; " is 120.
Long Statement,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,Deploy,The length of the statement  "                messageBuilder.AppendLine("Support Cases Page Layout' Page' CBS Display Template JavaScript files successfully created and deployed."); " is 135.
Long Statement,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,Deploy,The length of the statement  "            messageBuilder.AppendLine("Deployment successfully completed.  See the Explore The Sample section below for next steps. "); " is 123.
Long Statement,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,CreateAppWebNoteList,The length of the statement  "                    Field field = clientContext.Web.Fields.AddFieldAsXml("<Field Type='Note'  DisplayName='Description' StaticName='FTCAM_Description' Name='FTCAM_Description' Group='FTC_TO_AM'></Field>"' true' AddFieldOptions.DefaultValue); " is 221.
Long Statement,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,CreateHostWebSupportCasesList,The length of the statement  "                    ContentType ctype = Util.CreateContentType(clientContext' Util.SupportCaseCtypeName' "FTC_TO_AM"' Util.SupportCaseCtyeId); " is 122.
Long Statement,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,AddDemoDataToSupportCasesList,The length of the statement  "            Util.AddDemoDataToSupportCasesList(clientContext' supportcaseslist' "Wrong product received."' "Open"' "bjones"' "ALFKI"); " is 122.
Long Statement,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,AddDemoDataToSupportCasesList,The length of the statement  "            Util.AddDemoDataToSupportCasesList(clientContext' supportcaseslist' "Purple thing is green but doesn't work."' "Resolved"' "ismith"' "ALFKI"); " is 142.
Long Statement,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,AddDemoDataToSupportCasesList,The length of the statement  "            Util.AddDemoDataToSupportCasesList(clientContext' supportcaseslist' "Purple thing should be green."' "Resolved"' "ismith"' "ALFKI"); " is 132.
Long Statement,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,AddDemoDataToSupportCasesList,The length of the statement  "            Util.AddDemoDataToSupportCasesList(clientContext' supportcaseslist' "Product was damaged upon arrival."' "Resolved"' "tbag"' "ALFKI"); " is 134.
Long Statement,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,AddDemoDataToSupportCasesList,The length of the statement  "            Util.AddDemoDataToSupportCasesList(clientContext' supportcaseslist' "Not all parts were included in shipment."' "Resolved"' "sherm"' "ALFKI"); " is 142.
Long Statement,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,AddDemoDataToSupportCasesList,The length of the statement  "            Util.AddDemoDataToSupportCasesList(clientContext' supportcaseslist' "User manual not included in shipment."' "Resolved"' "cloris"' "ALFKI"); " is 140.
Long Statement,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,AddDemoDataToSupportCasesList,The length of the statement  "            Util.AddDemoDataToSupportCasesList(clientContext' supportcaseslist' "Order never received."' "Resolved"' "tyler"' "ALFKI"); " is 123.
Long Statement,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,CreateSupportCasePageLayoutAndPage,The length of the statement  "            Util.UploadPageLayout(clientContext' System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath + "Assets/SupportCasesPageLayout.aspx"' " is 138.
Complex Conditional,Core.DataStorageModelsWeb,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\SharePointContext.cs,CreateSharePointContext,The conditional expression  "logonUserIdentity == null || !logonUserIdentity.IsAuthenticated || logonUserIdentity.IsGuest || logonUserIdentity.User == null"  is complex.
Empty Catch Block,Core.DataStorageModelsWeb,SharePointAcsContext,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\SharePointContext.cs,RenewAccessTokenIfNeeded,The method has an empty catch block.
Empty Catch Block,Core.DataStorageModelsWeb.Services,CallQueueService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\CallQueueService.cs,PeekCalls,The method has an empty catch block.
Magic Number,Core.DataStorageModelsWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,GetRealmFromTargetUrl,The following statement contains a magic number: try              {                  using (request.GetResponse())                  {                  }              }              catch (WebException e)              {                  if (e.Response == null)                  {                      return null;                  }                    string bearerResponseHeader = e.Response.Headers["WWW-Authenticate"];                  if (string.IsNullOrEmpty(bearerResponseHeader))                  {                      return null;                  }                    const string bearer = "Bearer realm=\"";                  int bearerIndex = bearerResponseHeader.IndexOf(bearer' StringComparison.Ordinal);                  if (bearerIndex < 0)                  {                      return null;                  }                    int realmIndex = bearerIndex + bearer.Length;                    if (bearerResponseHeader.Length >= realmIndex + 36)                  {                      string targetRealm = bearerResponseHeader.Substring(realmIndex' 36);                        Guid realmGuid;                        if (Guid.TryParse(targetRealm' out realmGuid))                      {                          return targetRealm;                      }                  }              }
Magic Number,Core.DataStorageModelsWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\TokenHelper.cs,GetRealmFromTargetUrl,The following statement contains a magic number: try              {                  using (request.GetResponse())                  {                  }              }              catch (WebException e)              {                  if (e.Response == null)                  {                      return null;                  }                    string bearerResponseHeader = e.Response.Headers["WWW-Authenticate"];                  if (string.IsNullOrEmpty(bearerResponseHeader))                  {                      return null;                  }                    const string bearer = "Bearer realm=\"";                  int bearerIndex = bearerResponseHeader.IndexOf(bearer' StringComparison.Ordinal);                  if (bearerIndex < 0)                  {                      return null;                  }                    int realmIndex = bearerIndex + bearer.Length;                    if (bearerResponseHeader.Length >= realmIndex + 36)                  {                      string targetRealm = bearerResponseHeader.Substring(realmIndex' 36);                        Guid realmGuid;                        if (Guid.TryParse(targetRealm' out realmGuid))                      {                          return targetRealm;                      }                  }              }
Magic Number,Core.DataStorageModelsWeb.Services,CallQueueService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\CallQueueService.cs,SimulateCalls,The following statement contains a magic number: int count = random.Next(1' 6);
Magic Number,Core.DataStorageModelsWeb.Services,SurveyRatingsService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SurveyRatingsService.cs,AddSurveyRatings,The following statement contains a magic number: int count = 4;
Magic Number,Core.DataStorageModelsWeb.Services,SurveyRatingsService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SurveyRatingsService.cs,AddSurveyRatings,The following statement contains a magic number: for (int i = 0; i < count; i++)              {                  var score = random.Next(80' 100);                  var customer = new Models.Customer(Guid.NewGuid()' userName' score);                    var insertOperation = TableOperation.Insert(customer);                  surveyRatingsTable.Execute(insertOperation);                    sum += score;              }
Magic Number,Core.DataStorageModelsWeb.Services,SurveyRatingsService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SurveyRatingsService.cs,AddSurveyRatings,The following statement contains a magic number: for (int i = 0; i < count; i++)              {                  var score = random.Next(80' 100);                  var customer = new Models.Customer(Guid.NewGuid()' userName' score);                    var insertOperation = TableOperation.Insert(customer);                  surveyRatingsTable.Execute(insertOperation);                    sum += score;              }
Magic Number,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,FillAppWebNotesListToThreshold,The following statement contains a magic number: using (var clientContext = SharePointContext.CreateUserClientContextForSPAppWeb())              {                  List notesList = clientContext.Web.Lists.GetByTitle("Notes");                    var itemCreateInfo = new ListItemCreationInformation();                  for (int i = 0; i < 500; i++)                  {                      ListItem newItem = notesList.AddItem(itemCreateInfo);                      newItem["Title"] = "Notes Title." + i.ToString();                      newItem["FTCAM_Description"] = "Notes description";                      newItem.Update();                      if (i % 100 == 0)                          clientContext.ExecuteQuery();                  }                  clientContext.ExecuteQuery();                    clientContext.Load(notesList' l => l.ItemCount);                  clientContext.ExecuteQuery();                    if (notesList.ItemCount >= 5000)                      return "The App Web Notes List has " + notesList.ItemCount + " items' and exceeds the threshold.";                  else                      return 500 + " items have been added to the App Web Notes List. " +                                     "There are " + (5000-notesList.ItemCount) + " items left to add.";                        }
Magic Number,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,FillAppWebNotesListToThreshold,The following statement contains a magic number: using (var clientContext = SharePointContext.CreateUserClientContextForSPAppWeb())              {                  List notesList = clientContext.Web.Lists.GetByTitle("Notes");                    var itemCreateInfo = new ListItemCreationInformation();                  for (int i = 0; i < 500; i++)                  {                      ListItem newItem = notesList.AddItem(itemCreateInfo);                      newItem["Title"] = "Notes Title." + i.ToString();                      newItem["FTCAM_Description"] = "Notes description";                      newItem.Update();                      if (i % 100 == 0)                          clientContext.ExecuteQuery();                  }                  clientContext.ExecuteQuery();                    clientContext.Load(notesList' l => l.ItemCount);                  clientContext.ExecuteQuery();                    if (notesList.ItemCount >= 5000)                      return "The App Web Notes List has " + notesList.ItemCount + " items' and exceeds the threshold.";                  else                      return 500 + " items have been added to the App Web Notes List. " +                                     "There are " + (5000-notesList.ItemCount) + " items left to add.";                        }
Magic Number,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,FillAppWebNotesListToThreshold,The following statement contains a magic number: using (var clientContext = SharePointContext.CreateUserClientContextForSPAppWeb())              {                  List notesList = clientContext.Web.Lists.GetByTitle("Notes");                    var itemCreateInfo = new ListItemCreationInformation();                  for (int i = 0; i < 500; i++)                  {                      ListItem newItem = notesList.AddItem(itemCreateInfo);                      newItem["Title"] = "Notes Title." + i.ToString();                      newItem["FTCAM_Description"] = "Notes description";                      newItem.Update();                      if (i % 100 == 0)                          clientContext.ExecuteQuery();                  }                  clientContext.ExecuteQuery();                    clientContext.Load(notesList' l => l.ItemCount);                  clientContext.ExecuteQuery();                    if (notesList.ItemCount >= 5000)                      return "The App Web Notes List has " + notesList.ItemCount + " items' and exceeds the threshold.";                  else                      return 500 + " items have been added to the App Web Notes List. " +                                     "There are " + (5000-notesList.ItemCount) + " items left to add.";                        }
Magic Number,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,FillAppWebNotesListToThreshold,The following statement contains a magic number: using (var clientContext = SharePointContext.CreateUserClientContextForSPAppWeb())              {                  List notesList = clientContext.Web.Lists.GetByTitle("Notes");                    var itemCreateInfo = new ListItemCreationInformation();                  for (int i = 0; i < 500; i++)                  {                      ListItem newItem = notesList.AddItem(itemCreateInfo);                      newItem["Title"] = "Notes Title." + i.ToString();                      newItem["FTCAM_Description"] = "Notes description";                      newItem.Update();                      if (i % 100 == 0)                          clientContext.ExecuteQuery();                  }                  clientContext.ExecuteQuery();                    clientContext.Load(notesList' l => l.ItemCount);                  clientContext.ExecuteQuery();                    if (notesList.ItemCount >= 5000)                      return "The App Web Notes List has " + notesList.ItemCount + " items' and exceeds the threshold.";                  else                      return 500 + " items have been added to the App Web Notes List. " +                                     "There are " + (5000-notesList.ItemCount) + " items left to add.";                        }
Magic Number,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,FillAppWebNotesListToThreshold,The following statement contains a magic number: using (var clientContext = SharePointContext.CreateUserClientContextForSPAppWeb())              {                  List notesList = clientContext.Web.Lists.GetByTitle("Notes");                    var itemCreateInfo = new ListItemCreationInformation();                  for (int i = 0; i < 500; i++)                  {                      ListItem newItem = notesList.AddItem(itemCreateInfo);                      newItem["Title"] = "Notes Title." + i.ToString();                      newItem["FTCAM_Description"] = "Notes description";                      newItem.Update();                      if (i % 100 == 0)                          clientContext.ExecuteQuery();                  }                  clientContext.ExecuteQuery();                    clientContext.Load(notesList' l => l.ItemCount);                  clientContext.ExecuteQuery();                    if (notesList.ItemCount >= 5000)                      return "The App Web Notes List has " + notesList.ItemCount + " items' and exceeds the threshold.";                  else                      return 500 + " items have been added to the App Web Notes List. " +                                     "There are " + (5000-notesList.ItemCount) + " items left to add.";                        }
Magic Number,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,FillHostWebSupportCasesToThreshold,The following statement contains a magic number: using (var clientContext = SharePointContext.CreateUserClientContextForSPHost())              {                  List supportCasesList = clientContext.Web.Lists.GetByTitle("Support Cases");                  ListItemCreationInformation itemCreateInfo = new ListItemCreationInformation();                  for (int i = 0; i < 500; i++)                  {                      ListItem newItem = supportCasesList.AddItem(itemCreateInfo);                      newItem["Title"] = "Wrong product received." + i.ToString();                      newItem["FTCAM_Status"] = "Open";                      newItem["FTCAM_CSR"] = "bjones";                      newItem["FTCAM_CustomerID"] = "thresholds test";                      newItem.Update();                      if (i % 100 == 0)                          clientContext.ExecuteQuery();                  }                  clientContext.ExecuteQuery();                                     clientContext.Load(supportCasesList' l => l.ItemCount);                  clientContext.ExecuteQuery();                    if(supportCasesList.ItemCount>=5000)                      return "The Host Web Support Cases List has " + supportCasesList.ItemCount + " items' and exceeds the threshold.";                  else                      return 500 + " items have been added to the Host Web Support Cases List. " +                       "There are " + (5000 - supportCasesList.ItemCount) + " items left to add.";                  }
Magic Number,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,FillHostWebSupportCasesToThreshold,The following statement contains a magic number: using (var clientContext = SharePointContext.CreateUserClientContextForSPHost())              {                  List supportCasesList = clientContext.Web.Lists.GetByTitle("Support Cases");                  ListItemCreationInformation itemCreateInfo = new ListItemCreationInformation();                  for (int i = 0; i < 500; i++)                  {                      ListItem newItem = supportCasesList.AddItem(itemCreateInfo);                      newItem["Title"] = "Wrong product received." + i.ToString();                      newItem["FTCAM_Status"] = "Open";                      newItem["FTCAM_CSR"] = "bjones";                      newItem["FTCAM_CustomerID"] = "thresholds test";                      newItem.Update();                      if (i % 100 == 0)                          clientContext.ExecuteQuery();                  }                  clientContext.ExecuteQuery();                                     clientContext.Load(supportCasesList' l => l.ItemCount);                  clientContext.ExecuteQuery();                    if(supportCasesList.ItemCount>=5000)                      return "The Host Web Support Cases List has " + supportCasesList.ItemCount + " items' and exceeds the threshold.";                  else                      return 500 + " items have been added to the Host Web Support Cases List. " +                       "There are " + (5000 - supportCasesList.ItemCount) + " items left to add.";                  }
Magic Number,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,FillHostWebSupportCasesToThreshold,The following statement contains a magic number: using (var clientContext = SharePointContext.CreateUserClientContextForSPHost())              {                  List supportCasesList = clientContext.Web.Lists.GetByTitle("Support Cases");                  ListItemCreationInformation itemCreateInfo = new ListItemCreationInformation();                  for (int i = 0; i < 500; i++)                  {                      ListItem newItem = supportCasesList.AddItem(itemCreateInfo);                      newItem["Title"] = "Wrong product received." + i.ToString();                      newItem["FTCAM_Status"] = "Open";                      newItem["FTCAM_CSR"] = "bjones";                      newItem["FTCAM_CustomerID"] = "thresholds test";                      newItem.Update();                      if (i % 100 == 0)                          clientContext.ExecuteQuery();                  }                  clientContext.ExecuteQuery();                                     clientContext.Load(supportCasesList' l => l.ItemCount);                  clientContext.ExecuteQuery();                    if(supportCasesList.ItemCount>=5000)                      return "The Host Web Support Cases List has " + supportCasesList.ItemCount + " items' and exceeds the threshold.";                  else                      return 500 + " items have been added to the Host Web Support Cases List. " +                       "There are " + (5000 - supportCasesList.ItemCount) + " items left to add.";                  }
Magic Number,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,FillHostWebSupportCasesToThreshold,The following statement contains a magic number: using (var clientContext = SharePointContext.CreateUserClientContextForSPHost())              {                  List supportCasesList = clientContext.Web.Lists.GetByTitle("Support Cases");                  ListItemCreationInformation itemCreateInfo = new ListItemCreationInformation();                  for (int i = 0; i < 500; i++)                  {                      ListItem newItem = supportCasesList.AddItem(itemCreateInfo);                      newItem["Title"] = "Wrong product received." + i.ToString();                      newItem["FTCAM_Status"] = "Open";                      newItem["FTCAM_CSR"] = "bjones";                      newItem["FTCAM_CustomerID"] = "thresholds test";                      newItem.Update();                      if (i % 100 == 0)                          clientContext.ExecuteQuery();                  }                  clientContext.ExecuteQuery();                                     clientContext.Load(supportCasesList' l => l.ItemCount);                  clientContext.ExecuteQuery();                    if(supportCasesList.ItemCount>=5000)                      return "The Host Web Support Cases List has " + supportCasesList.ItemCount + " items' and exceeds the threshold.";                  else                      return 500 + " items have been added to the Host Web Support Cases List. " +                       "There are " + (5000 - supportCasesList.ItemCount) + " items left to add.";                  }
Magic Number,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,FillHostWebSupportCasesToThreshold,The following statement contains a magic number: using (var clientContext = SharePointContext.CreateUserClientContextForSPHost())              {                  List supportCasesList = clientContext.Web.Lists.GetByTitle("Support Cases");                  ListItemCreationInformation itemCreateInfo = new ListItemCreationInformation();                  for (int i = 0; i < 500; i++)                  {                      ListItem newItem = supportCasesList.AddItem(itemCreateInfo);                      newItem["Title"] = "Wrong product received." + i.ToString();                      newItem["FTCAM_Status"] = "Open";                      newItem["FTCAM_CSR"] = "bjones";                      newItem["FTCAM_CustomerID"] = "thresholds test";                      newItem.Update();                      if (i % 100 == 0)                          clientContext.ExecuteQuery();                  }                  clientContext.ExecuteQuery();                                     clientContext.Load(supportCasesList' l => l.ItemCount);                  clientContext.ExecuteQuery();                    if(supportCasesList.ItemCount>=5000)                      return "The Host Web Support Cases List has " + supportCasesList.ItemCount + " items' and exceeds the threshold.";                  else                      return 500 + " items have been added to the Host Web Support Cases List. " +                       "There are " + (5000 - supportCasesList.ItemCount) + " items left to add.";                  }
Magic Number,Core.DataStorageModelsWeb.Services,SharePointService,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Services\SharePointService.cs,FillAppWebNotesWith1G,The following statement contains a magic number: using (var ctx = SharePointContext.CreateUserClientContextForSPAppWeb())              {                  List notesList = ctx.Web.Lists.GetByTitle("Notes");                  int maxNum = 100;                  for (int i = 0; i < maxNum; i++)                  {                      ListItemCreationInformation itemCreateInfo = new ListItemCreationInformation();                      ListItem newItem = notesList.AddItem(itemCreateInfo);                      newItem["Title"] = "Note " + i.ToString() + ".";                      newItem["FTCAM_Description"] = "Description " + i.ToString() + ".";                      newItem.Update();                      ctx.ExecuteQuery();                        var file = Path.Combine(HostingEnvironment.ApplicationPhysicalPath' "Assets/SampleData.rar");                      var filestream = System.IO.File.OpenRead(file);                      var info = new AttachmentCreationInformation                      {                          FileName = "SampleData.rar"'                          ContentStream = filestream                      };                      newItem.AttachmentFiles.Add(info);                      ctx.ExecuteQuery();                      filestream.Close();                  }                  return maxNum;              }
Missing Default,Core.DataStorageModelsWeb,SharePointContextFilterAttribute,C:\repos\OfficeDev_PnP\Samples\Core.DataStorageModels\Core.DataStorageModelsWeb\Filters\SharePointContextFilterAttribute.cs,OnActionExecuting,The following switch statement is missing a default case: switch (SharePointContextProvider.CheckRedirectionStatus(filterContext.HttpContext' out redirectUrl))              {                  case RedirectionStatus.Ok:                      return;                  case RedirectionStatus.ShouldRedirect:                      filterContext.Result = new RedirectResult(redirectUrl.AbsoluteUri);                      break;                  case RedirectionStatus.CanNotRedirect:                      filterContext.Result = new ViewResult { ViewName = "Error" };                      break;              }
