Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,OfficeDevPnP.Core.Framework.Authentication,SharePointContext,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointContext.cs,SharePointContext,The method has 5 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber
Long Parameter List,OfficeDevPnP.Core.Framework.Authentication,SharePointContextProvider,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,OfficeDevPnP.Core.Framework.Authentication,SharePointAcsContext,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointContext.cs,SharePointAcsContext,The method has 8 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' contextToken' contextTokenObj' configuration
Long Parameter List,OfficeDevPnP.Core.Framework.Authentication,SharePointAcsContextProvider,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,OfficeDevPnP.Core.Framework.Authentication,SharePointContextToken,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointContextToken.cs,SharePointContextToken,The method has 5 parameters. Parameters: issuer' audience' validFrom' validTo' claims
Long Parameter List,OfficeDevPnP.Core.Framework.Authentication,SharePointContextToken,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointContextToken.cs,SharePointContextToken,The method has 7 parameters. Parameters: issuer' audience' validFrom' validTo' claims' issuerToken' actorToken
Long Parameter List,OfficeDevPnP.Core.Framework.Authentication,SharePointContextToken,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointContextToken.cs,SharePointContextToken,The method has 6 parameters. Parameters: issuer' audience' validFrom' validTo' claims' signingCredentials
Long Parameter List,OfficeDevPnP.Core.Framework.Authentication,TokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,GetAccessToken,The method has 5 parameters. Parameters: authorizationCode' targetPrincipalName' targetHost' targetRealm' redirectUri
Long Parameter List,OfficeDevPnP.Core.Framework.Authentication,TokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,GetClientContextWithAuthorizationCode,The method has 5 parameters. Parameters: targetUrl' targetPrincipalName' authorizationCode' targetRealm' redirectUri
Long Parameter List,OfficeDevPnP.Core.Framework.Authentication,TokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,IssueToken,The method has 9 parameters. Parameters: sourceApplication' issuerApplication' sourceRealm' targetApplication' targetRealm' targetApplicationHostName' trustedForDelegation' claims' appOnly
Long Identifier,OfficeDevPnP.Core.Framework.Authentication,SharePointAuthenticationHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointAuthenticationHandler.cs,HandleRequestAsync,The length of the parameter userIsAuthenticatedWithSharePoint is 33.
Long Identifier,OfficeDevPnP.Core.Framework.Authentication,SharePointContextProvider,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointContext.cs,CheckRedirectionStatus,The length of the parameter SPHasRedirectedToSharePointKey is 30.
Long Identifier,OfficeDevPnP.Core.Framework.Authentication,TokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,,The length of the parameter AcsMetadataEndPointRelativeUrl is 30.
Long Identifier,OfficeDevPnP.Core.Framework.Authentication,TokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,,The length of the parameter TrustedForImpersonationClaimType is 32.
Long Identifier,OfficeDevPnP.Core.Framework.Authentication,AcsMetadataParser,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,GetMetadataDocument,The length of the parameter acsMetadataEndpointUrlWithRealm is 31.
Long Identifier,OfficeDevPnP.Core.Framework.Authentication,AcsMetadataParser,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,GetStsUrl,The length of the parameter acsMetadataEndpointUrlWithRealm is 31.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,SharePointAppBuilderExtensions,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointAppBuilderExtensions.cs,UseSharePointAuthentication,The length of the statement  "            throw new NotSupportedException("This method is no longer supported' see https://go.microsoft.com/fwlink/?linkid=845470"); " is 122.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,SharePointAppBuilderExtensions,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointAppBuilderExtensions.cs,UseSharePointAuthentication,The length of the statement  "            throw new NotSupportedException("This method is no longer supported' see https://go.microsoft.com/fwlink/?linkid=845470"); " is 122.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,SharePointAuthenticationExtensions,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointAuthenticationExtensions.cs,AddSharePoint,The length of the statement  "            builder.Services.TryAddEnumerable(ServiceDescriptor.Singleton<IPostConfigureOptions<SharePointAuthenticationOptions>' SharePointAuthenticationPostConfigureOptions>()); " is 167.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,SharePointAuthenticationExtensions,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointAuthenticationExtensions.cs,AddSharePoint,The length of the statement  "            return builder.AddRemoteScheme<SharePointAuthenticationOptions' SharePointAuthenticationHandler>(authenticationScheme' displayName' configureOptions); " is 150.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,SharePointAuthenticationHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointAuthenticationHandler.cs,HandleRemoteAuthenticateAsync,The length of the statement  "                    result = HandleRequestResult.Fail("No SPHostUrl to build a SharePoint Context' but Authenticate was called on the SharePoint middleware."); " is 139.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,SharePointAuthenticationHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointAuthenticationHandler.cs,HandleRemoteAuthenticateAsync,The length of the statement  "                    await Events.AuthenticationFailed(new AuthenticationFailedContext(Context' Scheme' Options' Options.AuthenticationProperties)); " is 127.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,SharePointContextProvider,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointContext.cs,CheckRedirectionStatus,The length of the statement  "            // Removes the values that are included in {StandardTokens}' as {StandardTokens} will be inserted at the beginning of the query string. " is 135.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,SharePointContextProvider,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointContext.cs,CheckRedirectionStatus,The length of the statement  "            string redirectUrlString = TokenHandler.GetAppContextTokenRequestUrl(spHostUrl.AbsoluteUri' Uri.EscapeDataString(returnUrlString)); " is 131.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,SharePointAcsContextProvider,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointContext.cs,CreateSharePointContext,The length of the statement  "            return new SharePointAcsContext(spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' contextTokenString' contextToken' Configuration); " is 147.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,SharePointAcsContextProvider,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointContext.cs,LoadSharePointContext,The length of the statement  "            return new SharePointAcsContext(dto.SpHostUrl' dto.SpAppWebUrl' dto.SpLanguage' dto.SpClientTag' dto.SpProductNumber' dto.ContextToken' contextTokenObj' Configuration); " is 168.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,SharePointContextToken,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointContextToken.cs,Create,The length of the statement  "            return new SharePointContextToken(contextToken.Issuer' contextToken.Audience' contextToken.ValidFrom' contextToken.ValidTo' contextToken.Claims); " is 145.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,TokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,GetAccessToken,The length of the statement  "                    client.Issue(AcsMetadataParser.GetStsUrl(GetAcsMetadataEndpointUrlWithRealm(targetRealm))' oauth2Request) as OAuth2AccessTokenResponse; " is 135.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,TokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,GetAccessToken,The length of the statement  "            OAuth2AccessTokenRequest oauth2Request = OAuth2MessageFactory.CreateAccessTokenRequestWithRefreshToken(clientId' _clientSecret' refreshToken' resource); " is 152.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,TokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,GetAccessToken,The length of the statement  "                    client.Issue(AcsMetadataParser.GetStsUrl(GetAcsMetadataEndpointUrlWithRealm(targetRealm))' oauth2Request) as OAuth2AccessTokenResponse; " is 135.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,TokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,GetAppOnlyAccessToken,The length of the statement  "            OAuth2AccessTokenRequest oauth2Request = OAuth2MessageFactory.CreateAccessTokenRequestWithClientCredentials(clientId' _clientSecret' resource); " is 143.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,TokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,GetAppOnlyAccessToken,The length of the statement  "                    client.Issue(AcsMetadataParser.GetStsUrl(GetAcsMetadataEndpointUrlWithRealm(targetRealm))' oauth2Request) as OAuth2AccessTokenResponse; " is 135.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,TokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,CreateAppEventClientContext,The length of the statement  "            Uri sharepointUrl = useAppWeb ? properties.AppEventProperties.AppWebFullUrl : properties.AppEventProperties.HostWebFullUrl; " is 123.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,TokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,GetClientContextWithAuthorizationCode,The length of the statement  "            return GetClientContextWithAuthorizationCode(targetUrl' SharePointPrincipal' authorizationCode' GetRealmFromTargetUrl(new Uri(targetUrl))' redirectUri); " is 152.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,TokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,GetAuthorizationUrl,The length of the statement  "                $"{EnsureTrailingSlash(contextUrl)}{AuthorizationPage}?IsDlg=1&client_id={_clientId}&scope={scope}&response_type=code&redirect_uri={redirectUri}"; " is 146.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,TokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,CreateAcsClientContextForUrl,The length of the statement  "            SharePointContextToken contextToken = ReadAndValidateContextToken(contextTokenString' OperationContext.Current.IncomingMessageHeaders.To.Host); " is 143.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,TokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,IssueToken,The length of the statement  "            string issuer = string.IsNullOrEmpty(sourceRealm) ? issuerApplication : string.Format("{0}@{1}"' issuerApplication' sourceRealm); " is 129.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,TokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,IssueToken,The length of the statement  "            string nameid = string.IsNullOrEmpty(sourceRealm) ? sourceApplication : string.Format("{0}@{1}"' sourceApplication' sourceRealm); " is 129.
Long Statement,OfficeDevPnP.Core.Framework.Authentication,TokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,IssueToken,The length of the statement  "            List<JsonWebTokenClaim> outerClaims = null == claims ? new List<JsonWebTokenClaim>() : new List<JsonWebTokenClaim>(claims); " is 123.
Empty Catch Block,OfficeDevPnP.Core.Framework.Authentication,TokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\TokenHandler.cs,GetContextTokenFromRequest,The method has an empty catch block.
Magic Number,OfficeDevPnP.Core.Framework.Authentication,LoggingExtensions,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\LoggingExtensions.cs,LoggingExtensions,The following statement contains a magic number: _tokenValidationSucceeded = LoggerMessage.Define(                  logLevel: LogLevel.Information'                   eventId: 2'                  formatString: "Successfully validated the token.");
Magic Number,OfficeDevPnP.Core.Framework.Authentication,LoggingExtensions,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\LoggingExtensions.cs,LoggingExtensions,The following statement contains a magic number: _errorProcessingMessage = LoggerMessage.Define(                  logLevel: LogLevel.Error'                  eventId: 3'                  formatString: "Exception occurred while processing message.");
Magic Number,OfficeDevPnP.Core.Framework.Authentication,LoggingExtensions,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\LoggingExtensions.cs,LoggingExtensions,The following statement contains a magic number: _cannotRedirect = LoggerMessage.Define(                  logLevel: LogLevel.Information'                  eventId: 4'                  formatString: "Cannot find redirect information.");
Magic Number,OfficeDevPnP.Core.Framework.Authentication,SharePointAuthenticationHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointAuthenticationHandler.cs,HandleRemoteAuthenticateAsync,The following statement contains a magic number: switch (SharePointContextProvider.CheckRedirectionStatus(Context' out Uri redirectUrl))              {                  case RedirectionStatus.Ok:                      // Gets the current SharePoint context                      var spContext = SharePointContextProvider.Current.GetSharePointContext(Context);                        // Gets the SharePoint context CacheKey. The CacheKey would be assigned as issuer for new claim.                      // It is also used to validate identity that is authenticated.                      //Currently' we don't support High Trust                      var userCacheKey = ((SharePointAcsContext)spContext).CacheKey;                        // Checks if we already have an authenticated principal                      ClaimsPrincipal principal;                      if (Context.User.Identities.Any(identity =>                          identity.IsAuthenticated && identity.HasClaim(x => x.Issuer == ClaimsIssuer)))                      {                          principal = Context.User;                      }                      else                      {                          //build a claims identity and principal                          var identity = new ClaimsIdentity(Scheme.Name);                            // Adds claims with the SharePoint context CacheKey as issuer to the Identity object.                          var claims = new[]                          {                              new Claim(ClaimTypes.Authentication' userCacheKey' "SPCacheKey"' ClaimsIssuer)                          };                            identity.AddClaims(claims);                            principal = new ClaimsPrincipal(identity);                                                    //Call sign in middleware' defaults to the cookie middleware (if set up) so it issues a cookie' can be overriden                          await HandleSignInAsync(principal);                      }                        // Creates the authentication ticket.                      var ticket = new AuthenticationTicket(principal' Options.AuthenticationProperties' Options.SignInScheme);                      result = HandleRequestResult.Success(ticket);                        //Throw auth ticket success event                      await Events.AuthenticationSucceeded(                          new AuthenticationSucceededContext(Context' Scheme' Options' Options.AuthenticationProperties)                          {                              Ticket = ticket' //pass the ticket                               SharePointContext = spContext //append the sp context                          });                        //Log success                      LoggingExtensions.TokenValidationSucceeded(Logger);                        break;                  case RedirectionStatus.ShouldRedirect:                      Response.StatusCode = 301;                      result = HandleRequestResult.Fail("ShouldRedirect");                        // Signs out so new signin to be performed on redirect back from SharePoint                      await Context.SignOutAsync(Scheme.Name);                        // Redirect to get new context token                      Context.Response.Redirect(redirectUrl.AbsoluteUri);                      break;                  case RedirectionStatus.CanNotRedirect:                      result = HandleRequestResult.Fail("No SPHostUrl to build a SharePoint Context' but Authenticate was called on the SharePoint middleware.");                        //Log that we cannot redirect                      LoggingExtensions.CannotRedirect(Logger);                        //Throw failed event                      await Events.AuthenticationFailed(new AuthenticationFailedContext(Context' Scheme' Options' Options.AuthenticationProperties));                        break;              }
Magic Number,OfficeDevPnP.Core.Framework.Authentication,SharePointAuthenticationPostConfigureOptions,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointAuthenticationPostConfigureOptions.cs,PostConfigure,The following statement contains a magic number: options.AuthenticationProperties = options.AuthenticationProperties ?? new AuthenticationProperties              {                  ExpiresUtc = DateTimeOffset.UtcNow.AddDays(10)'                  IsPersistent = false'                  AllowRefresh = false              };
Magic Number,OfficeDevPnP.Core.Framework.Authentication,SharePointAuthenticationPostConfigureOptions,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointAuthenticationPostConfigureOptions.cs,PostConfigure,The following statement contains a magic number: options.Backchannel.MaxResponseContentBufferSize = 1024 * 1024 * 10;
Magic Number,OfficeDevPnP.Core.Framework.Authentication,SharePointAuthenticationPostConfigureOptions,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointAuthenticationPostConfigureOptions.cs,PostConfigure,The following statement contains a magic number: options.Backchannel.MaxResponseContentBufferSize = 1024 * 1024 * 10;
Magic Number,OfficeDevPnP.Core.Framework.Authentication,SharePointAuthenticationPostConfigureOptions,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointAuthenticationPostConfigureOptions.cs,PostConfigure,The following statement contains a magic number: options.Backchannel.MaxResponseContentBufferSize = 1024 * 1024 * 10;
Missing Default,OfficeDevPnP.Core.Framework.Authentication,SharePointAuthenticationHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\OfficeDevPnP.Core.Framework.Authentication\SharePointAuthenticationHandler.cs,HandleRemoteAuthenticateAsync,The following switch statement is missing a default case: switch (SharePointContextProvider.CheckRedirectionStatus(Context' out Uri redirectUrl))              {                  case RedirectionStatus.Ok:                      // Gets the current SharePoint context                      var spContext = SharePointContextProvider.Current.GetSharePointContext(Context);                        // Gets the SharePoint context CacheKey. The CacheKey would be assigned as issuer for new claim.                      // It is also used to validate identity that is authenticated.                      //Currently' we don't support High Trust                      var userCacheKey = ((SharePointAcsContext)spContext).CacheKey;                        // Checks if we already have an authenticated principal                      ClaimsPrincipal principal;                      if (Context.User.Identities.Any(identity =>                          identity.IsAuthenticated && identity.HasClaim(x => x.Issuer == ClaimsIssuer)))                      {                          principal = Context.User;                      }                      else                      {                          //build a claims identity and principal                          var identity = new ClaimsIdentity(Scheme.Name);                            // Adds claims with the SharePoint context CacheKey as issuer to the Identity object.                          var claims = new[]                          {                              new Claim(ClaimTypes.Authentication' userCacheKey' "SPCacheKey"' ClaimsIssuer)                          };                            identity.AddClaims(claims);                            principal = new ClaimsPrincipal(identity);                                                    //Call sign in middleware' defaults to the cookie middleware (if set up) so it issues a cookie' can be overriden                          await HandleSignInAsync(principal);                      }                        // Creates the authentication ticket.                      var ticket = new AuthenticationTicket(principal' Options.AuthenticationProperties' Options.SignInScheme);                      result = HandleRequestResult.Success(ticket);                        //Throw auth ticket success event                      await Events.AuthenticationSucceeded(                          new AuthenticationSucceededContext(Context' Scheme' Options' Options.AuthenticationProperties)                          {                              Ticket = ticket' //pass the ticket                               SharePointContext = spContext //append the sp context                          });                        //Log success                      LoggingExtensions.TokenValidationSucceeded(Logger);                        break;                  case RedirectionStatus.ShouldRedirect:                      Response.StatusCode = 301;                      result = HandleRequestResult.Fail("ShouldRedirect");                        // Signs out so new signin to be performed on redirect back from SharePoint                      await Context.SignOutAsync(Scheme.Name);                        // Redirect to get new context token                      Context.Response.Redirect(redirectUrl.AbsoluteUri);                      break;                  case RedirectionStatus.CanNotRedirect:                      result = HandleRequestResult.Fail("No SPHostUrl to build a SharePoint Context' but Authenticate was called on the SharePoint middleware.");                        //Log that we cannot redirect                      LoggingExtensions.CannotRedirect(Logger);                        //Throw failed event                      await Events.AuthenticationFailed(new AuthenticationFailedContext(Context' Scheme' Options' Options.AuthenticationProperties));                        break;              }
