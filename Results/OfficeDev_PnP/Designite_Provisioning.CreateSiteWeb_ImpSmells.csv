Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Provisioning.CreateSiteWeb,SharePointContext,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\SharePointContext.cs,SharePointContext,The method has 5 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber
Long Parameter List,Provisioning.CreateSiteWeb,SharePointContextProvider,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,Provisioning.CreateSiteWeb,SharePointAcsContext,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\SharePointContext.cs,SharePointAcsContext,The method has 7 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' contextToken' contextTokenObj
Long Parameter List,Provisioning.CreateSiteWeb,SharePointAcsContextProvider,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,Provisioning.CreateSiteWeb,SharePointHighTrustContext,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\SharePointContext.cs,SharePointHighTrustContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' logonUserIdentity
Long Parameter List,Provisioning.CreateSiteWeb,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,Provisioning.CreateSiteWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,GetAccessToken,The method has 5 parameters. Parameters: authorizationCode' targetPrincipalName' targetHost' targetRealm' redirectUri
Long Parameter List,Provisioning.CreateSiteWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,GetClientContextWithAuthorizationCode,The method has 5 parameters. Parameters: targetUrl' targetPrincipalName' authorizationCode' targetRealm' redirectUri
Long Parameter List,Provisioning.CreateSiteWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,IssueToken,The method has 9 parameters. Parameters: sourceApplication' issuerApplication' sourceRealm' targetApplication' targetRealm' targetApplicationHostName' trustedForDelegation' claims' appOnly
Long Parameter List,Provisioning.CreateSiteWeb,SharePointContextToken,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,SharePointContextToken,The method has 5 parameters. Parameters: issuer' audience' validFrom' validTo' claims
Long Parameter List,Provisioning.CreateSiteWeb,SharePointContextToken,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,SharePointContextToken,The method has 7 parameters. Parameters: issuer' audience' validFrom' validTo' claims' issuerToken' actorToken
Long Parameter List,Provisioning.CreateSiteWeb,SharePointContextToken,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,SharePointContextToken,The method has 6 parameters. Parameters: issuer' audience' validFrom' validTo' claims' signingCredentials
Long Identifier,Provisioning.CreateSiteWeb,SharePointContext,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\SharePointContext.cs,GetDatabaseConnectionString,The length of the parameter LocalDBInstanceForDebuggingKey is 30.
Long Identifier,Provisioning.CreateSiteWeb,SharePointContextProvider,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\SharePointContext.cs,CheckRedirectionStatus,The length of the parameter SPHasRedirectedToSharePointKey is 30.
Long Identifier,Provisioning.CreateSiteWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,,The length of the parameter AcsMetadataEndPointRelativeUrl is 30.
Long Identifier,Provisioning.CreateSiteWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,,The length of the parameter TrustedForImpersonationClaimType is 32.
Long Identifier,Provisioning.CreateSiteWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,,The length of the parameter ClientSigningCertificatePassword is 32.
Long Identifier,Provisioning.CreateSiteWeb,AcsMetadataParser,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,GetMetadataDocument,The length of the parameter acsMetadataEndpointUrlWithRealm is 31.
Long Statement,Provisioning.CreateSiteWeb,SharePointContextProvider,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\SharePointContext.cs,CheckRedirectionStatus,The length of the statement  "            // Removes the values that are included in {StandardTokens}' as {StandardTokens} will be inserted at the beginning of the query string. " is 135.
Long Statement,Provisioning.CreateSiteWeb,SharePointContextProvider,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\SharePointContext.cs,CheckRedirectionStatus,The length of the statement  "            string redirectUrlString = TokenHelper.GetAppContextTokenRequestUrl(spHostUrl.AbsoluteUri' Uri.EscapeDataString(returnUrlString)); " is 130.
Long Statement,Provisioning.CreateSiteWeb,SharePointAcsContextProvider,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\SharePointContext.cs,CreateSharePointContext,The length of the statement  "            return new SharePointAcsContext(spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' contextTokenString' contextToken); " is 132.
Long Statement,Provisioning.CreateSiteWeb,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\SharePointContext.cs,CreateSharePointContext,The length of the statement  "            if (logonUserIdentity == null || !logonUserIdentity.IsAuthenticated || logonUserIdentity.IsGuest || logonUserIdentity.User == null) " is 131.
Long Statement,Provisioning.CreateSiteWeb,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\SharePointContext.cs,CreateSharePointContext,The length of the statement  "            return new SharePointHighTrustContext(spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' logonUserIdentity); " is 123.
Long Statement,Provisioning.CreateSiteWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,GetAccessToken,The length of the statement  "            OAuth2AccessTokenRequest oauth2Request = OAuth2MessageFactory.CreateAccessTokenRequestWithRefreshToken(clientId' ClientSecret' refreshToken' resource); " is 151.
Long Statement,Provisioning.CreateSiteWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,GetAppOnlyAccessToken,The length of the statement  "            OAuth2AccessTokenRequest oauth2Request = OAuth2MessageFactory.CreateAccessTokenRequestWithClientCredentials(clientId' ClientSecret' resource); " is 142.
Long Statement,Provisioning.CreateSiteWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,CreateAppEventClientContext,The length of the statement  "            Uri sharepointUrl = useAppWeb ? properties.AppEventProperties.AppWebFullUrl : properties.AppEventProperties.HostWebFullUrl; " is 123.
Long Statement,Provisioning.CreateSiteWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,GetClientContextWithAuthorizationCode,The length of the statement  "            return GetClientContextWithAuthorizationCode(targetUrl' SharePointPrincipal' authorizationCode' GetRealmFromTargetUrl(new Uri(targetUrl))' redirectUri); " is 152.
Long Statement,Provisioning.CreateSiteWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,CreateAcsClientContextForUrl,The length of the statement  "            SharePointContextToken contextToken = ReadAndValidateContextToken(contextTokenString' OperationContext.Current.IncomingMessageHeaders.To.Host); " is 143.
Long Statement,Provisioning.CreateSiteWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,IssueToken,The length of the statement  "            string issuer = string.IsNullOrEmpty(sourceRealm) ? issuerApplication : string.Format("{0}@{1}"' issuerApplication' sourceRealm); " is 129.
Long Statement,Provisioning.CreateSiteWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,IssueToken,The length of the statement  "            string nameid = string.IsNullOrEmpty(sourceRealm) ? sourceApplication : string.Format("{0}@{1}"' sourceApplication' sourceRealm); " is 129.
Long Statement,Provisioning.CreateSiteWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,IssueToken,The length of the statement  "            List<JsonWebTokenClaim> outerClaims = null == claims ? new List<JsonWebTokenClaim>() : new List<JsonWebTokenClaim>(claims); " is 123.
Long Statement,Provisioning.CreateSiteWeb,SharePointContextToken,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,Create,The length of the statement  "            return new SharePointContextToken(contextToken.Issuer' contextToken.Audience' contextToken.ValidFrom' contextToken.ValidTo' contextToken.Claims); " is 145.
Long Statement,Provisioning.CreateSiteWeb.Pages,Scenario2,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\Pages\Scenario2.aspx.cs,btnCreateSite_Click,The length of the statement  "                    tenant.CreateSiteCollection(webUrl' txtName.Text' currUser.Email' drpContentTypes.SelectedValue' 500' 400' 7' 7' 1' 1033); " is 122.
Long Statement,Provisioning.CreateSiteWeb.Pages,Scenario2,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\Pages\Scenario2.aspx.cs,btnCreateSite_Click,The length of the statement  "                    string token = TokenHelper.GetAppOnlyAccessToken(TokenHelper.SharePointPrincipal' siteUri.Authority' TokenHelper.GetRealmFromTargetUrl(new Uri(webUrl))).AccessToken; " is 165.
Complex Conditional,Provisioning.CreateSiteWeb,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\SharePointContext.cs,CreateSharePointContext,The conditional expression  "logonUserIdentity == null || !logonUserIdentity.IsAuthenticated || logonUserIdentity.IsGuest || logonUserIdentity.User == null"  is complex.
Empty Catch Block,Provisioning.CreateSiteWeb,SharePointAcsContext,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\SharePointContext.cs,RenewAccessTokenIfNeeded,The method has an empty catch block.
Magic Number,Provisioning.CreateSiteWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,GetRealmFromTargetUrl,The following statement contains a magic number: try              {                  using (request.GetResponse())                  {                  }              }              catch (WebException e)              {                  if (e.Response == null)                  {                      return null;                  }                    string bearerResponseHeader = e.Response.Headers["WWW-Authenticate"];                  if (string.IsNullOrEmpty(bearerResponseHeader))                  {                      return null;                  }                    const string bearer = "Bearer realm=\"";                  int bearerIndex = bearerResponseHeader.IndexOf(bearer' StringComparison.Ordinal);                  if (bearerIndex < 0)                  {                      return null;                  }                    int realmIndex = bearerIndex + bearer.Length;                    if (bearerResponseHeader.Length >= realmIndex + 36)                  {                      string targetRealm = bearerResponseHeader.Substring(realmIndex' 36);                        Guid realmGuid;                        if (Guid.TryParse(targetRealm' out realmGuid))                      {                          return targetRealm;                      }                  }              }
Magic Number,Provisioning.CreateSiteWeb,TokenHelper,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\TokenHelper.cs,GetRealmFromTargetUrl,The following statement contains a magic number: try              {                  using (request.GetResponse())                  {                  }              }              catch (WebException e)              {                  if (e.Response == null)                  {                      return null;                  }                    string bearerResponseHeader = e.Response.Headers["WWW-Authenticate"];                  if (string.IsNullOrEmpty(bearerResponseHeader))                  {                      return null;                  }                    const string bearer = "Bearer realm=\"";                  int bearerIndex = bearerResponseHeader.IndexOf(bearer' StringComparison.Ordinal);                  if (bearerIndex < 0)                  {                      return null;                  }                    int realmIndex = bearerIndex + bearer.Length;                    if (bearerResponseHeader.Length >= realmIndex + 36)                  {                      string targetRealm = bearerResponseHeader.Substring(realmIndex' 36);                        Guid realmGuid;                        if (Guid.TryParse(targetRealm' out realmGuid))                      {                          return targetRealm;                      }                  }              }
Magic Number,Provisioning.CreateSiteWeb.Pages,Scenario1,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\Pages\Scenario1.aspx.cs,btnCreateSite_Click,The following statement contains a magic number: using (var ctx = spContext.CreateUserClientContextForSPHost())              {                  if (!ctx.Web.WebExists(txtUrl.Text))                  {                      // Create the sub site                      Web newWeb = ctx.Web.CreateWeb(txtName.Text' txtUrl.Text' "Description"' drpContentTypes.SelectedValue' 1033);                        // Let's add two document libraries to the site                       newWeb.CreateDocumentLibrary("Specifications");                      newWeb.CreateDocumentLibrary("Presentations");                        // Let's also apply theme to the site to demonstrate how easy this is                      newWeb.SetComposedLookByUrl("Characters");                        string newUrl = ctx.Web.Url + "/" + txtUrl.Text;                      lblStatus1.Text = string.Format("New sub site created. Check the site from <a href='{0}'>here</a>"' newUrl);                  }                  else                  {                      lblStatus1.Text = "URL has been already taken for sub site. Creation cancelled.";                  }              }
Magic Number,Provisioning.CreateSiteWeb.Pages,Scenario2,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\Pages\Scenario2.aspx.cs,btnCheckUrl_Click,The following statement contains a magic number: var tenantStr = Page.Request["SPHostUrl"].ToLower().Replace("-my"' "").Substring(8);
Magic Number,Provisioning.CreateSiteWeb.Pages,Scenario2,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\Pages\Scenario2.aspx.cs,btnCreateSite_Click,The following statement contains a magic number: var tenantStr = Page.Request["SPHostUrl"].ToLower().Replace("-my"' "").Substring(8);
Magic Number,Provisioning.CreateSiteWeb.Pages,Scenario2,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\Pages\Scenario2.aspx.cs,btnCreateSite_Click,The following statement contains a magic number: using (var ctx = TokenHelper.GetClientContextWithAccessToken(tenantAdminUri.ToString()' accessToken))              {                  Tenant tenant = new Tenant(ctx);                    if (tenant.SiteExists(webUrl))                  {                      lblStatus1.Text = string.Format("Site already existed. Used URL - {0}"' webUrl);                  }                  else                  {                      // Create new site collection with some storage limts and English locale                      tenant.CreateSiteCollection(webUrl' txtName.Text' currUser.Email' drpContentTypes.SelectedValue' 500' 400' 7' 7' 1' 1033);                        // Let's get instance to the newly added site collection using URLs                      var siteUri = new Uri(webUrl);                      string token = TokenHelper.GetAppOnlyAccessToken(TokenHelper.SharePointPrincipal' siteUri.Authority' TokenHelper.GetRealmFromTargetUrl(new Uri(webUrl))).AccessToken;                      using (var newWebContext = TokenHelper.GetClientContextWithAccessToken(siteUri.ToString()' token))                      {                          // Let's modify the web slightly                          var newWeb = newWebContext.Web;                          newWebContext.Load(newWeb);                          newWebContext.ExecuteQuery();                            // Let's add two document libraries to the site                           newWeb.CreateDocumentLibrary("Specifications");                           newWeb.CreateDocumentLibrary("Presentations");                            // Let's also apply theme to the site to demonstrate how easy this is                          newWeb.SetComposedLookByUrl("Characters");                      }                        lblStatus1.Text = string.Format("Created a new site collection to address <a href='{0}'>{1}</a>"' webUrl' webUrl);                  }              }
Magic Number,Provisioning.CreateSiteWeb.Pages,Scenario2,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\Pages\Scenario2.aspx.cs,btnCreateSite_Click,The following statement contains a magic number: using (var ctx = TokenHelper.GetClientContextWithAccessToken(tenantAdminUri.ToString()' accessToken))              {                  Tenant tenant = new Tenant(ctx);                    if (tenant.SiteExists(webUrl))                  {                      lblStatus1.Text = string.Format("Site already existed. Used URL - {0}"' webUrl);                  }                  else                  {                      // Create new site collection with some storage limts and English locale                      tenant.CreateSiteCollection(webUrl' txtName.Text' currUser.Email' drpContentTypes.SelectedValue' 500' 400' 7' 7' 1' 1033);                        // Let's get instance to the newly added site collection using URLs                      var siteUri = new Uri(webUrl);                      string token = TokenHelper.GetAppOnlyAccessToken(TokenHelper.SharePointPrincipal' siteUri.Authority' TokenHelper.GetRealmFromTargetUrl(new Uri(webUrl))).AccessToken;                      using (var newWebContext = TokenHelper.GetClientContextWithAccessToken(siteUri.ToString()' token))                      {                          // Let's modify the web slightly                          var newWeb = newWebContext.Web;                          newWebContext.Load(newWeb);                          newWebContext.ExecuteQuery();                            // Let's add two document libraries to the site                           newWeb.CreateDocumentLibrary("Specifications");                           newWeb.CreateDocumentLibrary("Presentations");                            // Let's also apply theme to the site to demonstrate how easy this is                          newWeb.SetComposedLookByUrl("Characters");                      }                        lblStatus1.Text = string.Format("Created a new site collection to address <a href='{0}'>{1}</a>"' webUrl' webUrl);                  }              }
Magic Number,Provisioning.CreateSiteWeb.Pages,Scenario2,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\Pages\Scenario2.aspx.cs,btnCreateSite_Click,The following statement contains a magic number: using (var ctx = TokenHelper.GetClientContextWithAccessToken(tenantAdminUri.ToString()' accessToken))              {                  Tenant tenant = new Tenant(ctx);                    if (tenant.SiteExists(webUrl))                  {                      lblStatus1.Text = string.Format("Site already existed. Used URL - {0}"' webUrl);                  }                  else                  {                      // Create new site collection with some storage limts and English locale                      tenant.CreateSiteCollection(webUrl' txtName.Text' currUser.Email' drpContentTypes.SelectedValue' 500' 400' 7' 7' 1' 1033);                        // Let's get instance to the newly added site collection using URLs                      var siteUri = new Uri(webUrl);                      string token = TokenHelper.GetAppOnlyAccessToken(TokenHelper.SharePointPrincipal' siteUri.Authority' TokenHelper.GetRealmFromTargetUrl(new Uri(webUrl))).AccessToken;                      using (var newWebContext = TokenHelper.GetClientContextWithAccessToken(siteUri.ToString()' token))                      {                          // Let's modify the web slightly                          var newWeb = newWebContext.Web;                          newWebContext.Load(newWeb);                          newWebContext.ExecuteQuery();                            // Let's add two document libraries to the site                           newWeb.CreateDocumentLibrary("Specifications");                           newWeb.CreateDocumentLibrary("Presentations");                            // Let's also apply theme to the site to demonstrate how easy this is                          newWeb.SetComposedLookByUrl("Characters");                      }                        lblStatus1.Text = string.Format("Created a new site collection to address <a href='{0}'>{1}</a>"' webUrl' webUrl);                  }              }
Magic Number,Provisioning.CreateSiteWeb.Pages,Scenario2,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\Pages\Scenario2.aspx.cs,btnCreateSite_Click,The following statement contains a magic number: using (var ctx = TokenHelper.GetClientContextWithAccessToken(tenantAdminUri.ToString()' accessToken))              {                  Tenant tenant = new Tenant(ctx);                    if (tenant.SiteExists(webUrl))                  {                      lblStatus1.Text = string.Format("Site already existed. Used URL - {0}"' webUrl);                  }                  else                  {                      // Create new site collection with some storage limts and English locale                      tenant.CreateSiteCollection(webUrl' txtName.Text' currUser.Email' drpContentTypes.SelectedValue' 500' 400' 7' 7' 1' 1033);                        // Let's get instance to the newly added site collection using URLs                      var siteUri = new Uri(webUrl);                      string token = TokenHelper.GetAppOnlyAccessToken(TokenHelper.SharePointPrincipal' siteUri.Authority' TokenHelper.GetRealmFromTargetUrl(new Uri(webUrl))).AccessToken;                      using (var newWebContext = TokenHelper.GetClientContextWithAccessToken(siteUri.ToString()' token))                      {                          // Let's modify the web slightly                          var newWeb = newWebContext.Web;                          newWebContext.Load(newWeb);                          newWebContext.ExecuteQuery();                            // Let's add two document libraries to the site                           newWeb.CreateDocumentLibrary("Specifications");                           newWeb.CreateDocumentLibrary("Presentations");                            // Let's also apply theme to the site to demonstrate how easy this is                          newWeb.SetComposedLookByUrl("Characters");                      }                        lblStatus1.Text = string.Format("Created a new site collection to address <a href='{0}'>{1}</a>"' webUrl' webUrl);                  }              }
Magic Number,Provisioning.CreateSiteWeb.Pages,Scenario2,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\Pages\Scenario2.aspx.cs,btnCreateSite_Click,The following statement contains a magic number: using (var ctx = TokenHelper.GetClientContextWithAccessToken(tenantAdminUri.ToString()' accessToken))              {                  Tenant tenant = new Tenant(ctx);                    if (tenant.SiteExists(webUrl))                  {                      lblStatus1.Text = string.Format("Site already existed. Used URL - {0}"' webUrl);                  }                  else                  {                      // Create new site collection with some storage limts and English locale                      tenant.CreateSiteCollection(webUrl' txtName.Text' currUser.Email' drpContentTypes.SelectedValue' 500' 400' 7' 7' 1' 1033);                        // Let's get instance to the newly added site collection using URLs                      var siteUri = new Uri(webUrl);                      string token = TokenHelper.GetAppOnlyAccessToken(TokenHelper.SharePointPrincipal' siteUri.Authority' TokenHelper.GetRealmFromTargetUrl(new Uri(webUrl))).AccessToken;                      using (var newWebContext = TokenHelper.GetClientContextWithAccessToken(siteUri.ToString()' token))                      {                          // Let's modify the web slightly                          var newWeb = newWebContext.Web;                          newWebContext.Load(newWeb);                          newWebContext.ExecuteQuery();                            // Let's add two document libraries to the site                           newWeb.CreateDocumentLibrary("Specifications");                           newWeb.CreateDocumentLibrary("Presentations");                            // Let's also apply theme to the site to demonstrate how easy this is                          newWeb.SetComposedLookByUrl("Characters");                      }                        lblStatus1.Text = string.Format("Created a new site collection to address <a href='{0}'>{1}</a>"' webUrl' webUrl);                  }              }
Missing Default,Provisioning.CreateSiteWeb,Default,C:\repos\OfficeDev_PnP\Samples\Provisioning.CreateSite\Provisioning.CreateSiteWeb\Pages\Default.aspx.cs,Page_PreInit,The following switch statement is missing a default case: switch (SharePointContextProvider.CheckRedirectionStatus(Context' out redirectUrl))              {                  case RedirectionStatus.Ok:                      return;                  case RedirectionStatus.ShouldRedirect:                      Response.Redirect(redirectUrl.AbsoluteUri' endResponse: true);                      break;                  case RedirectionStatus.CanNotRedirect:                      Response.Write("An error occurred while processing your request.");                      Response.End();                      break;              }
