Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SharePointPnP.IdentityModel.Extensions.S2S,DictionaryExtension,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\DictionaryExtension.cs,Decode,Cyclomatic complexity of the method is 8
Complex Method,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,AudienceValidator,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\AudienceValidator.cs,ValidateAudiences,Cyclomatic complexity of the method is 10
Complex Method,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityToken,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityToken.cs,CreateHeaderClaims,Cyclomatic complexity of the method is 8
Complex Method,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,CreateToken,Cyclomatic complexity of the method is 8
Complex Method,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,ReadTokenCore,Cyclomatic complexity of the method is 12
Complex Method,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,ValidateTokenCore,Cyclomatic complexity of the method is 11
Complex Method,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,VerifySignature,Cyclomatic complexity of the method is 9
Long Parameter List,SharePointPnP.IdentityModel.Extensions.S2S,DictionaryExtension,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\DictionaryExtension.cs,Decode,The method has 5 parameters. Parameters: self' encodedDictionary' separator' keyValueSplitter' endsWithSeparator
Long Parameter List,SharePointPnP.IdentityModel.Extensions.S2S,DictionaryExtension,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\DictionaryExtension.cs,Decode,The method has 7 parameters. Parameters: self' encodedDictionary' separator' keyValueSplitter' keyDecoder' valueDecoder' endsWithSeparator
Long Parameter List,SharePointPnP.IdentityModel.Extensions.S2S,DictionaryExtension,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\DictionaryExtension.cs,Encode,The method has 6 parameters. Parameters: self' separator' keyValueSplitter' keyEncoder' valueEncoder' endsWithSeparator
Long Parameter List,SharePointPnP.IdentityModel.Extensions.S2S.Protocols.OAuth2,OAuth2MessageFactory,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Protocols\OAuth2\OAuth2MessageFactory.cs,CreateAccessTokenRequestWithAuthorizationCode,The method has 5 parameters. Parameters: clientId' clientSecret' authorizationCode' redirectUri' resource
Long Parameter List,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityToken,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityToken.cs,JsonWebSecurityToken,The method has 6 parameters. Parameters: issuer' audience' validFrom' validTo' claims' signingCredentials
Long Parameter List,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityToken,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityToken.cs,JsonWebSecurityToken,The method has 7 parameters. Parameters: issuer' audience' validFrom' validTo' claims' issuerToken' actorToken
Long Parameter List,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityToken,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityToken.cs,JsonWebSecurityToken,The method has 5 parameters. Parameters: issuer' audience' validFrom' validTo' claims
Long Identifier,SharePointPnP.IdentityModel.Extensions.S2S.Protocols.OAuth2,OAuth2MessageFactory,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Protocols\OAuth2\OAuth2MessageFactory.cs,CreateAccessTokenRequestWithAssertion,The length of the parameter securityTokenHandlerCollection is 30.
Long Identifier,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,JsonWebSecurityTokenHandler,The length of the parameter jsonWebSecurityTokenRequirement is 31.
Long Identifier,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,VerifySignature,The length of the parameter x509AsymmetricSignatureProvider is 31.
Long Identifier,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,,The length of the parameter _jsonWebSecurityTokenRequirement is 32.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S,DictionaryExtension,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\DictionaryExtension.cs,Decode,The length of the statement  "            self.Decode(encodedDictionary' '&'' '='' DictionaryExtension.DefaultDecoder' DictionaryExtension.DefaultDecoder' false); " is 120.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S,DictionaryExtension,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\DictionaryExtension.cs,Decode,The length of the statement  "            self.Decode(encodedDictionary' separator' keyValueSplitter' DictionaryExtension.DefaultDecoder' DictionaryExtension.DefaultDecoder' endsWithSeparator); " is 151.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S,DictionaryExtension,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\DictionaryExtension.cs,Decode,The length of the statement  "                    string message = string.Format(System.Globalization.CultureInfo.InvariantCulture' "The request is not properly formatted. The parameter '{0}' is duplicated."' new object[] " is 171.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S,DictionaryExtension,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\DictionaryExtension.cs,Encode,The length of the statement  "            return self.Encode(separator' keyValueSplitter' DictionaryExtension.DefaultEncoder' DictionaryExtension.DefaultEncoder' endsWithSeparator); " is 139.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S,DictionaryExtension,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\DictionaryExtension.cs,DecodeFromJson,The length of the statement  "            System.Collections.Generic.Dictionary<string' object> dictionary = javaScriptSerializer.DeserializeObject(encodedDictionary) as System.Collections.Generic.Dictionary<string' object>; " is 182.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Protocols.OAuth2,OAuth2ErrorResponse,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Protocols\OAuth2\OAuth2ErrorResponse.cs,CreateFromEncodedResponse,The length of the statement  "                throw new System.ArgumentException("Error property is null or empty. This message is not a valid OAuth2 error response."' "responseString"); " is 140.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Protocols.OAuth2,OAuth2MessageFactory,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Protocols\OAuth2\OAuth2MessageFactory.cs,CreateAccessTokenRequestWithAssertion,The length of the statement  "            Microsoft.IdentityModel.Tokens.SecurityTokenHandlerCollection securityTokenHandlerCollection = Microsoft.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(); " is 203.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Protocols.OAuth2,OAuth2MessageFactory,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Protocols\OAuth2\OAuth2MessageFactory.cs,CreateAccessTokenRequestWithAssertion,The length of the statement  "                return OAuth2MessageFactory.CreateAccessTokenRequestWithAssertion((JsonWebSecurityToken)token' securityTokenHandlers' resource); " is 128.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Protocols.OAuth2,OAuth2MessageFactory,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Protocols\OAuth2\OAuth2MessageFactory.cs,CreateAccessTokenRequestWithAssertion,The length of the statement  "                return OAuth2MessageFactory.CreateAccessTokenRequestWithAssertion((System.IdentityModel.Tokens.GenericXmlSecurityToken)token' resource); " is 136.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Protocols.OAuth2,OAuth2MessageFactory,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Protocols\OAuth2\OAuth2MessageFactory.cs,CreateAccessTokenRequestWithAssertion,The length of the statement  "            if (token is System.IdentityModel.Tokens.SamlSecurityToken || token is Microsoft.IdentityModel.Tokens.Saml2.Saml2SecurityToken) " is 127.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Protocols.OAuth2,OAuth2MessageFactory,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Protocols\OAuth2\OAuth2MessageFactory.cs,CreateAccessTokenRequestWithAssertion,The length of the statement  "                return OAuth2MessageFactory.CreateAccessTokenRequestWithAssertionForSamlSecurityTokens(token' securityTokenHandlers' resource); " is 127.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Protocols.OAuth2,OAuth2MessageFactory,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Protocols\OAuth2\OAuth2MessageFactory.cs,CreateAccessTokenRequestWithAssertion,The length of the statement  "            JsonWebSecurityTokenHandler jsonWebSecurityTokenHandler = securityTokenHandlers[typeof(JsonWebSecurityToken)] as JsonWebSecurityTokenHandler; " is 141.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Protocols.OAuth2,OAuth2MessageFactory,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Protocols\OAuth2\OAuth2MessageFactory.cs,CreateAccessTokenRequestWithAssertion,The length of the statement  "                throw new System.ArgumentException("The input security token handlers collection does not contain a handler for JWT tokens."' "securityTokenHandlers"); " is 151.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Protocols.OAuth2,OAuth2MessageFactory,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Protocols\OAuth2\OAuth2MessageFactory.cs,GetTokenType,The length of the statement  "                if (xmlReader.IsStartElement("BinarySecurityToken"' "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd")) " is 137.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Protocols.OAuth2,OAuth2WebRequest,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Protocols\OAuth2\OAuth2WebRequest.cs,GetResponse,The length of the statement  "            System.IO.StreamWriter streamWriter = new System.IO.StreamWriter(this._innerRequest.GetRequestStream()' System.Text.Encoding.ASCII); " is 132.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,AudienceValidator,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\AudienceValidator.cs,ValidateAudiences,The length of the statement  "                        if (System.Uri.Compare(current2' current' System.UriComponents.AbsoluteUri' System.UriFormat.Unescaped' System.StringComparison.OrdinalIgnoreCase) == 0) " is 152.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,AudienceValidator,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\AudienceValidator.cs,ValidateAudiences,The length of the statement  "                        if (!current2.OriginalString.EndsWith("/") && System.Uri.TryCreate(current2.OriginalString + "/"' System.UriKind.RelativeOrAbsolute' out uri) && System.Uri.Compare(uri' current' System.UriComponents.AbsoluteUri' System.UriFormat.Unescaped' System.StringComparison.OrdinalIgnoreCase) == 0) " is 288.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityToken,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityToken.cs,WriteSourceData,The length of the statement  "                throw new System.InvalidOperationException("This token's raw data cannot be re-emitted. The token was not deserialized in the first place."); " is 141.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityToken,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityToken.cs,CreatePayloadClaims,The length of the statement  "            System.Collections.Generic.Dictionary<string' string> dictionary = new System.Collections.Generic.Dictionary<string' string>(System.StringComparer.Ordinal); " is 156.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityToken,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityToken.cs,CreateHeaderClaims,The length of the statement  "            System.Collections.Generic.Dictionary<string' string> dictionary = new System.Collections.Generic.Dictionary<string' string>(System.StringComparer.Ordinal); " is 156.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityToken,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityToken.cs,CreateHeaderClaims,The length of the statement  "                if (System.StringComparer.Ordinal.Compare(this.SigningCredentials.SignatureAlgorithm' "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256") == 0) " is 144.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityToken,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityToken.cs,CreateHeaderClaims,The length of the statement  "                    Microsoft.IdentityModel.SecurityTokenService.X509SigningCredentials x509SigningCredentials = this.SigningCredentials as Microsoft.IdentityModel.SecurityTokenService.X509SigningCredentials; " is 188.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityToken,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityToken.cs,CreateHeaderClaims,The length of the statement  "                else if (System.StringComparer.Ordinal.Compare(this.SigningCredentials.SignatureAlgorithm' "http://www.w3.org/2001/04/xmldsig-more#hmac-sha256") == 0) " is 150.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityToken,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityToken.cs,CreateHeaderClaims,The length of the statement  "                System.IdentityModel.Tokens.X509SecurityToken x509SecurityToken = this.IssuerToken as System.IdentityModel.Tokens.X509SecurityToken; " is 132.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,CreateToken,The length of the statement  "            return new JsonWebSecurityToken(tokenDescriptor.TokenIssuerName' this.GetAppliesTo(tokenDescriptor)' dateTime' validTo' list' tokenDescriptor.SigningCredentials); " is 162.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,GetSigningKeyIdentifier,The length of the statement  "                throw new System.IdentityModel.Tokens.SecurityTokenException("Invalid JWT token. No signature algorithm specified in token header."); " is 133.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,GetSigningKeyIdentifier,The length of the statement  "                    throw new System.IdentityModel.Tokens.SecurityTokenException("Invalid JWT token. No certificate thumbprint specified in token header."); " is 136.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,GetSigningKeyIdentifier,The length of the statement  "                securityKeyIdentifierClause = new System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause(Base64UrlEncoder.DecodeBytes(arg)); " is 131.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,GetSigningKeyIdentifier,The length of the statement  "                    throw new System.IdentityModel.Tokens.SecurityTokenException("Invalid JWT token. Didn't find a supported signature algorithm in token header."); " is 144.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,GetSigningKeyIdentifier,The length of the statement  "            return new System.IdentityModel.Tokens.SecurityKeyIdentifier(new System.IdentityModel.Tokens.SecurityKeyIdentifierClause[] " is 122.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,IsJsonWebSecurityToken,The length of the statement  "            return reader.IsStartElement("BinarySecurityToken"' "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd") && reader.GetAttribute("ValueType"' null) == "http://oauth.net/grant_type/jwt/1.0/bearer"; " is 227.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,GetJsonTokenString,The length of the statement  "                wsuId = xmlDictionaryReader.GetAttribute("Id"' "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"); " is 133.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,GetJsonTokenString,The length of the statement  "                if (attribute != null && !(attribute == "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary")) " is 138.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,GetJsonTokenString,The length of the statement  "                    throw new System.Xml.XmlException(string.Format(System.Globalization.CultureInfo.InvariantCulture' "Unsupported encoding type: {0}"' new object[] " is 145.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,ReadTokenCore,The length of the statement  "            System.Collections.Generic.Dictionary<string' string> dictionary = new System.Collections.Generic.Dictionary<string' string>(System.StringComparer.Ordinal); " is 156.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,ReadTokenCore,The length of the statement  "            System.Collections.Generic.Dictionary<string' string> dictionary2 = new System.Collections.Generic.Dictionary<string' string>(System.StringComparer.Ordinal); " is 157.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,ReadTokenCore,The length of the statement  "                System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier = this.GetSigningKeyIdentifier(dictionary' dictionary2); " is 127.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,ReadTokenCore,The length of the statement  "                issuerToken = this.VerifySignature(string.Format(System.Globalization.CultureInfo.InvariantCulture' "{0}.{1}"' new object[] " is 123.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,ReadTokenCore,The length of the statement  "                throw new System.IdentityModel.Tokens.SecurityTokenValidationException("The token being parsed does not have an issuer."); " is 122.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,ReadTokenCore,The length of the statement  "                throw new System.IdentityModel.Tokens.SecurityTokenValidationException("The token being parsed does not have an audience."); " is 124.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,ReadTokenCore,The length of the statement  "                throw new System.IdentityModel.Tokens.SecurityTokenValidationException("The token being parsed does not have an 'not before' claim."); " is 134.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,ReadTokenCore,The length of the statement  "                throw new System.IdentityModel.Tokens.SecurityTokenValidationException("The token being parsed does not have an 'expires at' claim."); " is 134.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,ReadTokenCore,The length of the statement  "            JsonWebSecurityToken jsonWebSecurityToken = new JsonWebSecurityToken(text5' text6' dateTimeFromSeconds' dateTimeFromSeconds2' this.CreateClaims(dictionary2)' issuerToken' actorToken); " is 183.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,ValidateAudience,The length of the statement  "            if (base.Configuration.AudienceRestriction.AudienceMode == System.IdentityModel.Selectors.AudienceUriMode.Always || base.Configuration.AudienceRestriction.AudienceMode == System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly) " is 232.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,ValidateAudience,The length of the statement  "                    throw new Microsoft.IdentityModel.Tokens.AudienceUriValidationFailedException("Audience URI validation failed. Token audience must be specified."); " is 147.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,ValidateTokenCore,The length of the statement  "            System.IdentityModel.Tokens.X509SecurityToken x509SecurityToken = jsonWebSecurityToken.IssuerToken as System.IdentityModel.Tokens.X509SecurityToken; " is 148.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,VerifySignature,The length of the statement  "                System.IdentityModel.Tokens.X509SecurityToken x509SecurityToken = signingToken as System.IdentityModel.Tokens.X509SecurityToken; " is 128.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,VerifySignature,The length of the statement  "                    throw new System.IdentityModel.Tokens.SecurityTokenException("Unsupported issuer token type for asymmetric signature."); " is 120.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,VerifySignature,The length of the statement  "                System.Security.Cryptography.RSACryptoServiceProvider rSACryptoServiceProvider = x509SecurityToken.Certificate.PublicKey.Key as System.Security.Cryptography.RSACryptoServiceProvider; " is 182.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,VerifySignature,The length of the statement  "                using (X509AsymmetricSignatureProvider x509AsymmetricSignatureProvider = new X509AsymmetricSignatureProvider(rSACryptoServiceProvider)) " is 135.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,VerifySignature,The length of the statement  "                    flag = x509AsymmetricSignatureProvider.Verify(Base64UrlEncoder.TextEncoding.GetBytes(signingInput)' Base64UrlEncoder.DecodeBytes(signature)); " is 141.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,VerifySignature,The length of the statement  "                using (System.Collections.Generic.IEnumerator<System.IdentityModel.Tokens.SecurityKey> enumerator = signingToken.SecurityKeys.GetEnumerator()) " is 142.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,VerifySignature,The length of the statement  "                        System.IdentityModel.Tokens.SymmetricSecurityKey symmetricSecurityKey = current as System.IdentityModel.Tokens.SymmetricSecurityKey; " is 132.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,WriteToken,The length of the statement  "            writer.WriteStartElement("wsse"' "BinarySecurityToken"' "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"); " is 141.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,WriteToken,The length of the statement  "                writer.WriteAttributeString("wsu"' "Id"' "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"' token.Id); " is 137.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,WriteToken,The length of the statement  "            writer.WriteAttributeString("EncodingType"' null' "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"); " is 148.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,IsReservedClaimType,The length of the statement  "            return System.StringComparer.OrdinalIgnoreCase.Equals(claimType' "aud") || System.StringComparer.OrdinalIgnoreCase.Equals(claimType' "iss") || System.StringComparer.OrdinalIgnoreCase.Equals(claimType' "nbf") || System.StringComparer.OrdinalIgnoreCase.Equals(claimType' "exp"); " is 276.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,SignatureProvider,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\SignatureProvider.cs,Create,The length of the statement  "            if (System.StringComparer.Ordinal.Compare(signingCredentials.DigestAlgorithm' "http://www.w3.org/2001/04/xmlenc#sha256") != 0) " is 126.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,SignatureProvider,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\SignatureProvider.cs,Create,The length of the statement  "            System.IdentityModel.Tokens.X509AsymmetricSecurityKey x509AsymmetricSecurityKey = signingCredentials.SigningKey as System.IdentityModel.Tokens.X509AsymmetricSecurityKey; " is 169.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,SignatureProvider,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\SignatureProvider.cs,Create,The length of the statement  "            System.IdentityModel.Tokens.SymmetricSecurityKey symmetricSecurityKey = signingCredentials.SigningKey as System.IdentityModel.Tokens.SymmetricSecurityKey; " is 154.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,SignatureProvider,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\SignatureProvider.cs,Create,The length of the statement  "            throw new System.ArgumentException("signingCredentials.SigningKey must be either X509AsymmetricSecurityKey or SymmetricSecurityKey"); " is 133.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,SimpleSymmetricKeySecurityToken,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\SimpleSymmetricKeySecurityToken.cs,CreateSymmetricSecurityKeys,The length of the statement  "            return new System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>(new System.Collections.Generic.List<System.IdentityModel.Tokens.SecurityKey> " is 178.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,SimpleSymmetricKeySecurityToken,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\SimpleSymmetricKeySecurityToken.cs,MatchesKeyIdentifierClause,The length of the statement  "            return keyIdentifierClause is SymmetricIssuerKeyIdentifierClause || base.MatchesKeyIdentifierClause(keyIdentifierClause); " is 121.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,Utility,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\Utility.cs,VerifyNonNullOrEmptyStringArgument,The length of the statement  "                throw new System.ArgumentException(string.Format(System.Globalization.CultureInfo.InvariantCulture' "The parameter '{0}' cannot be a null or empty string"' new object[] " is 168.
Long Statement,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,Utility,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\Utility.cs,GetFipsAlgorithmPolicyKeyFromRegistry,The length of the statement  "            using (Microsoft.Win32.RegistryKey registryKey = Microsoft.Win32.Registry.LocalMachine.OpenSubKey("System\\CurrentControlSet\\Control\\Lsa"' false)) " is 148.
Magic Number,SharePointPnP.IdentityModel.Extensions.S2S,DictionaryExtension,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\DictionaryExtension.cs,Decode,The following statement contains a magic number: (array2.Length == 1 || array2.Length > 2) && !string.IsNullOrEmpty(array2[0])
Magic Number,SharePointPnP.IdentityModel.Extensions.S2S,DictionaryExtension,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\DictionaryExtension.cs,Decode,The following statement contains a magic number: array2.Length != 2
Magic Number,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,Base64UrlEncoder,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\Base64UrlEncoder.cs,DecodeBytes,The following statement contains a magic number: switch (text.Length % 4)              {                  case 0:                      goto IL_7D;                  case 2:                      text += Base64UrlEncoder.DoubleBase64PadCharacter;                      goto IL_7D;                  case 3:                      text += Base64UrlEncoder.Base64PadCharacter;                      goto IL_7D;              }
Magic Number,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,Base64UrlEncoder,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\Base64UrlEncoder.cs,DecodeBytes,The following statement contains a magic number: switch (text.Length % 4)              {                  case 0:                      goto IL_7D;                  case 2:                      text += Base64UrlEncoder.DoubleBase64PadCharacter;                      goto IL_7D;                  case 3:                      text += Base64UrlEncoder.Base64PadCharacter;                      goto IL_7D;              }
Magic Number,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,Base64UrlEncoder,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\Base64UrlEncoder.cs,DecodeBytes,The following statement contains a magic number: switch (text.Length % 4)              {                  case 0:                      goto IL_7D;                  case 2:                      text += Base64UrlEncoder.DoubleBase64PadCharacter;                      goto IL_7D;                  case 3:                      text += Base64UrlEncoder.Base64PadCharacter;                      goto IL_7D;              }
Magic Number,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,JsonWebSecurityTokenHandler,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\JsonWebSecurityTokenHandler.cs,ReadTokenCore,The following statement contains a magic number: string text3 = array[2];
Magic Number,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,RSACryptoServiceProviderProxy,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\RSACryptoServiceProviderProxy.cs,RSACryptoServiceProviderProxy,The following statement contains a magic number: cspParameters.ProviderType = 24;
Magic Number,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,RSACryptoServiceProviderProxy,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\RSACryptoServiceProviderProxy.cs,RSACryptoServiceProviderProxy,The following statement contains a magic number: rsa.CspKeyContainerInfo.ProviderType != 24
Magic Number,SharePointPnP.IdentityModel.Extensions.S2S.Web,OAuth2ProtectedResourceUtility,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Web\OAuth2ProtectedResourceUtility.cs,ReadToken,The following statement contains a magic number: array.Length == 2 && array[0].Equals("Bearer"' System.StringComparison.OrdinalIgnoreCase)
Missing Default,SharePointPnP.IdentityModel.Extensions.S2S.Protocols.OAuth2,OAuth2ErrorCode,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Protocols\OAuth2\OAuth2ErrorCode.cs,OAuth2ErrorCode,The following switch statement is missing a default case: switch (errorCode)              {                  case "invalid_client":                  case "invalid_grant":                  case "invalid_request":                  case "invalid_scope":                  case "temporarily_unavailable":                  case "unauthorized_client":                  case "unsupported_grant_type":                      this._value = errorCode;                      return;              }
Missing Default,SharePointPnP.IdentityModel.Extensions.S2S.Tokens,Base64UrlEncoder,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\SharePointPnP.IdentityModel\Extensions\S2S\Tokens\Base64UrlEncoder.cs,DecodeBytes,The following switch statement is missing a default case: switch (text.Length % 4)              {                  case 0:                      goto IL_7D;                  case 2:                      text += Base64UrlEncoder.DoubleBase64PadCharacter;                      goto IL_7D;                  case 3:                      text += Base64UrlEncoder.Base64PadCharacter;                      goto IL_7D;              }
