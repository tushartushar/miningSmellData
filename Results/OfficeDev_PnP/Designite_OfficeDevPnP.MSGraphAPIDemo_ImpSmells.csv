Implementation smell,Namespace,Class,File,Method,Description
Long Method,OfficeDevPnP.MSGraphAPIDemo.Controllers,MailCalendarContactsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\MailCalendarContactsController.cs,PlayWithCalendars,The method has 136 lines of code.
Complex Method,OfficeDevPnP.MSGraphAPIDemo.Controllers,FilesController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\FilesController.cs,PlayWithFiles,Cyclomatic complexity of the method is 8
Long Parameter List,OfficeDevPnP.MSGraphAPIDemo.Components,CalendarHelper,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Components\CalendarHelper.cs,ListSeriesInstances,The method has 5 parameters. Parameters: calendarId' masterSeriesId' startDate' endDate' startIndex
Long Parameter List,OfficeDevPnP.MSGraphAPIDemo.Components,FilesHelper,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Components\FilesHelper.cs,UploadFile,The method has 5 parameters. Parameters: driveId' parentFolderId' file' content' contentType
Long Parameter List,OfficeDevPnP.MSGraphAPIDemo.Components,FilesHelper,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Components\FilesHelper.cs,UploadFileDirect,The method has 5 parameters. Parameters: driveId' parentFolderId' file' content' contentType
Long Parameter List,OfficeDevPnP.MSGraphAPIDemo.Components,MicrosoftGraphHelper,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Components\MicrosoftGraphHelper.cs,MakeHttpRequest,The method has 6 parameters. Parameters: httpMethod' requestUrl' accept' content' contentType' resultPredicate
Long Statement,OfficeDevPnP.MSGraphAPIDemo.Controllers,FilesController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\FilesController.cs,PlayWithFiles,The length of the statement  "                var newFolderChildFolderChildren = FilesHelper.ListFolderChildren(drive.Id' newFolderChildren.FirstOrDefault(f => f.Folder != null).Id); " is 136.
Long Statement,OfficeDevPnP.MSGraphAPIDemo.Controllers,MailCalendarContactsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\MailCalendarContactsController.cs,PlayWithMail,The length of the statement  "            var messages = MailHelper.ListMessages(folders.FirstOrDefault(f => f.Name == "Posta in arrivo" || f.Name == "Inbox").Id); " is 121.
Empty Catch Block,OfficeDevPnP.MSGraphAPIDemo.Controllers,FilesController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\FilesController.cs,PlayWithFiles,The method has an empty catch block.
Empty Catch Block,OfficeDevPnP.MSGraphAPIDemo.Controllers,FilesController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\FilesController.cs,PlayWithFiles,The method has an empty catch block.
Empty Catch Block,OfficeDevPnP.MSGraphAPIDemo.Controllers,FilesController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\FilesController.cs,PlayWithFiles,The method has an empty catch block.
Empty Catch Block,OfficeDevPnP.MSGraphAPIDemo.Controllers,FilesController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\FilesController.cs,UploadSampleFile,The method has an empty catch block.
Empty Catch Block,OfficeDevPnP.MSGraphAPIDemo.Controllers,FilesController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\FilesController.cs,UpdateSampleFile,The method has an empty catch block.
Empty Catch Block,OfficeDevPnP.MSGraphAPIDemo.Controllers,MailCalendarContactsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\MailCalendarContactsController.cs,PlayWithContacts,The method has an empty catch block.
Empty Catch Block,OfficeDevPnP.MSGraphAPIDemo.Controllers,UsersGroupsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\UsersGroupsController.cs,PlayWithUsers,The method has an empty catch block.
Empty Catch Block,OfficeDevPnP.MSGraphAPIDemo.Controllers,UsersGroupsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\UsersGroupsController.cs,PlayWithUsers,The method has an empty catch block.
Empty Catch Block,OfficeDevPnP.MSGraphAPIDemo.Controllers,UsersGroupsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\UsersGroupsController.cs,PlayWithUsers,The method has an empty catch block.
Empty Catch Block,OfficeDevPnP.MSGraphAPIDemo.Controllers,UsersGroupsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\UsersGroupsController.cs,PlayWithUnifiedGroups,The method has an empty catch block.
Magic Number,OfficeDevPnP.MSGraphAPIDemo.Components,ContactsHelper,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Components\ContactsHelper.cs,GetContactPhoto,The following statement contains a magic number: try              {                  result = MicrosoftGraphHelper.MakeGetRequestForStream(                      String.Format("{0}me/contacts/{1}/photo/$value"'                          MicrosoftGraphHelper.MicrosoftGraphV1BaseUri' contactId)'                      contentType);              }              catch (ApplicationException ex)              {                  HttpException httpException = ex.InnerException as HttpException;                  if (httpException != null && httpException.GetHttpCode() == 404)                  {                      // If 404 -> The contact does not have a picture                      // Keep NULL value for result                      result = null;                  }              }
Magic Number,OfficeDevPnP.MSGraphAPIDemo.Controllers,MailCalendarContactsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\MailCalendarContactsController.cs,PlayWithMail,The following statement contains a magic number: if (messages != null && messages.Count > 0)              {                  var message = MailHelper.GetMessage(messages[0].Id' true);                    foreach (var attachment in message.Attachments)                  {                      // Download content only for attachments smaller than 100K                      if (attachment.Size < 100 * 1024)                      {                          attachment.EnsureContent();                      }                  }              }
Magic Number,OfficeDevPnP.MSGraphAPIDemo.Controllers,MailCalendarContactsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\MailCalendarContactsController.cs,PlayWithMail,The following statement contains a magic number: if (messages != null && messages.Count > 0)              {                  var message = MailHelper.GetMessage(messages[0].Id' true);                    foreach (var attachment in message.Attachments)                  {                      // Download content only for attachments smaller than 100K                      if (attachment.Size < 100 * 1024)                      {                          attachment.EnsureContent();                      }                  }              }
Magic Number,OfficeDevPnP.MSGraphAPIDemo.Controllers,MailCalendarContactsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\MailCalendarContactsController.cs,PlayWithCalendars,The following statement contains a magic number: var eventsCalendarView = CalendarHelper.ListEvents(calendar.Id' DateTime.Now' DateTime.Now.AddDays(10)' 0);
Magic Number,OfficeDevPnP.MSGraphAPIDemo.Controllers,MailCalendarContactsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\MailCalendarContactsController.cs,PlayWithCalendars,The following statement contains a magic number: var singleEvent = CalendarHelper.CreateEvent(calendars[0].Id'                  new Models.Event                  {                      Attendees = new List<Models.UserInfoContainer>(                          new Models.UserInfoContainer[]                          {                              new Models.UserInfoContainer                              {                                  Recipient = new Models.UserInfo                                  {                                      Name = model.MailSendToDescription'                                      Address = model.MailSendTo'                                  }                              }'                              new Models.UserInfoContainer                              {                                  Recipient = new Models.UserInfo                                  {                                      Address = "someone@company.com"'                                      Name = "Someone Else"'                                  }                              }'                          })'                      Start = new Models.TimeInfo                      {                          DateTime = DateTime.Now.AddDays(2).ToUniversalTime()'                          TimeZone = "UTC"                      }'                      OriginalStartTimeZone = "UTC"'                      End = new Models.TimeInfo                      {                          DateTime = DateTime.Now.AddDays(2).AddHours(1).ToUniversalTime()'                          TimeZone = "UTC"                      }'                      OriginalEndTimeZone = "UTC"'                      Importance = Models.ItemImportance.High'                      Subject = "Introducing the Microsoft Graph API"'                      Body = new Models.ItemBody                      {                          Content = "<html><body><h2>Let's talk about the Microsoft Graph API!</h2></body></html>"'                          Type = Models.BodyType.Html'                      }'                      Location = new Models.EventLocation                      {                          Name = "PiaSys.com Head Quarters"'                      }'                      IsAllDay = false'                      IsOrganizer = true'                      ShowAs = Models.EventStatus.WorkingElsewhere'                      Type = Models.EventType.SingleInstance'                  });
Magic Number,OfficeDevPnP.MSGraphAPIDemo.Controllers,MailCalendarContactsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\MailCalendarContactsController.cs,PlayWithCalendars,The following statement contains a magic number: var singleEvent = CalendarHelper.CreateEvent(calendars[0].Id'                  new Models.Event                  {                      Attendees = new List<Models.UserInfoContainer>(                          new Models.UserInfoContainer[]                          {                              new Models.UserInfoContainer                              {                                  Recipient = new Models.UserInfo                                  {                                      Name = model.MailSendToDescription'                                      Address = model.MailSendTo'                                  }                              }'                              new Models.UserInfoContainer                              {                                  Recipient = new Models.UserInfo                                  {                                      Address = "someone@company.com"'                                      Name = "Someone Else"'                                  }                              }'                          })'                      Start = new Models.TimeInfo                      {                          DateTime = DateTime.Now.AddDays(2).ToUniversalTime()'                          TimeZone = "UTC"                      }'                      OriginalStartTimeZone = "UTC"'                      End = new Models.TimeInfo                      {                          DateTime = DateTime.Now.AddDays(2).AddHours(1).ToUniversalTime()'                          TimeZone = "UTC"                      }'                      OriginalEndTimeZone = "UTC"'                      Importance = Models.ItemImportance.High'                      Subject = "Introducing the Microsoft Graph API"'                      Body = new Models.ItemBody                      {                          Content = "<html><body><h2>Let's talk about the Microsoft Graph API!</h2></body></html>"'                          Type = Models.BodyType.Html'                      }'                      Location = new Models.EventLocation                      {                          Name = "PiaSys.com Head Quarters"'                      }'                      IsAllDay = false'                      IsOrganizer = true'                      ShowAs = Models.EventStatus.WorkingElsewhere'                      Type = Models.EventType.SingleInstance'                  });
Magic Number,OfficeDevPnP.MSGraphAPIDemo.Controllers,MailCalendarContactsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\MailCalendarContactsController.cs,PlayWithCalendars,The following statement contains a magic number: var nextMonday = DateTime.Now.AddDays(((int)DayOfWeek.Monday - (int)DateTime.Now.DayOfWeek + 7) % 7);
Magic Number,OfficeDevPnP.MSGraphAPIDemo.Controllers,MailCalendarContactsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\MailCalendarContactsController.cs,PlayWithCalendars,The following statement contains a magic number: var nextMonday = DateTime.Now.AddDays(((int)DayOfWeek.Monday - (int)DateTime.Now.DayOfWeek + 7) % 7);
Magic Number,OfficeDevPnP.MSGraphAPIDemo.Controllers,MailCalendarContactsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\MailCalendarContactsController.cs,PlayWithCalendars,The following statement contains a magic number: var nextMonday9AM = new DateTime(nextMonday.Year' nextMonday.Month' nextMonday.Day' 9' 0' 0);
Magic Number,OfficeDevPnP.MSGraphAPIDemo.Controllers,MailCalendarContactsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\MailCalendarContactsController.cs,PlayWithCalendars,The following statement contains a magic number: var seriesInstances = CalendarHelper.ListSeriesInstances(                  calendar.Id' eventSeries.Id' DateTime.Now' DateTime.Now.AddMonths(2));
Magic Number,OfficeDevPnP.MSGraphAPIDemo.Controllers,UsersGroupsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\UsersGroupsController.cs,PlayWithUsers,The following statement contains a magic number: var users = UsersGroupsHelper.ListUsers(600);
Magic Number,OfficeDevPnP.MSGraphAPIDemo.Controllers,UsersGroupsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\UsersGroupsController.cs,PlayWithUsers,The following statement contains a magic number: var externalUsers = UsersGroupsHelper.ListExternalUsers(600);
Magic Number,OfficeDevPnP.MSGraphAPIDemo.Controllers,UsersGroupsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\UsersGroupsController.cs,PlayWithUsers,The following statement contains a magic number: var usersWithCustomAttributes = UsersGroupsHelper.ListUsers(                  new String[] { "id"' "userPrincipalName"' "mail"'                      "department"' "country"' "preferredLanguage"'                      "onPremisesImmutableId"' "onPremisesSecurityIdentifier"'                      "onPremisesSyncEnabled"' "userType" }'                  600);
Magic Number,OfficeDevPnP.MSGraphAPIDemo.Controllers,UsersGroupsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\UsersGroupsController.cs,PlayWithUsers,The following statement contains a magic number: try              {                  var usersWorkingInIT = UsersGroupsHelper.ListUsersByDepartment("IT"' 100);                  var oneUser = UsersGroupsHelper.GetUser(model.UserPrincipalName);                    oneUser.City = "Brescia";                  UsersGroupsHelper.UpdateUser(oneUser);              }              catch (Exception)              {                  // Something wrong while getting the thumbnail'                  // We will have to handle it properly ...              }
Magic Number,OfficeDevPnP.MSGraphAPIDemo.Controllers,UsersGroupsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\UsersGroupsController.cs,PlayWithSecurityGroups,The following statement contains a magic number: var groups = UsersGroupsHelper.ListGroups(100);
Magic Number,OfficeDevPnP.MSGraphAPIDemo.Controllers,UsersGroupsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\UsersGroupsController.cs,PlayWithSecurityGroups,The following statement contains a magic number: var securityGroups = UsersGroupsHelper.ListSecurityGroups(100);
Magic Number,OfficeDevPnP.MSGraphAPIDemo.Controllers,UsersGroupsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\UsersGroupsController.cs,PlayWithUnifiedGroups,The following statement contains a magic number: var groups = UsersGroupsHelper.ListUnifiedGroups(100);
Magic Number,OfficeDevPnP.MSGraphAPIDemo.Controllers,UsersGroupsController,C:\repos\OfficeDev_PnP\Samples\MicrosoftGraph.Office365.Generic\OfficeDevPnP.MSGraphAPIDemo\Controllers\UsersGroupsController.cs,PlayWithUnifiedGroups,The following statement contains a magic number: System.Threading.Thread.Sleep(TimeSpan.FromSeconds(30));
