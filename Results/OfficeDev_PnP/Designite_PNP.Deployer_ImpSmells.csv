Implementation smell,Namespace,Class,File,Method,Description
Long Statement,PNP.Deployer,FilesUtility,C:\research\architectureSmells\repos\OfficeDev_PnP\Samples\Provisioning.PnPDeployer.Console\PNP.Deployer\Classes\Helpers\FilesUtility.cs,CopyDirectoryRecursive,The length of the statement  "            bool ignoreFolder = (ignoredFolders != null && ignoredFolders.FirstOrDefault(x => source.FullName.ToLower() == x.ToLower()) != null); " is 133.
Long Statement,PNP.Deployer,DeployerOptions,C:\research\architectureSmells\repos\OfficeDev_PnP\Samples\Provisioning.PnPDeployer.Console\PNP.Deployer\Classes\Deployer\DeployerOptions.cs,GetUsage,The length of the statement  "            help.AddPreOptionsLine(string.Format("  PNP.Deployer (v.{0}) - By Simon-Pierre Plante"' Assembly.GetExecutingAssembly().GetName().Version.ToString())); " is 151.
Long Statement,PNP.Deployer,Template,C:\research\architectureSmells\repos\OfficeDev_PnP\Samples\Provisioning.PnPDeployer.Console\PNP.Deployer\Classes\Sequences\Template.cs,Apply,The length of the statement  "                    throw new FileNotFoundException(string.Format(ERROR_TEMPLATE_NOT_FOUND' System.IO.Path.Combine(templateProvider.Connector.Parameters[PARAMETER_CONNECTION_STRING].ToString()' this.Path))); " is 187.
Long Statement,PNP.Deployer,Tokenizer,C:\research\architectureSmells\repos\OfficeDev_PnP\Samples\Provisioning.PnPDeployer.Console\PNP.Deployer\Classes\Tokenizer\Tokenizer.cs,LoadTokensFromAppSettings,The length of the statement  "                    tokens.Add(new Token() { Key = key.Substring(DEFAULT_TOKENS_PREFIX.Length)' Value = ConfigurationManager.AppSettings[key] }); " is 125.
Long Statement,PNP.Deployer,Tokenizer,C:\research\architectureSmells\repos\OfficeDev_PnP\Samples\Provisioning.PnPDeployer.Console\PNP.Deployer\Classes\Tokenizer\Tokenizer.cs,ValidateTokensFile,The length of the statement  "            XmlUtility.ValidateSchema(tokensFilePath' Path.Combine(AppDomain.CurrentDomain.BaseDirectory' TOKENS_SCHEMA_FILE_NAME)); " is 120.
Long Statement,PNP.Deployer,Tokenizer,C:\research\architectureSmells\repos\OfficeDev_PnP\Samples\Provisioning.PnPDeployer.Console\PNP.Deployer\Classes\Tokenizer\Tokenizer.cs,TokenizeFolder,The length of the statement  "                logger.Info("Tokenizing folder '{0}' to destination '{0}{1}'"' Path.GetFileName(folderPath)' TOKENIZED_FOLDER_EXTENSION); " is 121.
Long Statement,PNP.Deployer,Tokenizer,C:\research\architectureSmells\repos\OfficeDev_PnP\Samples\Provisioning.PnPDeployer.Console\PNP.Deployer\Classes\Tokenizer\Tokenizer.cs,TokenizeFolder,The length of the statement  "                ignoredFolders = ConfigurationManager.AppSettings[APP_SETTING_IGNORED_FOLDERS].Split('|').Where(x => !string.IsNullOrEmpty(x)).Select(x => Path.Combine(folderPath.ToLower()' x.ToLower())).ToList<string>(); " is 205.
Long Statement,PNP.Deployer,Tokenizer,C:\research\architectureSmells\repos\OfficeDev_PnP\Samples\Provisioning.PnPDeployer.Console\PNP.Deployer\Classes\Tokenizer\Tokenizer.cs,TokenizeFolder,The length of the statement  "                logger.Info("Folder '{0}' tokenized with success to destination '{0}{1}'"' Path.GetFileName(folderPath)' TOKENIZED_FOLDER_EXTENSION); " is 133.
Long Statement,PNP.Deployer,Deployer,C:\research\architectureSmells\repos\OfficeDev_PnP\Samples\Provisioning.PnPDeployer.Console\PNP.Deployer\Classes\Deployer\Deployer.cs,ValidateSequencesFile,The length of the statement  "            XmlUtility.ValidateSchema(sequencesFilePath' Path.Combine(AppDomain.CurrentDomain.BaseDirectory' SEQUENCES_SCHEMA_FILE_NAME)); " is 126.
Long Statement,PNP.Deployer,Deployer,C:\research\architectureSmells\repos\OfficeDev_PnP\Samples\Provisioning.PnPDeployer.Console\PNP.Deployer\Classes\Deployer\Deployer.cs,LoadSequencesConfiguration,The length of the statement  "            string sequencesFilePath = Path.Combine(this.WorkingDirectory' ConfigurationManager.AppSettings[APP_SETTING_SEQUENCES_FILE]); " is 125.
Long Statement,PNP.Deployer,Program,C:\research\architectureSmells\repos\OfficeDev_PnP\Samples\Provisioning.PnPDeployer.Console\PNP.Deployer\Program.cs,Main,The length of the statement  "                    Tokenizer tokenizer = new Tokenizer(Path.Combine(options.WorkingDirectory' ConfigurationManager.AppSettings[APP_SETTING_TOKENS_FILE])); " is 135.
Magic Number,PNP.Deployer,DeployerOptions,C:\research\architectureSmells\repos\OfficeDev_PnP\Samples\Provisioning.PnPDeployer.Console\PNP.Deployer\Classes\Deployer\DeployerOptions.cs,GetUsage,The following statement contains a magic number: var errors = help.RenderParsingErrorsText(this' 4);
