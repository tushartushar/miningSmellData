Implementation smell,Namespace,Class,File,Method,Description
Long Statement,AspNetCore.Mvc.StarterWeb.Controllers,SignoutController,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\AspNetCore.Mvc.StarterWeb\Controllers\SignoutController.cs,Index,The length of the statement  "            // Should load session asynchronously with a wrapper class that ensures await HttpContext.Session.LoadAsync(); is called. " is 121.
Long Statement,AspNetCore.Mvc.StarterWeb.Controllers,SignoutController,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\AspNetCore.Mvc.StarterWeb\Controllers\SignoutController.cs,Index,The length of the statement  "            // If this is not called first the session will load synchronously see https://docs.microsoft.com/en-us/aspnet/core/fundamentals/app-state Loading Session Asynchronously section              " is 177.
Magic Number,AspNetCore.Mvc.StarterWeb,Program,C:\research\architectureSmells\repos\OfficeDev_PnP\Solutions\AspNetCore.Authentication\src\AspNetCore.Mvc.StarterWeb\Program.cs,BuildWebHost,The following statement contains a magic number: IWebHostBuilder webHostBuilder = WebHost.CreateDefaultBuilder(args)                  .UseKestrel(options =>                  {                      options.Listen(IPAddress.Any' 5000' listenOptions =>                      {                          listenOptions.UseHttps(@"..\..\certificates\localhost_ssl.pfx"' "pass@word1");                          listenOptions.NoDelay = true;                      });                    })                  .UseStartup<Startup>();
