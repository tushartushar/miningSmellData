Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Contoso.Provisioning.OneDriveWeb,SharePointContext,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\SharePointContext.cs,SharePointContext,The method has 5 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber
Long Parameter List,Contoso.Provisioning.OneDriveWeb,SharePointContextProvider,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,Contoso.Provisioning.OneDriveWeb,SharePointAcsContext,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\SharePointContext.cs,SharePointAcsContext,The method has 7 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' contextToken' contextTokenObj
Long Parameter List,Contoso.Provisioning.OneDriveWeb,SharePointAcsContextProvider,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,Contoso.Provisioning.OneDriveWeb,SharePointHighTrustContext,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\SharePointContext.cs,SharePointHighTrustContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' logonUserIdentity
Long Parameter List,Contoso.Provisioning.OneDriveWeb,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,Contoso.Provisioning.OneDriveWeb,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,GetAccessToken,The method has 5 parameters. Parameters: authorizationCode' targetPrincipalName' targetHost' targetRealm' redirectUri
Long Parameter List,Contoso.Provisioning.OneDriveWeb,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,GetClientContextWithAuthorizationCode,The method has 5 parameters. Parameters: targetUrl' targetPrincipalName' authorizationCode' targetRealm' redirectUri
Long Parameter List,Contoso.Provisioning.OneDriveWeb,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,IssueToken,The method has 9 parameters. Parameters: sourceApplication' issuerApplication' sourceRealm' targetApplication' targetRealm' targetApplicationHostName' trustedForDelegation' claims' appOnly
Long Parameter List,Contoso.Provisioning.OneDriveWeb,SharePointContextToken,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,SharePointContextToken,The method has 5 parameters. Parameters: issuer' audience' validFrom' validTo' claims
Long Parameter List,Contoso.Provisioning.OneDriveWeb,SharePointContextToken,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,SharePointContextToken,The method has 7 parameters. Parameters: issuer' audience' validFrom' validTo' claims' issuerToken' actorToken
Long Parameter List,Contoso.Provisioning.OneDriveWeb,SharePointContextToken,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,SharePointContextToken,The method has 6 parameters. Parameters: issuer' audience' validFrom' validTo' claims' signingCredentials
Long Identifier,Contoso.Provisioning.OneDriveWeb,SharePointContext,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\SharePointContext.cs,GetDatabaseConnectionString,The length of the parameter LocalDBInstanceForDebuggingKey is 30.
Long Identifier,Contoso.Provisioning.OneDriveWeb,SharePointContextProvider,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\SharePointContext.cs,CheckRedirectionStatus,The length of the parameter SPHasRedirectedToSharePointKey is 30.
Long Identifier,Contoso.Provisioning.OneDriveWeb,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,,The length of the parameter AcsMetadataEndPointRelativeUrl is 30.
Long Identifier,Contoso.Provisioning.OneDriveWeb,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,,The length of the parameter TrustedForImpersonationClaimType is 32.
Long Identifier,Contoso.Provisioning.OneDriveWeb,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,,The length of the parameter ClientSigningCertificatePassword is 32.
Long Identifier,Contoso.Provisioning.OneDriveWeb,AcsMetadataParser,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,GetMetadataDocument,The length of the parameter acsMetadataEndpointUrlWithRealm is 31.
Long Statement,Contoso.Provisioning.OneDriveWeb,SharePointContextProvider,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\SharePointContext.cs,CheckRedirectionStatus,The length of the statement  "            // Removes the values that are included in {StandardTokens}' as {StandardTokens} will be inserted at the beginning of the query string. " is 135.
Long Statement,Contoso.Provisioning.OneDriveWeb,SharePointContextProvider,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\SharePointContext.cs,CheckRedirectionStatus,The length of the statement  "            string redirectUrlString = TokenHelper.GetAppContextTokenRequestUrl(spHostUrl.AbsoluteUri' Uri.EscapeDataString(returnUrlString)); " is 130.
Long Statement,Contoso.Provisioning.OneDriveWeb,SharePointAcsContextProvider,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\SharePointContext.cs,CreateSharePointContext,The length of the statement  "            return new SharePointAcsContext(spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' contextTokenString' contextToken); " is 132.
Long Statement,Contoso.Provisioning.OneDriveWeb,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\SharePointContext.cs,CreateSharePointContext,The length of the statement  "            if (logonUserIdentity == null || !logonUserIdentity.IsAuthenticated || logonUserIdentity.IsGuest || logonUserIdentity.User == null) " is 131.
Long Statement,Contoso.Provisioning.OneDriveWeb,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\SharePointContext.cs,CreateSharePointContext,The length of the statement  "            return new SharePointHighTrustContext(spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' logonUserIdentity); " is 123.
Long Statement,Contoso.Provisioning.OneDriveWeb,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,GetAccessToken,The length of the statement  "            OAuth2AccessTokenRequest oauth2Request = OAuth2MessageFactory.CreateAccessTokenRequestWithRefreshToken(clientId' ClientSecret' refreshToken' resource); " is 151.
Long Statement,Contoso.Provisioning.OneDriveWeb,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,GetAppOnlyAccessToken,The length of the statement  "            OAuth2AccessTokenRequest oauth2Request = OAuth2MessageFactory.CreateAccessTokenRequestWithClientCredentials(clientId' ClientSecret' resource); " is 142.
Long Statement,Contoso.Provisioning.OneDriveWeb,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,CreateAppEventClientContext,The length of the statement  "            Uri sharepointUrl = useAppWeb ? properties.AppEventProperties.AppWebFullUrl : properties.AppEventProperties.HostWebFullUrl; " is 123.
Long Statement,Contoso.Provisioning.OneDriveWeb,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,GetClientContextWithAuthorizationCode,The length of the statement  "            return GetClientContextWithAuthorizationCode(targetUrl' SharePointPrincipal' authorizationCode' GetRealmFromTargetUrl(new Uri(targetUrl))' redirectUri); " is 152.
Long Statement,Contoso.Provisioning.OneDriveWeb,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,CreateAcsClientContextForUrl,The length of the statement  "            SharePointContextToken contextToken = ReadAndValidateContextToken(contextTokenString' OperationContext.Current.IncomingMessageHeaders.To.Host); " is 143.
Long Statement,Contoso.Provisioning.OneDriveWeb,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,IssueToken,The length of the statement  "            string issuer = string.IsNullOrEmpty(sourceRealm) ? issuerApplication : string.Format("{0}@{1}"' issuerApplication' sourceRealm); " is 129.
Long Statement,Contoso.Provisioning.OneDriveWeb,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,IssueToken,The length of the statement  "            string nameid = string.IsNullOrEmpty(sourceRealm) ? sourceApplication : string.Format("{0}@{1}"' sourceApplication' sourceRealm); " is 129.
Long Statement,Contoso.Provisioning.OneDriveWeb,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,IssueToken,The length of the statement  "            List<JsonWebTokenClaim> outerClaims = null == claims ? new List<JsonWebTokenClaim>() : new List<JsonWebTokenClaim>(claims); " is 123.
Long Statement,Contoso.Provisioning.OneDriveWeb,SharePointContextToken,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,Create,The length of the statement  "            return new SharePointContextToken(contextToken.Issuer' contextToken.Audience' contextToken.ValidFrom' contextToken.ValidTo' contextToken.Claims); " is 145.
Long Statement,Provisioning.OneDriveWeb.Pages,OneDriveCustomizer,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\Pages\OneDriveCustomizer.aspx.cs,Page_Load,The length of the statement  "                string accessToken = TokenHelper.GetAppOnlyAccessToken(TokenHelper.SharePointPrincipal' siteUri.Authority' realm).AccessToken; " is 126.
Long Statement,Provisioning.OneDriveWeb.Pages,OneDriveCustomizer,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\Pages\OneDriveCustomizer.aspx.cs,Page_Load,The length of the statement  "                        var colorFile = rootWeb.UploadThemeFile(HostingEnvironment.MapPath(string.Format("~/{0}"' "Resources/Themes/SPC/SPCTheme.spcolor"))); " is 133.
Long Statement,Provisioning.OneDriveWeb.Pages,OneDriveCustomizer,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\Pages\OneDriveCustomizer.aspx.cs,Page_Load,The length of the statement  "                        var backgroundFile = rootWeb.UploadThemeFile(HostingEnvironment.MapPath(string.Format("~/{0}"' "Resources/Themes/SPC/SPCbg.jpg"))); " is 131.
Long Statement,Provisioning.OneDriveWeb.Pages,OneDriveCustomizer,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\Pages\OneDriveCustomizer.aspx.cs,Page_Load,The length of the statement  "                        rootWeb.CreateComposedLookByUrl("SPC"' colorFile.ServerRelativeUrl' null' backgroundFile.ServerRelativeUrl' string.Empty); " is 122.
Long Statement,Provisioning.OneDriveWeb.Pages,OneDriveCustomizer,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\Pages\OneDriveCustomizer.aspx.cs,Page_Load,The length of the statement  "                        WriteDebugInformationIfNeeded(string.Format("OneDrive for Business site existed at {0}. Custom branding applied."' personalSiteUrl)); " is 133.
Long Statement,Provisioning.OneDriveWeb.Pages,OneDriveCustomizer,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\Pages\OneDriveCustomizer.aspx.cs,Page_Load,The length of the statement  "                        WriteDebugInformationIfNeeded(string.Format("OneDrive for Business site existed at {0} and had right branding."' personalSiteUrl)); " is 131.
Long Statement,Provisioning.OneDriveWeb.Pages,OneDriveCustomizer,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\Pages\OneDriveCustomizer.aspx.cs,BuildJavaScriptUrl,The length of the statement  "            string scenarioUrl = String.Format("{0}://{1}:{2}/Resources"' this.Request.Url.Scheme' this.Request.Url.DnsSafeHost' this.Request.Url.Port); " is 140.
Complex Conditional,Contoso.Provisioning.OneDriveWeb,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\SharePointContext.cs,CreateSharePointContext,The conditional expression  "logonUserIdentity == null || !logonUserIdentity.IsAuthenticated || logonUserIdentity.IsGuest || logonUserIdentity.User == null"  is complex.
Empty Catch Block,Contoso.Provisioning.OneDriveWeb,SharePointAcsContext,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\SharePointContext.cs,RenewAccessTokenIfNeeded,The method has an empty catch block.
Magic Number,Contoso.Provisioning.OneDriveWeb,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,GetRealmFromTargetUrl,The following statement contains a magic number: try              {                  using (request.GetResponse())                  {                  }              }              catch (WebException e)              {                  if (e.Response == null)                  {                      return null;                  }                    string bearerResponseHeader = e.Response.Headers["WWW-Authenticate"];                  if (string.IsNullOrEmpty(bearerResponseHeader))                  {                      return null;                  }                    const string bearer = "Bearer realm=\"";                  int bearerIndex = bearerResponseHeader.IndexOf(bearer' StringComparison.Ordinal);                  if (bearerIndex < 0)                  {                      return null;                  }                    int realmIndex = bearerIndex + bearer.Length;                    if (bearerResponseHeader.Length >= realmIndex + 36)                  {                      string targetRealm = bearerResponseHeader.Substring(realmIndex' 36);                        Guid realmGuid;                        if (Guid.TryParse(targetRealm' out realmGuid))                      {                          return targetRealm;                      }                  }              }
Magic Number,Contoso.Provisioning.OneDriveWeb,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\TokenHelper.cs,GetRealmFromTargetUrl,The following statement contains a magic number: try              {                  using (request.GetResponse())                  {                  }              }              catch (WebException e)              {                  if (e.Response == null)                  {                      return null;                  }                    string bearerResponseHeader = e.Response.Headers["WWW-Authenticate"];                  if (string.IsNullOrEmpty(bearerResponseHeader))                  {                      return null;                  }                    const string bearer = "Bearer realm=\"";                  int bearerIndex = bearerResponseHeader.IndexOf(bearer' StringComparison.Ordinal);                  if (bearerIndex < 0)                  {                      return null;                  }                    int realmIndex = bearerIndex + bearer.Length;                    if (bearerResponseHeader.Length >= realmIndex + 36)                  {                      string targetRealm = bearerResponseHeader.Substring(realmIndex' 36);                        Guid realmGuid;                        if (Guid.TryParse(targetRealm' out realmGuid))                      {                          return targetRealm;                      }                  }              }
Magic Number,Provisioning.OneDriveWeb.Pages,OneDriveCustomizer,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\Pages\OneDriveCustomizer.aspx.cs,Page_Load,The following statement contains a magic number: if (personalSiteUrl != null)              {                  // Site already exists' let's modify the branding by applying a theme... just as well you could upload                  // master page and set that to be shown. Notice that you can also modify this code to change the branding                  // later and updates would be reflected whenever user visits OneDrive host... or any other location where this                  // app part is located. You could place this also to front page of the intranet for ensuring that it's applied.                    Uri siteUri = new Uri(personalSiteUrl);                  string realm = TokenHelper.GetRealmFromTargetUrl(siteUri);                  string accessToken = TokenHelper.GetAppOnlyAccessToken(TokenHelper.SharePointPrincipal' siteUri.Authority' realm).AccessToken;                  using (var appOnlyCtx = TokenHelper.GetClientContextWithAccessToken(siteUri.ToString()' accessToken))                  {                      Web rootWeb = appOnlyCtx.Web;                      appOnlyCtx.Load(rootWeb);                      appOnlyCtx.ExecuteQuery();                        //Let's set the theme only if needed' note that you can easily check for example specific version here as well                      if (rootWeb.GetPropertyBagValueInt(OneDriveCustomizer.OneDriveMarkerBagID' 0) < 2)                      {                          // Let's first upload the contoso theme to host web' if it does not exist there                          var colorFile = rootWeb.UploadThemeFile(HostingEnvironment.MapPath(string.Format("~/{0}"' "Resources/Themes/SPC/SPCTheme.spcolor")));                          var backgroundFile = rootWeb.UploadThemeFile(HostingEnvironment.MapPath(string.Format("~/{0}"' "Resources/Themes/SPC/SPCbg.jpg")));                          rootWeb.CreateComposedLookByUrl("SPC"' colorFile.ServerRelativeUrl' null' backgroundFile.ServerRelativeUrl' string.Empty);                            // Setting the Contoos theme to host web                          rootWeb.SetComposedLookByUrl("SPC");                            // Add additional JS injection with the policy statement to the site                          rootWeb.AddJsLink("OneDriveCustomJS"' BuildJavaScriptUrl());                            // Let's set the site processed' so that we don't update that all the time. Currently set as "version" 1 of branding                          rootWeb.SetPropertyBagValue(OneDriveCustomizer.OneDriveMarkerBagID' 2);                            // Write output if enabled                          WriteDebugInformationIfNeeded(string.Format("OneDrive for Business site existed at {0}. Custom branding applied."' personalSiteUrl));                      }                      else                      {                          // Just to output status if enabled in the app part                          WriteDebugInformationIfNeeded(string.Format("OneDrive for Business site existed at {0} and had right branding."' personalSiteUrl));                      }                  }              }
Magic Number,Provisioning.OneDriveWeb.Pages,OneDriveCustomizer,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\Pages\OneDriveCustomizer.aspx.cs,Page_Load,The following statement contains a magic number: if (personalSiteUrl != null)              {                  // Site already exists' let's modify the branding by applying a theme... just as well you could upload                  // master page and set that to be shown. Notice that you can also modify this code to change the branding                  // later and updates would be reflected whenever user visits OneDrive host... or any other location where this                  // app part is located. You could place this also to front page of the intranet for ensuring that it's applied.                    Uri siteUri = new Uri(personalSiteUrl);                  string realm = TokenHelper.GetRealmFromTargetUrl(siteUri);                  string accessToken = TokenHelper.GetAppOnlyAccessToken(TokenHelper.SharePointPrincipal' siteUri.Authority' realm).AccessToken;                  using (var appOnlyCtx = TokenHelper.GetClientContextWithAccessToken(siteUri.ToString()' accessToken))                  {                      Web rootWeb = appOnlyCtx.Web;                      appOnlyCtx.Load(rootWeb);                      appOnlyCtx.ExecuteQuery();                        //Let's set the theme only if needed' note that you can easily check for example specific version here as well                      if (rootWeb.GetPropertyBagValueInt(OneDriveCustomizer.OneDriveMarkerBagID' 0) < 2)                      {                          // Let's first upload the contoso theme to host web' if it does not exist there                          var colorFile = rootWeb.UploadThemeFile(HostingEnvironment.MapPath(string.Format("~/{0}"' "Resources/Themes/SPC/SPCTheme.spcolor")));                          var backgroundFile = rootWeb.UploadThemeFile(HostingEnvironment.MapPath(string.Format("~/{0}"' "Resources/Themes/SPC/SPCbg.jpg")));                          rootWeb.CreateComposedLookByUrl("SPC"' colorFile.ServerRelativeUrl' null' backgroundFile.ServerRelativeUrl' string.Empty);                            // Setting the Contoos theme to host web                          rootWeb.SetComposedLookByUrl("SPC");                            // Add additional JS injection with the policy statement to the site                          rootWeb.AddJsLink("OneDriveCustomJS"' BuildJavaScriptUrl());                            // Let's set the site processed' so that we don't update that all the time. Currently set as "version" 1 of branding                          rootWeb.SetPropertyBagValue(OneDriveCustomizer.OneDriveMarkerBagID' 2);                            // Write output if enabled                          WriteDebugInformationIfNeeded(string.Format("OneDrive for Business site existed at {0}. Custom branding applied."' personalSiteUrl));                      }                      else                      {                          // Just to output status if enabled in the app part                          WriteDebugInformationIfNeeded(string.Format("OneDrive for Business site existed at {0} and had right branding."' personalSiteUrl));                      }                  }              }
Magic Number,Provisioning.OneDriveWeb.Pages,OneDriveCustomizer,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\Pages\OneDriveCustomizer.aspx.cs,CookieCheckSkip,The following statement contains a magic number: if (cookie == null)              {                  // Create cookie.                  cookie = new HttpCookie(OneDriveCustomizer.OneDriveCookieName);                  // Set value of cookie to current date time.                  cookie.Value = DateTime.Now.ToString();                  // Set cookie to expire in 60 minutes.                  cookie.Expires = DateTime.Now.AddMinutes(60);                  // Insert the cookie in the current HttpResponse.                  Response.Cookies.Add(cookie);                  // Output debugging information                  WriteDebugInformationIfNeeded(                      string.Format(@"Cookie did not exist' adding new cookie with {0}                                       as expiration. Execute code."'                                      cookie.Expires));                  // Since cookie did not existed' let's execute the code'                   // so skip is false.                  return false;              }              else              {                  // Output debugging information                  WriteDebugInformationIfNeeded("Cookie did existed' skipping the code for now.");                  //  Since cookie did existed' let's skip the code                  return true;              }
Missing Default,Contoso.Provisioning.OneDriveWeb,Default,C:\repos\OfficeDev_PnP\Solutions\Provisioning.OneDrive\Provisioning.OneDriveWeb\Pages\Default.aspx.cs,Page_PreInit,The following switch statement is missing a default case: switch (SharePointContextProvider.CheckRedirectionStatus(Context' out redirectUrl))              {                  case RedirectionStatus.Ok:                      return;                  case RedirectionStatus.ShouldRedirect:                      Response.Redirect(redirectUrl.AbsoluteUri' endResponse: true);                      break;                  case RedirectionStatus.CanNotRedirect:                      Response.Write("An error occurred while processing your request.");                      Response.End();                      break;              }
