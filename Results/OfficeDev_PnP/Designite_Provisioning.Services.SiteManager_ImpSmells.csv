Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Contoso.Services.SiteManager.Features.ApplicationConfigureServices,ApplicationConfigureServicesEventReceiver,C:\repos\OfficeDev_PnP\Samples\Provisioning.Services.SiteManager\Provisioning.Services.SiteManager\Features\ApplicationConfigureServices\ApplicationConfigureServices.EventReceiver.cs,FeatureActivated,The length of the statement  "                throw new ApplicationException("Exception occured during activation of Contoso.Services.SiteManager.ApplicationConfigureServices"' ex); " is 135.
Long Statement,Contoso.Provisioning.Services.SiteManager,SiteManager,C:\repos\OfficeDev_PnP\Samples\Provisioning.Services.SiteManager\Provisioning.Services.SiteManager\ISAPI\Provisioning.Services.SiteManager\SiteManager.svc.cs,CreateSiteCollection,The length of the statement  "            // Elevation - would not actually be neeeded if we call this by using specific account with the right permissions' but is also one option. " is 138.
Empty Catch Block,Contoso.Provisioning.Services.SiteManager,SiteManager,C:\repos\OfficeDev_PnP\Samples\Provisioning.Services.SiteManager\Provisioning.Services.SiteManager\ISAPI\Provisioning.Services.SiteManager\SiteManager.svc.cs,ListSiteCollections,The method has an empty catch block.
Empty Catch Block,Contoso.Provisioning.Services.SiteManager,SiteManager,C:\repos\OfficeDev_PnP\Samples\Provisioning.Services.SiteManager\Provisioning.Services.SiteManager\ISAPI\Provisioning.Services.SiteManager\SiteManager.svc.cs,CreateContentType,The method has an empty catch block.
Empty Catch Block,Contoso.Provisioning.Services.SiteManager,SiteManager,C:\repos\OfficeDev_PnP\Samples\Provisioning.Services.SiteManager\Provisioning.Services.SiteManager\ISAPI\Provisioning.Services.SiteManager\SiteManager.svc.cs,SetSiteLocale,The method has an empty catch block.
Magic Number,Contoso.Provisioning.Services.SiteManager.ApplicationLogic,ConfigurationManager,C:\repos\OfficeDev_PnP\Samples\Provisioning.Services.SiteManager\Provisioning.Services.SiteManager\ApplicationLogic\ConfigurationManager.cs,ConfigureRemoteManagerTimeout,The following statement contains a magic number: if (contentService.WcfServiceSettings.ContainsKey(service))              {                  SPWcfServiceSettings wcfServiceSettings = new SPWcfServiceSettings();                  wcfServiceSettings.ReaderQuotasMaxStringContentLength = 10485760;                  wcfServiceSettings.ReaderQuotasMaxArrayLength = int.MaxValue;                  wcfServiceSettings.ReaderQuotasMaxBytesPerRead = 10485760;                  wcfServiceSettings.MaxReceivedMessageSize = 10485760;                  wcfServiceSettings.ReceiveTimeout = TimeSpan.FromMinutes(15);                  wcfServiceSettings.OpenTimeout = TimeSpan.FromMinutes(15);                  wcfServiceSettings.CloseTimeout = TimeSpan.FromMinutes(15);                    contentService.WcfServiceSettings[service.ToLower()] = wcfServiceSettings;                  contentService.Update();              }              else              {                 // TODO - Exception handling              }
Magic Number,Contoso.Provisioning.Services.SiteManager.ApplicationLogic,ConfigurationManager,C:\repos\OfficeDev_PnP\Samples\Provisioning.Services.SiteManager\Provisioning.Services.SiteManager\ApplicationLogic\ConfigurationManager.cs,ConfigureRemoteManagerTimeout,The following statement contains a magic number: if (contentService.WcfServiceSettings.ContainsKey(service))              {                  SPWcfServiceSettings wcfServiceSettings = new SPWcfServiceSettings();                  wcfServiceSettings.ReaderQuotasMaxStringContentLength = 10485760;                  wcfServiceSettings.ReaderQuotasMaxArrayLength = int.MaxValue;                  wcfServiceSettings.ReaderQuotasMaxBytesPerRead = 10485760;                  wcfServiceSettings.MaxReceivedMessageSize = 10485760;                  wcfServiceSettings.ReceiveTimeout = TimeSpan.FromMinutes(15);                  wcfServiceSettings.OpenTimeout = TimeSpan.FromMinutes(15);                  wcfServiceSettings.CloseTimeout = TimeSpan.FromMinutes(15);                    contentService.WcfServiceSettings[service.ToLower()] = wcfServiceSettings;                  contentService.Update();              }              else              {                 // TODO - Exception handling              }
Magic Number,Contoso.Provisioning.Services.SiteManager.ApplicationLogic,ConfigurationManager,C:\repos\OfficeDev_PnP\Samples\Provisioning.Services.SiteManager\Provisioning.Services.SiteManager\ApplicationLogic\ConfigurationManager.cs,ConfigureRemoteManagerTimeout,The following statement contains a magic number: if (contentService.WcfServiceSettings.ContainsKey(service))              {                  SPWcfServiceSettings wcfServiceSettings = new SPWcfServiceSettings();                  wcfServiceSettings.ReaderQuotasMaxStringContentLength = 10485760;                  wcfServiceSettings.ReaderQuotasMaxArrayLength = int.MaxValue;                  wcfServiceSettings.ReaderQuotasMaxBytesPerRead = 10485760;                  wcfServiceSettings.MaxReceivedMessageSize = 10485760;                  wcfServiceSettings.ReceiveTimeout = TimeSpan.FromMinutes(15);                  wcfServiceSettings.OpenTimeout = TimeSpan.FromMinutes(15);                  wcfServiceSettings.CloseTimeout = TimeSpan.FromMinutes(15);                    contentService.WcfServiceSettings[service.ToLower()] = wcfServiceSettings;                  contentService.Update();              }              else              {                 // TODO - Exception handling              }
Magic Number,Contoso.Provisioning.Services.SiteManager.ApplicationLogic,ConfigurationManager,C:\repos\OfficeDev_PnP\Samples\Provisioning.Services.SiteManager\Provisioning.Services.SiteManager\ApplicationLogic\ConfigurationManager.cs,ConfigureRemoteManagerTimeout,The following statement contains a magic number: if (contentService.WcfServiceSettings.ContainsKey(service))              {                  SPWcfServiceSettings wcfServiceSettings = new SPWcfServiceSettings();                  wcfServiceSettings.ReaderQuotasMaxStringContentLength = 10485760;                  wcfServiceSettings.ReaderQuotasMaxArrayLength = int.MaxValue;                  wcfServiceSettings.ReaderQuotasMaxBytesPerRead = 10485760;                  wcfServiceSettings.MaxReceivedMessageSize = 10485760;                  wcfServiceSettings.ReceiveTimeout = TimeSpan.FromMinutes(15);                  wcfServiceSettings.OpenTimeout = TimeSpan.FromMinutes(15);                  wcfServiceSettings.CloseTimeout = TimeSpan.FromMinutes(15);                    contentService.WcfServiceSettings[service.ToLower()] = wcfServiceSettings;                  contentService.Update();              }              else              {                 // TODO - Exception handling              }
Magic Number,Contoso.Provisioning.Services.SiteManager.ApplicationLogic,ConfigurationManager,C:\repos\OfficeDev_PnP\Samples\Provisioning.Services.SiteManager\Provisioning.Services.SiteManager\ApplicationLogic\ConfigurationManager.cs,ConfigureRemoteManagerTimeout,The following statement contains a magic number: if (contentService.WcfServiceSettings.ContainsKey(service))              {                  SPWcfServiceSettings wcfServiceSettings = new SPWcfServiceSettings();                  wcfServiceSettings.ReaderQuotasMaxStringContentLength = 10485760;                  wcfServiceSettings.ReaderQuotasMaxArrayLength = int.MaxValue;                  wcfServiceSettings.ReaderQuotasMaxBytesPerRead = 10485760;                  wcfServiceSettings.MaxReceivedMessageSize = 10485760;                  wcfServiceSettings.ReceiveTimeout = TimeSpan.FromMinutes(15);                  wcfServiceSettings.OpenTimeout = TimeSpan.FromMinutes(15);                  wcfServiceSettings.CloseTimeout = TimeSpan.FromMinutes(15);                    contentService.WcfServiceSettings[service.ToLower()] = wcfServiceSettings;                  contentService.Update();              }              else              {                 // TODO - Exception handling              }
Magic Number,Contoso.Provisioning.Services.SiteManager.ApplicationLogic,ConfigurationManager,C:\repos\OfficeDev_PnP\Samples\Provisioning.Services.SiteManager\Provisioning.Services.SiteManager\ApplicationLogic\ConfigurationManager.cs,ConfigureRemoteManagerTimeout,The following statement contains a magic number: if (contentService.WcfServiceSettings.ContainsKey(service))              {                  SPWcfServiceSettings wcfServiceSettings = new SPWcfServiceSettings();                  wcfServiceSettings.ReaderQuotasMaxStringContentLength = 10485760;                  wcfServiceSettings.ReaderQuotasMaxArrayLength = int.MaxValue;                  wcfServiceSettings.ReaderQuotasMaxBytesPerRead = 10485760;                  wcfServiceSettings.MaxReceivedMessageSize = 10485760;                  wcfServiceSettings.ReceiveTimeout = TimeSpan.FromMinutes(15);                  wcfServiceSettings.OpenTimeout = TimeSpan.FromMinutes(15);                  wcfServiceSettings.CloseTimeout = TimeSpan.FromMinutes(15);                    contentService.WcfServiceSettings[service.ToLower()] = wcfServiceSettings;                  contentService.Update();              }              else              {                 // TODO - Exception handling              }
Magic Number,Contoso.Provisioning.Services.SiteManager,SiteManager,C:\repos\OfficeDev_PnP\Samples\Provisioning.Services.SiteManager\Provisioning.Services.SiteManager\ISAPI\Provisioning.Services.SiteManager\SiteManager.svc.cs,CreateSiteCollection,The following statement contains a magic number: uint siteLcIdint = 1033;
