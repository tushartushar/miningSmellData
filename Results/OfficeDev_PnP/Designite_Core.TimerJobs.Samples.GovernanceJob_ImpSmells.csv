Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Core.TimerJobs.Samples.GovernanceJob,SharePointContext,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\SharePointContext.cs,SharePointContext,The method has 5 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber
Long Parameter List,Core.TimerJobs.Samples.GovernanceJob,SharePointContextProvider,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,Core.TimerJobs.Samples.GovernanceJob,SharePointAcsContext,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\SharePointContext.cs,SharePointAcsContext,The method has 7 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' contextToken' contextTokenObj
Long Parameter List,Core.TimerJobs.Samples.GovernanceJob,SharePointAcsContextProvider,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,Core.TimerJobs.Samples.GovernanceJob,SharePointHighTrustContext,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\SharePointContext.cs,SharePointHighTrustContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' logonUserIdentity
Long Parameter List,Core.TimerJobs.Samples.GovernanceJob,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\SharePointContext.cs,CreateSharePointContext,The method has 6 parameters. Parameters: spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' httpRequest
Long Parameter List,Core.TimerJobs.Samples.GovernanceJob,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,GetAccessToken,The method has 5 parameters. Parameters: authorizationCode' targetPrincipalName' targetHost' targetRealm' redirectUri
Long Parameter List,Core.TimerJobs.Samples.GovernanceJob,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,GetClientContextWithAuthorizationCode,The method has 5 parameters. Parameters: targetUrl' targetPrincipalName' authorizationCode' targetRealm' redirectUri
Long Parameter List,Core.TimerJobs.Samples.GovernanceJob,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,IssueToken,The method has 9 parameters. Parameters: sourceApplication' issuerApplication' sourceRealm' targetApplication' targetRealm' targetApplicationHostName' trustedForDelegation' claims' appOnly
Long Parameter List,Core.TimerJobs.Samples.GovernanceJob,SharePointContextToken,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,SharePointContextToken,The method has 5 parameters. Parameters: issuer' audience' validFrom' validTo' claims
Long Parameter List,Core.TimerJobs.Samples.GovernanceJob,SharePointContextToken,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,SharePointContextToken,The method has 7 parameters. Parameters: issuer' audience' validFrom' validTo' claims' issuerToken' actorToken
Long Parameter List,Core.TimerJobs.Samples.GovernanceJob,SharePointContextToken,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,SharePointContextToken,The method has 6 parameters. Parameters: issuer' audience' validFrom' validTo' claims' signingCredentials
Long Identifier,Core.TimerJobs.Samples.GovernanceJob,SharePointContextProvider,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\SharePointContext.cs,CheckRedirectionStatus,The length of the parameter SPHasRedirectedToSharePointKey is 30.
Long Identifier,Core.TimerJobs.Samples.GovernanceJob,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,,The length of the parameter AcsMetadataEndPointRelativeUrl is 30.
Long Identifier,Core.TimerJobs.Samples.GovernanceJob,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,,The length of the parameter TrustedForImpersonationClaimType is 32.
Long Identifier,Core.TimerJobs.Samples.GovernanceJob,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,,The length of the parameter ClientSigningCertificatePassword is 32.
Long Identifier,Core.TimerJobs.Samples.GovernanceJob,AcsMetadataParser,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,GetMetadataDocument,The length of the parameter acsMetadataEndpointUrlWithRealm is 31.
Long Statement,Core.TimerJobs.Samples.GovernanceJob,SharePointContextProvider,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\SharePointContext.cs,CheckRedirectionStatus,The length of the statement  "            // Removes the values that are included in {StandardTokens}' as {StandardTokens} will be inserted at the beginning of the query string. " is 135.
Long Statement,Core.TimerJobs.Samples.GovernanceJob,SharePointContextProvider,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\SharePointContext.cs,CheckRedirectionStatus,The length of the statement  "            string redirectUrlString = TokenHelper.GetAppContextTokenRequestUrl(spHostUrl.AbsoluteUri' Uri.EscapeDataString(returnUrlString)); " is 130.
Long Statement,Core.TimerJobs.Samples.GovernanceJob,SharePointAcsContextProvider,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\SharePointContext.cs,CreateSharePointContext,The length of the statement  "            return new SharePointAcsContext(spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' contextTokenString' contextToken); " is 132.
Long Statement,Core.TimerJobs.Samples.GovernanceJob,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\SharePointContext.cs,CreateSharePointContext,The length of the statement  "            if (logonUserIdentity == null || !logonUserIdentity.IsAuthenticated || logonUserIdentity.IsGuest || logonUserIdentity.User == null) " is 131.
Long Statement,Core.TimerJobs.Samples.GovernanceJob,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\SharePointContext.cs,CreateSharePointContext,The length of the statement  "            return new SharePointHighTrustContext(spHostUrl' spAppWebUrl' spLanguage' spClientTag' spProductNumber' logonUserIdentity); " is 123.
Long Statement,Core.TimerJobs.Samples.GovernanceJob,SiteGovernanceJob,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\SiteGovernanceJob.cs,SiteGovernanceJob_TimerJobRun,The length of the statement  "                Log.Info("SiteGovernanceJob"' "ThreadID = {2} | Site {0} has {1} administrators."' e.Url' admins.Count' Thread.CurrentThread.ManagedThreadId); " is 142.
Long Statement,Core.TimerJobs.Samples.GovernanceJob,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,GetAccessToken,The length of the statement  "            OAuth2AccessTokenRequest oauth2Request = OAuth2MessageFactory.CreateAccessTokenRequestWithRefreshToken(clientId' ClientSecret' refreshToken' resource); " is 151.
Long Statement,Core.TimerJobs.Samples.GovernanceJob,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,GetAppOnlyAccessToken,The length of the statement  "            OAuth2AccessTokenRequest oauth2Request = OAuth2MessageFactory.CreateAccessTokenRequestWithClientCredentials(clientId' ClientSecret' resource); " is 142.
Long Statement,Core.TimerJobs.Samples.GovernanceJob,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,CreateAppEventClientContext,The length of the statement  "            Uri sharepointUrl = useAppWeb ? properties.AppEventProperties.AppWebFullUrl : properties.AppEventProperties.HostWebFullUrl; " is 123.
Long Statement,Core.TimerJobs.Samples.GovernanceJob,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,GetClientContextWithAuthorizationCode,The length of the statement  "            return GetClientContextWithAuthorizationCode(targetUrl' SharePointPrincipal' authorizationCode' GetRealmFromTargetUrl(new Uri(targetUrl))' redirectUri); " is 152.
Long Statement,Core.TimerJobs.Samples.GovernanceJob,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,CreateAcsClientContextForUrl,The length of the statement  "            SharePointContextToken contextToken = ReadAndValidateContextToken(contextTokenString' OperationContext.Current.IncomingMessageHeaders.To.Host); " is 143.
Long Statement,Core.TimerJobs.Samples.GovernanceJob,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,IssueToken,The length of the statement  "            string issuer = string.IsNullOrEmpty(sourceRealm) ? issuerApplication : string.Format("{0}@{1}"' issuerApplication' sourceRealm); " is 129.
Long Statement,Core.TimerJobs.Samples.GovernanceJob,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,IssueToken,The length of the statement  "            string nameid = string.IsNullOrEmpty(sourceRealm) ? sourceApplication : string.Format("{0}@{1}"' sourceApplication' sourceRealm); " is 129.
Long Statement,Core.TimerJobs.Samples.GovernanceJob,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,IssueToken,The length of the statement  "            List<JsonWebTokenClaim> outerClaims = null == claims ? new List<JsonWebTokenClaim>() : new List<JsonWebTokenClaim>(claims); " is 123.
Long Statement,Core.TimerJobs.Samples.GovernanceJob,SharePointContextToken,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,Create,The length of the statement  "            return new SharePointContextToken(contextToken.Issuer' contextToken.Audience' contextToken.ValidFrom' contextToken.ValidTo' contextToken.Claims); " is 145.
Complex Conditional,Core.TimerJobs.Samples.GovernanceJob,SharePointHighTrustContextProvider,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\SharePointContext.cs,CreateSharePointContext,The conditional expression  "logonUserIdentity == null || !logonUserIdentity.IsAuthenticated || logonUserIdentity.IsGuest || logonUserIdentity.User == null"  is complex.
Empty Catch Block,Core.TimerJobs.Samples.GovernanceJob,SharePointAcsContext,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\SharePointContext.cs,RenewAccessTokenIfNeeded,The method has an empty catch block.
Magic Number,Core.TimerJobs.Samples.GovernanceJob,SiteGovernanceJob,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\SiteGovernanceJob.cs,SiteGovernanceJob_TimerJobRun,The following statement contains a magic number: try              {                  string library = "";                    // Get the number of admins                  var admins = e.WebClientContext.Web.GetAdministrators();                    Log.Info("SiteGovernanceJob"' "ThreadID = {2} | Site {0} has {1} administrators."' e.Url' admins.Count' Thread.CurrentThread.ManagedThreadId);                    // grab reference to list                  library = "SiteAssets";                  List list = e.WebClientContext.Web.GetListByUrl(library);                    if (!e.GetProperty("ScriptFileVersion").Equals("1.0"' StringComparison.InvariantCultureIgnoreCase))                  {                      if (list == null)                      {                          // grab reference to list                          library = "Style%20Library";                          list = e.WebClientContext.Web.GetListByUrl(library);                      }                        if (list != null)                      {                          // upload js file to list                          list.RootFolder.UploadFile("sitegovernance.js"' "sitegovernance.js"' true);                            e.SetProperty("ScriptFileVersion"' "1.0");                      }                  }                    if (admins.Count < 2)                  {                      // Oops' we need at least 2 site collection administrators                      e.WebClientContext.Site.AddJsLink(SiteGovernanceJobKey' BuildJavaScriptUrl(e.Url' library));                      Console.WriteLine("Site {0} marked as incompliant!"' e.Url);                      e.SetProperty("SiteCompliant"' "false");                  }                  else                  {                      // We're all good...let's remove the notification                      e.WebClientContext.Site.DeleteJsLink(SiteGovernanceJobKey);                      Console.WriteLine("Site {0} is compliant"' e.Url);                      e.SetProperty("SiteCompliant"' "true");                  }                    e.CurrentRunSuccessful = true;                  e.DeleteProperty("LastError");              }              catch(Exception ex)              {                  Log.Error("SiteGovernanceJob"' "Error while processing site {0}. Error = {1}"' e.Url' ex.Message);                  e.CurrentRunSuccessful = false;                  e.SetProperty("LastError"' ex.Message);              }
Magic Number,Core.TimerJobs.Samples.GovernanceJob,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,GetRealmFromTargetUrl,The following statement contains a magic number: try              {                  using (request.GetResponse())                  {                  }              }              catch (WebException e)              {                  if (e.Response == null)                  {                      return null;                  }                    string bearerResponseHeader = e.Response.Headers["WWW-Authenticate"];                  if (string.IsNullOrEmpty(bearerResponseHeader))                  {                      return null;                  }                    const string bearer = "Bearer realm=\"";                  int bearerIndex = bearerResponseHeader.IndexOf(bearer' StringComparison.Ordinal);                  if (bearerIndex < 0)                  {                      return null;                  }                    int realmIndex = bearerIndex + bearer.Length;                    if (bearerResponseHeader.Length >= realmIndex + 36)                  {                      string targetRealm = bearerResponseHeader.Substring(realmIndex' 36);                        Guid realmGuid;                        if (Guid.TryParse(targetRealm' out realmGuid))                      {                          return targetRealm;                      }                  }              }
Magic Number,Core.TimerJobs.Samples.GovernanceJob,TokenHelper,C:\repos\OfficeDev_PnP\Solutions\Core.TimerJobs.Samples\Core.TimerJobs.Samples.GovernanceJob\TokenHelper.cs,GetRealmFromTargetUrl,The following statement contains a magic number: try              {                  using (request.GetResponse())                  {                  }              }              catch (WebException e)              {                  if (e.Response == null)                  {                      return null;                  }                    string bearerResponseHeader = e.Response.Headers["WWW-Authenticate"];                  if (string.IsNullOrEmpty(bearerResponseHeader))                  {                      return null;                  }                    const string bearer = "Bearer realm=\"";                  int bearerIndex = bearerResponseHeader.IndexOf(bearer' StringComparison.Ordinal);                  if (bearerIndex < 0)                  {                      return null;                  }                    int realmIndex = bearerIndex + bearer.Length;                    if (bearerResponseHeader.Length >= realmIndex + 36)                  {                      string targetRealm = bearerResponseHeader.Substring(realmIndex' 36);                        Guid realmGuid;                        if (Guid.TryParse(targetRealm' out realmGuid))                      {                          return targetRealm;                      }                  }              }
