Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.AspNet.SignalR,TaskAsyncHelper,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\..\Microsoft.AspNet.SignalR.Core\TaskAsyncHelper.cs,ContinueWithNotComplete,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.AspNet.SignalR.SqlServer,ObservableDbOperation,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\ObservableDbOperation.cs,ExecuteReaderWithUpdates,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.AspNet.SignalR.SqlServer,ObservableDbOperation,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\ObservableDbOperation.cs,SqlDependency_OnChange,Cyclomatic complexity of the method is 8
Long Parameter List,Microsoft.AspNet.SignalR,TaskAsyncHelper,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\..\Microsoft.AspNet.SignalR.Core\TaskAsyncHelper.cs,Then,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR,TaskAsyncHelper,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\..\Microsoft.AspNet.SignalR.Core\TaskAsyncHelper.cs,RunTaskSynchronously,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.SqlServer,ObservableDbOperation,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\ObservableDbOperation.cs,ObservableDbOperation,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.SqlServer,DbOperation,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\DbOperation.cs,Execute,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.SqlServer,SqlReceiver,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\SqlReceiver.cs,SqlReceiver,The method has 8 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.SqlServer,SqlStream,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\SqlStream.cs,SqlStream,The method has 11 parameters.
Long Statement,Microsoft.AspNet.SignalR.SqlServer,IDbCommandExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\IDbCommandExtensions.cs,ExecuteNonQueryAsync,The length of the statement  "		return Task.Factory.FromAsync ((cb' state) => sqlCommand.BeginExecuteNonQuery (cb' state)' iar => sqlCommand.EndExecuteNonQuery (iar)' null); " is 141.
Long Statement,Microsoft.AspNet.SignalR.SqlServer,ObservableDbOperation,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\ObservableDbOperation.cs,ExecuteReaderWithUpdates,The length of the statement  "						if (recordCount > 0 || Interlocked.CompareExchange (ref _notificationState' NotificationState.AwaitingNotification' NotificationState.ProcessingUpdates) == NotificationState.NotificationReceived) { " is 197.
Long Statement,Microsoft.AspNet.SignalR.SqlServer,ObservableDbOperation,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\ObservableDbOperation.cs,SqlDependency_OnChange,The length of the statement  "	if (Interlocked.CompareExchange (ref _notificationState' NotificationState.NotificationReceived' NotificationState.ProcessingUpdates) == NotificationState.ProcessingUpdates) { " is 175.
Long Statement,Microsoft.AspNet.SignalR.SqlServer,ObservableDbOperation,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\ObservableDbOperation.cs,SqlDependency_OnChange,The length of the statement  "			Trace.TraceVerbose ("{0}SQL notification details: Type={1}' Source={2}' Info={3}"' TracePrefix' e.Type' e.Source' e.Info); " is 122.
Long Statement,Microsoft.AspNet.SignalR.SqlServer,ObservableDbOperation,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\ObservableDbOperation.cs,SqlDependency_OnChange,The length of the statement  "			Trace.TraceError ("{0}Unexpected SQL notification details: Type={1}' Source={2}' Info={3}"' TracePrefix' e.Type' e.Source' e.Info); " is 131.
Long Statement,Microsoft.AspNet.SignalR.SqlServer,ObservableDbOperation,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\ObservableDbOperation.cs,SqlDependency_OnChange,The length of the statement  "			Faulted (new SqlMessageBusException (String.Format (CultureInfo.InvariantCulture' Resources.Error_UnexpectedSqlNotificationType' e.Type' e.Source' e.Info))); " is 157.
Long Statement,Microsoft.AspNet.SignalR.SqlServer,ObservableDbOperation,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\ObservableDbOperation.cs,SqlDependency_OnChange,The length of the statement  "		Debug.Assert (e.Info != SqlNotificationInfo.Invalid' "Ensure the SQL query meets the requirements for query notifications at http://msdn.microsoft.com/en-US/library/ms181122.aspx"); " is 181.
Long Statement,Microsoft.AspNet.SignalR.SqlServer,ObservableDbOperation,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\ObservableDbOperation.cs,SqlDependency_OnChange,The length of the statement  "		Trace.TraceError ("{0}SQL notification subscription error: Type={1}' Source={2}' Info={3}"' TracePrefix' e.Type' e.Source' e.Info); " is 131.
Long Statement,Microsoft.AspNet.SignalR.SqlServer,SqlInstaller,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\SqlInstaller.cs,Install,The length of the statement  "	script = script.Replace ("SET @MESSAGE_TABLE_NAME = 'Messages';"' "SET @MESSAGE_TABLE_NAME = '" + _messagesTableNamePrefix + "';"); " is 131.
Long Statement,Microsoft.AspNet.SignalR.SqlServer,DbOperation,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\DbOperation.cs,Execute,The length of the statement  "		commandFunc (command).Then (result => tcs.SetResult (result)).Catch (ex => tcs.SetUnwrappedException (ex)).Finally (state =>  { " is 127.
Long Statement,Microsoft.AspNet.SignalR.SqlServer,SqlReceiver,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\SqlReceiver.cs,ProcessRecord,The length of the statement  "		_trace.TraceError ("{0}Missed message(s) from SQL Server. Expected payload ID {1} but got {2}."' _tracePrefix' _lastPayloadId + 1' id); " is 135.
Long Statement,Microsoft.AspNet.SignalR.SqlServer,SqlReceiver,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\SqlReceiver.cs,ProcessRecord,The length of the statement  "		_trace.TraceInformation ("{0}Duplicate message(s) or payload ID reset from SQL Server. Last payload ID {1}' this payload ID {2}"' _tracePrefix' _lastPayloadId' id); " is 164.
Long Statement,Microsoft.AspNet.SignalR.SqlServer,SqlSender,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\SqlSender.cs,BuildInsertString,The length of the statement  "	return insertDml.Replace ("[SignalR]"' String.Format (CultureInfo.InvariantCulture' "[{0}]"' SqlMessageBus.SchemaName)).Replace ("[Messages_0"' String.Format (CultureInfo.InvariantCulture' "[{0}"' tableName)); " is 209.
Long Statement,Microsoft.AspNet.SignalR.SqlServer,SqlStream,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\SqlStream.cs,Send,The length of the statement  "	_trace.TraceVerbose ("{0}Saving payload with {1} messages(s) to SQL server"' _tracePrefix' messages.Count' _streamIndex); " is 121.
Empty Catch Block,Microsoft.AspNet.SignalR.SqlServer,ObservableDbOperation,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\ObservableDbOperation.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Microsoft.AspNet.SignalR.SqlServer,ObservableDbOperation,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\ObservableDbOperation.cs,SqlDependency_OnChange,The method has an empty catch block.
Empty Catch Block,Microsoft.AspNet.SignalR.SqlServer,ObservableDbOperation,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\ObservableDbOperation.cs,Stop,The method has an empty catch block.
Magic Number,Microsoft.AspNet.SignalR.SqlServer,ObservableDbOperation,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\ObservableDbOperation.cs,SqlDependency_OnChange,The following statement contains a magic number: if (e.Type == SqlNotificationType.Change) {  	if (e.Info == SqlNotificationInfo.Insert) {  		Trace.TraceVerbose ("{0}SQL notification details: Type={1}' Source={2}' Info={3}"' TracePrefix' e.Type' e.Source' e.Info);  	}  	else if (e.Source == SqlNotificationSource.Timeout) {  		Trace.TraceVerbose ("{0}SQL notification timed out"' TracePrefix);  	}  	else {  		Trace.TraceError ("{0}Unexpected SQL notification details: Type={1}' Source={2}' Info={3}"' TracePrefix' e.Type' e.Source' e.Info);  		Faulted (new SqlMessageBusException (String.Format (CultureInfo.InvariantCulture' Resources.Error_UnexpectedSqlNotificationType' e.Type' e.Source' e.Info)));  	}  }  else if (e.Type == SqlNotificationType.Subscribe) {  	Debug.Assert (e.Info != SqlNotificationInfo.Invalid' "Ensure the SQL query meets the requirements for query notifications at http://msdn.microsoft.com/en-US/library/ms181122.aspx");  	Trace.TraceError ("{0}SQL notification subscription error: Type={1}' Source={2}' Info={3}"' TracePrefix' e.Type' e.Source' e.Info);  	if (e.Info == SqlNotificationInfo.TemplateLimit) {  		// We've hit a subscription limit' pause for a bit then start again  		Thread.Sleep (2000);  	}  	else {  		// Unknown subscription error' let's stop using query notifications  		_notificationState = NotificationState.Disabled;  		try {  			SqlDependency.Stop (ConnectionString);  		}  		catch (Exception) {  		}  	}  }  
Magic Number,Microsoft.AspNet.SignalR.SqlServer,ObservableDbOperation,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\ObservableDbOperation.cs,SqlDependency_OnChange,The following statement contains a magic number: if (e.Type == SqlNotificationType.Subscribe) {  	Debug.Assert (e.Info != SqlNotificationInfo.Invalid' "Ensure the SQL query meets the requirements for query notifications at http://msdn.microsoft.com/en-US/library/ms181122.aspx");  	Trace.TraceError ("{0}SQL notification subscription error: Type={1}' Source={2}' Info={3}"' TracePrefix' e.Type' e.Source' e.Info);  	if (e.Info == SqlNotificationInfo.TemplateLimit) {  		// We've hit a subscription limit' pause for a bit then start again  		Thread.Sleep (2000);  	}  	else {  		// Unknown subscription error' let's stop using query notifications  		_notificationState = NotificationState.Disabled;  		try {  			SqlDependency.Stop (ConnectionString);  		}  		catch (Exception) {  		}  	}  }  
Magic Number,Microsoft.AspNet.SignalR.SqlServer,ObservableDbOperation,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\ObservableDbOperation.cs,SqlDependency_OnChange,The following statement contains a magic number: if (e.Info == SqlNotificationInfo.TemplateLimit) {  	// We've hit a subscription limit' pause for a bit then start again  	Thread.Sleep (2000);  }  else {  	// Unknown subscription error' let's stop using query notifications  	_notificationState = NotificationState.Disabled;  	try {  		SqlDependency.Stop (ConnectionString);  	}  	catch (Exception) {  	}  }  
Magic Number,Microsoft.AspNet.SignalR.SqlServer,ObservableDbOperation,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\ObservableDbOperation.cs,SqlDependency_OnChange,The following statement contains a magic number: Thread.Sleep (2000);  
Magic Number,Microsoft.AspNet.SignalR.SqlServer,SqlMessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\SqlMessageBus.cs,Initialize,The following statement contains a magic number: while (true) {  	try {  		var installer = new SqlInstaller (_connectionString' _tableNamePrefix' _configuration.TableCount' _trace);  		installer.Install ();  		break;  	}  	catch (Exception ex) {  		// Exception while installing  		for (var i = 0; i < _configuration.TableCount; i++) {  			OnError (i' ex);  		}  		Trace.TraceError ("Error trying to install SQL server objects' trying again in 2 seconds: {0}"' ex);  		// Try again in a little bit  		Thread.Sleep (2000);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.SqlServer,SqlMessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\SqlMessageBus.cs,Initialize,The following statement contains a magic number: try {  	var installer = new SqlInstaller (_connectionString' _tableNamePrefix' _configuration.TableCount' _trace);  	installer.Install ();  	break;  }  catch (Exception ex) {  	// Exception while installing  	for (var i = 0; i < _configuration.TableCount; i++) {  		OnError (i' ex);  	}  	Trace.TraceError ("Error trying to install SQL server objects' trying again in 2 seconds: {0}"' ex);  	// Try again in a little bit  	Thread.Sleep (2000);  }  
Magic Number,Microsoft.AspNet.SignalR.SqlServer,SqlMessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\SqlMessageBus.cs,Initialize,The following statement contains a magic number: Thread.Sleep (2000);  
Magic Number,Microsoft.AspNet.SignalR.SqlServer,SqlMessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\SqlMessageBus.cs,StartReceiving,The following statement contains a magic number: stream.StartReceiving ()// Open the stream once receiving has started  .Then (() => Open (streamIndex))// Starting the receive loop failed  .Catch (ex =>  {  	OnError (streamIndex' ex);  	// Try again in a little bit  	Thread.Sleep (2000);  	StartReceiving (streamIndex);  });  
Magic Number,Microsoft.AspNet.SignalR.SqlServer,SqlMessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.SqlServer\SqlMessageBus.cs,StartReceiving,The following statement contains a magic number: Thread.Sleep (2000);  
