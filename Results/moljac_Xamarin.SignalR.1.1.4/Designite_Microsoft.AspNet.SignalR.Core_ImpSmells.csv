Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The method has 137 lines of code.
Complex Method,Microsoft.AspNet.SignalR.Infrastructure,SafeCancellationTokenSource,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SafeCancellationTokenSource.cs,Dispose,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.AspNet.SignalR.Infrastructure,Connection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\Connection.cs,ProcessCommand,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.AspNet.SignalR,TaskAsyncHelper,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\TaskAsyncHelper.cs,ContinueWithNotComplete,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.AspNet.SignalR.Json,SipHashBasedDictionaryConverter,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Json\SipHashBasedDictionaryConverter.cs,ReadJsonObject,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.AspNet.SignalR.Json,SipHashBasedDictionaryConverter,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Json\SipHashBasedDictionaryConverter.cs,ReadObject,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.AspNet.SignalR.Messaging,Cursor,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\Cursor.cs,Escape,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.AspNet.SignalR.Messaging,Cursor,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\Cursor.cs,GetCursors,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.AspNet.SignalR.Messaging,MessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageBus.cs,GarbageCollectTopics,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.AspNet.SignalR.Messaging,ScaleoutStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\ScaleoutStore.cs,TryAddImpl,Cyclomatic complexity of the method is 9
Long Parameter List,Microsoft.AspNet.SignalR.Infrastructure,CancellationTokenExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\CancellationTokenExtensions.cs,SafeRegister,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Infrastructure,TaskQueue,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\TaskQueue.cs,Enqueue,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Infrastructure,ServerCommandHandler,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\ServerCommandHandler.cs,HandleServerCommands,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Infrastructure,Connection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\Connection.cs,Connection,The method has 10 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Infrastructure,Connection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\Connection.cs,Receive,The method has 6 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Infrastructure,Connection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\Connection.cs,PopulateResponseState,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR,TaskAsyncHelper,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\TaskAsyncHelper.cs,Then,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR,TaskAsyncHelper,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\TaskAsyncHelper.cs,RunTaskSynchronously,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Hubs,HubConnectionContext,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\HubConnectionContext.cs,HubConnectionContext,The method has 8 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Hubs,AuthorizeModule,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Pipeline\Auth\AuthorizeModule.cs,BuildAuthorizeConnect,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Hubs,AuthorizeModule,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Pipeline\Auth\AuthorizeModule.cs,BuildIncoming,The method has 6 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Hubs,StatefulSignalProxy,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\StatefulSignalProxy.cs,StatefulSignalProxy,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Hubs,ReflectedMethodDescriptorProvider,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Lookup\ReflectedMethodDescriptorProvider.cs,BuildMethodCacheFor,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Hubs,ReflectedMethodDescriptorProvider,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Lookup\ReflectedMethodDescriptorProvider.cs,TryGetMethod,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Hubs,DefaultJavaScriptProxyGenerator,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\DefaultJavaScriptProxyGenerator.cs,GenerateMethod,The method has 6 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Hubs,HubDispatcher,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\HubDispatcher.cs,InvokeHubPipeline,The method has 6 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Hubs,HubDispatcher,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\HubDispatcher.cs,OnRejoiningGroups,The method has 8 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Hubs,HubDispatcher,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\HubDispatcher.cs,ExecuteHubEvent,The method has 7 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Hubs,HubDispatcher,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\HubDispatcher.cs,CreateHub,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Hubs,SignalProxy,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\SignalProxy.cs,SignalProxy,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Messaging,ScaleoutMessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\ScaleoutMessageBus.cs,CreateSubscription,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Messaging,IMessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\IMessageBus.cs,Subscribe,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Messaging,MessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageBus.cs,MessageBus,The method has 6 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Messaging,MessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageBus.cs,Subscribe,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Messaging,MessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageBus.cs,CreateSubscription,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Messaging,MessageBusExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageBusExtensions.cs,Enumerate,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Messaging,ScaleoutStreamManager,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\ScaleoutStreamManager.cs,ScaleoutStreamManager,The method has 6 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Messaging,ScaleoutSubscription,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\ScaleoutSubscription.cs,ScaleoutSubscription,The method has 8 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Messaging,DefaultSubscription,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\DefaultSubscription.cs,DefaultSubscription,The method has 11 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Messaging,Subscription,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\Subscription.cs,Subscription,The method has 6 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Transports,ForeverTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Transports\ForeverTransport.cs,ForeverTransport,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Transports,ForeverTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Transports\ForeverTransport.cs,ProcessMessages,The method has 11 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Transports,LongPollingTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Transports\LongPollingTransport.cs,LongPollingTransport,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Transports,LongPollingTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Transports\LongPollingTransport.cs,ProcessMessages,The method has 7 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Transports,LongPollingTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Transports\LongPollingTransport.cs,OnMessageReceived,The method has 6 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Transports,TransportManager,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Transports\TransportManager.cs,TransportManager,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Transports,WebSocketTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Transports\WebSocketTransport.cs,WebSocketTransport,The method has 5 parameters.
Long Identifier,Microsoft.AspNet.SignalR.Infrastructure,PerformanceCounterManager,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\PerformanceCounterManager.cs,Initialize,The length of the parameter needToRegisterWithShutdownToken is 31.
Long Identifier,Microsoft.AspNet.SignalR.Hubs,ReflectedMethodDescriptorProvider,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Lookup\ReflectedMethodDescriptorProvider.cs,BuildHubExecutableMethodCacheKey,The length of the parameter normalizedParameterCountKeyPart is 31.
Long Identifier,Microsoft.AspNet.SignalR.Messaging,MessageStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageStore.cs,GetMessagesImpl,The length of the parameter firstMessageIdRequestedByClient is 31.
Long Identifier,Microsoft.AspNet.SignalR.Messaging,ScaleoutStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\ScaleoutStore.cs,GetMessages,The length of the parameter firstMessageIdRequestedByClient is 31.
Long Identifier,Microsoft.AspNet.SignalR.Messaging,ScaleoutStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\ScaleoutStore.cs,GetMessagesByMappingId,The length of the parameter firstMessageIdRequestedByClient is 31.
Long Statement,Microsoft.AspNet.SignalR.Infrastructure,ConnectionManager,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\ConnectionManager.cs,GetConnection,The length of the statement  "	return new PersistentConnectionContext (connection' new GroupManager (connection' PrefixHelper.GetPersistentConnectionGroupName (rawConnectionName))); " is 150.
Long Statement,Microsoft.AspNet.SignalR.Infrastructure,ConnectionManager,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\ConnectionManager.cs,GetHubContext,The length of the statement  "	hubManager.EnsureHub (hubName' _counters.ErrorsHubResolutionTotal' _counters.ErrorsHubResolutionPerSec' _counters.ErrorsAllTotal' _counters.ErrorsAllPerSec); " is 157.
Long Statement,Microsoft.AspNet.SignalR.Infrastructure,ConnectionManager,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\ConnectionManager.cs,GetHubContext,The length of the statement  "	Func<string' ClientHubInvocation' IList<string>' Task> send = (signal' value' exclude) => pipelineInvoker.Send (new HubOutgoingInvokerContext (connection' signal' value' exclude)); " is 180.
Long Statement,Microsoft.AspNet.SignalR.Infrastructure,ConnectionManager,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\ConnectionManager.cs,GetConnectionCore,The length of the statement  "	return new Connection (_resolver.Resolve<IMessageBus> ()' _resolver.Resolve<IJsonSerializer> ()' connectionName' connectionId' signals' ListHelper<string>.Empty' _resolver.Resolve<ITraceManager> ()' _resolver.Resolve<IAckHandler> ()' _resolver.Resolve<IPerformanceCounterManager> ()' _resolver.Resolve<IProtectedData> ()); " is 322.
Long Statement,Microsoft.AspNet.SignalR.Infrastructure,InterlockedHelper,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\InterlockedHelper.cs,CompareExchangeOr,The length of the statement  "	return Interlocked.CompareExchange (ref location' value' comparandA) == comparandA || Interlocked.CompareExchange (ref location' value' comparandB) == comparandB; " is 162.
Long Statement,Microsoft.AspNet.SignalR.Infrastructure,PrefixHelper,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\PrefixHelper.cs,HasGroupPrefix,The length of the statement  "	return value.StartsWith (HubGroupPrefix' StringComparison.Ordinal) || value.StartsWith (PersistentConnectionGroupPrefix' StringComparison.Ordinal); " is 147.
Long Statement,Microsoft.AspNet.SignalR.Infrastructure,PerformanceCounterManager,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\PerformanceCounterManager.cs,GetCounterPropertyInfo,The length of the statement  "	return typeof(PerformanceCounterManager).GetProperties ().Where (p => p.PropertyType == typeof(IPerformanceCounter)).ToArray (); " is 128.
Long Statement,Microsoft.AspNet.SignalR.Infrastructure,PerformanceCounterManager,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\PerformanceCounterManager.cs,GetPerformanceCounterAttribute,The length of the statement  "	return property.GetCustomAttributes (typeof(PerformanceCounterAttribute)' false).Cast<PerformanceCounterAttribute> ().SingleOrDefault (); " is 137.
Long Statement,Microsoft.AspNet.SignalR.Infrastructure,CancellationTokenExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\CancellationTokenExtensions.cs,SafeRegister,The length of the statement  "	CancellationTokenRegistration registration = cancellationToken.Register (s => Cancel (s)' callbackWrapper' useSynchronizationContext: false); " is 141.
Long Statement,Microsoft.AspNet.SignalR.Infrastructure,ServerCommandHandler,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\ServerCommandHandler.cs,ProcessMessages,The length of the statement  "	_subscription = _messageBus.Subscribe (this' cursor: null' callback: HandleServerCommands' maxMessages: MaxMessages' state: null); " is 130.
Long Statement,Microsoft.AspNet.SignalR.Infrastructure,Connection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\Connection.cs,ExcludeMessage,The length of the statement  "	return exclude.Any (signal => Identity.Equals (signal' StringComparison.OrdinalIgnoreCase) || _signals.Contains (signal) || _groups.Contains (signal)); " is 151.
Long Statement,Microsoft.AspNet.SignalR,HubPipelineExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Pipeline\HubPipelineExtensions.cs,RequireAuthentication,The length of the statement  "	pipeline.AddModule (new AuthorizeModule (globalConnectionAuthorizer: authorizer' globalInvocationAuthorizer: authorizer)); " is 122.
Long Statement,Microsoft.AspNet.SignalR,ConnectionExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\ConnectionExtensions.cs,Send,The length of the statement  "	var message = new ConnectionMessage (PrefixHelper.GetConnectionId (connectionId)' value' PrefixHelper.GetPrefixedConnectionIds (excludeConnectionIds)); " is 151.
Long Statement,Microsoft.AspNet.SignalR,ConnectionExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\ConnectionExtensions.cs,Broadcast,The length of the statement  "	var message = new ConnectionMessage (connection.DefaultSignal' value' PrefixHelper.GetPrefixedConnectionIds (excludeConnectionIds)); " is 132.
Long Statement,Microsoft.AspNet.SignalR,DefaultDependencyResolver,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\DefaultDependencyResolver.cs,GetService,The length of the statement  "			throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Error_MultipleActivatorsAreaRegisteredCallGetServices' serviceType.FullName)); " is 168.
Long Statement,Microsoft.AspNet.SignalR,GroupManager,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\GroupManager.cs,Send,The length of the statement  "	var message = new ConnectionMessage (qualifiedName' value' PrefixHelper.GetPrefixedConnectionIds (excludeConnectionIds)); " is 121.
Long Statement,Microsoft.AspNet.SignalR,PersistentConnection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\PersistentConnection.cs,ProcessRequest,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Error_ConnectionNotInitialized)); " is 123.
Long Statement,Microsoft.AspNet.SignalR,PersistentConnection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\PersistentConnection.cs,ProcessRequest,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Error_ProtocolErrorUnknownTransport)); " is 128.
Long Statement,Microsoft.AspNet.SignalR,PersistentConnection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\PersistentConnection.cs,ProcessRequest,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Error_ProtocolErrorMissingConnectionToken)); " is 134.
Long Statement,Microsoft.AspNet.SignalR,PersistentConnection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\PersistentConnection.cs,GetConnectionId,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Error_ConnectionIdIncorrectFormat)); " is 126.
Long Statement,Microsoft.AspNet.SignalR,PersistentConnection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\PersistentConnection.cs,GetConnectionId,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Error_UnrecognizedUserIdentity)); " is 123.
Long Statement,Microsoft.AspNet.SignalR,PersistentConnection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\PersistentConnection.cs,CreateConnection,The length of the statement  "	return new Connection (MessageBus' JsonSerializer' DefaultSignal' connectionId' signals' groups' TraceManager' AckHandler' Counters' ProtectedData); " is 148.
Long Statement,Microsoft.AspNet.SignalR,PersistentConnection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\PersistentConnection.cs,ProcessJsonpRequest,The length of the statement  "	var data = JsonUtility.CreateJsonpCallback (context.Request.QueryString ["callback"]' JsonSerializer.Stringify (payload)); " is 122.
Long Statement,Microsoft.AspNet.SignalR.Hubs,EmptyJavaScriptProxyGenerator,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\EmptyJavaScriptProxyGenerator.cs,GenerateProxy,The length of the statement  "	return String.Format (CultureInfo.InvariantCulture' "throw new Error('{0}');"' Resources.Error_JavaScriptProxyDisabled); " is 120.
Long Statement,Microsoft.AspNet.SignalR.Hubs,HubMethodDispatcher,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Lookup\HubMethodDispatcher.cs,GetExecutor,The length of the statement  "	UnaryExpression instanceCast = (!methodInfo.IsStatic) ? Expression.Convert (hubParameter' methodInfo.ReflectedType) : null; " is 123.
Long Statement,Microsoft.AspNet.SignalR.Hubs,HubMethodDispatcher,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Lookup\HubMethodDispatcher.cs,GetExecutor,The length of the statement  "		Expression<VoidHubMethodExecutor> lambda = Expression.Lambda<VoidHubMethodExecutor> (methodCall' hubParameter' parametersParameter); " is 132.
Long Statement,Microsoft.AspNet.SignalR.Hubs,HubMethodDispatcher,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Lookup\HubMethodDispatcher.cs,GetExecutor,The length of the statement  "		Expression<HubMethodExecutor> lambda = Expression.Lambda<HubMethodExecutor> (castMethodCall' hubParameter' parametersParameter); " is 128.
Long Statement,Microsoft.AspNet.SignalR.Hubs,NullClientProxy,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\NullClientProxy.cs,TryGetMember,The length of the statement  "	throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Error_UsingHubInstanceNotCreatedUnsupported)); " is 136.
Long Statement,Microsoft.AspNet.SignalR.Hubs,NullClientProxy,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\NullClientProxy.cs,TryInvokeMember,The length of the statement  "	throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Error_UsingHubInstanceNotCreatedUnsupported)); " is 136.
Long Statement,Microsoft.AspNet.SignalR.Hubs,AuthorizeModule,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Pipeline\Auth\AuthorizeModule.cs,BuildAuthorizeConnect,The length of the statement  "		if (_globalConnectionAuthorizer != null && !_globalConnectionAuthorizer.AuthorizeHubConnection (hubDescriptor' request)) { " is 122.
Long Statement,Microsoft.AspNet.SignalR.Hubs,AuthorizeModule,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Pipeline\Auth\AuthorizeModule.cs,BuildAuthorizeConnect,The length of the statement  "		var attributeAuthorizers = _connectionAuthorizersCache.GetOrAdd (hubDescriptor.HubType' hubType => hubType.GetCustomAttributes (typeof(IAuthorizeHubConnection)' inherit: true).Cast<IAuthorizeHubConnection> ()); " is 210.
Long Statement,Microsoft.AspNet.SignalR.Hubs,AuthorizeModule,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Pipeline\Auth\AuthorizeModule.cs,BuildIncoming,The length of the statement  "		if (_globalInvocationAuthorizer == null || _globalInvocationAuthorizer.AuthorizeHubMethodInvocation (context' appliesToMethod: false)) { " is 136.
Long Statement,Microsoft.AspNet.SignalR.Hubs,AuthorizeModule,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Pipeline\Auth\AuthorizeModule.cs,BuildIncoming,The length of the statement  "			var classLevelAuthorizers = _classInvocationAuthorizersCache.GetOrAdd (context.Hub.GetType ()' hubType => hubType.GetCustomAttributes (typeof(IAuthorizeHubMethodInvocation)' inherit: true).Cast<IAuthorizeHubMethodInvocation> ()); " is 229.
Long Statement,Microsoft.AspNet.SignalR.Hubs,AuthorizeModule,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Pipeline\Auth\AuthorizeModule.cs,BuildIncoming,The length of the statement  "				var methodLevelAuthorizers = _methodInvocationAuthorizersCache.GetOrAdd (context.MethodDescriptor' methodDescriptor => methodDescriptor.Attributes.OfType<IAuthorizeHubMethodInvocation> ()); " is 189.
Long Statement,Microsoft.AspNet.SignalR.Hubs,AuthorizeModule,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Pipeline\Auth\AuthorizeModule.cs,BuildIncoming,The length of the statement  "		return TaskAsyncHelper.FromError<object> (new NotAuthorizedException (String.Format (CultureInfo.CurrentCulture' Resources.Error_CallerNotAuthorizedToInvokeMethodOn' context.MethodDescriptor.Name' context.MethodDescriptor.Hub.Name))); " is 234.
Long Statement,Microsoft.AspNet.SignalR.Hubs,HubPipelineModule,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Pipeline\HubPipelineModule.cs,BuildIncoming,The length of the statement  "			return invoke (context).OrEmpty ().Then (result => OnAfterIncoming (result' context)).Catch (ex => OnIncomingError (ex' context)); " is 130.
Long Statement,Microsoft.AspNet.SignalR.Hubs,HubRequestParser,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\HubRequestParser.cs,Parse,The length of the statement  "	request.ParameterValues = (deserializedData.Args != null) ? deserializedData.Args.Select (value => new JRawValue (value)).ToArray () : _emptyArgs; " is 146.
Long Statement,Microsoft.AspNet.SignalR.Hubs,HubPipeline,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Pipeline\HubPipeline.cs,AddModule,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Error_UnableToAddModulePiplineAlreadyInvoked)); " is 137.
Long Statement,Microsoft.AspNet.SignalR.Hubs,HubManagerExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Extensions\HubManagerExtensions.cs,EnsureHub,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Error_HubCouldNotBeResolved' hubName)); " is 129.
Long Statement,Microsoft.AspNet.SignalR.Hubs,MethodExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Extensions\MethodExtensions.cs,Matches,The length of the statement  "	if ((methodDescriptor.Parameters.Count > 0 && parameters == null) || methodDescriptor.Parameters.Count != parameters.Count) { " is 125.
Long Statement,Microsoft.AspNet.SignalR.Hubs,ReflectedMethodDescriptorProvider,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Lookup\ReflectedMethodDescriptorProvider.cs,BuildMethodCacheFor,The length of the statement  "	return ReflectionHelper.GetExportedHubMethods (hub.HubType).GroupBy (GetMethodName' StringComparer.OrdinalIgnoreCase).ToDictionary (group => group.Key' group => group.Select (oload => new MethodDescriptor { " is 206.
Long Statement,Microsoft.AspNet.SignalR.Hubs,ReflectedMethodDescriptorProvider,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Lookup\ReflectedMethodDescriptorProvider.cs,TryGetMethod,The length of the statement  "			// If only one match is found' that is the "executable" version' otherwise none of the methods can be returned because we don't know which one was actually being targeted " is 170.
Long Statement,Microsoft.AspNet.SignalR.Hubs,ReflectedMethodDescriptorProvider,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Lookup\ReflectedMethodDescriptorProvider.cs,TryGetMethod,The length of the statement  "		// If an executable method was found' cache it for future lookups (NOTE: we don't cache null instances because it could be a surface area for DoS attack by supplying random method names to flood the cache) " is 205.
Long Statement,Microsoft.AspNet.SignalR.Hubs,ReflectedMethodDescriptorProvider,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Lookup\ReflectedMethodDescriptorProvider.cs,BuildHubExecutableMethodCacheKey,The length of the statement  "	// NOTE: we always normalize to all uppercase since method names are case insensitive and could theoretically come in diff. variations per call " is 143.
Long Statement,Microsoft.AspNet.SignalR.Hubs,DefaultJavaScriptProxyGenerator,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\DefaultJavaScriptProxyGenerator.cs,GenerateMethod,The length of the statement  "	sb.AppendFormat ("            {0}: function ({1}) {{"' GetDescriptorName (method)' Commas (parameterNames)).AppendLine (); " is 122.
Long Statement,Microsoft.AspNet.SignalR.Hubs,DefaultJavaScriptProxyGenerator,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\DefaultJavaScriptProxyGenerator.cs,GenerateMethod,The length of the statement  "		sb.AppendFormat (Resources.DynamicComment_CallsMethodOnServerSideDeferredPromise' method.Name' method.Hub.Name).AppendLine (); " is 126.
Long Statement,Microsoft.AspNet.SignalR.Hubs,DefaultJavaScriptProxyGenerator,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\DefaultJavaScriptProxyGenerator.cs,GenerateMethod,The length of the statement  "		var parameterDoc = method.Parameters.Select (p => String.Format (CultureInfo.CurrentCulture' Resources.DynamicComment_ServerSideTypeIs' p.Name' MapToJavaScriptType (p.ParameterType)' p.ParameterType)).ToList (); " is 211.
Long Statement,Microsoft.AspNet.SignalR.Hubs,DefaultJavaScriptProxyGenerator,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\DefaultJavaScriptProxyGenerator.cs,GenerateMethod,The length of the statement  "	sb.AppendFormat ("                return proxies.{0}.invoke.apply(proxies.{0}' $.merge([\"{1}\"]' $.makeArray(arguments)));"' hubName' method.Name).AppendLine (); " is 162.
Long Statement,Microsoft.AspNet.SignalR.Hubs,DefaultJavaScriptProxyGenerator,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\DefaultJavaScriptProxyGenerator.cs,GetTemplateFromResource,The length of the statement  "	using (Stream resourceStream = typeof(DefaultJavaScriptProxyGenerator).Assembly.GetManifestResourceStream (ScriptResource)) { " is 125.
Long Statement,Microsoft.AspNet.SignalR.Hubs,ReflectedHubDescriptorProvider,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\Lookup\ReflectedHubDescriptorProvider.cs,IsHubType,The length of the statement  "		return typeof(IHub).IsAssignableFrom (type) && !type.IsAbstract && (type.Attributes.HasFlag (TypeAttributes.Public) || type.Attributes.HasFlag (TypeAttributes.NestedPublic)); " is 174.
Long Statement,Microsoft.AspNet.SignalR.Hubs,HubDispatcher,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\HubDispatcher.cs,Initialize,The length of the statement  "	_proxyGenerator = _enableJavaScriptProxies ? resolver.Resolve<IJavaScriptProxyGenerator> () : new EmptyJavaScriptProxyGenerator (); " is 131.
Long Statement,Microsoft.AspNet.SignalR.Hubs,HubDispatcher,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\HubDispatcher.cs,AuthorizeRequest,The length of the statement  "				HubDescriptor hubDescriptor = _manager.EnsureHub (hubInfo.Name' _counters.ErrorsHubResolutionTotal' _counters.ErrorsHubResolutionPerSec' _counters.ErrorsAllTotal' _counters.ErrorsAllPerSec); " is 190.
Long Statement,Microsoft.AspNet.SignalR.Hubs,HubDispatcher,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\HubDispatcher.cs,OnReceived,The length of the statement  "	HubDescriptor descriptor = _manager.EnsureHub (hubRequest.Hub' _counters.ErrorsHubInvocationTotal' _counters.ErrorsHubInvocationPerSec' _counters.ErrorsAllTotal' _counters.ErrorsAllPerSec); " is 189.
Long Statement,Microsoft.AspNet.SignalR.Hubs,HubDispatcher,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\HubDispatcher.cs,OnReceived,The length of the statement  "	return InvokeHubPipeline (hub' parameterValues' methodDescriptor' hubRequest' tracker).ContinueWith (task => hub.Dispose ()' TaskContinuationOptions.ExecuteSynchronously); " is 171.
Long Statement,Microsoft.AspNet.SignalR.Hubs,HubDispatcher,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\HubDispatcher.cs,Incoming,The length of the statement  "				Expression body = Expression.Call (continueWithMethod' Expression.Convert (parameter' genericTaskType)' Expression.Constant (tcs)); " is 131.
Long Statement,Microsoft.AspNet.SignalR.Hubs,HubDispatcher,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\HubDispatcher.cs,OnRejoiningGroups,The length of the statement  "		var hubGroups = groups.Where (g => g.StartsWith (groupPrefix' StringComparison.OrdinalIgnoreCase)).Select (g => g.Substring (groupPrefix.Length)).ToList (); " is 156.
Long Statement,Microsoft.AspNet.SignalR.Hubs,HubDispatcher,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\HubDispatcher.cs,CreateHub,The length of the statement  "		Trace.TraceInformation (String.Format (CultureInfo.CurrentCulture' Resources.Error_ErrorCreatingHub + ex.Message' descriptor.Name)); " is 132.
Long Statement,Microsoft.AspNet.SignalR.Hubs,HubDispatcher,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\HubDispatcher.cs,ProcessResponse,The length of the statement  "			hubResult.Error = String.Format (CultureInfo.CurrentCulture' Resources.Error_HubInvocationFailed' request.Hub' request.Method); " is 127.
Long Statement,Microsoft.AspNet.SignalR.Hosting,PersistentConnectionFactory,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hosting\PersistentConnectionFactory.cs,CreateInstance,The length of the statement  "	var connection = (_resolver.Resolve (connectionType) ?? Activator.CreateInstance (connectionType)) as PersistentConnection; " is 123.
Long Statement,Microsoft.AspNet.SignalR.Hosting,PersistentConnectionFactory,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hosting\PersistentConnectionFactory.cs,CreateInstance,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Error_IsNotA' connectionType.FullName' typeof(PersistentConnection).FullName)); " is 169.
Long Statement,Microsoft.AspNet.SignalR.Json,JsonUtility,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Json\JsonUtility.cs,CamelCase,The length of the statement  "	return String.Join ("."' name.Split ('.').Select (n => Char.ToLower (n [0]' CultureInfo.InvariantCulture) + n.Substring (1))); " is 126.
Long Statement,Microsoft.AspNet.SignalR.Messaging,MessageBroker,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageBroker.cs,AddWorker,The length of the statement  "			Trace.TraceEvent (TraceEventType.Verbose' 0' "Creating a worker' allocated={0}' busy={1}"' _allocatedWorkers' _busyWorkers); " is 124.
Long Statement,Microsoft.AspNet.SignalR.Messaging,MessageBroker,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageBroker.cs,AddWorker,The length of the statement  "			Trace.TraceEvent (TraceEventType.Verbose' 0' "No need to add a worker because all allocated workers are not busy' allocated={0}' busy={1}"' _allocatedWorkers' _busyWorkers); " is 173.
Long Statement,Microsoft.AspNet.SignalR.Messaging,MessageBroker,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageBroker.cs,AddWorker,The length of the statement  "		Trace.TraceEvent (TraceEventType.Verbose' 0' "Already at max workers' allocated={0}' busy={1}"' _allocatedWorkers' _busyWorkers); " is 129.
Long Statement,Microsoft.AspNet.SignalR.Messaging,MessageBroker,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageBroker.cs,PumpImplAsync,The length of the statement  "			Trace.TraceEvent (TraceEventType.Error' 0' "Work failed for " + subscription.Identity + ": " + task.Exception.GetBaseException ()); " is 131.
Long Statement,Microsoft.AspNet.SignalR.Messaging,ScaleoutMessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\ScaleoutMessageBus.cs,SendImpl,The length of the statement  "			sendTask.Then ((enumer' tcs) => SendImpl (enumer' tcs)' enumerator' taskCompletionSource).ContinueWithNotComplete (taskCompletionSource); " is 137.
Long Statement,Microsoft.AspNet.SignalR.Messaging,ScaleoutMessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\ScaleoutMessageBus.cs,CreateSubscription,The length of the statement  "	return new ScaleoutSubscription (subscriber.Identity' subscriber.EventKeys' cursor' StreamManager.Streams' callback' messageBufferSize' Counters' state); " is 153.
Long Statement,Microsoft.AspNet.SignalR.Messaging,MessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageBus.cs,CreateSubscription,The length of the statement  "	return new DefaultSubscription (subscriber.Identity' subscriber.EventKeys' Topics' cursor' callback' messageBufferSize' _stringMinifier' Counters' state); " is 154.
Long Statement,Microsoft.AspNet.SignalR.Messaging,MessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageBus.cs,GarbageCollectTopics,The length of the statement  "			if (InterlockedHelper.CompareExchangeOr (ref pair.Value.State' TopicState.Dead' TopicState.NoSubscriptions' TopicState.Dying)) { " is 128.
Long Statement,Microsoft.AspNet.SignalR.Messaging,MessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageBus.cs,SubscribeTopic,The length of the statement  "		InterlockedHelper.CompareExchangeOr (ref topic.State' TopicState.HasSubscriptions' TopicState.NoSubscriptions' TopicState.Dying); " is 129.
Long Statement,Microsoft.AspNet.SignalR.Messaging,MessageStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageStore.cs,GetMessagesImpl,The length of the statement  "	if (firstMessageIdInThisFragment <= firstMessageIdRequestedByClient && firstMessageIdRequestedByClient < firstMessageIdInNextFragment) { " is 136.
Long Statement,Microsoft.AspNet.SignalR.Messaging,MessageStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageStore.cs,GetMessagesImpl,The length of the statement  "		return new MessageStoreResult<T> (firstMessageIdRequestedByClient' retMessages' hasMoreData: (nextFreeMessageId > firstMessageIdInNextFragment)); " is 145.
Long Statement,Microsoft.AspNet.SignalR.Messaging,MessageStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageStore.cs,GetMessagesImpl,The length of the statement  "			return new MessageStoreResult<T> (firstMessageIdInThisFragment' new ArraySegment<T> (tailFragment.Data' 0' count)' hasMoreData: true); " is 134.
Long Statement,Microsoft.AspNet.SignalR.Messaging,MessageStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageStore.cs,TryAddImpl,The length of the statement  "			Fragment existingFragment = Interlocked.CompareExchange (ref _fragments [idxIntoFragmentsArray]' newFragment' fragment); " is 120.
Long Statement,Microsoft.AspNet.SignalR.Messaging,ScaleoutStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\ScaleoutStore.cs,TryAddImpl,The length of the statement  "			Fragment existingFragment = Interlocked.CompareExchange (ref _fragments [idxIntoFragmentsArray]' newFragment' fragment); " is 120.
Long Statement,Microsoft.AspNet.SignalR.Messaging,ScaleoutStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\ScaleoutStore.cs,GetMessages,The length of the statement  "		return new MessageStoreResult<ScaleoutMapping> (firstMessageIdRequestedByClient' _emptyArraySegment' hasMoreData: false); " is 121.
Long Statement,Microsoft.AspNet.SignalR.Messaging,ScaleoutStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\ScaleoutStore.cs,GetMessages,The length of the statement  "	if (firstMessageIdInThisFragment <= firstMessageIdRequestedByClient && firstMessageIdRequestedByClient < firstMessageIdInNextFragment) { " is 136.
Long Statement,Microsoft.AspNet.SignalR.Messaging,ScaleoutStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\ScaleoutStore.cs,GetMessages,The length of the statement  "		return new MessageStoreResult<ScaleoutMapping> (firstMessageIdRequestedByClient' retMessages' hasMoreData: (nextFreeMessageId > firstMessageIdInNextFragment)); " is 159.
Long Statement,Microsoft.AspNet.SignalR.Messaging,ScaleoutStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\ScaleoutStore.cs,GetMessages,The length of the statement  "			return new MessageStoreResult<ScaleoutMapping> (firstMessageIdInThisFragment' new ArraySegment<ScaleoutMapping> (tailFragment.Data' 0' tailFragment.Length)' hasMoreData: true); " is 176.
Long Statement,Microsoft.AspNet.SignalR.Messaging,ScaleoutStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\ScaleoutStore.cs,GetMessagesByMappingId,The length of the statement  "			var segment = new ArraySegment<ScaleoutMapping> (thisFragment.Data' lastSearchIndex' thisFragment.Length - lastSearchIndex); " is 124.
Long Statement,Microsoft.AspNet.SignalR.Messaging,Subscription,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\Subscription.cs,Invoke,The length of the statement  "	var prevState = Interlocked.CompareExchange (ref _subscriptionState' SubscriptionState.InvokingCallback' SubscriptionState.Idle); " is 129.
Long Statement,Microsoft.AspNet.SignalR.Transports,ForeverFrameTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Transports\ForeverFrameTransport.cs,InitializeResponse,The length of the statement  "	if (String.IsNullOrWhiteSpace (rawFrameId) || !UInt32.TryParse (rawFrameId' NumberStyles.None' CultureInfo.InvariantCulture' out frameId)) { " is 140.
Long Statement,Microsoft.AspNet.SignalR.Transports,ForeverTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Transports\ForeverTransport.cs,ProcessMessages,The length of the statement  "		EnqueueOperation (state => InitializeResponse ((ITransportConnection)state)' connection).Catch ((ex' state) => OnError (ex' state)' messageContext); " is 148.
Long Statement,Microsoft.AspNet.SignalR.Transports,ForeverTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Transports\ForeverTransport.cs,ProcessMessages,The length of the statement  "		IDisposable subscription = connection.Receive (LastMessageId' (response' state) => OnMessageReceived (response' state)' MaxMessages' messageContext); " is 149.
Long Statement,Microsoft.AspNet.SignalR.Transports,ForeverTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Transports\ForeverTransport.cs,ProcessMessages,The length of the statement  "		initialize ().Then (tcs => tcs.TrySetResult (null)' InitializeTcs).Catch ((ex' state) => OnError (ex' state)' messageContext); " is 126.
Long Statement,Microsoft.AspNet.SignalR.Transports,ForeverTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Transports\ForeverTransport.cs,OnMessageReceived,The length of the statement  "		return context.Transport.Send (response).Then (c => OnDisconnectMessage (c)' context).Then (() => TaskAsyncHelper.False); " is 121.
Long Statement,Microsoft.AspNet.SignalR.Transports,TransportDisconnectBase,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Transports\TransportDisconnectBase.cs,Abort,The length of the statement  "	return disconnected ().Catch ((ex' state) => OnDisconnectError (ex' state)' Trace).Then (counters => counters.ConnectionsDisconnected.Increment ()' _counters); " is 159.
Long Statement,Microsoft.AspNet.SignalR.Transports,TransportHeartbeat,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Transports\TransportHeartBeat.cs,AddConnection,The length of the statement  "		Trace.TraceEvent (TraceEventType.Verbose' 0' "Connection {0} exists. Closing previous connection."' old.Connection.ConnectionId); " is 129.
Long Statement,Microsoft.AspNet.SignalR.Transports,LongPollingTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Transports\LongPollingTransport.cs,ProcessMessages,The length of the statement  "		IDisposable subscription = connection.Receive (MessageId' (response' state) => OnMessageReceived (response' state)' MaxMessages' messageContext); " is 145.
Long Statement,Microsoft.AspNet.SignalR.Transports,LongPollingTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Transports\LongPollingTransport.cs,PerformSend,The length of the statement  "	context.Transport.Context.Response.ContentType = context.Transport.IsJsonp ? JsonUtility.JavaScriptMimeType : JsonUtility.JsonMimeType; " is 135.
Long Statement,Microsoft.AspNet.SignalR.Transports,HttpRequestLifeTime,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Transports\HttpRequestLifeTime.cs,Complete,The length of the statement  "		_trace.TraceEvent (TraceEventType.Error' 0' "CompleteRequest (" + _connectionId + ") failed: " + error.GetBaseException ()); " is 124.
Empty Catch Block,Microsoft.AspNet.SignalR.Infrastructure,PerformanceCounterWrapper,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\PerformanceCounterWrapper.cs,RemoveInstance,The method has an empty catch block.
Empty Catch Block,Microsoft.AspNet.SignalR.Messaging,MessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageBus.cs,DisposeSubscription,The method has an empty catch block.
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: if (inlen > 0) {  	var inb = finb;  	var left = inlen & 7;  	var end = inb + inlen - left;  	var linb = (ulong*)finb;  	var lend = (ulong*)end;  	for (; linb < lend; ++linb) {  		v3 ^= *linb;  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 += v1;  		v1 = (v1 << 13) | (v1 >> (64 - 13));  		v1 ^= v0;  		v0 = (v0 << 32) | (v0 >> (64 - 32));  		v2 += v3;  		v3 = (v3 << 16) | (v3 >> (64 - 16));  		v3 ^= v2;  		v0 += v3;  		v3 = (v3 << 21) | (v3 >> (64 - 21));  		v3 ^= v0;  		v2 += v1;  		v1 = (v1 << 17) | (v1 >> (64 - 17));  		v1 ^= v2;  		v2 = (v2 << 32) | (v2 >> (64 - 32));  		v0 ^= *linb;  	}  	for (var i = 0; i < left; ++i) {  		b |= ((ulong)end [i]) << (8 * i);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (; linb < lend; ++linb) {  	v3 ^= *linb;  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 += v1;  	v1 = (v1 << 13) | (v1 >> (64 - 13));  	v1 ^= v0;  	v0 = (v0 << 32) | (v0 >> (64 - 32));  	v2 += v3;  	v3 = (v3 << 16) | (v3 >> (64 - 16));  	v3 ^= v2;  	v0 += v3;  	v3 = (v3 << 21) | (v3 >> (64 - 21));  	v3 ^= v0;  	v2 += v1;  	v1 = (v1 << 17) | (v1 >> (64 - 17));  	v1 ^= v2;  	v2 = (v2 << 32) | (v2 >> (64 - 32));  	v0 ^= *linb;  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: for (var i = 0; i < left; ++i) {  	b |= ((ulong)end [i]) << (8 * i);  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: b |= ((ulong)end [i]) << (8 * i);  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 13) | (v1 >> (64 - 13));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v0 = (v0 << 32) | (v0 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 16) | (v3 >> (64 - 16));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v3 = (v3 << 21) | (v3 >> (64 - 21));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v1 = (v1 << 17) | (v1 >> (64 - 17));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The following statement contains a magic number: v2 = (v2 << 32) | (v2 >> (64 - 32));  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,StringMinifier,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\StringMinifier.cs,GetCharFromSixBitInt,The following statement contains a magic number: if (num < 26) {  	return (char)(num + 'A');  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,StringMinifier,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\StringMinifier.cs,GetCharFromSixBitInt,The following statement contains a magic number: if (num < 52) {  	return (char)(num - 26 + 'a');  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,StringMinifier,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\StringMinifier.cs,GetCharFromSixBitInt,The following statement contains a magic number: if (num < 52) {  	return (char)(num - 26 + 'a');  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,StringMinifier,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\StringMinifier.cs,GetCharFromSixBitInt,The following statement contains a magic number: return (char)(num - 26 + 'a');  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,StringMinifier,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\StringMinifier.cs,GetCharFromSixBitInt,The following statement contains a magic number: if (num < 62) {  	return (char)(num - 52 + '0');  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,StringMinifier,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\StringMinifier.cs,GetCharFromSixBitInt,The following statement contains a magic number: if (num < 62) {  	return (char)(num - 52 + '0');  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,StringMinifier,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\StringMinifier.cs,GetCharFromSixBitInt,The following statement contains a magic number: return (char)(num - 52 + '0');  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,StringMinifier,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\StringMinifier.cs,GetCharFromSixBitInt,The following statement contains a magic number: if (num == 62) {  	return '_';  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,StringMinifier,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\StringMinifier.cs,GetCharFromSixBitInt,The following statement contains a magic number: if (num == 63) {  	return ':';  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,StringMinifier,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\StringMinifier.cs,GetStringFromInt,The following statement contains a magic number: do {  	// Append next 6 bits of num  	buffer [--index] = GetCharFromSixBitInt (num & 0x3f);  	num >>= 6;  	// Don't pad output string' but ensure at least one character is written  }  while (num != 0);  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,StringMinifier,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\StringMinifier.cs,GetStringFromInt,The following statement contains a magic number: num >>= 6;  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,Connection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\Connection.cs,GetMessageBuffer,The following statement contains a magic number: using (var stream = new MemoryStream (128)) {  	var bufferWriter = new BinaryTextWriter ((buffer' state) =>  {  		((MemoryStream)state).Write (buffer.Array' buffer.Offset' buffer.Count);  	}' stream' reuseBuffers: true' bufferSize: 1024);  	using (bufferWriter) {  		_serializer.Serialize (value' bufferWriter);  		bufferWriter.Flush ();  		return new ArraySegment<byte> (stream.ToArray ());  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,Connection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\Connection.cs,GetMessageBuffer,The following statement contains a magic number: using (var stream = new MemoryStream (128)) {  	var bufferWriter = new BinaryTextWriter ((buffer' state) =>  {  		((MemoryStream)state).Write (buffer.Array' buffer.Offset' buffer.Count);  	}' stream' reuseBuffers: true' bufferSize: 1024);  	using (bufferWriter) {  		_serializer.Serialize (value' bufferWriter);  		bufferWriter.Flush ();  		return new ArraySegment<byte> (stream.ToArray ());  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Configuration,ConfigurationExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Configuration\ConfigurationExtensions.cs,TopicTtl,The following statement contains a magic number: return TimeSpan.FromTicks ((config.DisconnectTimeout.Ticks + keepAliveTimeout.Ticks) * 2);  
Magic Number,Microsoft.AspNet.SignalR.Configuration,DefaultConfigurationManager,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Configuration\DefaultConfigurationManager.cs,DefaultConfigurationManager,The following statement contains a magic number: ConnectionTimeout = TimeSpan.FromSeconds (110);  
Magic Number,Microsoft.AspNet.SignalR.Configuration,DefaultConfigurationManager,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Configuration\DefaultConfigurationManager.cs,DefaultConfigurationManager,The following statement contains a magic number: DisconnectTimeout = TimeSpan.FromSeconds (30);  
Magic Number,Microsoft.AspNet.SignalR.Configuration,DefaultConfigurationManager,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Configuration\DefaultConfigurationManager.cs,DefaultConfigurationManager,The following statement contains a magic number: DefaultMessageBufferSize = 1000;  
Magic Number,Microsoft.AspNet.SignalR.Hubs,HubRequestParser,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\HubRequestParser.cs,GetState,The following statement contains a magic number: if (json.Length > 4096) {  	throw new InvalidOperationException (Resources.Error_StateExceededMaximumLength);  }  
Magic Number,Microsoft.AspNet.SignalR.Hubs,DefaultJavaScriptProxyGenerator,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Hubs\DefaultJavaScriptProxyGenerator.cs,JavaScriptEncode,The following statement contains a magic number: return value.Substring (1' value.Length - 2);  
Magic Number,Microsoft.AspNet.SignalR.Json,JRawValue,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Json\JRawValue.cs,ConvertTo,The following statement contains a magic number: using (var jsonReader = new StringReader (_value)) {  	var settings = new JsonSerializerSettings {  		MaxDepth = 20  	};  	var serializer = JsonSerializer.Create (settings);  	return serializer.Deserialize (jsonReader' type);  }  
Magic Number,Microsoft.AspNet.SignalR.Json,JsonNetSerializer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Json\JsonNetSerializer.cs,JsonNetSerializer,The following statement contains a magic number: settings.MaxDepth = 20;  
Magic Number,Microsoft.AspNet.SignalR.Messaging,Cursor,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\Cursor.cs,WriteUlongAsHexToBuffer,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	// Convert the first 4 bits of the value to a valid hex character.  	char hexChar = Int32ToHex ((int)(value >> 60));  	value <<= 4;  	// Don't increment length if it would just add zero padding  	if (length != 0 || hexChar != '0') {  		textWriter.Write (hexChar);  		length++;  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Messaging,Cursor,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\Cursor.cs,WriteUlongAsHexToBuffer,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	// Convert the first 4 bits of the value to a valid hex character.  	char hexChar = Int32ToHex ((int)(value >> 60));  	value <<= 4;  	// Don't increment length if it would just add zero padding  	if (length != 0 || hexChar != '0') {  		textWriter.Write (hexChar);  		length++;  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Messaging,Cursor,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\Cursor.cs,WriteUlongAsHexToBuffer,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	// Convert the first 4 bits of the value to a valid hex character.  	char hexChar = Int32ToHex ((int)(value >> 60));  	value <<= 4;  	// Don't increment length if it would just add zero padding  	if (length != 0 || hexChar != '0') {  		textWriter.Write (hexChar);  		length++;  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Messaging,Cursor,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\Cursor.cs,WriteUlongAsHexToBuffer,The following statement contains a magic number: value <<= 4;  
Magic Number,Microsoft.AspNet.SignalR.Messaging,Cursor,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\Cursor.cs,Int32ToHex,The following statement contains a magic number: return (value < 10) ? (char)(value + '0') : (char)(value - 10 + 'A');  
Magic Number,Microsoft.AspNet.SignalR.Messaging,Cursor,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\Cursor.cs,Int32ToHex,The following statement contains a magic number: return (value < 10) ? (char)(value + '0') : (char)(value - 10 + 'A');  
Magic Number,Microsoft.AspNet.SignalR.Messaging,MessageBroker,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageBroker.cs,WaitForDrain,The following statement contains a magic number: while (_allocatedWorkers > 0) {  	lock (_queue) {  		// Tell all workers we're done  		Monitor.PulseAll (_queue);  	}  	Thread.Sleep (250);  }  
Magic Number,Microsoft.AspNet.SignalR.Messaging,MessageBroker,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageBroker.cs,WaitForDrain,The following statement contains a magic number: Thread.Sleep (250);  
Magic Number,Microsoft.AspNet.SignalR.Messaging,MessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageBus.cs,Dispose,The following statement contains a magic number: if (disposing) {  	// Stop the broker from doing any work  	_broker.Dispose ();  	// Spin while we wait for the timer to finish if it's currently running  	while (Interlocked.Exchange (ref _gcRunning' 1) == 1) {  		Thread.Sleep (250);  	}  	// Remove all topics  	Topics.Clear ();  	if (_gcTimer != null) {  		_gcTimer.Dispose ();  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Messaging,MessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageBus.cs,Dispose,The following statement contains a magic number: while (Interlocked.Exchange (ref _gcRunning' 1) == 1) {  	Thread.Sleep (250);  }  
Magic Number,Microsoft.AspNet.SignalR.Messaging,MessageBus,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageBus.cs,Dispose,The following statement contains a magic number: Thread.Sleep (250);  
Magic Number,Microsoft.AspNet.SignalR.Messaging,MessageStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageStore.cs,MessageStore,The following statement contains a magic number: if (capacity < 32) {  	capacity = 32;  }  
Magic Number,Microsoft.AspNet.SignalR.Messaging,MessageStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageStore.cs,MessageStore,The following statement contains a magic number: if (capacity < 32) {  	capacity = 32;  }  
Magic Number,Microsoft.AspNet.SignalR.Messaging,MessageStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\MessageStore.cs,MessageStore,The following statement contains a magic number: capacity = 32;  
Magic Number,Microsoft.AspNet.SignalR.Messaging,ScaleoutStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\ScaleoutStore.cs,ScaleoutStore,The following statement contains a magic number: if (capacity < 32) {  	capacity = 32;  }  
Magic Number,Microsoft.AspNet.SignalR.Messaging,ScaleoutStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\ScaleoutStore.cs,ScaleoutStore,The following statement contains a magic number: if (capacity < 32) {  	capacity = 32;  }  
Magic Number,Microsoft.AspNet.SignalR.Messaging,ScaleoutStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\ScaleoutStore.cs,ScaleoutStore,The following statement contains a magic number: capacity = 32;  
Magic Number,Microsoft.AspNet.SignalR.Messaging,ScaleoutStore,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Messaging\ScaleoutStore.cs,TryGetFragmentFromMappingId,The following statement contains a magic number: while (low <= high) {  	var mid = (ulong)((low + high) / 2);  	int midOffset = GetFragmentOffset (mid);  	fragment = _fragments [midOffset];  	if (fragment == null) {  		return false;  	}  	if (mappingId < fragment.MinValue) {  		high = (long)(fragment.MinId - 1);  	}  	else if (mappingId > fragment.MaxValue) {  		low = (long)(fragment.MaxId + 1);  	}  	else if (fragment.HasValue (mappingId)) {  		return true;  	}  }  
Duplicate Code,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The method contains a code clone-set at the following line numbers (starting from the method definition): ((15' 42)' (50' 77)' (80' 135))
Duplicate Code,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The method contains a code clone-set at the following line numbers (starting from the method definition): ((15' 34)' (94' 113)' (108' 127)' (50' 69)' (80' 99))
Duplicate Code,Microsoft.AspNet.SignalR.Infrastructure,SipHashBasedStringEqualityComparer,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\SipHashBasedStringEqualityComparer.cs,SipHash_2_4_UlongCast_ForcedInline,The method contains a code clone-set at the following line numbers (starting from the method definition): ((80' 112)' (94' 126))
Missing Default,Microsoft.AspNet.SignalR.Infrastructure,Connection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Core\Infrastructure\Connection.cs,ProcessCommand,The following switch statement is missing a default case: switch (command.CommandType) {  case CommandType.AddToGroup:  	{  		var name = command.Value;  		if (EventKeyAdded != null) {  			_groups.Add (name);  			EventKeyAdded (this' name);  		}  	}  	break;  case CommandType.RemoveFromGroup:  	{  		var name = command.Value;  		if (EventKeyRemoved != null) {  			_groups.Remove (name);  			EventKeyRemoved (this' name);  		}  	}  	break;  case CommandType.Disconnect:  	_disconnected = true;  	break;  case CommandType.Abort:  	_aborted = true;  	break;  }  
