Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.AspNet.SignalR.Client.Transports,ServerSentEventsTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\ServerSentEventsTransport.cs,OpenConnection,The method has 111 lines of code.
Complex Method,Microsoft.AspNet.SignalR.Client.Transports,TransportHelper,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\TransportHelper.cs,ProcessResponse,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.AspNet.SignalR.Infrastructure,UrlEncoder,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Infrastructure\UrlEncoder.cs,UrlEncode,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.AspNet.SignalR,TaskAsyncHelper,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Core\TaskAsyncHelper.cs,ContinueWithNotComplete,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.AspNet.SignalR.WebSockets,WebSocketHandler,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Owin45\WebSockets\WebSocketHandler.cs,ProcessWebSocketRequestAsync,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.AspNet.SignalR.WebSockets,WebSocketMessageReader,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Owin45\WebSockets\WebSocketMessageReader.cs,ReadMessageAsync,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.AspNet.SignalR.WebSockets,WebSocketMessageReader,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Owin45\WebSockets\WebSocketMessageReader.cs,TryGetMessage,Cyclomatic complexity of the method is 12
Long Parameter List,Microsoft.AspNet.SignalR.Client.Http,DefaultHttpClient,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Http\DefaultHttpClient.cs,Post,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Client.Transports,PollingRequestHandler,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\LongPolling\PollingRequestHandler.cs,PollingRequestHandler,The method has 6 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Client.Transports,AutoTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\AutoTransport.cs,ResolveTransport,The method has 6 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Client.Transports,HttpBasedTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\HttpBasedTransport.cs,OnStart,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Client.Transports,LongPollingTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\LongPollingTransport.cs,OnStart,The method has 7 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Client.Transports,LongPollingTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\LongPollingTransport.cs,PollingSetup,The method has 10 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Client.Transports,ServerSentEventsTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\ServerSentEventsTransport.cs,OnStart,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Client.Transports,ServerSentEventsTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\ServerSentEventsTransport.cs,OpenConnection,The method has 17 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Infrastructure,CancellationTokenExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Core\Infrastructure\CancellationTokenExtensions.cs,SafeRegister,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.Infrastructure,TaskQueue,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Core\Infrastructure\TaskQueue.cs,Enqueue,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR,TaskAsyncHelper,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Core\TaskAsyncHelper.cs,Then,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR,TaskAsyncHelper,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Core\TaskAsyncHelper.cs,RunTaskSynchronously,The method has 5 parameters.
Long Parameter List,Microsoft.AspNet.SignalR.WebSockets,WebSocketHandler,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Owin45\WebSockets\WebSocketHandler.cs,ProcessWebSocketRequestAsync,The method has 5 parameters.
Long Identifier,Microsoft.AspNet.SignalR.Client.Transports,ServerSentEventsTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\ServerSentEventsTransport.cs,OpenConnection,The length of the parameter requestCancellationRegistration is 31.
Long Statement,Microsoft.AspNet.SignalR.Client,Connection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Connection.cs,VerifyProtocolVersion,The length of the statement  "	if (String.IsNullOrEmpty (versionString) || !TryParseVersion (versionString' out version) || !(version.Major == 1 && version.Minor == 2)) { " is 139.
Long Statement,Microsoft.AspNet.SignalR.Client,Connection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Connection.cs,VerifyProtocolVersion,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Error_IncompatibleProtocolVersion' "1.2"' versionString ?? "null")); " is 158.
Long Statement,Microsoft.AspNet.SignalR.Client,Connection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Connection.cs,Send,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Error_StartMustBeCalledBeforeDataCanBeSent)); " is 135.
Long Statement,Microsoft.AspNet.SignalR.Client,Connection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Connection.cs,Send,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Error_ConnectionHasNotBeenEstablished)); " is 130.
Long Statement,Microsoft.AspNet.SignalR.Client,Connection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Connection.cs,Trace,The length of the statement  "			_traceWriter.WriteLine (DateTime.UtcNow.ToString ("HH:mm:ss.fffffff"' CultureInfo.InvariantCulture) + " - " + (ConnectionId ?? "null") + " - " + format' args); " is 159.
Long Statement,Microsoft.AspNet.SignalR.Client,Connection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Connection.cs,PrepareRequest,The length of the statement  "	            // Useragent is not possible to set with Silverlight' not on the UserAgent property of the request nor in the Headers key/value in the request" is 142.
Long Statement,Microsoft.AspNet.SignalR.Client,HeartbeatMonitor,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\HeartBeatMonitor.cs,Start,The length of the statement  "	_timer = new Timer (_ => Beat ()' state: null' dueTime: _connection.KeepAliveData.CheckInterval' period: _connection.KeepAliveData.CheckInterval); " is 146.
Long Statement,Microsoft.AspNet.SignalR.Client.Http,HttpHelper,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Http\HttpHelper.cs,GetHttpResponseAsync,The length of the statement  "		return Task.Factory.FromAsync<HttpWebResponse> (request.BeginGetResponse' ar => (HttpWebResponse)request.EndGetResponse (ar)' null); " is 132.
Long Statement,Microsoft.AspNet.SignalR.Client.Http,HttpHelper,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Http\HttpHelper.cs,PostInternal,The length of the statement  "	return request.GetHttpRequestStreamAsync ().Then (stream => stream.WriteAsync (buffer).Then (() => stream.Dispose ())).Then (() => request.GetHttpResponseAsync ()); " is 164.
Long Statement,Microsoft.AspNet.SignalR.Client.Hubs,HubConnection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubConnection.cs,CreateHubProxy,The length of the statement  "		throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Error_ProxiesCannotBeAddedConnectionStarted)); " is 136.
Long Statement,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The length of the statement  "		onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer)); " is 146.
Long Statement,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The length of the statement  "		onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer)' Convert<T4> (args [3]' proxy.JsonSerializer)); " is 192.
Long Statement,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The length of the statement  "		onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer)' Convert<T4> (args [3]' proxy.JsonSerializer)' Convert<T5> (args [4]' proxy.JsonSerializer)); " is 238.
Long Statement,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The length of the statement  "		onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer)' Convert<T4> (args [3]' proxy.JsonSerializer)' Convert<T5> (args [4]' proxy.JsonSerializer)' Convert<T6> (args [5]' proxy.JsonSerializer)); " is 284.
Long Statement,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The length of the statement  "		onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer)' Convert<T4> (args [3]' proxy.JsonSerializer)' Convert<T5> (args [4]' proxy.JsonSerializer)' Convert<T6> (args [5]' proxy.JsonSerializer)' Convert<T7> (args [6]' proxy.JsonSerializer)); " is 330.
Long Statement,Microsoft.AspNet.SignalR.Client.Transports,HttpBasedTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\HttpBasedTransport.cs,Start,The length of the statement  "	OnStart (connection' data' disconnectToken' () => tcs.TrySetResult (null)' exception => tcs.TrySetException (exception)); " is 121.
Long Statement,Microsoft.AspNet.SignalR.Client.Transports,HttpBasedTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\HttpBasedTransport.cs,Send,The length of the statement  "	url += String.Format (CultureInfo.InvariantCulture' _sendQueryString' _transport' Uri.EscapeDataString (connection.ConnectionToken)' customQueryString); " is 152.
Long Statement,Microsoft.AspNet.SignalR.Client.Transports,HttpBasedTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\HttpBasedTransport.cs,Send,The length of the statement  "	return _httpClient.Post (url' connection.PrepareRequest' postData).Then (response => response.ReadAsString ()).Then (raw =>  { " is 126.
Long Statement,Microsoft.AspNet.SignalR.Client.Transports,HttpBasedTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\HttpBasedTransport.cs,Abort,The length of the statement  "			string url = connection.Url + "abort" + String.Format (CultureInfo.InvariantCulture' _sendQueryString' _transport' Uri.EscapeDataString (connection.ConnectionToken)' null); " is 172.
Long Statement,Microsoft.AspNet.SignalR.Client.Transports,ServerSentEventsTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\ServerSentEventsTransport.cs,OpenConnection,The length of the statement  "				// If we're not reconnecting' then we're starting the transport for the first time. Trigger callback only on first start. " is 121.
Long Statement,Microsoft.AspNet.SignalR.Client.Transports,TransportHelper,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\TransportHelper.cs,GetNegotiationResponse,The length of the statement  "	return httpClient.Get (negotiateUrl' connection.PrepareRequest).Then (response => response.ReadAsString ()).Then (raw =>  { " is 123.
Long Statement,Microsoft.AspNet.SignalR.Client.Transports,TransportHelper,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\TransportHelper.cs,GetNegotiationResponse,The length of the statement  "			throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Error_ServerNegotiationFailed)); " is 122.
Long Statement,Microsoft.AspNet.SignalR.Client.Transports,TransportHelper,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\TransportHelper.cs,GetReceiveQueryString,The length of the statement  "	qsBuilder.Append ("?transport=" + transport).Append ("&connectionToken=" + Uri.EscapeDataString (connection.ConnectionToken)); " is 126.
Long Statement,Microsoft.AspNet.SignalR.Client.Transports,WebSocketTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\Transports\WebSocketTransport.cs,OnOpen,The length of the statement  "	if (!_startTcs.TrySetResult (null) && _connectionInfo.Connection.ChangeState (ConnectionState.Reconnecting' ConnectionState.Connected)) { " is 137.
Long Statement,Microsoft.AspNet.SignalR.Infrastructure,CancellationTokenExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Core\Infrastructure\CancellationTokenExtensions.cs,SafeRegister,The length of the statement  "	CancellationTokenRegistration registration = cancellationToken.Register (s => Cancel (s)' callbackWrapper' useSynchronizationContext: false); " is 141.
Long Statement,Microsoft.AspNet.SignalR.WebSockets,WebSocketHandler,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Owin45\WebSockets\WebSocketHandler.cs,SendAsync,The length of the statement  "		return context.Handler.WebSocket.SendAsync (context.Message' context.MessageType' context.EndOfMessage' CancellationToken.None); " is 128.
Long Statement,Microsoft.AspNet.SignalR.WebSockets,WebSocketHandler,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Owin45\WebSockets\WebSocketHandler.cs,ProcessWebSocketRequestAsync,The length of the statement  "		return WebSocketMessageReader.ReadMessageAsync (context.WebSocket' context.BufferSize' context.MaxIncomingMessageSize' context.DisconnectToken); " is 144.
Long Statement,Microsoft.AspNet.SignalR.WebSockets,WebSocketHandler,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Owin45\WebSockets\WebSocketHandler.cs,IsFatalException,The length of the statement  "		// These are the three error codes we've seen in testing which can be caused by the TCP connection going away unexpectedly. " is 123.
Long Statement,Microsoft.AspNet.SignalR.WebSockets,WebSocketMessageReader,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Owin45\WebSockets\WebSocketMessageReader.cs,ReadMessageAsync,The length of the statement  "	WebSocketReceiveResult receiveResult = await webSocket.ReceiveAsync (_emptyArraySegment' disconnectToken).ConfigureAwait (continueOnCapturedContext: false); " is 156.
Long Statement,Microsoft.AspNet.SignalR.WebSockets,WebSocketMessageReader,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Owin45\WebSockets\WebSocketMessageReader.cs,ReadMessageAsync,The length of the statement  "	receiveResult = await webSocket.ReceiveAsync (arraySegment' disconnectToken).ConfigureAwait (continueOnCapturedContext: false); " is 127.
Long Statement,Microsoft.AspNet.SignalR.WebSockets,WebSocketMessageReader,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Owin45\WebSockets\WebSocketMessageReader.cs,ReadMessageAsync,The length of the statement  "			receiveResult = await webSocket.ReceiveAsync (arraySegment' disconnectToken).ConfigureAwait (continueOnCapturedContext: false); " is 127.
Complex Conditional,Microsoft.AspNet.SignalR.Client,Connection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Connection.cs,VerifyProtocolVersion,The conditional expression  "String.IsNullOrEmpty (versionString) || !TryParseVersion (versionString' out version) || !(version.Major == 1 && version.Minor == 2)"  is complex.
Complex Conditional,Microsoft.AspNet.SignalR.Infrastructure,UrlEncoder,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Infrastructure\UrlEncoder.cs,IsUrlSafeChar,The conditional expression  "ch >= 'a' && ch <= 'z' || ch >= 'A' && ch <= 'Z' || ch >= '0' && ch <= '9'"  is complex.
Magic Number,Microsoft.AspNet.SignalR.Client,Connection,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Connection.cs,VerifyProtocolVersion,The following statement contains a magic number: if (String.IsNullOrEmpty (versionString) || !TryParseVersion (versionString' out version) || !(version.Major == 1 && version.Minor == 2)) {  	throw new InvalidOperationException (String.Format (CultureInfo.CurrentCulture' Resources.Error_IncompatibleProtocolVersion' "1.2"' versionString ?? "null"));  }  
Magic Number,Microsoft.AspNet.SignalR.Client,KeepAliveData,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\KeepAliveData.cs,KeepAliveData,The following statement contains a magic number: CheckInterval = TimeSpan.FromTicks ((Timeout.Ticks - TimeoutWarning.Ticks) / 3);  
Magic Number,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The following statement contains a magic number: onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer));  
Magic Number,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The following statement contains a magic number: onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer)' Convert<T4> (args [3]' proxy.JsonSerializer));  
Magic Number,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The following statement contains a magic number: onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer)' Convert<T4> (args [3]' proxy.JsonSerializer));  
Magic Number,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The following statement contains a magic number: onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer)' Convert<T4> (args [3]' proxy.JsonSerializer)' Convert<T5> (args [4]' proxy.JsonSerializer));  
Magic Number,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The following statement contains a magic number: onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer)' Convert<T4> (args [3]' proxy.JsonSerializer)' Convert<T5> (args [4]' proxy.JsonSerializer));  
Magic Number,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The following statement contains a magic number: onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer)' Convert<T4> (args [3]' proxy.JsonSerializer)' Convert<T5> (args [4]' proxy.JsonSerializer));  
Magic Number,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The following statement contains a magic number: onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer)' Convert<T4> (args [3]' proxy.JsonSerializer)' Convert<T5> (args [4]' proxy.JsonSerializer)' Convert<T6> (args [5]' proxy.JsonSerializer));  
Magic Number,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The following statement contains a magic number: onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer)' Convert<T4> (args [3]' proxy.JsonSerializer)' Convert<T5> (args [4]' proxy.JsonSerializer)' Convert<T6> (args [5]' proxy.JsonSerializer));  
Magic Number,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The following statement contains a magic number: onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer)' Convert<T4> (args [3]' proxy.JsonSerializer)' Convert<T5> (args [4]' proxy.JsonSerializer)' Convert<T6> (args [5]' proxy.JsonSerializer));  
Magic Number,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The following statement contains a magic number: onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer)' Convert<T4> (args [3]' proxy.JsonSerializer)' Convert<T5> (args [4]' proxy.JsonSerializer)' Convert<T6> (args [5]' proxy.JsonSerializer));  
Magic Number,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The following statement contains a magic number: onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer)' Convert<T4> (args [3]' proxy.JsonSerializer)' Convert<T5> (args [4]' proxy.JsonSerializer)' Convert<T6> (args [5]' proxy.JsonSerializer)' Convert<T7> (args [6]' proxy.JsonSerializer));  
Magic Number,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The following statement contains a magic number: onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer)' Convert<T4> (args [3]' proxy.JsonSerializer)' Convert<T5> (args [4]' proxy.JsonSerializer)' Convert<T6> (args [5]' proxy.JsonSerializer)' Convert<T7> (args [6]' proxy.JsonSerializer));  
Magic Number,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The following statement contains a magic number: onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer)' Convert<T4> (args [3]' proxy.JsonSerializer)' Convert<T5> (args [4]' proxy.JsonSerializer)' Convert<T6> (args [5]' proxy.JsonSerializer)' Convert<T7> (args [6]' proxy.JsonSerializer));  
Magic Number,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The following statement contains a magic number: onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer)' Convert<T4> (args [3]' proxy.JsonSerializer)' Convert<T5> (args [4]' proxy.JsonSerializer)' Convert<T6> (args [5]' proxy.JsonSerializer)' Convert<T7> (args [6]' proxy.JsonSerializer));  
Magic Number,Microsoft.AspNet.SignalR.Client.Hubs,HubProxyExtensions,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Hubs\HubProxyExtensions.cs,On,The following statement contains a magic number: onData (Convert<T1> (args [0]' proxy.JsonSerializer)' Convert<T2> (args [1]' proxy.JsonSerializer)' Convert<T3> (args [2]' proxy.JsonSerializer)' Convert<T4> (args [3]' proxy.JsonSerializer)' Convert<T5> (args [4]' proxy.JsonSerializer)' Convert<T6> (args [5]' proxy.JsonSerializer)' Convert<T7> (args [6]' proxy.JsonSerializer));  
Magic Number,Microsoft.AspNet.SignalR.Client.Transports,AsyncStreamReader,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\AsyncStreamReader.cs,Start,The following statement contains a magic number: if (Interlocked.CompareExchange (ref _reading' State.Processing' State.Initial) == State.Initial) {  	_setOpened = () =>  {  		OnOpened ();  	};  	// FIX: Potential memory leak if Close is called between the CompareExchange and here.  	_readBuffer = new byte[4096];  	// Start the process loop  	Process ();  }  
Magic Number,Microsoft.AspNet.SignalR.Client.Transports,AsyncStreamReader,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\AsyncStreamReader.cs,Start,The following statement contains a magic number: _readBuffer = new byte[4096];  
Magic Number,Microsoft.AspNet.SignalR.Client.Transports,LongPollingTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\LongPollingTransport.cs,LongPollingTransport,The following statement contains a magic number: ReconnectDelay = TimeSpan.FromSeconds (5);  
Magic Number,Microsoft.AspNet.SignalR.Client.Transports,LongPollingTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\LongPollingTransport.cs,LongPollingTransport,The following statement contains a magic number: ErrorDelay = TimeSpan.FromSeconds (2);  
Magic Number,Microsoft.AspNet.SignalR.Client.Transports,LongPollingTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\LongPollingTransport.cs,LongPollingTransport,The following statement contains a magic number: ConnectDelay = TimeSpan.FromSeconds (2);  
Magic Number,Microsoft.AspNet.SignalR.Client.Transports,ServerSentEventsTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\ServerSentEventsTransport.cs,ServerSentEventsTransport,The following statement contains a magic number: ReconnectDelay = TimeSpan.FromSeconds (2);  
Magic Number,Microsoft.AspNet.SignalR.Client.Transports,ServerSentEventsTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Transports\ServerSentEventsTransport.cs,ServerSentEventsTransport,The following statement contains a magic number: ConnectionTimeout = TimeSpan.FromSeconds (5);  
Magic Number,Microsoft.AspNet.SignalR.Client.Transports,WebSocketTransport,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\Transports\WebSocketTransport.cs,WebSocketTransport,The following statement contains a magic number: ReconnectDelay = TimeSpan.FromSeconds (2);  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,UrlEncoder,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Infrastructure\UrlEncoder.cs,UrlEncode,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	byte b = bytes [offset + i];  	char ch = (char)b;  	if (IsUrlSafeChar (ch)) {  		expandedBytes [pos++] = b;  	}  	else if (ch == ' ') {  		expandedBytes [pos++] = (byte)'+';  	}  	else {  		expandedBytes [pos++] = (byte)'%';  		expandedBytes [pos++] = (byte)IntToHex ((b >> 4) & 0xf);  		expandedBytes [pos++] = (byte)IntToHex (b & 0x0f);  	}  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,UrlEncoder,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Infrastructure\UrlEncoder.cs,UrlEncode,The following statement contains a magic number: if (IsUrlSafeChar (ch)) {  	expandedBytes [pos++] = b;  }  else if (ch == ' ') {  	expandedBytes [pos++] = (byte)'+';  }  else {  	expandedBytes [pos++] = (byte)'%';  	expandedBytes [pos++] = (byte)IntToHex ((b >> 4) & 0xf);  	expandedBytes [pos++] = (byte)IntToHex (b & 0x0f);  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,UrlEncoder,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Infrastructure\UrlEncoder.cs,UrlEncode,The following statement contains a magic number: if (ch == ' ') {  	expandedBytes [pos++] = (byte)'+';  }  else {  	expandedBytes [pos++] = (byte)'%';  	expandedBytes [pos++] = (byte)IntToHex ((b >> 4) & 0xf);  	expandedBytes [pos++] = (byte)IntToHex (b & 0x0f);  }  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,UrlEncoder,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Infrastructure\UrlEncoder.cs,UrlEncode,The following statement contains a magic number: expandedBytes [pos++] = (byte)IntToHex ((b >> 4) & 0xf);  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,UrlEncoder,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Infrastructure\UrlEncoder.cs,IntToHex,The following statement contains a magic number: if (n <= 9)  	return (char)(n + (int)'0');  else  	return (char)(n - 10 + (int)'a');  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,UrlEncoder,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Infrastructure\UrlEncoder.cs,IntToHex,The following statement contains a magic number: if (n <= 9)  	return (char)(n + (int)'0');  else  	return (char)(n - 10 + (int)'a');  
Magic Number,Microsoft.AspNet.SignalR.Infrastructure,UrlEncoder,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Infrastructure\UrlEncoder.cs,IntToHex,The following statement contains a magic number: return (char)(n - 10 + (int)'a');  
Missing Default,Microsoft.AspNet.SignalR.Infrastructure,UrlEncoder,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Client\Infrastructure\UrlEncoder.cs,IsUrlSafeChar,The following switch statement is missing a default case: switch (ch) {  case '-':  case '_':  case '.':  case '!':  case '*':  case '(':  case ')':  	return true;  }  
Missing Default,Microsoft.AspNet.SignalR.WebSockets,WebSocketHandler,C:\repos\moljac_Xamarin.SignalR.1.1.4\src\Microsoft.AspNet.SignalR.Client45\..\Microsoft.AspNet.SignalR.Owin45\WebSockets\WebSocketHandler.cs,IsFatalException,The following switch statement is missing a default case: switch ((uint)ce.ErrorCode) {  // These are the three error codes we've seen in testing which can be caused by the TCP connection going away unexpectedly.  case 0x800703e3:  case 0x800704cd:  case 0x80070026:  	return false;  }  
