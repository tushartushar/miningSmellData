Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SimpleOrderRouting.Tests.Infra,InvestorInstructionDtoTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\InvestorInstructionDtoTests.cs,Should_rely_on_values_for_equality,The length of the statement  "            var firstInstruction = new InvestorInstructionDto(dtoIdentifier' Way' quantity' price' allowPartialExecution' goodTill); " is 120.
Long Statement,SimpleOrderRouting.Tests.Infra,InvestorInstructionDtoTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\InvestorInstructionDtoTests.cs,Should_rely_on_values_for_equality,The length of the statement  "            var secondIdenticalInstruction = new InvestorInstructionDto(dtoIdentifier' Way' quantity' price' allowPartialExecution' goodTill); " is 130.
Long Statement,SimpleOrderRouting.Tests.Infra,InvestorInstructionDtoTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\InvestorInstructionDtoTests.cs,Should_rely_on_values_for_equality,The length of the statement  "            var slightlyDifferentInstruction = new InvestorInstruction(investorInstructionIdentifier' Way' quantity' price' allowPartialExecution' goodTill); " is 145.
Long Statement,SimpleOrderRouting.Tests,InvestorInstructionTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\InvestorInstructionTests.cs,Should_rely_on_values_for_equality,The length of the statement  "            var firstInstruction = new InvestorInstruction(investorInstructionIdentifier' Way' quantity' price' allowPartialExecution' goodTill); " is 133.
Long Statement,SimpleOrderRouting.Tests,InvestorInstructionTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\InvestorInstructionTests.cs,Should_rely_on_values_for_equality,The length of the statement  "            var secondIdenticalInstruction = new InvestorInstruction(investorInstructionIdentifier' Way' quantity' price' allowPartialExecution' goodTill); " is 143.
Long Statement,SimpleOrderRouting.Tests,InvestorInstructionTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\InvestorInstructionTests.cs,Should_rely_on_values_for_equality,The length of the statement  "            var slightlyDifferentInstruction = new InvestorInstruction(investorInstructionIdentifier' Way' quantity' price' allowPartialExecution' goodTill); " is 145.
Long Statement,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_odd,The length of the statement  "            var rejectingMarket = new ApiMarketGateway("CME (Chicago)"' sellQuantity: 50' sellPrice: 100M' orderPredicate: _ => false); " is 123.
Long Statement,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_odd,The length of the statement  "            var investorInstruction = new InvestorInstruction(new InvestorInstructionIdentifierDto().Value' Way.Buy' quantity: 50' price: 100M' goodTill: DateTime.Now.AddMinutes(5)); " is 170.
Long Statement,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_odd,The length of the statement  "            var marketSweepSolver = new MarketSweepSolver(new MarketSnapshotProvider(marketGatewayAdapter.GetAvailableMarketNames()' marketGatewayAdapter)); " is 144.
Long Statement,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_1,The length of the statement  "            var rejectingMarket = new ApiMarketGateway("CME (Chicago)"' sellQuantity: 50' sellPrice: 100M' orderPredicate: _ => false); " is 123.
Long Statement,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_1,The length of the statement  "            var investorInstruction = new InvestorInstruction(new InvestorInstructionIdentifierDto().Value' Way.Buy' quantity: 1' price: 100M' goodTill: DateTime.Now.AddMinutes(5)); " is 169.
Long Statement,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_1,The length of the statement  "            var marketSweepSolver = new MarketSweepSolver(new MarketSnapshotProvider(marketGatewayAdapter.GetAvailableMarketNames()' marketGatewayAdapter)); " is 144.
Long Statement,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_failed_when_Order_exceeds_all_Market_capacity_and_partial_execution_not_allowed,The length of the statement  "            var investorInstructionDto = new InvestorInstructionDto(Way.Buy' quantity: 125' price: 100M' allowPartialExecution: false); " is 123.
Long Statement,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_failed_when_Order_exceeds_all_Market_capacity_and_partial_execution_not_allowed,The length of the statement  "            investorInstructionAdapter.Route(investorInstructionDto' (args) => { instructionExecuted = args; }' (args) => { instructionFailed = args; }); " is 141.
Long Statement,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_stop_sending_Orders_to_a_Market_after_3_rejects,The length of the statement  "            var rejectingMarket = new ApiMarketGateway("LSE (London)"' sellQuantity: 100' sellPrice: 100M' orderPredicate : order => false); " is 128.
Long Statement,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_stop_sending_Orders_to_a_Market_after_3_rejects,The length of the statement  "            var investorInstructionDto = new InvestorInstructionDto(Way.Buy' quantity: 50' price: 100M' goodTill: DateTime.Now.AddMinutes(5)); " is 130.
Long Statement,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_succeeded_when_liquidity_is_available_even_if_one_Market_rejects,The length of the statement  "            var rejectingMarket = new ApiMarketGateway("LSE (London)"' sellQuantity: 50' sellPrice: 100M' orderPredicate: _ => false); " is 122.
Long Statement,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_succeeded_when_liquidity_is_available_even_if_one_Market_rejects,The length of the statement  "            var investorInstructionDto = new InvestorInstructionDto(Way.Buy' quantity: 50' price: 100M' goodTill: DateTime.Now.AddMinutes(5)); " is 130.
Long Statement,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_succeeded_when_liquidity_is_available_even_if_one_Market_rejects,The length of the statement  "            investorInstructionAdapter.Route(investorInstructionDto' (args) => { instructionExecuted = args; }' (args) => { instructionFailed = args; }); " is 141.
Magic Number,SimpleOrderRouting.Tests.Infra,InvestorInstructionDtoTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\InvestorInstructionDtoTests.cs,Should_rely_on_values_for_equality,The following statement contains a magic number: var investorInstructionIdentifier = 42;
Magic Number,SimpleOrderRouting.Tests.Infra,InvestorInstructionDtoTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\InvestorInstructionDtoTests.cs,Should_rely_on_values_for_equality,The following statement contains a magic number: var price = 23.3M;
Magic Number,SimpleOrderRouting.Tests.Infra,InvestorInstructionDtoTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\InvestorInstructionDtoTests.cs,Should_rely_on_values_for_unicity,The following statement contains a magic number: var instruction = new InvestorInstructionDto(dtoIdentifier' Way.Buy' 1' 1.1M' true' goodTill);
Magic Number,SimpleOrderRouting.Tests.Infra,InvestorInstructionDtoTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\InvestorInstructionDtoTests.cs,Should_rely_on_values_for_unicity,The following statement contains a magic number: var identicalInstruction = new InvestorInstructionDto(dtoIdentifier' Way.Buy' 1' 1.1M' true' goodTill);
Magic Number,SimpleOrderRouting.Tests.Infra,InvestorInstructionDtoTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\InvestorInstructionDtoTests.cs,Should_rely_on_values_for_unicity,The following statement contains a magic number: dictionary[instruction] = 2;
Magic Number,SimpleOrderRouting.Tests.Infra,InvestorInstructionDtoTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\InvestorInstructionDtoTests.cs,Should_rely_on_values_for_unicity,The following statement contains a magic number: dictionary[identicalInstruction] = 3;
Magic Number,SimpleOrderRouting.Tests.Infra,InvestorInstructionDtoTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\InvestorInstructionDtoTests.cs,Should_rely_on_values_for_unicity,The following statement contains a magic number: Check.That(dictionary[instruction]).IsEqualTo(3);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_decrease_available_quantity_for_the_market_when_an_order_is_sent,The following statement contains a magic number: var marketGateway = new ApiMarketGateway(marketName: "euronext"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_decrease_available_quantity_for_the_market_when_an_order_is_sent,The following statement contains a magic number: var marketGateway = new ApiMarketGateway(marketName: "euronext"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_decrease_available_quantity_for_the_market_when_an_order_is_sent,The following statement contains a magic number: var order = marketGateway.CreateMarketOrder(ApiMarketWay.Buy' quantity: 10);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_decrease_available_quantity_for_the_market_when_an_order_is_sent,The following statement contains a magic number: Check.That(marketGateway.SellQuantity).IsEqualTo(40);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_failed_to_execute_order_when_quantity_is_excessive,The following statement contains a magic number: var marketGateway = new ApiMarketGateway(marketName: "euronext"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_failed_to_execute_order_when_quantity_is_excessive,The following statement contains a magic number: var marketGateway = new ApiMarketGateway(marketName: "euronext"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_failed_to_execute_order_when_quantity_is_excessive,The following statement contains a magic number: var order = marketGateway.CreateMarketOrder(ApiMarketWay.Buy' quantity: 100);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_Notify_MarketOrder_execution,The following statement contains a magic number: var marketGateway = new ApiMarketGateway(marketName: "euronext"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_Notify_MarketOrder_execution,The following statement contains a magic number: var marketGateway = new ApiMarketGateway(marketName: "euronext"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_Notify_MarketOrder_execution,The following statement contains a magic number: var order = marketGateway.CreateMarketOrder(ApiMarketWay.Buy' quantity: 10);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_Notify_MarketOrder_execution,The following statement contains a magic number: Check.That(marketGateway.SellQuantity).IsEqualTo(40);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_Notify_LimitOrder_execution,The following statement contains a magic number: var marketGateway = new ApiMarketGateway(marketName: "euronext"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_Notify_LimitOrder_execution,The following statement contains a magic number: var marketGateway = new ApiMarketGateway(marketName: "euronext"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_Notify_LimitOrder_execution,The following statement contains a magic number: var order = marketGateway.CreateLimitOrder(ApiMarketWay.Buy' price: 100M' quantity: 10' allowPartial: false);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_Notify_LimitOrder_execution,The following statement contains a magic number: var order = marketGateway.CreateLimitOrder(ApiMarketWay.Buy' price: 100M' quantity: 10' allowPartial: false);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_Notify_LimitOrder_execution,The following statement contains a magic number: Check.That(marketGateway.SellQuantity).IsEqualTo(40);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_not_execute_LimitOrder_when_price_is_too_high,The following statement contains a magic number: var marketGateway = new ApiMarketGateway(marketName: "euronext"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_not_execute_LimitOrder_when_price_is_too_high,The following statement contains a magic number: var marketGateway = new ApiMarketGateway(marketName: "euronext"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_not_execute_LimitOrder_when_price_is_too_high,The following statement contains a magic number: var order = marketGateway.CreateLimitOrder(ApiMarketWay.Buy' price: 101M' quantity: 10' allowPartial: false);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_not_execute_LimitOrder_when_price_is_too_high,The following statement contains a magic number: var order = marketGateway.CreateLimitOrder(ApiMarketWay.Buy' price: 101M' quantity: 10' allowPartial: false);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_not_execute_LimitOrder_when_price_is_too_high,The following statement contains a magic number: Check.That(marketGateway.SellQuantity).IsEqualTo(50);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_support_partial_execution_for_LimitOrder,The following statement contains a magic number: var marketGateway = new ApiMarketGateway(marketName: "euronext"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_support_partial_execution_for_LimitOrder,The following statement contains a magic number: var marketGateway = new ApiMarketGateway(marketName: "euronext"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_support_partial_execution_for_LimitOrder,The following statement contains a magic number: var order = marketGateway.CreateLimitOrder(ApiMarketWay.Buy' price: 100M' quantity: 110' allowPartial: true);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_support_partial_execution_for_LimitOrder,The following statement contains a magic number: var order = marketGateway.CreateLimitOrder(ApiMarketWay.Buy' price: 100M' quantity: 110' allowPartial: true);
Magic Number,SimpleOrderRouting.Tests.Infra,ApiMarketGatewayTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\Infra\ApiMarketGatewayTests.cs,Should_support_partial_execution_for_LimitOrder,The following statement contains a magic number: Check.That(execQuantity).IsEqualTo(50);
Magic Number,SimpleOrderRouting.Tests,InvestorInstructionTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\InvestorInstructionTests.cs,Should_rely_on_values_for_equality,The following statement contains a magic number: var investorInstructionIdentifier = 42;
Magic Number,SimpleOrderRouting.Tests,InvestorInstructionTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\InvestorInstructionTests.cs,Should_rely_on_values_for_equality,The following statement contains a magic number: var price = 23.3M;
Magic Number,SimpleOrderRouting.Tests,InvestorInstructionTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\InvestorInstructionTests.cs,Should_rely_on_values_for_unicity,The following statement contains a magic number: var instruction = new InvestorInstruction(1' Way.Buy' 1' 1.1M' true' goodTill);
Magic Number,SimpleOrderRouting.Tests,InvestorInstructionTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\InvestorInstructionTests.cs,Should_rely_on_values_for_unicity,The following statement contains a magic number: var identicalInstruction = new InvestorInstruction(1' Way.Buy' 1' 1.1M' true' goodTill);
Magic Number,SimpleOrderRouting.Tests,InvestorInstructionTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\InvestorInstructionTests.cs,Should_rely_on_values_for_unicity,The following statement contains a magic number: dictionary[instruction] = 2;
Magic Number,SimpleOrderRouting.Tests,InvestorInstructionTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\InvestorInstructionTests.cs,Should_rely_on_values_for_unicity,The following statement contains a magic number: dictionary[identicalInstruction] = 3;
Magic Number,SimpleOrderRouting.Tests,InvestorInstructionTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\InvestorInstructionTests.cs,Should_rely_on_values_for_unicity,The following statement contains a magic number: Check.That(dictionary[instruction]).IsEqualTo(3);
Magic Number,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_odd,The following statement contains a magic number: var marketA = new ApiMarketGateway("NYSE (New York)"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_odd,The following statement contains a magic number: var marketA = new ApiMarketGateway("NYSE (New York)"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_odd,The following statement contains a magic number: var rejectingMarket = new ApiMarketGateway("CME (Chicago)"' sellQuantity: 50' sellPrice: 100M' orderPredicate: _ => false);
Magic Number,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_odd,The following statement contains a magic number: var rejectingMarket = new ApiMarketGateway("CME (Chicago)"' sellQuantity: 50' sellPrice: 100M' orderPredicate: _ => false);
Magic Number,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_odd,The following statement contains a magic number: var investorInstruction = new InvestorInstruction(new InvestorInstructionIdentifierDto().Value' Way.Buy' quantity: 50' price: 100M' goodTill: DateTime.Now.AddMinutes(5));
Magic Number,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_odd,The following statement contains a magic number: var investorInstruction = new InvestorInstruction(new InvestorInstructionIdentifierDto().Value' Way.Buy' quantity: 50' price: 100M' goodTill: DateTime.Now.AddMinutes(5));
Magic Number,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_odd,The following statement contains a magic number: var investorInstruction = new InvestorInstruction(new InvestorInstructionIdentifierDto().Value' Way.Buy' quantity: 50' price: 100M' goodTill: DateTime.Now.AddMinutes(5));
Magic Number,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_odd,The following statement contains a magic number: Check.That(orderBasket.OrdersDescriptions.Extracting("Quantity")).ContainsExactly(25' 25);
Magic Number,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_odd,The following statement contains a magic number: Check.That(orderBasket.OrdersDescriptions.Extracting("Quantity")).ContainsExactly(25' 25);
Magic Number,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_1,The following statement contains a magic number: var marketA = new ApiMarketGateway("NYSE (New York)"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_1,The following statement contains a magic number: var marketA = new ApiMarketGateway("NYSE (New York)"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_1,The following statement contains a magic number: var rejectingMarket = new ApiMarketGateway("CME (Chicago)"' sellQuantity: 50' sellPrice: 100M' orderPredicate: _ => false);
Magic Number,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_1,The following statement contains a magic number: var rejectingMarket = new ApiMarketGateway("CME (Chicago)"' sellQuantity: 50' sellPrice: 100M' orderPredicate: _ => false);
Magic Number,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_1,The following statement contains a magic number: var investorInstruction = new InvestorInstruction(new InvestorInstructionIdentifierDto().Value' Way.Buy' quantity: 1' price: 100M' goodTill: DateTime.Now.AddMinutes(5));
Magic Number,SimpleOrderRouting.Tests,MarketSweepSolverTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\MarketSweepSolverTests.cs,Should_Solve_with_2_markets_when_asked_quantity_is_1,The following statement contains a magic number: var investorInstruction = new InvestorInstruction(new InvestorInstructionIdentifierDto().Value' Way.Buy' quantity: 1' price: 100M' goodTill: DateTime.Now.AddMinutes(5));
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_instruction_when_there_is_enough_liquidity_on_one_Market,The following statement contains a magic number: var marketA = new ApiMarketGateway("NYSE (New York)"' sellQuantity: 150' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_instruction_when_there_is_enough_liquidity_on_one_Market,The following statement contains a magic number: var marketA = new ApiMarketGateway("NYSE (New York)"' sellQuantity: 150' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_instruction_when_there_is_enough_liquidity_on_one_Market,The following statement contains a magic number: var marketB = new ApiMarketGateway("CME (Chicago)"' sellQuantity: 55' sellPrice: 101M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_instruction_when_there_is_enough_liquidity_on_one_Market,The following statement contains a magic number: var marketB = new ApiMarketGateway("CME (Chicago)"' sellQuantity: 55' sellPrice: 101M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_instruction_when_there_is_enough_liquidity_on_one_Market,The following statement contains a magic number: var investorInstructionDto = new InvestorInstructionDto(Way.Buy' quantity: 125' price: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_instruction_when_there_is_enough_liquidity_on_one_Market,The following statement contains a magic number: var investorInstructionDto = new InvestorInstructionDto(Way.Buy' quantity: 125' price: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_instruction_when_there_is_enough_liquidity_on_one_Market,The following statement contains a magic number: Check.That(instructionExecuted).HasFieldsWithSameValues(new { Way = Way.Buy' Quantity = 125' Price = 100M });
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_instruction_when_there_is_enough_liquidity_on_one_Market,The following statement contains a magic number: Check.That(instructionExecuted).HasFieldsWithSameValues(new { Way = Way.Buy' Quantity = 125' Price = 100M });
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_instruction_when_there_is_enough_liquidity_on_one_Market,The following statement contains a magic number: Check.That(marketA.SellQuantity).IsEqualTo(25);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_instruction_when_there_is_enough_liquidity_on_one_Market,The following statement contains a magic number: Check.That(marketB.SellQuantity).IsEqualTo(55);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_failed_when_Order_exceeds_all_Market_capacity_and_partial_execution_not_allowed,The following statement contains a magic number: var marketA = new ApiMarketGateway("NYSE (New York)"' sellQuantity: 15' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_failed_when_Order_exceeds_all_Market_capacity_and_partial_execution_not_allowed,The following statement contains a magic number: var marketA = new ApiMarketGateway("NYSE (New York)"' sellQuantity: 15' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_failed_when_Order_exceeds_all_Market_capacity_and_partial_execution_not_allowed,The following statement contains a magic number: var marketB = new ApiMarketGateway("CME (Chicago)"' sellQuantity: 55' sellPrice: 101M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_failed_when_Order_exceeds_all_Market_capacity_and_partial_execution_not_allowed,The following statement contains a magic number: var marketB = new ApiMarketGateway("CME (Chicago)"' sellQuantity: 55' sellPrice: 101M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_failed_when_Order_exceeds_all_Market_capacity_and_partial_execution_not_allowed,The following statement contains a magic number: var investorInstructionDto = new InvestorInstructionDto(Way.Buy' quantity: 125' price: 100M' allowPartialExecution: false);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_failed_when_Order_exceeds_all_Market_capacity_and_partial_execution_not_allowed,The following statement contains a magic number: var investorInstructionDto = new InvestorInstructionDto(Way.Buy' quantity: 125' price: 100M' allowPartialExecution: false);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_failed_when_Order_exceeds_all_Market_capacity_and_partial_execution_not_allowed,The following statement contains a magic number: Check.That(marketA.SellQuantity).IsEqualTo(15);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_failed_when_Order_exceeds_all_Market_capacity_and_partial_execution_not_allowed,The following statement contains a magic number: Check.That(marketB.SellQuantity).IsEqualTo(55);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_stop_sending_Orders_to_a_Market_after_3_rejects,The following statement contains a magic number: var rejectingMarket = new ApiMarketGateway("LSE (London)"' sellQuantity: 100' sellPrice: 100M' orderPredicate : order => false);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_stop_sending_Orders_to_a_Market_after_3_rejects,The following statement contains a magic number: var rejectingMarket = new ApiMarketGateway("LSE (London)"' sellQuantity: 100' sellPrice: 100M' orderPredicate : order => false);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_stop_sending_Orders_to_a_Market_after_3_rejects,The following statement contains a magic number: var investorInstructionDto = new InvestorInstructionDto(Way.Buy' quantity: 50' price: 100M' goodTill: DateTime.Now.AddMinutes(5));
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_stop_sending_Orders_to_a_Market_after_3_rejects,The following statement contains a magic number: var investorInstructionDto = new InvestorInstructionDto(Way.Buy' quantity: 50' price: 100M' goodTill: DateTime.Now.AddMinutes(5));
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_stop_sending_Orders_to_a_Market_after_3_rejects,The following statement contains a magic number: var investorInstructionDto = new InvestorInstructionDto(Way.Buy' quantity: 50' price: 100M' goodTill: DateTime.Now.AddMinutes(5));
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_stop_sending_Orders_to_a_Market_after_3_rejects,The following statement contains a magic number: Check.That(rejectingMarket.TimesSent).IsEqualTo(3);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_stop_sending_Orders_to_a_Market_after_3_rejects,The following statement contains a magic number: Check.That(rejectingMarket.SellQuantity).IsEqualTo(100);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_succeeded_when_liquidity_is_available_even_if_one_Market_rejects,The following statement contains a magic number: var marketA = new ApiMarketGateway("NYSE (New York)"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_succeeded_when_liquidity_is_available_even_if_one_Market_rejects,The following statement contains a magic number: var marketA = new ApiMarketGateway("NYSE (New York)"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_succeeded_when_liquidity_is_available_even_if_one_Market_rejects,The following statement contains a magic number: var rejectingMarket = new ApiMarketGateway("LSE (London)"' sellQuantity: 50' sellPrice: 100M' orderPredicate: _ => false);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_succeeded_when_liquidity_is_available_even_if_one_Market_rejects,The following statement contains a magic number: var rejectingMarket = new ApiMarketGateway("LSE (London)"' sellQuantity: 50' sellPrice: 100M' orderPredicate: _ => false);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_succeeded_when_liquidity_is_available_even_if_one_Market_rejects,The following statement contains a magic number: var investorInstructionDto = new InvestorInstructionDto(Way.Buy' quantity: 50' price: 100M' goodTill: DateTime.Now.AddMinutes(5));
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_succeeded_when_liquidity_is_available_even_if_one_Market_rejects,The following statement contains a magic number: var investorInstructionDto = new InvestorInstructionDto(Way.Buy' quantity: 50' price: 100M' goodTill: DateTime.Now.AddMinutes(5));
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_succeeded_when_liquidity_is_available_even_if_one_Market_rejects,The following statement contains a magic number: var investorInstructionDto = new InvestorInstructionDto(Way.Buy' quantity: 50' price: 100M' goodTill: DateTime.Now.AddMinutes(5));
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_succeeded_when_liquidity_is_available_even_if_one_Market_rejects,The following statement contains a magic number: Check.That(rejectingMarket.SellQuantity).IsEqualTo(50);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Instruction_when_there_is_enough_liquidity_on_the_Markets,The following statement contains a magic number: var marketA = new ApiMarketGateway("NYSE (New York)"' sellQuantity: 100' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Instruction_when_there_is_enough_liquidity_on_the_Markets,The following statement contains a magic number: var marketA = new ApiMarketGateway("NYSE (New York)"' sellQuantity: 100' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Instruction_when_there_is_enough_liquidity_on_the_Markets,The following statement contains a magic number: var marketB = new ApiMarketGateway("CME (Chicago)"' sellQuantity: 55' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Instruction_when_there_is_enough_liquidity_on_the_Markets,The following statement contains a magic number: var marketB = new ApiMarketGateway("CME (Chicago)"' sellQuantity: 55' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Instruction_when_there_is_enough_liquidity_on_the_Markets,The following statement contains a magic number: var investorInstructionDto = new InvestorInstructionDto(Way.Buy' quantity: 125' price: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Instruction_when_there_is_enough_liquidity_on_the_Markets,The following statement contains a magic number: var investorInstructionDto = new InvestorInstructionDto(Way.Buy' quantity: 125' price: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Instruction_when_there_is_enough_liquidity_on_the_Markets,The following statement contains a magic number: Check.That(instructionExecuted).HasFieldsWithSameValues(new { Way = Way.Buy' Quantity = 125' Price = 100M });
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Instruction_when_there_is_enough_liquidity_on_the_Markets,The following statement contains a magic number: Check.That(instructionExecuted).HasFieldsWithSameValues(new { Way = Way.Buy' Quantity = 125' Price = 100M });
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Instruction_when_there_is_enough_liquidity_on_the_Markets,The following statement contains a magic number: Check.That(marketA.SellQuantity).IsEqualTo(19);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Instruction_when_there_is_enough_liquidity_on_the_Markets,The following statement contains a magic number: Check.That(marketB.SellQuantity).IsEqualTo(11);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Orders_on_weighted_average_of_available_quantities,The following statement contains a magic number: var marketA = new ApiMarketGateway("NYSE (New York)"' sellQuantity: 100' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Orders_on_weighted_average_of_available_quantities,The following statement contains a magic number: var marketA = new ApiMarketGateway("NYSE (New York)"' sellQuantity: 100' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Orders_on_weighted_average_of_available_quantities,The following statement contains a magic number: var marketB = new ApiMarketGateway("CME (Chicago)"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Orders_on_weighted_average_of_available_quantities,The following statement contains a magic number: var marketB = new ApiMarketGateway("CME (Chicago)"' sellQuantity: 50' sellPrice: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Orders_on_weighted_average_of_available_quantities,The following statement contains a magic number: var investorInstructionDto = new InvestorInstructionDto(Way.Buy' quantity: 75' price: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Orders_on_weighted_average_of_available_quantities,The following statement contains a magic number: var investorInstructionDto = new InvestorInstructionDto(Way.Buy' quantity: 75' price: 100M);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Orders_on_weighted_average_of_available_quantities,The following statement contains a magic number: Check.That(instructionExecuted).HasFieldsWithSameValues(new { Way = Way.Buy' Quantity = 75' Price = 100M });
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Orders_on_weighted_average_of_available_quantities,The following statement contains a magic number: Check.That(instructionExecuted).HasFieldsWithSameValues(new { Way = Way.Buy' Quantity = 75' Price = 100M });
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Orders_on_weighted_average_of_available_quantities,The following statement contains a magic number: Check.That(marketA.SellQuantity).IsEqualTo(50);
Magic Number,SimpleOrderRouting.Tests,SorAcceptanceTests,D:\research\architectureSmells\repos\Lunch-box_SimpleOrderRouting\CSharp\SimpleOrderRouting.Tests\SorAcceptanceTests.cs,Should_execute_Orders_on_weighted_average_of_available_quantities,The following statement contains a magic number: Check.That(marketB.SellQuantity).IsEqualTo(25);
