Implementation smell,Namespace,Class,File,Method,Description
Long Method,SimSharp,GenericPriorityQueue<TItem;TPriority>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,CascadeDown,The method has 106 lines of code.
Long Method,SimSharp,GenericPriorityQueue<TItem>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,CascadeDown,The method has 106 lines of code.
Complex Method,SimSharp,Report,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\Report.cs,DoUpdate,Cyclomatic complexity of the method is 10
Complex Method,SimSharp,Report,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\Report.cs,WriteHeader,Cyclomatic complexity of the method is 8
Complex Method,SimSharp,Report,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\Report.cs,WriteLastFigures,Cyclomatic complexity of the method is 9
Complex Method,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,UpdateTo,Cyclomatic complexity of the method is 8
Complex Method,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,Summarize,Cyclomatic complexity of the method is 9
Complex Method,SimSharp,Formatter,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Auxiliary\Formatter.cs,Format12,Cyclomatic complexity of the method is 8
Complex Method,SimSharp,Formatter,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Auxiliary\Formatter.cs,Format15,Cyclomatic complexity of the method is 8
Complex Method,SimSharp,GenericPriorityQueue<TItem;TPriority>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,CascadeDown,Cyclomatic complexity of the method is 14
Complex Method,SimSharp,GenericPriorityQueue<TItem>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,CascadeDown,Cyclomatic complexity of the method is 14
Complex Method,SimSharp,Process,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Events\Process.cs,Resume,Cyclomatic complexity of the method is 13
Long Parameter List,SimSharp,Timeout,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Events\Timeout.cs,Timeout,The method has 5 parameters. Parameters: environment' delay' value' isOk' priority
Long Parameter List,SimSharp,PreemptiveRequest,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Resources\Events\PreemptiveRequest.cs,PreemptiveRequest,The method has 5 parameters. Parameters: environment' callback' disposeCallback' priority' preempt
Long Statement,SimSharp,Report,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\Report.cs,Update,The length of the statement  "      if (updateType != UpdateType.Manual) throw new InvalidOperationException("Update may only be called in manual update mode."); " is 125.
Long Statement,SimSharp,Builder,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\Report.cs,Add,The length of the statement  "        instance.keys.Add(new Key { Name = name' Statistics = statistics' Measure = measure' TotalMeasures = CountSetBits((int)measure) }); " is 131.
Long Statement,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The length of the statement  "      var nozerostdev = nozero.Count > 2 ? Math.Sqrt(nozero.Sum(x => (x - nozeromean) * (x - nozeromean)) / (nozero.Count - 1.0)) : double.NaN; " is 137.
Long Statement,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The length of the statement  "      sb.AppendLine(string.Format("{0'15} {1'15} {2'15} {3'15}"' "Count"' Formatter.Format15(Count)' Formatter.Format15(Collect ? nozero.Count : double.NaN)' Formatter.Format15(Collect ? Count - nozero.Count : double.NaN))); " is 218.
Long Statement,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The length of the statement  "      sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Std.dev"' Formatter.Format15(StdDev)' Formatter.Format15(nozerostdev))); " is 125.
Long Statement,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The length of the statement  "      sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Minimum"' Formatter.Format15(Min)' Formatter.Format15(nozeromin))); " is 120.
Long Statement,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The length of the statement  "        sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Percentile-5%"' Formatter.Format15(GetPercentile(0.05))' Formatter.Format15(GetPercentile(nozero' 0.05)))); " is 160.
Long Statement,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The length of the statement  "        sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Median"' Formatter.Format15(GetMedian())' Formatter.Format15(GetPercentile(nozero' 0.5)))); " is 144.
Long Statement,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The length of the statement  "        sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Percentile-95%"' Formatter.Format15(GetPercentile(0.95))' Formatter.Format15(GetPercentile(nozero' 0.95)))); " is 161.
Long Statement,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The length of the statement  "      sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Maximum"' Formatter.Format15(Max)' Formatter.Format15(nozeromax))); " is 120.
Long Statement,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The length of the statement  "            sb.AppendLine(string.Format("{0'15} {1'10} {2'5:F1} {3'5:F1} {4}{5}"' Formatter.Format15(min + last * interval)' 0' 0' cumul * 100' ""' tmp)); " is 142.
Long Statement,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,Summarize,The length of the statement  "      var nozerostdev = nozero.Count > 2 ? Math.Sqrt(nozero.Sum(x => x.Duration * (x.Level - nozeromean) * (x.Level - nozeromean)) / nozeroduration) : double.NaN; " is 156.
Long Statement,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,Summarize,The length of the statement  "      sb.AppendLine(string.Format("{0'15} {1'15} {2'15} {3'15}"' "Duration"' Formatter.Format15(TotalTimeD)' Formatter.Format15(nozeroduration)' Formatter.Format15(TotalTimeD - nozeroduration))); " is 189.
Long Statement,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,Summarize,The length of the statement  "      sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Std.dev"' Formatter.Format15(StdDev)' Formatter.Format15(nozerostdev))); " is 125.
Long Statement,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,Summarize,The length of the statement  "      sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Minimum"' Formatter.Format15(Min)' Formatter.Format15(nozeromin))); " is 120.
Long Statement,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,Summarize,The length of the statement  "        sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Percentile-5%"' Formatter.Format15(GetPercentile(0.05))' Formatter.Format15(GetPercentile(nozero' 0.05)))); " is 160.
Long Statement,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,Summarize,The length of the statement  "        sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Median"' Formatter.Format15(GetMedian())' Formatter.Format15(GetPercentile(nozero' 0.5)))); " is 144.
Long Statement,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,Summarize,The length of the statement  "        sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Percentile-95%"' Formatter.Format15(GetPercentile(0.95))' Formatter.Format15(GetPercentile(nozero' 0.95)))); " is 161.
Long Statement,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,Summarize,The length of the statement  "      sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Maximum"' Formatter.Format15(Max)' Formatter.Format15(nozeromax))); " is 120.
Long Statement,SimSharp,EventQueue,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\EventQueue.cs,CascadeUp,The length of the statement  "        Swap(node' parentNode); //For some reason' this is faster with Swap() rather than (less..?) individual operations' like in CascadeDown() " is 136.
Long Statement,SimSharp,EventQueue,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\EventQueue.cs,IsValidQueue,The length of the statement  "          if (childLeftIndex < _nodes.Length && _nodes[childLeftIndex] != null && HasHigherPriority(_nodes[childLeftIndex]' _nodes[i])) " is 125.
Long Statement,SimSharp,EventQueue,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\EventQueue.cs,IsValidQueue,The length of the statement  "          if (childRightIndex < _nodes.Length && _nodes[childRightIndex] != null && HasHigherPriority(_nodes[childRightIndex]' _nodes[i])) " is 128.
Long Statement,SimSharp,GenericPriorityQueue<TItem;TPriority>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,Contains,The length of the statement  "        throw new InvalidOperationException("node.QueueIndex has been corrupted. Did you change it manually? Or add this node to another queue?"); " is 138.
Long Statement,SimSharp,GenericPriorityQueue<TItem;TPriority>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,Dequeue,The length of the statement  "        throw new InvalidOperationException("Queue has been corrupted (Did you update a node priority manually instead of calling UpdatePriority()?" + " is 142.
Long Statement,SimSharp,GenericPriorityQueue<TItem;TPriority>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,Resize,The length of the statement  "        throw new InvalidOperationException("Called Resize(" + maxNodes + ")' but current queue contains " + _numNodes + " nodes"); " is 123.
Long Statement,SimSharp,GenericPriorityQueue<TItem;TPriority>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,IsValidQueue,The length of the statement  "          if (childLeftIndex < _nodes.Length && _nodes[childLeftIndex] != null && HasHigherPriority(_nodes[childLeftIndex]' _nodes[i])) " is 125.
Long Statement,SimSharp,GenericPriorityQueue<TItem;TPriority>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,IsValidQueue,The length of the statement  "          if (childRightIndex < _nodes.Length && _nodes[childRightIndex] != null && HasHigherPriority(_nodes[childRightIndex]' _nodes[i])) " is 128.
Long Statement,SimSharp,GenericPriorityQueue<TItem>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,Contains,The length of the statement  "        throw new InvalidOperationException("node.QueueIndex has been corrupted. Did you change it manually? Or add this node to another queue?"); " is 138.
Long Statement,SimSharp,GenericPriorityQueue<TItem>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,Dequeue,The length of the statement  "        throw new InvalidOperationException("Queue has been corrupted (Did you update a node priority manually instead of calling UpdatePriority()?" + " is 142.
Long Statement,SimSharp,GenericPriorityQueue<TItem>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,Resize,The length of the statement  "        throw new InvalidOperationException("Called Resize(" + maxNodes + ")' but current queue contains " + _numNodes + " nodes"); " is 123.
Long Statement,SimSharp,GenericPriorityQueue<TItem>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,IsValidQueue,The length of the statement  "          if (childLeftIndex < _nodes.Length && _nodes[childLeftIndex] != null && HasHigherPriority(_nodes[childLeftIndex]' _nodes[i])) " is 125.
Long Statement,SimSharp,GenericPriorityQueue<TItem>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,IsValidQueue,The length of the statement  "          if (childRightIndex < _nodes.Length && _nodes[childRightIndex] != null && HasHigherPriority(_nodes[childRightIndex]' _nodes[i])) " is 128.
Long Statement,SimSharp,Simulation,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Environment.cs,Run,The length of the statement  "      if (!_stopRequested && !stopEvent.IsTriggered) throw new InvalidOperationException("No scheduled events left but \"until\" event was not triggered."); " is 150.
Long Statement,SimSharp,Simulation,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Environment.cs,RandNormal,The length of the statement  "      return MarsagliaPolar(random' mu' sigma' out _); // do not reuse the spare normal in this case' because it could be from a different RNG " is 136.
Long Statement,SimSharp,ThreadSafeSimulation,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Environment.cs,Run,The length of the statement  "      if (!_stopRequested && !stopEvent.IsTriggered) throw new InvalidOperationException("No scheduled events left but \"until\" event was not triggered."); " is 150.
Long Statement,SimSharp,Process,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Events\Process.cs,Interrupt,The length of the statement  "      if (Environment.ActiveProcess == this) throw new InvalidOperationException("A process is not allowed to interrupt itself."); " is 124.
Virtual Method Call from Constructor,SimSharp,Condition,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Events\Condition.cs,Condition,The constructor "Condition" calls a virtual method "Evaluate".
Virtual Method Call from Constructor,SimSharp,Condition,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Events\Condition.cs,Condition,The constructor "Condition" calls a virtual method "Succeed".
Virtual Method Call from Constructor,SimSharp,Initialize,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Events\Process.cs,Initialize,The constructor "Initialize" calls a virtual method "Schedule".
Virtual Method Call from Constructor,SimSharp,Timeout,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Events\Timeout.cs,Timeout,The constructor "Timeout" calls a virtual method "Schedule".
Magic Number,SimSharp,Builder,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\Report.cs,CountSetBits,The following statement contains a magic number: return numToBits[num & 0xf] +                 numToBits[(num >> 4) & 0xf] +                 numToBits[(num >> 8) & 0xf] +                 numToBits[(num >> 16) & 0xf] +                 numToBits[(num >> 20) & 0xf] +                 numToBits[(num >> 24) & 0xf] +                 numToBits[(num >> 28) & 0xf];
Magic Number,SimSharp,Builder,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\Report.cs,CountSetBits,The following statement contains a magic number: return numToBits[num & 0xf] +                 numToBits[(num >> 4) & 0xf] +                 numToBits[(num >> 8) & 0xf] +                 numToBits[(num >> 16) & 0xf] +                 numToBits[(num >> 20) & 0xf] +                 numToBits[(num >> 24) & 0xf] +                 numToBits[(num >> 28) & 0xf];
Magic Number,SimSharp,Builder,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\Report.cs,CountSetBits,The following statement contains a magic number: return numToBits[num & 0xf] +                 numToBits[(num >> 4) & 0xf] +                 numToBits[(num >> 8) & 0xf] +                 numToBits[(num >> 16) & 0xf] +                 numToBits[(num >> 20) & 0xf] +                 numToBits[(num >> 24) & 0xf] +                 numToBits[(num >> 28) & 0xf];
Magic Number,SimSharp,Builder,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\Report.cs,CountSetBits,The following statement contains a magic number: return numToBits[num & 0xf] +                 numToBits[(num >> 4) & 0xf] +                 numToBits[(num >> 8) & 0xf] +                 numToBits[(num >> 16) & 0xf] +                 numToBits[(num >> 20) & 0xf] +                 numToBits[(num >> 24) & 0xf] +                 numToBits[(num >> 28) & 0xf];
Magic Number,SimSharp,Builder,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\Report.cs,CountSetBits,The following statement contains a magic number: return numToBits[num & 0xf] +                 numToBits[(num >> 4) & 0xf] +                 numToBits[(num >> 8) & 0xf] +                 numToBits[(num >> 16) & 0xf] +                 numToBits[(num >> 20) & 0xf] +                 numToBits[(num >> 24) & 0xf] +                 numToBits[(num >> 28) & 0xf];
Magic Number,SimSharp,Builder,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\Report.cs,CountSetBits,The following statement contains a magic number: return numToBits[num & 0xf] +                 numToBits[(num >> 4) & 0xf] +                 numToBits[(num >> 8) & 0xf] +                 numToBits[(num >> 16) & 0xf] +                 numToBits[(num >> 20) & 0xf] +                 numToBits[(num >> 24) & 0xf] +                 numToBits[(num >> 28) & 0xf];
Magic Number,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,GetMedian,The following statement contains a magic number: return GetPercentile(0.5);
Magic Number,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,GetPercentile,The following statement contains a magic number: return s.OrderBy(x => x).Skip(k - 1).Take(2).Average();
Magic Number,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,SampleMonitor,The following statement contains a magic number: samples = new List<double>(64);
Magic Number,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The following statement contains a magic number: var nozerostdev = nozero.Count > 2 ? Math.Sqrt(nozero.Sum(x => (x - nozeromean) * (x - nozeromean)) / (nozero.Count - 1.0)) : double.NaN;
Magic Number,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The following statement contains a magic number: sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Percentile-5%"' Formatter.Format15(GetPercentile(0.05))' Formatter.Format15(GetPercentile(nozero' 0.05))));
Magic Number,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The following statement contains a magic number: sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Percentile-5%"' Formatter.Format15(GetPercentile(0.05))' Formatter.Format15(GetPercentile(nozero' 0.05))));
Magic Number,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The following statement contains a magic number: sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Median"' Formatter.Format15(GetMedian())' Formatter.Format15(GetPercentile(nozero' 0.5))));
Magic Number,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The following statement contains a magic number: sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Percentile-95%"' Formatter.Format15(GetPercentile(0.95))' Formatter.Format15(GetPercentile(nozero' 0.95))));
Magic Number,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The following statement contains a magic number: sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Percentile-95%"' Formatter.Format15(GetPercentile(0.95))' Formatter.Format15(GetPercentile(nozero' 0.95))));
Magic Number,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The following statement contains a magic number: sb.AppendLine(string.Format("{0'15} {1'10} {2'5:F1} {3'5:F1} {4}{5}"' Formatter.Format15(min + last * interval)' 0' 0' cumul * 100' ""' tmp));
Magic Number,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The following statement contains a magic number: var probstars = (int)Math.Round(100 * prob / 2);
Magic Number,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The following statement contains a magic number: var probstars = (int)Math.Round(100 * prob / 2);
Magic Number,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The following statement contains a magic number: var cumulstars = (int)Math.Round(100 * cumul / 2);
Magic Number,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The following statement contains a magic number: var cumulstars = (int)Math.Round(100 * cumul / 2);
Magic Number,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The following statement contains a magic number: sb.AppendLine(string.Format("{0'15} {1'10} {2'5:F1} {3'5:F1} {4}{5}"'              (kvp.Key == maxBins && min + kvp.Key * interval < Max) ? "inf" : Formatter.Format15(min + kvp.Key * interval)'              kvp.Value' prob * 100' cumul * 100' stars' cumulbar));
Magic Number,SimSharp,SampleMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\SampleMonitor.cs,Summarize,The following statement contains a magic number: sb.AppendLine(string.Format("{0'15} {1'10} {2'5:F1} {3'5:F1} {4}{5}"'              (kvp.Key == maxBins && min + kvp.Key * interval < Max) ? "inf" : Formatter.Format15(min + kvp.Key * interval)'              kvp.Value' prob * 100' cumul * 100' stars' cumulbar));
Magic Number,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,GetMedian,The following statement contains a magic number: return GetPercentile(0.5);
Magic Number,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,GetPercentile,The following statement contains a magic number: return (seq[ilower].Level + seq[ilower + 1].Level) / 2.0;
Magic Number,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,TimeSeriesMonitor,The following statement contains a magic number: series = new List<Entry>(64);
Magic Number,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,TimeSeriesMonitor,The following statement contains a magic number: series = new List<Entry>(64) { new Entry { Date = env.NowD' Level = initial } };
Magic Number,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,Summarize,The following statement contains a magic number: var nozerostdev = nozero.Count > 2 ? Math.Sqrt(nozero.Sum(x => x.Duration * (x.Level - nozeromean) * (x.Level - nozeromean)) / nozeroduration) : double.NaN;
Magic Number,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,Summarize,The following statement contains a magic number: sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Percentile-5%"' Formatter.Format15(GetPercentile(0.05))' Formatter.Format15(GetPercentile(nozero' 0.05))));
Magic Number,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,Summarize,The following statement contains a magic number: sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Percentile-5%"' Formatter.Format15(GetPercentile(0.05))' Formatter.Format15(GetPercentile(nozero' 0.05))));
Magic Number,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,Summarize,The following statement contains a magic number: sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Median"' Formatter.Format15(GetMedian())' Formatter.Format15(GetPercentile(nozero' 0.5))));
Magic Number,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,Summarize,The following statement contains a magic number: sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Percentile-95%"' Formatter.Format15(GetPercentile(0.95))' Formatter.Format15(GetPercentile(nozero' 0.95))));
Magic Number,SimSharp,TimeSeriesMonitor,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Analysis\TimeSeriesMonitor.cs,Summarize,The following statement contains a magic number: sb.AppendLine(string.Format("{0'15} {1'15} {2'15}"' "Percentile-95%"' Formatter.Format15(GetPercentile(0.95))' Formatter.Format15(GetPercentile(nozero' 0.95))));
Magic Number,SimSharp,Formatter,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Auxiliary\Formatter.cs,Format12,The following statement contains a magic number: number >= 1e100 || number <= -1e100
Magic Number,SimSharp,Formatter,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Auxiliary\Formatter.cs,Format12,The following statement contains a magic number: number >= 1e100 || number <= -1e100
Magic Number,SimSharp,Formatter,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Auxiliary\Formatter.cs,Format12,The following statement contains a magic number: number >= 1e7 || number <= -1e7
Magic Number,SimSharp,Formatter,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Auxiliary\Formatter.cs,Format12,The following statement contains a magic number: number >= 1e7 || number <= -1e7
Magic Number,SimSharp,Formatter,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Auxiliary\Formatter.cs,Format12,The following statement contains a magic number: Math.Abs(number) <= 1e-100
Magic Number,SimSharp,Formatter,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Auxiliary\Formatter.cs,Format12,The following statement contains a magic number: Math.Abs(number) < 1e-3
Magic Number,SimSharp,Formatter,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Auxiliary\Formatter.cs,Format15,The following statement contains a magic number: number >= 1e100 || number <= -1e100
Magic Number,SimSharp,Formatter,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Auxiliary\Formatter.cs,Format15,The following statement contains a magic number: number >= 1e100 || number <= -1e100
Magic Number,SimSharp,Formatter,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Auxiliary\Formatter.cs,Format15,The following statement contains a magic number: number >= 1e10 || number <= -1e10
Magic Number,SimSharp,Formatter,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Auxiliary\Formatter.cs,Format15,The following statement contains a magic number: number >= 1e10 || number <= -1e10
Magic Number,SimSharp,Formatter,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Auxiliary\Formatter.cs,Format15,The following statement contains a magic number: Math.Abs(number) <= 1e-100
Magic Number,SimSharp,Formatter,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Auxiliary\Formatter.cs,Format15,The following statement contains a magic number: Math.Abs(number) < 1e-3
Magic Number,SimSharp,EventQueue,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\EventQueue.cs,CascadeUp,The following statement contains a magic number: int parent = node.QueueIndex / 2;
Magic Number,SimSharp,EventQueue,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\EventQueue.cs,CascadeUp,The following statement contains a magic number: parent = node.QueueIndex / 2;
Magic Number,SimSharp,EventQueue,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\EventQueue.cs,CascadeDown,The following statement contains a magic number: int childLeftIndex = 2 * finalQueueIndex;
Magic Number,SimSharp,EventQueue,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\EventQueue.cs,OnNodeUpdated,The following statement contains a magic number: int parentIndex = node.QueueIndex / 2;
Magic Number,SimSharp,EventQueue,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\EventQueue.cs,IsValidQueue,The following statement contains a magic number: int childLeftIndex = 2 * i;
Magic Number,SimSharp,GenericPriorityQueue<TItem;TPriority>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,CascadeDown,The following statement contains a magic number: int childLeftIndex = 2 * finalQueueIndex;
Magic Number,SimSharp,GenericPriorityQueue<TItem;TPriority>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,CascadeDown,The following statement contains a magic number: childLeftIndex = 2 * finalQueueIndex;
Magic Number,SimSharp,GenericPriorityQueue<TItem;TPriority>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,IsValidQueue,The following statement contains a magic number: int childLeftIndex = 2 * i;
Magic Number,SimSharp,GenericPriorityQueue<TItem>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,CascadeDown,The following statement contains a magic number: int childLeftIndex = 2 * finalQueueIndex;
Magic Number,SimSharp,GenericPriorityQueue<TItem>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,CascadeDown,The following statement contains a magic number: childLeftIndex = 2 * finalQueueIndex;
Magic Number,SimSharp,GenericPriorityQueue<TItem>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\GenericPriorityQueue.cs,IsValidQueue,The following statement contains a magic number: int childLeftIndex = 2 * i;
Magic Number,SimSharp,SimplePriorityQueue<TItem;TPriority>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\SimplePriorityQueue.cs,EnqueueNoCache,The following statement contains a magic number: _queue.Resize(_queue.MaxSize * 2 + 1);
Magic Number,SimSharp,SimplePriorityQueue<TItem>,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Collections\SimplePriorityQueue.cs,EnqueueNoCache,The following statement contains a magic number: _queue.Resize(_queue.MaxSize * 2 + 1);
Magic Number,SimSharp,Simulation,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Environment.cs,DoSchedule,The following statement contains a magic number: ScheduleQ = new EventQueue(ScheduleQ.MaxSize * 2);
Magic Number,SimSharp,Simulation,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Environment.cs,RandTriangular,The following statement contains a magic number: return high + (low - high) * Math.Sqrt(((1.0 - u) / 2));
Magic Number,SimSharp,Simulation,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Environment.cs,RandTriangular,The following statement contains a magic number: u > 0.5
Magic Number,SimSharp,Simulation,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Environment.cs,RandTriangular,The following statement contains a magic number: return low + (high - low) * Math.Sqrt(u / 2);
Magic Number,SimSharp,Simulation,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Environment.cs,MarsagliaPolar,The following statement contains a magic number: u = random.NextDouble() * 2 - 1;
Magic Number,SimSharp,Simulation,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Environment.cs,MarsagliaPolar,The following statement contains a magic number: v = random.NextDouble() * 2 - 1;
Magic Number,SimSharp,Simulation,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Environment.cs,MarsagliaPolar,The following statement contains a magic number: var mul = Math.Sqrt(-2.0 * Math.Log(s) / s);
Magic Number,SimSharp,Simulation,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Environment.cs,RandLogNormal2,The following statement contains a magic number: var mu = Math.Log(mean) - 0.5 * sigma * sigma;
Magic Number,SimSharp,Simulation,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Environment.cs,RandCauchy,The following statement contains a magic number: return x0 + gamma * Math.Tan(Math.PI * (random.NextDouble() - 0.5));
Magic Number,SimSharp,Environment,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Environment.cs,RandNormal,The following statement contains a magic number: z = NormalMagicConst * (u1 - 0.5) / u2;
Magic Number,SimSharp,Environment,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Core\Environment.cs,RandNormal,The following statement contains a magic number: zz = z * z / 4.0;
Magic Number,SimSharp,Pcg,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Random\Pcg.cs,NextUInt,The following statement contains a magic number: uint xorShifted = (uint)(((oldState >> 18) ^ oldState) >> 27);
Magic Number,SimSharp,Pcg,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Random\Pcg.cs,NextUInt,The following statement contains a magic number: uint xorShifted = (uint)(((oldState >> 18) ^ oldState) >> 27);
Magic Number,SimSharp,Pcg,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Random\Pcg.cs,NextUInt,The following statement contains a magic number: int rot = (int)(oldState >> 59);
Magic Number,SimSharp,Pcg,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Random\Pcg.cs,NextUInt,The following statement contains a magic number: uint result = (xorShifted >> rot) | (xorShifted << ((-rot) & 31));
Magic Number,SimSharp,Pcg,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Random\Pcg.cs,NextByte,The following statement contains a magic number: return (byte)(result % 256);
Magic Number,SimSharp,Pcg,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Random\Pcg.cs,NextBool,The following statement contains a magic number: return result % 2 == 1;
Magic Number,SimSharp,Pcg,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Random\Pcg.cs,PeriodPow2,The following statement contains a magic number: return 64;
Magic Number,SimSharp,PcgSeed,D:\research\architectureSmells\repos\abeham_SimSharp\src\SimSharp\Random\Pcg.cs,GuidBasedSeed,The following statement contains a magic number: ulong upper = (ulong)(System.Environment.TickCount ^ Guid.NewGuid().GetHashCode()) << 32;
