Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,GetOptions,Cyclomatic complexity of the method is 10
Complex Method,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,ArgUsed,Cyclomatic complexity of the method is 14
Long Parameter List,CmdLine,Option,C:\repos\matthewbednarski_CmdLine\Option.cs,Option,The method has 5 parameters.
Long Statement,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,Usage,The length of the statement  "	_usage.AppendFormat ("{0} [options]"' System.IO.Path.GetFileName (System.Reflection.Assembly.GetEntryAssembly ().Location)).AppendLine (); " is 138.
Long Statement,CmdLine,Option,C:\repos\matthewbednarski_CmdLine\Option.cs,GetHelpLine,The length of the statement  "			return String.Format ("    -{0} [value]' --{1}=[value]    {2}. Default: {3}"' this.Short_name' this.Name' this.Description' this.DefaultValue); " is 143.
Long Statement,CmdLine,Option,C:\repos\matthewbednarski_CmdLine\Option.cs,ToString,The length of the statement  "	return string.Format ("[Option short_name={0}' name={1}' description={2}' isFlag={3}]"' short_name' name' description' isFlag); " is 127.
Magic Number,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,ArgAsParameter,The following statement contains a magic number: if (r.Contains ("=")) {  	r = r.Split (new char[] {  		'='  	}' 2) [0];  }  
Magic Number,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,ArgAsParameter,The following statement contains a magic number: r = r.Split (new char[] {  	'='  }' 2) [0];  
Magic Number,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,ArgParameterHasValue,The following statement contains a magic number: if (ArgIsParameter (args' index)) {  	string part = args [index];  	if (!String.IsNullOrEmpty (part)) {  		if (part.Contains ("=")) {  			string[] parts = part.Split (new char[] {  				'='  			}' 2);  			if (parts != null && parts.Length == 2) {  				return true;  			}  		}  		else {  			if (index + 2 <= args.Count) {  				if (!String.IsNullOrEmpty (args [index + 1]) && !ArgIsParameter (args' index + 1)) {  					return true;  				}  			}  		}  	}  }  
Magic Number,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,ArgParameterHasValue,The following statement contains a magic number: if (ArgIsParameter (args' index)) {  	string part = args [index];  	if (!String.IsNullOrEmpty (part)) {  		if (part.Contains ("=")) {  			string[] parts = part.Split (new char[] {  				'='  			}' 2);  			if (parts != null && parts.Length == 2) {  				return true;  			}  		}  		else {  			if (index + 2 <= args.Count) {  				if (!String.IsNullOrEmpty (args [index + 1]) && !ArgIsParameter (args' index + 1)) {  					return true;  				}  			}  		}  	}  }  
Magic Number,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,ArgParameterHasValue,The following statement contains a magic number: if (ArgIsParameter (args' index)) {  	string part = args [index];  	if (!String.IsNullOrEmpty (part)) {  		if (part.Contains ("=")) {  			string[] parts = part.Split (new char[] {  				'='  			}' 2);  			if (parts != null && parts.Length == 2) {  				return true;  			}  		}  		else {  			if (index + 2 <= args.Count) {  				if (!String.IsNullOrEmpty (args [index + 1]) && !ArgIsParameter (args' index + 1)) {  					return true;  				}  			}  		}  	}  }  
Magic Number,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,ArgParameterHasValue,The following statement contains a magic number: if (!String.IsNullOrEmpty (part)) {  	if (part.Contains ("=")) {  		string[] parts = part.Split (new char[] {  			'='  		}' 2);  		if (parts != null && parts.Length == 2) {  			return true;  		}  	}  	else {  		if (index + 2 <= args.Count) {  			if (!String.IsNullOrEmpty (args [index + 1]) && !ArgIsParameter (args' index + 1)) {  				return true;  			}  		}  	}  }  
Magic Number,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,ArgParameterHasValue,The following statement contains a magic number: if (!String.IsNullOrEmpty (part)) {  	if (part.Contains ("=")) {  		string[] parts = part.Split (new char[] {  			'='  		}' 2);  		if (parts != null && parts.Length == 2) {  			return true;  		}  	}  	else {  		if (index + 2 <= args.Count) {  			if (!String.IsNullOrEmpty (args [index + 1]) && !ArgIsParameter (args' index + 1)) {  				return true;  			}  		}  	}  }  
Magic Number,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,ArgParameterHasValue,The following statement contains a magic number: if (!String.IsNullOrEmpty (part)) {  	if (part.Contains ("=")) {  		string[] parts = part.Split (new char[] {  			'='  		}' 2);  		if (parts != null && parts.Length == 2) {  			return true;  		}  	}  	else {  		if (index + 2 <= args.Count) {  			if (!String.IsNullOrEmpty (args [index + 1]) && !ArgIsParameter (args' index + 1)) {  				return true;  			}  		}  	}  }  
Magic Number,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,ArgParameterHasValue,The following statement contains a magic number: if (part.Contains ("=")) {  	string[] parts = part.Split (new char[] {  		'='  	}' 2);  	if (parts != null && parts.Length == 2) {  		return true;  	}  }  else {  	if (index + 2 <= args.Count) {  		if (!String.IsNullOrEmpty (args [index + 1]) && !ArgIsParameter (args' index + 1)) {  			return true;  		}  	}  }  
Magic Number,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,ArgParameterHasValue,The following statement contains a magic number: if (part.Contains ("=")) {  	string[] parts = part.Split (new char[] {  		'='  	}' 2);  	if (parts != null && parts.Length == 2) {  		return true;  	}  }  else {  	if (index + 2 <= args.Count) {  		if (!String.IsNullOrEmpty (args [index + 1]) && !ArgIsParameter (args' index + 1)) {  			return true;  		}  	}  }  
Magic Number,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,ArgParameterHasValue,The following statement contains a magic number: if (part.Contains ("=")) {  	string[] parts = part.Split (new char[] {  		'='  	}' 2);  	if (parts != null && parts.Length == 2) {  		return true;  	}  }  else {  	if (index + 2 <= args.Count) {  		if (!String.IsNullOrEmpty (args [index + 1]) && !ArgIsParameter (args' index + 1)) {  			return true;  		}  	}  }  
Magic Number,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,ArgParameterHasValue,The following statement contains a magic number: if (parts != null && parts.Length == 2) {  	return true;  }  
Magic Number,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,ArgParameterHasValue,The following statement contains a magic number: if (index + 2 <= args.Count) {  	if (!String.IsNullOrEmpty (args [index + 1]) && !ArgIsParameter (args' index + 1)) {  		return true;  	}  }  
Magic Number,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,ArgParameterValue,The following statement contains a magic number: if (index + 1 <= args.Count) {  	string arg = args [index];  	if (ArgIsParameter (arg)) {  		if (arg.Contains ("=")) {  			r = arg.Split (new char[] {  				'='  			}' 2) [1];  			#if DEBUG  			Console.WriteLine ("Value of r: \"{0}\"..."' r);  			#endif  		}  		else if (!String.IsNullOrEmpty (args [index + 1]) && !ArgIsParameter (args' index + 1)) {  			r = args [index + 1];  			#if DEBUG  			Console.WriteLine ("Value of r: \"{0}\"..."' r);  			#endif  		}  	}  }  
Magic Number,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,ArgParameterValue,The following statement contains a magic number: if (ArgIsParameter (arg)) {  	if (arg.Contains ("=")) {  		r = arg.Split (new char[] {  			'='  		}' 2) [1];  		#if DEBUG  		Console.WriteLine ("Value of r: \"{0}\"..."' r);  		#endif  	}  	else if (!String.IsNullOrEmpty (args [index + 1]) && !ArgIsParameter (args' index + 1)) {  		r = args [index + 1];  		#if DEBUG  		Console.WriteLine ("Value of r: \"{0}\"..."' r);  		#endif  	}  }  
Magic Number,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,ArgParameterValue,The following statement contains a magic number: if (arg.Contains ("=")) {  	r = arg.Split (new char[] {  		'='  	}' 2) [1];  	#if DEBUG  	Console.WriteLine ("Value of r: \"{0}\"..."' r);  	#endif  }  else if (!String.IsNullOrEmpty (args [index + 1]) && !ArgIsParameter (args' index + 1)) {  	r = args [index + 1];  	#if DEBUG  	Console.WriteLine ("Value of r: \"{0}\"..."' r);  	#endif  }  
Magic Number,CmdLine,Args,C:\repos\matthewbednarski_CmdLine\Args.cs,ArgParameterValue,The following statement contains a magic number: r = arg.Split (new char[] {  	'='  }' 2) [1];  
