Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Excavator,ExcavatorComponent,C:\repos\NewSpring_Excavator\Excavator\Controls\ExcavatorComponent.cs,,The length of the parameter refreshIndividualListEachCycle is 30.
Long Statement,Excavator,SqlConnector,C:\repos\NewSpring_Excavator\Excavator\Views\SqlConnector.xaml.cs,RegisterNewConnectionString,The length of the statement  "                ConnectionStringPropertyChanged( this' new PropertyChangedEventArgs( "Server" ) ); //takes care of initialization of the database list " is 134.
Long Statement,Excavator,ProgressPage,C:\repos\NewSpring_Excavator\Excavator\Views\ProgressPage.xaml.cs,bwImportData_DoWork,The length of the statement  "                            ExcavatorComponent.LogException( string.Format( "{0} (Foreign Key: {1})"' eve.Entry.Entity.GetType().Name' eve.Entry.Property( "ForeignKey" ).CurrentValue )' string.Format( "Entity of type \"{0}\" in state \"{1}\" has the following validation errors:"' " is 252.
Long Statement,Excavator,ProgressPage,C:\repos\NewSpring_Excavator\Excavator\Views\ProgressPage.xaml.cs,bwImportData_RunWorkerCompleted,The length of the statement  "                    txtProgress.AppendText( Environment.NewLine + DateTime.Now.ToLongTimeString() + "  Could not finish upload. Check the exceptions log for details." ); " is 149.
Empty Catch Block,Excavator,App,C:\repos\NewSpring_Excavator\Excavator\Views\App.xaml.cs,LogException,The method has an empty catch block.
Magic Number,Excavator,SqlTasks,C:\repos\NewSpring_Excavator\Excavator\Views\SqlConnector.xaml.cs,GetDatabases,The following statement contains a magic number: using ( var conn = new SqlConnection( connectionString.WithDatabase( "master" ) ) )              {                  try                  {                      conn.Open();                      var serverConnection = new ServerConnection( conn );                      var server = new Server( serverConnection );                      databases.AddRange( from Database database in server.Databases select database.Name );                  }                  catch ( SqlException e )                  {                      databases.Add( e.Errors[0].Message.Take( 50 ).ToString() );                  }              }
Magic Number,Excavator,ConnectPage,C:\repos\NewSpring_Excavator\Excavator\Views\ConnectPage.xaml.cs,btnConnect_Click,The following statement contains a magic number: modalBorder.CornerRadius = new CornerRadius( 5 );
Magic Number,Excavator,ConnectPage,C:\repos\NewSpring_Excavator\Excavator\Views\ConnectPage.xaml.cs,btnConnect_Click,The following statement contains a magic number: modalBorder.BorderThickness = new Thickness( 5 );
Magic Number,Excavator,ConnectPage,C:\repos\NewSpring_Excavator\Excavator\Views\ConnectPage.xaml.cs,btnConnect_Click,The following statement contains a magic number: modalBorder.Padding = new Thickness( 5 );
Magic Number,Excavator,ConnectPage,C:\repos\NewSpring_Excavator\Excavator\Views\ConnectPage.xaml.cs,btnConnect_Click,The following statement contains a magic number: okBtn.Margin = new Thickness( 0' 0' 5' 0 );
Magic Number,Excavator,ConfigurationPage,C:\repos\NewSpring_Excavator\Excavator\Views\ConfigurationPage.xaml.cs,ConfigurationPage,The following statement contains a magic number: if ( parameter != null )              {                  excavator = parameter;                  txtImportUser.Text = ConfigurationManager.AppSettings["ImportUser"];                  txtPasswordKey.Text = ConfigurationManager.AppSettings["PasswordKey"];                  txtDataEncryption.Text = ConfigurationManager.AppSettings["DataEncryptionKey"];                    int reportingNumber;                  Int32.TryParse( ConfigurationManager.AppSettings["ReportingNumber"]' out reportingNumber );                  excavator.ReportingNumber = reportingNumber > 0 ? reportingNumber : 100;              }              else              {                  lblNoData.Visibility = Visibility.Visible;                  btnNext.Visibility = Visibility.Hidden;              }
Magic Number,Excavator,ConfigurationPage,C:\repos\NewSpring_Excavator\Excavator\Views\ConfigurationPage.xaml.cs,btnNext_Click,The following statement contains a magic number: if ( !string.IsNullOrEmpty( txtPasswordKey.Text ) && !string.IsNullOrEmpty( txtDataEncryption.Text ) )              {                  var appConfig = ConfigurationManager.OpenExeConfiguration( ConfigurationUserLevel.None );                  if ( appConfig.AppSettings.Settings.Count < 3 )                  {                      appConfig.AppSettings.Settings.Add( "ImportUser"' string.Empty );                      appConfig.AppSettings.Settings.Add( "PasswordKey"' string.Empty );                      appConfig.AppSettings.Settings.Add( "DataEncryptionKey"' string.Empty );                  }                    try                  {                      appConfig.AppSettings.Settings["ImportUser"].Value = txtImportUser.Text;                      appConfig.AppSettings.Settings["PasswordKey"].Value = txtPasswordKey.Text;                      appConfig.AppSettings.Settings["DataEncryptionKey"].Value = txtDataEncryption.Text;                      appConfig.Save( ConfigurationSaveMode.Modified );                      ConfigurationManager.RefreshSection( "appSettings" );                        var progressPage = new ProgressPage( excavator );                      this.NavigationService.Navigate( progressPage );                  }                  catch                  {                      lblNoData.Content = "Unable to save the configuration keys. Please check the permissions on the current directory.";                      lblNoData.Visibility = Visibility.Visible;                  }              }
