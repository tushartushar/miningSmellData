Implementation smell,Namespace,Class,File,Method,Description
Long Method,SePSX,CommonCmdletBase,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Inheritance\CommonCmdletBase.cs,CheckInputWebDriverOrWebElement,The method has 113 lines of code.
Long Method,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,RecordActions,The method has 204 lines of code.
Long Method,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,CheckCodeSequenceNovelty,The method has 134 lines of code.
Long Method,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,RecordActionItem,The method has 100 lines of code.
Long Method,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,ConvertCodeSequenceToCode,The method has 193 lines of code.
Long Method,SePSX,WebDriverModule,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\Autofac\WebDriverModule.cs,Load,The method has 299 lines of code.
Long Method,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,StartWebDriver,The method has 147 lines of code.
Long Method,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetWebElement,The method has 203 lines of code.
Long Method,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,getWebElement,The method has 280 lines of code.
Long Method,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetScreenshotOfCmdletInput,The method has 317 lines of code.
Long Method,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetScreenshotOfWebElement,The method has 133 lines of code.
Long Method,SePSX,WebDriverFactory,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\WebDriverFactory.cs,GetDriver,The method has 127 lines of code.
Long Method,SePSX,WebDriverFactory,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\WebDriverFactory.cs,GetDriverServer,The method has 209 lines of code.
Long Method,SePSX,Preferences,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UserSettings\Preferences.cs,Preferences,The method has 107 lines of code.
Complex Method,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,CheckCodeSequenceNovelty,Cyclomatic complexity of the method is 17
Complex Method,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,RecordActionItem,Cyclomatic complexity of the method is 13
Complex Method,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,ConvertCodeSequenceToCode,Cyclomatic complexity of the method is 12
Complex Method,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,StartWebDriver,Cyclomatic complexity of the method is 11
Complex Method,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,ClickOnElement,Cyclomatic complexity of the method is 10
Complex Method,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetWebElement,Cyclomatic complexity of the method is 13
Complex Method,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,getWebElement,Cyclomatic complexity of the method is 11
Complex Method,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetSelect,Cyclomatic complexity of the method is 8
Complex Method,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,SetSelect,Cyclomatic complexity of the method is 15
Complex Method,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetScreenshotOfCmdletInput,Cyclomatic complexity of the method is 24
Complex Method,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetScreenshotOfWebElement,Cyclomatic complexity of the method is 12
Complex Method,SePSX,WebDriverFactory,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\WebDriverFactory.cs,GetDriverServer,Cyclomatic complexity of the method is 19
Long Parameter List,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,ClickOnElement,The method has 8 parameters. Parameters: cmdlet' elements' clickByWebElementMethod' clickActionsOnWebElement' clickActionsDouble' clickActionsRight' clickActionsClickAndHold' clickActionsJustHere
Long Parameter List,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,getWebElement,The method has 5 parameters. Parameters: cmdlet' element' parameterId' parameterValue' oneElement
Long Parameter List,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,ExecuteJavaScript,The method has 5 parameters. Parameters: cmdlet' drivers' scriptCode' arguments' output
Long Parameter List,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetSelect,The method has 5 parameters. Parameters: cmdlet' elements' firstSelected' selected' all
Long Parameter List,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,SetSelect,The method has 7 parameters. Parameters: cmdlet' elements' indices' values' visibleTexts' all' deselect
Long Parameter List,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetScreenshotOfCmdletInput,The method has 6 parameters. Parameters: cmdlet' description' save' relativeRect' path' format
Long Parameter List,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetScreenshotOfWebElement,The method has 7 parameters. Parameters: cmdlet' element' description' save' relativeRect' path' format
Long Identifier,SePSX,CommonCmdletBase,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Inheritance\CommonCmdletBase.cs,,The length of the parameter ExceptionMessageWrongTypeWebDriver is 34.
Long Identifier,SePSX,CommonCmdletBase,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Inheritance\CommonCmdletBase.cs,,The length of the parameter ExceptionMessageWrongTypeWebElement is 35.
Long Identifier,SePSX,CommonCmdletBase,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Inheritance\CommonCmdletBase.cs,,The length of the parameter ExceptionMessageWrongTypeWebDriverOrWebElement is 46.
Long Identifier,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,,The length of the parameter DriverTitleComplementInternetExplorer is 37.
Long Identifier,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,,The length of the parameter DriverTitleOnStartInternetExplorer is 34.
Long Statement,SePSX.Commands,SetSeWebDriverTimeoutCommand,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Commands\Driver\SetSeWebDriverTimeoutCommand.cs,ProcessRecord,The length of the statement  "//                SeHelper.SetDriverTimeout(this' this.InputObject' DriverTimeoutTypes.ImplicitlyWait' this.ImplicitlyWaitTimeout); " is 131.
Long Statement,SePSX,CommonCmdletBase,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Inheritance\CommonCmdletBase.cs,WriteLog,The length of the statement  "                WriteLog(logLevel' "Script: '" + errorRecord.InvocationInfo.ScriptName + "'' line: " + errorRecord.InvocationInfo.Line.ToString()); " is 131.
Long Statement,SePSX,CommonCmdletBase,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Inheritance\CommonCmdletBase.cs,CheckInputWebDriverOrWebElement,The length of the statement  "//                            ((PSObject[])((HasWebElementInputCmdletBase)this).InputObject).BaseObject as IWebDriver[]; " is 120.
Long Statement,SePSX,CommonCmdletBase,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Inheritance\CommonCmdletBase.cs,CheckInputWebDriverOrWebElement,The length of the statement  "//                                ((PSObject)((HasWebElementInputCmdletBase)this).InputObject[i]).BaseObject as IWebDriver " is 122.
Long Statement,SePSX,CommonCmdletBase,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Inheritance\CommonCmdletBase.cs,CheckInputWebDriverOrWebElement,The length of the statement  "//                                ((PSObject[])((HasWebElementInputCmdletBase)this).InputObject).BaseObject as IWebElement[]; " is 125.
Long Statement,SePSX,CommonCmdletBase,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Inheritance\CommonCmdletBase.cs,CheckInputWebDriverOrWebElement,The length of the statement  "//                                    ((PSObject)((HasWebElementInputCmdletBase)this).InputObject[i]).BaseObject as IWebElement); " is 129.
Long Statement,SePSX,CommonCmdletBase,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Inheritance\CommonCmdletBase.cs,checkInputWebElementOnly,The length of the statement  "//                                    ((PSObject)((HasWebElementInputCmdletBase)this).InputObject[i]).BaseObject as IWebElement); " is 129.
Long Statement,SePSX,JsRecorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\JSRecorder.cs,CleanRecordedDuringSleep,The length of the statement  "            SeHelper.ExecuteJavaScript(cmdlet' (new IWebDriver[] { CurrentData.CurrentWebDriver })' ConstRecorderCleanRecordings' (new string[] { string.Empty })' false); " is 158.
Long Statement,SePSX,JsRecorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\JSRecorder.cs,StopRecording,The length of the statement  "            SeHelper.ExecuteJavaScript(cmdlet' (new IWebDriver[] { CurrentData.CurrentWebDriver })' ConstRecorderExitRecording' (new string[] { string.Empty })' false); " is 156.
Long Statement,SePSX,JsRecorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\JSRecorder.cs,MakeJsInjection,The length of the statement  "                var result = SeHelper.ExecuteJavaScript(cmdlet' (new IWebDriver[] { CurrentData.CurrentWebDriver })' ConstRecorderCheckInjection' (new string[] { string.Empty })' false); " is 170.
Long Statement,SePSX,JsRecorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\JSRecorder.cs,MakeJsInjection,The length of the statement  "                    SeHelper.ExecuteJavaScript(cmdlet' (new IWebDriver[] { CurrentData.CurrentWebDriver })' ConstRecorderInjectScript' (new string[] { Preferences.TranscriptExcludeList })' false); " is 176.
Long Statement,SePSX,JsRecorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\JSRecorder.cs,GetRecordedResults,The length of the statement  "            var scriptResults = ((IJavaScriptExecutor)CurrentData.CurrentWebDriver).ExecuteScript(ConstRecorderGetElement' (new string[] { string.Empty })) as IEnumerable; " is 159.
Long Statement,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,RecordActions,The length of the statement  "////                                Dictionary<string' object> elementData2 = singleResult as Dictionary<string' object>; " is 121.
Long Statement,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,RecordActions,The length of the statement  "////    Console.WriteLine("elementDataItem[elementDataItem.Keys[]] = " + elementDataItem.Key + "\t" + elementDataItem.Value.ToString()); " is 136.
Long Statement,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,RecordActions,The length of the statement  "////                        (ReadOnlyCollection<IWebElement>)((IJavaScriptExecutor)CurrentData.CurrentWebDriver).ExecuteScript( " is 127.
Long Statement,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,CheckCodeSequenceNovelty,The length of the statement  "                                    if (eltWebToBeAdded.UserData.Keys.Any(key => eltWebToBeAdded.UserData[key] != eltWebThatAlreadyCollected.UserData[key])) " is 120.
Long Statement,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,CheckCodeSequenceNovelty,The length of the statement  "                                    if (eltActToBeAdded.UserData.Keys.Any(key => eltActToBeAdded.UserData[key] != eltActThatAlreadyCollected.UserData[key])) " is 120.
Long Statement,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,CheckCodeSequenceNovelty,The length of the statement  "                                    if (eltDataToBeAdded.UserData.Keys.Any(key => eltDataToBeAdded.UserData[key] != eltDataThatAlreadyCollected.UserData[key])) " is 123.
Long Statement,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,CheckCodeSequenceNovelty,The length of the statement  "//                                        if (actionToBeAdded.UserData[key] != actionThatAlreadyCollected.UserData[key]) { " is 122.
Long Statement,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,RecordCodeSequence,The length of the statement  "//Console.WriteLine(@"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ resultElement.GetType().Name = " + resultElement.GetType().Name); " is 134.
Long Statement,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,RecordCodeSequence,The length of the statement  "Console.WriteLine(@"////////////////////////////////////////////////////////// null != resultDataCollection " + resultDataCollection.GetType().Name); " is 149.
Long Statement,SePSX,WebDriverModule,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\Autofac\WebDriverModule.cs,Load,The length of the statement  "            //builder.Register(ChromeDriverService.CreateDefaultService()' (new Parameter[]{ (new Autofac.Builder. Parameter(string)) })).As<ChromeDriverService>(); " is 152.
Long Statement,SePSX,WebDriverModule,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\Autofac\WebDriverModule.cs,Load,The length of the statement  "//                (c' (new Autofac.NamedParameter("driverPath"' s))) => c.Resolve<ChromeDriverService.CreateDefaultService(s)) " is 126.
Long Statement,SePSX,WebDriverModule,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\Autofac\WebDriverModule.cs,Load,The length of the statement  "            //builder.Register(InternetExplorerDriverService.CreateDefaultService((string s) => )).As<InternetExplorerDriverService>(); " is 123.
Long Statement,SePSX,WebDriverModule,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\Autofac\WebDriverModule.cs,Load,The length of the statement  "//        public InternetExplorerDriver(InternetExplorerOptions options) : this(InternetExplorerDriverService.CreateDefaultService()' options' TimeSpan.FromSeconds(60.0)) " is 170.
Long Statement,SePSX,WebDriverModule,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\Autofac\WebDriverModule.cs,Load,The length of the statement  "//        public InternetExplorerDriver(string internetExplorerDriverServerDirectory) : this(internetExplorerDriverServerDirectory' new InternetExplorerOptions()) " is 162.
Long Statement,SePSX,WebDriverModule,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\Autofac\WebDriverModule.cs,Load,The length of the statement  "//        public InternetExplorerDriver(string internetExplorerDriverServerDirectory' InternetExplorerOptions options) : this(internetExplorerDriverServerDirectory' options' TimeSpan.FromSeconds(60.0)) " is 201.
Long Statement,SePSX,WebDriverModule,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\Autofac\WebDriverModule.cs,Load,The length of the statement  "//        public InternetExplorerDriver(string internetExplorerDriverServerDirectory' InternetExplorerOptions options' TimeSpan commandTimeout) : this(InternetExplorerDriverService.CreateDefaultService(internetExplorerDriverServerDirectory)' options' commandTimeout) " is 266.
Long Statement,SePSX,WebDriverModule,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\Autofac\WebDriverModule.cs,Load,The length of the statement  "//        public InternetExplorerDriver(DriverService service' InternetExplorerOptions options' TimeSpan commandTimeout) : base(new DriverServiceCommandExecutor(service' commandTimeout)' options.ToCapabilities()) " is 212.
Long Statement,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetDriverProcess,The length of the statement  "            var newProcesses = processArray.Where(process => !DriverProcesses.Contains(process) && process.MainWindowHandle.ToInt32() > 0).ToList(); " is 136.
Long Statement,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,ClickOnElement,The length of the statement  "                            !(clickActionsOnWebElement || clickActionsDouble || clickActionsRight || clickActionsJustHere || clickActionsClickAndHold)) { " is 125.
Long Statement,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,ConvertWebDriverOrWebElementToAutomationElement,The length of the statement  "//                        if (((RemoteWebElement)webDriverOrElement).Size.Height != resultElement.Current.BoundingRectangle.Height && " is 133.
Long Statement,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,ConvertWebDriverOrWebElementToAutomationElement,The length of the statement  "//                            ((RemoteWebElement)webDriverOrElement).Size.Width != resultElement.Current.BoundingRectangle.Width) { " is 131.
Long Statement,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,getWebElement,The length of the statement  "//Console.WriteLine("getWebElement: 00024 fakeRemoteWebElement.GetType().Name = " + fakeRemoteWebElement.GetType().Name); " is 121.
Long Statement,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,getWebElement,The length of the statement  "//Console.WriteLine("getWebElement: 00024 ((RemoteWebElement)fakeRemoteWebElement).GetType().Name = " + ((RemoteWebElement)fakeRemoteWebElement).GetType().Name); " is 161.
Long Statement,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,getWebElement,The length of the statement  "////Console.WriteLine("getWebElement: 00024 ((RemoteWebElement)fakeRemoteWebElement).Enabled = " + ((RemoteWebElement)fakeRemoteWebElement).Enabled.ToString()); " is 160.
Long Statement,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,getWebElement,The length of the statement  "////Console.WriteLine("getWebElement: 00024 ((RemoteWebElement)fakeRemoteWebElement).TagName = " + ((RemoteWebElement)fakeRemoteWebElement).TagName); " is 149.
Long Statement,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,getWebElement,The length of the statement  "////Console.WriteLine("getWebElement: 00024 ((RemoteWebElement)result[0]).TagName = " + ((RemoteWebElement)result[0]).TagName); " is 127.
Long Statement,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,getWebElement,The length of the statement  "                    //cmdlet.WriteVerbose(cmdlet' "(System.DateTime.Now - startTime).TotalSeconds = " + (System.DateTime.Now - startTime).TotalSeconds); " is 132.
Long Statement,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,getWebElement,The length of the statement  "                    //cmdlet.WriteVerbose(cmdlet' "the decision: " + ((System.DateTime.Now - startTime).TotalSeconds - (cmdlet.Timeout / 1000)).ToString()); " is 136.
Long Statement,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetDecoratedCollection,The length of the statement  "                    //WebDriverFactory.Container.Resolve<WebElementDecorator>(); //(new NamedParameter("realWebElement"' resultWebElement)); " is 120.
Long Statement,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetDecoratedCollection,The length of the statement  "//Console.WriteLine("GetDecoratedCollection: 00006+: " + ((WebElementDecorator)decorator).DecoratedWebElement.ToString()); " is 122.
Long Statement,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetScreenshotOfCmdletInput,The length of the statement  "                    //                                ((IWebDriver)(cmdlet as HasWebElementInputCmdletBase).InputObject[i]).FindElement(By.TagName("html")); " is 136.
Long Statement,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetScreenshotOfCmdletInput,The length of the statement  "                    //                            cmdlet.WriteVerbose(cmdlet' "inputCollection.Length = " + inputCollection.Length.ToString()); " is 123.
Long Statement,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetScreenshotOfCmdletInput,The length of the statement  "                        //                                ((IWebDriver)(cmdlet as HasWebDriverInputCmdletBase).InputObject[i]).FindElement(By.TagName("html")); " is 135.
Long Statement,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetScreenshotOfCmdletInput,The length of the statement  "                        //                            cmdlet.WriteVerbose(cmdlet' "inputCollection.Length = " + inputCollection.Length.ToString()); " is 123.
Long Statement,SePSX,WebDriverFactory,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\WebDriverFactory.cs,GetDriver,The length of the statement  "//                        OpenQA.Selenium.Chrome.ChromeDriverService chromeService = OpenQA.Selenium.Chrome.ChromeDriverService.CreateDefaultService(); " is 151.
Long Statement,SePSX,WebDriverFactory,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\WebDriverFactory.cs,GetDriver,The length of the statement  "//                        SeHelper.GetDriverProcess(Drivers.Chrome' driver.Title + SeHelper.DriverTitleComplementChrome); " is 121.
Long Statement,SePSX,WebDriverFactory,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\WebDriverFactory.cs,GetDriver,The length of the statement  "//                        OpenQA.Selenium.DriverService ieService = OpenQA.Selenium.IE.InternetExplorerDriverService.CreateDefaultService(ieSubFolder); " is 151.
Long Statement,SePSX,WebDriverFactory,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\WebDriverFactory.cs,GetDriver,The length of the statement  "//                        SeHelper.GetDriverProcess(Drivers.InternetExplorer' driver.Title + SeHelper.DriverTitleComplementInternetExplorer); " is 141.
Complex Conditional,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,IsNotFakeWebElement,The conditional expression  "resultElement.TagName != ConstAuxElementClicked &&                  resultElement.TagName != ConstAuxElementData &&                  resultElement.TagName != ConstAuxElementSelected &&                  resultElement.TagName != ConstAuxElementTypedIn"  is complex.
Complex Conditional,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,ClickOnElement,The conditional expression  "clickByWebElementMethod ||                              !(clickActionsOnWebElement || clickActionsDouble || clickActionsRight || clickActionsJustHere || clickActionsClickAndHold)"  is complex.
Complex Conditional,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetElementAncestors,The conditional expression  "currentChildElement.Location == resultElement.Location &&                                  currentChildElement.TagName == resultElement.TagName &&                                  currentChildElement.Size == resultElement.Size &&                                  currentChildElement.Text == resultElement.Text"  is complex.
Empty Catch Block,SePSX,CommonCmdletBase,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Inheritance\CommonCmdletBase.cs,WriteObjectMethod060OutputResult,The method has an empty catch block.
Empty Catch Block,SePSX,CommonCmdletBase,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Inheritance\CommonCmdletBase.cs,CloseLogFile,The method has an empty catch block.
Empty Catch Block,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,RecordDataItem,The method has an empty catch block.
Empty Catch Block,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,RecordDataItem,The method has an empty catch block.
Empty Catch Block,SePSX,WebDriverModule,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\Autofac\WebDriverModule.cs,Load,The method has an empty catch block.
Empty Catch Block,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,Highlight,The method has an empty catch block.
Empty Catch Block,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,Highlight,The method has an empty catch block.
Empty Catch Block,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,Highlight,The method has an empty catch block.
Empty Catch Block,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,Highlight,The method has an empty catch block.
Empty Catch Block,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetSquare,The method has an empty catch block.
Empty Catch Block,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetSquare,The method has an empty catch block.
Empty Catch Block,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,StartWebDriver,The method has an empty catch block.
Empty Catch Block,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,AddDriverToCollection,The method has an empty catch block.
Empty Catch Block,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,AddDriverToCollection,The method has an empty catch block.
Empty Catch Block,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetParentWebElement,The method has an empty catch block.
Empty Catch Block,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetWebElement,The method has an empty catch block.
Empty Catch Block,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetWebElement,The method has an empty catch block.
Empty Catch Block,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetWebElement,The method has an empty catch block.
Empty Catch Block,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,getWebElement,The method has an empty catch block.
Empty Catch Block,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetElementAncestors,The method has an empty catch block.
Empty Catch Block,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetScreenshotOfCmdletInput,The method has an empty catch block.
Empty Catch Block,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetScreenshotOfCmdletInput,The method has an empty catch block.
Empty Catch Block,SePSX,CurrentData,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UserSettings\CurrentData.cs,ResetData,The method has an empty catch block.
Magic Number,SePSX,CommonCmdletBase,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Inheritance\CommonCmdletBase.cs,WriteObjectMethod050OnSuccessDelay,The following statement contains a magic number: WriteVerbose(this' (Preferences.OnSuccessDelay / 1000).ToString() + " seconds");
Magic Number,SePSX,GetCmdletBase,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Inheritance\GetCmdletBase.cs,GetCmdletBase,The following statement contains a magic number: Seconds = Timeout / 1000;
Magic Number,SePSX,GetElementByTypeCmdletBase,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Inheritance\GetElementByTypeCmdletBase.cs,GetElementByTypeCmdletBase,The following statement contains a magic number: Seconds = Timeout / 1000;
Magic Number,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,RecordActions,The following statement contains a magic number: (DateTime.Now - startTime).TotalSeconds >                       (cmdlet.Timeout / 1000) &&                      cmdlet.Wait
Magic Number,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetWebElementCoordinates,The following statement contains a magic number: var driverCoordinates = new int[2];
Magic Number,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetWebElement,The following statement contains a magic number: errorReport = "JavaScript = \"" + cmdletGet.JavaScript.Substring(0' 10) + "...\"";
Magic Number,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,getWebElement,The following statement contains a magic number: errorReport += " = \"" + parameterValue.Substring(0' 10) + "\"";
Magic Number,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,getWebElement,The following statement contains a magic number: (DateTime.Now - startTime).TotalSeconds >                      (cmdlet.Timeout / 1000) &&                      //cmdlet.Wait) {                      //wait) {                      WaitForElement
Magic Number,SePSX,WebDriverFactory,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\WebDriverFactory.cs,GetDriver,The following statement contains a magic number: switch (driverType) {  //                    case Drivers.Chrome:  //                        //SeHelper.CollectDriverProcesses(Drivers.Chrome);  ////                    ChromeOptions optCh =   ////                        new ChromeOptions();  //  //                        ChromeOptions optCh = //OptionsFactory.GetChromeOptions();  //                        // resolve ChromeOptions  //                        WebDriverFactory.Container.Resolve<ChromeOptions>();  //  //                        // 20121003  //                        //driver = new ChromeDriver(optCh);  //  //                        // 20121003  //                        OpenQA.Selenium.Chrome.ChromeDriverService chromeService = OpenQA.Selenium.Chrome.ChromeDriverService.CreateDefaultService();  //                        //cmdlet.WriteObject(cmdlet' chromeService.ServiceUrl);  //                        //cmdlet.WriteObject(cmdlet' chromeService);  //                        //chromeService.Start();  //  //                        driver = new ChromeDriver(chromeService' optCh' TimeSpan.FromSeconds(60));  //  //                        SeHelper.GetDriverProcess(Drivers.Chrome' driver.Title + SeHelper.DriverTitleComplementChrome);  //                        break;                      case Drivers.Firefox:                          //SeHelper.CollectDriverProcesses(Drivers.Firefox);                            // 20121003                          //FirefoxProfile ffProfile = new FirefoxProfile();                          //ffProfile.AcceptUntrustedCertificates = true;                          //ffProfile.EnableNativeEvents = true;                          ////driver = new FirefoxDriver();                          //driver = new FirefoxDriver(ffProfile);                              // 20121003  //                            ICapabilities ffCapabilities =  //                                new OpenQA.Selenium.Support.Events.WebElementEventArgs  //                    ICapabilities ffCapabilities =  //                        new DesiredCapabilities();                            var ffCapabilities = CapabilitiesFactory.GetCapabilities();                            _driver = new FirefoxDriver(ffCapabilities);                              SeHelper.GetDriverProcess(Drivers.Firefox' _driver.Title + SeHelper.DriverTitleComplementFirefox.Substring(3));                            _driver.Manage().Timeouts().SetScriptTimeout(TimeSpan.FromSeconds(60));                          break;  //                    case Drivers.InternetExplorer:  //                        //OpenQA.Selenium.IE.InternetExplorerOptions optIE =  //                        //    new InternetExplorerOptions();  //                        //optIE.  ////                    InternetExplorerOptions optIE =  ////                        new InternetExplorerOptions();  //  //                        //InternetExplorerOptions optIE = OptionsFactory.GetIEOptions();  //                        InternetExplorerOptions optIE =  //                          WebDriverFactory.Container.Resolve<InternetExplorerOptions>();  //  //                        optIE.EnableNativeEvents = true;  //                        optIE.IgnoreZoomLevel = true;  //                        optIE.IntroduceInstabilityByIgnoringProtectedModeSettings = true;  //  //  //                        //SeHelper.CollectDriverProcesses(Drivers.InternetExplorer);  //  //                        //string ieSubFolder = string.Empty;  //                        // 20120901  //                        //System.Reflection.Assembly[] assms =   //                        //    System.AppDomain.CurrentDomain.GetAssemblies();  //                        //foreach (System.Reflection.Assembly assm in assms) {  //                        //    if (assm.FullName.Contains("SePSX")) {  //                        //        ieSubFolder =   //                        //            assm.Location.Substring(0' assm.Location.LastIndexOf('\\'));  //                        //        break;  //                        //    }  //                        //}  //  //                        string ieSubFolder = System.IO.Path.GetDirectoryName(cmdlet.GetType().Assembly.Location);  //  //                        if (cmdlet.Architecture == InternetExplorer.x86) {  //                            ieSubFolder += "\\32\\";  //                        }  //                        if (cmdlet.Architecture == InternetExplorer.x64) {  //                            ieSubFolder += "\\64\\";  //                        }  //  //  //                        //driver = new InternetExplorerDriver(  //  //                        // 20121003  //                        OpenQA.Selenium.DriverService ieService = OpenQA.Selenium.IE.InternetExplorerDriverService.CreateDefaultService(ieSubFolder);  //  //                        ieService.Start();  //  //  //                        driver = new InternetExplorerDriver(ieService' optIE' TimeSpan.FromSeconds(10));  //  //                        // 20121003  //                        //driver = new InternetExplorerDriver(ieSubFolder' optIE);  //  //                        SeHelper.GetDriverProcess(Drivers.InternetExplorer' driver.Title + SeHelper.DriverTitleComplementInternetExplorer);  //                        break;                      case Drivers.Safari:                          //SeHelper.CollectDriverProcesses(Drivers.Safari);                            //driver = new SafariDriver();                          //driver = WebDriverFactory.GetNativeDriver(driverType);                            _driver = GetNativeDriver(driverType);                            SeHelper.GetDriverProcess(Drivers.Safari' _driver.Title + SeHelper.DriverTitleComplementSafari);                          break;                      case Drivers.Html:                          _driver = new RemoteWebDriver(DesiredCapabilities.HtmlUnit());                          break;                      default:                          throw new Exception("Invalid value for Drivers");                  }
Magic Number,SePSX,WebDriverFactory,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\WebDriverFactory.cs,GetDriver,The following statement contains a magic number: switch (driverType) {  //                    case Drivers.Chrome:  //                        //SeHelper.CollectDriverProcesses(Drivers.Chrome);  ////                    ChromeOptions optCh =   ////                        new ChromeOptions();  //  //                        ChromeOptions optCh = //OptionsFactory.GetChromeOptions();  //                        // resolve ChromeOptions  //                        WebDriverFactory.Container.Resolve<ChromeOptions>();  //  //                        // 20121003  //                        //driver = new ChromeDriver(optCh);  //  //                        // 20121003  //                        OpenQA.Selenium.Chrome.ChromeDriverService chromeService = OpenQA.Selenium.Chrome.ChromeDriverService.CreateDefaultService();  //                        //cmdlet.WriteObject(cmdlet' chromeService.ServiceUrl);  //                        //cmdlet.WriteObject(cmdlet' chromeService);  //                        //chromeService.Start();  //  //                        driver = new ChromeDriver(chromeService' optCh' TimeSpan.FromSeconds(60));  //  //                        SeHelper.GetDriverProcess(Drivers.Chrome' driver.Title + SeHelper.DriverTitleComplementChrome);  //                        break;                      case Drivers.Firefox:                          //SeHelper.CollectDriverProcesses(Drivers.Firefox);                            // 20121003                          //FirefoxProfile ffProfile = new FirefoxProfile();                          //ffProfile.AcceptUntrustedCertificates = true;                          //ffProfile.EnableNativeEvents = true;                          ////driver = new FirefoxDriver();                          //driver = new FirefoxDriver(ffProfile);                              // 20121003  //                            ICapabilities ffCapabilities =  //                                new OpenQA.Selenium.Support.Events.WebElementEventArgs  //                    ICapabilities ffCapabilities =  //                        new DesiredCapabilities();                            var ffCapabilities = CapabilitiesFactory.GetCapabilities();                            _driver = new FirefoxDriver(ffCapabilities);                              SeHelper.GetDriverProcess(Drivers.Firefox' _driver.Title + SeHelper.DriverTitleComplementFirefox.Substring(3));                            _driver.Manage().Timeouts().SetScriptTimeout(TimeSpan.FromSeconds(60));                          break;  //                    case Drivers.InternetExplorer:  //                        //OpenQA.Selenium.IE.InternetExplorerOptions optIE =  //                        //    new InternetExplorerOptions();  //                        //optIE.  ////                    InternetExplorerOptions optIE =  ////                        new InternetExplorerOptions();  //  //                        //InternetExplorerOptions optIE = OptionsFactory.GetIEOptions();  //                        InternetExplorerOptions optIE =  //                          WebDriverFactory.Container.Resolve<InternetExplorerOptions>();  //  //                        optIE.EnableNativeEvents = true;  //                        optIE.IgnoreZoomLevel = true;  //                        optIE.IntroduceInstabilityByIgnoringProtectedModeSettings = true;  //  //  //                        //SeHelper.CollectDriverProcesses(Drivers.InternetExplorer);  //  //                        //string ieSubFolder = string.Empty;  //                        // 20120901  //                        //System.Reflection.Assembly[] assms =   //                        //    System.AppDomain.CurrentDomain.GetAssemblies();  //                        //foreach (System.Reflection.Assembly assm in assms) {  //                        //    if (assm.FullName.Contains("SePSX")) {  //                        //        ieSubFolder =   //                        //            assm.Location.Substring(0' assm.Location.LastIndexOf('\\'));  //                        //        break;  //                        //    }  //                        //}  //  //                        string ieSubFolder = System.IO.Path.GetDirectoryName(cmdlet.GetType().Assembly.Location);  //  //                        if (cmdlet.Architecture == InternetExplorer.x86) {  //                            ieSubFolder += "\\32\\";  //                        }  //                        if (cmdlet.Architecture == InternetExplorer.x64) {  //                            ieSubFolder += "\\64\\";  //                        }  //  //  //                        //driver = new InternetExplorerDriver(  //  //                        // 20121003  //                        OpenQA.Selenium.DriverService ieService = OpenQA.Selenium.IE.InternetExplorerDriverService.CreateDefaultService(ieSubFolder);  //  //                        ieService.Start();  //  //  //                        driver = new InternetExplorerDriver(ieService' optIE' TimeSpan.FromSeconds(10));  //  //                        // 20121003  //                        //driver = new InternetExplorerDriver(ieSubFolder' optIE);  //  //                        SeHelper.GetDriverProcess(Drivers.InternetExplorer' driver.Title + SeHelper.DriverTitleComplementInternetExplorer);  //                        break;                      case Drivers.Safari:                          //SeHelper.CollectDriverProcesses(Drivers.Safari);                            //driver = new SafariDriver();                          //driver = WebDriverFactory.GetNativeDriver(driverType);                            _driver = GetNativeDriver(driverType);                            SeHelper.GetDriverProcess(Drivers.Safari' _driver.Title + SeHelper.DriverTitleComplementSafari);                          break;                      case Drivers.Html:                          _driver = new RemoteWebDriver(DesiredCapabilities.HtmlUnit());                          break;                      default:                          throw new Exception("Invalid value for Drivers");                  }
Magic Number,SePSX,WebDriverFactory,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\WebDriverFactory.cs,GetDriverServer,The following statement contains a magic number: var commandTimeout = TimeSpan.FromSeconds(60.0);
Magic Number,SePSX,Preferences,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UserSettings\Preferences.cs,Preferences,The following statement contains a magic number: HighlighterBorder = 3;
Magic Number,SePSX,Preferences,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UserSettings\Preferences.cs,Preferences,The following statement contains a magic number: HighlighterBorderParent = 5;
Magic Number,SePSX,Preferences,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UserSettings\Preferences.cs,Preferences,The following statement contains a magic number: Timeout = 5000;
Magic Number,SePSX,Preferences,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UserSettings\Preferences.cs,Preferences,The following statement contains a magic number: TranscriptInterval = 200;
Magic Number,SePSX,Preferences,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UserSettings\Preferences.cs,Preferences,The following statement contains a magic number: OnSleepDelay = 50;
Magic Number,SePSX,Preferences,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UserSettings\Preferences.cs,Preferences,The following statement contains a magic number: MaximumErrorCount = 256;
Magic Number,SePSX,Preferences,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UserSettings\Preferences.cs,Preferences,The following statement contains a magic number: MaximumEventCount = 256;
Missing Default,SePSX,Recorder,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\Recording\Recorder.cs,RecordActionItem,The following switch statement is missing a default case: switch (resultWebElement.TagName) {                      case ConstAuxElementClicked:                          actionItem.UserData.Add("code"' CodeGenElementClick);                          break;                            #region temporaly commented  //                            case Recorder.constAuxElementData:  //                                try { elementId = resultWebElement.GetAttribute("id"); } catch {}  //                                try { elementName = resultWebElement.GetAttribute("name"); } catch {}  //                                try { elementClass = resultWebElement.GetAttribute("class"); } catch {}  //                                try { elementTagName = resultWebElement.TagName; } catch {}  //                                try { elementText = resultWebElement.Text; } catch {}  //                                if (string.Empty != elementId && "null" != elementId) {  //                                    actionItem.UserData.Add("code"' codeGenIdParameter + elementId + "'");  //                                    actionItem.UserData.Add("comment1"' codeGenNameComment + elementName + "'");  //                                    actionItem.UserData.Add("comment2"' codeGenClassComment + elementClass + "'");  //                                    actionItem.UserData.Add("comment3"' codeGenTagParameter + elementTagName + "'");  ////    Console.WriteLine("\"code\" added 2");  //                                } else if (string.Empty != elementName && "null" != elementName) {  //                                    actionItem.UserData.Add("code"' codeGenNameParameter + elementName + "'");  //                                    actionItem.UserData.Add("comment1"' codeGenClassComment + elementClass + "'");  //                                    actionItem.UserData.Add("comment2"' codeGenTagParameter + elementTagName + "'");  ////    Console.WriteLine("\"code\" added 3");  //                                } else if (string.Empty != elementClass && "null" != elementClass) {  //                                    actionItem.UserData.Add("code"' codeGenClassParameter + elementClass + "'");  //                                    actionItem.UserData.Add("comment1"' codeGenTagParameter + elementTagName + "'");  ////    Console.WriteLine("\"code\" added 4");  //                                } else if (string.Empty != elementTagName && "null" != elementTagName) {  //                                    actionItem.UserData.Add("code"' codeGenTagParameter + elementTagName + "'");  //                                }  //                                break;  //                    case Recorder.constAuxElementSelected:  //                        actionItem.UserData.Add(@"code"' @" | Invoke-SeWebElementClick");  //                        break;  #endregion temporaly commented                        case ConstAuxElementTypedIn:                          var typedInData = string.Empty;                          if (null != (typedInData = resultWebElement.GetAttribute("text"))) {                                                            // ??                                                        } else if (null != (typedInData = resultWebElement.GetAttribute("value"))) {                                                            // ??                          }                          actionItem.UserData.Add("code"' @" | Set-SeWebElementKeys '" + typedInData + "'");                          break;                      case ConstAuxElementSelected:                          // TBD                          break;                      case ConstAuxElementData:                          // nothing to do                          break;                  }
Missing Default,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,GetWebElementCoordinates,The following switch statement is missing a default case: switch (DriverProcess.ProcessName) {                      case ProcessNameChrome:                      case ProcessNameFirefox:                      case ProcessNameOpera:                          internalPaneCondition =                              new PropertyCondition(                                  AutomationElement.ControlTypeProperty'                                  ControlType.Document);                          break;                      case ProcessNameIe:                          internalPaneCondition =                              new PropertyCondition(                                  AutomationElement.ControlTypeProperty'                                  ControlType.Pane);                          break;                      case ProcessNameSafari:                          internalPaneCondition =                              new PropertyCondition(                                  AutomationElement.ControlTypeProperty'                                  ControlType.Pane);                          break;                          //                            case SeHelper.ProcessNameOpera:                          //                                internalPanec =                          //                                    new PropertyCondition(                          //                                        AutomationElement.ControlTypeProperty'                          //                                        ControlType.Pane);                          //                                break;                  }
Missing Default,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,SetDriverTimeout,The following switch statement is missing a default case: switch (timeoutType) {                          case DriverTimeoutTypes.ImplicitlyWait:                              cmdlet.WriteVerbose(cmdlet' "ImplicitlyWaitTimeout");                              driver.Manage().Timeouts().ImplicitlyWait(TimeSpan.FromMilliseconds(timeoutValue));                              break;                          case DriverTimeoutTypes.PageLoad:                              cmdlet.WriteVerbose(cmdlet' "PageLoadTimeout");                              driver.Manage().Timeouts().SetPageLoadTimeout(TimeSpan.FromMilliseconds(timeoutValue));                              break;                          case DriverTimeoutTypes.Script:                              cmdlet.WriteVerbose(cmdlet' "ScriptTimeout");                              driver.Manage().Timeouts().SetScriptTimeout(TimeSpan.FromMilliseconds(timeoutValue));                              break;                              //default:                              //    throw new Exception("Invalid value for DriverTimeoutTypes");                      }
Missing Default,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,getWebElement,The following switch statement is missing a default case: switch (parameterId) {                  case FindElementParameters.ByClassName:                      errorReport = "ClassName";                      by = By.ClassName(parameterValue);                      break;                  case FindElementParameters.ByCss:                      errorReport = "CSS";                      by = By.CssSelector(parameterValue);                      break;                  case FindElementParameters.ById:                      errorReport = "Id";                      by = By.Id(parameterValue);                      break;                  case FindElementParameters.ByLinkText:                      errorReport = "LinkText";                      by = By.LinkText(parameterValue);                      break;                  case FindElementParameters.ByName:                      errorReport = "Name";                      by = By.Name(parameterValue);                      break;                  case FindElementParameters.ByPartialLinkText:                      errorReport = "PartialLinkText";                      by = By.PartialLinkText(parameterValue);                      break;                  case FindElementParameters.ByTagName:                      errorReport = "TagName";                      by = By.TagName(parameterValue);                      break;                  case FindElementParameters.ByXPath:                      errorReport = "XPath";                      by = By.XPath(parameterValue);                      break;                  case FindElementParameters.ByJavaScript:                      errorReport = "JavaScript";                      by = null;                      break;                      //                case FindElementParameters.All:                      //                    by = null;                      //                    break;              }
Missing Default,SePSX,SeHelper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\SeHelper.cs,SwitchToFrame,The following switch statement is missing a default case: switch (selector) {                          case SwitchToFrameWays.FrameElement:                              errorReport = "FrameElement = " + ((SwitchToFrameCmdletBase)cmdlet).FrameElement.ToString();                              cmdlet.WriteVerbose(errorReport);                              cmdlet.WriteObject(cmdlet' (driver as IWebDriver).SwitchTo().Frame(((SwitchToFrameCmdletBase)cmdlet).FrameElement));                              break;                          case SwitchToFrameWays.FrameIndex:                              errorReport = "FrameIndex = " + ((SwitchToFrameCmdletBase)cmdlet).FrameIndex.ToString();                              cmdlet.WriteVerbose(errorReport);                              cmdlet.WriteObject(cmdlet' (driver as IWebDriver).SwitchTo().Frame(((SwitchToFrameCmdletBase)cmdlet).FrameIndex));                              break;                          case SwitchToFrameWays.FrameName:                              errorReport = "FrameName = " + ((SwitchToFrameCmdletBase)cmdlet).FrameName;                              cmdlet.WriteVerbose(errorReport);                              cmdlet.WriteObject(cmdlet' (driver as IWebDriver).SwitchTo().Frame(((SwitchToFrameCmdletBase)cmdlet).FrameName));                              break;                      }
Missing Default,SePSX,WebDriverFactory,D:\research\architectureSmells\repos\apetrovskiy_STUPS\SePSX\SePSX\Helpers\UnderlyingCode\WebDriverFactory.cs,GetDriverServer,The following switch statement is missing a default case: switch (cmdlet.DriverType) {                  case Drivers.Chrome:                      //SeHelper.GetDriverProcess(Drivers.Chrome' driver.Title + SeHelper.DriverTitleComplementChrome);                      //SeHelper.GetDriverProcess(driverType' driver.Title + SeHelper.DriverTitleComplementChrome);                      SeHelper.GetDriverProcess(cmdlet.DriverType' driver.Title + SeHelper.DriverTitleComplementChrome);                      break;  //                case Drivers.Firefox:  //                      //                    break;                  case Drivers.InternetExplorer:                      //SeHelper.GetDriverProcess(Drivers.InternetExplorer' driver.Title + SeHelper.DriverTitleComplementInternetExplorer);                      //SeHelper.GetDriverProcess(driverType' driver.Title + SeHelper.DriverTitleComplementInternetExplorer);                      SeHelper.GetDriverProcess(cmdlet.DriverType' driver.Title + SeHelper.DriverTitleComplementInternetExplorer);                      break;  //                case Drivers.Safari:  //                      //                    break;  //                case Drivers.HTML:  //                      //                    break;  //                default:  //                    throw new Exception("Invalid value for Drivers");              }
