Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Tmx.Server.Tests.Fakes,RestTemplateWrapper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Fakes\RestTemplateWrapper.cs,Execute,The method has 5 parameters. Parameters: url' method' requestCallback' responseExtractor' uriVariables
Long Parameter List,Tmx.Server.Tests.Fakes,RestTemplateWrapper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Fakes\RestTemplateWrapper.cs,Execute,The method has 5 parameters. Parameters: url' method' requestCallback' responseExtractor' uriVariables
Long Parameter List,Tmx.Server.Tests.Fakes,RestTemplateWrapper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Fakes\RestTemplateWrapper.cs,ExchangeAsync,The method has 5 parameters. Parameters: url' method' requestEntity' methodCompleted' uriVariables
Long Parameter List,Tmx.Server.Tests.Fakes,RestTemplateWrapper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Fakes\RestTemplateWrapper.cs,ExchangeAsync,The method has 5 parameters. Parameters: url' method' requestEntity' uriVariables' methodCompleted
Long Parameter List,Tmx.Server.Tests.Fakes,RestTemplateWrapper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Fakes\RestTemplateWrapper.cs,ExchangeAsync,The method has 5 parameters. Parameters: url' method' requestEntity' methodCompleted' uriVariables
Long Parameter List,Tmx.Server.Tests.Fakes,RestTemplateWrapper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Fakes\RestTemplateWrapper.cs,ExchangeAsync,The method has 5 parameters. Parameters: url' method' requestEntity' uriVariables' methodCompleted
Long Parameter List,Tmx.Server.Tests.Fakes,RestTemplateWrapper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Fakes\RestTemplateWrapper.cs,ExecuteAsync,The method has 6 parameters. Parameters: url' method' requestCallback' responseExtractor' methodCompleted' uriVariables
Long Parameter List,Tmx.Server.Tests.Fakes,RestTemplateWrapper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Fakes\RestTemplateWrapper.cs,ExecuteAsync,The method has 6 parameters. Parameters: url' method' requestCallback' responseExtractor' uriVariables' methodCompleted
Long Parameter List,Tmx.Server.Tests.Fakes,RestTemplateWrapper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Fakes\RestTemplateWrapper.cs,ExecuteAsync,The method has 5 parameters. Parameters: url' method' requestCallback' responseExtractor' methodCompleted
Long Parameter List,Tmx.Server.Tests.Fakes,RestTemplateWrapper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Fakes\RestTemplateWrapper.cs,ExchangeAsync,The method has 5 parameters. Parameters: url' method' requestEntity' cancellationToken' uriVariables
Long Parameter List,Tmx.Server.Tests.Fakes,RestTemplateWrapper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Fakes\RestTemplateWrapper.cs,ExchangeAsync,The method has 5 parameters. Parameters: url' method' requestEntity' cancellationToken' uriVariables
Long Parameter List,Tmx.Server.Tests.Fakes,RestTemplateWrapper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Fakes\RestTemplateWrapper.cs,ExchangeAsync,The method has 5 parameters. Parameters: url' method' requestEntity' cancellationToken' uriVariables
Long Parameter List,Tmx.Server.Tests.Fakes,RestTemplateWrapper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Fakes\RestTemplateWrapper.cs,ExchangeAsync,The method has 5 parameters. Parameters: url' method' requestEntity' cancellationToken' uriVariables
Long Parameter List,Tmx.Server.Tests.Fakes,RestTemplateWrapper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Fakes\RestTemplateWrapper.cs,ExecuteAsync,The method has 6 parameters. Parameters: url' method' requestCallback' responseExtractor' cancellationToken' uriVariables
Long Parameter List,Tmx.Server.Tests.Fakes,RestTemplateWrapper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Fakes\RestTemplateWrapper.cs,ExecuteAsync,The method has 6 parameters. Parameters: url' method' requestCallback' responseExtractor' cancellationToken' uriVariables
Long Parameter List,Tmx.Server.Tests.Fakes,RestTemplateWrapper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Fakes\RestTemplateWrapper.cs,ExecuteAsync,The method has 5 parameters. Parameters: url' method' requestCallback' responseExtractor' cancellationToken
Long Parameter List,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,GivenLoadedTestTask,The method has 8 parameters. Parameters: id' taskName' finished' status' isActive' rule' afterTask' testStatus
Long Parameter List,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,GivenAllocatedTestTask,The method has 8 parameters. Parameters: id' taskName' finished' status' isActive' rule' afterTask' testStatus
Long Identifier,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,,The length of the parameter TestClientHostnameAlternateExpected is 35.
Long Statement,Tmx.Server.Tests.Fakes,RestTemplateWrapper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Fakes\RestTemplateWrapper.cs,PostForMessage,The length of the statement  "            return new HttpResponseMessage<T>(_response.Body.DeserializeJson<T>()' _headers' (HttpStatusCode)_response.StatusCode' string.Empty); " is 133.
Long Statement,Tmx.Server.Tests.Fakes,RestTemplateWrapper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Fakes\RestTemplateWrapper.cs,Exchange,The length of the statement  "            // return new HttpResponseMessage((_response.Body.DeserializeJson()' _headers' (HttpStatusCode)_response.StatusCode' string.Empty); " is 131.
Long Statement,Tmx.Server.Tests.Helpers,ImportExportTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\ImportExportTestFixture.cs,AddTestSuiteWithOneScenario,The length of the statement  "                                Details = new List<ITestResultDetail>{ new TestResultDetail { DetailType = TestResultDetailTypes.Comment' TextDetail = "text data"' DetailStatus = TestStatuses.Passed }} " is 169.
Long Statement,Tmx.Server.Tests.Helpers,WorkflowLoaderTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\WorkflowLoaderTestFixture.cs,GivenThereAreTasksInCommonPool,The length of the statement  "            // TaskPool.Tasks.Add(new TestTask (TestTaskRuntimeTypes.Powershell) { Name = "task001"' Id = 10' WorkflowId = new Guid() }); " is 125.
Long Statement,Tmx.Server.Tests.Helpers,WorkflowLoaderTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\WorkflowLoaderTestFixture.cs,GivenThereAreTasksInCommonPool,The length of the statement  "            // TaskPool.Tasks.Add(new TestTask (TestTaskRuntimeTypes.Powershell) { Name = "task002"' Id = 20' WorkflowId = new Guid() }); " is 125.
Long Statement,Tmx.Server.Tests.Helpers,WorkflowLoaderTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\WorkflowLoaderTestFixture.cs,WhenAddedFakeImportedTasks,The length of the statement  "            workflowLoader.ImportXdocumentAndCreateWorkflowAndTasks(xDoc' workflowLoader.AddWorkflowAndReturnWorkflowId(xDoc' string.Empty)); " is 129.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldRegisterTheSecondTestClientAsXml,The length of the statement  "            GivenSendingRegistrationAsXml(GivenTestClient(TestClientHostnameExpected01' TestClientUsernameExpected01) as TestClient); " is 121.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldBeNoClientsAfterUnregisteringTheOnlyTestClientAsJson,The length of the statement  "            var testClient = GivenSendingRegistrationAsJson(GivenTestClient(TestClientHostnameExpected02' TestClientUsernameExpected02)); " is 125.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldBeNoClientsAfterUnregisteringTheOnlyTestClientAsXml,The length of the statement  "            var testClient = GivenSendingRegistrationAsXml(GivenTestClient(TestClientHostnameExpected02' TestClientUsernameExpected02) as TestClient); " is 138.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldBeOnlyOneClientAfterUnregisteringOneOfTwoTestClientsAsJson,The length of the statement  "            var testClient01 = GivenSendingRegistrationAsJson(GivenTestClient(TestClientHostnameExpected01' TestClientUsernameExpected01)); " is 127.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldBeOnlyOneClientAfterUnregisteringOneOfTwoTestClientsAsJson,The length of the statement  "            var testClient02 = GivenSendingRegistrationAsJson(GivenTestClient(TestClientHostnameExpected02' TestClientUsernameExpected02)); " is 127.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldBeOnlyOneClientAfterUnregisteringOneOfTwoTestClientsAsXml,The length of the statement  "            var testClient01 = GivenSendingRegistrationAsXml(GivenTestClient(TestClientHostnameExpected01' TestClientUsernameExpected01) as TestClient); " is 140.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldBeOnlyOneClientAfterUnregisteringOneOfTwoTestClientsAsXml,The length of the statement  "            var testClient02 = GivenSendingRegistrationAsXml(GivenTestClient(TestClientHostnameExpected02' TestClientUsernameExpected02) as TestClient); " is 140.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldSetTestClientFirstStatusAsJson,The length of the statement  "            var testClient01 = GivenSendingRegistrationAsJson(GivenTestClient(TestClientHostnameExpected01' TestClientUsernameExpected01)); " is 127.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldSetTestClientFirstStatusAsJson,The length of the statement  "            Assert.Equal(TheCurrentDetailedStatus' ClientsCollection.Clients.First(client => client.Id == testClient01.Id).DetailedStatus); " is 127.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldSetTestClientFirstStatusAsXml,The length of the statement  "            var testClient01 = GivenSendingRegistrationAsXml(GivenTestClient(TestClientHostnameExpected01' TestClientUsernameExpected01) as TestClient); " is 140.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldSetTestClientFirstStatusAsXml,The length of the statement  "            Assert.Equal(TheCurrentDetailedStatus' ClientsCollection.Clients.First(client => client.Id == testClient01.Id).DetailedStatus); " is 127.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldSetTestClientSecondStatusAsJson,The length of the statement  "            var testClient01 = GivenSendingRegistrationAsJson(GivenTestClient(TestClientHostnameExpected01' TestClientUsernameExpected01)); " is 127.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldSetTestClientSecondStatusAsJson,The length of the statement  "            Assert.Equal(TheLastDetailedStatus' ClientsCollection.Clients.First(client => client.Id == testClient01.Id).DetailedStatus); " is 124.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldSetTestClientSecondStatusAsXml,The length of the statement  "            var testClient01 = GivenSendingRegistrationAsXml(GivenTestClient(TestClientHostnameExpected01' TestClientUsernameExpected01) as TestClient); " is 140.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldSetTestClientSecondStatusAsXml,The length of the statement  "            Assert.Equal(TheLastDetailedStatus' ClientsCollection.Clients.First(client => client.Id == testClient01.Id).DetailedStatus); " is 124.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldSetTestClientEmptyStatusAsJson,The length of the statement  "            var testClient01 = GivenSendingRegistrationAsJson(GivenTestClient(TestClientHostnameExpected01' TestClientUsernameExpected01)); " is 127.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldSetTestClientEmptyStatusAsXml,The length of the statement  "            var testClient01 = GivenSendingRegistrationAsXml(GivenTestClient(TestClientHostnameExpected01' TestClientUsernameExpected01) as TestClient); " is 140.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldNotSetTestClientStatusFromWrongClientIdAsJson,The length of the statement  "            var testClient01 = GivenSendingRegistrationAsJson(GivenTestClient(TestClientHostnameExpected01' TestClientUsernameExpected01)); " is 127.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldNotSetTestClientStatusFromWrongClientIdAsJson,The length of the statement  "            Assert.Equal(TheCurrentDetailedStatus' ClientsCollection.Clients.First(client => client.Id == testClient01.Id).DetailedStatus); " is 127.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldNotSetTestClientStatusFromWrongClientIdAsXml,The length of the statement  "            var testClient01 = GivenSendingRegistrationAsXml(GivenTestClient(TestClientHostnameExpected01' TestClientUsernameExpected01) as TestClient); " is 140.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldNotSetTestClientStatusFromWrongClientIdAsXml,The length of the statement  "            Assert.Equal(TheCurrentDetailedStatus' ClientsCollection.Clients.First(client => client.Id == testClient01.Id).DetailedStatus); " is 127.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldReturnRegisteredClientByIdAsJson,The length of the statement  "            var testClient02 = GivenSendingRegistrationAsJson(GivenTestClient(TestClientHostnameExpected02' TestClientUsernameExpected02)); " is 127.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldReturnRegisteredClientByIdAsXml,The length of the statement  "            var testClient02 = GivenSendingRegistrationAsJson(GivenTestClient(TestClientHostnameExpected02' TestClientUsernameExpected02)); " is 127.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,WhenGettingAllRegisteredClientsAsJson,The length of the statement  "            _response = _browser.Get(UrlList.TestClients_Root + UrlList.TestClientRegistrationPoint_relPath' with => with.Accept("application/json")); " is 138.
Long Statement,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,WhenGettingAllRegisteredClientsAsXml,The length of the statement  "            _response = _browser.Get(UrlList.TestClients_Root + UrlList.TestClientRegistrationPoint_relPath' with => with.Accept("application/xml")); " is 137.
Long Statement,Tmx.Server.Tests.Modules,TestResultsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestResultsModuleTestFixture.cs,ShouldAcceptWhenPostingNoData,The length of the statement  "            testResultsExporter.GetTestResultsAsXdocument(new SearchCmdletBaseDataObject { FilterAll = true }' new List<ITestSuite>()' new List<ITestPlatform>()); " is 150.
Long Statement,Tmx.Server.Tests.Modules,TestResultsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestResultsModuleTestFixture.cs,ShouldSendOneTestSuiteWithInnerData,The length of the statement  "            Xunit.Assert.Equal(suites[0].TestScenarios[0].TestResults[0].Id' _testRun.TestSuites[0].TestScenarios[0].TestResults[0].Id); " is 124.
Long Statement,Tmx.Server.Tests.Modules,TestResultsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestResultsModuleTestFixture.cs,ShouldSendThreeTestSuitesWithInnerData,The length of the statement  "            Xunit.Assert.Equal(suites[0].TestScenarios[0].TestResults[0].Id' _testRun.TestSuites[0].TestScenarios[0].TestResults[0].Id); " is 124.
Long Statement,Tmx.Server.Tests.Modules,TestResultsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestResultsModuleTestFixture.cs,ShouldSendThreeTestSuitesWithInnerData,The length of the statement  "            Xunit.Assert.Equal(suites[1].TestScenarios[0].TestResults[0].Id' _testRun.TestSuites[1].TestScenarios[0].TestResults[0].Id); " is 124.
Long Statement,Tmx.Server.Tests.Modules,TestResultsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestResultsModuleTestFixture.cs,ShouldSendThreeTestSuitesWithInnerData,The length of the statement  "            Xunit.Assert.Equal(suites[2].TestScenarios[0].TestResults[0].Id' _testRun.TestSuites[2].TestScenarios[0].TestResults[0].Id); " is 124.
Long Statement,Tmx.Server.Tests.Modules,TestResultsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestResultsModuleTestFixture.cs,GetElementWithTestResults,The length of the statement  "            return testResultsExporter.CreateSuitesXElementWithParameters(suites' scenarios' testResults' (new XMLElementsNativeStruct())); " is 127.
Long Statement,Tmx.Server.Tests.Modules,TestResultsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestResultsModuleTestFixture.cs,WhenGettingTestResults,The length of the statement  "            _response = _browser.Get(GetPathToResourcesCollection(typeof(List<ITestSuite>))' (with) => with.Accept("application/json")); " is 124.
Long Statement,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldCreateFirstTestRunOfDefaultWorkflowRunningAsJson,The length of the statement  "            WhenSendingTestRunAsJson(TestConstants.Workflow03Name' UrlList.TestRunsControlPoint_absPath_for_newDefaultTestRun + "paramValue"' null); " is 136.
Long Statement,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldSetTestRunStatusCancelingOnCancelingOfRunningTestRunWithRegisteredClients,The length of the statement  "            ThenTestTaskStatusIs(TaskPool.TasksForClients[1]' TestTaskStatuses.New); // emulates the situation when a cancel task has been ready to be sent to a client " is 155.
Long Statement,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,GivenTestRunPending,The length of the statement  "            var testRunCommand = new TestRunCommand { WorkflowName = testWorkflowName' Status = TestRunStatuses.Running }; // will be pending " is 129.
Long Statement,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,WhenGettingTestRun,The length of the statement  "            _response = _browser.Get(UrlList.TestRunsControlPoint_absPath + TestRunQueue.TestRuns[numberOfTheTestRun].Id' with => with.Accept("application/json")); " is 151.
Long Statement,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideATaskToTestClientIfTheClientMatchesTheRule,The length of the statement  "            var expectedTask = GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 0); " is 121.
Long Statement,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideATaskOnlyAfterTaskThisDependsOnIsCompleted,The length of the statement  "            var givenTask02 = GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 4); " is 120.
Long Statement,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideNoTaskToTestClientThatLostItsRegistration,The length of the statement  "            var givenTask01 = GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 0); " is 120.
Long Statement,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldCompleteTheCurrentTaskOnClientUnregistration,The length of the statement  "//            var testClient = new TestClient { Hostname = testClientHostnameExpected' Username = testClientUsernameExpected }; " is 127.
Long Statement,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldCompleteTheCurrentTaskOnClientUnregistration,The length of the statement  "//            var response = browser.Post(UrnList.TestClientRegistrationPoint' with => with.JsonBody<ITestClient>(testClient)); " is 127.
Long Statement,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideTaskByTaskOnLoadingNewTasks,The length of the statement  "            var givenTask02 = GivenLoadedTestTask(10' "task name"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 0); " is 121.
Long Statement,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideATaskToTestClientIfTheClientMatchesTheRuleAndThereAreNoTestRuns,The length of the statement  "            var expectedTask = GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 0); " is 121.
Long Statement,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideATaskToTwoTestClientsIfTheyMatchTheRule,The length of the statement  "            var expectedTask = GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' TestClientHostnameExpected + "|" + TestClientHostnameAlternateExpected' 0); " is 165.
Long Statement,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideTasksToTwoTestClientsBasedOnHowTheyMatchRules,The length of the statement  "            var expectedTask01 = GivenLoadedTestTask(5' "task name 01"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 0); " is 126.
Long Statement,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideTasksToTwoTestClientsBasedOnHowTheyMatchRules,The length of the statement  "            var expectedTask02 = GivenLoadedTestTask(6' "task name 02"' false' TestTaskStatuses.New' true' TestClientHostnameExpected + "|" + TestClientHostnameAlternateExpected' 0); " is 170.
Long Statement,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldNotFailTestRunOnATaskFailedByTestResults,The length of the statement  "            var expectedTask01 = GivenLoadedTestTask(5' "task name 01"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 0' TestStatuses.Failed); " is 147.
Long Statement,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldNotFailTestRunOnATaskFailedByTestResults,The length of the statement  "            var expectedTask02 = GivenLoadedTestTask(6' "task name 02"' false' TestTaskStatuses.New' true' TestClientHostnameExpected + "|" + TestClientHostnameAlternateExpected' 0); " is 170.
Long Statement,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldFailTestRunOnACriticalTaskFailedByTestResults,The length of the statement  "            var expectedTask01 = GivenLoadedTestTask(5' "task name 01"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 0' TestStatuses.Failed); " is 147.
Long Statement,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldFailTestRunOnACriticalTaskFailedByTestResults,The length of the statement  "            GivenLoadedTestTask(6' "task name 02"' false' TestTaskStatuses.New' true' TestClientHostnameExpected + "|" + TestClientHostnameAlternateExpected' 0); " is 149.
Long Statement,Tmx.Server.Tests.UnitTestingHelpers,TestFactory,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\UnitTestingHelpers\TestFactory.cs,GetBrowserForTestClientsModule,The length of the statement  "            // http://stackoverflow.com/questions/24776929/nancy-testing-seems-slow-is-there-anything-im-should-be-doing-to-improve-perfo/25745960#25745960 " is 143.
Long Statement,Tmx.Server.Tests.UnitTestingHelpers,TestFactory,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\UnitTestingHelpers\TestFactory.cs,GetBrowserForTestClientsModule,The length of the statement  "            return new Browser(with => with.Modules(typeof(TestClientsModule)' typeof(ServerControlModule)' typeof(TestRunsModule))); " is 121.
Long Statement,Tmx.Server.Tests.UnitTestingHelpers,TestFactory,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\UnitTestingHelpers\TestFactory.cs,GetBrowserForTestClientsModule,The length of the statement  "            // return new Browser(with => with.Modules(typeof(TestClientsModule)' typeof(ServerControlModule)' typeof(TestRunsModule)).DisableAutoRegistrations()); " is 151.
Long Statement,Tmx.Server.Tests.UnitTestingHelpers,TestFactory,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\UnitTestingHelpers\TestFactory.cs,GetBrowserForTestTasksModule,The length of the statement  "            return new Browser(with => with.Modules(typeof(TestTasksModule)' typeof(TestClientsModule))); // ' typeof(ServerControlModule)' typeof(TestRunsModule))); " is 153.
Long Statement,Tmx.Server.Tests.UnitTestingHelpers,TestFactory,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\UnitTestingHelpers\TestFactory.cs,GetBrowserForTestTasksModule,The length of the statement  "            // return new Browser(with => with.Modules(typeof(TestTasksModule)' typeof(TestClientsModule)).DisableAutoRegistrations()); " is 123.
Long Statement,Tmx.Server.Tests.UnitTestingHelpers,TestFactory,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\UnitTestingHelpers\TestFactory.cs,GetBrowserForTestRunsModule,The length of the statement  "            // return new Browser(with => with.Modules(typeof(TestRunsModule)' typeof(ServerControlModule)).DisableAutoRegistrations()); " is 124.
Long Statement,Tmx.Server.Tests.UnitTestingHelpers,TestFactory,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\UnitTestingHelpers\TestFactory.cs,GetTestRunWithStatus,The length of the statement  "                rules.ToList().ForEach(rule => TaskPool.Tasks.Add(new TestTask { Id = ++taskId' Rule = rule' WorkflowId = workflow.Id' TestRunId = testRun.Id })); " is 146.
Long Statement,Tmx.Server.Tests.UnitTestingHelpers,TestFactory,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\UnitTestingHelpers\TestFactory.cs,GetTestRunWithStatus,The length of the statement  "                // rules.ToList().ForEach(rule => TaskPool.Tasks.Add(new TestTask (TestTaskRuntimeTypes.Powershell) { Id = ++taskId' Rule = rule' WorkflowId = workflow.Id' TestRunId = testRun.Id })); " is 183.
Magic Number,Tmx.Server.Tests.Helpers,ImportExportTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\ImportExportTestFixture.cs,ShouldImportExportedData,The following statement contains a magic number: ThenThereAreNPlatformsInXdocument(2' sourceTestPlatforms);
Magic Number,Tmx.Server.Tests.Helpers,ImportExportTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\ImportExportTestFixture.cs,ShouldImportExportedData,The following statement contains a magic number: ThenThereAreNSuitesInXdocument(2' sourceTestSuites);
Magic Number,Tmx.Server.Tests.Helpers,ImportExportTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\ImportExportTestFixture.cs,ShouldImportExportedTwoDataSets,The following statement contains a magic number: ThenThereAreNPlatformsInXdocument(4' sourceTestPlatforms);
Magic Number,Tmx.Server.Tests.Helpers,ImportExportTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\ImportExportTestFixture.cs,ShouldImportExportedTwoDataSets,The following statement contains a magic number: ThenThereAreNSuitesInXdocument(4' sourceTestSuites);
Magic Number,Tmx.Server.Tests.Helpers,ImportExportTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\ImportExportTestFixture.cs,ShouldImportExportedDataTwiceWithoutDuplication,The following statement contains a magic number: ThenThereAreNPlatformsInXdocument(2' sourceTestPlatforms);
Magic Number,Tmx.Server.Tests.Helpers,ImportExportTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\ImportExportTestFixture.cs,ShouldImportExportedDataTwiceWithoutDuplication,The following statement contains a magic number: ThenThereAreNSuitesInXdocument(2' sourceTestSuites);
Magic Number,Tmx.Server.Tests.Helpers,ImportExportTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\ImportExportTestFixture.cs,ShouldImportExportedDataThriceWithoutDuplication,The following statement contains a magic number: ThenThereAreNPlatformsInXdocument(2' sourceTestPlatforms);
Magic Number,Tmx.Server.Tests.Helpers,ImportExportTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\ImportExportTestFixture.cs,ShouldImportExportedDataThriceWithoutDuplication,The following statement contains a magic number: ThenThereAreNSuitesInXdocument(2' sourceTestSuites);
Magic Number,Tmx.Server.Tests.Helpers,ImportExportTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\ImportExportTestFixture.cs,ShouldImportExportedDataWithDuplicatesThriceWithoutDuplication,The following statement contains a magic number: ThenThereAreNPlatformsInXdocument(2' sourceTestPlatforms);
Magic Number,Tmx.Server.Tests.Helpers,ImportExportTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\ImportExportTestFixture.cs,ShouldImportExportedDataWithDuplicatesThriceWithoutDuplication,The following statement contains a magic number: ThenThereAreNSuitesInXdocument(2' sourceTestSuites);
Magic Number,Tmx.Server.Tests.Helpers,ImportExportTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\ImportExportTestFixture.cs,ShouldImportExportedDataWithExclusion,The following statement contains a magic number: ThenThereAreNPlatformsInXdocument(2' sourceTestPlatforms);
Magic Number,Tmx.Server.Tests.Helpers,ImportExportTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\ImportExportTestFixture.cs,ShouldImportExportedDataWithExclusion,The following statement contains a magic number: ThenThereAreNSuitesInXdocument(2' sourceTestSuites);
Magic Number,Tmx.Server.Tests.Helpers,WorkflowLoaderTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\WorkflowLoaderTestFixture.cs,ShouldAdd8TasksToTheCommonPoolOnAddingATaskCollection,The following statement contains a magic number: ThenNumberOfCommonTasksIncreasedBy(10);
Magic Number,Tmx.Server.Tests.Helpers,WorkflowLoaderTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\WorkflowLoaderTestFixture.cs,ShouldAddAWorkflowToTheCollection,The following statement contains a magic number: ThenNumberOfCommonTasksIncreasedBy(10);
Magic Number,Tmx.Server.Tests.Helpers,WorkflowLoaderTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\WorkflowLoaderTestFixture.cs,ShouldAddTasksWithWorkflowId,The following statement contains a magic number: ThenNumberOfCommonTasksIncreasedBy(10);
Magic Number,Tmx.Server.Tests.Helpers,WorkflowLoaderTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\WorkflowLoaderTestFixture.cs,ShouldAddTasksWithWorkflowId,The following statement contains a magic number: ThenThereAreNumberOfTasksForSelectedWorkflow(10' workflowId);
Magic Number,Tmx.Server.Tests.Helpers,WorkflowLoaderTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\WorkflowLoaderTestFixture.cs,ShouldAddNoTasksIfNoValidPathProvided,The following statement contains a magic number: ThenNumberOfCommonTasksIncreasedBy(10);
Magic Number,Tmx.Server.Tests.Helpers,WorkflowLoaderTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\WorkflowLoaderTestFixture.cs,ShouldAddNoTasksIfNoValidPathProvided,The following statement contains a magic number: ThenThereAreNumberOfTasksForSelectedWorkflow(10' workflowId);
Magic Number,Tmx.Server.Tests.Helpers,WorkflowLoaderTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\WorkflowLoaderTestFixture.cs,GivenThereAreTasksInCommonPool,The following statement contains a magic number: TaskPool.Tasks.Add(new TestTask { Name = "task001"' Id = 10' WorkflowId = new Guid() });
Magic Number,Tmx.Server.Tests.Helpers,WorkflowLoaderTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\WorkflowLoaderTestFixture.cs,GivenThereAreTasksInCommonPool,The following statement contains a magic number: TaskPool.Tasks.Add(new TestTask { Name = "task002"' Id = 20' WorkflowId = new Guid() });
Magic Number,Tmx.Server.Tests.Helpers,WorkflowLoaderTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\WorkflowLoaderTestFixture.cs,ThenNumberOfCommonTasksIncreasedBy,The following statement contains a magic number: Assert.Equal(2 + number' TaskPool.Tasks.Count);
Magic Number,Tmx.Server.Tests.Modules,ServerControlModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\ServerControlModuleTestFixture.cs,ShouldCreateSecondWorkflowObjectAsJson,The following statement contains a magic number: ThenThereShouldBeTheFollowingNumberOfWorkflowObjects(2);
Magic Number,Tmx.Server.Tests.Modules,ServerControlModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\ServerControlModuleTestFixture.cs,ShouldCreateSecondWorkflowObjectAsXml,The following statement contains a magic number: ThenThereShouldBeTheFollowingNumberOfWorkflowObjects(2);
Magic Number,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldRegisterTwoClientsInSeparateTestRunsAsJson,The following statement contains a magic number: Assert.Equal(2' ClientsCollection.Clients.Count);
Magic Number,Tmx.Server.Tests.Modules,TestClientsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestClientsModuleTestFixture.cs,ShouldReturnAllRegisteredClientsAsJson,The following statement contains a magic number: Assert.Equal(3' testClientCollection.Count);
Magic Number,Tmx.Server.Tests.Modules,TestResultsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestResultsModuleTestFixture.cs,ShouldSendThreeTestSuitesWithInnerData,The following statement contains a magic number: Xunit.Assert.Equal(suites[2].Id' _testRun.TestSuites[2].Id);
Magic Number,Tmx.Server.Tests.Modules,TestResultsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestResultsModuleTestFixture.cs,ShouldSendThreeTestSuitesWithInnerData,The following statement contains a magic number: Xunit.Assert.Equal(suites[2].Id' _testRun.TestSuites[2].Id);
Magic Number,Tmx.Server.Tests.Modules,TestResultsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestResultsModuleTestFixture.cs,ShouldSendThreeTestSuitesWithInnerData,The following statement contains a magic number: Xunit.Assert.Equal(suites[2].TestScenarios[0].Id' _testRun.TestSuites[2].TestScenarios[0].Id);
Magic Number,Tmx.Server.Tests.Modules,TestResultsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestResultsModuleTestFixture.cs,ShouldSendThreeTestSuitesWithInnerData,The following statement contains a magic number: Xunit.Assert.Equal(suites[2].TestScenarios[0].Id' _testRun.TestSuites[2].TestScenarios[0].Id);
Magic Number,Tmx.Server.Tests.Modules,TestResultsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestResultsModuleTestFixture.cs,ShouldSendThreeTestSuitesWithInnerData,The following statement contains a magic number: Xunit.Assert.Equal(suites[2].TestScenarios[0].TestResults[0].Id' _testRun.TestSuites[2].TestScenarios[0].TestResults[0].Id);
Magic Number,Tmx.Server.Tests.Modules,TestResultsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestResultsModuleTestFixture.cs,ShouldSendThreeTestSuitesWithInnerData,The following statement contains a magic number: Xunit.Assert.Equal(suites[2].TestScenarios[0].TestResults[0].Id' _testRun.TestSuites[2].TestScenarios[0].TestResults[0].Id);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldCreateSecondTestRunOfDefaultWorkflowObjectToAnotherWorkflowAndAnotherTestLabRunningAsJson,The following statement contains a magic number: ThenThereShouldBeTheFollowingNumberOfTestRunObjects(2);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldCreateSecondTestRunObjectToAnotherWorkflowAndAnotherTestLabRunningAsJson,The following statement contains a magic number: ThenThereShouldBeTheFollowingNumberOfTestRunObjects(2);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldCreateSecondTestRunObjectToTheSameTestLabAndAnotherWorkflowPendingAsJson,The following statement contains a magic number: ThenThereShouldBeTheFollowingNumberOfTestRunObjects(2);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldCreateSecondTestRunObjectToTheSameTestLabAndTheSameWorkflowPendingAsJson,The following statement contains a magic number: ThenThereShouldBeTheFollowingNumberOfTestRunObjects(2);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldCreateSecondTestRunObjectToTheSameTestLabAndTheSameWorkflowAsCompletedRunningAsJson,The following statement contains a magic number: ThenThereShouldBeTheFollowingNumberOfTestRunObjects(2);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterCompletionOfThePreviousOneAsJson,The following statement contains a magic number: ThenThereShouldBeTheFollowingNumberOfTestRunObjects(5);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterCompletionOfThePreviousOneAsJson,The following statement contains a magic number: ThenTestRunIsPending(TestRunQueue.TestRuns[2]);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterCompletionOfThePreviousOneAsJson,The following statement contains a magic number: ThenTestRunIsPending(TestRunQueue.TestRuns[3]);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterCompletionOfThePreviousOneAsJson,The following statement contains a magic number: ThenTestRunIsPending(TestRunQueue.TestRuns[4]);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterCompletionOfThePreviousOneAsJson,The following statement contains a magic number: ThenTestRunIdIs(4' Guid.Parse(_response.Headers[Resources.NewTestRun_lastTestRunId]));
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterInterruptionOfThePreviousOneAsJson,The following statement contains a magic number: ThenThereShouldBeTheFollowingNumberOfTestRunObjects(5);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterInterruptionOfThePreviousOneAsJson,The following statement contains a magic number: ThenTestRunIsPending(TestRunQueue.TestRuns[2]);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterInterruptionOfThePreviousOneAsJson,The following statement contains a magic number: ThenTestRunIsPending(TestRunQueue.TestRuns[3]);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterInterruptionOfThePreviousOneAsJson,The following statement contains a magic number: ThenTestRunIsPending(TestRunQueue.TestRuns[4]);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterInterruptionOfThePreviousOneAsJson,The following statement contains a magic number: ThenTestRunIdIs(4' Guid.Parse(_response.Headers[Resources.NewTestRun_lastTestRunId]));
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterInterruptionOfThePreviousOneByTestResultsAsJson,The following statement contains a magic number: ThenThereShouldBeTheFollowingNumberOfTestRunObjects(5);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterInterruptionOfThePreviousOneByTestResultsAsJson,The following statement contains a magic number: ThenTestRunIsPending(TestRunQueue.TestRuns[2]);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterInterruptionOfThePreviousOneByTestResultsAsJson,The following statement contains a magic number: ThenTestRunIsPending(TestRunQueue.TestRuns[3]);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterInterruptionOfThePreviousOneByTestResultsAsJson,The following statement contains a magic number: ThenTestRunIsPending(TestRunQueue.TestRuns[4]);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterInterruptionOfThePreviousOneByTestResultsAsJson,The following statement contains a magic number: ThenTestRunIdIs(4' Guid.Parse(_response.Headers[Resources.NewTestRun_lastTestRunId]));
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterCancellationOfThePreviousOneAsJson,The following statement contains a magic number: ThenThereShouldBeTheFollowingNumberOfTestRunObjects(5);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterCancellationOfThePreviousOneAsJson,The following statement contains a magic number: ThenTestRunIsPending(TestRunQueue.TestRuns[2]);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterCancellationOfThePreviousOneAsJson,The following statement contains a magic number: ThenTestRunIsPending(TestRunQueue.TestRuns[3]);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterCancellationOfThePreviousOneAsJson,The following statement contains a magic number: ThenTestRunIsPending(TestRunQueue.TestRuns[4]);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldRunOnlyOneTestRunAfterCancellationOfThePreviousOneAsJson,The following statement contains a magic number: ThenTestRunIdIs(4' Guid.Parse(_response.Headers[Resources.NewTestRun_lastTestRunId]));
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,ShouldSetTestRunStatusCancelingOnCancelingOfRunningTestRunWithRegisteredClients,The following statement contains a magic number: ThenTestTaskStatusIs(TaskPool.TasksForClients[2]' TestTaskStatuses.Canceled);
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,GivenTasksForRule,The following statement contains a magic number: TaskPool.TasksForClients.AddRange(                  new[] {                      new TestTask {                          Id = 1'                          TaskStatus = TestTaskStatuses.Running'                          Rule = rule'                          TestRunId = testRun.Id'                          WorkflowId = testRun.WorkflowId                      }'                      new TestTask {                          Id = 2'                          TaskStatus = TestTaskStatuses.New'                          IsCancel = true'                          Rule = rule'                          TestRunId = testRun.Id'                          WorkflowId = testRun.WorkflowId                      }'                      new TestTask {                          Id = 2'                          TaskStatus = TestTaskStatuses.New'                          Rule = rule'                          TestRunId = testRun.Id'                          WorkflowId = testRun.WorkflowId                      }                  }                 );
Magic Number,Tmx.Server.Tests.Modules,TestRunsModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestRunsModuleTestFixture.cs,GivenTasksForRule,The following statement contains a magic number: TaskPool.TasksForClients.AddRange(                  new[] {                      new TestTask {                          Id = 1'                          TaskStatus = TestTaskStatuses.Running'                          Rule = rule'                          TestRunId = testRun.Id'                          WorkflowId = testRun.WorkflowId                      }'                      new TestTask {                          Id = 2'                          TaskStatus = TestTaskStatuses.New'                          IsCancel = true'                          Rule = rule'                          TestRunId = testRun.Id'                          WorkflowId = testRun.WorkflowId                      }'                      new TestTask {                          Id = 2'                          TaskStatus = TestTaskStatuses.New'                          Rule = rule'                          TestRunId = testRun.Id'                          WorkflowId = testRun.WorkflowId                      }                  }                 );
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideATaskToTestClientIfTheClientMatchesTheRule,The following statement contains a magic number: var expectedTask = GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldNotRegisterTestClientIfTheClientDoesNotMatchTheRule,The following statement contains a magic number: GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' "no matches"' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideTheSecondTaskIfTheClientMatchesTheRule,The following statement contains a magic number: var givenTask02 = GivenLoadedTestTask(2' "task name 02"' false' TestTaskStatuses.New' true' "u"' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldNotProvideTheSecondTaskIfTheClientDoesNotMatchTheRule,The following statement contains a magic number: GivenLoadedTestTask(2' "task name 02"' false' TestTaskStatuses.New' true' "aaa"' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideTheSecondTaskIfTheClientMatchesTheRuleAndThereAreSeveralTasks,The following statement contains a magic number: GivenLoadedTestTask(2' "task name"' false' TestTaskStatuses.New' true' ".*aaa.*"' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideTheSecondTaskIfTheClientMatchesTheRuleAndThereAreSeveralTasks,The following statement contains a magic number: var givenTask03 = GivenLoadedTestTask(3' "task name 02"' false' TestTaskStatuses.New' true' "u"' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideTheSecondTaskIfTheClientMatchesTheRuleAndThereAreSeveralTasks,The following statement contains a magic number: GivenLoadedTestTask(4' "task name"' false' TestTaskStatuses.New' true' ".*aaa.*"' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldNotProvideTheSecondTaskIfTheClientDoesNotMatchTheRuleAndThereAreSeveral,The following statement contains a magic number: GivenLoadedTestTask(2' "task name"' false' TestTaskStatuses.New' true' ".*aaa.*"' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldNotProvideTheSecondTaskIfTheClientDoesNotMatchTheRuleAndThereAreSeveral,The following statement contains a magic number: GivenLoadedTestTask(3' "task name 02"' false' TestTaskStatuses.New' true' "aaa"' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldNotProvideTheSecondTaskIfTheClientDoesNotMatchTheRuleAndThereAreSeveral,The following statement contains a magic number: GivenLoadedTestTask(4' "task name 02"' false' TestTaskStatuses.New' true' "aaa"' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldCancelAllFurtherTasksAndUnregisterClientsOnFail,The following statement contains a magic number: GivenLoadedTestTask(2' "task name"' false' TestTaskStatuses.New' true' ".*aaa.*"' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldCancelAllFurtherTasksAndUnregisterClientsOnFail,The following statement contains a magic number: var givenTask03 = GivenLoadedTestTask(3' "task name 02"' false' TestTaskStatuses.New' true' "u"' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldCancelAllFurtherTasksAndUnregisterClientsOnFail,The following statement contains a magic number: GivenLoadedTestTask(4' "task name"' false' TestTaskStatuses.New' true' ".*aaa.*"' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldCancelAllFurtherTasksAndUnregisterClientsOnFail,The following statement contains a magic number: GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' "h"' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldCancelAllFurtherTasksAndUnregisterClientsOnTestResultsFailed,The following statement contains a magic number: GivenLoadedTestTask(2' "task name"' false' TestTaskStatuses.New' true' ".*aaa.*"' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldCancelAllFurtherTasksAndUnregisterClientsOnTestResultsFailed,The following statement contains a magic number: var givenTask03 = GivenLoadedTestTask(3' "task name 02"' false' TestTaskStatuses.New' true' "u"' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldCancelAllFurtherTasksAndUnregisterClientsOnTestResultsFailed,The following statement contains a magic number: GivenLoadedTestTask(4' "task name"' false' TestTaskStatuses.New' true' ".*aaa.*"' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldCancelAllFurtherTasksAndUnregisterClientsOnTestResultsFailed,The following statement contains a magic number: GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' "h"' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldNotProvideATaskBeforeTaskThisDependsOnIsCompleted,The following statement contains a magic number: GivenLoadedTestTask(4' "task name"' false' TestTaskStatuses.New' true' "another rule"' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldNotProvideATaskBeforeTaskThisDependsOnIsCompleted,The following statement contains a magic number: GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' testClientHostnameExpected' 4);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldNotProvideATaskBeforeTaskThisDependsOnIsCompleted,The following statement contains a magic number: GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' testClientHostnameExpected' 4);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldNotProvideATaskBeforeTaskThisDependsOnIsAllocated,The following statement contains a magic number: GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 4);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldNotProvideATaskBeforeTaskThisDependsOnIsAllocated,The following statement contains a magic number: GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 4);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideATaskOnlyAfterTaskThisDependsOnIsCompleted,The following statement contains a magic number: GivenAllocatedTestTask(4' "task name"' true' TestTaskStatuses.CompletedSuccessfully' true' "another rule"' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideATaskOnlyAfterTaskThisDependsOnIsCompleted,The following statement contains a magic number: var givenTask02 = GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 4);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideATaskOnlyAfterTaskThisDependsOnIsCompleted,The following statement contains a magic number: var givenTask02 = GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 4);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideNoTaskToUnregisteredTestClient,The following statement contains a magic number: GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideNoTaskToTestClientThatLostItsRegistration,The following statement contains a magic number: var givenTask01 = GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideTaskByTaskOnLoadingNewTasks,The following statement contains a magic number: GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideTaskByTaskOnLoadingNewTasks,The following statement contains a magic number: var givenTask02 = GivenLoadedTestTask(10' "task name"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideATaskToTestClientIfTheClientMatchesTheRuleAndThereAreNoTestRuns,The following statement contains a magic number: var expectedTask = GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideATaskToTwoTestClientsIfTheyMatchTheRule,The following statement contains a magic number: var expectedTask = GivenLoadedTestTask(5' "task name"' false' TestTaskStatuses.New' true' TestClientHostnameExpected + "|" + TestClientHostnameAlternateExpected' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideTasksToTwoTestClientsBasedOnHowTheyMatchRules,The following statement contains a magic number: var expectedTask01 = GivenLoadedTestTask(5' "task name 01"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldProvideTasksToTwoTestClientsBasedOnHowTheyMatchRules,The following statement contains a magic number: var expectedTask02 = GivenLoadedTestTask(6' "task name 02"' false' TestTaskStatuses.New' true' TestClientHostnameExpected + "|" + TestClientHostnameAlternateExpected' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldNotFailTestRunOnATaskFailedByTestResults,The following statement contains a magic number: var expectedTask01 = GivenLoadedTestTask(5' "task name 01"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 0' TestStatuses.Failed);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldNotFailTestRunOnATaskFailedByTestResults,The following statement contains a magic number: var expectedTask02 = GivenLoadedTestTask(6' "task name 02"' false' TestTaskStatuses.New' true' TestClientHostnameExpected + "|" + TestClientHostnameAlternateExpected' 0);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldFailTestRunOnACriticalTaskFailedByTestResults,The following statement contains a magic number: var expectedTask01 = GivenLoadedTestTask(5' "task name 01"' false' TestTaskStatuses.New' true' TestClientHostnameExpected' 0' TestStatuses.Failed);
Magic Number,Tmx.Server.Tests.Modules,TestTasksModuleTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Modules\TestTasksModuleTestFixture.cs,ShouldFailTestRunOnACriticalTaskFailedByTestResults,The following statement contains a magic number: GivenLoadedTestTask(6' "task name 02"' false' TestTaskStatuses.New' true' TestClientHostnameExpected + "|" + TestClientHostnameAlternateExpected' 0);
Magic Number,Tmx.Server.Tests.Stories,ClientRegistrationTests,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Stories\ClientRegistrationTests.cs,RegisterSecondClient,The following statement contains a magic number: ThenThereAreTheNumberOfClientsRegistered(2);
Magic Number,Tmx.Server.Tests.Stories,ClientRegistrationTests,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Stories\ClientRegistrationTests.cs,RegisterThirdClient,The following statement contains a magic number: ThenThereAreTheNumberOfClientsRegistered(3);
Magic Number,Tmx.Server.Tests.Stories,ClientRegistrationTests,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Stories\ClientRegistrationTests.cs,RegisterThirdClient,The following statement contains a magic number: ThenTheClientIsRegistered(2' Workflow01TestConsoleName);
Magic Number,Tmx.Server.Tests.Stories,ClientRegistrationTests,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Stories\ClientRegistrationTests.cs,RegisterClientsInTheFirstOfTwoTestRuns,The following statement contains a magic number: ThenThereAreTheNumberOfClientsRegistered(2);
Magic Number,Tmx.Server.Tests.Stories,ClientRegistrationTests,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Stories\ClientRegistrationTests.cs,RegisterClientsInTwoTestRuns,The following statement contains a magic number: ThenThereAreTheNumberOfClientsRegistered(2);
Duplicate Code,Tmx.Server.Tests.Helpers,ImportExportTestFixture,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Helpers\ImportExportTestFixture.cs,AddTestSuiteWithTwoScenarios,The method contains a code clone-set at the following line numbers (starting from the method definition): ((8' 28)' (30' 50))
Missing Default,Tmx.Server.Tests.Fakes,RestTemplateWrapper,D:\research\architectureSmells\repos\apetrovskiy_STUPS\TMX\Tests\Tmx.Server.Tests\Fakes\RestTemplateWrapper.cs,Exchange,The following switch statement is missing a default case: switch (method.ToString())              {                  case "GET":                      break;                  case "POST":                      break;                  case "PUT":                      break;                  case "DELETE":                      _response = _browser.Delete(url' with =>                      {                          with.Accept("application/json");                      });                      _headers = ExtractHttpHeadersFromResponse();                      return new HttpResponseMessage(_headers' (HttpStatusCode)_response.StatusCode' string.Empty);              }
