Implementation smell,Namespace,Class,File,Method,Description
Complex Method,R.Server.Common,AuthManager,C:\repos\ili_R.Server\R.Server\R.Server-Common\Auth\AuthManager.cs,AuthManager,Cyclomatic complexity of the method is 10
Complex Method,R.Server.Common,CommServicesHost,C:\repos\ili_R.Server\R.Server\R.Server-Common\Communications\CommServicesHost.cs,CommServicesHost,Cyclomatic complexity of the method is 8
Long Parameter List,R.Server.Common,CommServicesHost,C:\repos\ili_R.Server\R.Server\R.Server-Common\Communications\CommServicesHost.cs,CommServicesHost,The method has 5 parameters.
Long Parameter List,R.Server.Common,LogDataContext,C:\repos\ili_R.Server\R.Server\R.Server-Common\Logging\DB\Log.designer.cs,AddEvent,The method has 5 parameters.
Long Statement,R.Server.Common,AuthenticationProviderRegStrategy,C:\repos\ili_R.Server\R.Server\R.Server-Common\Auth\Authentication\AuthenticationProviderRegStrategy.cs,CreateElement,The length of the statement  "		throw new ArgumentException ("Authentication provider must implement '" + typeof(IAuthenticationProvider).FullName + "' interface."); " is 133.
Long Statement,R.Server.Common,AuthorizationProviderRegStrategy,C:\repos\ili_R.Server\R.Server\R.Server-Common\Auth\Authorization\AuthorizationProviderRegStrategy.cs,CreateElement,The length of the statement  "		throw new ArgumentException ("Authentication provider must implement '" + typeof(IAuthorizationProvider).FullName + "' interface."); " is 132.
Long Statement,R.Server.Common,AuthDataContext,C:\repos\ili_R.Server\R.Server\R.Server-Common\Auth\Native\Auth.designer.cs,GetLoginRoles,The length of the statement  "	return this.CreateMethodCallQuery<GetLoginRolesResult> (this' ((MethodInfo)(MethodInfo.GetCurrentMethod ()))' authenType' identityName); " is 136.
Long Statement,R.Server.Common,RServerWcfAuthorizationMgr,C:\repos\ili_R.Server\R.Server\R.Server-Common\Auth\Authorization\RServerWcfAuthorizationMgr.cs,CheckAccessCore,The length of the statement  "	return _accessChecker == null || _accessChecker (svcName' operationContext.Host.Description.ServiceType' methodName' principal); " is 128.
Long Statement,R.Server.Common,RegSecurityPolicyStrategy,C:\repos\ili_R.Server\R.Server\R.Server-Common\Auth\Policy\RegSecurityPolicyStrategy.cs,CreateElement,The length of the statement  "	var ifaces = context.Type.GetInterfaces ().Where (iface => iface.GetGenericTypeDefinition () == typeof(ISecurityPolicy<>)).ToArray (); " is 134.
Long Statement,R.Server.Common,RegSecurityPolicyStrategy,C:\repos\ili_R.Server\R.Server\R.Server-Common\Auth\Policy\RegSecurityPolicyStrategy.cs,CreateElement,The length of the statement  "		throw new ArgumentException ("Security policy must implement at least one of generic " + "interfaces' based on '" + typeof(ISecurityPolicy<>).FullName + "' type definition"); " is 174.
Long Statement,R.Server.Common,SecurityPolicyManager,C:\repos\ili_R.Server\R.Server\R.Server-Common\Auth\Policy\SecurityPolicyManager.cs,IsPermitted,The length of the statement  "			throw new ArgumentException ("Security policy '" + policyName + "' does not support '" + ctxType.FullName + "' context."); " is 122.
Long Statement,R.Server.Common,CommServicesHost,C:\repos\ili_R.Server\R.Server\R.Server-Common\Communications\CommServicesHost.cs,Run,The length of the statement  "		_logHelper.LogInfo (string.Format ("Listen endpoint '{0}' at address '{1}'"' _endpointConfigs [i].Name' _endpointUris [i])' LogEventImpotance.Unimportant); " is 155.
Long Statement,R.Server.Common,RCommServiceAttribute,C:\repos\ili_R.Server\R.Server\R.Server-Common\Communications\RCommServiceAttribute.cs,AddBindingParameters,The length of the statement  "	((IServiceBehavior)_stdAttribute).AddBindingParameters (serviceDescription' serviceHostBase' endpoints' bindingParameters); " is 123.
Long Statement,R.Server.Common,RCommServiceAttribute,C:\repos\ili_R.Server\R.Server\R.Server-Common\Communications\RCommServiceAttribute.cs,ApplyDispatchBehavior,The length of the statement  "		throw new ApplicationException ("Could not find ServiceProviderExtension for service' " + "that use RCommServiceAttribute"); " is 124.
Long Statement,R.Server.Common,LogDataContext,C:\repos\ili_R.Server\R.Server\R.Server-Common\Logging\DB\Log.designer.cs,AddEvent,The length of the statement  "	IExecuteResult result = this.ExecuteMethodCall (this' ((MethodInfo)(MethodInfo.GetCurrentMethod ()))' eventDate' eventType' eventImpotance' sourceName' message); " is 161.
Long Statement,R.Server.Common,Logger,C:\repos\ili_R.Server\R.Server\R.Server-Common\Logging\Logger.cs,WriteEventToTargets,The length of the statement  "				LogEvent (new LogEventInfo ("'" + name + "' target throw an exception and will be removed. " + badTargetMessages [i]' LogSource' LogEventImpotance.VeryImportant' LogEventType.Error)); " is 183.
Long Statement,R.Server.Common,TextWriterLogTarget,C:\repos\ili_R.Server\R.Server\R.Server-Common\Logging\TextWriterLogTarget.cs,WriteEvent,The length of the statement  "		writer.WriteLine ("{0}[{1}][{2}] {3}"' _eventTypeChars [eventInfo.Type]' eventDate' eventInfo.Source' eventInfo.Message); " is 121.
Long Statement,R.Server.Common,WindowsLogTarget,C:\repos\ili_R.Server\R.Server\R.Server-Common\Logging\Windows\WindowsLogTarget.cs,WriteEvent,The length of the statement  "	_eventLog.WriteEntry (string.Format (_messageTemplate' eventInfo.Source' eventInfo.Message)' RServerType2WindowsType (eventInfo.Type)' 0' (short)eventInfo.Impotance); " is 166.
Long Statement,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,IsTimeToStart,The length of the statement  "	if (Contains (_minutes' now.Minute) && Contains (_hours' now.Hour) && Contains (_monthDays' now.Day) && Contains (_months' now.Month) && Contains (_weekDays' GetWeekDay (now))) { " is 178.
Long Statement,R.Server.Common,ScheduledTaskHost,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\ScheduledTaskHost.cs,Start,The length of the statement  "		_logHelper.LogError (string.Format (Messages.ScheduledTaskFailedMessageTemplate' _taskConfig.Task' result.ErrorMessage)); " is 121.
Long Statement,R.Server.Common,SchedulerHost,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\SchedulerHost.cs,Start,The length of the statement  "		_logHelper.LogWarning (string.Format (Messages.SchedulerHostExceptionWarningTemplate' LogSource' ex.Message)' LogEventImpotance.Important); " is 139.
Long Statement,R.Server.Common,SchedulerHost,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\SchedulerHost.cs,OnTimerTick,The length of the statement  "			_logHelper.LogWarning (string.Format (Messages.SchedulerHostExceptionWarningTemplate' LogSource' ex.Message)' LogEventImpotance.Important); " is 139.
Long Statement,R.Server.Common,Scheduler,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\Scheduler.cs,Start,The length of the statement  "	_logHelper.LogInfo (string.Format (Messages.SchedulerStartingMessageTemplate' _schedulerConfig.Jobs.Length)' LogEventImpotance.Unimportant); " is 140.
Complex Conditional,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,IsTimeToStart,The conditional expression  "Contains (_minutes' now.Minute) && Contains (_hours' now.Hour) && Contains (_monthDays' now.Day) && Contains (_months' now.Month) && Contains (_weekDays' GetWeekDay (now))"  is complex.
Magic Number,R.Server.Common,UserNamePasswordPair,C:\repos\ili_R.Server\R.Server\R.Server-Common\Auth\UserNamePasswordPair.cs,GetHashCode,The following statement contains a magic number: return _userName.GetHashCode () + 29 * _password.GetHashCode ();  
Magic Number,R.Server.Common,RServer,C:\repos\ili_R.Server\R.Server\R.Server-Common\Core\RServer.cs,Run,The following statement contains a magic number: using (_commSvcsHost) {  	_commSvcsHost.Run ();  	if (Started != null)  		Started (this);  	_logHelper.LogInfo ("RServer '" + Name + "' turn into running state.");  	Thread.Sleep (100);  	// Wait logger  	if (serverStartedDelegate != null)  		serverStartedDelegate ();  	_serviceManager.GetRequiredService<IConfigService> ().ConfigChanged += ConfigChanged;  	_runEvent.WaitOne ();  	_serviceManager.GetRequiredService<IConfigService> ().ConfigChanged -= ConfigChanged;  }  
Magic Number,R.Server.Common,RServer,C:\repos\ili_R.Server\R.Server\R.Server-Common\Core\RServer.cs,Run,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,CronPeriod,The following statement contains a magic number: _minutes = ParseTimes (_entry.Minutes' 0' 59);  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,CronPeriod,The following statement contains a magic number: _hours = ParseTimes (_entry.Hours' 0' 23);  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,CronPeriod,The following statement contains a magic number: _months = ParseTimes (_entry.Months' 1' 12);  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,CronPeriod,The following statement contains a magic number: if (!_entry.MonthDays.Equals ("*") && _entry.Months.Equals ("*")) {  	// every n monthdays' disregarding weekdays  	_monthDays = ParseTimes (_entry.MonthDays' 1' 31);  	_weekDays = new List<int> {  		-1  	};  }  else if (_entry.MonthDays.Equals ("*") && !_entry.Months.Equals ("*")) {  	// every n weekdays' disregarding monthdays  	_weekDays = ParseTimes (_entry.WeekDays' 1' 7);  	_monthDays = new List<int> {  		-1  	};  }  else {  	// every n weekdays' every m monthdays  	_monthDays = ParseTimes (_entry.MonthDays' 1' 31);  	_weekDays = ParseTimes (_entry.WeekDays' 1' 7);  }  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,CronPeriod,The following statement contains a magic number: if (!_entry.MonthDays.Equals ("*") && _entry.Months.Equals ("*")) {  	// every n monthdays' disregarding weekdays  	_monthDays = ParseTimes (_entry.MonthDays' 1' 31);  	_weekDays = new List<int> {  		-1  	};  }  else if (_entry.MonthDays.Equals ("*") && !_entry.Months.Equals ("*")) {  	// every n weekdays' disregarding monthdays  	_weekDays = ParseTimes (_entry.WeekDays' 1' 7);  	_monthDays = new List<int> {  		-1  	};  }  else {  	// every n weekdays' every m monthdays  	_monthDays = ParseTimes (_entry.MonthDays' 1' 31);  	_weekDays = ParseTimes (_entry.WeekDays' 1' 7);  }  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,CronPeriod,The following statement contains a magic number: if (!_entry.MonthDays.Equals ("*") && _entry.Months.Equals ("*")) {  	// every n monthdays' disregarding weekdays  	_monthDays = ParseTimes (_entry.MonthDays' 1' 31);  	_weekDays = new List<int> {  		-1  	};  }  else if (_entry.MonthDays.Equals ("*") && !_entry.Months.Equals ("*")) {  	// every n weekdays' disregarding monthdays  	_weekDays = ParseTimes (_entry.WeekDays' 1' 7);  	_monthDays = new List<int> {  		-1  	};  }  else {  	// every n weekdays' every m monthdays  	_monthDays = ParseTimes (_entry.MonthDays' 1' 31);  	_weekDays = ParseTimes (_entry.WeekDays' 1' 7);  }  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,CronPeriod,The following statement contains a magic number: if (!_entry.MonthDays.Equals ("*") && _entry.Months.Equals ("*")) {  	// every n monthdays' disregarding weekdays  	_monthDays = ParseTimes (_entry.MonthDays' 1' 31);  	_weekDays = new List<int> {  		-1  	};  }  else if (_entry.MonthDays.Equals ("*") && !_entry.Months.Equals ("*")) {  	// every n weekdays' disregarding monthdays  	_weekDays = ParseTimes (_entry.WeekDays' 1' 7);  	_monthDays = new List<int> {  		-1  	};  }  else {  	// every n weekdays' every m monthdays  	_monthDays = ParseTimes (_entry.MonthDays' 1' 31);  	_weekDays = ParseTimes (_entry.WeekDays' 1' 7);  }  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,CronPeriod,The following statement contains a magic number: _monthDays = ParseTimes (_entry.MonthDays' 1' 31);  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,CronPeriod,The following statement contains a magic number: if (_entry.MonthDays.Equals ("*") && !_entry.Months.Equals ("*")) {  	// every n weekdays' disregarding monthdays  	_weekDays = ParseTimes (_entry.WeekDays' 1' 7);  	_monthDays = new List<int> {  		-1  	};  }  else {  	// every n weekdays' every m monthdays  	_monthDays = ParseTimes (_entry.MonthDays' 1' 31);  	_weekDays = ParseTimes (_entry.WeekDays' 1' 7);  }  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,CronPeriod,The following statement contains a magic number: if (_entry.MonthDays.Equals ("*") && !_entry.Months.Equals ("*")) {  	// every n weekdays' disregarding monthdays  	_weekDays = ParseTimes (_entry.WeekDays' 1' 7);  	_monthDays = new List<int> {  		-1  	};  }  else {  	// every n weekdays' every m monthdays  	_monthDays = ParseTimes (_entry.MonthDays' 1' 31);  	_weekDays = ParseTimes (_entry.WeekDays' 1' 7);  }  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,CronPeriod,The following statement contains a magic number: if (_entry.MonthDays.Equals ("*") && !_entry.Months.Equals ("*")) {  	// every n weekdays' disregarding monthdays  	_weekDays = ParseTimes (_entry.WeekDays' 1' 7);  	_monthDays = new List<int> {  		-1  	};  }  else {  	// every n weekdays' every m monthdays  	_monthDays = ParseTimes (_entry.MonthDays' 1' 31);  	_weekDays = ParseTimes (_entry.WeekDays' 1' 7);  }  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,CronPeriod,The following statement contains a magic number: _weekDays = ParseTimes (_entry.WeekDays' 1' 7);  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,CronPeriod,The following statement contains a magic number: _monthDays = ParseTimes (_entry.MonthDays' 1' 31);  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,CronPeriod,The following statement contains a magic number: _weekDays = ParseTimes (_entry.WeekDays' 1' 7);  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,ParseTimes,The following statement contains a magic number: foreach (var entry in list) {  	int start' end' interval;  	var parts = entry.Split (new[] {  		'-''  		'/'  	});  	if (parts [0].Equals ("*")) {  		if (parts.Length > 1) {  			start = bottom;  			end = top;  			interval = int.Parse (parts [1]);  		}  		else {  			// put a -1 in place  			start = -1;  			end = -1;  			interval = 1;  		}  	}  	else {  		// format is 0-8/2  		start = int.Parse (parts [0]);  		end = parts.Length > 1 ? int.Parse (parts [1]) : int.Parse (parts [0]);  		interval = parts.Length > 2 ? int.Parse (parts [2]) : 1;  	}  	for (var i = start; i <= end; i += interval)  		result.Add (i);  }  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,ParseTimes,The following statement contains a magic number: foreach (var entry in list) {  	int start' end' interval;  	var parts = entry.Split (new[] {  		'-''  		'/'  	});  	if (parts [0].Equals ("*")) {  		if (parts.Length > 1) {  			start = bottom;  			end = top;  			interval = int.Parse (parts [1]);  		}  		else {  			// put a -1 in place  			start = -1;  			end = -1;  			interval = 1;  		}  	}  	else {  		// format is 0-8/2  		start = int.Parse (parts [0]);  		end = parts.Length > 1 ? int.Parse (parts [1]) : int.Parse (parts [0]);  		interval = parts.Length > 2 ? int.Parse (parts [2]) : 1;  	}  	for (var i = start; i <= end; i += interval)  		result.Add (i);  }  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,ParseTimes,The following statement contains a magic number: if (parts [0].Equals ("*")) {  	if (parts.Length > 1) {  		start = bottom;  		end = top;  		interval = int.Parse (parts [1]);  	}  	else {  		// put a -1 in place  		start = -1;  		end = -1;  		interval = 1;  	}  }  else {  	// format is 0-8/2  	start = int.Parse (parts [0]);  	end = parts.Length > 1 ? int.Parse (parts [1]) : int.Parse (parts [0]);  	interval = parts.Length > 2 ? int.Parse (parts [2]) : 1;  }  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,ParseTimes,The following statement contains a magic number: if (parts [0].Equals ("*")) {  	if (parts.Length > 1) {  		start = bottom;  		end = top;  		interval = int.Parse (parts [1]);  	}  	else {  		// put a -1 in place  		start = -1;  		end = -1;  		interval = 1;  	}  }  else {  	// format is 0-8/2  	start = int.Parse (parts [0]);  	end = parts.Length > 1 ? int.Parse (parts [1]) : int.Parse (parts [0]);  	interval = parts.Length > 2 ? int.Parse (parts [2]) : 1;  }  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,ParseTimes,The following statement contains a magic number: interval = parts.Length > 2 ? int.Parse (parts [2]) : 1;  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,ParseTimes,The following statement contains a magic number: interval = parts.Length > 2 ? int.Parse (parts [2]) : 1;  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,GetWeekDay,The following statement contains a magic number: if (date.DayOfWeek.Equals (DayOfWeek.Sunday))  	return 7;  
Magic Number,R.Server.Common,CronPeriod,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\CronPeriod.cs,GetWeekDay,The following statement contains a magic number: return 7;  
Magic Number,R.Server.Common,SchedulerHost,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\SchedulerHost.cs,Start,The following statement contains a magic number: try {  	_timer = new Timer (OnTimerTick' null' TimeSpan.FromMinutes (1)' TimeSpan.FromSeconds (59));  	_stopEvent.WaitOne ();  }  catch (Exception ex) {  	_logHelper.LogWarning (string.Format (Messages.SchedulerHostExceptionWarningTemplate' LogSource' ex.Message)' LogEventImpotance.Important);  }  finally {  	Dispose ();  }  
Magic Number,R.Server.Common,SchedulerHost,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\SchedulerHost.cs,Start,The following statement contains a magic number: _timer = new Timer (OnTimerTick' null' TimeSpan.FromMinutes (1)' TimeSpan.FromSeconds (59));  
Magic Number,R.Server.Common,SchedulerHost,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\SchedulerHost.cs,CheckOlderTasks,The following statement contains a magic number: foreach (var taskName in _taskThreads.Keys) {  	var thread = _taskThreads [taskName];  	if (!thread.IsAlive) {  		thread.Join (TimeSpan.FromSeconds (10));  		_taskHosts.Remove (taskName);  	}  	else if (_taskHosts [taskName].StartTime > now.AddMinutes (30)) {  		// if task work more that some time' perhaps kill it?  		// more accurate idea is either to include kill time in config'  		// or to make TaskHost timered and starting a separate thread'  	}  }  
Magic Number,R.Server.Common,SchedulerHost,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\SchedulerHost.cs,CheckOlderTasks,The following statement contains a magic number: foreach (var taskName in _taskThreads.Keys) {  	var thread = _taskThreads [taskName];  	if (!thread.IsAlive) {  		thread.Join (TimeSpan.FromSeconds (10));  		_taskHosts.Remove (taskName);  	}  	else if (_taskHosts [taskName].StartTime > now.AddMinutes (30)) {  		// if task work more that some time' perhaps kill it?  		// more accurate idea is either to include kill time in config'  		// or to make TaskHost timered and starting a separate thread'  	}  }  
Magic Number,R.Server.Common,SchedulerHost,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\SchedulerHost.cs,CheckOlderTasks,The following statement contains a magic number: if (!thread.IsAlive) {  	thread.Join (TimeSpan.FromSeconds (10));  	_taskHosts.Remove (taskName);  }  else if (_taskHosts [taskName].StartTime > now.AddMinutes (30)) {  	// if task work more that some time' perhaps kill it?  	// more accurate idea is either to include kill time in config'  	// or to make TaskHost timered and starting a separate thread'  }  
Magic Number,R.Server.Common,SchedulerHost,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\SchedulerHost.cs,CheckOlderTasks,The following statement contains a magic number: if (!thread.IsAlive) {  	thread.Join (TimeSpan.FromSeconds (10));  	_taskHosts.Remove (taskName);  }  else if (_taskHosts [taskName].StartTime > now.AddMinutes (30)) {  	// if task work more that some time' perhaps kill it?  	// more accurate idea is either to include kill time in config'  	// or to make TaskHost timered and starting a separate thread'  }  
Magic Number,R.Server.Common,SchedulerHost,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\SchedulerHost.cs,CheckOlderTasks,The following statement contains a magic number: thread.Join (TimeSpan.FromSeconds (10));  
Magic Number,R.Server.Common,SchedulerHost,C:\repos\ili_R.Server\R.Server\R.Server-Common\Scheduler\SchedulerHost.cs,CheckOlderTasks,The following statement contains a magic number: if (_taskHosts [taskName].StartTime > now.AddMinutes (30)) {  	// if task work more that some time' perhaps kill it?  	// more accurate idea is either to include kill time in config'  	// or to make TaskHost timered and starting a separate thread'  }  
