Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,MainMenu,Cyclomatic complexity of the method is 32
Long Parameter List,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,ValidateRemoteCertificate,The method has 4 parameters.
Long Identifier,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,ProcessSearchFileInDownloadDirectory,The length of the parameter searchfileindownloaddirectoryMessage is 36.
Long Statement,WebAPIClient,DataStreamingExtensions,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\DataStreamingExtensions.cs,DownloadFile,The length of the statement  "					result = string.Format ("Download completed @ {0}' {1} time "' DateTime.Now.ToLongDateString ()' DateTime.Now.ToLongTimeString ()); " is 131.
Long Statement,WebAPIClient,DataStreamingExtensions,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\DataStreamingExtensions.cs,DownloadFile,The length of the statement  "					result = string.Format ("Download not succeeded @ {0}' {1} time \nException : {2}"' DateTime.Now.ToLongDateString ()' DateTime.Now.ToLongTimeString ()' JsonConvert.SerializeObject (response.Exception' Formatting.Indented)); " is 223.
Long Statement,WebAPIClient,DataStreamingExtensions,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\DataStreamingExtensions.cs,ValidateUpload,The length of the statement  "			throw new InvalidOperationException (string.Format ("Upload data content size is ({0} GB) which is beyond maximum allowed size(2.0 GB) !"' gigaSize)); " is 150.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,Main,The length of the statement  "		serverFullName = string.Format ("{0}.{1}"' Environment.MachineName' IPGlobalProperties.GetIPGlobalProperties ().DomainName); " is 124.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,MainMenu,The length of the statement  "		Console.WriteLine ("Select the operation you want to perform !\nNote: Each operation result will be displayed for only 5 seconds.\n"); " is 134.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,GetFileMetaData,The length of the statement  "		Console.WriteLine (string.Format ("Start calling GetFileMetaData operation @ {0}' {1} time "' DateTime.Now.ToLongDateString ()' DateTime.Now.ToLongTimeString ())); " is 163.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,ProcessGetFileMetaData,The length of the statement  "		string getFileMetaDataMessage = string.Format ("\nGetFileMatadata operation completed @ {0}' {1} time "' DateTime.Now.ToLongDateString ()' DateTime.Now.ToLongTimeString ()); " is 173.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,ProcessGetFileMetaData,The length of the statement  "		Console.WriteLine (string.Format ("{0} Message : \n{1}"' getFileMetaDataMessage' JsonConvert.SerializeObject (response.Result.Content.ReadAsAsync<object> ().TryResult ()' Formatting.Indented))); " is 194.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,SearchFile,The length of the statement  "		Console.WriteLine (string.Format ("Start calling SearchFileInDownloadDirectory operation @ {0}' {1} time "' DateTime.Now.ToLongDateString ()' DateTime.Now.ToLongTimeString ())); " is 177.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,ProcessSearchFileInDownloadDirectory,The length of the statement  "		string searchfileindownloaddirectoryMessage = string.Format ("\nSearchFileInDownloadDirectory operation completed @ {0}' {1} time "' DateTime.Now.ToLongDateString ()' DateTime.Now.ToLongTimeString ()); " is 201.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,ProcessSearchFileInDownloadDirectory,The length of the statement  "		Console.WriteLine (string.Format ("{0} Message : \n{1}"' searchfileindownloaddirectoryMessage' JsonConvert.SerializeObject (response.Result.Content.ReadAsAsync<object> ().TryResult ()' Formatting.Indented))); " is 208.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,DownloadFile,The length of the statement  "		Console.WriteLine (string.Format ("Start downloading @ {0}' {1} time "' DateTime.Now.ToLongDateString ()' DateTime.Now.ToLongTimeString ())); " is 141.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,UploadFile,The length of the statement  "				Console.WriteLine (string.Format ("Start uploading @ {0}' {1} time "' DateTime.Now.ToLongDateString ()' DateTime.Now.ToLongTimeString ())); " is 139.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,ProcessUploadResponse,The length of the statement  "		string uploadMessage = string.Format ("\nUpload completed @ {0}' {1} time "' DateTime.Now.ToLongDateString ()' DateTime.Now.ToLongTimeString ()); " is 145.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,ProcessUploadResponse,The length of the statement  "		Console.WriteLine (string.Format ("{0}\nUpload Message : \n{1}"' uploadMessage' JsonConvert.SerializeObject (response.Result.Content.ReadAsAsync<List<FileResponseMessage>> ().TryResult ()' Formatting.Indented))); " is 212.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,ProcessIISHttpsResponse,The length of the statement  "		Console.WriteLine (string.Concat ("Response message: \n"' JsonConvert.SerializeObject (response.Result.Content.ReadAsAsync<List<PhysicianBase>> ().TryResult ()' Formatting.Indented))); " is 184.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,CallSelfHostHttpsService,The length of the statement  "			ServicePointManager.ServerCertificateValidationCallback += new RemoteCertificateValidationCallback (ValidateRemoteCertificate); " is 127.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,CallOWINHttpsService,The length of the statement  "			ServicePointManager.ServerCertificateValidationCallback += new RemoteCertificateValidationCallback (ValidateRemoteCertificate); " is 127.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,ProcessRaiseSalaryRequest,The length of the statement  "		request.Content = new ObjectContent (typeof(PhysicianBase)' physician' new JsonMediaTypeFormatter ()' new MediaTypeHeaderValue ("text/json")); " is 142.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,ProcessRaiseSalaryResponse,The length of the statement  "		Console.WriteLine (string.Concat ("Response message : \nAfter Salary raised \n"' JsonConvert.SerializeObject (response.Result.Content.ReadAsAsync<object> ().TryResult ()' Formatting.Indented))); " is 194.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,ProcessFailResponse,The length of the statement  "	Console.WriteLine (string.Concat ("Unsuccessful Response message: \n"' string.Format ("HttpStatus {0}' ReasonPhrase {1} \nDescription {2}"' response.Result.StatusCode' response.Result.ReasonPhrase' response.Result.Content.ReadAsStringAsync ().TryResult ()))); " is 259.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,ValidateRemoteCertificate,The length of the statement  "	string message = string.Format ("SUBJECT: {0} \nISSUER: {1} \nEXPIRES: {2} \nCERTHASH: {3} \n"' certificate.Subject' certificate.Issuer' certificate.GetExpirationDateString ()' certificate.GetCertHashString ()); " is 211.
Long Statement,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,ValidateRemoteCertificate,The length of the statement  "	if (!string.IsNullOrWhiteSpace (certificate.Subject) && (certificate.Subject.ToLower ().Contains ("localhost") || certificate.Subject.Contains (serverFullName))) " is 161.
Long Statement,WebAPICommonLibrary,PhysicianSelfHostController,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\PhysicianSelfHostController.cs,CalculateSalaryRaise,The length of the statement  "		return Request.CreateResponse (HttpStatusCode.InternalServerError' new Message ().Content = string.Concat ("Error happened : - Message "' exception.Message)' new MediaTypeHeaderValue ("text/json")); " is 198.
Empty Catch Block,WebAPIClient,DataStreamingExtensions,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\DataStreamingExtensions.cs,TryResult,The method has an empty catch block.
Magic Number,WebAPIClient,DataStreamingExtensions,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\DataStreamingExtensions.cs,ValidateUpload,The following statement contains a magic number: if (multipartFormDataContent != null && multipartFormDataContent.Count () > 0) {  	long totalUploadFileSize = 0;  	foreach (var item in multipartFormDataContent)  		totalUploadFileSize += item.Headers.ContentLength ?? item.Headers.ContentLength.Value;  	gigaSize = Math.Round (totalUploadFileSize / (1024.0 * 1024.0 * 1024.0)' 5);  	if (totalUploadFileSize > int.MaxValue)  		// Max uploadable size is 2GB   		throw new InvalidOperationException (string.Format ("Upload data content size is ({0} GB) which is beyond maximum allowed size(2.0 GB) !"' gigaSize));  }  
Magic Number,WebAPIClient,DataStreamingExtensions,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\DataStreamingExtensions.cs,ValidateUpload,The following statement contains a magic number: if (multipartFormDataContent != null && multipartFormDataContent.Count () > 0) {  	long totalUploadFileSize = 0;  	foreach (var item in multipartFormDataContent)  		totalUploadFileSize += item.Headers.ContentLength ?? item.Headers.ContentLength.Value;  	gigaSize = Math.Round (totalUploadFileSize / (1024.0 * 1024.0 * 1024.0)' 5);  	if (totalUploadFileSize > int.MaxValue)  		// Max uploadable size is 2GB   		throw new InvalidOperationException (string.Format ("Upload data content size is ({0} GB) which is beyond maximum allowed size(2.0 GB) !"' gigaSize));  }  
Magic Number,WebAPIClient,DataStreamingExtensions,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\DataStreamingExtensions.cs,ValidateUpload,The following statement contains a magic number: if (multipartFormDataContent != null && multipartFormDataContent.Count () > 0) {  	long totalUploadFileSize = 0;  	foreach (var item in multipartFormDataContent)  		totalUploadFileSize += item.Headers.ContentLength ?? item.Headers.ContentLength.Value;  	gigaSize = Math.Round (totalUploadFileSize / (1024.0 * 1024.0 * 1024.0)' 5);  	if (totalUploadFileSize > int.MaxValue)  		// Max uploadable size is 2GB   		throw new InvalidOperationException (string.Format ("Upload data content size is ({0} GB) which is beyond maximum allowed size(2.0 GB) !"' gigaSize));  }  
Magic Number,WebAPIClient,DataStreamingExtensions,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\DataStreamingExtensions.cs,ValidateUpload,The following statement contains a magic number: if (multipartFormDataContent != null && multipartFormDataContent.Count () > 0) {  	long totalUploadFileSize = 0;  	foreach (var item in multipartFormDataContent)  		totalUploadFileSize += item.Headers.ContentLength ?? item.Headers.ContentLength.Value;  	gigaSize = Math.Round (totalUploadFileSize / (1024.0 * 1024.0 * 1024.0)' 5);  	if (totalUploadFileSize > int.MaxValue)  		// Max uploadable size is 2GB   		throw new InvalidOperationException (string.Format ("Upload data content size is ({0} GB) which is beyond maximum allowed size(2.0 GB) !"' gigaSize));  }  
Magic Number,WebAPIClient,DataStreamingExtensions,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\DataStreamingExtensions.cs,ValidateUpload,The following statement contains a magic number: gigaSize = Math.Round (totalUploadFileSize / (1024.0 * 1024.0 * 1024.0)' 5);  
Magic Number,WebAPIClient,DataStreamingExtensions,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\DataStreamingExtensions.cs,ValidateUpload,The following statement contains a magic number: gigaSize = Math.Round (totalUploadFileSize / (1024.0 * 1024.0 * 1024.0)' 5);  
Magic Number,WebAPIClient,DataStreamingExtensions,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\DataStreamingExtensions.cs,ValidateUpload,The following statement contains a magic number: gigaSize = Math.Round (totalUploadFileSize / (1024.0 * 1024.0 * 1024.0)' 5);  
Magic Number,WebAPIClient,DataStreamingExtensions,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\DataStreamingExtensions.cs,ValidateUpload,The following statement contains a magic number: gigaSize = Math.Round (totalUploadFileSize / (1024.0 * 1024.0 * 1024.0)' 5);  
Magic Number,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,Main,The following statement contains a magic number: ExecuteOperation (() => Console.WriteLine ("You exited the system successfully !")' 2);  
Magic Number,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,MainMenu,The following statement contains a magic number: Console.WindowWidth = 90;  
Magic Number,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,ProcessRaiseSalaryRequest,The following statement contains a magic number: using (HttpClient httpClient = new HttpClient ()) {  	HttpRequestMessage request = new HttpRequestMessage ();  	request.Method = HttpMethod.Post;  	// HttpMethod.Put is also works  	request.RequestUri = address;  	PhysicianBase physician = new InternalPhysician () {  		FirstName = "Joe"'  		LastName = "Doe"'  		Salary = 120000  	};  	string requestobject = JsonConvert.SerializeObject (physician' Formatting.Indented);  	Console.ForegroundColor = ConsoleColor.Green;  	Console.WriteLine ("Before Salary raised \n{0}"' requestobject);  	request.Content = new ObjectContent (typeof(PhysicianBase)' physician' new JsonMediaTypeFormatter ()' new MediaTypeHeaderValue ("text/json"));  	await httpClient.SendAsync (request).ContinueWith (response => {  		try {  			ProcessRaiseSalaryResponse (response);  		} catch (AggregateException aggregateException) {  			Console.ForegroundColor = ConsoleColor.Red;  			Console.WriteLine (string.Format ("Exception {0}"' aggregateException));  		}  	});  }  
Magic Number,WebAPIClient,Program,D:\newReposJune17\WondeTadesse_WebAPI_Thoughts\WebAPIClient\Program.cs,ExecuteOperation,The following statement contains a magic number: Thread.Sleep (sleepTimeInSeconds * 1000);  
