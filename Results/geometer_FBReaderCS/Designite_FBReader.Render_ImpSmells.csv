Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FBReader.Render.Downloading,BookDownloader,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Downloading\BookDownloader.cs,ParseBook,Cyclomatic complexity of the method is 10
Complex Method,FBReader.Render.Downloading,FileLoadingFactory,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Downloading\FileLoadingFactory.cs,GetFileLoader,Cyclomatic complexity of the method is 9
Complex Method,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,AppendLine,Cyclomatic complexity of the method is 9
Long Parameter List,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,BuildContext,The method has 6 parameters.
Long Parameter List,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,AppendLine,The method has 13 parameters.
Long Parameter List,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,BuildInlineItem,The method has 8 parameters.
Long Parameter List,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,CreateTextContext,The method has 6 parameters.
Long Parameter List,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,CreateText,The method has 8 parameters.
Long Parameter List,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,CreateImage,The method has 5 parameters.
Long Parameter List,FBReader.Render.PageRender,PageRenderer,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\PageRenderer.cs,RenderHighlight,The method has 5 parameters.
Long Parameter List,FBReader.Render.Parsing,BookFactory,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Parsing\BookFactory.cs,GetBookParser,The method has 5 parameters.
Long Statement,FBReader.Render.Downloading,BookDownloader,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Downloading\BookDownloader.cs,ParseBook,The length of the statement  "			using (var bookStorageFileStream = new IsolatedStorageFileStream (CreateBookPath (item)' FileMode.Open' storeForApplication)) { " is 127.
Long Statement,FBReader.Render.Downloading,BookDownloader,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Downloading\BookDownloader.cs,SaveBook,The length of the statement  "	using (var imageStorageFileStream = new IsolatedStorageFileStream (CreateImagesPath (item)' FileMode.Create' storeForApplication)) { " is 132.
Long Statement,FBReader.Render.Downloading.Loaders,LitresFileLoader,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Downloading\Loaders\LitresFileLoader.cs,CreateHttpContent,The length of the statement  "	var postParams = bodyParts.Select (bodyPart => bodyPart.Split ('=')).ToDictionary (keyValue => keyValue [0]' keyValue => keyValue [1]); " is 135.
Long Statement,FBReader.Render.Downloading.Loaders,StorageFolderFileLoader,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Downloading\Loaders\StorageFolderFileLoader.cs,LoadFileAsync,The length of the statement  "		var file = await SharedStorageAccessManager.CopySharedFileAsync (ApplicationData.Current.LocalFolder' fileId + ".tmp"' NameCollisionOption.ReplaceExisting' fileId); " is 164.
Long Statement,FBReader.Render.Downloading.Model,DownloadsContainer,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Downloading\Model\DownloadsContainer.cs,GetDataModelIndex,The length of the statement  "		if (((model.DataSourceID == data.DataSourceID) && string.Equals (model.Path' data.Path' StringComparison.CurrentCultureIgnoreCase)) && string.Equals (model.Name' data.Name' StringComparison.CurrentCultureIgnoreCase)) { " is 218.
Long Statement,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,BuildContexts,The length of the statement  "		top = p is ImageParagraphInfo ? BuildImageContext (context' p' top) : BuildContext (context' p' context.PageSize.Width' (int)AppSettings.Default.FontSettings.FontSize' paragraphID++' top); " is 188.
Long Statement,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,BuildContext,The length of the statement  "	return AppendLine (context' list' align == TextAlignment.Justify ? TextAlignment.Left : align' p' width' top' defaultFontSize' paragraphID' firstLine); " is 151.
Long Statement,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,AppendLine,The length of the statement  "	inlines.Aggregate (tempLeftMargin' (current' inlineItem) => BuildInlineItem (context' top' defaultFontSize' paragraphID' inlineItem' height' current' wordSpacing)); " is 164.
Long Statement,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,BuildInlineItem,The length of the statement  "	var wordContext = CreateText (context' inlineItem' inlineItem.Bold' inlineItem.Italic' fontSize' tempLeftMargin' topMargin' color); " is 131.
Long Statement,FBReader.Render.PageRender,PageCompositor,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\PageCompositor.cs,GetPageAsync,The length of the statement  "			PageInfo page = BookFactory.GetBookParser (_book.Type' tokens' _fontSize' _pageSize' _images).GetPage (tokenID' startText); " is 123.
Long Statement,FBReader.Render.PageRender,PageCompositor,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\PageCompositor.cs,GetPreviousPageAsync,The length of the statement  "			PageInfo previousPage = BookFactory.GetBookParser (_book.Type' tokens' _fontSize' _pageSize' _images).GetPreviousPage (tokenID' startText); " is 139.
Long Statement,FBReader.Render.PageRender,PageRenderer,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\PageRenderer.cs,RenderPageAsync,The length of the statement  "		PageSize = new Size (request.Panel.Width - AppSettings.Default.Margin.Left - AppSettings.Default.Margin.Right' request.Panel.Height - AppSettings.Default.Margin.Top - AppSettings.Default.Margin.Bottom)' " is 202.
Long Statement,FBReader.Render.PageRender,PageRenderer,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\PageRenderer.cs,RenderWordContext,The length of the statement  "		Foreground = wordRenderData.Color.HasValue ? new SolidColorBrush (wordRenderData.Color.Value) : AppSettings.Default.ColorScheme.TextForegroundBrush' " is 148.
Long Statement,FBReader.Render.PageRender,PageRenderer,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\PageRenderer.cs,RenderHighlight,The length of the statement  "	TextRenderData firstHighlightedText = context.Texts.FirstOrDefault (t => t.TokenID == tokenID) ?? (context.Texts).FirstOrDefault (); " is 132.
Long Statement,FBReader.Render.PageRender,PageRenderer,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\PageRenderer.cs,RenderHighlight,The length of the statement  "	TextRenderData lastHighlightedText = context.Texts.LastOrDefault (t => t.TokenID == endTokenID) ?? (context.Texts).LastOrDefault (); " is 132.
Long Statement,FBReader.Render.PageRender,PageRenderer,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\PageRenderer.cs,RenderHighlight,The length of the statement  "	var pointCollection = SelectionHelper.GetSelectionPolygon (firtstRect' lastRect' canvas.ActualWidth' context.OffsetX' Convert.ToDouble (AppSettings.Default.FontSettings.FontInterval)); " is 184.
Long Statement,FBReader.Render.Parsing,BookFactory,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Parsing\BookFactory.cs,GetBookParser,The length of the statement  "		return new BookBuilder (bookTokens' images' headerSizes' activeFontHelper' pageSize' fontSize' AppSettings.Default.Hyphenation' AppSettings.Default.UseCSSFontSize); " is 164.
Empty Catch Block,FBReader.Render.Downloading,BookDownloader,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Downloading\BookDownloader.cs,DownloadBook,The method has an empty catch block.
Empty Catch Block,FBReader.Render.Downloading,BookDownloader,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Downloading\BookDownloader.cs,DownloadBook,The method has an empty catch block.
Empty Catch Block,FBReader.Render.Downloading,BookDownloader,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Downloading\BookDownloader.cs,DeleteUnnecessaryInfo,The method has an empty catch block.
Magic Number,FBReader.Render.Downloading,BookDownloader,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Downloading\BookDownloader.cs,DownloadBook,The following statement contains a magic number: try {  	foreach (var model in _bookDownloadsRepository.GetItems ()) {  		_container.Enqueue (new DownloadItemDataModel (model));  	}  	for (; ;) {  		var timeOut = 100;  		if (_container.Count > 0) {  			var item = _container.Peek ();  			if (item != null) {  				timeOut = 1;  				HandleBookDownloading (item' _container);  			}  		}  		Thread.Sleep (timeOut);  		if (_shouldStop) {  			break;  		}  	}  }  catch (Exception) {  }  
Magic Number,FBReader.Render.Downloading,BookDownloader,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Downloading\BookDownloader.cs,DownloadBook,The following statement contains a magic number: for (; ;) {  	var timeOut = 100;  	if (_container.Count > 0) {  		var item = _container.Peek ();  		if (item != null) {  			timeOut = 1;  			HandleBookDownloading (item' _container);  		}  	}  	Thread.Sleep (timeOut);  	if (_shouldStop) {  		break;  	}  }  
Magic Number,FBReader.Render.Downloading.Loaders,SkyDriveFileLoader,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Downloading\Loaders\SkyDriveFileLoader.cs,LoadFileAsync,The following statement contains a magic number: try {  	LiveConnectClient skyDrive = await _liveLogin.Login ();  	if (skyDrive == null) {  		context.Error = new Exception ("Login Required");  		return;  	}  	LiveOperationResult fileData = await skyDrive.GetAsync (fileID);  	string path = FixSkyDriveUrl ((string)fileData.Result ["source"]);  	LiveDownloadOperationResult downloadResult = await skyDrive.DownloadAsync (path);  	var buffer = new byte[4096];  	var memoryStream = new MemoryStream ();  	StreamUtils.Copy (downloadResult.Stream' memoryStream' buffer);  	memoryStream.Position = 0L;  	context.Stream = memoryStream;  }  catch (WebException e) {  	if (e.Status == WebExceptionStatus.RequestCanceled) {  		context.Error = new RestartException (e.Message' e);  		return;  	}  	context.Error = e;  }  catch (TaskCanceledException e) {  	context.Error = new RestartException (e.Message' e);  }  catch (Exception e) {  	context.Error = e;  }  finally {  	context.WaitHandle.Set ();  }  
Magic Number,FBReader.Render.Tools,TokensTool,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Tools\TokensTool.cs,CreateChapter,The following statement contains a magic number: return new ChapterModel {  	BookID = bookId'  	Level = chapter.Level'  	Title = chapter.Title.Length > 1024 ? chapter.Title.Substring (0' 1024) : chapter.Title'  	TokenID = GetUIToken (chapter.TokenID' tokens)'  	MinTokenID = GetMinToken (chapter.TokenID' tokens)  };  
Magic Number,FBReader.Render.Tools,TokensTool,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Tools\TokensTool.cs,CreateChapter,The following statement contains a magic number: return new ChapterModel {  	BookID = bookId'  	Level = chapter.Level'  	Title = chapter.Title.Length > 1024 ? chapter.Title.Substring (0' 1024) : chapter.Title'  	TokenID = GetUIToken (chapter.TokenID' tokens)'  	MinTokenID = GetMinToken (chapter.TokenID' tokens)  };  
Magic Number,FBReader.Render.Tools,TokensTool,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Tools\TokensTool.cs,CreateAnchor,The following statement contains a magic number: if (key.Length > 1024) {  	key = key.Substring (0' 1024);  }  
Magic Number,FBReader.Render.Tools,TokensTool,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Tools\TokensTool.cs,CreateAnchor,The following statement contains a magic number: if (key.Length > 1024) {  	key = key.Substring (0' 1024);  }  
Magic Number,FBReader.Render.Tools,TokensTool,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Tools\TokensTool.cs,CreateAnchor,The following statement contains a magic number: key = key.Substring (0' 1024);  
Magic Number,FBReader.Render.Tools,TokensTool,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Tools\TokensTool.cs,SaveTokenPosition,The following statement contains a magic number: using (var file = FileStorage.Instance.GetFile (path)) {  	using (file.Lock ()) {  		var writer = file.Writer;  		writer.Write (positions.Count);  		if (positions.Count <= 0) {  			return;  		}  		var buffer = new byte[positions.Count * 4];  		Buffer.BlockCopy (positions.ToArray ()' 0' buffer' 0' buffer.Length);  		writer.Write (buffer);  	}  }  
Magic Number,FBReader.Render.Tools,TokensTool,C:\repos\geometer_FBReaderCS\src\FBReader.Render\Tools\TokensTool.cs,SaveTokenPosition,The following statement contains a magic number: using (file.Lock ()) {  	var writer = file.Writer;  	writer.Write (positions.Count);  	if (positions.Count <= 0) {  		return;  	}  	var buffer = new byte[positions.Count * 4];  	Buffer.BlockCopy (positions.ToArray ()' 0' buffer' 0' buffer.Length);  	writer.Write (buffer);  }  
Magic Number,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,AppendLine,The following statement contains a magic number: switch (align) {  case TextAlignment.Center:  	leftMargin = (width - inlinesWidth) / 2.0;  	break;  case TextAlignment.Right:  	leftMargin = width - inlinesWidth;  	break;  case TextAlignment.Justify:  	wordSpacing = (width - inlinesWidth) / (inlines.Count - 1);  	break;  }  
Magic Number,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,AppendLine,The following statement contains a magic number: leftMargin = (width - inlinesWidth) / 2.0;  
Magic Number,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,BuildInlineItem,The following statement contains a magic number: if (fontSize < 0.01 || !AppSettings.Default.UseCSSFontSize)  	fontSize = defaultFontSize;  
Magic Number,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,BuildInlineItem,The following statement contains a magic number: if (inlineItem.SubOption || inlineItem.SupOption)  	fontSize /= 2.0;  
Magic Number,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,BuildInlineItem,The following statement contains a magic number: fontSize /= 2.0;  
Magic Number,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,BuildInlineItem,The following statement contains a magic number: if (inlineItem.SubOption)  	topMargin += height / 2.0;  
Magic Number,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,BuildInlineItem,The following statement contains a magic number: topMargin += height / 2.0;  
Missing Default,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,AppendLine,The following switch statement is missing a default case: switch (align) {  case TextAlignment.Center:  	leftMargin = (width - inlinesWidth) / 2.0;  	break;  case TextAlignment.Right:  	leftMargin = width - inlinesWidth;  	break;  case TextAlignment.Justify:  	wordSpacing = (width - inlinesWidth) / (inlines.Count - 1);  	break;  }  
Missing Default,FBReader.Render.PageRender,ContextBuilder,C:\repos\geometer_FBReaderCS\src\FBReader.Render\PageRender\ContextBuilder.cs,GetTextAlignment,The following switch statement is missing a default case: switch (p.TextAlign) {  case "center":  	return TextAlignment.Center;  case "right":  	return TextAlignment.Right;  case "left":  	return TextAlignment.Left;  }  
